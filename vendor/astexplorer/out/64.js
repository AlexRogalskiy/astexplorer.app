(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{"./node_modules/@babel/runtime/helpers/construct.js":function(module,exports,__webpack_require__){eval('var setPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeReflectConstruct = __webpack_require__("./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/construct.js?')},"./node_modules/@babel/runtime/helpers/isNativeFunction.js":function(module,exports){eval('function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf("[native code]") !== -1;\n}\n\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/isNativeFunction.js?')},"./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":function(module,exports){eval('function _isNativeReflectConstruct() {\n  if (typeof Reflect === "undefined" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === "function") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js?')},"./node_modules/@babel/runtime/helpers/toArray.js":function(module,exports,__webpack_require__){eval('var arrayWithHoles = __webpack_require__("./node_modules/@babel/runtime/helpers/arrayWithHoles.js");\n\nvar iterableToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/iterableToArray.js");\n\nvar unsupportedIterableToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");\n\nvar nonIterableRest = __webpack_require__("./node_modules/@babel/runtime/helpers/nonIterableRest.js");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/toArray.js?')},"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":function(module,exports,__webpack_require__){eval('var getPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js");\n\nvar setPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeFunction = __webpack_require__("./node_modules/@babel/runtime/helpers/isNativeFunction.js");\n\nvar construct = __webpack_require__("./node_modules/@babel/runtime/helpers/construct.js");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === "function" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== "function") {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n\n    if (typeof _cache !== "undefined") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js?')},"./node_modules/prettier/parser-babel.js":function(module,exports,__webpack_require__){"use strict";eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _interopRequireDefault = __webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"));\n\nvar _get8 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _toConsumableArray2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js"));\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/typeof.js"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e97) { throw _e97; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e98) { didErr = true; err = _e98; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n!function (t, e) {\n  "object" == ( false ? undefined : (0, _typeof2.default)(exports)) && "undefined" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(void 0, function (t) {\n  "use strict";\n\n  var e = function e(t, _e) {\n    var s = new SyntaxError(t + " (" + _e.start.line + ":" + _e.start.column + ")");\n    return s.loc = _e, s;\n  };\n\n  function s(t) {\n    return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;\n  }\n\n  function i(t, e) {\n    return t(e = {\n      exports: {}\n    }, e.exports), e.exports;\n  }\n\n  var r = Object.freeze({\n    __proto__: null,\n    default: {\n      EOL: "\\n"\n    }\n  });\n\n  var a = function a(t) {\n    if ("string" != typeof t) throw new TypeError("Expected a string");\n    var e = t.match(/(?:\\r?\\n)/g) || [];\n    if (0 === e.length) return;\n    var s = e.filter(function (t) {\n      return "\\r\\n" === t;\n    }).length;\n    return s > e.length - s ? "\\r\\n" : "\\n";\n  };\n\n  var n = a;\n\n  n.graceful = function (t) {\n    return "string" == typeof t && a(t) || "\\n";\n  };\n\n  var o,\n      h = (o = r) && o.default || o,\n      p = i(function (t, e) {\n    function s() {\n      var t = h;\n      return s = function s() {\n        return t;\n      }, t;\n    }\n\n    function i() {\n      var t = (e = n) && e.__esModule ? e : {\n        default: e\n      };\n      var e;\n      return i = function i() {\n        return t;\n      }, t;\n    }\n\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    }), e.extract = function (t) {\n      var e = t.match(o);\n      return e ? e[0].trimLeft() : "";\n    }, e.strip = function (t) {\n      var e = t.match(o);\n      return e && e[0] ? t.substring(e[0].length) : t;\n    }, e.parse = function (t) {\n      return m(t).pragmas;\n    }, e.parseWithComments = m, e.print = function (_ref) {\n      var _ref$comments = _ref.comments,\n          t = _ref$comments === void 0 ? "" : _ref$comments,\n          _ref$pragmas = _ref.pragmas,\n          e = _ref$pragmas === void 0 ? {} : _ref$pragmas;\n      var r = (0, i().default)(t) || s().EOL,\n          a = Object.keys(e),\n          n = a.map(function (t) {\n        return f(t, e[t]);\n      }).reduce(function (t, e) {\n        return t.concat(e);\n      }, []).map(function (t) {\n        return " * " + t + r;\n      }).join("");\n\n      if (!t) {\n        if (0 === a.length) return "";\n\n        if (1 === a.length && !Array.isArray(e[a[0]])) {\n          var _t2 = e[a[0]];\n          return "".concat("/**", " ").concat(f(a[0], _t2)[0]).concat(" */");\n        }\n      }\n\n      var o = t.split(r).map(function (t) {\n        return "".concat(" *", " ").concat(t);\n      }).join(r) + r;\n      return "/**" + r + (t ? o : "") + (t && a.length ? " *" + r : "") + n + " */";\n    };\n    var r = /\\*\\/$/,\n        a = /^\\/\\*\\*/,\n        o = /^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)/,\n        p = /(^|\\s+)\\/\\/([^\\r\\n]*)/g,\n        c = /^(\\r?\\n)+/,\n        u = /(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *(?![^@\\r\\n]*\\/\\/[^]*)([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g,\n        l = /(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g,\n        d = /(\\r?\\n|^) *\\* ?/g;\n\n    function m(t) {\n      var e = (0, i().default)(t) || s().EOL;\n      t = t.replace(a, "").replace(r, "").replace(d, "$1");\n      var n = "";\n\n      for (; n !== t;) {\n        n = t, t = t.replace(u, "".concat(e, "$1 $2").concat(e));\n      }\n\n      t = t.replace(c, "").trimRight();\n      var o = Object.create(null),\n          h = t.replace(l, "").replace(c, "").trimRight();\n      var m;\n\n      for (; m = l.exec(t);) {\n        var _t3 = m[2].replace(p, "");\n\n        "string" == typeof o[m[1]] || Array.isArray(o[m[1]]) ? o[m[1]] = [].concat(o[m[1]], _t3) : o[m[1]] = _t3;\n      }\n\n      return {\n        comments: h,\n        pragmas: o\n      };\n    }\n\n    function f(t, e) {\n      return [].concat(e).map(function (e) {\n        return "@".concat(t, " ").concat(e).trim();\n      });\n    }\n  });\n  s(p);\n  p.extract, p.strip, p.parse, p.parseWithComments, p.print;\n\n  var c = {\n    hasPragma: function hasPragma(t) {\n      var e = Object.keys(p.parse(p.extract(t)));\n      return e.includes("prettier") || e.includes("format");\n    },\n    insertPragma: function insertPragma(t) {\n      var e = p.parseWithComments(p.extract(t)),\n          s = Object.assign({\n        format: ""\n      }, e.pragmas),\n          i = p.print({\n        pragmas: s,\n        comments: e.comments.replace(/^(\\s+?\\r?\\n)+/, "")\n      }).replace(/(\\r\\n|\\r)/g, "\\n"),\n          r = p.strip(t);\n      return i + (r.startsWith("\\n") ? "\\n" : "\\n\\n") + r;\n    }\n  },\n      u = function u(t) {\n    return t[t.length - 1];\n  };\n\n  function l(t, e) {\n    return !(e = e || {}).ignoreDecorators && t.declaration && t.declaration.decorators && t.declaration.decorators.length > 0 ? l(t.declaration.decorators[0]) : !e.ignoreDecorators && t.decorators && t.decorators.length > 0 ? l(t.decorators[0]) : t.__location ? t.__location.startOffset : t.range ? t.range[0] : "number" == typeof t.start ? t.start : t.loc ? t.loc.start : null;\n  }\n\n  function d(t) {\n    var e = t.nodes && u(t.nodes);\n    if (e && t.source && !t.source.end && (t = e), t.__location) return t.__location.endOffset;\n    var s = t.range ? t.range[1] : "number" == typeof t.end ? t.end : null;\n    return t.typeAnnotation ? Math.max(s, d(t.typeAnnotation)) : t.loc && !s ? t.loc.end : s;\n  }\n\n  var m = {\n    locStart: l,\n    locEnd: d,\n    composeLoc: function composeLoc(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : t;\n      var s = "number" == typeof e ? e : -1,\n          i = l(t),\n          r = -1 !== s ? i + s : d(e),\n          a = t.loc.start;\n      return {\n        start: i,\n        end: r,\n        range: [i, r],\n        loc: {\n          start: a,\n          end: -1 !== s ? {\n            line: a.line,\n            column: a.column + s\n          } : e.loc.end\n        }\n      };\n    }\n  },\n      f = function f(t) {\n    return "string" == typeof t ? t.replace(function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$onlyFirst = _ref2.onlyFirst,\n          t = _ref2$onlyFirst === void 0 ? !1 : _ref2$onlyFirst;\n\n      var e = ["[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)", "(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))"].join("|");\n      return new RegExp(e, t ? void 0 : "g");\n    }(), "") : t;\n  };\n\n  var D = function D(t) {\n    return !Number.isNaN(t) && t >= 4352 && (t <= 4447 || 9001 === t || 9002 === t || 11904 <= t && t <= 12871 && 12351 !== t || 12880 <= t && t <= 19903 || 19968 <= t && t <= 42182 || 43360 <= t && t <= 43388 || 44032 <= t && t <= 55203 || 63744 <= t && t <= 64255 || 65040 <= t && t <= 65049 || 65072 <= t && t <= 65131 || 65281 <= t && t <= 65376 || 65504 <= t && t <= 65510 || 110592 <= t && t <= 110593 || 127488 <= t && t <= 127569 || 131072 <= t && t <= 262141);\n  };\n\n  var y = D,\n      x = D;\n  y.default = x;\n\n  var g = function g(t) {\n    if ("string" != typeof (t = t.replace(/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g, "  ")) || 0 === t.length) return 0;\n    t = f(t);\n    var e = 0;\n\n    for (var _s = 0; _s < t.length; _s++) {\n      var _i = t.codePointAt(_s);\n\n      _i <= 31 || _i >= 127 && _i <= 159 || _i >= 768 && _i <= 879 || (_i > 65535 && _s++, e += y(_i) ? 2 : 1);\n    }\n\n    return e;\n  };\n\n  var P = g,\n      E = g;\n  P.default = E;\n  var C = /[|\\\\{}()[\\]^$+*?.-]/g;\n\n  var b = function b(t) {\n    if ("string" != typeof t) throw new TypeError("Expected a string");\n    return t.replace(C, "\\\\$&");\n  };\n\n  var T = /[^\\x20-\\x7F]/;\n\n  function A(t) {\n    return function (e, s, i) {\n      var r = i && i.backwards;\n      if (!1 === s) return !1;\n      var a = e.length;\n      var n = s;\n\n      for (; n >= 0 && n < a;) {\n        var _s2 = e.charAt(n);\n\n        if (t instanceof RegExp) {\n          if (!t.test(_s2)) return n;\n        } else if (!t.includes(_s2)) return n;\n\n        r ? n-- : n++;\n      }\n\n      return (-1 === n || n === a) && n;\n    };\n  }\n\n  var w = A(/\\s/),\n      S = A(" \\t"),\n      N = A(",; \\t"),\n      F = A(/[^\\r\\n]/);\n\n  function k(t, e) {\n    if (!1 === e) return !1;\n    if ("/" === t.charAt(e) && "*" === t.charAt(e + 1)) for (var _s3 = e + 2; _s3 < t.length; ++_s3) {\n      if ("*" === t.charAt(_s3) && "/" === t.charAt(_s3 + 1)) return _s3 + 2;\n    }\n    return e;\n  }\n\n  function I(t, e) {\n    return !1 !== e && ("/" === t.charAt(e) && "/" === t.charAt(e + 1) ? F(t, e) : e);\n  }\n\n  function v(t, e, s) {\n    var i = s && s.backwards;\n    if (!1 === e) return !1;\n    var r = t.charAt(e);\n\n    if (i) {\n      if ("\\r" === t.charAt(e - 1) && "\\n" === r) return e - 2;\n      if ("\\n" === r || "\\r" === r || "\\u2028" === r || "\\u2029" === r) return e - 1;\n    } else {\n      if ("\\r" === r && "\\n" === t.charAt(e + 1)) return e + 2;\n      if ("\\n" === r || "\\r" === r || "\\u2028" === r || "\\u2029" === r) return e + 1;\n    }\n\n    return e;\n  }\n\n  function L(t, e, s) {\n    var i = S(t, (s = s || {}).backwards ? e - 1 : e, s);\n    return i !== v(t, i, s);\n  }\n\n  function B(t, e) {\n    var s = null,\n        i = e;\n\n    for (; i !== s;) {\n      s = i, i = N(t, i), i = k(t, i), i = S(t, i);\n    }\n\n    return i = I(t, i), i = v(t, i), !1 !== i && L(t, i);\n  }\n\n  function M(t, e) {\n    var s = null,\n        i = e;\n\n    for (; i !== s;) {\n      s = i, i = S(t, i), i = k(t, i), i = I(t, i), i = v(t, i);\n    }\n\n    return i;\n  }\n\n  function O(t, e, s) {\n    return M(t, s(e));\n  }\n\n  var R = {};\n\n  function _(t) {\n    return R[t];\n  }\n\n  [["|>"], ["??"], ["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], ["<", ">", "<=", ">=", "in", "instanceof"], [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"], ["**"]].forEach(function (t, e) {\n    t.forEach(function (t) {\n      R[t] = e;\n    });\n  });\n  var j = {\n    "==": !0,\n    "!=": !0,\n    "===": !0,\n    "!==": !0\n  },\n      U = {\n    "*": !0,\n    "/": !0,\n    "%": !0\n  },\n      q = {\n    ">>": !0,\n    ">>>": !0,\n    "<<": !0\n  };\n\n  function V(t, e, s) {\n    var i = 0;\n\n    for (var _r = s = s || 0; _r < t.length; ++_r) {\n      "\\t" === t[_r] ? i = i + e - i % e : i++;\n    }\n\n    return i;\n  }\n\n  function z(t, e) {\n    var s = t.slice(1, -1),\n        i = {\n      quote: \'"\',\n      regex: /"/g\n    },\n        r = {\n      quote: "\'",\n      regex: /\'/g\n    },\n        a = "\'" === e ? r : i,\n        n = a === r ? i : r;\n    var o = a.quote;\n\n    if (s.includes(a.quote) || s.includes(n.quote)) {\n      o = (s.match(a.regex) || []).length > (s.match(n.regex) || []).length ? n.quote : a.quote;\n    }\n\n    return o;\n  }\n\n  function H(t, e, s) {\n    var i = \'"\' === e ? "\'" : \'"\',\n        r = t.replace(/\\\\([\\s\\S])|([\'"])/g, function (t, r, a) {\n      return r === i ? r : a === e ? "\\\\" + a : a || (s && /^[^\\\\nrvtbfux\\r\\n\\u2028\\u2029"\'0-7]$/.test(r) ? r : "\\\\" + r);\n    });\n    return e + r + e;\n  }\n\n  function W(t) {\n    return t && (t.comments && t.comments.length > 0 && t.comments.some(function (t) {\n      return K(t) && !t.unignore;\n    }) || t.prettierIgnore);\n  }\n\n  function K(t) {\n    return "prettier-ignore" === t.value.trim();\n  }\n\n  function J(t, e) {\n    (t.comments || (t.comments = [])).push(e), e.printed = !1, "JSXText" === t.type && (e.printed = !0);\n  }\n\n  var X = {\n    replaceEndOfLineWith: function replaceEndOfLineWith(t, e) {\n      var s = [];\n\n      var _iterator = _createForOfIteratorHelper(t.split("\\n")),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _i2 = _step.value;\n          0 !== s.length && s.push(e), s.push(_i2);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return s;\n    },\n    getStringWidth: function getStringWidth(t) {\n      return t ? T.test(t) ? P(t) : t.length : 0;\n    },\n    getMaxContinuousCount: function getMaxContinuousCount(t, e) {\n      var s = t.match(new RegExp("(".concat(b(e), ")+"), "g"));\n      return null === s ? 0 : s.reduce(function (t, s) {\n        return Math.max(t, s.length / e.length);\n      }, 0);\n    },\n    getMinNotPresentContinuousCount: function getMinNotPresentContinuousCount(t, e) {\n      var s = t.match(new RegExp("(".concat(b(e), ")+"), "g"));\n      if (null === s) return 0;\n      var i = new Map();\n      var r = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(s),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t5 = _step2.value;\n\n          var _s4 = _t5.length / e.length;\n\n          i.set(_s4, !0), _s4 > r && (r = _s4);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      for (var _t4 = 1; _t4 < r; _t4++) {\n        if (!i.get(_t4)) return _t4;\n      }\n\n      return r + 1;\n    },\n    getPrecedence: _,\n    shouldFlatten: function shouldFlatten(t, e) {\n      return _(e) === _(t) && "**" !== t && (!j[t] || !j[e]) && !("%" === e && U[t] || "%" === t && U[e]) && (e === t || !U[e] || !U[t]) && (!q[t] || !q[e]);\n    },\n    isBitwiseOperator: function isBitwiseOperator(t) {\n      return !!q[t] || "|" === t || "^" === t || "&" === t;\n    },\n    getPenultimate: function getPenultimate(t) {\n      return t.length > 1 ? t[t.length - 2] : null;\n    },\n    getLast: u,\n    getNextNonSpaceNonCommentCharacterIndexWithStartIndex: M,\n    getNextNonSpaceNonCommentCharacterIndex: O,\n    getNextNonSpaceNonCommentCharacter: function getNextNonSpaceNonCommentCharacter(t, e, s) {\n      return t.charAt(O(t, e, s));\n    },\n    skip: A,\n    skipWhitespace: w,\n    skipSpaces: S,\n    skipToLineEnd: N,\n    skipEverythingButNewLine: F,\n    skipInlineComment: k,\n    skipTrailingComment: I,\n    skipNewline: v,\n    isNextLineEmptyAfterIndex: B,\n    isNextLineEmpty: function isNextLineEmpty(t, e, s) {\n      return B(t, s(e));\n    },\n    isPreviousLineEmpty: function isPreviousLineEmpty(t, e, s) {\n      var i = s(e) - 1;\n      return i = S(t, i, {\n        backwards: !0\n      }), i = v(t, i, {\n        backwards: !0\n      }), i = S(t, i, {\n        backwards: !0\n      }), i !== v(t, i, {\n        backwards: !0\n      });\n    },\n    hasNewline: L,\n    hasNewlineInRange: function hasNewlineInRange(t, e, s) {\n      for (var _i3 = e; _i3 < s; ++_i3) {\n        if ("\\n" === t.charAt(_i3)) return !0;\n      }\n\n      return !1;\n    },\n    hasSpaces: function hasSpaces(t, e, s) {\n      return S(t, (s = s || {}).backwards ? e - 1 : e, s) !== e;\n    },\n    setLocStart: function setLocStart(t, e) {\n      t.range ? t.range[0] = e : t.start = e;\n    },\n    setLocEnd: function setLocEnd(t, e) {\n      t.range ? t.range[1] = e : t.end = e;\n    },\n    startsWithNoLookaheadToken: function t(e, s) {\n      switch ((e = function t(e) {\n        if (e.left) return t(e.left);\n        return e;\n      }(e)).type) {\n        case "FunctionExpression":\n        case "ClassExpression":\n        case "DoExpression":\n          return s;\n\n        case "ObjectExpression":\n          return !0;\n\n        case "MemberExpression":\n        case "OptionalMemberExpression":\n          return t(e.object, s);\n\n        case "TaggedTemplateExpression":\n          return "FunctionExpression" !== e.tag.type && t(e.tag, s);\n\n        case "CallExpression":\n        case "OptionalCallExpression":\n          return "FunctionExpression" !== e.callee.type && t(e.callee, s);\n\n        case "ConditionalExpression":\n          return t(e.test, s);\n\n        case "UpdateExpression":\n          return !e.prefix && t(e.argument, s);\n\n        case "BindExpression":\n          return e.object && t(e.object, s);\n\n        case "SequenceExpression":\n          return t(e.expressions[0], s);\n\n        case "TSAsExpression":\n          return t(e.expression, s);\n\n        default:\n          return !1;\n      }\n    },\n    getAlignmentSize: V,\n    getIndentSize: function getIndentSize(t, e) {\n      var s = t.lastIndexOf("\\n");\n      return -1 === s ? 0 : V(t.slice(s + 1).match(/^[ \\t]*/)[0], e);\n    },\n    getPreferredQuote: z,\n    printString: function printString(t, e, s) {\n      var i = t.slice(1, -1),\n          r = !i.includes(\'"\') && !i.includes("\'"),\n          a = "json" === e.parser ? \'"\' : e.__isInHtmlAttribute ? "\'" : z(t, e.singleQuote ? "\'" : \'"\');\n      return s ? r ? a + i + a : t : H(i, a, !("css" === e.parser || "less" === e.parser || "scss" === e.parser || e.embeddedInHtml));\n    },\n    printNumber: function printNumber(t) {\n      return t.toLowerCase().replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/, "$1$2$3").replace(/^([+-]?[\\d.]+)e[+-]?0+$/, "$1").replace(/^([+-])?\\./, "$10.").replace(/(\\.\\d+?)0+(?=e|$)/, "$1").replace(/\\.(?=e|$)/, "");\n    },\n    hasIgnoreComment: function hasIgnoreComment(t) {\n      return W(t.getValue());\n    },\n    hasNodeIgnoreComment: W,\n    isNodeIgnoreComment: K,\n    makeString: H,\n    addLeadingComment: function addLeadingComment(t, e) {\n      e.leading = !0, e.trailing = !1, J(t, e);\n    },\n    addDanglingComment: function addDanglingComment(t, e) {\n      e.leading = !1, e.trailing = !1, J(t, e);\n    },\n    addTrailingComment: function addTrailingComment(t, e) {\n      e.leading = !1, e.trailing = !0, J(t, e);\n    },\n    isWithinParentArrayProperty: function isWithinParentArrayProperty(t, e) {\n      var s = t.getValue(),\n          i = t.getParentNode();\n      if (null == i) return !1;\n      if (!Array.isArray(i[e])) return !1;\n      var r = t.getName();\n      return i[e][r] === s;\n    }\n  };\n  var G = X.getMaxContinuousCount,\n      Q = X.getStringWidth,\n      Y = X.getAlignmentSize,\n      $ = X.getIndentSize,\n      Z = X.skip,\n      tt = X.skipWhitespace,\n      et = X.skipSpaces,\n      st = X.skipNewline,\n      it = X.skipToLineEnd,\n      rt = X.skipEverythingButNewLine,\n      at = X.skipInlineComment,\n      nt = X.skipTrailingComment,\n      ot = X.hasNewline,\n      ht = X.hasNewlineInRange,\n      pt = X.hasSpaces,\n      ct = X.isNextLineEmpty,\n      ut = X.isNextLineEmptyAfterIndex,\n      lt = X.isPreviousLineEmpty,\n      dt = X.getNextNonSpaceNonCommentCharacterIndex,\n      mt = X.makeString,\n      ft = X.addLeadingComment,\n      Dt = X.addDanglingComment,\n      yt = X.addTrailingComment;\n  var xt = {\n    getMaxContinuousCount: G,\n    getStringWidth: Q,\n    getAlignmentSize: Y,\n    getIndentSize: $,\n    skip: Z,\n    skipWhitespace: tt,\n    skipSpaces: et,\n    skipNewline: st,\n    skipToLineEnd: it,\n    skipEverythingButNewLine: rt,\n    skipInlineComment: at,\n    skipTrailingComment: nt,\n    hasNewline: ot,\n    hasNewlineInRange: ht,\n    hasSpaces: pt,\n    isNextLineEmpty: ct,\n    isNextLineEmptyAfterIndex: ut,\n    isPreviousLineEmpty: lt,\n    getNextNonSpaceNonCommentCharacterIndex: dt,\n    makeString: mt,\n    addLeadingComment: ft,\n    addDanglingComment: Dt,\n    addTrailingComment: yt\n  };\n  var gt = xt.addLeadingComment,\n      Pt = xt.addTrailingComment,\n      Et = xt.addDanglingComment,\n      Ct = xt.getNextNonSpaceNonCommentCharacterIndex;\n\n  function bt(t, e) {\n    var s = t.body.filter(function (t) {\n      return "EmptyStatement" !== t.type;\n    });\n    0 === s.length ? Et(t, e) : gt(s[0], e);\n  }\n\n  function Tt(t, e) {\n    "BlockStatement" === t.type ? bt(t, e) : gt(t, e);\n  }\n\n  function At(t, e, s, i, r, a) {\n    if (!s || "IfStatement" !== s.type || !i) return !1;\n    return ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd) ? (Pt(e, r), !0) : e === s.consequent && i === s.alternate ? ("BlockStatement" === e.type ? Pt(e, r) : Et(s, r), !0) : "BlockStatement" === i.type ? (bt(i, r), !0) : "IfStatement" === i.type ? (Tt(i.consequent, r), !0) : s.consequent === i && (gt(i, r), !0);\n  }\n\n  function wt(t, e, s, i, r, a) {\n    if (!s || "WhileStatement" !== s.type || !i) return !1;\n    return ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd) ? (Pt(e, r), !0) : "BlockStatement" === i.type && (bt(i, r), !0);\n  }\n\n  function St(t, e, s, i) {\n    return !(!t || "TryStatement" !== t.type && "CatchClause" !== t.type || !s) && ("CatchClause" === t.type && e ? (Pt(e, i), !0) : "BlockStatement" === s.type ? (bt(s, i), !0) : "TryStatement" === s.type ? (Tt(s.finalizer, i), !0) : "CatchClause" === s.type && (Tt(s.body, i), !0));\n  }\n\n  function Nt(t, e, s, i) {\n    return !(!(t && ("ClassDeclaration" === t.type || "ClassExpression" === t.type) && t.decorators && t.decorators.length > 0) || s && "Decorator" === s.type) && (t.decorators && 0 !== t.decorators.length ? Pt(t.decorators[t.decorators.length - 1], i) : gt(t, i), !0);\n  }\n\n  function Ft(t, e, s, i, r) {\n    return e && s && ("Property" === e.type || "TSDeclareMethod" === e.type || "TSAbstractMethodDefinition" === e.type) && "Identifier" === s.type && e.key === s && ":" !== X.getNextNonSpaceNonCommentCharacter(t, s, r.locEnd) ? (Pt(s, i), !0) : !(!s || !e || "Decorator" !== s.type || "ClassMethod" !== e.type && "ClassProperty" !== e.type && "TSAbstractClassProperty" !== e.type && "TSAbstractMethodDefinition" !== e.type && "TSDeclareMethod" !== e.type && "MethodDefinition" !== e.type) && (Pt(s, i), !0);\n  }\n\n  function kt(t, e, s, i, r, a) {\n    if (e && "FunctionTypeParam" === e.type && s && "FunctionTypeAnnotation" === s.type && i && "FunctionTypeParam" !== i.type) return Pt(e, r), !0;\n    if (e && ("Identifier" === e.type || "AssignmentPattern" === e.type) && s && Mt(s) && ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd)) return Pt(e, r), !0;\n\n    if (s && "FunctionDeclaration" === s.type && i && "BlockStatement" === i.type) {\n      var _e2 = function () {\n        if (0 !== (s.params || s.parameters).length) return X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, a.locEnd(X.getLast(s.params || s.parameters)));\n        var e = X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, a.locEnd(s.id));\n        return X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, e + 1);\n      }();\n\n      if (a.locStart(r) > _e2) return bt(i, r), !0;\n    }\n\n    return !1;\n  }\n\n  function It(t, e) {\n    return !(!t || "ImportSpecifier" !== t.type) && (gt(t, e), !0);\n  }\n\n  function vt(t, e) {\n    return !(!t || "LabeledStatement" !== t.type) && (gt(t, e), !0);\n  }\n\n  function Lt(t, e, s, i) {\n    return e && e.body && 0 === e.body.length ? (i ? Et(e, s) : gt(e, s), !0) : !(!t || "Program" !== t.type || 0 !== t.body.length || !t.directives || 0 !== t.directives.length) && (i ? Et(t, s) : gt(t, s), !0);\n  }\n\n  function Bt(t) {\n    return "Block" === t.type || "CommentBlock" === t.type;\n  }\n\n  function Mt(t) {\n    return "ArrowFunctionExpression" === t.type || "FunctionExpression" === t.type || "FunctionDeclaration" === t.type || "ObjectMethod" === t.type || "ClassMethod" === t.type || "TSDeclareFunction" === t.type || "TSCallSignatureDeclaration" === t.type || "TSConstructSignatureDeclaration" === t.type || "TSConstructSignatureDeclaration" === t.type || "TSMethodSignature" === t.type || "TSConstructorType" === t.type || "TSFunctionType" === t.type || "TSDeclareMethod" === t.type;\n  }\n\n  function Ot(t) {\n    return Bt(t) && "*" === t.value[0] && /@type\\b/.test(t.value);\n  }\n\n  var Rt = {\n    handleOwnLineComment: function handleOwnLineComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return kt(e, a, n, o, t, s) || function (t, e, s) {\n        if (t && ("MemberExpression" === t.type || "OptionalMemberExpression" === t.type) && e && "Identifier" === e.type) return gt(t, s), !0;\n        return !1;\n      }(n, o, t) || At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || St(n, a, o, t) || Nt(n, a, o, t) || It(n, t) || function (t, e, s) {\n        if (t && ("ForInStatement" === t.type || "ForOfStatement" === t.type)) return gt(t, s), !0;\n        return !1;\n      }(n, 0, t) || function (t, e, s, i) {\n        if (e && ("UnionTypeAnnotation" === e.type || "TSUnionType" === e.type)) return X.isNodeIgnoreComment(i) && (s.prettierIgnore = !0, i.unignore = !0), !!t && (Pt(t, i), !0);\n        s && ("UnionTypeAnnotation" === s.type || "TSUnionType" === s.type) && X.isNodeIgnoreComment(i) && (s.types[0].prettierIgnore = !0, i.unignore = !0);\n        return !1;\n      }(a, n, o, t) || Lt(n, i, t, r) || function (t, e, s, i, r) {\n        if (s && "ImportSpecifier" === s.type && e && "ImportDeclaration" === e.type && X.hasNewline(t, r.locEnd(i))) return Pt(s, i), !0;\n        return !1;\n      }(e, n, a, t, s) || function (t, e) {\n        if (t && "AssignmentPattern" === t.type) return gt(t, e), !0;\n        return !1;\n      }(n, t) || Ft(e, n, a, t, s) || vt(n, t);\n    },\n    handleEndOfLineComment: function handleEndOfLineComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return function (t, e) {\n        if (t && Ot(e)) return gt(t, e), !0;\n        return !1;\n      }(o, t) || kt(e, a, n, o, t, s) || function (t, e, s, i, r, a) {\n        var n = e && !X.hasNewlineInRange(r, a.locEnd(e), a.locStart(i));\n        if ((!e || !n) && t && "ConditionalExpression" === t.type && s) return gt(s, i), !0;\n        return !1;\n      }(n, a, o, t, e, s) || It(n, t) || At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || St(n, a, o, t) || Nt(n, a, o, t) || vt(n, t) || function (t, e, s) {\n        if (e && ("CallExpression" === e.type || "OptionalCallExpression" === e.type) && t && e.callee === t && e.arguments.length > 0) return gt(e.arguments[0], s), !0;\n        return !1;\n      }(a, n, t) || function (t, e) {\n        if (t && ("Property" === t.type || "ObjectProperty" === t.type)) return gt(t, e), !0;\n        return !1;\n      }(n, t) || Lt(n, i, t, r) || function (t, e, s) {\n        if (t && "TypeAlias" === t.type) return gt(t, s), !0;\n        return !1;\n      }(n, 0, t) || function (t, e, s) {\n        if (t && ("VariableDeclarator" === t.type || "AssignmentExpression" === t.type) && e && ("ObjectExpression" === e.type || "ArrayExpression" === e.type || "TemplateLiteral" === e.type || "TaggedTemplateExpression" === e.type || Bt(s))) return gt(e, s), !0;\n        return !1;\n      }(n, o, t);\n    },\n    handleRemainingComment: function handleRemainingComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return !!(At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || function (t, e, s) {\n        if (t && ("ObjectProperty" === t.type || "Property" === t.type) && t.shorthand && t.key === e && "AssignmentPattern" === t.value.type) return Pt(t.value.left, s), !0;\n        return !1;\n      }(n, a, t) || function (t, e, s, i) {\n        if (")" !== X.getNextNonSpaceNonCommentCharacter(t, s, i.locEnd)) return !1;\n        if (e && (Mt(e) && 0 === (e.params || e.parameters).length || ("CallExpression" === e.type || "OptionalCallExpression" === e.type || "NewExpression" === e.type) && 0 === e.arguments.length)) return Et(e, s), !0;\n        if (e && "MethodDefinition" === e.type && 0 === e.value.params.length) return Et(e.value, s), !0;\n        return !1;\n      }(e, n, t, s) || Ft(e, n, a, t, s) || Lt(n, i, t, r) || function (t, e, s, i) {\n        if (!e || "ArrowFunctionExpression" !== e.type) return !1;\n        var r = Ct(t, s, i.locEnd);\n        if ("=>" === t.slice(r, r + 2)) return Et(e, s), !0;\n        return !1;\n      }(e, n, t, s) || function (t, e, s, i, r) {\n        if ("(" !== X.getNextNonSpaceNonCommentCharacter(t, i, r.locEnd)) return !1;\n        if (s && e && ("FunctionDeclaration" === e.type || "FunctionExpression" === e.type || "ClassMethod" === e.type || "MethodDefinition" === e.type || "ObjectMethod" === e.type)) return Pt(s, i), !0;\n        return !1;\n      }(e, n, a, t, s) || function (t, e, s, i, r) {\n        if (!e || "TSMappedType" !== e.type) return !1;\n        if (i && "TSTypeParameter" === i.type && i.name) return gt(i.name, r), !0;\n        if (s && "TSTypeParameter" === s.type && s.constraint) return Pt(s.constraint, r), !0;\n        return !1;\n      }(0, n, a, o, t) || function (t, e) {\n        if (t && ("ContinueStatement" === t.type || "BreakStatement" === t.type) && !t.label) return Pt(t, e), !0;\n        return !1;\n      }(n, t) || function (t, e, s, i, r) {\n        if (!s && e && ("TSMethodSignature" === e.type || "TSDeclareFunction" === e.type || "TSAbstractMethodDefinition" === e.type) && ";" === X.getNextNonSpaceNonCommentCharacter(t, i, r.locEnd)) return Pt(e, i), !0;\n        return !1;\n      }(e, n, o, t, s));\n    },\n    hasLeadingComment: function hasLeadingComment(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return !0;\n      };\n      return t.leadingComments ? t.leadingComments.some(e) : !!t.comments && t.comments.some(function (t) {\n        return t.leading && e(t);\n      });\n    },\n    isBlockComment: Bt,\n    isTypeCastComment: Ot,\n    getGapRegex: function getGapRegex(t) {\n      if (t && "BinaryExpression" !== t.type && "LogicalExpression" !== t.type) return /^[\\s(&|]*$/;\n    },\n    getCommentChildNodes: function getCommentChildNodes(t, e) {\n      if (("typescript" === e.parser || "flow" === e.parser) && "MethodDefinition" === t.type && t.value && "FunctionExpression" === t.value.type && 0 === t.value.params.length && !t.value.returnType && (!t.value.typeParameters || 0 === t.value.typeParameters.length) && t.value.body) return [].concat((0, _toConsumableArray2.default)(t.decorators || []), [t.key, t.value.body]);\n    }\n  };\n  var _t = X.getLast,\n      jt = X.getNextNonSpaceNonCommentCharacter,\n      Ut = m.composeLoc,\n      qt = m.locEnd,\n      Vt = Rt.isTypeCastComment;\n\n  function zt(t, e, s, i) {\n    if (!t || "object" != (0, _typeof2.default)(t)) return;\n\n    if (Array.isArray(t)) {\n      for (var _s5 = 0; _s5 < t.length; _s5++) {\n        zt(t[_s5], e, t, _s5);\n      }\n\n      return;\n    }\n\n    if ("string" != typeof t.type) return;\n\n    for (var _i4 = 0, _Object$keys = Object.keys(t); _i4 < _Object$keys.length; _i4++) {\n      var _s6 = _Object$keys[_i4];\n      zt(t[_s6], e, t, _s6);\n    }\n\n    var r = e(t);\n    r && (s[i] = r);\n  }\n\n  function Ht(t) {\n    return "LogicalExpression" === t.type && "LogicalExpression" === t.right.type && t.operator === t.right.operator;\n  }\n\n  var Wt = function Wt(t, e) {\n    if ("typescript" !== e.parser && "flow" !== e.parser) {\n      var _e3 = new Set();\n\n      zt(t, function (t) {\n        t.leadingComments && t.leadingComments.some(Vt) && _e3.add(t.start);\n      }), zt(t, function (t) {\n        if ("ParenthesizedExpression" === t.type && !_e3.has(t.start)) {\n          var _e4 = t.expression;\n          return _e4.extra || (_e4.extra = {}), _e4.extra.parenthesized = !0, _e4.extra.parenStart = t.start, _e4;\n        }\n      });\n    }\n\n    return zt(t, function (t) {\n      switch (t.type) {\n        case "LogicalExpression":\n          if (Ht(t)) return function t(e) {\n            if (!Ht(e)) return e;\n            return t(Object.assign({\n              type: "LogicalExpression",\n              operator: e.operator,\n              left: t(Object.assign({\n                type: "LogicalExpression",\n                operator: e.operator,\n                left: e.left,\n                right: e.right.left\n              }, Ut(e.left, e.right.left))),\n              right: e.right.right\n            }, Ut(e)));\n          }(t);\n          break;\n\n        case "VariableDeclaration":\n          {\n            var _s7 = _t(t.declarations);\n\n            _s7 && _s7.init && function (t, s) {\n              if (";" === e.originalText[qt(s)]) return;\n              Array.isArray(t.range) ? t.range = [t.range[0], s.range[1]] : t.end = s.end;\n              t.loc = Object.assign({}, t.loc, {\n                end: t.loc.end\n              });\n            }(t, _s7);\n            break;\n          }\n\n        case "TSParenthesizedType":\n          return Object.assign({}, t.typeAnnotation, {}, Ut(t));\n\n        case "TSUnionType":\n        case "TSIntersectionType":\n          if (1 === t.types.length) return Object.assign({}, t.types[0], {}, Ut(t));\n          break;\n\n        case "TSTypeParameter":\n          "string" == typeof t.name && (t.name = Object.assign({\n            type: "Identifier",\n            name: t.name\n          }, Ut(t, t.name.length)));\n          break;\n\n        case "SequenceExpression":\n          t.end && t.end > _t(t.expressions).end && (t.end = _t(t.expressions).end);\n          break;\n\n        case "ClassProperty":\n          t.key && "TSPrivateIdentifier" === t.key.type && "?" === jt(e.originalText, t.key, qt) && (t.optional = !0);\n      }\n    }), t;\n  },\n      Kt = i(function (t, e) {\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    });\n    var s = /*#__PURE__*/(0, _createClass2.default)(function s(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      (0, _classCallCheck2.default)(this, s);\n      this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.rightAssociative = !!e.rightAssociative, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = null != e.binop ? e.binop : null, this.updateContext = null;\n    });\n    var i = new Map();\n\n    function r(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      e.keyword = t;\n      var r = new s(t, e);\n      return i.set(t, r), r;\n    }\n\n    function a(t, e) {\n      return new s(t, {\n        beforeExpr: !0,\n        binop: e\n      });\n    }\n\n    var n = {\n      num: new s("num", {\n        startsExpr: !0\n      }),\n      bigint: new s("bigint", {\n        startsExpr: !0\n      }),\n      regexp: new s("regexp", {\n        startsExpr: !0\n      }),\n      string: new s("string", {\n        startsExpr: !0\n      }),\n      name: new s("name", {\n        startsExpr: !0\n      }),\n      eof: new s("eof"),\n      bracketL: new s("[", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketHashL: new s("#[", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketBarL: new s("[|", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketR: new s("]"),\n      bracketBarR: new s("|]"),\n      braceL: new s("{", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceBarL: new s("{|", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceHashL: new s("#{", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceR: new s("}"),\n      braceBarR: new s("|}"),\n      parenL: new s("(", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      parenR: new s(")"),\n      comma: new s(",", {\n        beforeExpr: !0\n      }),\n      semi: new s(";", {\n        beforeExpr: !0\n      }),\n      colon: new s(":", {\n        beforeExpr: !0\n      }),\n      doubleColon: new s("::", {\n        beforeExpr: !0\n      }),\n      dot: new s("."),\n      question: new s("?", {\n        beforeExpr: !0\n      }),\n      questionDot: new s("?."),\n      arrow: new s("=>", {\n        beforeExpr: !0\n      }),\n      template: new s("template"),\n      ellipsis: new s("...", {\n        beforeExpr: !0\n      }),\n      backQuote: new s("`", {\n        startsExpr: !0\n      }),\n      dollarBraceL: new s("${", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      at: new s("@"),\n      hash: new s("#", {\n        startsExpr: !0\n      }),\n      interpreterDirective: new s("#!..."),\n      eq: new s("=", {\n        beforeExpr: !0,\n        isAssign: !0\n      }),\n      assign: new s("_=", {\n        beforeExpr: !0,\n        isAssign: !0\n      }),\n      incDec: new s("++/--", {\n        prefix: !0,\n        postfix: !0,\n        startsExpr: !0\n      }),\n      bang: new s("!", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      tilde: new s("~", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      pipeline: a("|>", 0),\n      nullishCoalescing: a("??", 1),\n      logicalOR: a("||", 1),\n      logicalAND: a("&&", 2),\n      bitwiseOR: a("|", 3),\n      bitwiseXOR: a("^", 4),\n      bitwiseAND: a("&", 5),\n      equality: a("==/!=/===/!==", 6),\n      relational: a("</>/<=/>=", 7),\n      bitShift: a("<</>>/>>>", 8),\n      plusMin: new s("+/-", {\n        beforeExpr: !0,\n        binop: 9,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      modulo: new s("%", {\n        beforeExpr: !0,\n        binop: 10,\n        startsExpr: !0\n      }),\n      star: a("*", 10),\n      slash: a("/", 10),\n      exponent: new s("**", {\n        beforeExpr: !0,\n        binop: 11,\n        rightAssociative: !0\n      }),\n      _break: r("break"),\n      _case: r("case", {\n        beforeExpr: !0\n      }),\n      _catch: r("catch"),\n      _continue: r("continue"),\n      _debugger: r("debugger"),\n      _default: r("default", {\n        beforeExpr: !0\n      }),\n      _do: r("do", {\n        isLoop: !0,\n        beforeExpr: !0\n      }),\n      _else: r("else", {\n        beforeExpr: !0\n      }),\n      _finally: r("finally"),\n      _for: r("for", {\n        isLoop: !0\n      }),\n      _function: r("function", {\n        startsExpr: !0\n      }),\n      _if: r("if"),\n      _return: r("return", {\n        beforeExpr: !0\n      }),\n      _switch: r("switch"),\n      _throw: r("throw", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _try: r("try"),\n      _var: r("var"),\n      _const: r("const"),\n      _while: r("while", {\n        isLoop: !0\n      }),\n      _with: r("with"),\n      _new: r("new", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      _this: r("this", {\n        startsExpr: !0\n      }),\n      _super: r("super", {\n        startsExpr: !0\n      }),\n      _class: r("class", {\n        startsExpr: !0\n      }),\n      _extends: r("extends", {\n        beforeExpr: !0\n      }),\n      _export: r("export"),\n      _import: r("import", {\n        startsExpr: !0\n      }),\n      _null: r("null", {\n        startsExpr: !0\n      }),\n      _true: r("true", {\n        startsExpr: !0\n      }),\n      _false: r("false", {\n        startsExpr: !0\n      }),\n      _in: r("in", {\n        beforeExpr: !0,\n        binop: 7\n      }),\n      _instanceof: r("instanceof", {\n        beforeExpr: !0,\n        binop: 7\n      }),\n      _typeof: r("typeof", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _void: r("void", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _delete: r("delete", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      })\n    },\n        o = /\\r\\n?|[\\n\\u2028\\u2029]/,\n        h = new RegExp(o.source, "g");\n\n    function p(t) {\n      switch (t) {\n        case 10:\n        case 13:\n        case 8232:\n        case 8233:\n          return !0;\n\n        default:\n          return !1;\n      }\n    }\n\n    var c = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n    function u(t) {\n      switch (t) {\n        case 9:\n        case 11:\n        case 12:\n        case 32:\n        case 160:\n        case 5760:\n        case 8192:\n        case 8193:\n        case 8194:\n        case 8195:\n        case 8196:\n        case 8197:\n        case 8198:\n        case 8199:\n        case 8200:\n        case 8201:\n        case 8202:\n        case 8239:\n        case 8287:\n        case 12288:\n        case 65279:\n          return !0;\n\n        default:\n          return !1;\n      }\n    }\n\n    var l = /*#__PURE__*/(0, _createClass2.default)(function l(t, e) {\n      (0, _classCallCheck2.default)(this, l);\n      this.line = t, this.column = e;\n    });\n    var d = /*#__PURE__*/(0, _createClass2.default)(function d(t, e) {\n      (0, _classCallCheck2.default)(this, d);\n      this.start = t, this.end = e;\n    });\n\n    function m(t) {\n      return t[t.length - 1];\n    }\n\n    var f = Object.freeze({\n      ArgumentsDisallowedInInitializer: "\'arguments\' is not allowed in class field initializer",\n      AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block",\n      AwaitBindingIdentifier: "Can not use \'await\' as identifier inside an async function",\n      AwaitExpressionFormalParameter: "await is not allowed in async function parameters",\n      AwaitNotInAsyncFunction: "Can not use keyword \'await\' outside an async function",\n      BadGetterArity: "getter must not have any formal parameters",\n      BadSetterArity: "setter must have exactly one formal parameter",\n      BadSetterRestParameter: "setter function argument must not be a rest parameter",\n      ConstructorClassField: "Classes may not have a field named \'constructor\'",\n      ConstructorClassPrivateField: "Classes may not have a private field named \'#constructor\'",\n      ConstructorIsAccessor: "Class constructor may not be an accessor",\n      ConstructorIsAsync: "Constructor can\'t be an async function",\n      ConstructorIsGenerator: "Constructor can\'t be a generator",\n      DeclarationMissingInitializer: "%0 require an initialization value",\n      DecoratorBeforeExport: "Decorators must be placed *before* the \'export\' keyword. You can set the \'decoratorsBeforeExport\' option to false to use the \'export @decorator class {}\' syntax",\n      DecoratorConstructor: "Decorators can\'t be used with a constructor. Did you mean \'@dec class { ... }\'?",\n      DecoratorExportClass: "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.",\n      DecoratorSemicolon: "Decorators must not be followed by a semicolon",\n      DeletePrivateField: "Deleting a private field is not allowed",\n      DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",\n      DuplicateConstructor: "Duplicate constructor in the same class",\n      DuplicateDefaultExport: "Only one default export allowed per module.",\n      DuplicateExport: "`%0` has already been exported. Exported identifiers must be unique.",\n      DuplicateProto: "Redefinition of __proto__ property",\n      DuplicateRegExpFlags: "Duplicate regular expression flag",\n      ElementAfterRest: "Rest element must be last element",\n      EscapedCharNotAnIdentifier: "Invalid Unicode escape",\n      ForInOfLoopInitializer: "%0 loop variable declaration may not have an initializer",\n      GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block",\n      IllegalBreakContinue: "Unsyntactic %0",\n      IllegalLanguageModeDirective: "Illegal \'use strict\' directive in function with non-simple parameter list",\n      IllegalReturn: "\'return\' outside of function",\n      ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments",\n      ImportCallArity: "import() requires exactly one argument",\n      ImportCallArityLtOne: "Dynamic imports require a parameter: import(\'a.js\')",\n      ImportCallNotNewExpression: "Cannot use new with import(...)",\n      ImportCallSpreadArgument: "... is not allowed in import()",\n      ImportMetaOutsideModule: "import.meta may appear only with \'sourceType: \\"module\\"\'",\n      ImportOutsideModule: "\'import\' and \'export\' may appear only with \'sourceType: \\"module\\"\'",\n      InvalidCodePoint: "Code point out of bounds",\n      InvalidDigit: "Expected number in radix %0",\n      InvalidEscapeSequence: "Bad character escape sequence",\n      InvalidEscapeSequenceTemplate: "Invalid escape sequence in template",\n      InvalidEscapedReservedWord: "Escape sequence in keyword %0",\n      InvalidIdentifier: "Invalid identifier %0",\n      InvalidLhs: "Invalid left-hand side in %0",\n      InvalidLhsBinding: "Binding invalid left-hand side in %0",\n      InvalidNumber: "Invalid number",\n      InvalidOrUnexpectedToken: "Unexpected character \'%0\'",\n      InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern",\n      InvalidPrivateFieldResolution: "Private name #%0 is not defined",\n      InvalidPropertyBindingPattern: "Binding member expression",\n      InvalidRestAssignmentPattern: "Invalid rest operator\'s argument",\n      LabelRedeclaration: "Label \'%0\' is already declared",\n      LetInLexicalBinding: "\'let\' is not allowed to be used as a name in \'let\' or \'const\' declarations.",\n      MalformedRegExpFlags: "Invalid regular expression flag",\n      MissingClassName: "A class name is required",\n      MissingEqInAssignment: "Only \'=\' operator can be used for specifying default value.",\n      MissingUnicodeEscape: "Expecting Unicode escape sequence \\\\uXXXX",\n      MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators",\n      ModuleExportUndefined: "Export \'%0\' is not defined",\n      MultipleDefaultsInSwitch: "Multiple default clauses",\n      NewlineAfterThrow: "Illegal newline after throw",\n      NoCatchOrFinally: "Missing catch or finally clause",\n      NumberIdentifier: "Identifier directly after number",\n      NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences",\n      ObsoleteAwaitStar: "await* has been removed from the async functions proposal. Use Promise.all() instead.",\n      OptionalChainingNoNew: "constructors in/after an Optional Chain are not allowed",\n      OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain",\n      ParamDupe: "Argument name clash",\n      PatternHasAccessor: "Object pattern can\'t contain getter or setter",\n      PatternHasMethod: "Object pattern can\'t contain methods",\n      PipelineBodyNoArrow: \'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized\',\n      PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression",\n      PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression",\n      PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference",\n      PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding",\n      PrimaryTopicRequiresSmartPipeline: "Primary Topic Reference found but pipelineOperator not passed \'smart\' for \'proposal\' option.",\n      PrivateNameRedeclaration: "Duplicate private name #%0",\n      RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with \'|}\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with \'{|\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with \'#{\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'hash\'",\n      RestTrailingComma: "Unexpected trailing comma after rest element",\n      SloppyFunction: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement",\n      StaticPrototype: "Classes may not have static property named prototype",\n      StrictDelete: "Deleting local variable in strict mode",\n      StrictEvalArguments: "Assigning to \'%0\' in strict mode",\n      StrictEvalArgumentsBinding: "Binding \'%0\' in strict mode",\n      StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block",\n      StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode",\n      StrictWith: "\'with\' in strict mode",\n      SuperNotAllowed: "super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name (\'constructor\') or not extending another class?",\n      SuperPrivateField: "Private fields can\'t be accessed on super",\n      TrailingDecorator: "Decorators must be attached to a class element",\n      TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with \'|]\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with \'[|\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with \'#[\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'hash\'",\n      UnexpectedArgumentPlaceholder: "Unexpected argument placeholder",\n      UnexpectedAwaitAfterPipelineBody: \'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal\',\n      UnexpectedDigitAfterHash: "Unexpected digit after hash token",\n      UnexpectedImportExport: "\'import\' and \'export\' may only appear at the top level",\n      UnexpectedKeyword: "Unexpected keyword \'%0\'",\n      UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration",\n      UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context",\n      UnexpectedNewTarget: "new.target can only be used in functions",\n      UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits",\n      UnexpectedPrivateField: "Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).",\n      UnexpectedReservedWord: "Unexpected reserved word \'%0\'",\n      UnexpectedSuper: "super is only allowed in object methods and classes",\n      UnexpectedToken: "Unexpected token \'%\'",\n      UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",\n      UnsupportedBind: "Binding should be performed on object property.",\n      UnsupportedDecoratorExport: "A decorated export must export a class declaration",\n      UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",\n      UnsupportedImport: "import can only be used in import() or import.meta",\n      UnsupportedMetaProperty: "The only valid meta property for %0 is %0.%1",\n      UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters",\n      UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties",\n      UnsupportedSuper: "super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])",\n      UnterminatedComment: "Unterminated comment",\n      UnterminatedRegExp: "Unterminated regular expression",\n      UnterminatedString: "Unterminated string constant",\n      UnterminatedTemplate: "Unterminated template",\n      VarRedeclaration: "Identifier \'%0\' has already been declared",\n      YieldBindingIdentifier: "Can not use \'yield\' as identifier inside a generator",\n      YieldInParameter: "yield is not allowed in generator parameters",\n      ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0"\n    });\n\n    function D(t) {\n      return null != t && "Property" === t.type && "init" === t.kind && !1 === t.method;\n    }\n\n    var y = /*#__PURE__*/(0, _createClass2.default)(function y(t, e, s, i) {\n      (0, _classCallCheck2.default)(this, y);\n      this.token = t, this.isExpr = !!e, this.preserveSpace = !!s, this.override = i;\n    });\n    var x = {\n      braceStatement: new y("{", !1),\n      braceExpression: new y("{", !0),\n      templateQuasi: new y("${", !1),\n      parenStatement: new y("(", !1),\n      parenExpression: new y("(", !0),\n      template: new y("`", !0, !0, function (t) {\n        return t.readTmplToken();\n      }),\n      functionExpression: new y("function", !0),\n      functionStatement: new y("function", !1)\n    };\n    n.parenR.updateContext = n.braceR.updateContext = function () {\n      if (1 === this.state.context.length) return void (this.state.exprAllowed = !0);\n      var t = this.state.context.pop();\n      t === x.braceStatement && "function" === this.curContext().token && (t = this.state.context.pop()), this.state.exprAllowed = !t.isExpr;\n    }, n.name.updateContext = function (t) {\n      var e = !1;\n      t !== n.dot && ("of" === this.state.value && !this.state.exprAllowed || "yield" === this.state.value && this.prodParam.hasYield) && (e = !0), this.state.exprAllowed = e, this.state.isIterator && (this.state.isIterator = !1);\n    }, n.braceL.updateContext = function (t) {\n      this.state.context.push(this.braceIsBlock(t) ? x.braceStatement : x.braceExpression), this.state.exprAllowed = !0;\n    }, n.dollarBraceL.updateContext = function () {\n      this.state.context.push(x.templateQuasi), this.state.exprAllowed = !0;\n    }, n.parenL.updateContext = function (t) {\n      var e = t === n._if || t === n._for || t === n._with || t === n._while;\n      this.state.context.push(e ? x.parenStatement : x.parenExpression), this.state.exprAllowed = !0;\n    }, n.incDec.updateContext = function () {}, n._function.updateContext = n._class.updateContext = function (t) {\n      !t.beforeExpr || t === n.semi || t === n._else || t === n._return && o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) || (t === n.colon || t === n.braceL) && this.curContext() === x.b_stat ? this.state.context.push(x.functionStatement) : this.state.context.push(x.functionExpression), this.state.exprAllowed = !1;\n    }, n.backQuote.updateContext = function () {\n      this.curContext() === x.template ? this.state.context.pop() : this.state.context.push(x.template), this.state.exprAllowed = !1;\n    };\n    var g = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",\n        P = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";\n    var E = new RegExp("[" + g + "]"),\n        C = new RegExp("[" + g + P + "]");\n    g = P = null;\n    var b = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938],\n        T = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n    function A(t, e) {\n      var s = 65536;\n\n      for (var _i5 = 0, _r2 = e.length; _i5 < _r2; _i5 += 2) {\n        if (s += e[_i5], s > t) return !1;\n        if (s += e[_i5 + 1], s >= t) return !0;\n      }\n\n      return !1;\n    }\n\n    function w(t) {\n      return t < 65 ? 36 === t : t <= 90 || (t < 97 ? 95 === t : t <= 122 || (t <= 65535 ? t >= 170 && E.test(String.fromCharCode(t)) : A(t, b)));\n    }\n\n    function S(t) {\n      return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t <= 90 || (t < 97 ? 95 === t : t <= 122 || (t <= 65535 ? t >= 170 && C.test(String.fromCharCode(t)) : A(t, b) || A(t, T))));\n    }\n\n    var N = ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],\n        F = ["eval", "arguments"],\n        k = new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"]),\n        I = new Set(N),\n        v = new Set(F);\n\n    function L(t, e) {\n      return e && "await" === t || "enum" === t;\n    }\n\n    function B(t, e) {\n      return L(t, e) || I.has(t);\n    }\n\n    function M(t) {\n      return v.has(t);\n    }\n\n    function O(t, e) {\n      return B(t, e) || M(t);\n    }\n\n    var R = /^in(stanceof)?$/;\n\n    var _ = new Set(["_", "any", "bool", "boolean", "empty", "extends", "false", "interface", "mixed", "null", "number", "static", "string", "true", "typeof", "void"]),\n        j = Object.freeze({\n      AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",\n      AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module",\n      AssignReservedType: "Cannot overwrite reserved type %0",\n      DeclareClassElement: "The `declare` modifier can only appear on class fields.",\n      DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",\n      DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement",\n      EnumBooleanMemberNotInitialized: "Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.",\n      EnumDuplicateMemberName: "Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.",\n      EnumInconsistentMemberValues: "Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.",\n      EnumInvalidExplicitType: "Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",\n      EnumInvalidExplicitTypeUnknownSupplied: "Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",\n      EnumInvalidMemberInitializerPrimaryType: "Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.",\n      EnumInvalidMemberInitializerSymbolType: "Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.",\n      EnumInvalidMemberInitializerUnknownType: "The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.",\n      EnumInvalidMemberName: "Enum member names cannot start with lowercase \'a\' through \'z\'. Instead of using `%0`, consider using `%1`, in enum `%2`.",\n      EnumNumberMemberNotInitialized: "Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.",\n      EnumStringMemberInconsistentlyInitailized: "String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.",\n      ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements",\n      InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type",\n      InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions",\n      InexactVariance: "Explicit inexact syntax cannot have variance",\n      InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`",\n      MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",\n      NestedDeclareModule: "`declare module` cannot be used inside another `declare module`",\n      NestedFlowComment: "Cannot have a flow comment inside another flow comment",\n      OptionalBindingPattern: "A binding pattern parameter cannot be optional in an implementation signature.",\n      SpreadVariance: "Spread properties cannot have variance",\n      TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",\n      TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis",\n      UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object",\n      UnexpectedReservedType: "Unexpected reserved type %0",\n      UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new",\n      UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",\n      UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions",\n      UnexpectedSubtractionOperand: \'Unexpected token, expected "number" or "bigint"\',\n      UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration",\n      UnsupportedDeclareExportKind: "`declare export %0` is not supported. Use `%1` instead",\n      UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module",\n      UnterminatedFlowComment: "Unterminated flow-comment"\n    });\n\n    function U(t) {\n      return "type" === t.importKind || "typeof" === t.importKind;\n    }\n\n    function q(t) {\n      return (t.type === n.name || !!t.type.keyword) && "from" !== t.value;\n    }\n\n    var V = {\n      const: "declare export var",\n      let: "declare export var",\n      type: "export type",\n      interface: "export interface"\n    };\n    var z = /\\*?\\s*@((?:no)?flow)\\b/;\n    var H = {\n      quot: \'"\',\n      amp: "&",\n      apos: "\'",\n      lt: "<",\n      gt: ">",\n      nbsp: " ",\n      iexcl: "¡",\n      cent: "¢",\n      pound: "£",\n      curren: "¤",\n      yen: "¥",\n      brvbar: "¦",\n      sect: "§",\n      uml: "¨",\n      copy: "©",\n      ordf: "ª",\n      laquo: "«",\n      not: "¬",\n      shy: "­",\n      reg: "®",\n      macr: "¯",\n      deg: "°",\n      plusmn: "±",\n      sup2: "²",\n      sup3: "³",\n      acute: "´",\n      micro: "µ",\n      para: "¶",\n      middot: "·",\n      cedil: "¸",\n      sup1: "¹",\n      ordm: "º",\n      raquo: "»",\n      frac14: "¼",\n      frac12: "½",\n      frac34: "¾",\n      iquest: "¿",\n      Agrave: "À",\n      Aacute: "Á",\n      Acirc: "Â",\n      Atilde: "Ã",\n      Auml: "Ä",\n      Aring: "Å",\n      AElig: "Æ",\n      Ccedil: "Ç",\n      Egrave: "È",\n      Eacute: "É",\n      Ecirc: "Ê",\n      Euml: "Ë",\n      Igrave: "Ì",\n      Iacute: "Í",\n      Icirc: "Î",\n      Iuml: "Ï",\n      ETH: "Ð",\n      Ntilde: "Ñ",\n      Ograve: "Ò",\n      Oacute: "Ó",\n      Ocirc: "Ô",\n      Otilde: "Õ",\n      Ouml: "Ö",\n      times: "×",\n      Oslash: "Ø",\n      Ugrave: "Ù",\n      Uacute: "Ú",\n      Ucirc: "Û",\n      Uuml: "Ü",\n      Yacute: "Ý",\n      THORN: "Þ",\n      szlig: "ß",\n      agrave: "à",\n      aacute: "á",\n      acirc: "â",\n      atilde: "ã",\n      auml: "ä",\n      aring: "å",\n      aelig: "æ",\n      ccedil: "ç",\n      egrave: "è",\n      eacute: "é",\n      ecirc: "ê",\n      euml: "ë",\n      igrave: "ì",\n      iacute: "í",\n      icirc: "î",\n      iuml: "ï",\n      eth: "ð",\n      ntilde: "ñ",\n      ograve: "ò",\n      oacute: "ó",\n      ocirc: "ô",\n      otilde: "õ",\n      ouml: "ö",\n      divide: "÷",\n      oslash: "ø",\n      ugrave: "ù",\n      uacute: "ú",\n      ucirc: "û",\n      uuml: "ü",\n      yacute: "ý",\n      thorn: "þ",\n      yuml: "ÿ",\n      OElig: "Œ",\n      oelig: "œ",\n      Scaron: "Š",\n      scaron: "š",\n      Yuml: "Ÿ",\n      fnof: "ƒ",\n      circ: "ˆ",\n      tilde: "˜",\n      Alpha: "Α",\n      Beta: "Β",\n      Gamma: "Γ",\n      Delta: "Δ",\n      Epsilon: "Ε",\n      Zeta: "Ζ",\n      Eta: "Η",\n      Theta: "Θ",\n      Iota: "Ι",\n      Kappa: "Κ",\n      Lambda: "Λ",\n      Mu: "Μ",\n      Nu: "Ν",\n      Xi: "Ξ",\n      Omicron: "Ο",\n      Pi: "Π",\n      Rho: "Ρ",\n      Sigma: "Σ",\n      Tau: "Τ",\n      Upsilon: "Υ",\n      Phi: "Φ",\n      Chi: "Χ",\n      Psi: "Ψ",\n      Omega: "Ω",\n      alpha: "α",\n      beta: "β",\n      gamma: "γ",\n      delta: "δ",\n      epsilon: "ε",\n      zeta: "ζ",\n      eta: "η",\n      theta: "θ",\n      iota: "ι",\n      kappa: "κ",\n      lambda: "λ",\n      mu: "μ",\n      nu: "ν",\n      xi: "ξ",\n      omicron: "ο",\n      pi: "π",\n      rho: "ρ",\n      sigmaf: "ς",\n      sigma: "σ",\n      tau: "τ",\n      upsilon: "υ",\n      phi: "φ",\n      chi: "χ",\n      psi: "ψ",\n      omega: "ω",\n      thetasym: "ϑ",\n      upsih: "ϒ",\n      piv: "ϖ",\n      ensp: " ",\n      emsp: " ",\n      thinsp: " ",\n      zwnj: "‌",\n      zwj: "‍",\n      lrm: "‎",\n      rlm: "‏",\n      ndash: "–",\n      mdash: "—",\n      lsquo: "‘",\n      rsquo: "’",\n      sbquo: "‚",\n      ldquo: "“",\n      rdquo: "”",\n      bdquo: "„",\n      dagger: "†",\n      Dagger: "‡",\n      bull: "•",\n      hellip: "…",\n      permil: "‰",\n      prime: "′",\n      Prime: "″",\n      lsaquo: "‹",\n      rsaquo: "›",\n      oline: "‾",\n      frasl: "⁄",\n      euro: "€",\n      image: "ℑ",\n      weierp: "℘",\n      real: "ℜ",\n      trade: "™",\n      alefsym: "ℵ",\n      larr: "←",\n      uarr: "↑",\n      rarr: "→",\n      darr: "↓",\n      harr: "↔",\n      crarr: "↵",\n      lArr: "⇐",\n      uArr: "⇑",\n      rArr: "⇒",\n      dArr: "⇓",\n      hArr: "⇔",\n      forall: "∀",\n      part: "∂",\n      exist: "∃",\n      empty: "∅",\n      nabla: "∇",\n      isin: "∈",\n      notin: "∉",\n      ni: "∋",\n      prod: "∏",\n      sum: "∑",\n      minus: "−",\n      lowast: "∗",\n      radic: "√",\n      prop: "∝",\n      infin: "∞",\n      ang: "∠",\n      and: "∧",\n      or: "∨",\n      cap: "∩",\n      cup: "∪",\n      int: "∫",\n      there4: "∴",\n      sim: "∼",\n      cong: "≅",\n      asymp: "≈",\n      ne: "≠",\n      equiv: "≡",\n      le: "≤",\n      ge: "≥",\n      sub: "⊂",\n      sup: "⊃",\n      nsub: "⊄",\n      sube: "⊆",\n      supe: "⊇",\n      oplus: "⊕",\n      otimes: "⊗",\n      perp: "⊥",\n      sdot: "⋅",\n      lceil: "⌈",\n      rceil: "⌉",\n      lfloor: "⌊",\n      rfloor: "⌋",\n      lang: "〈",\n      rang: "〉",\n      loz: "◊",\n      spades: "♠",\n      clubs: "♣",\n      hearts: "♥",\n      diams: "♦"\n    },\n        W = /^[\\da-fA-F]+$/,\n        K = /^\\d+$/,\n        J = Object.freeze({\n      AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression",\n      MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>",\n      MissingClosingTagElement: "Expected corresponding JSX closing tag for <%0>",\n      UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text",\n      UnterminatedJsxContent: "Unterminated JSX contents",\n      UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"\n    });\n\n    function X(t) {\n      return !!t && ("JSXOpeningFragment" === t.type || "JSXClosingFragment" === t.type);\n    }\n\n    function G(t) {\n      if ("JSXIdentifier" === t.type) return t.name;\n      if ("JSXNamespacedName" === t.type) return t.namespace.name + ":" + t.name.name;\n      if ("JSXMemberExpression" === t.type) return G(t.object) + "." + G(t.property);\n      throw new Error("Node had unexpected type: " + t.type);\n    }\n\n    x.j_oTag = new y("<tag", !1), x.j_cTag = new y("</tag", !1), x.j_expr = new y("<tag>...</tag>", !0, !0), n.jsxName = new s("jsxName"), n.jsxText = new s("jsxText", {\n      beforeExpr: !0\n    }), n.jsxTagStart = new s("jsxTagStart", {\n      startsExpr: !0\n    }), n.jsxTagEnd = new s("jsxTagEnd"), n.jsxTagStart.updateContext = function () {\n      this.state.context.push(x.j_expr), this.state.context.push(x.j_oTag), this.state.exprAllowed = !1;\n    }, n.jsxTagEnd.updateContext = function (t) {\n      var e = this.state.context.pop();\n      e === x.j_oTag && t === n.slash || e === x.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === x.j_expr) : this.state.exprAllowed = !0;\n    };\n    var Q = /*#__PURE__*/(0, _createClass2.default)(function Q(t) {\n      (0, _classCallCheck2.default)(this, Q);\n      this.var = [], this.lexical = [], this.functions = [], this.flags = t;\n    });\n\n    var Y = /*#__PURE__*/function () {\n      function Y(t, e) {\n        (0, _classCallCheck2.default)(this, Y);\n        this.scopeStack = [], this.undefinedExports = new Map(), this.undefinedPrivateNames = new Map(), this.raise = t, this.inModule = e;\n      }\n\n      (0, _createClass2.default)(Y, [{\n        key: "inFunction",\n        get: function get() {\n          return (2 & this.currentVarScope().flags) > 0;\n        }\n      }, {\n        key: "allowSuper",\n        get: function get() {\n          return (16 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "allowDirectSuper",\n        get: function get() {\n          return (32 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "inClass",\n        get: function get() {\n          return (64 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "inNonArrowFunction",\n        get: function get() {\n          return (2 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "treatFunctionsAsVar",\n        get: function get() {\n          return this.treatFunctionsAsVarInScope(this.currentScope());\n        }\n      }, {\n        key: "createScope",\n        value: function createScope(t) {\n          return new Q(t);\n        }\n      }, {\n        key: "enter",\n        value: function enter(t) {\n          this.scopeStack.push(this.createScope(t));\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          this.scopeStack.pop();\n        }\n      }, {\n        key: "treatFunctionsAsVarInScope",\n        value: function treatFunctionsAsVarInScope(t) {\n          return !!(2 & t.flags || !this.inModule && 1 & t.flags);\n        }\n      }, {\n        key: "declareName",\n        value: function declareName(t, e, s) {\n          var i = this.currentScope();\n          if (8 & e || 16 & e) this.checkRedeclarationInScope(i, t, e, s), 16 & e ? i.functions.push(t) : i.lexical.push(t), 8 & e && this.maybeExportDefined(i, t);else if (4 & e) for (var _r3 = this.scopeStack.length - 1; _r3 >= 0 && (i = this.scopeStack[_r3], this.checkRedeclarationInScope(i, t, e, s), i.var.push(t), this.maybeExportDefined(i, t), !(131 & i.flags)); --_r3) {\n            ;\n          }\n          this.inModule && 1 & i.flags && this.undefinedExports.delete(t);\n        }\n      }, {\n        key: "maybeExportDefined",\n        value: function maybeExportDefined(t, e) {\n          this.inModule && 1 & t.flags && this.undefinedExports.delete(e);\n        }\n      }, {\n        key: "checkRedeclarationInScope",\n        value: function checkRedeclarationInScope(t, e, s, i) {\n          this.isRedeclaredInScope(t, e, s) && this.raise(i, f.VarRedeclaration, e);\n        }\n      }, {\n        key: "isRedeclaredInScope",\n        value: function isRedeclaredInScope(t, e, s) {\n          return !!(1 & s) && (8 & s ? t.lexical.indexOf(e) > -1 || t.functions.indexOf(e) > -1 || t.var.indexOf(e) > -1 : 16 & s ? t.lexical.indexOf(e) > -1 || !this.treatFunctionsAsVarInScope(t) && t.var.indexOf(e) > -1 : t.lexical.indexOf(e) > -1 && !(8 & t.flags && t.lexical[0] === e) || !this.treatFunctionsAsVarInScope(t) && t.functions.indexOf(e) > -1);\n        }\n      }, {\n        key: "checkLocalExport",\n        value: function checkLocalExport(t) {\n          -1 === this.scopeStack[0].lexical.indexOf(t.name) && -1 === this.scopeStack[0].var.indexOf(t.name) && -1 === this.scopeStack[0].functions.indexOf(t.name) && this.undefinedExports.set(t.name, t.start);\n        }\n      }, {\n        key: "currentScope",\n        value: function currentScope() {\n          return this.scopeStack[this.scopeStack.length - 1];\n        }\n      }, {\n        key: "currentVarScope",\n        value: function currentVarScope() {\n          for (var _t6 = this.scopeStack.length - 1;; _t6--) {\n            var _e5 = this.scopeStack[_t6];\n            if (131 & _e5.flags) return _e5;\n          }\n        }\n      }, {\n        key: "currentThisScope",\n        value: function currentThisScope() {\n          for (var _t7 = this.scopeStack.length - 1;; _t7--) {\n            var _e6 = this.scopeStack[_t7];\n            if ((131 & _e6.flags || 64 & _e6.flags) && !(4 & _e6.flags)) return _e6;\n          }\n        }\n      }]);\n      return Y;\n    }();\n\n    var $ = /*#__PURE__*/function (_Q) {\n      (0, _inherits2.default)($, _Q);\n\n      var _super = _createSuper($);\n\n      function $() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, $);\n\n        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n          t[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(t)), _this.types = [], _this.enums = [], _this.constEnums = [], _this.classes = [], _this.exportOnlyBindings = [];\n        return _this;\n      }\n\n      return (0, _createClass2.default)($);\n    }(Q);\n\n    var Z = /*#__PURE__*/function (_Y) {\n      (0, _inherits2.default)(Z, _Y);\n\n      var _super2 = _createSuper(Z);\n\n      function Z() {\n        (0, _classCallCheck2.default)(this, Z);\n        return _super2.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(Z, [{\n        key: "createScope",\n        value: function createScope(t) {\n          return new $(t);\n        }\n      }, {\n        key: "declareName",\n        value: function declareName(t, e, s) {\n          var i = this.currentScope();\n          if (1024 & e) return this.maybeExportDefined(i, t), void i.exportOnlyBindings.push(t);\n          (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "declareName", this).apply(this, arguments), 2 & e && (1 & e || (this.checkRedeclarationInScope(i, t, e, s), this.maybeExportDefined(i, t)), i.types.push(t)), 256 & e && i.enums.push(t), 512 & e && i.constEnums.push(t), 128 & e && i.classes.push(t);\n        }\n      }, {\n        key: "isRedeclaredInScope",\n        value: function isRedeclaredInScope(t, e, s) {\n          if (t.enums.indexOf(e) > -1) {\n            if (256 & s) {\n              return !!(512 & s) !== t.constEnums.indexOf(e) > -1;\n            }\n\n            return !0;\n          }\n\n          return 128 & s && t.classes.indexOf(e) > -1 ? t.lexical.indexOf(e) > -1 && !!(1 & s) : !!(2 & s && t.types.indexOf(e) > -1) || (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "isRedeclaredInScope", this).apply(this, arguments);\n        }\n      }, {\n        key: "checkLocalExport",\n        value: function checkLocalExport(t) {\n          -1 === this.scopeStack[0].types.indexOf(t.name) && -1 === this.scopeStack[0].exportOnlyBindings.indexOf(t.name) && (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "checkLocalExport", this).call(this, t);\n        }\n      }]);\n      return Z;\n    }(Y);\n\n    var tt = /*#__PURE__*/function () {\n      function tt() {\n        (0, _classCallCheck2.default)(this, tt);\n        this.stacks = [];\n      }\n\n      (0, _createClass2.default)(tt, [{\n        key: "enter",\n        value: function enter(t) {\n          this.stacks.push(t);\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          this.stacks.pop();\n        }\n      }, {\n        key: "currentFlags",\n        value: function currentFlags() {\n          return this.stacks[this.stacks.length - 1];\n        }\n      }, {\n        key: "hasAwait",\n        get: function get() {\n          return (2 & this.currentFlags()) > 0;\n        }\n      }, {\n        key: "hasYield",\n        get: function get() {\n          return (1 & this.currentFlags()) > 0;\n        }\n      }, {\n        key: "hasReturn",\n        get: function get() {\n          return (4 & this.currentFlags()) > 0;\n        }\n      }]);\n      return tt;\n    }();\n\n    function et(t, e) {\n      return (t ? 2 : 0) | (e ? 1 : 0);\n    }\n\n    function st(t) {\n      if (null == t) throw new Error("Unexpected ".concat(t, " value."));\n      return t;\n    }\n\n    function it(t) {\n      if (!t) throw new Error("Assert fail");\n    }\n\n    var rt = Object.freeze({\n      ClassMethodHasDeclare: "Class methods cannot have the \'declare\' modifier",\n      ClassMethodHasReadonly: "Class methods cannot have the \'readonly\' modifier",\n      DeclareClassFieldHasInitializer: "\'declare\' class fields cannot have an initializer",\n      DuplicateModifier: "Duplicate modifier: \'%0\'",\n      EmptyHeritageClauseType: "\'%0\' list cannot be empty.",\n      IndexSignatureHasAbstract: "Index signatures cannot have the \'abstract\' modifier",\n      IndexSignatureHasAccessibility: "Index signatures cannot have an accessibility modifier (\'%0\')",\n      IndexSignatureHasStatic: "Index signatures cannot have the \'static\' modifier",\n      OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",\n      PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",\n      PrivateElementHasAbstract: "Private elements cannot have the \'abstract\' modifier.",\n      PrivateElementHasAccessibility: "Private elements cannot have an accessibility modifier (\'%0\')",\n      TemplateTypeHasSubstitution: "Template literal types cannot have any substitution",\n      TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",\n      UnexpectedReadonly: "\'readonly\' type modifier is only permitted on array and tuple literal types.",\n      UnexpectedTypeAnnotation: "Did not expect a type annotation here.",\n      UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",\n      UnsupportedImportTypeArgument: "Argument in a type import must be a string literal",\n      UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",\n      UnsupportedSignatureParameterKind: "Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0"\n    });\n    n.placeholder = new s("%%", {\n      startsExpr: !0\n    });\n\n    function at(t, e) {\n      return t.some(function (t) {\n        return Array.isArray(t) ? t[0] === e : t === e;\n      });\n    }\n\n    function nt(t, e, s) {\n      var i = t.find(function (t) {\n        return Array.isArray(t) ? t[0] === e : t === e;\n      });\n      return i && Array.isArray(i) ? i[1][s] : null;\n    }\n\n    var ot = ["minimal", "smart", "fsharp"],\n        ht = ["hash", "bar"];\n    var pt = {\n      estree: function estree(t) {\n        return /*#__PURE__*/function (_t8) {\n          (0, _inherits2.default)(_class, _t8);\n\n          var _super3 = _createSuper(_class);\n\n          function _class() {\n            (0, _classCallCheck2.default)(this, _class);\n            return _super3.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class, [{\n            key: "estreeParseRegExpLiteral",\n            value: function estreeParseRegExpLiteral(_ref3) {\n              var t = _ref3.pattern,\n                  e = _ref3.flags;\n              var s = null;\n\n              try {\n                s = new RegExp(t, e);\n              } catch (t) {}\n\n              var i = this.estreeParseLiteral(s);\n              return i.regex = {\n                pattern: t,\n                flags: e\n              }, i;\n            }\n          }, {\n            key: "estreeParseBigIntLiteral",\n            value: function estreeParseBigIntLiteral(t) {\n              var e = "undefined" != typeof BigInt ? BigInt(t) : null,\n                  s = this.estreeParseLiteral(e);\n              return s.bigint = String(s.value || t), s;\n            }\n          }, {\n            key: "estreeParseLiteral",\n            value: function estreeParseLiteral(t) {\n              return this.parseLiteral(t, "Literal");\n            }\n          }, {\n            key: "directiveToStmt",\n            value: function directiveToStmt(t) {\n              var e = t.value,\n                  s = this.startNodeAt(t.start, t.loc.start),\n                  i = this.startNodeAt(e.start, e.loc.start);\n              return i.value = e.value, i.raw = e.extra.raw, s.expression = this.finishNodeAt(i, "Literal", e.end, e.loc.end), s.directive = e.extra.raw.slice(1, -1), this.finishNodeAt(s, "ExpressionStatement", t.end, t.loc.end);\n            }\n          }, {\n            key: "initFunction",\n            value: function initFunction(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "initFunction", this).call(this, t, e), t.expression = !1;\n            }\n          }, {\n            key: "checkDeclaration",\n            value: function checkDeclaration(t) {\n              D(t) ? this.checkDeclaration(t.value) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "checkDeclaration", this).call(this, t);\n            }\n          }, {\n            key: "checkGetterSetterParams",\n            value: function checkGetterSetterParams(t) {\n              var e = t,\n                  s = "get" === e.kind ? 0 : 1,\n                  i = e.start;\n              e.value.params.length !== s ? "get" === t.kind ? this.raise(i, f.BadGetterArity) : this.raise(i, f.BadSetterArity) : "set" === e.kind && "RestElement" === e.value.params[0].type && this.raise(i, f.BadSetterRestParameter);\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var _this2 = this;\n\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n              var r = arguments.length > 4 ? arguments[4] : undefined;\n\n              switch (t.type) {\n                case "ObjectPattern":\n                  t.properties.forEach(function (t) {\n                    _this2.checkLVal("Property" === t.type ? t.value : t, e, s, "object destructuring pattern", r);\n                  });\n                  break;\n\n                default:\n                  (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "checkLVal", this).call(this, t, e, s, i, r);\n              }\n            }\n          }, {\n            key: "checkDuplicatedProto",\n            value: function checkDuplicatedProto(t, e, s) {\n              if ("SpreadElement" === t.type || t.computed || t.method || t.shorthand) return;\n              var i = t.key;\n              "__proto__" === ("Identifier" === i.type ? i.name : String(i.value)) && "init" === t.kind && (e.used && (s && -1 === s.doubleProto ? s.doubleProto = i.start : this.raise(i.start, f.DuplicateProto)), e.used = !0);\n            }\n          }, {\n            key: "isValidDirective",\n            value: function isValidDirective(t) {\n              return !("ExpressionStatement" !== t.type || "Literal" !== t.expression.type || "string" != typeof t.expression.value || t.expression.extra && t.expression.extra.parenthesized);\n            }\n          }, {\n            key: "stmtToDirective",\n            value: function stmtToDirective(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "stmtToDirective", this).call(this, t),\n                  s = t.expression.value;\n              return e.value.value = s, e;\n            }\n          }, {\n            key: "parseBlockBody",\n            value: function parseBlockBody(t, e, s, i) {\n              var _this3 = this;\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseBlockBody", this).call(this, t, e, s, i);\n              var r = t.directives.map(function (t) {\n                return _this3.directiveToStmt(t);\n              });\n              t.body = r.concat(t.body), delete t.directives;\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              this.parseMethod(e, s, i, r, a, "ClassMethod", !0), e.typeParameters && (e.value.typeParameters = e.typeParameters, delete e.typeParameters), t.body.push(e);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom(t) {\n              switch (this.state.type) {\n                case n.num:\n                case n.string:\n                  return this.estreeParseLiteral(this.state.value);\n\n                case n.regexp:\n                  return this.estreeParseRegExpLiteral(this.state.value);\n\n                case n.bigint:\n                  return this.estreeParseBigIntLiteral(this.state.value);\n\n                case n._null:\n                  return this.estreeParseLiteral(null);\n\n                case n._true:\n                  return this.estreeParseLiteral(!0);\n\n                case n._false:\n                  return this.estreeParseLiteral(!1);\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseExprAtom", this).call(this, t);\n              }\n            }\n          }, {\n            key: "parseLiteral",\n            value: function parseLiteral(t, e, s, i) {\n              var r = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseLiteral", this).call(this, t, e, s, i);\n              return r.raw = r.extra.raw, delete r.extra, r;\n            }\n          }, {\n            key: "parseFunctionBody",\n            value: function parseFunctionBody(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseFunctionBody", this).call(this, t, e, s), t.expression = "BlockStatement" !== t.body.type;\n            }\n          }, {\n            key: "parseMethod",\n            value: function parseMethod(t, e, s, i, r, a) {\n              var n = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : !1;\n              var o = this.startNode();\n              return o.kind = t.kind, o = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseMethod", this).call(this, o, e, s, i, r, a, n), o.type = "FunctionExpression", delete o.kind, t.value = o, a = "ClassMethod" === a ? "MethodDefinition" : a, this.finishNode(t, a);\n            }\n          }, {\n            key: "parseObjectMethod",\n            value: function parseObjectMethod(t, e, s, i, r) {\n              var a = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseObjectMethod", this).call(this, t, e, s, i, r);\n              return a && (a.type = "Property", "method" === a.kind && (a.kind = "init"), a.shorthand = !1), a;\n            }\n          }, {\n            key: "parseObjectProperty",\n            value: function parseObjectProperty(t, e, s, i, r) {\n              var a = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseObjectProperty", this).call(this, t, e, s, i, r);\n              return a && (a.kind = "init", a.type = "Property"), a;\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return D(t) ? (this.toAssignable(t.value), t) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toAssignable", this).call(this, t);\n            }\n          }, {\n            key: "toAssignableObjectExpressionProp",\n            value: function toAssignableObjectExpressionProp(t, e) {\n              if ("get" === t.kind || "set" === t.kind) throw this.raise(t.key.start, f.PatternHasAccessor);\n              if (t.method) throw this.raise(t.key.start, f.PatternHasMethod);\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toAssignableObjectExpressionProp", this).call(this, t, e);\n            }\n          }, {\n            key: "finishCallExpression",\n            value: function finishCallExpression(t, e) {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "finishCallExpression", this).call(this, t, e), "Import" === t.callee.type && (t.type = "ImportExpression", t.source = t.arguments[0], delete t.arguments, delete t.callee), t;\n            }\n          }, {\n            key: "toReferencedListDeep",\n            value: function toReferencedListDeep(t, e) {\n              t && (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toReferencedListDeep", this).call(this, t, e);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              switch ((0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseExport", this).call(this, t), t.type) {\n                case "ExportAllDeclaration":\n                  t.exported = null;\n                  break;\n\n                case "ExportNamedDeclaration":\n                  1 === t.specifiers.length && "ExportNamespaceSpecifier" === t.specifiers[0].type && (t.type = "ExportAllDeclaration", t.exported = t.specifiers[0].exported, delete t.specifiers);\n              }\n\n              return t;\n            }\n          }]);\n          return _class;\n        }(t);\n      },\n      jsx: function jsx(t) {\n        return /*#__PURE__*/function (_t9) {\n          (0, _inherits2.default)(_class2, _t9);\n\n          var _super4 = _createSuper(_class2);\n\n          function _class2() {\n            (0, _classCallCheck2.default)(this, _class2);\n            return _super4.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class2, [{\n            key: "jsxReadToken",\n            value: function jsxReadToken() {\n              var t = "",\n                  e = this.state.pos;\n\n              for (;;) {\n                if (this.state.pos >= this.length) throw this.raise(this.state.start, J.UnterminatedJsxContent);\n\n                var _s8 = this.input.charCodeAt(this.state.pos);\n\n                switch (_s8) {\n                  case 60:\n                  case 123:\n                    return this.state.pos === this.state.start ? 60 === _s8 && this.state.exprAllowed ? (++this.state.pos, this.finishToken(n.jsxTagStart)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, _s8) : (t += this.input.slice(e, this.state.pos), this.finishToken(n.jsxText, t));\n\n                  case 38:\n                    t += this.input.slice(e, this.state.pos), t += this.jsxReadEntity(), e = this.state.pos;\n                    break;\n\n                  default:\n                    p(_s8) ? (t += this.input.slice(e, this.state.pos), t += this.jsxReadNewLine(!0), e = this.state.pos) : ++this.state.pos;\n                }\n              }\n            }\n          }, {\n            key: "jsxReadNewLine",\n            value: function jsxReadNewLine(t) {\n              var e = this.input.charCodeAt(this.state.pos);\n              var s;\n              return ++this.state.pos, 13 === e && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, s = t ? "\\n" : "\\r\\n") : s = String.fromCharCode(e), ++this.state.curLine, this.state.lineStart = this.state.pos, s;\n            }\n          }, {\n            key: "jsxReadString",\n            value: function jsxReadString(t) {\n              var e = "",\n                  s = ++this.state.pos;\n\n              for (;;) {\n                if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedString);\n\n                var _i6 = this.input.charCodeAt(this.state.pos);\n\n                if (_i6 === t) break;\n                38 === _i6 ? (e += this.input.slice(s, this.state.pos), e += this.jsxReadEntity(), s = this.state.pos) : p(_i6) ? (e += this.input.slice(s, this.state.pos), e += this.jsxReadNewLine(!1), s = this.state.pos) : ++this.state.pos;\n              }\n\n              return e += this.input.slice(s, this.state.pos++), this.finishToken(n.string, e);\n            }\n          }, {\n            key: "jsxReadEntity",\n            value: function jsxReadEntity() {\n              var t,\n                  e = "",\n                  s = 0,\n                  i = this.input[this.state.pos];\n              var r = ++this.state.pos;\n\n              for (; this.state.pos < this.length && s++ < 10;) {\n                if (i = this.input[this.state.pos++], ";" === i) {\n                  "#" === e[0] ? "x" === e[1] ? (e = e.substr(2), W.test(e) && (t = String.fromCodePoint(parseInt(e, 16)))) : (e = e.substr(1), K.test(e) && (t = String.fromCodePoint(parseInt(e, 10)))) : t = H[e];\n                  break;\n                }\n\n                e += i;\n              }\n\n              return t || (this.state.pos = r, "&");\n            }\n          }, {\n            key: "jsxReadWord",\n            value: function jsxReadWord() {\n              var t;\n              var e = this.state.pos;\n\n              do {\n                t = this.input.charCodeAt(++this.state.pos);\n              } while (S(t) || 45 === t);\n\n              return this.finishToken(n.jsxName, this.input.slice(e, this.state.pos));\n            }\n          }, {\n            key: "jsxParseIdentifier",\n            value: function jsxParseIdentifier() {\n              var t = this.startNode();\n              return this.match(n.jsxName) ? t.name = this.state.value : this.state.type.keyword ? t.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(t, "JSXIdentifier");\n            }\n          }, {\n            key: "jsxParseNamespacedName",\n            value: function jsxParseNamespacedName() {\n              var t = this.state.start,\n                  e = this.state.startLoc,\n                  s = this.jsxParseIdentifier();\n              if (!this.eat(n.colon)) return s;\n              var i = this.startNodeAt(t, e);\n              return i.namespace = s, i.name = this.jsxParseIdentifier(), this.finishNode(i, "JSXNamespacedName");\n            }\n          }, {\n            key: "jsxParseElementName",\n            value: function jsxParseElementName() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              var s = this.jsxParseNamespacedName();\n              if ("JSXNamespacedName" === s.type) return s;\n\n              for (; this.eat(n.dot);) {\n                var _i7 = this.startNodeAt(t, e);\n\n                _i7.object = s, _i7.property = this.jsxParseIdentifier(), s = this.finishNode(_i7, "JSXMemberExpression");\n              }\n\n              return s;\n            }\n          }, {\n            key: "jsxParseAttributeValue",\n            value: function jsxParseAttributeValue() {\n              var t;\n\n              switch (this.state.type) {\n                case n.braceL:\n                  return t = this.startNode(), this.next(), t = this.jsxParseExpressionContainer(t), "JSXEmptyExpression" === t.expression.type && this.raise(t.start, J.AttributeIsEmpty), t;\n\n                case n.jsxTagStart:\n                case n.string:\n                  return this.parseExprAtom();\n\n                default:\n                  throw this.raise(this.state.start, J.UnsupportedJsxValue);\n              }\n            }\n          }, {\n            key: "jsxParseEmptyExpression",\n            value: function jsxParseEmptyExpression() {\n              var t = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n              return this.finishNodeAt(t, "JSXEmptyExpression", this.state.start, this.state.startLoc);\n            }\n          }, {\n            key: "jsxParseSpreadChild",\n            value: function jsxParseSpreadChild(t) {\n              return this.next(), t.expression = this.parseExpression(), this.expect(n.braceR), this.finishNode(t, "JSXSpreadChild");\n            }\n          }, {\n            key: "jsxParseExpressionContainer",\n            value: function jsxParseExpressionContainer(t) {\n              return this.match(n.braceR) ? t.expression = this.jsxParseEmptyExpression() : t.expression = this.parseExpression(), this.expect(n.braceR), this.finishNode(t, "JSXExpressionContainer");\n            }\n          }, {\n            key: "jsxParseAttribute",\n            value: function jsxParseAttribute() {\n              var t = this.startNode();\n              return this.eat(n.braceL) ? (this.expect(n.ellipsis), t.argument = this.parseMaybeAssign(), this.expect(n.braceR), this.finishNode(t, "JSXSpreadAttribute")) : (t.name = this.jsxParseNamespacedName(), t.value = this.eat(n.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(t, "JSXAttribute"));\n            }\n          }, {\n            key: "jsxParseOpeningElementAt",\n            value: function jsxParseOpeningElementAt(t, e) {\n              var s = this.startNodeAt(t, e);\n              return this.match(n.jsxTagEnd) ? (this.expect(n.jsxTagEnd), this.finishNode(s, "JSXOpeningFragment")) : (s.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(s));\n            }\n          }, {\n            key: "jsxParseOpeningElementAfterName",\n            value: function jsxParseOpeningElementAfterName(t) {\n              var e = [];\n\n              for (; !this.match(n.slash) && !this.match(n.jsxTagEnd);) {\n                e.push(this.jsxParseAttribute());\n              }\n\n              return t.attributes = e, t.selfClosing = this.eat(n.slash), this.expect(n.jsxTagEnd), this.finishNode(t, "JSXOpeningElement");\n            }\n          }, {\n            key: "jsxParseClosingElementAt",\n            value: function jsxParseClosingElementAt(t, e) {\n              var s = this.startNodeAt(t, e);\n              return this.match(n.jsxTagEnd) ? (this.expect(n.jsxTagEnd), this.finishNode(s, "JSXClosingFragment")) : (s.name = this.jsxParseElementName(), this.expect(n.jsxTagEnd), this.finishNode(s, "JSXClosingElement"));\n            }\n          }, {\n            key: "jsxParseElementAt",\n            value: function jsxParseElementAt(t, e) {\n              var s = this.startNodeAt(t, e),\n                  i = [],\n                  r = this.jsxParseOpeningElementAt(t, e);\n              var a = null;\n\n              if (!r.selfClosing) {\n                t: for (;;) {\n                  switch (this.state.type) {\n                    case n.jsxTagStart:\n                      if (t = this.state.start, e = this.state.startLoc, this.next(), this.eat(n.slash)) {\n                        a = this.jsxParseClosingElementAt(t, e);\n                        break t;\n                      }\n\n                      i.push(this.jsxParseElementAt(t, e));\n                      break;\n\n                    case n.jsxText:\n                      i.push(this.parseExprAtom());\n                      break;\n\n                    case n.braceL:\n                      {\n                        var _t10 = this.startNode();\n\n                        this.next(), this.match(n.ellipsis) ? i.push(this.jsxParseSpreadChild(_t10)) : i.push(this.jsxParseExpressionContainer(_t10));\n                        break;\n                      }\n\n                    default:\n                      throw this.unexpected();\n                  }\n                }\n\n                X(r) && !X(a) ? this.raise(a.start, J.MissingClosingTagFragment) : !X(r) && X(a) ? this.raise(a.start, J.MissingClosingTagElement, G(r.name)) : X(r) || X(a) || G(a.name) !== G(r.name) && this.raise(a.start, J.MissingClosingTagElement, G(r.name));\n              }\n\n              if (X(r) ? (s.openingFragment = r, s.closingFragment = a) : (s.openingElement = r, s.closingElement = a), s.children = i, this.isRelational("<")) throw this.raise(this.state.start, J.UnwrappedAdjacentJSXElements);\n              return X(r) ? this.finishNode(s, "JSXFragment") : this.finishNode(s, "JSXElement");\n            }\n          }, {\n            key: "jsxParseElement",\n            value: function jsxParseElement() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              return this.next(), this.jsxParseElementAt(t, e);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom(t) {\n              return this.match(n.jsxText) ? this.parseLiteral(this.state.value, "JSXText") : this.match(n.jsxTagStart) ? this.jsxParseElement() : this.isRelational("<") && 33 !== this.input.charCodeAt(this.state.pos) ? (this.finishToken(n.jsxTagStart), this.jsxParseElement()) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "parseExprAtom", this).call(this, t);\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              if (this.state.inPropertyName) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, t);\n              var e = this.curContext();\n              if (e === x.j_expr) return this.jsxReadToken();\n\n              if (e === x.j_oTag || e === x.j_cTag) {\n                if (w(t)) return this.jsxReadWord();\n                if (62 === t) return ++this.state.pos, this.finishToken(n.jsxTagEnd);\n                if ((34 === t || 39 === t) && e === x.j_oTag) return this.jsxReadString(t);\n              }\n\n              return 60 === t && this.state.exprAllowed && 33 !== this.input.charCodeAt(this.state.pos + 1) ? (++this.state.pos, this.finishToken(n.jsxTagStart)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, t);\n            }\n          }, {\n            key: "updateContext",\n            value: function updateContext(t) {\n              if (this.match(n.braceL)) {\n                var _e7 = this.curContext();\n\n                _e7 === x.j_oTag ? this.state.context.push(x.braceExpression) : _e7 === x.j_expr ? this.state.context.push(x.templateQuasi) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "updateContext", this).call(this, t), this.state.exprAllowed = !0;\n              } else {\n                if (!this.match(n.slash) || t !== n.jsxTagStart) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "updateContext", this).call(this, t);\n                this.state.context.length -= 2, this.state.context.push(x.j_cTag), this.state.exprAllowed = !1;\n              }\n            }\n          }]);\n          return _class2;\n        }(t);\n      },\n      flow: function flow(t) {\n        return /*#__PURE__*/function (_t11) {\n          (0, _inherits2.default)(_class3, _t11);\n\n          var _super5 = _createSuper(_class3);\n\n          function _class3(t, e) {\n            var _this4;\n\n            (0, _classCallCheck2.default)(this, _class3);\n            _this4 = _super5.call(this, t, e), _this4.flowPragma = void 0;\n            return _this4;\n          }\n\n          (0, _createClass2.default)(_class3, [{\n            key: "shouldParseTypes",\n            value: function shouldParseTypes() {\n              return this.getPluginOption("flow", "all") || "flow" === this.flowPragma;\n            }\n          }, {\n            key: "shouldParseEnums",\n            value: function shouldParseEnums() {\n              return !!this.getPluginOption("flow", "enums");\n            }\n          }, {\n            key: "finishToken",\n            value: function finishToken(t, e) {\n              return t !== n.string && t !== n.semi && t !== n.interpreterDirective && void 0 === this.flowPragma && (this.flowPragma = null), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "finishToken", this).call(this, t, e);\n            }\n          }, {\n            key: "addComment",\n            value: function addComment(t) {\n              if (void 0 === this.flowPragma) {\n                var _e8 = z.exec(t.value);\n\n                if (_e8) {\n                  if ("flow" === _e8[1]) this.flowPragma = "flow";else {\n                    if ("noflow" !== _e8[1]) throw new Error("Unexpected flow pragma");\n                    this.flowPragma = "noflow";\n                  }\n                } else ;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "addComment", this).call(this, t);\n            }\n          }, {\n            key: "flowParseTypeInitialiser",\n            value: function flowParseTypeInitialiser(t) {\n              var e = this.state.inType;\n              this.state.inType = !0, this.expect(t || n.colon);\n              var s = this.flowParseType();\n              return this.state.inType = e, s;\n            }\n          }, {\n            key: "flowParsePredicate",\n            value: function flowParsePredicate() {\n              var t = this.startNode(),\n                  e = this.state.startLoc,\n                  s = this.state.start;\n              this.expect(n.modulo);\n              var i = this.state.startLoc;\n              return this.expectContextual("checks"), e.line === i.line && e.column === i.column - 1 || this.raise(s, j.UnexpectedSpaceBetweenModuloChecks), this.eat(n.parenL) ? (t.value = this.parseExpression(), this.expect(n.parenR), this.finishNode(t, "DeclaredPredicate")) : this.finishNode(t, "InferredPredicate");\n            }\n          }, {\n            key: "flowParseTypeAndPredicateInitialiser",\n            value: function flowParseTypeAndPredicateInitialiser() {\n              var t = this.state.inType;\n              this.state.inType = !0, this.expect(n.colon);\n              var e = null,\n                  s = null;\n              return this.match(n.modulo) ? (this.state.inType = t, s = this.flowParsePredicate()) : (e = this.flowParseType(), this.state.inType = t, this.match(n.modulo) && (s = this.flowParsePredicate())), [e, s];\n            }\n          }, {\n            key: "flowParseDeclareClass",\n            value: function flowParseDeclareClass(t) {\n              return this.next(), this.flowParseInterfaceish(t, !0), this.finishNode(t, "DeclareClass");\n            }\n          }, {\n            key: "flowParseDeclareFunction",\n            value: function flowParseDeclareFunction(t) {\n              var _this$flowParseTypeAn, _this$flowParseTypeAn2;\n\n              this.next();\n              var e = t.id = this.parseIdentifier(),\n                  s = this.startNode(),\n                  i = this.startNode();\n              this.isRelational("<") ? s.typeParameters = this.flowParseTypeParameterDeclaration() : s.typeParameters = null, this.expect(n.parenL);\n              var r = this.flowParseFunctionTypeParams();\n              return s.params = r.params, s.rest = r.rest, this.expect(n.parenR), (_this$flowParseTypeAn = this.flowParseTypeAndPredicateInitialiser(), _this$flowParseTypeAn2 = (0, _slicedToArray2.default)(_this$flowParseTypeAn, 2), s.returnType = _this$flowParseTypeAn2[0], t.predicate = _this$flowParseTypeAn2[1], _this$flowParseTypeAn), i.typeAnnotation = this.finishNode(s, "FunctionTypeAnnotation"), e.typeAnnotation = this.finishNode(i, "TypeAnnotation"), this.resetEndLocation(e), this.semicolon(), this.finishNode(t, "DeclareFunction");\n            }\n          }, {\n            key: "flowParseDeclare",\n            value: function flowParseDeclare(t, e) {\n              if (this.match(n._class)) return this.flowParseDeclareClass(t);\n              if (this.match(n._function)) return this.flowParseDeclareFunction(t);\n              if (this.match(n._var)) return this.flowParseDeclareVariable(t);\n              if (this.eatContextual("module")) return this.match(n.dot) ? this.flowParseDeclareModuleExports(t) : (e && this.raise(this.state.lastTokStart, j.NestedDeclareModule), this.flowParseDeclareModule(t));\n              if (this.isContextual("type")) return this.flowParseDeclareTypeAlias(t);\n              if (this.isContextual("opaque")) return this.flowParseDeclareOpaqueType(t);\n              if (this.isContextual("interface")) return this.flowParseDeclareInterface(t);\n              if (this.match(n._export)) return this.flowParseDeclareExportDeclaration(t, e);\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParseDeclareVariable",\n            value: function flowParseDeclareVariable(t) {\n              return this.next(), t.id = this.flowParseTypeAnnotatableIdentifier(!0), this.scope.declareName(t.id.name, 5, t.id.start), this.semicolon(), this.finishNode(t, "DeclareVariable");\n            }\n          }, {\n            key: "flowParseDeclareModule",\n            value: function flowParseDeclareModule(t) {\n              var _this5 = this;\n\n              this.scope.enter(0), this.match(n.string) ? t.id = this.parseExprAtom() : t.id = this.parseIdentifier();\n              var e = t.body = this.startNode(),\n                  s = e.body = [];\n\n              for (this.expect(n.braceL); !this.match(n.braceR);) {\n                var _t12 = this.startNode();\n\n                this.match(n._import) ? (this.next(), this.isContextual("type") || this.match(n._typeof) || this.raise(this.state.lastTokStart, j.InvalidNonTypeImportInDeclareModule), this.parseImport(_t12)) : (this.expectContextual("declare", j.UnsupportedStatementInDeclareModule), _t12 = this.flowParseDeclare(_t12, !0)), s.push(_t12);\n              }\n\n              this.scope.exit(), this.expect(n.braceR), this.finishNode(e, "BlockStatement");\n              var i = null,\n                  r = !1;\n              return s.forEach(function (t) {\n                !function (t) {\n                  return "DeclareExportAllDeclaration" === t.type || "DeclareExportDeclaration" === t.type && (!t.declaration || "TypeAlias" !== t.declaration.type && "InterfaceDeclaration" !== t.declaration.type);\n                }(t) ? "DeclareModuleExports" === t.type && (r && _this5.raise(t.start, j.DuplicateDeclareModuleExports), "ES" === i && _this5.raise(t.start, j.AmbiguousDeclareModuleKind), i = "CommonJS", r = !0) : ("CommonJS" === i && _this5.raise(t.start, j.AmbiguousDeclareModuleKind), i = "ES");\n              }), t.kind = i || "CommonJS", this.finishNode(t, "DeclareModule");\n            }\n          }, {\n            key: "flowParseDeclareExportDeclaration",\n            value: function flowParseDeclareExportDeclaration(t, e) {\n              if (this.expect(n._export), this.eat(n._default)) return this.match(n._function) || this.match(n._class) ? t.declaration = this.flowParseDeclare(this.startNode()) : (t.declaration = this.flowParseType(), this.semicolon()), t.default = !0, this.finishNode(t, "DeclareExportDeclaration");\n\n              if (this.match(n._const) || this.isLet() || (this.isContextual("type") || this.isContextual("interface")) && !e) {\n                var _t13 = this.state.value,\n                    _e9 = V[_t13];\n                throw this.raise(this.state.start, j.UnsupportedDeclareExportKind, _t13, _e9);\n              }\n\n              if (this.match(n._var) || this.match(n._function) || this.match(n._class) || this.isContextual("opaque")) return t.declaration = this.flowParseDeclare(this.startNode()), t.default = !1, this.finishNode(t, "DeclareExportDeclaration");\n              if (this.match(n.star) || this.match(n.braceL) || this.isContextual("interface") || this.isContextual("type") || this.isContextual("opaque")) return "ExportNamedDeclaration" === (t = this.parseExport(t)).type && (t.type = "ExportDeclaration", t.default = !1, delete t.exportKind), t.type = "Declare" + t.type, t;\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParseDeclareModuleExports",\n            value: function flowParseDeclareModuleExports(t) {\n              return this.next(), this.expectContextual("exports"), t.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(t, "DeclareModuleExports");\n            }\n          }, {\n            key: "flowParseDeclareTypeAlias",\n            value: function flowParseDeclareTypeAlias(t) {\n              return this.next(), this.flowParseTypeAlias(t), t.type = "DeclareTypeAlias", t;\n            }\n          }, {\n            key: "flowParseDeclareOpaqueType",\n            value: function flowParseDeclareOpaqueType(t) {\n              return this.next(), this.flowParseOpaqueType(t, !0), t.type = "DeclareOpaqueType", t;\n            }\n          }, {\n            key: "flowParseDeclareInterface",\n            value: function flowParseDeclareInterface(t) {\n              return this.next(), this.flowParseInterfaceish(t), this.finishNode(t, "DeclareInterface");\n            }\n          }, {\n            key: "flowParseInterfaceish",\n            value: function flowParseInterfaceish(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n              if (t.id = this.flowParseRestrictedIdentifier(!e, !0), this.scope.declareName(t.id.name, e ? 17 : 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.extends = [], t.implements = [], t.mixins = [], this.eat(n._extends)) do {\n                t.extends.push(this.flowParseInterfaceExtends());\n              } while (!e && this.eat(n.comma));\n\n              if (this.isContextual("mixins")) {\n                this.next();\n\n                do {\n                  t.mixins.push(this.flowParseInterfaceExtends());\n                } while (this.eat(n.comma));\n              }\n\n              if (this.isContextual("implements")) {\n                this.next();\n\n                do {\n                  t.implements.push(this.flowParseInterfaceExtends());\n                } while (this.eat(n.comma));\n              }\n\n              t.body = this.flowParseObjectType({\n                allowStatic: e,\n                allowExact: !1,\n                allowSpread: !1,\n                allowProto: e,\n                allowInexact: !1\n              });\n            }\n          }, {\n            key: "flowParseInterfaceExtends",\n            value: function flowParseInterfaceExtends() {\n              var t = this.startNode();\n              return t.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterInstantiation() : t.typeParameters = null, this.finishNode(t, "InterfaceExtends");\n            }\n          }, {\n            key: "flowParseInterface",\n            value: function flowParseInterface(t) {\n              return this.flowParseInterfaceish(t), this.finishNode(t, "InterfaceDeclaration");\n            }\n          }, {\n            key: "checkNotUnderscore",\n            value: function checkNotUnderscore(t) {\n              "_" === t && this.raise(this.state.start, j.UnexpectedReservedUnderscore);\n            }\n          }, {\n            key: "checkReservedType",\n            value: function checkReservedType(t, e, s) {\n              _.has(t) && this.raise(e, s ? j.AssignReservedType : j.UnexpectedReservedType, t);\n            }\n          }, {\n            key: "flowParseRestrictedIdentifier",\n            value: function flowParseRestrictedIdentifier(t, e) {\n              return this.checkReservedType(this.state.value, this.state.start, e), this.parseIdentifier(t);\n            }\n          }, {\n            key: "flowParseTypeAlias",\n            value: function flowParseTypeAlias(t) {\n              return t.id = this.flowParseRestrictedIdentifier(!1, !0), this.scope.declareName(t.id.name, 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.right = this.flowParseTypeInitialiser(n.eq), this.semicolon(), this.finishNode(t, "TypeAlias");\n            }\n          }, {\n            key: "flowParseOpaqueType",\n            value: function flowParseOpaqueType(t, e) {\n              return this.expectContextual("type"), t.id = this.flowParseRestrictedIdentifier(!0, !0), this.scope.declareName(t.id.name, 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.supertype = null, this.match(n.colon) && (t.supertype = this.flowParseTypeInitialiser(n.colon)), t.impltype = null, e || (t.impltype = this.flowParseTypeInitialiser(n.eq)), this.semicolon(), this.finishNode(t, "OpaqueType");\n            }\n          }, {\n            key: "flowParseTypeParameter",\n            value: function flowParseTypeParameter() {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n              var e = this.state.start,\n                  s = this.startNode(),\n                  i = this.flowParseVariance(),\n                  r = this.flowParseTypeAnnotatableIdentifier();\n              return s.name = r.name, s.variance = i, s.bound = r.typeAnnotation, this.match(n.eq) ? (this.eat(n.eq), s.default = this.flowParseType()) : t && this.raise(e, j.MissingTypeParamDefault), this.finishNode(s, "TypeParameter");\n            }\n          }, {\n            key: "flowParseTypeParameterDeclaration",\n            value: function flowParseTypeParameterDeclaration() {\n              var t = this.state.inType,\n                  e = this.startNode();\n              e.params = [], this.state.inType = !0, this.isRelational("<") || this.match(n.jsxTagStart) ? this.next() : this.unexpected();\n              var s = !1;\n\n              do {\n                var _t14 = this.flowParseTypeParameter(s);\n\n                e.params.push(_t14), _t14.default && (s = !0), this.isRelational(">") || this.expect(n.comma);\n              } while (!this.isRelational(">"));\n\n              return this.expectRelational(">"), this.state.inType = t, this.finishNode(e, "TypeParameterDeclaration");\n            }\n          }, {\n            key: "flowParseTypeParameterInstantiation",\n            value: function flowParseTypeParameterInstantiation() {\n              var t = this.startNode(),\n                  e = this.state.inType;\n              t.params = [], this.state.inType = !0, this.expectRelational("<");\n              var s = this.state.noAnonFunctionType;\n\n              for (this.state.noAnonFunctionType = !1; !this.isRelational(">");) {\n                t.params.push(this.flowParseType()), this.isRelational(">") || this.expect(n.comma);\n              }\n\n              return this.state.noAnonFunctionType = s, this.expectRelational(">"), this.state.inType = e, this.finishNode(t, "TypeParameterInstantiation");\n            }\n          }, {\n            key: "flowParseTypeParameterInstantiationCallOrNew",\n            value: function flowParseTypeParameterInstantiationCallOrNew() {\n              var t = this.startNode(),\n                  e = this.state.inType;\n\n              for (t.params = [], this.state.inType = !0, this.expectRelational("<"); !this.isRelational(">");) {\n                t.params.push(this.flowParseTypeOrImplicitInstantiation()), this.isRelational(">") || this.expect(n.comma);\n              }\n\n              return this.expectRelational(">"), this.state.inType = e, this.finishNode(t, "TypeParameterInstantiation");\n            }\n          }, {\n            key: "flowParseInterfaceType",\n            value: function flowParseInterfaceType() {\n              var t = this.startNode();\n              if (this.expectContextual("interface"), t.extends = [], this.eat(n._extends)) do {\n                t.extends.push(this.flowParseInterfaceExtends());\n              } while (this.eat(n.comma));\n              return t.body = this.flowParseObjectType({\n                allowStatic: !1,\n                allowExact: !1,\n                allowSpread: !1,\n                allowProto: !1,\n                allowInexact: !1\n              }), this.finishNode(t, "InterfaceTypeAnnotation");\n            }\n          }, {\n            key: "flowParseObjectPropertyKey",\n            value: function flowParseObjectPropertyKey() {\n              return this.match(n.num) || this.match(n.string) ? this.parseExprAtom() : this.parseIdentifier(!0);\n            }\n          }, {\n            key: "flowParseObjectTypeIndexer",\n            value: function flowParseObjectTypeIndexer(t, e, s) {\n              return t.static = e, this.lookahead().type === n.colon ? (t.id = this.flowParseObjectPropertyKey(), t.key = this.flowParseTypeInitialiser()) : (t.id = null, t.key = this.flowParseType()), this.expect(n.bracketR), t.value = this.flowParseTypeInitialiser(), t.variance = s, this.finishNode(t, "ObjectTypeIndexer");\n            }\n          }, {\n            key: "flowParseObjectTypeInternalSlot",\n            value: function flowParseObjectTypeInternalSlot(t, e) {\n              return t.static = e, t.id = this.flowParseObjectPropertyKey(), this.expect(n.bracketR), this.expect(n.bracketR), this.isRelational("<") || this.match(n.parenL) ? (t.method = !0, t.optional = !1, t.value = this.flowParseObjectTypeMethodish(this.startNodeAt(t.start, t.loc.start))) : (t.method = !1, this.eat(n.question) && (t.optional = !0), t.value = this.flowParseTypeInitialiser()), this.finishNode(t, "ObjectTypeInternalSlot");\n            }\n          }, {\n            key: "flowParseObjectTypeMethodish",\n            value: function flowParseObjectTypeMethodish(t) {\n              for (t.params = [], t.rest = null, t.typeParameters = null, this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(n.parenL); !this.match(n.parenR) && !this.match(n.ellipsis);) {\n                t.params.push(this.flowParseFunctionTypeParam()), this.match(n.parenR) || this.expect(n.comma);\n              }\n\n              return this.eat(n.ellipsis) && (t.rest = this.flowParseFunctionTypeParam()), this.expect(n.parenR), t.returnType = this.flowParseTypeInitialiser(), this.finishNode(t, "FunctionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseObjectTypeCallProperty",\n            value: function flowParseObjectTypeCallProperty(t, e) {\n              var s = this.startNode();\n              return t.static = e, t.value = this.flowParseObjectTypeMethodish(s), this.finishNode(t, "ObjectTypeCallProperty");\n            }\n          }, {\n            key: "flowParseObjectType",\n            value: function flowParseObjectType(_ref4) {\n              var t = _ref4.allowStatic,\n                  e = _ref4.allowExact,\n                  s = _ref4.allowSpread,\n                  i = _ref4.allowProto,\n                  r = _ref4.allowInexact;\n              var a = this.state.inType;\n              this.state.inType = !0;\n              var o = this.startNode();\n              var h, p;\n              o.callProperties = [], o.properties = [], o.indexers = [], o.internalSlots = [];\n              var c = !1;\n\n              for (e && this.match(n.braceBarL) ? (this.expect(n.braceBarL), h = n.braceBarR, p = !0) : (this.expect(n.braceL), h = n.braceR, p = !1), o.exact = p; !this.match(h);) {\n                var _e10 = !1,\n                    _a = null,\n                    _h = null;\n\n                var _u = this.startNode();\n\n                if (i && this.isContextual("proto")) {\n                  var _e11 = this.lookahead();\n\n                  _e11.type !== n.colon && _e11.type !== n.question && (this.next(), _a = this.state.start, t = !1);\n                }\n\n                if (t && this.isContextual("static")) {\n                  var _t15 = this.lookahead();\n\n                  _t15.type !== n.colon && _t15.type !== n.question && (this.next(), _e10 = !0);\n                }\n\n                var _l = this.flowParseVariance();\n\n                if (this.eat(n.bracketL)) null != _a && this.unexpected(_a), this.eat(n.bracketL) ? (_l && this.unexpected(_l.start), o.internalSlots.push(this.flowParseObjectTypeInternalSlot(_u, _e10))) : o.indexers.push(this.flowParseObjectTypeIndexer(_u, _e10, _l));else if (this.match(n.parenL) || this.isRelational("<")) null != _a && this.unexpected(_a), _l && this.unexpected(_l.start), o.callProperties.push(this.flowParseObjectTypeCallProperty(_u, _e10));else {\n                  var _t16 = "init";\n\n                  if (this.isContextual("get") || this.isContextual("set")) {\n                    var _e12 = this.lookahead();\n\n                    _e12.type !== n.name && _e12.type !== n.string && _e12.type !== n.num || (_t16 = this.state.value, this.next());\n                  }\n\n                  var _i8 = this.flowParseObjectTypeProperty(_u, _e10, _a, _l, _t16, s, null != r ? r : !p);\n\n                  null === _i8 ? (c = !0, _h = this.state.lastTokStart) : o.properties.push(_i8);\n                }\n                this.flowObjectTypeSemicolon(), !_h || this.match(n.braceR) || this.match(n.braceBarR) || this.raise(_h, j.UnexpectedExplicitInexactInObject);\n              }\n\n              this.expect(h), s && (o.inexact = c);\n              var u = this.finishNode(o, "ObjectTypeAnnotation");\n              return this.state.inType = a, u;\n            }\n          }, {\n            key: "flowParseObjectTypeProperty",\n            value: function flowParseObjectTypeProperty(t, e, s, i, r, a, o) {\n              if (this.eat(n.ellipsis)) {\n                return this.match(n.comma) || this.match(n.semi) || this.match(n.braceR) || this.match(n.braceBarR) ? (a ? o || this.raise(this.state.lastTokStart, j.InexactInsideExact) : this.raise(this.state.lastTokStart, j.InexactInsideNonObject), i && this.raise(i.start, j.InexactVariance), null) : (a || this.raise(this.state.lastTokStart, j.UnexpectedSpreadType), null != s && this.unexpected(s), i && this.raise(i.start, j.SpreadVariance), t.argument = this.flowParseType(), this.finishNode(t, "ObjectTypeSpreadProperty"));\n              }\n\n              {\n                t.key = this.flowParseObjectPropertyKey(), t.static = e, t.proto = null != s, t.kind = r;\n\n                var _a2 = !1;\n\n                return this.isRelational("<") || this.match(n.parenL) ? (t.method = !0, null != s && this.unexpected(s), i && this.unexpected(i.start), t.value = this.flowParseObjectTypeMethodish(this.startNodeAt(t.start, t.loc.start)), "get" !== r && "set" !== r || this.flowCheckGetterSetterParams(t)) : ("init" !== r && this.unexpected(), t.method = !1, this.eat(n.question) && (_a2 = !0), t.value = this.flowParseTypeInitialiser(), t.variance = i), t.optional = _a2, this.finishNode(t, "ObjectTypeProperty");\n              }\n            }\n          }, {\n            key: "flowCheckGetterSetterParams",\n            value: function flowCheckGetterSetterParams(t) {\n              var e = "get" === t.kind ? 0 : 1,\n                  s = t.start;\n              t.value.params.length + (t.value.rest ? 1 : 0) !== e && ("get" === t.kind ? this.raise(s, f.BadGetterArity) : this.raise(s, f.BadSetterArity)), "set" === t.kind && t.value.rest && this.raise(s, f.BadSetterRestParameter);\n            }\n          }, {\n            key: "flowObjectTypeSemicolon",\n            value: function flowObjectTypeSemicolon() {\n              this.eat(n.semi) || this.eat(n.comma) || this.match(n.braceR) || this.match(n.braceBarR) || this.unexpected();\n            }\n          }, {\n            key: "flowParseQualifiedTypeIdentifier",\n            value: function flowParseQualifiedTypeIdentifier(t, e, s) {\n              t = t || this.state.start, e = e || this.state.startLoc;\n              var i = s || this.flowParseRestrictedIdentifier(!0);\n\n              for (; this.eat(n.dot);) {\n                var _s9 = this.startNodeAt(t, e);\n\n                _s9.qualification = i, _s9.id = this.flowParseRestrictedIdentifier(!0), i = this.finishNode(_s9, "QualifiedTypeIdentifier");\n              }\n\n              return i;\n            }\n          }, {\n            key: "flowParseGenericType",\n            value: function flowParseGenericType(t, e, s) {\n              var i = this.startNodeAt(t, e);\n              return i.typeParameters = null, i.id = this.flowParseQualifiedTypeIdentifier(t, e, s), this.isRelational("<") && (i.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(i, "GenericTypeAnnotation");\n            }\n          }, {\n            key: "flowParseTypeofType",\n            value: function flowParseTypeofType() {\n              var t = this.startNode();\n              return this.expect(n._typeof), t.argument = this.flowParsePrimaryType(), this.finishNode(t, "TypeofTypeAnnotation");\n            }\n          }, {\n            key: "flowParseTupleType",\n            value: function flowParseTupleType() {\n              var t = this.startNode();\n\n              for (t.types = [], this.expect(n.bracketL); this.state.pos < this.length && !this.match(n.bracketR) && (t.types.push(this.flowParseType()), !this.match(n.bracketR));) {\n                this.expect(n.comma);\n              }\n\n              return this.expect(n.bracketR), this.finishNode(t, "TupleTypeAnnotation");\n            }\n          }, {\n            key: "flowParseFunctionTypeParam",\n            value: function flowParseFunctionTypeParam() {\n              var t = null,\n                  e = !1,\n                  s = null;\n              var i = this.startNode(),\n                  r = this.lookahead();\n              return r.type === n.colon || r.type === n.question ? (t = this.parseIdentifier(), this.eat(n.question) && (e = !0), s = this.flowParseTypeInitialiser()) : s = this.flowParseType(), i.name = t, i.optional = e, i.typeAnnotation = s, this.finishNode(i, "FunctionTypeParam");\n            }\n          }, {\n            key: "reinterpretTypeAsFunctionTypeParam",\n            value: function reinterpretTypeAsFunctionTypeParam(t) {\n              var e = this.startNodeAt(t.start, t.loc.start);\n              return e.name = null, e.optional = !1, e.typeAnnotation = t, this.finishNode(e, "FunctionTypeParam");\n            }\n          }, {\n            key: "flowParseFunctionTypeParams",\n            value: function flowParseFunctionTypeParams() {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n              var e = null;\n\n              for (; !this.match(n.parenR) && !this.match(n.ellipsis);) {\n                t.push(this.flowParseFunctionTypeParam()), this.match(n.parenR) || this.expect(n.comma);\n              }\n\n              return this.eat(n.ellipsis) && (e = this.flowParseFunctionTypeParam()), {\n                params: t,\n                rest: e\n              };\n            }\n          }, {\n            key: "flowIdentToTypeAnnotation",\n            value: function flowIdentToTypeAnnotation(t, e, s, i) {\n              switch (i.name) {\n                case "any":\n                  return this.finishNode(s, "AnyTypeAnnotation");\n\n                case "bool":\n                case "boolean":\n                  return this.finishNode(s, "BooleanTypeAnnotation");\n\n                case "mixed":\n                  return this.finishNode(s, "MixedTypeAnnotation");\n\n                case "empty":\n                  return this.finishNode(s, "EmptyTypeAnnotation");\n\n                case "number":\n                  return this.finishNode(s, "NumberTypeAnnotation");\n\n                case "string":\n                  return this.finishNode(s, "StringTypeAnnotation");\n\n                case "symbol":\n                  return this.finishNode(s, "SymbolTypeAnnotation");\n\n                default:\n                  return this.checkNotUnderscore(i.name), this.flowParseGenericType(t, e, i);\n              }\n            }\n          }, {\n            key: "flowParsePrimaryType",\n            value: function flowParsePrimaryType() {\n              var t = this.state.start,\n                  e = this.state.startLoc,\n                  s = this.startNode();\n              var i,\n                  r,\n                  a = !1;\n              var o = this.state.noAnonFunctionType;\n\n              switch (this.state.type) {\n                case n.name:\n                  return this.isContextual("interface") ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(t, e, s, this.parseIdentifier());\n\n                case n.braceL:\n                  return this.flowParseObjectType({\n                    allowStatic: !1,\n                    allowExact: !1,\n                    allowSpread: !0,\n                    allowProto: !1,\n                    allowInexact: !0\n                  });\n\n                case n.braceBarL:\n                  return this.flowParseObjectType({\n                    allowStatic: !1,\n                    allowExact: !0,\n                    allowSpread: !0,\n                    allowProto: !1,\n                    allowInexact: !1\n                  });\n\n                case n.bracketL:\n                  return this.state.noAnonFunctionType = !1, r = this.flowParseTupleType(), this.state.noAnonFunctionType = o, r;\n\n                case n.relational:\n                  if ("<" === this.state.value) return s.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(n.parenL), i = this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, this.expect(n.parenR), this.expect(n.arrow), s.returnType = this.flowParseType(), this.finishNode(s, "FunctionTypeAnnotation");\n                  break;\n\n                case n.parenL:\n                  if (this.next(), !this.match(n.parenR) && !this.match(n.ellipsis)) if (this.match(n.name)) {\n                    var _t17 = this.lookahead().type;\n                    a = _t17 !== n.question && _t17 !== n.colon;\n                  } else a = !0;\n\n                  if (a) {\n                    if (this.state.noAnonFunctionType = !1, r = this.flowParseType(), this.state.noAnonFunctionType = o, this.state.noAnonFunctionType || !(this.match(n.comma) || this.match(n.parenR) && this.lookahead().type === n.arrow)) return this.expect(n.parenR), r;\n                    this.eat(n.comma);\n                  }\n\n                  return i = r ? this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(r)]) : this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, this.expect(n.parenR), this.expect(n.arrow), s.returnType = this.flowParseType(), s.typeParameters = null, this.finishNode(s, "FunctionTypeAnnotation");\n\n                case n.string:\n                  return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");\n\n                case n._true:\n                case n._false:\n                  return s.value = this.match(n._true), this.next(), this.finishNode(s, "BooleanLiteralTypeAnnotation");\n\n                case n.plusMin:\n                  if ("-" === this.state.value) {\n                    if (this.next(), this.match(n.num)) return this.parseLiteral(-this.state.value, "NumberLiteralTypeAnnotation", s.start, s.loc.start);\n                    if (this.match(n.bigint)) return this.parseLiteral(-this.state.value, "BigIntLiteralTypeAnnotation", s.start, s.loc.start);\n                    throw this.raise(this.state.start, j.UnexpectedSubtractionOperand);\n                  }\n\n                  throw this.unexpected();\n\n                case n.num:\n                  return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");\n\n                case n.bigint:\n                  return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");\n\n                case n._void:\n                  return this.next(), this.finishNode(s, "VoidTypeAnnotation");\n\n                case n._null:\n                  return this.next(), this.finishNode(s, "NullLiteralTypeAnnotation");\n\n                case n._this:\n                  return this.next(), this.finishNode(s, "ThisTypeAnnotation");\n\n                case n.star:\n                  return this.next(), this.finishNode(s, "ExistsTypeAnnotation");\n\n                default:\n                  if ("typeof" === this.state.type.keyword) return this.flowParseTypeofType();\n\n                  if (this.state.type.keyword) {\n                    var _t18 = this.state.type.label;\n                    return this.next(), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "createIdentifier", this).call(this, s, _t18);\n                  }\n\n              }\n\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParsePostfixType",\n            value: function flowParsePostfixType() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              var s = this.flowParsePrimaryType();\n\n              for (; this.match(n.bracketL) && !this.canInsertSemicolon();) {\n                var _i9 = this.startNodeAt(t, e);\n\n                _i9.elementType = s, this.expect(n.bracketL), this.expect(n.bracketR), s = this.finishNode(_i9, "ArrayTypeAnnotation");\n              }\n\n              return s;\n            }\n          }, {\n            key: "flowParsePrefixType",\n            value: function flowParsePrefixType() {\n              var t = this.startNode();\n              return this.eat(n.question) ? (t.typeAnnotation = this.flowParsePrefixType(), this.finishNode(t, "NullableTypeAnnotation")) : this.flowParsePostfixType();\n            }\n          }, {\n            key: "flowParseAnonFunctionWithoutParens",\n            value: function flowParseAnonFunctionWithoutParens() {\n              var t = this.flowParsePrefixType();\n\n              if (!this.state.noAnonFunctionType && this.eat(n.arrow)) {\n                var _e13 = this.startNodeAt(t.start, t.loc.start);\n\n                return _e13.params = [this.reinterpretTypeAsFunctionTypeParam(t)], _e13.rest = null, _e13.returnType = this.flowParseType(), _e13.typeParameters = null, this.finishNode(_e13, "FunctionTypeAnnotation");\n              }\n\n              return t;\n            }\n          }, {\n            key: "flowParseIntersectionType",\n            value: function flowParseIntersectionType() {\n              var t = this.startNode();\n              this.eat(n.bitwiseAND);\n              var e = this.flowParseAnonFunctionWithoutParens();\n\n              for (t.types = [e]; this.eat(n.bitwiseAND);) {\n                t.types.push(this.flowParseAnonFunctionWithoutParens());\n              }\n\n              return 1 === t.types.length ? e : this.finishNode(t, "IntersectionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseUnionType",\n            value: function flowParseUnionType() {\n              var t = this.startNode();\n              this.eat(n.bitwiseOR);\n              var e = this.flowParseIntersectionType();\n\n              for (t.types = [e]; this.eat(n.bitwiseOR);) {\n                t.types.push(this.flowParseIntersectionType());\n              }\n\n              return 1 === t.types.length ? e : this.finishNode(t, "UnionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseType",\n            value: function flowParseType() {\n              var t = this.state.inType;\n              this.state.inType = !0;\n              var e = this.flowParseUnionType();\n              return this.state.inType = t, this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType, e;\n            }\n          }, {\n            key: "flowParseTypeOrImplicitInstantiation",\n            value: function flowParseTypeOrImplicitInstantiation() {\n              if (this.state.type === n.name && "_" === this.state.value) {\n                var _t19 = this.state.start,\n                    _e14 = this.state.startLoc,\n                    _s10 = this.parseIdentifier();\n\n                return this.flowParseGenericType(_t19, _e14, _s10);\n              }\n\n              return this.flowParseType();\n            }\n          }, {\n            key: "flowParseTypeAnnotation",\n            value: function flowParseTypeAnnotation() {\n              var t = this.startNode();\n              return t.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(t, "TypeAnnotation");\n            }\n          }, {\n            key: "flowParseTypeAnnotatableIdentifier",\n            value: function flowParseTypeAnnotatableIdentifier(t) {\n              var e = t ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n              return this.match(n.colon) && (e.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(e)), e;\n            }\n          }, {\n            key: "typeCastToParameter",\n            value: function typeCastToParameter(t) {\n              return t.expression.typeAnnotation = t.typeAnnotation, this.resetEndLocation(t.expression, t.typeAnnotation.end, t.typeAnnotation.loc.end), t.expression;\n            }\n          }, {\n            key: "flowParseVariance",\n            value: function flowParseVariance() {\n              var t = null;\n              return this.match(n.plusMin) && (t = this.startNode(), "+" === this.state.value ? t.kind = "plus" : t.kind = "minus", this.next(), this.finishNode(t, "Variance")), t;\n            }\n          }, {\n            key: "parseFunctionBody",\n            value: function parseFunctionBody(t, e) {\n              var _this6 = this;\n\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              return e ? this.forwardNoArrowParamsConversionAt(t, function () {\n                return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBody", _this6).call(_this6, t, !0, s);\n              }) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBody", this).call(this, t, !1, s);\n            }\n          }, {\n            key: "parseFunctionBodyAndFinish",\n            value: function parseFunctionBodyAndFinish(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n\n              if (this.match(n.colon)) {\n                var _this$flowParseTypeAn3, _this$flowParseTypeAn4;\n\n                var _e15 = this.startNode();\n\n                (_this$flowParseTypeAn3 = this.flowParseTypeAndPredicateInitialiser(), _this$flowParseTypeAn4 = (0, _slicedToArray2.default)(_this$flowParseTypeAn3, 2), _e15.typeAnnotation = _this$flowParseTypeAn4[0], t.predicate = _this$flowParseTypeAn4[1], _this$flowParseTypeAn3), t.returnType = _e15.typeAnnotation ? this.finishNode(_e15, "TypeAnnotation") : null;\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBodyAndFinish", this).call(this, t, e, s);\n            }\n          }, {\n            key: "parseStatement",\n            value: function parseStatement(t, e) {\n              if (this.state.strict && this.match(n.name) && "interface" === this.state.value) {\n                var _t20 = this.startNode();\n\n                return this.next(), this.flowParseInterface(_t20);\n              }\n\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                var _t21 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_t21);\n              }\n\n              {\n                var _s11 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseStatement", this).call(this, t, e);\n\n                return void 0 !== this.flowPragma || this.isValidDirective(_s11) || (this.flowPragma = null), _s11;\n              }\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              if ("Identifier" === e.type) if ("declare" === e.name) {\n                if (this.match(n._class) || this.match(n.name) || this.match(n._function) || this.match(n._var) || this.match(n._export)) return this.flowParseDeclare(t);\n              } else if (this.match(n.name)) {\n                if ("interface" === e.name) return this.flowParseInterface(t);\n                if ("type" === e.name) return this.flowParseTypeAlias(t);\n                if ("opaque" === e.name) return this.flowParseOpaqueType(t, !1);\n              }\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExpressionStatement", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseExportDeclaration",\n            value: function shouldParseExportDeclaration() {\n              return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || this.shouldParseEnums() && this.isContextual("enum") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseExportDeclaration", this).call(this);\n            }\n          }, {\n            key: "isExportDefaultSpecifier",\n            value: function isExportDefaultSpecifier() {\n              return (!this.match(n.name) || !("type" === this.state.value || "interface" === this.state.value || "opaque" === this.state.value || this.shouldParseEnums() && "enum" === this.state.value)) && (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isExportDefaultSpecifier", this).call(this);\n            }\n          }, {\n            key: "parseExportDefaultExpression",\n            value: function parseExportDefaultExpression() {\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                var _t22 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_t22);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExportDefaultExpression", this).call(this);\n            }\n          }, {\n            key: "parseConditional",\n            value: function parseConditional(t, e, s, i, r) {\n              var _this7 = this;\n\n              if (!this.match(n.question)) return t;\n\n              if (r) {\n                var _a3 = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseConditional", _this7).call(_this7, t, e, s, i);\n                });\n\n                return _a3.node ? (_a3.error && (this.state = _a3.failState), _a3.node) : (r.start = _a3.error.pos || this.state.start, t);\n              }\n\n              this.expect(n.question);\n              var a = this.state.clone(),\n                  o = this.state.noArrowAt,\n                  h = this.startNodeAt(s, i);\n\n              var _this$tryParseConditi = this.tryParseConditionalConsequent(),\n                  p = _this$tryParseConditi.consequent,\n                  c = _this$tryParseConditi.failed,\n                  _this$getArrowLikeExp = this.getArrowLikeExpressions(p),\n                  _this$getArrowLikeExp2 = (0, _slicedToArray2.default)(_this$getArrowLikeExp, 2),\n                  u = _this$getArrowLikeExp2[0],\n                  l = _this$getArrowLikeExp2[1];\n\n              if (c || l.length > 0) {\n                var _this$tryParseConditi3;\n\n                var _t23 = (0, _toConsumableArray2.default)(o);\n\n                if (l.length > 0) {\n                  var _this$tryParseConditi2, _this$getArrowLikeExp3, _this$getArrowLikeExp4;\n\n                  this.state = a, this.state.noArrowAt = _t23;\n\n                  for (var _e16 = 0; _e16 < l.length; _e16++) {\n                    _t23.push(l[_e16].start);\n                  }\n\n                  (_this$tryParseConditi2 = this.tryParseConditionalConsequent(), p = _this$tryParseConditi2.consequent, c = _this$tryParseConditi2.failed, _this$tryParseConditi2), (_this$getArrowLikeExp3 = this.getArrowLikeExpressions(p), _this$getArrowLikeExp4 = (0, _slicedToArray2.default)(_this$getArrowLikeExp3, 2), u = _this$getArrowLikeExp4[0], l = _this$getArrowLikeExp4[1], _this$getArrowLikeExp3);\n                }\n\n                c && u.length > 1 && this.raise(a.start, j.AmbiguousConditionalArrow), c && 1 === u.length && (this.state = a, this.state.noArrowAt = _t23.concat(u[0].start), (_this$tryParseConditi3 = this.tryParseConditionalConsequent(), p = _this$tryParseConditi3.consequent, c = _this$tryParseConditi3.failed, _this$tryParseConditi3));\n              }\n\n              return this.getArrowLikeExpressions(p, !0), this.state.noArrowAt = o, this.expect(n.colon), h.test = t, h.consequent = p, h.alternate = this.forwardNoArrowParamsConversionAt(h, function () {\n                return _this7.parseMaybeAssign(e, void 0, void 0, void 0);\n              }), this.finishNode(h, "ConditionalExpression");\n            }\n          }, {\n            key: "tryParseConditionalConsequent",\n            value: function tryParseConditionalConsequent() {\n              this.state.noArrowParamsConversionAt.push(this.state.start);\n              var t = this.parseMaybeAssign(),\n                  e = !this.match(n.colon);\n              return this.state.noArrowParamsConversionAt.pop(), {\n                consequent: t,\n                failed: e\n              };\n            }\n          }, {\n            key: "getArrowLikeExpressions",\n            value: function getArrowLikeExpressions(t, e) {\n              var _this8 = this;\n\n              var s = [t],\n                  i = [];\n\n              for (; 0 !== s.length;) {\n                var _t24 = s.pop();\n\n                "ArrowFunctionExpression" === _t24.type ? (_t24.typeParameters || !_t24.returnType ? this.finishArrowValidation(_t24) : i.push(_t24), s.push(_t24.body)) : "ConditionalExpression" === _t24.type && (s.push(_t24.consequent), s.push(_t24.alternate));\n              }\n\n              return e ? (i.forEach(function (t) {\n                return _this8.finishArrowValidation(t);\n              }), [i, []]) : function (t, e) {\n                var s = [],\n                    i = [];\n\n                for (var _r4 = 0; _r4 < t.length; _r4++) {\n                  (e(t[_r4], _r4, t) ? s : i).push(t[_r4]);\n                }\n\n                return [s, i];\n              }(i, function (t) {\n                return t.params.every(function (t) {\n                  return _this8.isAssignable(t, !0);\n                });\n              });\n            }\n          }, {\n            key: "finishArrowValidation",\n            value: function finishArrowValidation(t) {\n              var e;\n              this.toAssignableList(t.params, null == (e = t.extra) ? void 0 : e.trailingComma), this.scope.enter(6), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkParams", this).call(this, t, !1, !0), this.scope.exit();\n            }\n          }, {\n            key: "forwardNoArrowParamsConversionAt",\n            value: function forwardNoArrowParamsConversionAt(t, e) {\n              var s;\n              return -1 !== this.state.noArrowParamsConversionAt.indexOf(t.start) ? (this.state.noArrowParamsConversionAt.push(this.state.start), s = e(), this.state.noArrowParamsConversionAt.pop()) : s = e(), s;\n            }\n          }, {\n            key: "parseParenItem",\n            value: function parseParenItem(t, e, s) {\n              if (t = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseParenItem", this).call(this, t, e, s), this.eat(n.question) && (t.optional = !0, this.resetEndLocation(t)), this.match(n.colon)) {\n                var _i10 = this.startNodeAt(e, s);\n\n                return _i10.expression = t, _i10.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(_i10, "TypeCastExpression");\n              }\n\n              return t;\n            }\n          }, {\n            key: "assertModuleNodeAllowed",\n            value: function assertModuleNodeAllowed(t) {\n              "ImportDeclaration" === t.type && ("type" === t.importKind || "typeof" === t.importKind) || "ExportNamedDeclaration" === t.type && "type" === t.exportKind || "ExportAllDeclaration" === t.type && "type" === t.exportKind || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "assertModuleNodeAllowed", this).call(this, t);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExport", this).call(this, t);\n              return "ExportNamedDeclaration" !== e.type && "ExportAllDeclaration" !== e.type || (e.exportKind = e.exportKind || "value"), e;\n            }\n          }, {\n            key: "parseExportDeclaration",\n            value: function parseExportDeclaration(t) {\n              if (this.isContextual("type")) {\n                t.exportKind = "type";\n\n                var _e17 = this.startNode();\n\n                return this.next(), this.match(n.braceL) ? (t.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(t), null) : this.flowParseTypeAlias(_e17);\n              }\n\n              if (this.isContextual("opaque")) {\n                t.exportKind = "type";\n\n                var _e18 = this.startNode();\n\n                return this.next(), this.flowParseOpaqueType(_e18, !1);\n              }\n\n              if (this.isContextual("interface")) {\n                t.exportKind = "type";\n\n                var _e19 = this.startNode();\n\n                return this.next(), this.flowParseInterface(_e19);\n              }\n\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                t.exportKind = "value";\n\n                var _e20 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_e20);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExportDeclaration", this).call(this, t);\n            }\n          }, {\n            key: "eatExportStar",\n            value: function eatExportStar(t) {\n              return !!(0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "eatExportStar", this).apply(this, arguments) || !(!this.isContextual("type") || this.lookahead().type !== n.star) && (t.exportKind = "type", this.next(), this.next(), !0);\n            }\n          }, {\n            key: "maybeParseExportNamespaceSpecifier",\n            value: function maybeParseExportNamespaceSpecifier(t) {\n              var e = this.state.start,\n                  s = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "maybeParseExportNamespaceSpecifier", this).call(this, t);\n              return s && "type" === t.exportKind && this.unexpected(e), s;\n            }\n          }, {\n            key: "parseClassId",\n            value: function parseClassId(t, e, s) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassId", this).call(this, t, e, s), this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration());\n            }\n          }, {\n            key: "parseClassMember",\n            value: function parseClassMember(t, e, s, i) {\n              var r = this.state.start;\n\n              if (this.isContextual("declare")) {\n                if (this.parseClassMemberFromModifier(t, e)) return;\n                e.declare = !0;\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassMember", this).call(this, t, e, s, i), e.declare && ("ClassProperty" !== e.type && "ClassPrivateProperty" !== e.type ? this.raise(r, j.DeclareClassElement) : e.value && this.raise(e.value.start, j.DeclareClassFieldInitializer));\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              return 123 === t && 124 === e ? this.finishOp(n.braceBarL, 2) : !this.state.inType || 62 !== t && 60 !== t ? function (t, e) {\n                return 64 === t && 64 === e;\n              }(t, e) ? (this.state.isIterator = !0, (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readWord", this).call(this)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "getTokenFromCode", this).call(this, t) : this.finishOp(n.relational, 1);\n            }\n          }, {\n            key: "isAssignable",\n            value: function isAssignable(t, e) {\n              var _this9 = this;\n\n              switch (t.type) {\n                case "Identifier":\n                case "ObjectPattern":\n                case "ArrayPattern":\n                case "AssignmentPattern":\n                  return !0;\n\n                case "ObjectExpression":\n                  {\n                    var _e21 = t.properties.length - 1;\n\n                    return t.properties.every(function (t, s) {\n                      return "ObjectMethod" !== t.type && (s === _e21 || "SpreadElement" === t.type) && _this9.isAssignable(t);\n                    });\n                  }\n\n                case "ObjectProperty":\n                  return this.isAssignable(t.value);\n\n                case "SpreadElement":\n                  return this.isAssignable(t.argument);\n\n                case "ArrayExpression":\n                  return t.elements.every(function (t) {\n                    return _this9.isAssignable(t);\n                  });\n\n                case "AssignmentExpression":\n                  return "=" === t.operator;\n\n                case "ParenthesizedExpression":\n                case "TypeCastExpression":\n                  return this.isAssignable(t.expression);\n\n                case "MemberExpression":\n                case "OptionalMemberExpression":\n                  return !e;\n\n                default:\n                  return !1;\n              }\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return "TypeCastExpression" === t.type ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignable", this).call(this, this.typeCastToParameter(t)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignable", this).call(this, t);\n            }\n          }, {\n            key: "toAssignableList",\n            value: function toAssignableList(t, e) {\n              for (var _e22 = 0; _e22 < t.length; _e22++) {\n                var _s12 = t[_e22];\n                _s12 && "TypeCastExpression" === _s12.type && (t[_e22] = this.typeCastToParameter(_s12));\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignableList", this).call(this, t, e);\n            }\n          }, {\n            key: "toReferencedList",\n            value: function toReferencedList(t, e) {\n              for (var _s13 = 0; _s13 < t.length; _s13++) {\n                var _i11 = t[_s13];\n                !_i11 || "TypeCastExpression" !== _i11.type || _i11.extra && _i11.extra.parenthesized || !(t.length > 1) && e || this.raise(_i11.typeAnnotation.start, j.TypeCastInPattern);\n              }\n\n              return t;\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n              if ("TypeCastExpression" !== t.type) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkLVal", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassProperty",\n            value: function parseClassProperty(t) {\n              return this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassProperty", this).call(this, t);\n            }\n          }, {\n            key: "parseClassPrivateProperty",\n            value: function parseClassPrivateProperty(t) {\n              return this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassPrivateProperty", this).call(this, t);\n            }\n          }, {\n            key: "isClassMethod",\n            value: function isClassMethod() {\n              return this.isRelational("<") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isClassMethod", this).call(this);\n            }\n          }, {\n            key: "isClassProperty",\n            value: function isClassProperty() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isClassProperty", this).call(this);\n            }\n          }, {\n            key: "isNonstaticConstructor",\n            value: function isNonstaticConstructor(t) {\n              return !this.match(n.colon) && (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isNonstaticConstructor", this).call(this, t);\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              e.variance && this.unexpected(e.variance.start), delete e.variance, this.isRelational("<") && (e.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "pushClassMethod", this).call(this, t, e, s, i, r, a);\n            }\n          }, {\n            key: "pushClassPrivateMethod",\n            value: function pushClassPrivateMethod(t, e, s, i) {\n              e.variance && this.unexpected(e.variance.start), delete e.variance, this.isRelational("<") && (e.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "pushClassPrivateMethod", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassSuper",\n            value: function parseClassSuper(t) {\n              if ((0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassSuper", this).call(this, t), t.superClass && this.isRelational("<") && (t.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {\n                this.next();\n\n                var _e23 = t.implements = [];\n\n                do {\n                  var _t25 = this.startNode();\n\n                  _t25.id = this.flowParseRestrictedIdentifier(!0), this.isRelational("<") ? _t25.typeParameters = this.flowParseTypeParameterInstantiation() : _t25.typeParameters = null, _e23.push(this.finishNode(_t25, "ClassImplements"));\n                } while (this.eat(n.comma));\n              }\n            }\n          }, {\n            key: "parsePropertyName",\n            value: function parsePropertyName(t, e) {\n              var s = this.flowParseVariance(),\n                  i = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parsePropertyName", this).call(this, t, e);\n              return t.variance = s, i;\n            }\n          }, {\n            key: "parseObjPropValue",\n            value: function parseObjPropValue(t, e, s, i, r, a, o, h) {\n              var p;\n              t.variance && this.unexpected(t.variance.start), delete t.variance, this.isRelational("<") && (p = this.flowParseTypeParameterDeclaration(), this.match(n.parenL) || this.unexpected()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseObjPropValue", this).call(this, t, e, s, i, r, a, o, h), p && ((t.value || t).typeParameters = p);\n            }\n          }, {\n            key: "parseAssignableListItemTypes",\n            value: function parseAssignableListItemTypes(t) {\n              return this.eat(n.question) && ("Identifier" !== t.type && this.raise(t.start, j.OptionalBindingPattern), t.optional = !0), this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), this.resetEndLocation(t), t;\n            }\n          }, {\n            key: "parseMaybeDefault",\n            value: function parseMaybeDefault(t, e, s) {\n              var i = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeDefault", this).call(this, t, e, s);\n              return "AssignmentPattern" === i.type && i.typeAnnotation && i.right.start < i.typeAnnotation.start && this.raise(i.typeAnnotation.start, j.TypeBeforeInitializer), i;\n            }\n          }, {\n            key: "shouldParseDefaultImport",\n            value: function shouldParseDefaultImport(t) {\n              return U(t) ? q(this.state) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseDefaultImport", this).call(this, t);\n            }\n          }, {\n            key: "parseImportSpecifierLocal",\n            value: function parseImportSpecifierLocal(t, e, s, i) {\n              e.local = U(t) ? this.flowParseRestrictedIdentifier(!0, !0) : this.parseIdentifier(), this.checkLVal(e.local, 9, void 0, i), t.specifiers.push(this.finishNode(e, s));\n            }\n          }, {\n            key: "maybeParseDefaultImportSpecifier",\n            value: function maybeParseDefaultImportSpecifier(t) {\n              t.importKind = "value";\n              var e = null;\n\n              if (this.match(n._typeof) ? e = "typeof" : this.isContextual("type") && (e = "type"), e) {\n                var _s14 = this.lookahead();\n\n                "type" === e && _s14.type === n.star && this.unexpected(_s14.start), (q(_s14) || _s14.type === n.braceL || _s14.type === n.star) && (this.next(), t.importKind = e);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "maybeParseDefaultImportSpecifier", this).call(this, t);\n            }\n          }, {\n            key: "parseImportSpecifier",\n            value: function parseImportSpecifier(t) {\n              var e = this.startNode(),\n                  s = this.state.start,\n                  i = this.parseIdentifier(!0);\n              var r = null;\n              "type" === i.name ? r = "type" : "typeof" === i.name && (r = "typeof");\n              var a = !1;\n\n              if (this.isContextual("as") && !this.isLookaheadContextual("as")) {\n                var _t26 = this.parseIdentifier(!0);\n\n                null === r || this.match(n.name) || this.state.type.keyword ? (e.imported = i, e.importKind = null, e.local = this.parseIdentifier()) : (e.imported = _t26, e.importKind = r, e.local = _t26.__clone());\n              } else null !== r && (this.match(n.name) || this.state.type.keyword) ? (e.imported = this.parseIdentifier(!0), e.importKind = r, this.eatContextual("as") ? e.local = this.parseIdentifier() : (a = !0, e.local = e.imported.__clone())) : (a = !0, e.imported = i, e.importKind = null, e.local = e.imported.__clone());\n\n              var o = U(t),\n                  h = U(e);\n              o && h && this.raise(s, j.ImportTypeShorthandOnlyInPureImport), (o || h) && this.checkReservedType(e.local.name, e.local.start, !0), !a || o || h || this.checkReservedWord(e.local.name, e.start, !0, !0), this.checkLVal(e.local, 9, void 0, "import specifier"), t.specifiers.push(this.finishNode(e, "ImportSpecifier"));\n            }\n          }, {\n            key: "parseFunctionParams",\n            value: function parseFunctionParams(t, e) {\n              var s = t.kind;\n              "get" !== s && "set" !== s && this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionParams", this).call(this, t, e);\n            }\n          }, {\n            key: "parseVarId",\n            value: function parseVarId(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseVarId", this).call(this, t, e), this.match(n.colon) && (t.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(t.id));\n            }\n          }, {\n            key: "parseAsyncArrowFromCallExpression",\n            value: function parseAsyncArrowFromCallExpression(t, e) {\n              if (this.match(n.colon)) {\n                var _e24 = this.state.noAnonFunctionType;\n                this.state.noAnonFunctionType = !0, t.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = _e24;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseAsyncArrowFromCallExpression", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseAsyncArrow",\n            value: function shouldParseAsyncArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseAsyncArrow", this).call(this);\n            }\n          }, {\n            key: "parseMaybeAssign",\n            value: function parseMaybeAssign(t, e, s, i) {\n              var _this10 = this;\n\n              var r,\n                  a = null;\n\n              if (this.hasPlugin("jsx") && (this.match(n.jsxTagStart) || this.isRelational("<"))) {\n                if (a = this.state.clone(), r = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", _this10).call(_this10, t, e, s, i);\n                }, a), !r.error) return r.node;\n                var _n = this.state.context;\n                _n[_n.length - 1] === x.j_oTag ? _n.length -= 2 : _n[_n.length - 1] === x.j_expr && (_n.length -= 1);\n              }\n\n              if (r && r.error || this.isRelational("<")) {\n                var _n2;\n\n                a = a || this.state.clone();\n\n                var _o = this.tryParse(function () {\n                  _n2 = _this10.flowParseTypeParameterDeclaration();\n\n                  var r = _this10.forwardNoArrowParamsConversionAt(_n2, function () {\n                    return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", _this10).call(_this10, t, e, s, i);\n                  });\n\n                  return r.typeParameters = _n2, _this10.resetStartLocationFromNode(r, _n2), r;\n                }, a),\n                    _h2 = _o.node && "ArrowFunctionExpression" === _o.node.type ? _o.node : null;\n\n                if (!_o.error && _h2) return _h2;\n                if (r && r.node) return this.state = r.failState, r.node;\n                if (_h2) return this.state = _o.failState, _h2;\n                if (r && r.thrown) throw r.error;\n                if (_o.thrown) throw _o.error;\n                throw this.raise(_n2.start, j.UnexpectedTokenAfterTypeParameter);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseArrow",\n            value: function parseArrow(t) {\n              var _this11 = this;\n\n              if (this.match(n.colon)) {\n                var _e25 = this.tryParse(function () {\n                  var _this11$flowParseType, _this11$flowParseType2;\n\n                  var e = _this11.state.noAnonFunctionType;\n                  _this11.state.noAnonFunctionType = !0;\n\n                  var s = _this11.startNode();\n\n                  return (_this11$flowParseType = _this11.flowParseTypeAndPredicateInitialiser(), _this11$flowParseType2 = (0, _slicedToArray2.default)(_this11$flowParseType, 2), s.typeAnnotation = _this11$flowParseType2[0], t.predicate = _this11$flowParseType2[1], _this11$flowParseType), _this11.state.noAnonFunctionType = e, _this11.canInsertSemicolon() && _this11.unexpected(), _this11.match(n.arrow) || _this11.unexpected(), s;\n                });\n\n                if (_e25.thrown) return null;\n                _e25.error && (this.state = _e25.failState), t.returnType = _e25.node.typeAnnotation ? this.finishNode(_e25.node, "TypeAnnotation") : null;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseArrow", this).call(this, t);\n            }\n          }, {\n            key: "shouldParseArrow",\n            value: function shouldParseArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseArrow", this).call(this);\n            }\n          }, {\n            key: "setArrowFunctionParameters",\n            value: function setArrowFunctionParameters(t, e) {\n              -1 !== this.state.noArrowParamsConversionAt.indexOf(t.start) ? t.params = e : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "setArrowFunctionParameters", this).call(this, t, e);\n            }\n          }, {\n            key: "checkParams",\n            value: function checkParams(t, e, s) {\n              if (!s || -1 === this.state.noArrowParamsConversionAt.indexOf(t.start)) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkParams", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseParenAndDistinguishExpression",\n            value: function parseParenAndDistinguishExpression(t) {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseParenAndDistinguishExpression", this).call(this, t && -1 === this.state.noArrowAt.indexOf(this.state.start));\n            }\n          }, {\n            key: "parseSubscripts",\n            value: function parseSubscripts(t, e, s, i) {\n              var _this12 = this;\n\n              if ("Identifier" === t.type && "async" === t.name && -1 !== this.state.noArrowAt.indexOf(e)) {\n                this.next();\n\n                var _i12 = this.startNodeAt(e, s);\n\n                _i12.callee = t, _i12.arguments = this.parseCallExpressionArguments(n.parenR, !1), t = this.finishNode(_i12, "CallExpression");\n              } else if ("Identifier" === t.type && "async" === t.name && this.isRelational("<")) {\n                var _r5 = this.state.clone(),\n                    _a4 = this.tryParse(function (t) {\n                  return _this12.parseAsyncArrowWithTypeParameters(e, s) || t();\n                }, _r5);\n\n                if (!_a4.error && !_a4.aborted) return _a4.node;\n\n                var _n3 = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscripts", _this12).call(_this12, t, e, s, i);\n                }, _r5);\n\n                if (_n3.node && !_n3.error) return _n3.node;\n                if (_a4.node) return this.state = _a4.failState, _a4.node;\n                if (_n3.node) return this.state = _n3.failState, _n3.node;\n                throw _a4.error || _n3.error;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscripts", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseSubscript",\n            value: function parseSubscript(t, e, s, i, r) {\n              var _this13 = this;\n\n              if (this.match(n.questionDot) && this.isLookaheadRelational("<")) {\n                if (r.optionalChainMember = !0, i) return r.stop = !0, t;\n                this.next();\n\n                var _a5 = this.startNodeAt(e, s);\n\n                return _a5.callee = t, _a5.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(n.parenL), _a5.arguments = this.parseCallExpressionArguments(n.parenR, !1), _a5.optional = !0, this.finishCallExpression(_a5, !0);\n              }\n\n              if (!i && this.shouldParseTypes() && this.isRelational("<")) {\n                var _i13 = this.startNodeAt(e, s);\n\n                _i13.callee = t;\n\n                var _a6 = this.tryParse(function () {\n                  return _i13.typeArguments = _this13.flowParseTypeParameterInstantiationCallOrNew(), _this13.expect(n.parenL), _i13.arguments = _this13.parseCallExpressionArguments(n.parenR, !1), r.optionalChainMember && (_i13.optional = !1), _this13.finishCallExpression(_i13, r.optionalChainMember);\n                });\n\n                if (_a6.node) return _a6.error && (this.state = _a6.failState), _a6.node;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscript", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parseNewArguments",\n            value: function parseNewArguments(t) {\n              var _this14 = this;\n\n              var e = null;\n              this.shouldParseTypes() && this.isRelational("<") && (e = this.tryParse(function () {\n                return _this14.flowParseTypeParameterInstantiationCallOrNew();\n              }).node), t.typeArguments = e, (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseNewArguments", this).call(this, t);\n            }\n          }, {\n            key: "parseAsyncArrowWithTypeParameters",\n            value: function parseAsyncArrowWithTypeParameters(t, e) {\n              var s = this.startNodeAt(t, e);\n              if (this.parseFunctionParams(s), this.parseArrow(s)) return this.parseArrowExpression(s, void 0, !0);\n            }\n          }, {\n            key: "readToken_mult_modulo",\n            value: function readToken_mult_modulo(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              if (42 === t && 47 === e && this.state.hasFlowComment) return this.state.hasFlowComment = !1, this.state.pos += 2, void this.nextToken();\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readToken_mult_modulo", this).call(this, t);\n            }\n          }, {\n            key: "readToken_pipe_amp",\n            value: function readToken_pipe_amp(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              124 !== t || 125 !== e ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readToken_pipe_amp", this).call(this, t) : this.finishOp(n.braceBarR, 2);\n            }\n          }, {\n            key: "parseTopLevel",\n            value: function parseTopLevel(t, e) {\n              var s = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseTopLevel", this).call(this, t, e);\n              return this.state.hasFlowComment && this.raise(this.state.pos, j.UnterminatedFlowComment), s;\n            }\n          }, {\n            key: "skipBlockComment",\n            value: function skipBlockComment() {\n              if (this.hasPlugin("flowComments") && this.skipFlowComment()) return this.state.hasFlowComment && this.unexpected(null, j.NestedFlowComment), this.hasFlowCommentCompletion(), this.state.pos += this.skipFlowComment(), void (this.state.hasFlowComment = !0);\n\n              if (this.state.hasFlowComment) {\n                var _t27 = this.input.indexOf("*-/", this.state.pos += 2);\n\n                if (-1 === _t27) throw this.raise(this.state.pos - 2, f.UnterminatedComment);\n                this.state.pos = _t27 + 3;\n              } else (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "skipBlockComment", this).call(this);\n            }\n          }, {\n            key: "skipFlowComment",\n            value: function skipFlowComment() {\n              var t = this.state.pos;\n              var e = 2;\n\n              for (; [32, 9].includes(this.input.charCodeAt(t + e));) {\n                e++;\n              }\n\n              var s = this.input.charCodeAt(e + t),\n                  i = this.input.charCodeAt(e + t + 1);\n              return 58 === s && 58 === i ? e + 2 : "flow-include" === this.input.slice(e + t, e + t + 12) ? e + 12 : 58 === s && 58 !== i && e;\n            }\n          }, {\n            key: "hasFlowCommentCompletion",\n            value: function hasFlowCommentCompletion() {\n              if (-1 === this.input.indexOf("*/", this.state.pos)) throw this.raise(this.state.pos, f.UnterminatedComment);\n            }\n          }, {\n            key: "flowEnumErrorBooleanMemberNotInitialized",\n            value: function flowEnumErrorBooleanMemberNotInitialized(t, _ref5) {\n              var e = _ref5.enumName,\n                  s = _ref5.memberName;\n              this.raise(t, j.EnumBooleanMemberNotInitialized, s, e);\n            }\n          }, {\n            key: "flowEnumErrorInvalidMemberName",\n            value: function flowEnumErrorInvalidMemberName(t, _ref6) {\n              var e = _ref6.enumName,\n                  s = _ref6.memberName;\n              var i = s[0].toUpperCase() + s.slice(1);\n              this.raise(t, j.EnumInvalidMemberName, s, i, e);\n            }\n          }, {\n            key: "flowEnumErrorDuplicateMemberName",\n            value: function flowEnumErrorDuplicateMemberName(t, _ref7) {\n              var e = _ref7.enumName,\n                  s = _ref7.memberName;\n              this.raise(t, j.EnumDuplicateMemberName, s, e);\n            }\n          }, {\n            key: "flowEnumErrorInconsistentMemberValues",\n            value: function flowEnumErrorInconsistentMemberValues(t, _ref8) {\n              var e = _ref8.enumName;\n              this.raise(t, j.EnumInconsistentMemberValues, e);\n            }\n          }, {\n            key: "flowEnumErrorInvalidExplicitType",\n            value: function flowEnumErrorInvalidExplicitType(t, _ref9) {\n              var e = _ref9.enumName,\n                  s = _ref9.suppliedType;\n              return this.raise(t, null === s ? j.EnumInvalidExplicitTypeUnknownSupplied : j.EnumInvalidExplicitType, e, s);\n            }\n          }, {\n            key: "flowEnumErrorInvalidMemberInitializer",\n            value: function flowEnumErrorInvalidMemberInitializer(t, _ref10) {\n              var e = _ref10.enumName,\n                  s = _ref10.explicitType,\n                  i = _ref10.memberName;\n              var r = null;\n\n              switch (s) {\n                case "boolean":\n                case "number":\n                case "string":\n                  r = j.EnumInvalidMemberInitializerPrimaryType;\n                  break;\n\n                case "symbol":\n                  r = j.EnumInvalidMemberInitializerSymbolType;\n                  break;\n\n                default:\n                  r = j.EnumInvalidMemberInitializerUnknownType;\n              }\n\n              return this.raise(t, r, e, i, s);\n            }\n          }, {\n            key: "flowEnumErrorNumberMemberNotInitialized",\n            value: function flowEnumErrorNumberMemberNotInitialized(t, _ref11) {\n              var e = _ref11.enumName,\n                  s = _ref11.memberName;\n              this.raise(t, j.EnumNumberMemberNotInitialized, e, s);\n            }\n          }, {\n            key: "flowEnumErrorStringMemberInconsistentlyInitailized",\n            value: function flowEnumErrorStringMemberInconsistentlyInitailized(t, _ref12) {\n              var e = _ref12.enumName;\n              this.raise(t, j.EnumStringMemberInconsistentlyInitailized, e);\n            }\n          }, {\n            key: "flowEnumMemberInit",\n            value: function flowEnumMemberInit() {\n              var _this15 = this;\n\n              var t = this.state.start,\n                  e = function e() {\n                return _this15.match(n.comma) || _this15.match(n.braceR);\n              };\n\n              switch (this.state.type) {\n                case n.num:\n                  {\n                    var _s15 = this.parseLiteral(this.state.value, "NumericLiteral");\n\n                    return e() ? {\n                      type: "number",\n                      pos: _s15.start,\n                      value: _s15\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                case n.string:\n                  {\n                    var _s16 = this.parseLiteral(this.state.value, "StringLiteral");\n\n                    return e() ? {\n                      type: "string",\n                      pos: _s16.start,\n                      value: _s16\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                case n._true:\n                case n._false:\n                  {\n                    var _s17 = this.parseBooleanLiteral();\n\n                    return e() ? {\n                      type: "boolean",\n                      pos: _s17.start,\n                      value: _s17\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                default:\n                  return {\n                    type: "invalid",\n                    pos: t\n                  };\n              }\n            }\n          }, {\n            key: "flowEnumMemberRaw",\n            value: function flowEnumMemberRaw() {\n              var t = this.state.start;\n              return {\n                id: this.parseIdentifier(!0),\n                init: this.eat(n.eq) ? this.flowEnumMemberInit() : {\n                  type: "none",\n                  pos: t\n                }\n              };\n            }\n          }, {\n            key: "flowEnumCheckExplicitTypeMismatch",\n            value: function flowEnumCheckExplicitTypeMismatch(t, e, s) {\n              var i = e.explicitType;\n              null !== i && i !== s && this.flowEnumErrorInvalidMemberInitializer(t, e);\n            }\n          }, {\n            key: "flowEnumMembers",\n            value: function flowEnumMembers(_ref13) {\n              var t = _ref13.enumName,\n                  e = _ref13.explicitType;\n              var s = new Set(),\n                  i = {\n                booleanMembers: [],\n                numberMembers: [],\n                stringMembers: [],\n                defaultedMembers: []\n              };\n\n              for (; !this.match(n.braceR);) {\n                var _r6 = this.startNode(),\n                    _this$flowEnumMemberR = this.flowEnumMemberRaw(),\n                    _a7 = _this$flowEnumMemberR.id,\n                    _o2 = _this$flowEnumMemberR.init,\n                    _h3 = _a7.name;\n\n                if ("" === _h3) continue;\n                /^[a-z]/.test(_h3) && this.flowEnumErrorInvalidMemberName(_a7.start, {\n                  enumName: t,\n                  memberName: _h3\n                }), s.has(_h3) && this.flowEnumErrorDuplicateMemberName(_a7.start, {\n                  enumName: t,\n                  memberName: _h3\n                }), s.add(_h3);\n                var _p = {\n                  enumName: t,\n                  explicitType: e,\n                  memberName: _h3\n                };\n\n                switch (_r6.id = _a7, _o2.type) {\n                  case "boolean":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "boolean"), _r6.init = _o2.value, i.booleanMembers.push(this.finishNode(_r6, "EnumBooleanMember"));\n                    break;\n\n                  case "number":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "number"), _r6.init = _o2.value, i.numberMembers.push(this.finishNode(_r6, "EnumNumberMember"));\n                    break;\n\n                  case "string":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "string"), _r6.init = _o2.value, i.stringMembers.push(this.finishNode(_r6, "EnumStringMember"));\n                    break;\n\n                  case "invalid":\n                    throw this.flowEnumErrorInvalidMemberInitializer(_o2.pos, _p);\n\n                  case "none":\n                    switch (e) {\n                      case "boolean":\n                        this.flowEnumErrorBooleanMemberNotInitialized(_o2.pos, _p);\n                        break;\n\n                      case "number":\n                        this.flowEnumErrorNumberMemberNotInitialized(_o2.pos, _p);\n                        break;\n\n                      default:\n                        i.defaultedMembers.push(this.finishNode(_r6, "EnumDefaultedMember"));\n                    }\n\n                }\n\n                this.match(n.braceR) || this.expect(n.comma);\n              }\n\n              return i;\n            }\n          }, {\n            key: "flowEnumStringMembers",\n            value: function flowEnumStringMembers(t, e, _ref14) {\n              var s = _ref14.enumName;\n              if (0 === t.length) return e;\n              if (0 === e.length) return t;\n\n              if (e.length > t.length) {\n                for (var _e26 = 0; _e26 < t.length; _e26++) {\n                  var _i14 = t[_e26];\n                  this.flowEnumErrorStringMemberInconsistentlyInitailized(_i14.start, {\n                    enumName: s\n                  });\n                }\n\n                return e;\n              }\n\n              for (var _t28 = 0; _t28 < e.length; _t28++) {\n                var _i15 = e[_t28];\n                this.flowEnumErrorStringMemberInconsistentlyInitailized(_i15.start, {\n                  enumName: s\n                });\n              }\n\n              return t;\n            }\n          }, {\n            key: "flowEnumParseExplicitType",\n            value: function flowEnumParseExplicitType(_ref15) {\n              var t = _ref15.enumName;\n\n              if (this.eatContextual("of")) {\n                if (!this.match(n.name)) throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n                  enumName: t,\n                  suppliedType: null\n                });\n                var _e27 = this.state.value;\n                return this.next(), "boolean" !== _e27 && "number" !== _e27 && "string" !== _e27 && "symbol" !== _e27 && this.flowEnumErrorInvalidExplicitType(this.state.start, {\n                  enumName: t,\n                  suppliedType: _e27\n                }), _e27;\n              }\n\n              return null;\n            }\n          }, {\n            key: "flowEnumBody",\n            value: function flowEnumBody(t, _ref16) {\n              var _this16 = this;\n\n              var e = _ref16.enumName,\n                  s = _ref16.nameLoc;\n              var i = this.flowEnumParseExplicitType({\n                enumName: e\n              });\n              this.expect(n.braceL);\n              var r = this.flowEnumMembers({\n                enumName: e,\n                explicitType: i\n              });\n\n              switch (i) {\n                case "boolean":\n                  return t.explicitType = !0, t.members = r.booleanMembers, this.expect(n.braceR), this.finishNode(t, "EnumBooleanBody");\n\n                case "number":\n                  return t.explicitType = !0, t.members = r.numberMembers, this.expect(n.braceR), this.finishNode(t, "EnumNumberBody");\n\n                case "string":\n                  return t.explicitType = !0, t.members = this.flowEnumStringMembers(r.stringMembers, r.defaultedMembers, {\n                    enumName: e\n                  }), this.expect(n.braceR), this.finishNode(t, "EnumStringBody");\n\n                case "symbol":\n                  return t.members = r.defaultedMembers, this.expect(n.braceR), this.finishNode(t, "EnumSymbolBody");\n\n                default:\n                  {\n                    var _i16 = function _i16() {\n                      return t.members = [], _this16.expect(n.braceR), _this16.finishNode(t, "EnumStringBody");\n                    };\n\n                    t.explicitType = !1;\n                    var _a8 = r.booleanMembers.length,\n                        _o3 = r.numberMembers.length,\n                        _h4 = r.stringMembers.length,\n                        _p2 = r.defaultedMembers.length;\n\n                    if (_a8 || _o3 || _h4 || _p2) {\n                      if (_a8 || _o3) {\n                        if (!_o3 && !_h4 && _a8 >= _p2) {\n                          for (var _t29 = 0, _s18 = r.defaultedMembers; _t29 < _s18.length; _t29++) {\n                            var _i17 = _s18[_t29];\n                            this.flowEnumErrorBooleanMemberNotInitialized(_i17.start, {\n                              enumName: e,\n                              memberName: _i17.id.name\n                            });\n                          }\n\n                          return t.members = r.booleanMembers, this.expect(n.braceR), this.finishNode(t, "EnumBooleanBody");\n                        }\n\n                        if (!_a8 && !_h4 && _o3 >= _p2) {\n                          for (var _t30 = 0, _s19 = r.defaultedMembers; _t30 < _s19.length; _t30++) {\n                            var _i18 = _s19[_t30];\n                            this.flowEnumErrorNumberMemberNotInitialized(_i18.start, {\n                              enumName: e,\n                              memberName: _i18.id.name\n                            });\n                          }\n\n                          return t.members = r.numberMembers, this.expect(n.braceR), this.finishNode(t, "EnumNumberBody");\n                        }\n\n                        return this.flowEnumErrorInconsistentMemberValues(s, {\n                          enumName: e\n                        }), _i16();\n                      }\n\n                      return t.members = this.flowEnumStringMembers(r.stringMembers, r.defaultedMembers, {\n                        enumName: e\n                      }), this.expect(n.braceR), this.finishNode(t, "EnumStringBody");\n                    }\n\n                    return _i16();\n                  }\n              }\n            }\n          }, {\n            key: "flowParseEnumDeclaration",\n            value: function flowParseEnumDeclaration(t) {\n              var e = this.parseIdentifier();\n              return t.id = e, t.body = this.flowEnumBody(this.startNode(), {\n                enumName: e.name,\n                nameLoc: e.start\n              }), this.finishNode(t, "EnumDeclaration");\n            }\n          }]);\n          return _class3;\n        }(t);\n      },\n      typescript: function typescript(t) {\n        return /*#__PURE__*/function (_t31) {\n          (0, _inherits2.default)(_class4, _t31);\n\n          var _super6 = _createSuper(_class4);\n\n          function _class4() {\n            (0, _classCallCheck2.default)(this, _class4);\n            return _super6.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class4, [{\n            key: "getScopeHandler",\n            value: function getScopeHandler() {\n              return Z;\n            }\n          }, {\n            key: "tsIsIdentifier",\n            value: function tsIsIdentifier() {\n              return this.match(n.name);\n            }\n          }, {\n            key: "tsNextTokenCanFollowModifier",\n            value: function tsNextTokenCanFollowModifier() {\n              return this.next(), !(this.hasPrecedingLineBreak() || this.match(n.parenL) || this.match(n.parenR) || this.match(n.colon) || this.match(n.eq) || this.match(n.question) || this.match(n.bang));\n            }\n          }, {\n            key: "tsParseModifier",\n            value: function tsParseModifier(t) {\n              if (!this.match(n.name)) return;\n              var e = this.state.value;\n              return -1 !== t.indexOf(e) && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)) ? e : void 0;\n            }\n          }, {\n            key: "tsParseModifiers",\n            value: function tsParseModifiers(t, e) {\n              for (;;) {\n                var _s20 = this.state.start,\n                    _i19 = this.tsParseModifier(e);\n\n                if (!_i19) break;\n                Object.hasOwnProperty.call(t, _i19) && this.raise(_s20, rt.DuplicateModifier, _i19), t[_i19] = !0;\n              }\n            }\n          }, {\n            key: "tsIsListTerminator",\n            value: function tsIsListTerminator(t) {\n              switch (t) {\n                case "EnumMembers":\n                case "TypeMembers":\n                  return this.match(n.braceR);\n\n                case "HeritageClauseElement":\n                  return this.match(n.braceL);\n\n                case "TupleElementTypes":\n                  return this.match(n.bracketR);\n\n                case "TypeParametersOrArguments":\n                  return this.isRelational(">");\n              }\n\n              throw new Error("Unreachable");\n            }\n          }, {\n            key: "tsParseList",\n            value: function tsParseList(t, e) {\n              var s = [];\n\n              for (; !this.tsIsListTerminator(t);) {\n                s.push(e());\n              }\n\n              return s;\n            }\n          }, {\n            key: "tsParseDelimitedList",\n            value: function tsParseDelimitedList(t, e) {\n              return st(this.tsParseDelimitedListWorker(t, e, !0));\n            }\n          }, {\n            key: "tsParseDelimitedListWorker",\n            value: function tsParseDelimitedListWorker(t, e, s) {\n              var i = [];\n\n              for (; !this.tsIsListTerminator(t);) {\n                var _r7 = e();\n\n                if (null == _r7) return;\n\n                if (i.push(_r7), !this.eat(n.comma)) {\n                  if (this.tsIsListTerminator(t)) break;\n                  return void (s && this.expect(n.comma));\n                }\n              }\n\n              return i;\n            }\n          }, {\n            key: "tsParseBracketedList",\n            value: function tsParseBracketedList(t, e, s, i) {\n              i || (s ? this.expect(n.bracketL) : this.expectRelational("<"));\n              var r = this.tsParseDelimitedList(t, e);\n              return s ? this.expect(n.bracketR) : this.expectRelational(">"), r;\n            }\n          }, {\n            key: "tsParseImportType",\n            value: function tsParseImportType() {\n              var t = this.startNode();\n              return this.expect(n._import), this.expect(n.parenL), this.match(n.string) || this.raise(this.state.start, rt.UnsupportedImportTypeArgument), t.argument = this.parseExprAtom(), this.expect(n.parenR), this.eat(n.dot) && (t.qualifier = this.tsParseEntityName(!0)), this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSImportType");\n            }\n          }, {\n            key: "tsParseEntityName",\n            value: function tsParseEntityName(t) {\n              var e = this.parseIdentifier();\n\n              for (; this.eat(n.dot);) {\n                var _s21 = this.startNodeAtNode(e);\n\n                _s21.left = e, _s21.right = this.parseIdentifier(t), e = this.finishNode(_s21, "TSQualifiedName");\n              }\n\n              return e;\n            }\n          }, {\n            key: "tsParseTypeReference",\n            value: function tsParseTypeReference() {\n              var t = this.startNode();\n              return t.typeName = this.tsParseEntityName(!1), !this.hasPrecedingLineBreak() && this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSTypeReference");\n            }\n          }, {\n            key: "tsParseThisTypePredicate",\n            value: function tsParseThisTypePredicate(t) {\n              this.next();\n              var e = this.startNodeAtNode(t);\n              return e.parameterName = t, e.typeAnnotation = this.tsParseTypeAnnotation(!1), this.finishNode(e, "TSTypePredicate");\n            }\n          }, {\n            key: "tsParseThisTypeNode",\n            value: function tsParseThisTypeNode() {\n              var t = this.startNode();\n              return this.next(), this.finishNode(t, "TSThisType");\n            }\n          }, {\n            key: "tsParseTypeQuery",\n            value: function tsParseTypeQuery() {\n              var t = this.startNode();\n              return this.expect(n._typeof), this.match(n._import) ? t.exprName = this.tsParseImportType() : t.exprName = this.tsParseEntityName(!0), this.finishNode(t, "TSTypeQuery");\n            }\n          }, {\n            key: "tsParseTypeParameter",\n            value: function tsParseTypeParameter() {\n              var t = this.startNode();\n              return t.name = this.parseIdentifierName(t.start), t.constraint = this.tsEatThenParseType(n._extends), t.default = this.tsEatThenParseType(n.eq), this.finishNode(t, "TSTypeParameter");\n            }\n          }, {\n            key: "tsTryParseTypeParameters",\n            value: function tsTryParseTypeParameters() {\n              if (this.isRelational("<")) return this.tsParseTypeParameters();\n            }\n          }, {\n            key: "tsParseTypeParameters",\n            value: function tsParseTypeParameters() {\n              var t = this.startNode();\n              return this.isRelational("<") || this.match(n.jsxTagStart) ? this.next() : this.unexpected(), t.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this), !1, !0), this.finishNode(t, "TSTypeParameterDeclaration");\n            }\n          }, {\n            key: "tsTryNextParseConstantContext",\n            value: function tsTryNextParseConstantContext() {\n              return this.lookahead().type === n._const ? (this.next(), this.tsParseTypeReference()) : null;\n            }\n          }, {\n            key: "tsFillSignature",\n            value: function tsFillSignature(t, e) {\n              var s = t === n.arrow;\n              e.typeParameters = this.tsTryParseTypeParameters(), this.expect(n.parenL), e.parameters = this.tsParseBindingListForSignature(), s ? e.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(t) : this.match(t) && (e.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(t));\n            }\n          }, {\n            key: "tsParseBindingListForSignature",\n            value: function tsParseBindingListForSignature() {\n              var _this17 = this;\n\n              return this.parseBindingList(n.parenR, 41).map(function (t) {\n                return "Identifier" !== t.type && "RestElement" !== t.type && "ObjectPattern" !== t.type && "ArrayPattern" !== t.type && _this17.raise(t.start, rt.UnsupportedSignatureParameterKind, t.type), t;\n              });\n            }\n          }, {\n            key: "tsParseTypeMemberSemicolon",\n            value: function tsParseTypeMemberSemicolon() {\n              this.eat(n.comma) || this.semicolon();\n            }\n          }, {\n            key: "tsParseSignatureMember",\n            value: function tsParseSignatureMember(t, e) {\n              return this.tsFillSignature(n.colon, e), this.tsParseTypeMemberSemicolon(), this.finishNode(e, t);\n            }\n          }, {\n            key: "tsIsUnambiguouslyIndexSignature",\n            value: function tsIsUnambiguouslyIndexSignature() {\n              return this.next(), this.eat(n.name) && this.match(n.colon);\n            }\n          }, {\n            key: "tsTryParseIndexSignature",\n            value: function tsTryParseIndexSignature(t) {\n              if (!this.match(n.bracketL) || !this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))) return;\n              this.expect(n.bracketL);\n              var e = this.parseIdentifier();\n              e.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(e), this.expect(n.bracketR), t.parameters = [e];\n              var s = this.tsTryParseTypeAnnotation();\n              return s && (t.typeAnnotation = s), this.tsParseTypeMemberSemicolon(), this.finishNode(t, "TSIndexSignature");\n            }\n          }, {\n            key: "tsParsePropertyOrMethodSignature",\n            value: function tsParsePropertyOrMethodSignature(t, e) {\n              this.eat(n.question) && (t.optional = !0);\n              var s = t;\n\n              if (e || !this.match(n.parenL) && !this.isRelational("<")) {\n                var _t32 = s;\n                e && (_t32.readonly = !0);\n\n                var _i20 = this.tsTryParseTypeAnnotation();\n\n                return _i20 && (_t32.typeAnnotation = _i20), this.tsParseTypeMemberSemicolon(), this.finishNode(_t32, "TSPropertySignature");\n              }\n\n              {\n                var _t33 = s;\n                return this.tsFillSignature(n.colon, _t33), this.tsParseTypeMemberSemicolon(), this.finishNode(_t33, "TSMethodSignature");\n              }\n            }\n          }, {\n            key: "tsParseTypeMember",\n            value: function tsParseTypeMember() {\n              var t = this.startNode();\n              if (this.match(n.parenL) || this.isRelational("<")) return this.tsParseSignatureMember("TSCallSignatureDeclaration", t);\n\n              if (this.match(n._new)) {\n                var _e28 = this.startNode();\n\n                return this.next(), this.match(n.parenL) || this.isRelational("<") ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", t) : (t.key = this.createIdentifier(_e28, "new"), this.tsParsePropertyOrMethodSignature(t, !1));\n              }\n\n              var e = !!this.tsParseModifier(["readonly"]),\n                  s = this.tsTryParseIndexSignature(t);\n              return s ? (e && (t.readonly = !0), s) : (this.parsePropertyName(t, !1), this.tsParsePropertyOrMethodSignature(t, e));\n            }\n          }, {\n            key: "tsParseTypeLiteral",\n            value: function tsParseTypeLiteral() {\n              var t = this.startNode();\n              return t.members = this.tsParseObjectTypeMembers(), this.finishNode(t, "TSTypeLiteral");\n            }\n          }, {\n            key: "tsParseObjectTypeMembers",\n            value: function tsParseObjectTypeMembers() {\n              this.expect(n.braceL);\n              var t = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));\n              return this.expect(n.braceR), t;\n            }\n          }, {\n            key: "tsIsStartOfMappedType",\n            value: function tsIsStartOfMappedType() {\n              return this.next(), this.eat(n.plusMin) ? this.isContextual("readonly") : (this.isContextual("readonly") && this.next(), !!this.match(n.bracketL) && (this.next(), !!this.tsIsIdentifier() && (this.next(), this.match(n._in))));\n            }\n          }, {\n            key: "tsParseMappedTypeParameter",\n            value: function tsParseMappedTypeParameter() {\n              var t = this.startNode();\n              return t.name = this.parseIdentifierName(t.start), t.constraint = this.tsExpectThenParseType(n._in), this.finishNode(t, "TSTypeParameter");\n            }\n          }, {\n            key: "tsParseMappedType",\n            value: function tsParseMappedType() {\n              var t = this.startNode();\n              return this.expect(n.braceL), this.match(n.plusMin) ? (t.readonly = this.state.value, this.next(), this.expectContextual("readonly")) : this.eatContextual("readonly") && (t.readonly = !0), this.expect(n.bracketL), t.typeParameter = this.tsParseMappedTypeParameter(), this.expect(n.bracketR), this.match(n.plusMin) ? (t.optional = this.state.value, this.next(), this.expect(n.question)) : this.eat(n.question) && (t.optional = !0), t.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(n.braceR), this.finishNode(t, "TSMappedType");\n            }\n          }, {\n            key: "tsParseTupleType",\n            value: function tsParseTupleType() {\n              var _this18 = this;\n\n              var t = this.startNode();\n              t.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), !0, !1);\n              var e = !1;\n              return t.elementTypes.forEach(function (t) {\n                "TSOptionalType" === t.type ? e = !0 : e && "TSRestType" !== t.type && _this18.raise(t.start, rt.OptionalTypeBeforeRequired);\n              }), this.finishNode(t, "TSTupleType");\n            }\n          }, {\n            key: "tsParseTupleElementType",\n            value: function tsParseTupleElementType() {\n              if (this.match(n.ellipsis)) {\n                var _t34 = this.startNode();\n\n                return this.next(), _t34.typeAnnotation = this.tsParseType(), this.match(n.comma) && 93 !== this.lookaheadCharCode() && this.raiseRestNotLast(this.state.start), this.finishNode(_t34, "TSRestType");\n              }\n\n              var t = this.tsParseType();\n\n              if (this.eat(n.question)) {\n                var _e29 = this.startNodeAtNode(t);\n\n                return _e29.typeAnnotation = t, this.finishNode(_e29, "TSOptionalType");\n              }\n\n              return t;\n            }\n          }, {\n            key: "tsParseParenthesizedType",\n            value: function tsParseParenthesizedType() {\n              var t = this.startNode();\n              return this.expect(n.parenL), t.typeAnnotation = this.tsParseType(), this.expect(n.parenR), this.finishNode(t, "TSParenthesizedType");\n            }\n          }, {\n            key: "tsParseFunctionOrConstructorType",\n            value: function tsParseFunctionOrConstructorType(t) {\n              var e = this.startNode();\n              return "TSConstructorType" === t && this.expect(n._new), this.tsFillSignature(n.arrow, e), this.finishNode(e, t);\n            }\n          }, {\n            key: "tsParseLiteralTypeNode",\n            value: function tsParseLiteralTypeNode() {\n              var _this19 = this;\n\n              var t = this.startNode();\n              return t.literal = function () {\n                switch (_this19.state.type) {\n                  case n.num:\n                  case n.string:\n                  case n._true:\n                  case n._false:\n                    return _this19.parseExprAtom();\n\n                  default:\n                    throw _this19.unexpected();\n                }\n              }(), this.finishNode(t, "TSLiteralType");\n            }\n          }, {\n            key: "tsParseTemplateLiteralType",\n            value: function tsParseTemplateLiteralType() {\n              var t = this.startNode(),\n                  e = this.parseTemplate(!1);\n              return e.expressions.length > 0 && this.raise(e.expressions[0].start, rt.TemplateTypeHasSubstitution), t.literal = e, this.finishNode(t, "TSLiteralType");\n            }\n          }, {\n            key: "tsParseThisTypeOrThisTypePredicate",\n            value: function tsParseThisTypeOrThisTypePredicate() {\n              var t = this.tsParseThisTypeNode();\n              return this.isContextual("is") && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(t) : t;\n            }\n          }, {\n            key: "tsParseNonArrayType",\n            value: function tsParseNonArrayType() {\n              switch (this.state.type) {\n                case n.name:\n                case n._void:\n                case n._null:\n                  {\n                    var _t35 = this.match(n._void) ? "TSVoidKeyword" : this.match(n._null) ? "TSNullKeyword" : function (t) {\n                      switch (t) {\n                        case "any":\n                          return "TSAnyKeyword";\n\n                        case "boolean":\n                          return "TSBooleanKeyword";\n\n                        case "bigint":\n                          return "TSBigIntKeyword";\n\n                        case "never":\n                          return "TSNeverKeyword";\n\n                        case "number":\n                          return "TSNumberKeyword";\n\n                        case "object":\n                          return "TSObjectKeyword";\n\n                        case "string":\n                          return "TSStringKeyword";\n\n                        case "symbol":\n                          return "TSSymbolKeyword";\n\n                        case "undefined":\n                          return "TSUndefinedKeyword";\n\n                        case "unknown":\n                          return "TSUnknownKeyword";\n\n                        default:\n                          return;\n                      }\n                    }(this.state.value);\n\n                    if (void 0 !== _t35 && 46 !== this.lookaheadCharCode()) {\n                      var _e30 = this.startNode();\n\n                      return this.next(), this.finishNode(_e30, _t35);\n                    }\n\n                    return this.tsParseTypeReference();\n                  }\n\n                case n.string:\n                case n.num:\n                case n._true:\n                case n._false:\n                  return this.tsParseLiteralTypeNode();\n\n                case n.plusMin:\n                  if ("-" === this.state.value) {\n                    var _t36 = this.startNode();\n\n                    if (this.lookahead().type !== n.num) throw this.unexpected();\n                    return _t36.literal = this.parseMaybeUnary(), this.finishNode(_t36, "TSLiteralType");\n                  }\n\n                  break;\n\n                case n._this:\n                  return this.tsParseThisTypeOrThisTypePredicate();\n\n                case n._typeof:\n                  return this.tsParseTypeQuery();\n\n                case n._import:\n                  return this.tsParseImportType();\n\n                case n.braceL:\n                  return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n                case n.bracketL:\n                  return this.tsParseTupleType();\n\n                case n.parenL:\n                  return this.tsParseParenthesizedType();\n\n                case n.backQuote:\n                  return this.tsParseTemplateLiteralType();\n              }\n\n              throw this.unexpected();\n            }\n          }, {\n            key: "tsParseArrayTypeOrHigher",\n            value: function tsParseArrayTypeOrHigher() {\n              var t = this.tsParseNonArrayType();\n\n              for (; !this.hasPrecedingLineBreak() && this.eat(n.bracketL);) {\n                if (this.match(n.bracketR)) {\n                  var _e31 = this.startNodeAtNode(t);\n\n                  _e31.elementType = t, this.expect(n.bracketR), t = this.finishNode(_e31, "TSArrayType");\n                } else {\n                  var _e32 = this.startNodeAtNode(t);\n\n                  _e32.objectType = t, _e32.indexType = this.tsParseType(), this.expect(n.bracketR), t = this.finishNode(_e32, "TSIndexedAccessType");\n                }\n              }\n\n              return t;\n            }\n          }, {\n            key: "tsParseTypeOperator",\n            value: function tsParseTypeOperator(t) {\n              var e = this.startNode();\n              return this.expectContextual(t), e.operator = t, e.typeAnnotation = this.tsParseTypeOperatorOrHigher(), "readonly" === t && this.tsCheckTypeAnnotationForReadOnly(e), this.finishNode(e, "TSTypeOperator");\n            }\n          }, {\n            key: "tsCheckTypeAnnotationForReadOnly",\n            value: function tsCheckTypeAnnotationForReadOnly(t) {\n              switch (t.typeAnnotation.type) {\n                case "TSTupleType":\n                case "TSArrayType":\n                  return;\n\n                default:\n                  this.raise(t.start, rt.UnexpectedReadonly);\n              }\n            }\n          }, {\n            key: "tsParseInferType",\n            value: function tsParseInferType() {\n              var t = this.startNode();\n              this.expectContextual("infer");\n              var e = this.startNode();\n              return e.name = this.parseIdentifierName(e.start), t.typeParameter = this.finishNode(e, "TSTypeParameter"), this.finishNode(t, "TSInferType");\n            }\n          }, {\n            key: "tsParseTypeOperatorOrHigher",\n            value: function tsParseTypeOperatorOrHigher() {\n              var _this20 = this;\n\n              var t = ["keyof", "unique", "readonly"].find(function (t) {\n                return _this20.isContextual(t);\n              });\n              return t ? this.tsParseTypeOperator(t) : this.isContextual("infer") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n            }\n          }, {\n            key: "tsParseUnionOrIntersectionType",\n            value: function tsParseUnionOrIntersectionType(t, e, s) {\n              this.eat(s);\n              var i = e();\n\n              if (this.match(s)) {\n                var _r8 = [i];\n\n                for (; this.eat(s);) {\n                  _r8.push(e());\n                }\n\n                var _a9 = this.startNodeAtNode(i);\n\n                _a9.types = _r8, i = this.finishNode(_a9, t);\n              }\n\n              return i;\n            }\n          }, {\n            key: "tsParseIntersectionTypeOrHigher",\n            value: function tsParseIntersectionTypeOrHigher() {\n              return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), n.bitwiseAND);\n            }\n          }, {\n            key: "tsParseUnionTypeOrHigher",\n            value: function tsParseUnionTypeOrHigher() {\n              return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), n.bitwiseOR);\n            }\n          }, {\n            key: "tsIsStartOfFunctionType",\n            value: function tsIsStartOfFunctionType() {\n              return !!this.isRelational("<") || this.match(n.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n            }\n          }, {\n            key: "tsSkipParameterStart",\n            value: function tsSkipParameterStart() {\n              if (this.match(n.name) || this.match(n._this)) return this.next(), !0;\n\n              if (this.match(n.braceL)) {\n                var _t37 = 1;\n\n                for (this.next(); _t37 > 0;) {\n                  this.match(n.braceL) ? ++_t37 : this.match(n.braceR) && --_t37, this.next();\n                }\n\n                return !0;\n              }\n\n              if (this.match(n.bracketL)) {\n                var _t38 = 1;\n\n                for (this.next(); _t38 > 0;) {\n                  this.match(n.bracketL) ? ++_t38 : this.match(n.bracketR) && --_t38, this.next();\n                }\n\n                return !0;\n              }\n\n              return !1;\n            }\n          }, {\n            key: "tsIsUnambiguouslyStartOfFunctionType",\n            value: function tsIsUnambiguouslyStartOfFunctionType() {\n              if (this.next(), this.match(n.parenR) || this.match(n.ellipsis)) return !0;\n\n              if (this.tsSkipParameterStart()) {\n                if (this.match(n.colon) || this.match(n.comma) || this.match(n.question) || this.match(n.eq)) return !0;\n                if (this.match(n.parenR) && (this.next(), this.match(n.arrow))) return !0;\n              }\n\n              return !1;\n            }\n          }, {\n            key: "tsParseTypeOrTypePredicateAnnotation",\n            value: function tsParseTypeOrTypePredicateAnnotation(t) {\n              var _this21 = this;\n\n              return this.tsInType(function () {\n                var e = _this21.startNode();\n\n                _this21.expect(t);\n\n                var s = _this21.tsTryParse(_this21.tsParseTypePredicateAsserts.bind(_this21));\n\n                if (s && _this21.match(n._this)) {\n                  var _t39 = _this21.tsParseThisTypeOrThisTypePredicate();\n\n                  if ("TSThisType" === _t39.type) {\n                    var _s22 = _this21.startNodeAtNode(e);\n\n                    _s22.parameterName = _t39, _s22.asserts = !0, _t39 = _this21.finishNode(_s22, "TSTypePredicate");\n                  } else _t39.asserts = !0;\n\n                  return e.typeAnnotation = _t39, _this21.finishNode(e, "TSTypeAnnotation");\n                }\n\n                var i = _this21.tsIsIdentifier() && _this21.tsTryParse(_this21.tsParseTypePredicatePrefix.bind(_this21));\n\n                if (!i) {\n                  if (!s) return _this21.tsParseTypeAnnotation(!1, e);\n\n                  var _t40 = _this21.startNodeAtNode(e);\n\n                  return _t40.parameterName = _this21.parseIdentifier(), _t40.asserts = s, e.typeAnnotation = _this21.finishNode(_t40, "TSTypePredicate"), _this21.finishNode(e, "TSTypeAnnotation");\n                }\n\n                var r = _this21.tsParseTypeAnnotation(!1),\n                    a = _this21.startNodeAtNode(e);\n\n                return a.parameterName = i, a.typeAnnotation = r, a.asserts = s, e.typeAnnotation = _this21.finishNode(a, "TSTypePredicate"), _this21.finishNode(e, "TSTypeAnnotation");\n              });\n            }\n          }, {\n            key: "tsTryParseTypeOrTypePredicateAnnotation",\n            value: function tsTryParseTypeOrTypePredicateAnnotation() {\n              return this.match(n.colon) ? this.tsParseTypeOrTypePredicateAnnotation(n.colon) : void 0;\n            }\n          }, {\n            key: "tsTryParseTypeAnnotation",\n            value: function tsTryParseTypeAnnotation() {\n              return this.match(n.colon) ? this.tsParseTypeAnnotation() : void 0;\n            }\n          }, {\n            key: "tsTryParseType",\n            value: function tsTryParseType() {\n              return this.tsEatThenParseType(n.colon);\n            }\n          }, {\n            key: "tsParseTypePredicatePrefix",\n            value: function tsParseTypePredicatePrefix() {\n              var t = this.parseIdentifier();\n              if (this.isContextual("is") && !this.hasPrecedingLineBreak()) return this.next(), t;\n            }\n          }, {\n            key: "tsParseTypePredicateAsserts",\n            value: function tsParseTypePredicateAsserts() {\n              if (!this.match(n.name) || "asserts" !== this.state.value || this.hasPrecedingLineBreak()) return !1;\n              var t = this.state.containsEsc;\n              return this.next(), !(!this.match(n.name) && !this.match(n._this)) && (t && this.raise(this.state.lastTokStart, f.InvalidEscapedReservedWord, "asserts"), !0);\n            }\n          }, {\n            key: "tsParseTypeAnnotation",\n            value: function tsParseTypeAnnotation() {\n              var _this22 = this;\n\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.startNode();\n              return this.tsInType(function () {\n                t && _this22.expect(n.colon), e.typeAnnotation = _this22.tsParseType();\n              }), this.finishNode(e, "TSTypeAnnotation");\n            }\n          }, {\n            key: "tsParseType",\n            value: function tsParseType() {\n              it(this.state.inType);\n              var t = this.tsParseNonConditionalType();\n              if (this.hasPrecedingLineBreak() || !this.eat(n._extends)) return t;\n              var e = this.startNodeAtNode(t);\n              return e.checkType = t, e.extendsType = this.tsParseNonConditionalType(), this.expect(n.question), e.trueType = this.tsParseType(), this.expect(n.colon), e.falseType = this.tsParseType(), this.finishNode(e, "TSConditionalType");\n            }\n          }, {\n            key: "tsParseNonConditionalType",\n            value: function tsParseNonConditionalType() {\n              return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(n._new) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.tsParseUnionTypeOrHigher();\n            }\n          }, {\n            key: "tsParseTypeAssertion",\n            value: function tsParseTypeAssertion() {\n              var t = this.startNode(),\n                  e = this.tsTryNextParseConstantContext();\n              return t.typeAnnotation = e || this.tsNextThenParseType(), this.expectRelational(">"), t.expression = this.parseMaybeUnary(), this.finishNode(t, "TSTypeAssertion");\n            }\n          }, {\n            key: "tsParseHeritageClause",\n            value: function tsParseHeritageClause(t) {\n              var e = this.state.start,\n                  s = this.tsParseDelimitedList("HeritageClauseElement", this.tsParseExpressionWithTypeArguments.bind(this));\n              return s.length || this.raise(e, rt.EmptyHeritageClauseType, t), s;\n            }\n          }, {\n            key: "tsParseExpressionWithTypeArguments",\n            value: function tsParseExpressionWithTypeArguments() {\n              var t = this.startNode();\n              return t.expression = this.tsParseEntityName(!1), this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSExpressionWithTypeArguments");\n            }\n          }, {\n            key: "tsParseInterfaceDeclaration",\n            value: function tsParseInterfaceDeclaration(t) {\n              t.id = this.parseIdentifier(), this.checkLVal(t.id, 130, void 0, "typescript interface declaration"), t.typeParameters = this.tsTryParseTypeParameters(), this.eat(n._extends) && (t.extends = this.tsParseHeritageClause("extends"));\n              var e = this.startNode();\n              return e.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), t.body = this.finishNode(e, "TSInterfaceBody"), this.finishNode(t, "TSInterfaceDeclaration");\n            }\n          }, {\n            key: "tsParseTypeAliasDeclaration",\n            value: function tsParseTypeAliasDeclaration(t) {\n              return t.id = this.parseIdentifier(), this.checkLVal(t.id, 2, void 0, "typescript type alias"), t.typeParameters = this.tsTryParseTypeParameters(), t.typeAnnotation = this.tsExpectThenParseType(n.eq), this.semicolon(), this.finishNode(t, "TSTypeAliasDeclaration");\n            }\n          }, {\n            key: "tsInNoContext",\n            value: function tsInNoContext(t) {\n              var e = this.state.context;\n              this.state.context = [e[0]];\n\n              try {\n                return t();\n              } finally {\n                this.state.context = e;\n              }\n            }\n          }, {\n            key: "tsInType",\n            value: function tsInType(t) {\n              var e = this.state.inType;\n              this.state.inType = !0;\n\n              try {\n                return t();\n              } finally {\n                this.state.inType = e;\n              }\n            }\n          }, {\n            key: "tsEatThenParseType",\n            value: function tsEatThenParseType(t) {\n              return this.match(t) ? this.tsNextThenParseType() : void 0;\n            }\n          }, {\n            key: "tsExpectThenParseType",\n            value: function tsExpectThenParseType(t) {\n              var _this23 = this;\n\n              return this.tsDoThenParseType(function () {\n                return _this23.expect(t);\n              });\n            }\n          }, {\n            key: "tsNextThenParseType",\n            value: function tsNextThenParseType() {\n              var _this24 = this;\n\n              return this.tsDoThenParseType(function () {\n                return _this24.next();\n              });\n            }\n          }, {\n            key: "tsDoThenParseType",\n            value: function tsDoThenParseType(t) {\n              var _this25 = this;\n\n              return this.tsInType(function () {\n                return t(), _this25.tsParseType();\n              });\n            }\n          }, {\n            key: "tsParseEnumMember",\n            value: function tsParseEnumMember() {\n              var t = this.startNode();\n              return t.id = this.match(n.string) ? this.parseExprAtom() : this.parseIdentifier(!0), this.eat(n.eq) && (t.initializer = this.parseMaybeAssign()), this.finishNode(t, "TSEnumMember");\n            }\n          }, {\n            key: "tsParseEnumDeclaration",\n            value: function tsParseEnumDeclaration(t, e) {\n              return e && (t.const = !0), t.id = this.parseIdentifier(), this.checkLVal(t.id, e ? 779 : 267, void 0, "typescript enum declaration"), this.expect(n.braceL), t.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(n.braceR), this.finishNode(t, "TSEnumDeclaration");\n            }\n          }, {\n            key: "tsParseModuleBlock",\n            value: function tsParseModuleBlock() {\n              var t = this.startNode();\n              return this.scope.enter(0), this.expect(n.braceL), this.parseBlockOrModuleBlockBody(t.body = [], void 0, !0, n.braceR), this.scope.exit(), this.finishNode(t, "TSModuleBlock");\n            }\n          }, {\n            key: "tsParseModuleOrNamespaceDeclaration",\n            value: function tsParseModuleOrNamespaceDeclaration(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n\n              if (t.id = this.parseIdentifier(), e || this.checkLVal(t.id, 1024, null, "module or namespace declaration"), this.eat(n.dot)) {\n                var _e33 = this.startNode();\n\n                this.tsParseModuleOrNamespaceDeclaration(_e33, !0), t.body = _e33;\n              } else this.scope.enter(128), this.prodParam.enter(0), t.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();\n\n              return this.finishNode(t, "TSModuleDeclaration");\n            }\n          }, {\n            key: "tsParseAmbientExternalModuleDeclaration",\n            value: function tsParseAmbientExternalModuleDeclaration(t) {\n              return this.isContextual("global") ? (t.global = !0, t.id = this.parseIdentifier()) : this.match(n.string) ? t.id = this.parseExprAtom() : this.unexpected(), this.match(n.braceL) ? (this.scope.enter(128), this.prodParam.enter(0), t.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(t, "TSModuleDeclaration");\n            }\n          }, {\n            key: "tsParseImportEqualsDeclaration",\n            value: function tsParseImportEqualsDeclaration(t, e) {\n              return t.isExport = e || !1, t.id = this.parseIdentifier(), this.checkLVal(t.id, 9, void 0, "import equals declaration"), this.expect(n.eq), t.moduleReference = this.tsParseModuleReference(), this.semicolon(), this.finishNode(t, "TSImportEqualsDeclaration");\n            }\n          }, {\n            key: "tsIsExternalModuleReference",\n            value: function tsIsExternalModuleReference() {\n              return this.isContextual("require") && 40 === this.lookaheadCharCode();\n            }\n          }, {\n            key: "tsParseModuleReference",\n            value: function tsParseModuleReference() {\n              return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(!1);\n            }\n          }, {\n            key: "tsParseExternalModuleReference",\n            value: function tsParseExternalModuleReference() {\n              var t = this.startNode();\n              if (this.expectContextual("require"), this.expect(n.parenL), !this.match(n.string)) throw this.unexpected();\n              return t.expression = this.parseExprAtom(), this.expect(n.parenR), this.finishNode(t, "TSExternalModuleReference");\n            }\n          }, {\n            key: "tsLookAhead",\n            value: function tsLookAhead(t) {\n              var e = this.state.clone(),\n                  s = t();\n              return this.state = e, s;\n            }\n          }, {\n            key: "tsTryParseAndCatch",\n            value: function tsTryParseAndCatch(t) {\n              var e = this.tryParse(function (e) {\n                return t() || e();\n              });\n              if (!e.aborted && e.node) return e.error && (this.state = e.failState), e.node;\n            }\n          }, {\n            key: "tsTryParse",\n            value: function tsTryParse(t) {\n              var e = this.state.clone(),\n                  s = t();\n              return void 0 !== s && !1 !== s ? s : void (this.state = e);\n            }\n          }, {\n            key: "tsTryParseDeclare",\n            value: function tsTryParseDeclare(t) {\n              if (this.isLineTerminator()) return;\n              var e,\n                  s = this.state.type;\n\n              switch (this.isContextual("let") && (s = n._var, e = "let"), s) {\n                case n._function:\n                  return this.parseFunctionStatement(t, !1, !0);\n\n                case n._class:\n                  return t.declare = !0, this.parseClass(t, !0, !1);\n\n                case n._const:\n                  if (this.match(n._const) && this.isLookaheadContextual("enum")) return this.expect(n._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(t, !0);\n\n                case n._var:\n                  return e = e || this.state.value, this.parseVarStatement(t, e);\n\n                case n.name:\n                  {\n                    var _e34 = this.state.value;\n                    return "global" === _e34 ? this.tsParseAmbientExternalModuleDeclaration(t) : this.tsParseDeclaration(t, _e34, !0);\n                  }\n              }\n            }\n          }, {\n            key: "tsTryParseExportDeclaration",\n            value: function tsTryParseExportDeclaration() {\n              return this.tsParseDeclaration(this.startNode(), this.state.value, !0);\n            }\n          }, {\n            key: "tsParseExpressionStatement",\n            value: function tsParseExpressionStatement(t, e) {\n              switch (e.name) {\n                case "declare":\n                  {\n                    var _e35 = this.tsTryParseDeclare(t);\n\n                    if (_e35) return _e35.declare = !0, _e35;\n                    break;\n                  }\n\n                case "global":\n                  if (this.match(n.braceL)) {\n                    this.scope.enter(128), this.prodParam.enter(0);\n                    var _s23 = t;\n                    return _s23.global = !0, _s23.id = e, _s23.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(_s23, "TSModuleDeclaration");\n                  }\n\n                  break;\n\n                default:\n                  return this.tsParseDeclaration(t, e.name, !1);\n              }\n            }\n          }, {\n            key: "tsParseDeclaration",\n            value: function tsParseDeclaration(t, e, s) {\n              switch (e) {\n                case "abstract":\n                  if (this.tsCheckLineTerminatorAndMatch(n._class, s)) {\n                    var _e36 = t;\n                    return _e36.abstract = !0, s && (this.next(), this.match(n._class) || this.unexpected(null, n._class)), this.parseClass(_e36, !0, !1);\n                  }\n\n                  break;\n\n                case "enum":\n                  if (s || this.match(n.name)) return s && this.next(), this.tsParseEnumDeclaration(t, !1);\n                  break;\n\n                case "interface":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseInterfaceDeclaration(t);\n                  break;\n\n                case "module":\n                  if (s && this.next(), this.match(n.string)) return this.tsParseAmbientExternalModuleDeclaration(t);\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return this.tsParseModuleOrNamespaceDeclaration(t);\n                  break;\n\n                case "namespace":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseModuleOrNamespaceDeclaration(t);\n                  break;\n\n                case "type":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseTypeAliasDeclaration(t);\n              }\n            }\n          }, {\n            key: "tsCheckLineTerminatorAndMatch",\n            value: function tsCheckLineTerminatorAndMatch(t, e) {\n              return (e || this.match(t)) && !this.isLineTerminator();\n            }\n          }, {\n            key: "tsTryParseGenericAsyncArrowFunction",\n            value: function tsTryParseGenericAsyncArrowFunction(t, e) {\n              var _this26 = this;\n\n              if (!this.isRelational("<")) return;\n              var s = this.state.maybeInArrowParameters,\n                  i = this.state.yieldPos,\n                  r = this.state.awaitPos;\n              this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1;\n              var a = this.tsTryParseAndCatch(function () {\n                var s = _this26.startNodeAt(t, e);\n\n                return s.typeParameters = _this26.tsParseTypeParameters(), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionParams", _this26).call(_this26, s), s.returnType = _this26.tsTryParseTypeOrTypePredicateAnnotation(), _this26.expect(n.arrow), s;\n              });\n              return this.state.maybeInArrowParameters = s, this.state.yieldPos = i, this.state.awaitPos = r, a ? this.parseArrowExpression(a, null, !0) : void 0;\n            }\n          }, {\n            key: "tsParseTypeArguments",\n            value: function tsParseTypeArguments() {\n              var _this27 = this;\n\n              var t = this.startNode();\n              return t.params = this.tsInType(function () {\n                return _this27.tsInNoContext(function () {\n                  return _this27.expectRelational("<"), _this27.tsParseDelimitedList("TypeParametersOrArguments", _this27.tsParseType.bind(_this27));\n                });\n              }), this.state.exprAllowed = !1, this.expectRelational(">"), this.finishNode(t, "TSTypeParameterInstantiation");\n            }\n          }, {\n            key: "tsIsDeclarationStart",\n            value: function tsIsDeclarationStart() {\n              if (this.match(n.name)) switch (this.state.value) {\n                case "abstract":\n                case "declare":\n                case "enum":\n                case "interface":\n                case "module":\n                case "namespace":\n                case "type":\n                  return !0;\n              }\n              return !1;\n            }\n          }, {\n            key: "isExportDefaultSpecifier",\n            value: function isExportDefaultSpecifier() {\n              return !this.tsIsDeclarationStart() && (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isExportDefaultSpecifier", this).call(this);\n            }\n          }, {\n            key: "parseAssignableListItem",\n            value: function parseAssignableListItem(t, e) {\n              var s = this.state.start,\n                  i = this.state.startLoc;\n              var r,\n                  a = !1;\n              t && (r = this.parseAccessModifier(), a = !!this.tsParseModifier(["readonly"]));\n              var n = this.parseMaybeDefault();\n              this.parseAssignableListItemTypes(n);\n              var o = this.parseMaybeDefault(n.start, n.loc.start, n);\n\n              if (r || a) {\n                var _t41 = this.startNodeAt(s, i);\n\n                return e.length && (_t41.decorators = e), r && (_t41.accessibility = r), a && (_t41.readonly = a), "Identifier" !== o.type && "AssignmentPattern" !== o.type && this.raise(_t41.start, rt.UnsupportedParameterPropertyKind), _t41.parameter = o, this.finishNode(_t41, "TSParameterProperty");\n              }\n\n              return e.length && (n.decorators = e), o;\n            }\n          }, {\n            key: "parseFunctionBodyAndFinish",\n            value: function parseFunctionBodyAndFinish(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              this.match(n.colon) && (t.returnType = this.tsParseTypeOrTypePredicateAnnotation(n.colon));\n              var i = "FunctionDeclaration" === e ? "TSDeclareFunction" : "ClassMethod" === e ? "TSDeclareMethod" : void 0;\n              i && !this.match(n.braceL) && this.isLineTerminator() ? this.finishNode(t, i) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionBodyAndFinish", this).call(this, t, e, s);\n            }\n          }, {\n            key: "registerFunctionStatementId",\n            value: function registerFunctionStatementId(t) {\n              !t.body && t.id ? this.checkLVal(t.id, 1024, null, "function name") : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "registerFunctionStatementId", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseSubscript",\n            value: function parseSubscript(t, e, s, i, r) {\n              var _this28 = this;\n\n              if (!this.hasPrecedingLineBreak() && this.match(n.bang)) {\n                this.state.exprAllowed = !1, this.next();\n\n                var _i21 = this.startNodeAt(e, s);\n\n                return _i21.expression = t, this.finishNode(_i21, "TSNonNullExpression");\n              }\n\n              if (this.isRelational("<")) {\n                var _a10 = this.tsTryParseAndCatch(function () {\n                  if (!i && _this28.atPossibleAsyncArrow(t)) {\n                    var _t42 = _this28.tsTryParseGenericAsyncArrowFunction(e, s);\n\n                    if (_t42) return _t42;\n                  }\n\n                  var a = _this28.startNodeAt(e, s);\n\n                  a.callee = t;\n\n                  var o = _this28.tsParseTypeArguments();\n\n                  if (o) {\n                    if (!i && _this28.eat(n.parenL)) return a.arguments = _this28.parseCallExpressionArguments(n.parenR, !1), a.typeParameters = o, _this28.finishCallExpression(a, r.optionalChainMember);\n                    if (_this28.match(n.backQuote)) return _this28.parseTaggedTemplateExpression(e, s, t, r, o);\n                  }\n\n                  _this28.unexpected();\n                });\n\n                if (_a10) return _a10;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseSubscript", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parseNewArguments",\n            value: function parseNewArguments(t) {\n              var _this29 = this;\n\n              if (this.isRelational("<")) {\n                var _e37 = this.tsTryParseAndCatch(function () {\n                  var t = _this29.tsParseTypeArguments();\n\n                  return _this29.match(n.parenL) || _this29.unexpected(), t;\n                });\n\n                _e37 && (t.typeParameters = _e37);\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseNewArguments", this).call(this, t);\n            }\n          }, {\n            key: "parseExprOp",\n            value: function parseExprOp(t, e, s, i, r) {\n              if (st(n._in.binop) > i && !this.hasPrecedingLineBreak() && this.isContextual("as")) {\n                var _a11 = this.startNodeAt(e, s);\n\n                _a11.expression = t;\n\n                var _n4 = this.tsTryNextParseConstantContext();\n\n                return _a11.typeAnnotation = _n4 || this.tsNextThenParseType(), this.finishNode(_a11, "TSAsExpression"), this.parseExprOp(_a11, e, s, i, r);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExprOp", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "checkReservedWord",\n            value: function checkReservedWord(t, e, s, i) {}\n          }, {\n            key: "checkDuplicateExports",\n            value: function checkDuplicateExports() {}\n          }, {\n            key: "parseImport",\n            value: function parseImport(t) {\n              if (this.match(n.name) || this.match(n.star) || this.match(n.braceL)) {\n                var _e38 = this.lookahead();\n\n                if (this.match(n.name) && _e38.type === n.eq) return this.tsParseImportEqualsDeclaration(t);\n                !this.isContextual("type") || _e38.type === n.comma || _e38.type === n.name && "from" === _e38.value ? t.importKind = "value" : (t.importKind = "type", this.next());\n              }\n\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseImport", this).call(this, t);\n              return "type" === e.importKind && e.specifiers.length > 1 && "ImportDefaultSpecifier" === e.specifiers[0].type && this.raise(e.start, "A type-only import can specify a default import or named bindings, but not both."), e;\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              if (this.match(n._import)) return this.expect(n._import), this.tsParseImportEqualsDeclaration(t, !0);\n\n              if (this.eat(n.eq)) {\n                var _e39 = t;\n                return _e39.expression = this.parseExpression(), this.semicolon(), this.finishNode(_e39, "TSExportAssignment");\n              }\n\n              if (this.eatContextual("as")) {\n                var _e40 = t;\n                return this.expectContextual("namespace"), _e40.id = this.parseIdentifier(), this.semicolon(), this.finishNode(_e40, "TSNamespaceExportDeclaration");\n              }\n\n              return this.isContextual("type") && this.lookahead().type === n.braceL ? (this.next(), t.exportKind = "type") : t.exportKind = "value", (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExport", this).call(this, t);\n            }\n          }, {\n            key: "isAbstractClass",\n            value: function isAbstractClass() {\n              return this.isContextual("abstract") && this.lookahead().type === n._class;\n            }\n          }, {\n            key: "parseExportDefaultExpression",\n            value: function parseExportDefaultExpression() {\n              if (this.isAbstractClass()) {\n                var _t43 = this.startNode();\n\n                return this.next(), this.parseClass(_t43, !0, !0), _t43.abstract = !0, _t43;\n              }\n\n              if ("interface" === this.state.value) {\n                var _t44 = this.tsParseDeclaration(this.startNode(), this.state.value, !0);\n\n                if (_t44) return _t44;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExportDefaultExpression", this).call(this);\n            }\n          }, {\n            key: "parseStatementContent",\n            value: function parseStatementContent(t, e) {\n              if (this.state.type === n._const) {\n                var _t45 = this.lookahead();\n\n                if (_t45.type === n.name && "enum" === _t45.value) {\n                  var _t46 = this.startNode();\n\n                  return this.expect(n._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(_t46, !0);\n                }\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseStatementContent", this).call(this, t, e);\n            }\n          }, {\n            key: "parseAccessModifier",\n            value: function parseAccessModifier() {\n              return this.tsParseModifier(["public", "protected", "private"]);\n            }\n          }, {\n            key: "parseClassMember",\n            value: function parseClassMember(t, e, s, i) {\n              this.tsParseModifiers(e, ["declare"]);\n              var r = this.parseAccessModifier();\n              r && (e.accessibility = r), this.tsParseModifiers(e, ["declare"]), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassMember", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassMemberWithIsStatic",\n            value: function parseClassMemberWithIsStatic(t, e, s, i, r) {\n              this.tsParseModifiers(e, ["abstract", "readonly", "declare"]);\n              var a = this.tsTryParseIndexSignature(e);\n              if (a) return t.body.push(a), e.abstract && this.raise(e.start, rt.IndexSignatureHasAbstract), i && this.raise(e.start, rt.IndexSignatureHasStatic), void (e.accessibility && this.raise(e.start, rt.IndexSignatureHasAccessibility, e.accessibility));\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassMemberWithIsStatic", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parsePostMemberNameModifiers",\n            value: function parsePostMemberNameModifiers(t) {\n              this.eat(n.question) && (t.optional = !0), t.readonly && this.match(n.parenL) && this.raise(t.start, rt.ClassMethodHasReadonly), t.declare && this.match(n.parenL) && this.raise(t.start, rt.ClassMethodHasDeclare);\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              return ("Identifier" === e.type ? this.tsParseExpressionStatement(t, e) : void 0) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExpressionStatement", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseExportDeclaration",\n            value: function shouldParseExportDeclaration() {\n              return !!this.tsIsDeclarationStart() || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseExportDeclaration", this).call(this);\n            }\n          }, {\n            key: "parseConditional",\n            value: function parseConditional(t, e, s, i, r) {\n              var _this30 = this;\n\n              if (!r || !this.match(n.question)) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseConditional", this).call(this, t, e, s, i, r);\n              var a = this.tryParse(function () {\n                return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseConditional", _this30).call(_this30, t, e, s, i);\n              });\n              return a.node ? (a.error && (this.state = a.failState), a.node) : (r.start = a.error.pos || this.state.start, t);\n            }\n          }, {\n            key: "parseParenItem",\n            value: function parseParenItem(t, e, s) {\n              if (t = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseParenItem", this).call(this, t, e, s), this.eat(n.question) && (t.optional = !0, this.resetEndLocation(t)), this.match(n.colon)) {\n                var _i22 = this.startNodeAt(e, s);\n\n                return _i22.expression = t, _i22.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(_i22, "TSTypeCastExpression");\n              }\n\n              return t;\n            }\n          }, {\n            key: "parseExportDeclaration",\n            value: function parseExportDeclaration(t) {\n              var e = this.state.start,\n                  s = this.state.startLoc,\n                  i = this.eatContextual("declare");\n              var r;\n              return this.match(n.name) && (r = this.tsTryParseExportDeclaration()), r || (r = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExportDeclaration", this).call(this, t)), r && ("TSInterfaceDeclaration" === r.type || "TSTypeAliasDeclaration" === r.type || i) && (t.exportKind = "type"), r && i && (this.resetStartLocation(r, e, s), r.declare = !0), r;\n            }\n          }, {\n            key: "parseClassId",\n            value: function parseClassId(t, e, s) {\n              if ((!e || s) && this.isContextual("implements")) return;\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassId", this).call(this, t, e, s, t.declare ? 1024 : 139);\n              var i = this.tsTryParseTypeParameters();\n              i && (t.typeParameters = i);\n            }\n          }, {\n            key: "parseClassPropertyAnnotation",\n            value: function parseClassPropertyAnnotation(t) {\n              !t.optional && this.eat(n.bang) && (t.definite = !0);\n              var e = this.tsTryParseTypeAnnotation();\n              e && (t.typeAnnotation = e);\n            }\n          }, {\n            key: "parseClassProperty",\n            value: function parseClassProperty(t) {\n              return this.parseClassPropertyAnnotation(t), t.declare && this.match(n.equal) && this.raise(this.state.start, rt.DeclareClassFieldHasInitializer), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassProperty", this).call(this, t);\n            }\n          }, {\n            key: "parseClassPrivateProperty",\n            value: function parseClassPrivateProperty(t) {\n              return t.abstract && this.raise(t.start, rt.PrivateElementHasAbstract), t.accessibility && this.raise(t.start, rt.PrivateElementHasAccessibility, t.accessibility), this.parseClassPropertyAnnotation(t), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassPrivateProperty", this).call(this, t);\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              var n = this.tsTryParseTypeParameters();\n              n && (e.typeParameters = n), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "pushClassMethod", this).call(this, t, e, s, i, r, a);\n            }\n          }, {\n            key: "pushClassPrivateMethod",\n            value: function pushClassPrivateMethod(t, e, s, i) {\n              var r = this.tsTryParseTypeParameters();\n              r && (e.typeParameters = r), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "pushClassPrivateMethod", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassSuper",\n            value: function parseClassSuper(t) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassSuper", this).call(this, t), t.superClass && this.isRelational("<") && (t.superTypeParameters = this.tsParseTypeArguments()), this.eatContextual("implements") && (t.implements = this.tsParseHeritageClause("implements"));\n            }\n          }, {\n            key: "parseObjPropValue",\n            value: function parseObjPropValue(t) {\n              var _get2;\n\n              var s = this.tsTryParseTypeParameters();\n\n              for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                e[_key2 - 1] = arguments[_key2];\n              }\n\n              s && (t.typeParameters = s), (_get2 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseObjPropValue", this)).call.apply(_get2, [this, t].concat(e));\n            }\n          }, {\n            key: "parseFunctionParams",\n            value: function parseFunctionParams(t, e) {\n              var s = this.tsTryParseTypeParameters();\n              s && (t.typeParameters = s), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionParams", this).call(this, t, e);\n            }\n          }, {\n            key: "parseVarId",\n            value: function parseVarId(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseVarId", this).call(this, t, e), "Identifier" === t.id.type && this.eat(n.bang) && (t.definite = !0);\n              var s = this.tsTryParseTypeAnnotation();\n              s && (t.id.typeAnnotation = s, this.resetEndLocation(t.id));\n            }\n          }, {\n            key: "parseAsyncArrowFromCallExpression",\n            value: function parseAsyncArrowFromCallExpression(t, e) {\n              return this.match(n.colon) && (t.returnType = this.tsParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseAsyncArrowFromCallExpression", this).call(this, t, e);\n            }\n          }, {\n            key: "parseMaybeAssign",\n            value: function parseMaybeAssign() {\n              var _this31 = this,\n                  _get4;\n\n              for (var _len3 = arguments.length, t = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                t[_key3] = arguments[_key3];\n              }\n\n              var e, s, i, r;\n\n              if (this.match(n.jsxTagStart)) {\n                if (e = this.state.clone(), s = this.tryParse(function () {\n                  var _get3;\n\n                  return (_get3 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get3, [_this31].concat(t));\n                }, e), !s.error) return s.node;\n                var _i23 = this.state.context;\n                _i23[_i23.length - 1] === x.j_oTag ? _i23.length -= 2 : _i23[_i23.length - 1] === x.j_expr && (_i23.length -= 1);\n              }\n\n              if (!(s && s.error || this.isRelational("<"))) return (_get4 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", this)).call.apply(_get4, [this].concat(t));\n              e = e || this.state.clone();\n              var a = this.tryParse(function (e) {\n                var _get5;\n\n                r = _this31.tsParseTypeParameters();\n\n                var s = (_get5 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get5, [_this31].concat(t));\n\n                return ("ArrowFunctionExpression" !== s.type || s.extra && s.extra.parenthesized) && e(), r && 0 !== r.params.length && _this31.resetStartLocationFromNode(s, r), s.typeParameters = r, s;\n              }, e);\n              if (!a.error && !a.aborted) return a.node;\n              if (!s && (it(!this.hasPlugin("jsx")), i = this.tryParse(function () {\n                var _get6;\n\n                return (_get6 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get6, [_this31].concat(t));\n              }, e), !i.error)) return i.node;\n              if (s && s.node) return this.state = s.failState, s.node;\n              if (a.node) return this.state = a.failState, a.node;\n              if (i && i.node) return this.state = i.failState, i.node;\n              if (s && s.thrown) throw s.error;\n              if (a.thrown) throw a.error;\n              if (i && i.thrown) throw i.error;\n              throw s && s.error || a.error || i && i.error;\n            }\n          }, {\n            key: "parseMaybeUnary",\n            value: function parseMaybeUnary(t) {\n              return !this.hasPlugin("jsx") && this.isRelational("<") ? this.tsParseTypeAssertion() : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeUnary", this).call(this, t);\n            }\n          }, {\n            key: "parseArrow",\n            value: function parseArrow(t) {\n              var _this32 = this;\n\n              if (this.match(n.colon)) {\n                var _e41 = this.tryParse(function (t) {\n                  var e = _this32.tsParseTypeOrTypePredicateAnnotation(n.colon);\n\n                  return !_this32.canInsertSemicolon() && _this32.match(n.arrow) || t(), e;\n                });\n\n                if (_e41.aborted) return;\n                _e41.thrown || (_e41.error && (this.state = _e41.failState), t.returnType = _e41.node);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseArrow", this).call(this, t);\n            }\n          }, {\n            key: "parseAssignableListItemTypes",\n            value: function parseAssignableListItemTypes(t) {\n              this.eat(n.question) && ("Identifier" !== t.type && this.raise(t.start, rt.PatternIsOptional), t.optional = !0);\n              var e = this.tsTryParseTypeAnnotation();\n              return e && (t.typeAnnotation = e), this.resetEndLocation(t), t;\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              switch (t.type) {\n                case "TSTypeCastExpression":\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, this.typeCastToParameter(t));\n\n                case "TSParameterProperty":\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, t);\n\n                case "TSAsExpression":\n                case "TSNonNullExpression":\n                case "TSTypeAssertion":\n                  return t.expression = this.toAssignable(t.expression), t;\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, t);\n              }\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n\n              switch (t.type) {\n                case "TSTypeCastExpression":\n                  return;\n\n                case "TSParameterProperty":\n                  return void this.checkLVal(t.parameter, e, s, "parameter property");\n\n                case "TSAsExpression":\n                case "TSNonNullExpression":\n                case "TSTypeAssertion":\n                  return void this.checkLVal(t.expression, e, s, i);\n\n                default:\n                  return void (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "checkLVal", this).call(this, t, e, s, i);\n              }\n            }\n          }, {\n            key: "parseBindingAtom",\n            value: function parseBindingAtom() {\n              switch (this.state.type) {\n                case n._this:\n                  return this.parseIdentifier(!0);\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseBindingAtom", this).call(this);\n              }\n            }\n          }, {\n            key: "parseMaybeDecoratorArguments",\n            value: function parseMaybeDecoratorArguments(t) {\n              if (this.isRelational("<")) {\n                var _e42 = this.tsParseTypeArguments();\n\n                if (this.match(n.parenL)) {\n                  var _s24 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDecoratorArguments", this).call(this, t);\n\n                  return _s24.typeParameters = _e42, _s24;\n                }\n\n                this.unexpected(this.state.start, n.parenL);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDecoratorArguments", this).call(this, t);\n            }\n          }, {\n            key: "isClassMethod",\n            value: function isClassMethod() {\n              return this.isRelational("<") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isClassMethod", this).call(this);\n            }\n          }, {\n            key: "isClassProperty",\n            value: function isClassProperty() {\n              return this.match(n.bang) || this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isClassProperty", this).call(this);\n            }\n          }, {\n            key: "parseMaybeDefault",\n            value: function parseMaybeDefault() {\n              var _get7;\n\n              for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                t[_key4] = arguments[_key4];\n              }\n\n              var e = (_get7 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDefault", this)).call.apply(_get7, [this].concat(t));\n\n              return "AssignmentPattern" === e.type && e.typeAnnotation && e.right.start < e.typeAnnotation.start && this.raise(e.typeAnnotation.start, rt.TypeAnnotationAfterAssign), e;\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              return !this.state.inType || 62 !== t && 60 !== t ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "getTokenFromCode", this).call(this, t) : this.finishOp(n.relational, 1);\n            }\n          }, {\n            key: "toAssignableList",\n            value: function toAssignableList(t) {\n              for (var _e43 = 0; _e43 < t.length; _e43++) {\n                var _s25 = t[_e43];\n                if (_s25) switch (_s25.type) {\n                  case "TSTypeCastExpression":\n                    t[_e43] = this.typeCastToParameter(_s25);\n                    break;\n\n                  case "TSAsExpression":\n                  case "TSTypeAssertion":\n                    this.state.maybeInArrowParameters ? this.raise(_s25.start, rt.UnexpectedTypeCastInParameter) : t[_e43] = this.typeCastToParameter(_s25);\n                }\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignableList", this).apply(this, arguments);\n            }\n          }, {\n            key: "typeCastToParameter",\n            value: function typeCastToParameter(t) {\n              return t.expression.typeAnnotation = t.typeAnnotation, this.resetEndLocation(t.expression, t.typeAnnotation.end, t.typeAnnotation.loc.end), t.expression;\n            }\n          }, {\n            key: "toReferencedList",\n            value: function toReferencedList(t, e) {\n              for (var _e44 = 0; _e44 < t.length; _e44++) {\n                var _s26 = t[_e44];\n                _s26 && "TSTypeCastExpression" === _s26.type && this.raise(_s26.start, rt.UnexpectedTypeAnnotation);\n              }\n\n              return t;\n            }\n          }, {\n            key: "shouldParseArrow",\n            value: function shouldParseArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseArrow", this).call(this);\n            }\n          }, {\n            key: "shouldParseAsyncArrow",\n            value: function shouldParseAsyncArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseAsyncArrow", this).call(this);\n            }\n          }, {\n            key: "canHaveLeadingDecorator",\n            value: function canHaveLeadingDecorator() {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "canHaveLeadingDecorator", this).call(this) || this.isAbstractClass();\n            }\n          }, {\n            key: "jsxParseOpeningElementAfterName",\n            value: function jsxParseOpeningElementAfterName(t) {\n              var _this33 = this;\n\n              if (this.isRelational("<")) {\n                var _e45 = this.tsTryParseAndCatch(function () {\n                  return _this33.tsParseTypeArguments();\n                });\n\n                _e45 && (t.typeParameters = _e45);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "jsxParseOpeningElementAfterName", this).call(this, t);\n            }\n          }, {\n            key: "getGetterSetterExpectedParamCount",\n            value: function getGetterSetterExpectedParamCount(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "getGetterSetterExpectedParamCount", this).call(this, t),\n                  s = t.params[0];\n              return s && "Identifier" === s.type && "this" === s.name ? e + 1 : e;\n            }\n          }]);\n          return _class4;\n        }(t);\n      },\n      v8intrinsic: function v8intrinsic(t) {\n        return /*#__PURE__*/function (_t47) {\n          (0, _inherits2.default)(_class5, _t47);\n\n          var _super7 = _createSuper(_class5);\n\n          function _class5() {\n            (0, _classCallCheck2.default)(this, _class5);\n            return _super7.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class5, [{\n            key: "parseV8Intrinsic",\n            value: function parseV8Intrinsic() {\n              if (this.match(n.modulo)) {\n                var _t48 = this.state.start,\n                    _e46 = this.startNode();\n\n                if (this.eat(n.modulo), this.match(n.name)) {\n                  var _t49 = this.parseIdentifierName(this.state.start),\n                      _s27 = this.createIdentifier(_e46, _t49);\n\n                  if (_s27.type = "V8IntrinsicIdentifier", this.match(n.parenL)) return _s27;\n                }\n\n                this.unexpected(_t48);\n              }\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom() {\n              return this.parseV8Intrinsic() || (0, _get8.default)((0, _getPrototypeOf2.default)(_class5.prototype), "parseExprAtom", this).apply(this, arguments);\n            }\n          }]);\n          return _class5;\n        }(t);\n      },\n      placeholders: function placeholders(t) {\n        return /*#__PURE__*/function (_t50) {\n          (0, _inherits2.default)(_class6, _t50);\n\n          var _super8 = _createSuper(_class6);\n\n          function _class6() {\n            (0, _classCallCheck2.default)(this, _class6);\n            return _super8.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class6, [{\n            key: "parsePlaceholder",\n            value: function parsePlaceholder(t) {\n              if (this.match(n.placeholder)) {\n                var _e47 = this.startNode();\n\n                return this.next(), this.assertNoSpace("Unexpected space in placeholder."), _e47.name = (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseIdentifier", this).call(this, !0), this.assertNoSpace("Unexpected space in placeholder."), this.expect(n.placeholder), this.finishPlaceholder(_e47, t);\n              }\n            }\n          }, {\n            key: "finishPlaceholder",\n            value: function finishPlaceholder(t, e) {\n              var s = !(!t.expectedNode || "Placeholder" !== t.type);\n              return t.expectedNode = e, s ? t : this.finishNode(t, "Placeholder");\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              return 37 === t && 37 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.placeholder, 2) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "getTokenFromCode", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom() {\n              return this.parsePlaceholder("Expression") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExprAtom", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseIdentifier",\n            value: function parseIdentifier() {\n              return this.parsePlaceholder("Identifier") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseIdentifier", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkReservedWord",\n            value: function checkReservedWord(t) {\n              void 0 !== t && (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkReservedWord", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseBindingAtom",\n            value: function parseBindingAtom() {\n              return this.parsePlaceholder("Pattern") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseBindingAtom", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              "Placeholder" !== t.type && (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkLVal", this).apply(this, arguments);\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return t && "Placeholder" === t.type && "Expression" === t.expectedNode ? (t.expectedNode = "Pattern", t) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "toAssignable", this).apply(this, arguments);\n            }\n          }, {\n            key: "verifyBreakContinue",\n            value: function verifyBreakContinue(t) {\n              t.label && "Placeholder" === t.label.type || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "verifyBreakContinue", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              if ("Placeholder" !== e.type || e.extra && e.extra.parenthesized) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExpressionStatement", this).apply(this, arguments);\n\n              if (this.match(n.colon)) {\n                var _s28 = t;\n                return _s28.label = this.finishPlaceholder(e, "Identifier"), this.next(), _s28.body = this.parseStatement("label"), this.finishNode(_s28, "LabeledStatement");\n              }\n\n              return this.semicolon(), t.name = e.name, this.finishPlaceholder(t, "Statement");\n            }\n          }, {\n            key: "parseBlock",\n            value: function parseBlock() {\n              return this.parsePlaceholder("BlockStatement") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseBlock", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseFunctionId",\n            value: function parseFunctionId() {\n              return this.parsePlaceholder("Identifier") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseFunctionId", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseClass",\n            value: function parseClass(t, e, s) {\n              var i = e ? "ClassDeclaration" : "ClassExpression";\n              this.next(), this.takeDecorators(t);\n              var r = this.parsePlaceholder("Identifier");\n              if (r) {\n                if (this.match(n._extends) || this.match(n.placeholder) || this.match(n.braceL)) t.id = r;else {\n                  if (s || !e) return t.id = null, t.body = this.finishPlaceholder(r, "ClassBody"), this.finishNode(t, i);\n                  this.unexpected(null, "A class name is required");\n                }\n              } else this.parseClassId(t, e, s);\n              return this.parseClassSuper(t), t.body = this.parsePlaceholder("ClassBody") || this.parseClassBody(!!t.superClass), this.finishNode(t, i);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              var e = this.parsePlaceholder("Identifier");\n              if (!e) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExport", this).apply(this, arguments);\n              if (!this.isContextual("from") && !this.match(n.comma)) return t.specifiers = [], t.source = null, t.declaration = this.finishPlaceholder(e, "Declaration"), this.finishNode(t, "ExportNamedDeclaration");\n              this.expectPlugin("exportDefaultFrom");\n              var s = this.startNode();\n              return s.exported = e, t.specifiers = [this.finishNode(s, "ExportDefaultSpecifier")], (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExport", this).call(this, t);\n            }\n          }, {\n            key: "maybeParseExportDefaultSpecifier",\n            value: function maybeParseExportDefaultSpecifier(t) {\n              return !!(t.specifiers && t.specifiers.length > 0) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "maybeParseExportDefaultSpecifier", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkExport",\n            value: function checkExport(t) {\n              var e = t.specifiers;\n              e && e.length && (t.specifiers = e.filter(function (t) {\n                return "Placeholder" === t.exported.type;\n              })), (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkExport", this).call(this, t), t.specifiers = e;\n            }\n          }, {\n            key: "parseImport",\n            value: function parseImport(t) {\n              var e = this.parsePlaceholder("Identifier");\n              if (!e) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseImport", this).apply(this, arguments);\n              if (t.specifiers = [], !this.isContextual("from") && !this.match(n.comma)) return t.source = this.finishPlaceholder(e, "StringLiteral"), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n              var s = this.startNodeAtNode(e);\n\n              if (s.local = e, this.finishNode(s, "ImportDefaultSpecifier"), t.specifiers.push(s), this.eat(n.comma)) {\n                this.maybeParseStarImportSpecifier(t) || this.parseNamedImportSpecifiers(t);\n              }\n\n              return this.expectContextual("from"), t.source = this.parseImportSource(), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n            }\n          }, {\n            key: "parseImportSource",\n            value: function parseImportSource() {\n              return this.parsePlaceholder("StringLiteral") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseImportSource", this).apply(this, arguments);\n            }\n          }]);\n          return _class6;\n        }(t);\n      }\n    },\n        ct = Object.keys(pt),\n        ut = {\n      sourceType: "script",\n      sourceFilename: void 0,\n      startLine: 1,\n      allowAwaitOutsideFunction: !1,\n      allowReturnOutsideFunction: !1,\n      allowImportExportEverywhere: !1,\n      allowSuperOutsideMethod: !1,\n      allowUndeclaredExports: !1,\n      plugins: [],\n      strictMode: null,\n      ranges: !1,\n      tokens: !1,\n      createParenthesizedExpressions: !1,\n      errorRecovery: !1\n    };\n\n    var lt = /*#__PURE__*/function () {\n      function lt() {\n        (0, _classCallCheck2.default)(this, lt);\n        this.errors = [], this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.inParameters = !1, this.maybeInArrowParameters = !1, this.maybeInAsyncArrowHead = !1, this.inPipeline = !1, this.inType = !1, this.noAnonFunctionType = !1, this.inPropertyName = !1, this.hasFlowComment = !1, this.isIterator = !1, this.topicContext = {\n          maxNumOfResolvableTopics: 0,\n          maxTopicIndex: null\n        }, this.soloAwait = !1, this.inFSharpPipelineDirectBody = !1, this.labels = [], this.decoratorStack = [[]], this.yieldPos = -1, this.awaitPos = -1, this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.commentPreviousNode = null, this.pos = 0, this.lineStart = 0, this.type = n.eof, this.value = null, this.start = 0, this.end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.lastTokStart = 0, this.lastTokEnd = 0, this.context = [x.braceStatement], this.exprAllowed = !0, this.containsEsc = !1, this.octalPositions = [], this.exportedIdentifiers = [], this.tokensLength = 0;\n      }\n\n      (0, _createClass2.default)(lt, [{\n        key: "init",\n        value: function init(t) {\n          this.strict = !1 !== t.strictMode && "module" === t.sourceType, this.curLine = t.startLine, this.startLoc = this.endLoc = this.curPosition();\n        }\n      }, {\n        key: "curPosition",\n        value: function curPosition() {\n          return new l(this.curLine, this.pos - this.lineStart);\n        }\n      }, {\n        key: "clone",\n        value: function clone(t) {\n          var e = new lt(),\n              s = Object.keys(this);\n\n          for (var _i24 = 0, _r9 = s.length; _i24 < _r9; _i24++) {\n            var _r10 = s[_i24];\n            var _a12 = this[_r10];\n            !t && Array.isArray(_a12) && (_a12 = _a12.slice()), e[_r10] = _a12;\n          }\n\n          return e;\n        }\n      }]);\n      return lt;\n    }();\n\n    var dt = function dt(t) {\n      return t >= 48 && t <= 57;\n    };\n\n    var mt = new Set(["g", "m", "s", "i", "y", "u"]),\n        ft = {\n      decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n      hex: [46, 88, 95, 120]\n    },\n        Dt = {\n      bin: [48, 49]\n    };\n    Dt.oct = [].concat((0, _toConsumableArray2.default)(Dt.bin), [50, 51, 52, 53, 54, 55]), Dt.dec = [].concat((0, _toConsumableArray2.default)(Dt.oct), [56, 57]), Dt.hex = [].concat((0, _toConsumableArray2.default)(Dt.dec), [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);\n    var yt = /*#__PURE__*/(0, _createClass2.default)(function yt(t) {\n      (0, _classCallCheck2.default)(this, yt);\n      this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, this.loc = new d(t.startLoc, t.endLoc);\n    });\n    var xt = /*#__PURE__*/(0, _createClass2.default)(function xt() {\n      (0, _classCallCheck2.default)(this, xt);\n      this.shorthandAssign = -1, this.doubleProto = -1;\n    });\n\n    var gt = /*#__PURE__*/function () {\n      function gt(t, e, s) {\n        (0, _classCallCheck2.default)(this, gt);\n        this.type = "", this.start = e, this.end = 0, this.loc = new d(s), t && t.options.ranges && (this.range = [e, 0]), t && t.filename && (this.loc.filename = t.filename);\n      }\n\n      (0, _createClass2.default)(gt, [{\n        key: "__clone",\n        value: function __clone() {\n          var t = new gt(),\n              e = Object.keys(this);\n\n          for (var _s29 = 0, _i25 = e.length; _s29 < _i25; _s29++) {\n            var _i26 = e[_s29];\n            "leadingComments" !== _i26 && "trailingComments" !== _i26 && "innerComments" !== _i26 && (t[_i26] = this[_i26]);\n          }\n\n          return t;\n        }\n      }]);\n      return gt;\n    }();\n\n    var Pt = function Pt(t) {\n      return "ParenthesizedExpression" === t.type ? Pt(t.expression) : t;\n    };\n\n    var Et = {\n      kind: "loop"\n    },\n        Ct = {\n      kind: "switch"\n    };\n    var bt = /*#__PURE__*/(0, _createClass2.default)(function bt() {\n      (0, _classCallCheck2.default)(this, bt);\n      this.privateNames = new Set(), this.loneAccessors = new Map(), this.undefinedPrivateNames = new Map();\n    });\n\n    var Tt = /*#__PURE__*/function () {\n      function Tt(t) {\n        (0, _classCallCheck2.default)(this, Tt);\n        this.stack = [], this.undefinedPrivateNames = new Map(), this.raise = t;\n      }\n\n      (0, _createClass2.default)(Tt, [{\n        key: "current",\n        value: function current() {\n          return this.stack[this.stack.length - 1];\n        }\n      }, {\n        key: "enter",\n        value: function enter() {\n          this.stack.push(new bt());\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          var t = this.stack.pop(),\n              e = this.current();\n\n          for (var _s30 = 0, _i27 = Array.from(t.undefinedPrivateNames); _s30 < _i27.length; _s30++) {\n            var _i27$_s = (0, _slicedToArray2.default)(_i27[_s30], 2),\n                _t51 = _i27$_s[0],\n                _r11 = _i27$_s[1];\n\n            e ? e.undefinedPrivateNames.has(_t51) || e.undefinedPrivateNames.set(_t51, _r11) : this.raise(_r11, f.InvalidPrivateFieldResolution, _t51);\n          }\n        }\n      }, {\n        key: "declarePrivateName",\n        value: function declarePrivateName(t, e, s) {\n          var i = this.current();\n          var r = i.privateNames.has(t);\n\n          if (3 & e) {\n            var _s31 = r && i.loneAccessors.get(t);\n\n            if (_s31) {\n              var _a13 = 4 & _s31,\n                  _n5 = 4 & e;\n\n              r = (3 & _s31) === (3 & e) || _a13 !== _n5, r || i.loneAccessors.delete(t);\n            } else r || i.loneAccessors.set(t, e);\n          }\n\n          r && this.raise(s, f.PrivateNameRedeclaration, t), i.privateNames.add(t), i.undefinedPrivateNames.delete(t);\n        }\n      }, {\n        key: "usePrivateName",\n        value: function usePrivateName(t, e) {\n          var s;\n\n          for (var _e48 = 0, _i28 = this.stack; _e48 < _i28.length; _e48++) {\n            if (s = _i28[_e48], s.privateNames.has(t)) return;\n          }\n\n          s ? s.undefinedPrivateNames.set(t, e) : this.raise(e, f.InvalidPrivateFieldResolution, t);\n        }\n      }]);\n      return Tt;\n    }();\n\n    var At = /*#__PURE__*/function (_ref17) {\n      (0, _inherits2.default)(At, _ref17);\n\n      var _super9 = _createSuper(At);\n\n      function At(t, e) {\n        var _this34;\n\n        (0, _classCallCheck2.default)(this, At);\n        _this34 = _super9.call(this, t = function (t) {\n          var e = {};\n\n          for (var _s32 = 0, _i29 = Object.keys(ut); _s32 < _i29.length; _s32++) {\n            var _r12 = _i29[_s32];\n            e[_r12] = t && null != t[_r12] ? t[_r12] : ut[_r12];\n          }\n\n          return e;\n        }(t), e);\n\n        var s = _this34.getScopeHandler();\n\n        _this34.options = t, _this34.inModule = "module" === _this34.options.sourceType, _this34.scope = new s(_this34.raise.bind((0, _assertThisInitialized2.default)(_this34)), _this34.inModule), _this34.prodParam = new tt(), _this34.classScope = new Tt(_this34.raise.bind((0, _assertThisInitialized2.default)(_this34))), _this34.plugins = function (t) {\n          var e = new Map();\n\n          for (var _s33 = 0; _s33 < t.length; _s33++) {\n            var _i30 = t[_s33],\n                _ref18 = Array.isArray(_i30) ? _i30 : [_i30, {}],\n                _ref19 = (0, _slicedToArray2.default)(_ref18, 2),\n                _r13 = _ref19[0],\n                _a14 = _ref19[1];\n\n            e.has(_r13) || e.set(_r13, _a14 || {});\n          }\n\n          return e;\n        }(_this34.options.plugins), _this34.filename = t.sourceFilename;\n        return _this34;\n      }\n\n      (0, _createClass2.default)(At, [{\n        key: "getScopeHandler",\n        value: function getScopeHandler() {\n          return Y;\n        }\n      }, {\n        key: "parse",\n        value: function parse() {\n          var t = 0;\n          this.hasPlugin("topLevelAwait") && this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t);\n          var e = this.startNode(),\n              s = this.startNode();\n          return this.nextToken(), e.errors = null, this.parseTopLevel(e, s), e.errors = this.state.errors, e;\n        }\n      }]);\n      return At;\n    }( /*#__PURE__*/function (_ref20) {\n      (0, _inherits2.default)(_class7, _ref20);\n\n      var _super10 = _createSuper(_class7);\n\n      function _class7() {\n        (0, _classCallCheck2.default)(this, _class7);\n        return _super10.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class7, [{\n        key: "parseTopLevel",\n        value: function parseTopLevel(t, e) {\n          if (e.sourceType = this.options.sourceType, e.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(e, !0, !0, n.eof), this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) for (var _t52 = 0, _e49 = Array.from(this.scope.undefinedExports); _t52 < _e49.length; _t52++) {\n            var _e49$_t = (0, _slicedToArray2.default)(_e49[_t52], 1),\n                _s34 = _e49$_t[0],\n                _i31 = this.scope.undefinedExports.get(_s34);\n\n            this.raise(_i31, f.ModuleExportUndefined, _s34);\n          }\n          return t.program = this.finishNode(e, "Program"), t.comments = this.state.comments, this.options.tokens && (t.tokens = this.tokens), this.finishNode(t, "File");\n        }\n      }, {\n        key: "stmtToDirective",\n        value: function stmtToDirective(t) {\n          var e = t.expression,\n              s = this.startNodeAt(e.start, e.loc.start),\n              i = this.startNodeAt(t.start, t.loc.start),\n              r = this.input.slice(e.start, e.end),\n              a = s.value = r.slice(1, -1);\n          return this.addExtra(s, "raw", r), this.addExtra(s, "rawValue", a), i.value = this.finishNodeAt(s, "DirectiveLiteral", e.end, e.loc.end), this.finishNodeAt(i, "Directive", t.end, t.loc.end);\n        }\n      }, {\n        key: "parseInterpreterDirective",\n        value: function parseInterpreterDirective() {\n          if (!this.match(n.interpreterDirective)) return null;\n          var t = this.startNode();\n          return t.value = this.state.value, this.next(), this.finishNode(t, "InterpreterDirective");\n        }\n      }, {\n        key: "isLet",\n        value: function isLet(t) {\n          if (!this.isContextual("let")) return !1;\n          var e = this.nextTokenStart(),\n              s = this.input.charCodeAt(e);\n          if (91 === s) return !0;\n          if (t) return !1;\n          if (123 === s) return !0;\n\n          if (w(s)) {\n            var _t53 = e + 1;\n\n            for (; S(this.input.charCodeAt(_t53));) {\n              ++_t53;\n            }\n\n            var _s35 = this.input.slice(e, _t53);\n\n            if (!R.test(_s35)) return !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "parseStatement",\n        value: function parseStatement(t, e) {\n          return this.match(n.at) && this.parseDecorators(!0), this.parseStatementContent(t, e);\n        }\n      }, {\n        key: "parseStatementContent",\n        value: function parseStatementContent(t, e) {\n          var s = this.state.type;\n          var i = this.startNode();\n          var r;\n\n          switch (this.isLet(t) && (s = n._var, r = "let"), s) {\n            case n._break:\n            case n._continue:\n              return this.parseBreakContinueStatement(i, s.keyword);\n\n            case n._debugger:\n              return this.parseDebuggerStatement(i);\n\n            case n._do:\n              return this.parseDoStatement(i);\n\n            case n._for:\n              return this.parseForStatement(i);\n\n            case n._function:\n              if (46 === this.lookaheadCharCode()) break;\n              return t && (this.state.strict ? this.raise(this.state.start, f.StrictFunction) : "if" !== t && "label" !== t && this.raise(this.state.start, f.SloppyFunction)), this.parseFunctionStatement(i, !1, !t);\n\n            case n._class:\n              return t && this.unexpected(), this.parseClass(i, !0);\n\n            case n._if:\n              return this.parseIfStatement(i);\n\n            case n._return:\n              return this.parseReturnStatement(i);\n\n            case n._switch:\n              return this.parseSwitchStatement(i);\n\n            case n._throw:\n              return this.parseThrowStatement(i);\n\n            case n._try:\n              return this.parseTryStatement(i);\n\n            case n._const:\n            case n._var:\n              return r = r || this.state.value, t && "var" !== r && this.raise(this.state.start, f.UnexpectedLexicalDeclaration), this.parseVarStatement(i, r);\n\n            case n._while:\n              return this.parseWhileStatement(i);\n\n            case n._with:\n              return this.parseWithStatement(i);\n\n            case n.braceL:\n              return this.parseBlock();\n\n            case n.semi:\n              return this.parseEmptyStatement(i);\n\n            case n._export:\n            case n._import:\n              {\n                var _t54 = this.lookaheadCharCode();\n\n                if (40 === _t54 || 46 === _t54) break;\n\n                var _r14;\n\n                return this.options.allowImportExportEverywhere || e || this.raise(this.state.start, f.UnexpectedImportExport), this.next(), s === n._import ? (_r14 = this.parseImport(i), "ImportDeclaration" !== _r14.type || _r14.importKind && "value" !== _r14.importKind || (this.sawUnambiguousESM = !0)) : (_r14 = this.parseExport(i), ("ExportNamedDeclaration" !== _r14.type || _r14.exportKind && "value" !== _r14.exportKind) && ("ExportAllDeclaration" !== _r14.type || _r14.exportKind && "value" !== _r14.exportKind) && "ExportDefaultDeclaration" !== _r14.type || (this.sawUnambiguousESM = !0)), this.assertModuleNodeAllowed(i), _r14;\n              }\n\n            default:\n              if (this.isAsyncFunction()) return t && this.raise(this.state.start, f.AsyncFunctionInSingleStatementContext), this.next(), this.parseFunctionStatement(i, !0, !t);\n          }\n\n          var a = this.state.value,\n              o = this.parseExpression();\n          return s === n.name && "Identifier" === o.type && this.eat(n.colon) ? this.parseLabeledStatement(i, a, o, t) : this.parseExpressionStatement(i, o);\n        }\n      }, {\n        key: "assertModuleNodeAllowed",\n        value: function assertModuleNodeAllowed(t) {\n          this.options.allowImportExportEverywhere || this.inModule || this.raiseWithData(t.start, {\n            code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"\n          }, f.ImportOutsideModule);\n        }\n      }, {\n        key: "takeDecorators",\n        value: function takeDecorators(t) {\n          var e = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n          e.length && (t.decorators = e, this.resetStartLocationFromNode(t, e[0]), this.state.decoratorStack[this.state.decoratorStack.length - 1] = []);\n        }\n      }, {\n        key: "canHaveLeadingDecorator",\n        value: function canHaveLeadingDecorator() {\n          return this.match(n._class);\n        }\n      }, {\n        key: "parseDecorators",\n        value: function parseDecorators(t) {\n          var e = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n          for (; this.match(n.at);) {\n            var _t55 = this.parseDecorator();\n\n            e.push(_t55);\n          }\n\n          if (this.match(n._export)) t || this.unexpected(), this.hasPlugin("decorators") && !this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, f.DecoratorExportClass);else if (!this.canHaveLeadingDecorator()) throw this.raise(this.state.start, f.UnexpectedLeadingDecorator);\n        }\n      }, {\n        key: "parseDecorator",\n        value: function parseDecorator() {\n          this.expectOnePlugin(["decorators-legacy", "decorators"]);\n          var t = this.startNode();\n\n          if (this.next(), this.hasPlugin("decorators")) {\n            this.state.decoratorStack.push([]);\n            var _e50 = this.state.start,\n                _s36 = this.state.startLoc;\n\n            var _i32;\n\n            if (this.eat(n.parenL)) _i32 = this.parseExpression(), this.expect(n.parenR);else for (_i32 = this.parseIdentifier(!1); this.eat(n.dot);) {\n              var _t56 = this.startNodeAt(_e50, _s36);\n\n              _t56.object = _i32, _t56.property = this.parseIdentifier(!0), _t56.computed = !1, _i32 = this.finishNode(_t56, "MemberExpression");\n            }\n            t.expression = this.parseMaybeDecoratorArguments(_i32), this.state.decoratorStack.pop();\n          } else t.expression = this.parseExprSubscripts();\n\n          return this.finishNode(t, "Decorator");\n        }\n      }, {\n        key: "parseMaybeDecoratorArguments",\n        value: function parseMaybeDecoratorArguments(t) {\n          if (this.eat(n.parenL)) {\n            var _e51 = this.startNodeAtNode(t);\n\n            return _e51.callee = t, _e51.arguments = this.parseCallExpressionArguments(n.parenR, !1), this.toReferencedList(_e51.arguments), this.finishNode(_e51, "CallExpression");\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseBreakContinueStatement",\n        value: function parseBreakContinueStatement(t, e) {\n          var s = "break" === e;\n          return this.next(), this.isLineTerminator() ? t.label = null : (t.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(t, e), this.finishNode(t, s ? "BreakStatement" : "ContinueStatement");\n        }\n      }, {\n        key: "verifyBreakContinue",\n        value: function verifyBreakContinue(t, e) {\n          var s = "break" === e;\n          var i;\n\n          for (i = 0; i < this.state.labels.length; ++i) {\n            var _e52 = this.state.labels[i];\n\n            if (null == t.label || _e52.name === t.label.name) {\n              if (null != _e52.kind && (s || "loop" === _e52.kind)) break;\n              if (t.label && s) break;\n            }\n          }\n\n          i === this.state.labels.length && this.raise(t.start, f.IllegalBreakContinue, e);\n        }\n      }, {\n        key: "parseDebuggerStatement",\n        value: function parseDebuggerStatement(t) {\n          return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");\n        }\n      }, {\n        key: "parseHeaderExpression",\n        value: function parseHeaderExpression() {\n          this.expect(n.parenL);\n          var t = this.parseExpression();\n          return this.expect(n.parenR), t;\n        }\n      }, {\n        key: "parseDoStatement",\n        value: function parseDoStatement(t) {\n          var _this35 = this;\n\n          return this.next(), this.state.labels.push(Et), t.body = this.withTopicForbiddingContext(function () {\n            return _this35.parseStatement("do");\n          }), this.state.labels.pop(), this.expect(n._while), t.test = this.parseHeaderExpression(), this.eat(n.semi), this.finishNode(t, "DoWhileStatement");\n        }\n      }, {\n        key: "parseForStatement",\n        value: function parseForStatement(t) {\n          this.next(), this.state.labels.push(Et);\n          var e = -1;\n          if (this.isAwaitAllowed() && this.eatContextual("await") && (e = this.state.lastTokStart), this.scope.enter(0), this.expect(n.parenL), this.match(n.semi)) return e > -1 && this.unexpected(e), this.parseFor(t, null);\n          var s = this.isLet();\n\n          if (this.match(n._var) || this.match(n._const) || s) {\n            var _i33 = this.startNode(),\n                _r15 = s ? "let" : this.state.value;\n\n            return this.next(), this.parseVar(_i33, !0, _r15), this.finishNode(_i33, "VariableDeclaration"), (this.match(n._in) || this.isContextual("of")) && 1 === _i33.declarations.length ? this.parseForIn(t, _i33, e) : (e > -1 && this.unexpected(e), this.parseFor(t, _i33));\n          }\n\n          var i = new xt(),\n              r = this.parseExpression(!0, i);\n\n          if (this.match(n._in) || this.isContextual("of")) {\n            this.toAssignable(r);\n\n            var _s37 = this.isContextual("of") ? "for-of statement" : "for-in statement";\n\n            return this.checkLVal(r, void 0, void 0, _s37), this.parseForIn(t, r, e);\n          }\n\n          return this.checkExpressionErrors(i, !0), e > -1 && this.unexpected(e), this.parseFor(t, r);\n        }\n      }, {\n        key: "parseFunctionStatement",\n        value: function parseFunctionStatement(t, e, s) {\n          return this.next(), this.parseFunction(t, 1 | (s ? 0 : 2), e);\n        }\n      }, {\n        key: "parseIfStatement",\n        value: function parseIfStatement(t) {\n          return this.next(), t.test = this.parseHeaderExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(n._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");\n        }\n      }, {\n        key: "parseReturnStatement",\n        value: function parseReturnStatement(t) {\n          return this.prodParam.hasReturn || this.options.allowReturnOutsideFunction || this.raise(this.state.start, f.IllegalReturn), this.next(), this.isLineTerminator() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");\n        }\n      }, {\n        key: "parseSwitchStatement",\n        value: function parseSwitchStatement(t) {\n          this.next(), t.discriminant = this.parseHeaderExpression();\n          var e = t.cases = [];\n          var s, i;\n\n          for (this.expect(n.braceL), this.state.labels.push(Ct), this.scope.enter(0); !this.match(n.braceR);) {\n            if (this.match(n._case) || this.match(n._default)) {\n              var _t57 = this.match(n._case);\n\n              s && this.finishNode(s, "SwitchCase"), e.push(s = this.startNode()), s.consequent = [], this.next(), _t57 ? s.test = this.parseExpression() : (i && this.raise(this.state.lastTokStart, f.MultipleDefaultsInSwitch), i = !0, s.test = null), this.expect(n.colon);\n            } else s ? s.consequent.push(this.parseStatement(null)) : this.unexpected();\n          }\n\n          return this.scope.exit(), s && this.finishNode(s, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(t, "SwitchStatement");\n        }\n      }, {\n        key: "parseThrowStatement",\n        value: function parseThrowStatement(t) {\n          return this.next(), o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, f.NewlineAfterThrow), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");\n        }\n      }, {\n        key: "parseTryStatement",\n        value: function parseTryStatement(t) {\n          var _this36 = this;\n\n          if (this.next(), t.block = this.parseBlock(), t.handler = null, this.match(n._catch)) {\n            var _e53 = this.startNode();\n\n            if (this.next(), this.match(n.parenL)) {\n              this.expect(n.parenL), _e53.param = this.parseBindingAtom();\n\n              var _t58 = "Identifier" === _e53.param.type;\n\n              this.scope.enter(_t58 ? 8 : 0), this.checkLVal(_e53.param, 9, null, "catch clause"), this.expect(n.parenR);\n            } else _e53.param = null, this.scope.enter(0);\n\n            _e53.body = this.withTopicForbiddingContext(function () {\n              return _this36.parseBlock(!1, !1);\n            }), this.scope.exit(), t.handler = this.finishNode(_e53, "CatchClause");\n          }\n\n          return t.finalizer = this.eat(n._finally) ? this.parseBlock() : null, t.handler || t.finalizer || this.raise(t.start, f.NoCatchOrFinally), this.finishNode(t, "TryStatement");\n        }\n      }, {\n        key: "parseVarStatement",\n        value: function parseVarStatement(t, e) {\n          return this.next(), this.parseVar(t, !1, e), this.semicolon(), this.finishNode(t, "VariableDeclaration");\n        }\n      }, {\n        key: "parseWhileStatement",\n        value: function parseWhileStatement(t) {\n          var _this37 = this;\n\n          return this.next(), t.test = this.parseHeaderExpression(), this.state.labels.push(Et), t.body = this.withTopicForbiddingContext(function () {\n            return _this37.parseStatement("while");\n          }), this.state.labels.pop(), this.finishNode(t, "WhileStatement");\n        }\n      }, {\n        key: "parseWithStatement",\n        value: function parseWithStatement(t) {\n          var _this38 = this;\n\n          return this.state.strict && this.raise(this.state.start, f.StrictWith), this.next(), t.object = this.parseHeaderExpression(), t.body = this.withTopicForbiddingContext(function () {\n            return _this38.parseStatement("with");\n          }), this.finishNode(t, "WithStatement");\n        }\n      }, {\n        key: "parseEmptyStatement",\n        value: function parseEmptyStatement(t) {\n          return this.next(), this.finishNode(t, "EmptyStatement");\n        }\n      }, {\n        key: "parseLabeledStatement",\n        value: function parseLabeledStatement(t, e, s, i) {\n          for (var _t59 = 0, _i34 = this.state.labels; _t59 < _i34.length; _t59++) {\n            _i34[_t59].name === e && this.raise(s.start, f.LabelRedeclaration, e);\n          }\n\n          var r = this.state.type.isLoop ? "loop" : this.match(n._switch) ? "switch" : null;\n\n          for (var _e54 = this.state.labels.length - 1; _e54 >= 0; _e54--) {\n            var _s38 = this.state.labels[_e54];\n            if (_s38.statementStart !== t.start) break;\n            _s38.statementStart = this.state.start, _s38.kind = r;\n          }\n\n          return this.state.labels.push({\n            name: e,\n            kind: r,\n            statementStart: this.state.start\n          }), t.body = this.parseStatement(i ? -1 === i.indexOf("label") ? i + "label" : i : "label"), this.state.labels.pop(), t.label = s, this.finishNode(t, "LabeledStatement");\n        }\n      }, {\n        key: "parseExpressionStatement",\n        value: function parseExpressionStatement(t, e) {\n          return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");\n        }\n      }, {\n        key: "parseBlock",\n        value: function parseBlock() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n          var s = arguments.length > 2 ? arguments[2] : undefined;\n          var i = this.startNode();\n          return this.expect(n.braceL), e && this.scope.enter(0), this.parseBlockBody(i, t, !1, n.braceR, s), e && this.scope.exit(), this.finishNode(i, "BlockStatement");\n        }\n      }, {\n        key: "isValidDirective",\n        value: function isValidDirective(t) {\n          return "ExpressionStatement" === t.type && "StringLiteral" === t.expression.type && !t.expression.extra.parenthesized;\n        }\n      }, {\n        key: "parseBlockBody",\n        value: function parseBlockBody(t, e, s, i, r) {\n          var a = t.body = [],\n              n = t.directives = [];\n          this.parseBlockOrModuleBlockBody(a, e ? n : void 0, s, i, r);\n        }\n      }, {\n        key: "parseBlockOrModuleBlockBody",\n        value: function parseBlockOrModuleBlockBody(t, e, s, i, r) {\n          var a = [],\n              n = this.state.strict;\n          var o = !1,\n              h = !1;\n\n          for (; !this.match(i);) {\n            !h && this.state.octalPositions.length && a.push.apply(a, (0, _toConsumableArray2.default)(this.state.octalPositions));\n\n            var _i35 = this.parseStatement(null, s);\n\n            if (e && !h && this.isValidDirective(_i35)) {\n              var _t60 = this.stmtToDirective(_i35);\n\n              e.push(_t60), o || "use strict" !== _t60.value.value || (o = !0, this.setStrict(!0));\n            } else h = !0, t.push(_i35);\n          }\n\n          if (this.state.strict && a.length) for (var _t61 = 0; _t61 < a.length; _t61++) {\n            var _e55 = a[_t61];\n            this.raise(_e55, f.StrictOctalLiteral);\n          }\n          r && r.call(this, o), n || this.setStrict(!1), this.next();\n        }\n      }, {\n        key: "parseFor",\n        value: function parseFor(t, e) {\n          var _this39 = this;\n\n          return t.init = e, this.expect(n.semi), t.test = this.match(n.semi) ? null : this.parseExpression(), this.expect(n.semi), t.update = this.match(n.parenR) ? null : this.parseExpression(), this.expect(n.parenR), t.body = this.withTopicForbiddingContext(function () {\n            return _this39.parseStatement("for");\n          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, "ForStatement");\n        }\n      }, {\n        key: "parseForIn",\n        value: function parseForIn(t, e, s) {\n          var _this40 = this;\n\n          var i = this.match(n._in);\n          return this.next(), i ? s > -1 && this.unexpected(s) : t.await = s > -1, "VariableDeclaration" !== e.type || null == e.declarations[0].init || i && !this.state.strict && "var" === e.kind && "Identifier" === e.declarations[0].id.type ? "AssignmentPattern" === e.type && this.raise(e.start, f.InvalidLhs, "for-loop") : this.raise(e.start, f.ForInOfLoopInitializer, i ? "for-in" : "for-of"), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssign(), this.expect(n.parenR), t.body = this.withTopicForbiddingContext(function () {\n            return _this40.parseStatement("for");\n          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, i ? "ForInStatement" : "ForOfStatement");\n        }\n      }, {\n        key: "parseVar",\n        value: function parseVar(t, e, s) {\n          var i = t.declarations = [],\n              r = this.hasPlugin("typescript");\n\n          for (t.kind = s;;) {\n            var _t62 = this.startNode();\n\n            if (this.parseVarId(_t62, s), this.eat(n.eq) ? _t62.init = this.parseMaybeAssign(e) : ("const" !== s || this.match(n._in) || this.isContextual("of") ? "Identifier" === _t62.id.type || e && (this.match(n._in) || this.isContextual("of")) || this.raise(this.state.lastTokEnd, f.DeclarationMissingInitializer, "Complex binding patterns") : r || this.unexpected(), _t62.init = null), i.push(this.finishNode(_t62, "VariableDeclarator")), !this.eat(n.comma)) break;\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseVarId",\n        value: function parseVarId(t, e) {\n          t.id = this.parseBindingAtom(), this.checkLVal(t.id, "var" === e ? 5 : 9, void 0, "variable declaration", "var" !== e);\n        }\n      }, {\n        key: "parseFunction",\n        value: function parseFunction(t) {\n          var _this41 = this;\n\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          var i = 1 & e,\n              r = 2 & e,\n              a = !(!i || 4 & e);\n          this.initFunction(t, s), this.match(n.star) && r && this.raise(this.state.start, f.GeneratorInSingleStatementContext), t.generator = this.eat(n.star), i && (t.id = this.parseFunctionId(a));\n          var o = this.state.maybeInArrowParameters,\n              h = this.state.yieldPos,\n              p = this.state.awaitPos;\n          return this.state.maybeInArrowParameters = !1, this.state.yieldPos = -1, this.state.awaitPos = -1, this.scope.enter(2), this.prodParam.enter(et(s, t.generator)), i || (t.id = this.parseFunctionId()), this.parseFunctionParams(t), this.withTopicForbiddingContext(function () {\n            _this41.parseFunctionBodyAndFinish(t, i ? "FunctionDeclaration" : "FunctionExpression");\n          }), this.prodParam.exit(), this.scope.exit(), i && !r && this.registerFunctionStatementId(t), this.state.maybeInArrowParameters = o, this.state.yieldPos = h, this.state.awaitPos = p, t;\n        }\n      }, {\n        key: "parseFunctionId",\n        value: function parseFunctionId(t) {\n          return t || this.match(n.name) ? this.parseIdentifier() : null;\n        }\n      }, {\n        key: "parseFunctionParams",\n        value: function parseFunctionParams(t, e) {\n          var s = this.state.inParameters;\n          this.state.inParameters = !0, this.expect(n.parenL), t.params = this.parseBindingList(n.parenR, 41, !1, e), this.state.inParameters = s, this.checkYieldAwaitInDefaultParams();\n        }\n      }, {\n        key: "registerFunctionStatementId",\n        value: function registerFunctionStatementId(t) {\n          t.id && this.scope.declareName(t.id.name, this.state.strict || t.generator || t.async ? this.scope.treatFunctionsAsVar ? 5 : 9 : 17, t.id.start);\n        }\n      }, {\n        key: "parseClass",\n        value: function parseClass(t, e, s) {\n          this.next(), this.takeDecorators(t);\n          var i = this.state.strict;\n          return this.state.strict = !0, this.parseClassId(t, e, s), this.parseClassSuper(t), t.body = this.parseClassBody(!!t.superClass, i), this.state.strict = i, this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");\n        }\n      }, {\n        key: "isClassProperty",\n        value: function isClassProperty() {\n          return this.match(n.eq) || this.match(n.semi) || this.match(n.braceR);\n        }\n      }, {\n        key: "isClassMethod",\n        value: function isClassMethod() {\n          return this.match(n.parenL);\n        }\n      }, {\n        key: "isNonstaticConstructor",\n        value: function isNonstaticConstructor(t) {\n          return !(t.computed || t.static || "constructor" !== t.key.name && "constructor" !== t.key.value);\n        }\n      }, {\n        key: "parseClassBody",\n        value: function parseClassBody(t, e) {\n          var _this42 = this;\n\n          this.classScope.enter();\n          var s = {\n            hadConstructor: !1\n          };\n          var i = [];\n          var r = this.startNode();\n          if (r.body = [], this.expect(n.braceL), this.withTopicForbiddingContext(function () {\n            for (; !_this42.match(n.braceR);) {\n              if (_this42.eat(n.semi)) {\n                if (i.length > 0) throw _this42.raise(_this42.state.lastTokEnd, f.DecoratorSemicolon);\n                continue;\n              }\n\n              if (_this42.match(n.at)) {\n                i.push(_this42.parseDecorator());\n                continue;\n              }\n\n              var _e56 = _this42.startNode();\n\n              i.length && (_e56.decorators = i, _this42.resetStartLocationFromNode(_e56, i[0]), i = []), _this42.parseClassMember(r, _e56, s, t), "constructor" === _e56.kind && _e56.decorators && _e56.decorators.length > 0 && _this42.raise(_e56.start, f.DecoratorConstructor);\n            }\n          }), e || (this.state.strict = !1), this.next(), i.length) throw this.raise(this.state.start, f.TrailingDecorator);\n          return this.classScope.exit(), this.finishNode(r, "ClassBody");\n        }\n      }, {\n        key: "parseClassMemberFromModifier",\n        value: function parseClassMemberFromModifier(t, e) {\n          var s = this.state.containsEsc,\n              i = this.parseIdentifier(!0);\n\n          if (this.isClassMethod()) {\n            var _s39 = e;\n            return _s39.kind = "method", _s39.computed = !1, _s39.key = i, _s39.static = !1, this.pushClassMethod(t, _s39, !1, !1, !1, !1), !0;\n          }\n\n          if (this.isClassProperty()) {\n            var _s40 = e;\n            return _s40.computed = !1, _s40.key = i, _s40.static = !1, t.body.push(this.parseClassProperty(_s40)), !0;\n          }\n\n          if (s) throw this.unexpected();\n          return !1;\n        }\n      }, {\n        key: "parseClassMember",\n        value: function parseClassMember(t, e, s, i) {\n          var r = this.isContextual("static");\n          r && this.parseClassMemberFromModifier(t, e) || this.parseClassMemberWithIsStatic(t, e, s, r, i);\n        }\n      }, {\n        key: "parseClassMemberWithIsStatic",\n        value: function parseClassMemberWithIsStatic(t, e, s, i, r) {\n          var a = e,\n              o = e,\n              h = e,\n              p = e,\n              c = a,\n              u = a;\n          if (e.static = i, this.eat(n.star)) return c.kind = "method", this.parseClassPropertyName(c), "PrivateName" === c.key.type ? void this.pushClassPrivateMethod(t, o, !0, !1) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsGenerator), void this.pushClassMethod(t, a, !0, !1, !1, !1));\n          var l = this.state.containsEsc,\n              d = this.parseClassPropertyName(e),\n              m = "PrivateName" === d.type,\n              D = "Identifier" === d.type,\n              y = this.state.start;\n\n          if (this.parsePostMemberNameModifiers(u), this.isClassMethod()) {\n            if (c.kind = "method", m) return void this.pushClassPrivateMethod(t, o, !1, !1);\n\n            var _e57 = this.isNonstaticConstructor(a);\n\n            var _i36 = !1;\n\n            _e57 && (a.kind = "constructor", s.hadConstructor && !this.hasPlugin("typescript") && this.raise(d.start, f.DuplicateConstructor), s.hadConstructor = !0, _i36 = r), this.pushClassMethod(t, a, !1, !1, _e57, _i36);\n          } else if (this.isClassProperty()) m ? this.pushClassPrivateProperty(t, p) : this.pushClassProperty(t, h);else if (!D || "async" !== d.name || l || this.isLineTerminator()) !D || "get" !== d.name && "set" !== d.name || l || this.match(n.star) && this.isLineTerminator() ? this.isLineTerminator() ? m ? this.pushClassPrivateProperty(t, p) : this.pushClassProperty(t, h) : this.unexpected() : (c.kind = d.name, this.parseClassPropertyName(a), "PrivateName" === c.key.type ? this.pushClassPrivateMethod(t, o, !1, !1) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsAccessor), this.pushClassMethod(t, a, !1, !1, !1, !1)), this.checkGetterSetterParams(a));else {\n            var _e58 = this.eat(n.star);\n\n            u.optional && this.unexpected(y), c.kind = "method", this.parseClassPropertyName(c), this.parsePostMemberNameModifiers(u), "PrivateName" === c.key.type ? this.pushClassPrivateMethod(t, o, _e58, !0) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsAsync), this.pushClassMethod(t, a, _e58, !0, !1, !1));\n          }\n        }\n      }, {\n        key: "parseClassPropertyName",\n        value: function parseClassPropertyName(t) {\n          var e = this.parsePropertyName(t, !0);\n          return t.computed || !t.static || "prototype" !== e.name && "prototype" !== e.value || this.raise(e.start, f.StaticPrototype), "PrivateName" === e.type && "constructor" === e.id.name && this.raise(e.start, f.ConstructorClassPrivateField), e;\n        }\n      }, {\n        key: "pushClassProperty",\n        value: function pushClassProperty(t, e) {\n          e.computed || "constructor" !== e.key.name && "constructor" !== e.key.value || this.raise(e.key.start, f.ConstructorClassField), t.body.push(this.parseClassProperty(e));\n        }\n      }, {\n        key: "pushClassPrivateProperty",\n        value: function pushClassPrivateProperty(t, e) {\n          this.expectPlugin("classPrivateProperties", e.key.start);\n          var s = this.parseClassPrivateProperty(e);\n          t.body.push(s), this.classScope.declarePrivateName(s.key.id.name, 0, s.key.start);\n        }\n      }, {\n        key: "pushClassMethod",\n        value: function pushClassMethod(t, e, s, i, r, a) {\n          t.body.push(this.parseMethod(e, s, i, r, a, "ClassMethod", !0));\n        }\n      }, {\n        key: "pushClassPrivateMethod",\n        value: function pushClassPrivateMethod(t, e, s, i) {\n          this.expectPlugin("classPrivateMethods", e.key.start);\n          var r = this.parseMethod(e, s, i, !1, !1, "ClassPrivateMethod", !0);\n          t.body.push(r);\n          var a = "get" === r.kind ? r.static ? 6 : 2 : "set" === r.kind ? r.static ? 5 : 1 : 0;\n          this.classScope.declarePrivateName(r.key.id.name, a, r.key.start);\n        }\n      }, {\n        key: "parsePostMemberNameModifiers",\n        value: function parsePostMemberNameModifiers(t) {}\n      }, {\n        key: "parseAccessModifier",\n        value: function parseAccessModifier() {}\n      }, {\n        key: "parseClassPrivateProperty",\n        value: function parseClassPrivateProperty(t) {\n          return this.scope.enter(80), this.prodParam.enter(0), t.value = this.eat(n.eq) ? this.parseMaybeAssign() : null, this.semicolon(), this.prodParam.exit(), this.scope.exit(), this.finishNode(t, "ClassPrivateProperty");\n        }\n      }, {\n        key: "parseClassProperty",\n        value: function parseClassProperty(t) {\n          return t.typeAnnotation || this.expectPlugin("classProperties"), this.scope.enter(80), this.prodParam.enter(0), this.match(n.eq) ? (this.expectPlugin("classProperties"), this.next(), t.value = this.parseMaybeAssign()) : t.value = null, this.semicolon(), this.prodParam.exit(), this.scope.exit(), this.finishNode(t, "ClassProperty");\n        }\n      }, {\n        key: "parseClassId",\n        value: function parseClassId(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 139;\n          this.match(n.name) ? (t.id = this.parseIdentifier(), e && this.checkLVal(t.id, i, void 0, "class name")) : s || !e ? t.id = null : this.unexpected(null, f.MissingClassName);\n        }\n      }, {\n        key: "parseClassSuper",\n        value: function parseClassSuper(t) {\n          t.superClass = this.eat(n._extends) ? this.parseExprSubscripts() : null;\n        }\n      }, {\n        key: "parseExport",\n        value: function parseExport(t) {\n          var e = this.maybeParseExportDefaultSpecifier(t),\n              s = !e || this.eat(n.comma),\n              i = s && this.eatExportStar(t),\n              r = i && this.maybeParseExportNamespaceSpecifier(t),\n              a = s && (!r || this.eat(n.comma)),\n              o = e || i;\n          if (i && !r) return e && this.unexpected(), this.parseExportFrom(t, !0), this.finishNode(t, "ExportAllDeclaration");\n          var h = this.maybeParseExportNamedSpecifiers(t);\n          if (e && s && !i && !h || r && a && !h) throw this.unexpected(null, n.braceL);\n          var p;\n          if (o || h ? (p = !1, this.parseExportFrom(t, o)) : p = this.maybeParseExportDeclaration(t), o || h || p) return this.checkExport(t, !0, !1, !!t.source), this.finishNode(t, "ExportNamedDeclaration");\n          if (this.eat(n._default)) return t.declaration = this.parseExportDefaultExpression(), this.checkExport(t, !0, !0), this.finishNode(t, "ExportDefaultDeclaration");\n          throw this.unexpected(null, n.braceL);\n        }\n      }, {\n        key: "eatExportStar",\n        value: function eatExportStar(t) {\n          return this.eat(n.star);\n        }\n      }, {\n        key: "maybeParseExportDefaultSpecifier",\n        value: function maybeParseExportDefaultSpecifier(t) {\n          if (this.isExportDefaultSpecifier()) {\n            this.expectPlugin("exportDefaultFrom");\n\n            var _e59 = this.startNode();\n\n            return _e59.exported = this.parseIdentifier(!0), t.specifiers = [this.finishNode(_e59, "ExportDefaultSpecifier")], !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "maybeParseExportNamespaceSpecifier",\n        value: function maybeParseExportNamespaceSpecifier(t) {\n          if (this.isContextual("as")) {\n            t.specifiers || (t.specifiers = []);\n\n            var _e60 = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n\n            return this.next(), _e60.exported = this.parseIdentifier(!0), t.specifiers.push(this.finishNode(_e60, "ExportNamespaceSpecifier")), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "maybeParseExportNamedSpecifiers",\n        value: function maybeParseExportNamedSpecifiers(t) {\n          var _t$specifiers;\n\n          return !!this.match(n.braceL) && (t.specifiers || (t.specifiers = []), (_t$specifiers = t.specifiers).push.apply(_t$specifiers, (0, _toConsumableArray2.default)(this.parseExportSpecifiers())), t.source = null, t.declaration = null, !0);\n        }\n      }, {\n        key: "maybeParseExportDeclaration",\n        value: function maybeParseExportDeclaration(t) {\n          if (this.shouldParseExportDeclaration()) {\n            if (this.isContextual("async")) {\n              var _t63 = this.nextTokenStart();\n\n              this.isUnparsedContextual(_t63, "function") || this.unexpected(_t63, n._function);\n            }\n\n            return t.specifiers = [], t.source = null, t.declaration = this.parseExportDeclaration(t), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "isAsyncFunction",\n        value: function isAsyncFunction() {\n          if (!this.isContextual("async")) return !1;\n          var t = this.nextTokenStart();\n          return !o.test(this.input.slice(this.state.pos, t)) && this.isUnparsedContextual(t, "function");\n        }\n      }, {\n        key: "parseExportDefaultExpression",\n        value: function parseExportDefaultExpression() {\n          var t = this.startNode(),\n              e = this.isAsyncFunction();\n          if (this.match(n._function) || e) return this.next(), e && this.next(), this.parseFunction(t, 5, e);\n          if (this.match(n._class)) return this.parseClass(t, !0, !0);\n          if (this.match(n.at)) return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, f.DecoratorBeforeExport), this.parseDecorators(!1), this.parseClass(t, !0, !0);\n          if (this.match(n._const) || this.match(n._var) || this.isLet()) throw this.raise(this.state.start, f.UnsupportedDefaultExport);\n          {\n            var _t64 = this.parseMaybeAssign();\n\n            return this.semicolon(), _t64;\n          }\n        }\n      }, {\n        key: "parseExportDeclaration",\n        value: function parseExportDeclaration(t) {\n          return this.parseStatement(null);\n        }\n      }, {\n        key: "isExportDefaultSpecifier",\n        value: function isExportDefaultSpecifier() {\n          if (this.match(n.name)) return "async" !== this.state.value && "let" !== this.state.value;\n          if (!this.match(n._default)) return !1;\n          var t = this.nextTokenStart();\n          return 44 === this.input.charCodeAt(t) || this.isUnparsedContextual(t, "from");\n        }\n      }, {\n        key: "parseExportFrom",\n        value: function parseExportFrom(t, e) {\n          this.eatContextual("from") ? (t.source = this.parseImportSource(), this.checkExport(t)) : e ? this.unexpected() : t.source = null, this.semicolon();\n        }\n      }, {\n        key: "shouldParseExportDeclaration",\n        value: function shouldParseExportDeclaration() {\n          if (this.match(n.at) && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators"))) {\n            if (!this.getPluginOption("decorators", "decoratorsBeforeExport")) return !0;\n            this.unexpected(this.state.start, f.DecoratorBeforeExport);\n          }\n\n          return "var" === this.state.type.keyword || "const" === this.state.type.keyword || "function" === this.state.type.keyword || "class" === this.state.type.keyword || this.isLet() || this.isAsyncFunction();\n        }\n      }, {\n        key: "checkExport",\n        value: function checkExport(t, e, s, i) {\n          if (e) if (s) this.checkDuplicateExports(t, "default");else if (t.specifiers && t.specifiers.length) for (var _e61 = 0, _s41 = t.specifiers; _e61 < _s41.length; _e61++) {\n            var _t65 = _s41[_e61];\n            this.checkDuplicateExports(_t65, _t65.exported.name), !i && _t65.local && (this.checkReservedWord(_t65.local.name, _t65.local.start, !0, !1), this.scope.checkLocalExport(_t65.local));\n          } else if (t.declaration) if ("FunctionDeclaration" === t.declaration.type || "ClassDeclaration" === t.declaration.type) {\n            var _e62 = t.declaration.id;\n            if (!_e62) throw new Error("Assertion failure");\n            this.checkDuplicateExports(t, _e62.name);\n          } else if ("VariableDeclaration" === t.declaration.type) for (var _e63 = 0, _s42 = t.declaration.declarations; _e63 < _s42.length; _e63++) {\n            var _t66 = _s42[_e63];\n            this.checkDeclaration(_t66.id);\n          }\n\n          if (this.state.decoratorStack[this.state.decoratorStack.length - 1].length) {\n            var _e64 = t.declaration && ("ClassDeclaration" === t.declaration.type || "ClassExpression" === t.declaration.type);\n\n            if (!t.declaration || !_e64) throw this.raise(t.start, f.UnsupportedDecoratorExport);\n            this.takeDecorators(t.declaration);\n          }\n        }\n      }, {\n        key: "checkDeclaration",\n        value: function checkDeclaration(t) {\n          if ("Identifier" === t.type) this.checkDuplicateExports(t, t.name);else if ("ObjectPattern" === t.type) for (var _e65 = 0, _s43 = t.properties; _e65 < _s43.length; _e65++) {\n            var _t67 = _s43[_e65];\n            this.checkDeclaration(_t67);\n          } else if ("ArrayPattern" === t.type) for (var _e66 = 0, _s44 = t.elements; _e66 < _s44.length; _e66++) {\n            var _t68 = _s44[_e66];\n            _t68 && this.checkDeclaration(_t68);\n          } else "ObjectProperty" === t.type ? this.checkDeclaration(t.value) : "RestElement" === t.type ? this.checkDeclaration(t.argument) : "AssignmentPattern" === t.type && this.checkDeclaration(t.left);\n        }\n      }, {\n        key: "checkDuplicateExports",\n        value: function checkDuplicateExports(t, e) {\n          this.state.exportedIdentifiers.indexOf(e) > -1 && this.raise(t.start, "default" === e ? f.DuplicateDefaultExport : f.DuplicateExport, e), this.state.exportedIdentifiers.push(e);\n        }\n      }, {\n        key: "parseExportSpecifiers",\n        value: function parseExportSpecifiers() {\n          var t = [];\n          var e = !0;\n\n          for (this.expect(n.braceL); !this.eat(n.braceR);) {\n            if (e) e = !1;else if (this.expect(n.comma), this.eat(n.braceR)) break;\n\n            var _s45 = this.startNode();\n\n            _s45.local = this.parseIdentifier(!0), _s45.exported = this.eatContextual("as") ? this.parseIdentifier(!0) : _s45.local.__clone(), t.push(this.finishNode(_s45, "ExportSpecifier"));\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseImport",\n        value: function parseImport(t) {\n          if (t.specifiers = [], !this.match(n.string)) {\n            var _e67 = !this.maybeParseDefaultImportSpecifier(t) || this.eat(n.comma),\n                _s46 = _e67 && this.maybeParseStarImportSpecifier(t);\n\n            _e67 && !_s46 && this.parseNamedImportSpecifiers(t), this.expectContextual("from");\n          }\n\n          return t.source = this.parseImportSource(), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n        }\n      }, {\n        key: "parseImportSource",\n        value: function parseImportSource() {\n          return this.match(n.string) || this.unexpected(), this.parseExprAtom();\n        }\n      }, {\n        key: "shouldParseDefaultImport",\n        value: function shouldParseDefaultImport(t) {\n          return this.match(n.name);\n        }\n      }, {\n        key: "parseImportSpecifierLocal",\n        value: function parseImportSpecifierLocal(t, e, s, i) {\n          e.local = this.parseIdentifier(), this.checkLVal(e.local, 9, void 0, i), t.specifiers.push(this.finishNode(e, s));\n        }\n      }, {\n        key: "maybeParseDefaultImportSpecifier",\n        value: function maybeParseDefaultImportSpecifier(t) {\n          return !!this.shouldParseDefaultImport(t) && (this.parseImportSpecifierLocal(t, this.startNode(), "ImportDefaultSpecifier", "default import specifier"), !0);\n        }\n      }, {\n        key: "maybeParseStarImportSpecifier",\n        value: function maybeParseStarImportSpecifier(t) {\n          if (this.match(n.star)) {\n            var _e68 = this.startNode();\n\n            return this.next(), this.expectContextual("as"), this.parseImportSpecifierLocal(t, _e68, "ImportNamespaceSpecifier", "import namespace specifier"), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "parseNamedImportSpecifiers",\n        value: function parseNamedImportSpecifiers(t) {\n          var e = !0;\n\n          for (this.expect(n.braceL); !this.eat(n.braceR);) {\n            if (e) e = !1;else {\n              if (this.eat(n.colon)) throw this.raise(this.state.start, f.DestructureNamedImport);\n              if (this.expect(n.comma), this.eat(n.braceR)) break;\n            }\n            this.parseImportSpecifier(t);\n          }\n        }\n      }, {\n        key: "parseImportSpecifier",\n        value: function parseImportSpecifier(t) {\n          var e = this.startNode();\n          e.imported = this.parseIdentifier(!0), this.eatContextual("as") ? e.local = this.parseIdentifier() : (this.checkReservedWord(e.imported.name, e.start, !0, !0), e.local = e.imported.__clone()), this.checkLVal(e.local, 9, void 0, "import specifier"), t.specifiers.push(this.finishNode(e, "ImportSpecifier"));\n        }\n      }]);\n      return _class7;\n    }( /*#__PURE__*/function (_ref21) {\n      (0, _inherits2.default)(_class8, _ref21);\n\n      var _super11 = _createSuper(_class8);\n\n      function _class8() {\n        (0, _classCallCheck2.default)(this, _class8);\n        return _super11.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class8, [{\n        key: "checkDuplicatedProto",\n        value: function checkDuplicatedProto(t, e, s) {\n          if ("SpreadElement" === t.type || t.computed || t.kind || t.shorthand) return;\n          var i = t.key;\n          "__proto__" === ("Identifier" === i.type ? i.name : String(i.value)) && (e.used && (s ? -1 === s.doubleProto && (s.doubleProto = i.start) : this.raise(i.start, f.DuplicateProto)), e.used = !0);\n        }\n      }, {\n        key: "getExpression",\n        value: function getExpression() {\n          var t = 0;\n          this.hasPlugin("topLevelAwait") && this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t), this.nextToken();\n          var e = this.parseExpression();\n          return this.match(n.eof) || this.unexpected(), e.comments = this.state.comments, e.errors = this.state.errors, e;\n        }\n      }, {\n        key: "parseExpression",\n        value: function parseExpression(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc,\n              r = this.parseMaybeAssign(t, e);\n\n          if (this.match(n.comma)) {\n            var _a15 = this.startNodeAt(s, i);\n\n            for (_a15.expressions = [r]; this.eat(n.comma);) {\n              _a15.expressions.push(this.parseMaybeAssign(t, e));\n            }\n\n            return this.toReferencedList(_a15.expressions), this.finishNode(_a15, "SequenceExpression");\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseMaybeAssign",\n        value: function parseMaybeAssign(t, e, s, i) {\n          var r = this.state.start,\n              a = this.state.startLoc;\n\n          if (this.isContextual("yield")) {\n            if (this.prodParam.hasYield) {\n              var _e69 = this.parseYield(t);\n\n              return s && (_e69 = s.call(this, _e69, r, a)), _e69;\n            }\n\n            this.state.exprAllowed = !1;\n          }\n\n          var o;\n          e ? o = !1 : (e = new xt(), o = !0), (this.match(n.parenL) || this.match(n.name)) && (this.state.potentialArrowAt = this.state.start);\n          var h = this.parseMaybeConditional(t, e, i);\n\n          if (s && (h = s.call(this, h, r, a)), this.state.type.isAssign) {\n            var _s47 = this.startNodeAt(r, a),\n                _i37 = this.state.value;\n\n            return _s47.operator = _i37, "??=" === _i37 && this.expectPlugin("logicalAssignment"), "||=" !== _i37 && "&&=" !== _i37 || this.expectPlugin("logicalAssignment"), this.match(n.eq) ? (_s47.left = this.toAssignable(h), e.doubleProto = -1) : _s47.left = h, e.shorthandAssign >= _s47.left.start && (e.shorthandAssign = -1), this.checkLVal(h, void 0, void 0, "assignment expression"), this.next(), _s47.right = this.parseMaybeAssign(t), this.finishNode(_s47, "AssignmentExpression");\n          }\n\n          return o && this.checkExpressionErrors(e, !0), h;\n        }\n      }, {\n        key: "parseMaybeConditional",\n        value: function parseMaybeConditional(t, e, s) {\n          var i = this.state.start,\n              r = this.state.startLoc,\n              a = this.state.potentialArrowAt,\n              n = this.parseExprOps(t, e);\n          return "ArrowFunctionExpression" === n.type && n.start === a ? n : this.checkExpressionErrors(e, !1) ? n : this.parseConditional(n, t, i, r, s);\n        }\n      }, {\n        key: "parseConditional",\n        value: function parseConditional(t, e, s, i, r) {\n          if (this.eat(n.question)) {\n            var _r16 = this.startNodeAt(s, i);\n\n            return _r16.test = t, _r16.consequent = this.parseMaybeAssign(), this.expect(n.colon), _r16.alternate = this.parseMaybeAssign(e), this.finishNode(_r16, "ConditionalExpression");\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseExprOps",\n        value: function parseExprOps(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc,\n              r = this.state.potentialArrowAt,\n              a = this.parseMaybeUnary(e);\n          return "ArrowFunctionExpression" === a.type && a.start === r ? a : this.checkExpressionErrors(e, !1) ? a : this.parseExprOp(a, s, i, -1, t);\n        }\n      }, {\n        key: "parseExprOp",\n        value: function parseExprOp(t, e, s, i, r) {\n          var a = this.state.type.binop;\n\n          if (!(null == a || r && this.match(n._in)) && a > i) {\n            var _o4 = this.state.value;\n            if ("|>" === _o4 && this.state.inFSharpPipelineDirectBody) return t;\n\n            var _h5 = this.startNodeAt(e, s);\n\n            _h5.left = t, _h5.operator = _o4, "**" !== _o4 || "UnaryExpression" !== t.type || !this.options.createParenthesizedExpressions && t.extra && t.extra.parenthesized || this.raise(t.argument.start, f.UnexpectedTokenUnaryExponentiation);\n\n            var _p3 = this.state.type,\n                _c = _p3 === n.logicalOR || _p3 === n.logicalAND,\n                _u2 = _p3 === n.nullishCoalescing;\n\n            if (_p3 === n.pipeline ? (this.expectPlugin("pipelineOperator"), this.state.inPipeline = !0, this.checkPipelineAtInfixOperator(t, e)) : _u2 && (a = n.logicalAND.binop), this.next(), _p3 === n.pipeline && "minimal" === this.getPluginOption("pipelineOperator", "proposal") && this.match(n.name) && "await" === this.state.value && this.prodParam.hasAwait) throw this.raise(this.state.start, f.UnexpectedAwaitAfterPipelineBody);\n            _h5.right = this.parseExprOpRightExpr(_p3, a, r), this.finishNode(_h5, _c || _u2 ? "LogicalExpression" : "BinaryExpression");\n            var _l2 = this.state.type;\n            if (_u2 && (_l2 === n.logicalOR || _l2 === n.logicalAND) || _c && _l2 === n.nullishCoalescing) throw this.raise(this.state.start, f.MixingCoalesceWithLogical);\n            return this.parseExprOp(_h5, e, s, i, r);\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseExprOpRightExpr",\n        value: function parseExprOpRightExpr(t, e, s) {\n          var _this43 = this;\n\n          var i = this.state.start,\n              r = this.state.startLoc;\n\n          switch (t) {\n            case n.pipeline:\n              switch (this.getPluginOption("pipelineOperator", "proposal")) {\n                case "smart":\n                  return this.withTopicPermittingContext(function () {\n                    return _this43.parseSmartPipelineBody(_this43.parseExprOpBaseRightExpr(t, e, s), i, r);\n                  });\n\n                case "fsharp":\n                  return this.withSoloAwaitPermittingContext(function () {\n                    return _this43.parseFSharpPipelineBody(e, s);\n                  });\n              }\n\n            default:\n              return this.parseExprOpBaseRightExpr(t, e, s);\n          }\n        }\n      }, {\n        key: "parseExprOpBaseRightExpr",\n        value: function parseExprOpBaseRightExpr(t, e, s) {\n          var i = this.state.start,\n              r = this.state.startLoc;\n          return this.parseExprOp(this.parseMaybeUnary(), i, r, t.rightAssociative ? e - 1 : e, s);\n        }\n      }, {\n        key: "parseMaybeUnary",\n        value: function parseMaybeUnary(t) {\n          if (this.isContextual("await") && this.isAwaitAllowed()) return this.parseAwait();\n\n          if (this.state.type.prefix) {\n            var _e70 = this.startNode(),\n                _s48 = this.match(n.incDec);\n\n            if (_e70.operator = this.state.value, _e70.prefix = !0, "throw" === _e70.operator && this.expectPlugin("throwExpressions"), this.next(), _e70.argument = this.parseMaybeUnary(), this.checkExpressionErrors(t, !0), _s48) this.checkLVal(_e70.argument, void 0, void 0, "prefix operation");else if (this.state.strict && "delete" === _e70.operator) {\n              var _t69 = _e70.argument;\n              "Identifier" === _t69.type ? this.raise(_e70.start, f.StrictDelete) : "MemberExpression" === _t69.type && "PrivateName" === _t69.property.type && this.raise(_e70.start, f.DeletePrivateField);\n            }\n            return this.finishNode(_e70, _s48 ? "UpdateExpression" : "UnaryExpression");\n          }\n\n          var e = this.state.start,\n              s = this.state.startLoc;\n          var i = this.parseExprSubscripts(t);\n          if (this.checkExpressionErrors(t, !1)) return i;\n\n          for (; this.state.type.postfix && !this.canInsertSemicolon();) {\n            var _t70 = this.startNodeAt(e, s);\n\n            _t70.operator = this.state.value, _t70.prefix = !1, _t70.argument = i, this.checkLVal(i, void 0, void 0, "postfix operation"), this.next(), i = this.finishNode(_t70, "UpdateExpression");\n          }\n\n          return i;\n        }\n      }, {\n        key: "parseExprSubscripts",\n        value: function parseExprSubscripts(t) {\n          var e = this.state.start,\n              s = this.state.startLoc,\n              i = this.state.potentialArrowAt,\n              r = this.parseExprAtom(t);\n          return "ArrowFunctionExpression" === r.type && r.start === i ? r : this.parseSubscripts(r, e, s);\n        }\n      }, {\n        key: "parseSubscripts",\n        value: function parseSubscripts(t, e, s, i) {\n          var r = {\n            optionalChainMember: !1,\n            maybeAsyncArrow: this.atPossibleAsyncArrow(t),\n            stop: !1\n          };\n\n          do {\n            var _a16 = this.state.maybeInAsyncArrowHead;\n            r.maybeAsyncArrow && (this.state.maybeInAsyncArrowHead = !0), t = this.parseSubscript(t, e, s, i, r), r.maybeAsyncArrow = !1, this.state.maybeInAsyncArrowHead = _a16;\n          } while (!r.stop);\n\n          return t;\n        }\n      }, {\n        key: "parseSubscript",\n        value: function parseSubscript(t, e, s, i, r) {\n          if (!i && this.eat(n.doubleColon)) {\n            var _a17 = this.startNodeAt(e, s);\n\n            return _a17.object = t, _a17.callee = this.parseNoCallExpr(), r.stop = !0, this.parseSubscripts(this.finishNode(_a17, "BindExpression"), e, s, i);\n          }\n\n          var a = !1;\n\n          if (this.match(n.questionDot)) {\n            if (r.optionalChainMember = a = !0, i && 40 === this.lookaheadCharCode()) return r.stop = !0, t;\n            this.next();\n          }\n\n          var o = this.eat(n.bracketL);\n\n          if (a && !this.match(n.parenL) && !this.match(n.backQuote) || o || this.eat(n.dot)) {\n            var _i38 = this.startNodeAt(e, s);\n\n            return _i38.object = t, _i38.property = o ? this.parseExpression() : a ? this.parseIdentifier(!0) : this.parseMaybePrivateName(!0), _i38.computed = o, "PrivateName" === _i38.property.type && ("Super" === _i38.object.type && this.raise(e, f.SuperPrivateField), this.classScope.usePrivateName(_i38.property.id.name, _i38.property.start)), o && this.expect(n.bracketR), r.optionalChainMember ? (_i38.optional = a, this.finishNode(_i38, "OptionalMemberExpression")) : this.finishNode(_i38, "MemberExpression");\n          }\n\n          if (!i && this.match(n.parenL)) {\n            var _i39 = this.state.maybeInArrowParameters,\n                _o5 = this.state.yieldPos,\n                _h6 = this.state.awaitPos;\n            this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1, this.next();\n\n            var _p4 = this.startNodeAt(e, s);\n\n            return _p4.callee = t, a ? (_p4.optional = !0, _p4.arguments = this.parseCallExpressionArguments(n.parenR, !1)) : _p4.arguments = this.parseCallExpressionArguments(n.parenR, r.maybeAsyncArrow, "Import" === t.type, "Super" !== t.type, _p4), this.finishCallExpression(_p4, r.optionalChainMember), r.maybeAsyncArrow && this.shouldParseAsyncArrow() && !a ? (r.stop = !0, _p4 = this.parseAsyncArrowFromCallExpression(this.startNodeAt(e, s), _p4), this.checkYieldAwaitInDefaultParams(), this.state.yieldPos = _o5, this.state.awaitPos = _h6) : (this.toReferencedListDeep(_p4.arguments), -1 !== _o5 && (this.state.yieldPos = _o5), (this.isAwaitAllowed() || _i39) && -1 === _h6 || (this.state.awaitPos = _h6)), this.state.maybeInArrowParameters = _i39, _p4;\n          }\n\n          return this.match(n.backQuote) ? this.parseTaggedTemplateExpression(e, s, t, r) : (r.stop = !0, t);\n        }\n      }, {\n        key: "parseTaggedTemplateExpression",\n        value: function parseTaggedTemplateExpression(t, e, s, i, r) {\n          var a = this.startNodeAt(t, e);\n          return a.tag = s, a.quasi = this.parseTemplate(!0), r && (a.typeParameters = r), i.optionalChainMember && this.raise(t, f.OptionalChainingNoTemplate), this.finishNode(a, "TaggedTemplateExpression");\n        }\n      }, {\n        key: "atPossibleAsyncArrow",\n        value: function atPossibleAsyncArrow(t) {\n          return "Identifier" === t.type && "async" === t.name && this.state.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start == 5 && t.start === this.state.potentialArrowAt;\n        }\n      }, {\n        key: "finishCallExpression",\n        value: function finishCallExpression(t, e) {\n          if ("Import" === t.callee.type) if (1 !== t.arguments.length) this.raise(t.start, f.ImportCallArity);else {\n            var _e71 = t.arguments[0];\n            _e71 && "SpreadElement" === _e71.type && this.raise(_e71.start, f.ImportCallSpreadArgument);\n          }\n          return this.finishNode(t, e ? "OptionalCallExpression" : "CallExpression");\n        }\n      }, {\n        key: "parseCallExpressionArguments",\n        value: function parseCallExpressionArguments(t, e, s, i, r) {\n          var a = [];\n          var o,\n              h = !0;\n          var p = this.state.inFSharpPipelineDirectBody;\n\n          for (this.state.inFSharpPipelineDirectBody = !1; !this.eat(t);) {\n            if (h) h = !1;else if (this.expect(n.comma), this.match(t)) {\n              s && this.raise(this.state.lastTokStart, f.ImportCallArgumentTrailingComma), r && this.addExtra(r, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n            this.match(n.parenL) && !o && (o = this.state.start), a.push(this.parseExprListItem(!1, e ? new xt() : void 0, e ? {\n              start: 0\n            } : void 0, i));\n          }\n\n          return e && o && this.shouldParseAsyncArrow() && this.unexpected(), this.state.inFSharpPipelineDirectBody = p, a;\n        }\n      }, {\n        key: "shouldParseAsyncArrow",\n        value: function shouldParseAsyncArrow() {\n          return this.match(n.arrow) && !this.canInsertSemicolon();\n        }\n      }, {\n        key: "parseAsyncArrowFromCallExpression",\n        value: function parseAsyncArrowFromCallExpression(t, e) {\n          var s;\n          return this.expect(n.arrow), this.parseArrowExpression(t, e.arguments, !0, null == (s = e.extra) ? void 0 : s.trailingComma), t;\n        }\n      }, {\n        key: "parseNoCallExpr",\n        value: function parseNoCallExpr() {\n          var t = this.state.start,\n              e = this.state.startLoc;\n          return this.parseSubscripts(this.parseExprAtom(), t, e, !0);\n        }\n      }, {\n        key: "parseExprAtom",\n        value: function parseExprAtom(t) {\n          this.state.type === n.slash && this.readRegexp();\n          var e = this.state.potentialArrowAt === this.state.start;\n          var s;\n\n          switch (this.state.type) {\n            case n._super:\n              return s = this.startNode(), this.next(), !this.match(n.parenL) || this.scope.allowDirectSuper || this.options.allowSuperOutsideMethod ? this.scope.allowSuper || this.options.allowSuperOutsideMethod || this.raise(s.start, f.UnexpectedSuper) : this.raise(s.start, f.SuperNotAllowed), this.match(n.parenL) || this.match(n.bracketL) || this.match(n.dot) || this.raise(s.start, f.UnsupportedSuper), this.finishNode(s, "Super");\n\n            case n._import:\n              return s = this.startNode(), this.next(), this.match(n.dot) ? this.parseImportMetaProperty(s) : (this.match(n.parenL) || this.raise(this.state.lastTokStart, f.UnsupportedImport), this.finishNode(s, "Import"));\n\n            case n._this:\n              return s = this.startNode(), this.next(), this.finishNode(s, "ThisExpression");\n\n            case n.name:\n              {\n                s = this.startNode();\n\n                var _t71 = this.state.containsEsc,\n                    _i40 = this.parseIdentifier();\n\n                if (!_t71 && "async" === _i40.name && this.match(n._function) && !this.canInsertSemicolon()) {\n                  var _t72 = this.state.context.length - 1;\n\n                  if (this.state.context[_t72] !== x.functionStatement) throw new Error("Internal error");\n                  return this.state.context[_t72] = x.functionExpression, this.next(), this.parseFunction(s, void 0, !0);\n                }\n\n                if (e && !_t71 && "async" === _i40.name && this.match(n.name) && !this.canInsertSemicolon()) {\n                  var _t73 = this.state.maybeInArrowParameters,\n                      _e72 = this.state.maybeInAsyncArrowHead,\n                      _i41 = this.state.yieldPos,\n                      _r17 = this.state.awaitPos;\n                  this.state.maybeInArrowParameters = !0, this.state.maybeInAsyncArrowHead = !0, this.state.yieldPos = -1, this.state.awaitPos = -1;\n                  var _a18 = [this.parseIdentifier()];\n                  return this.expect(n.arrow), this.checkYieldAwaitInDefaultParams(), this.state.maybeInArrowParameters = _t73, this.state.maybeInAsyncArrowHead = _e72, this.state.yieldPos = _i41, this.state.awaitPos = _r17, this.parseArrowExpression(s, _a18, !0), s;\n                }\n\n                return e && this.match(n.arrow) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(s, [_i40], !1), s) : _i40;\n              }\n\n            case n._do:\n              {\n                this.expectPlugin("doExpressions");\n\n                var _t74 = this.startNode();\n\n                this.next();\n                var _e73 = this.state.labels;\n                return this.state.labels = [], _t74.body = this.parseBlock(), this.state.labels = _e73, this.finishNode(_t74, "DoExpression");\n              }\n\n            case n.regexp:\n              {\n                var _t75 = this.state.value;\n                return s = this.parseLiteral(_t75.value, "RegExpLiteral"), s.pattern = _t75.pattern, s.flags = _t75.flags, s;\n              }\n\n            case n.num:\n              return this.parseLiteral(this.state.value, "NumericLiteral");\n\n            case n.bigint:\n              return this.parseLiteral(this.state.value, "BigIntLiteral");\n\n            case n.string:\n              return this.parseLiteral(this.state.value, "StringLiteral");\n\n            case n._null:\n              return s = this.startNode(), this.next(), this.finishNode(s, "NullLiteral");\n\n            case n._true:\n            case n._false:\n              return this.parseBooleanLiteral();\n\n            case n.parenL:\n              return this.parseParenAndDistinguishExpression(e);\n\n            case n.bracketBarL:\n            case n.bracketHashL:\n              {\n                this.expectPlugin("recordAndTuple");\n\n                var _e74 = this.state.inFSharpPipelineDirectBody,\n                    _i42 = this.state.type === n.bracketBarL ? n.bracketBarR : n.bracketR;\n\n                return this.state.inFSharpPipelineDirectBody = !1, s = this.startNode(), this.next(), s.elements = this.parseExprList(_i42, !0, t, s), this.state.inFSharpPipelineDirectBody = _e74, this.finishNode(s, "TupleExpression");\n              }\n\n            case n.bracketL:\n              {\n                var _e75 = this.state.inFSharpPipelineDirectBody;\n                return this.state.inFSharpPipelineDirectBody = !1, s = this.startNode(), this.next(), s.elements = this.parseExprList(n.bracketR, !0, t, s), this.state.maybeInArrowParameters || this.toReferencedList(s.elements), this.state.inFSharpPipelineDirectBody = _e75, this.finishNode(s, "ArrayExpression");\n              }\n\n            case n.braceBarL:\n            case n.braceHashL:\n              {\n                this.expectPlugin("recordAndTuple");\n\n                var _e76 = this.state.inFSharpPipelineDirectBody,\n                    _s49 = this.state.type === n.braceBarL ? n.braceBarR : n.braceR;\n\n                this.state.inFSharpPipelineDirectBody = !1;\n\n                var _i43 = this.parseObj(_s49, !1, !0, t);\n\n                return this.state.inFSharpPipelineDirectBody = _e76, _i43;\n              }\n\n            case n.braceL:\n              {\n                var _e77 = this.state.inFSharpPipelineDirectBody;\n                this.state.inFSharpPipelineDirectBody = !1;\n\n                var _s50 = this.parseObj(n.braceR, !1, !1, t);\n\n                return this.state.inFSharpPipelineDirectBody = _e77, _s50;\n              }\n\n            case n._function:\n              return this.parseFunctionExpression();\n\n            case n.at:\n              this.parseDecorators();\n\n            case n._class:\n              return s = this.startNode(), this.takeDecorators(s), this.parseClass(s, !1);\n\n            case n._new:\n              return this.parseNew();\n\n            case n.backQuote:\n              return this.parseTemplate(!1);\n\n            case n.doubleColon:\n              {\n                s = this.startNode(), this.next(), s.object = null;\n\n                var _t76 = s.callee = this.parseNoCallExpr();\n\n                if ("MemberExpression" === _t76.type) return this.finishNode(s, "BindExpression");\n                throw this.raise(_t76.start, f.UnsupportedBind);\n              }\n\n            case n.hash:\n              if (this.state.inPipeline) return s = this.startNode(), "smart" !== this.getPluginOption("pipelineOperator", "proposal") && this.raise(s.start, f.PrimaryTopicRequiresSmartPipeline), this.next(), this.primaryTopicReferenceIsAllowedInCurrentTopicContext() || this.raise(s.start, f.PrimaryTopicNotAllowed), this.registerTopicReference(), this.finishNode(s, "PipelinePrimaryTopicReference");\n\n            default:\n              throw this.unexpected();\n          }\n        }\n      }, {\n        key: "parseBooleanLiteral",\n        value: function parseBooleanLiteral() {\n          var t = this.startNode();\n          return t.value = this.match(n._true), this.next(), this.finishNode(t, "BooleanLiteral");\n        }\n      }, {\n        key: "parseMaybePrivateName",\n        value: function parseMaybePrivateName(t) {\n          if (this.match(n.hash)) {\n            this.expectOnePlugin(["classPrivateProperties", "classPrivateMethods"]), t || this.raise(this.state.pos, f.UnexpectedPrivateField);\n\n            var _e78 = this.startNode();\n\n            return this.next(), this.assertNoSpace("Unexpected space between # and identifier"), _e78.id = this.parseIdentifier(!0), this.finishNode(_e78, "PrivateName");\n          }\n\n          return this.parseIdentifier(!0);\n        }\n      }, {\n        key: "parseFunctionExpression",\n        value: function parseFunctionExpression() {\n          var t = this.startNode();\n          var e = this.startNode();\n          return this.next(), e = this.createIdentifier(e, "function"), this.prodParam.hasYield && this.eat(n.dot) ? this.parseMetaProperty(t, e, "sent") : this.parseFunction(t);\n        }\n      }, {\n        key: "parseMetaProperty",\n        value: function parseMetaProperty(t, e, s) {\n          t.meta = e, "function" === e.name && "sent" === s && (this.isContextual(s) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected());\n          var i = this.state.containsEsc;\n          return t.property = this.parseIdentifier(!0), (t.property.name !== s || i) && this.raise(t.property.start, f.UnsupportedMetaProperty, e.name, s), this.finishNode(t, "MetaProperty");\n        }\n      }, {\n        key: "parseImportMetaProperty",\n        value: function parseImportMetaProperty(t) {\n          var e = this.createIdentifier(this.startNodeAtNode(t), "import");\n          return this.expect(n.dot), this.isContextual("meta") ? (this.expectPlugin("importMeta"), this.inModule || this.raiseWithData(e.start, {\n            code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"\n          }, f.ImportMetaOutsideModule), this.sawUnambiguousESM = !0) : this.hasPlugin("importMeta") || this.raise(e.start, f.ImportCallArityLtOne), this.parseMetaProperty(t, e, "meta");\n        }\n      }, {\n        key: "parseLiteral",\n        value: function parseLiteral(t, e, s, i) {\n          s = s || this.state.start, i = i || this.state.startLoc;\n          var r = this.startNodeAt(s, i);\n          return this.addExtra(r, "rawValue", t), this.addExtra(r, "raw", this.input.slice(s, this.state.end)), r.value = t, this.next(), this.finishNode(r, e);\n        }\n      }, {\n        key: "parseParenAndDistinguishExpression",\n        value: function parseParenAndDistinguishExpression(t) {\n          var e = this.state.start,\n              s = this.state.startLoc;\n          var i;\n          this.expect(n.parenL);\n          var r = this.state.maybeInArrowParameters,\n              a = this.state.yieldPos,\n              o = this.state.awaitPos,\n              h = this.state.inFSharpPipelineDirectBody;\n          this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1, this.state.inFSharpPipelineDirectBody = !1;\n          var p = this.state.start,\n              c = this.state.startLoc,\n              u = [],\n              l = new xt(),\n              d = {\n            start: 0\n          };\n          var m,\n              f,\n              D = !0;\n\n          for (; !this.match(n.parenR);) {\n            if (D) D = !1;else if (this.expect(n.comma, d.start || null), this.match(n.parenR)) {\n              f = this.state.start;\n              break;\n            }\n\n            if (this.match(n.ellipsis)) {\n              var _t77 = this.state.start,\n                  _e79 = this.state.startLoc;\n              m = this.state.start, u.push(this.parseParenItem(this.parseRestBinding(), _t77, _e79)), this.checkCommaAfterRest(41);\n              break;\n            }\n\n            u.push(this.parseMaybeAssign(!1, l, this.parseParenItem, d));\n          }\n\n          var y = this.state.start,\n              x = this.state.startLoc;\n          this.expect(n.parenR), this.state.maybeInArrowParameters = r, this.state.inFSharpPipelineDirectBody = h;\n          var g = this.startNodeAt(e, s);\n\n          if (t && this.shouldParseArrow() && (g = this.parseArrow(g))) {\n            this.isAwaitAllowed() || this.state.maybeInAsyncArrowHead || (this.state.awaitPos = o), this.checkYieldAwaitInDefaultParams(), this.state.yieldPos = a, this.state.awaitPos = o;\n\n            for (var _t78 = 0; _t78 < u.length; _t78++) {\n              var _e80 = u[_t78];\n              _e80.extra && _e80.extra.parenthesized && this.unexpected(_e80.extra.parenStart);\n            }\n\n            return this.parseArrowExpression(g, u, !1), g;\n          }\n\n          if (-1 !== a && (this.state.yieldPos = a), -1 !== o && (this.state.awaitPos = o), u.length || this.unexpected(this.state.lastTokStart), f && this.unexpected(f), m && this.unexpected(m), this.checkExpressionErrors(l, !0), d.start && this.unexpected(d.start), this.toReferencedListDeep(u, !0), u.length > 1 ? (i = this.startNodeAt(p, c), i.expressions = u, this.finishNodeAt(i, "SequenceExpression", y, x)) : i = u[0], !this.options.createParenthesizedExpressions) return this.addExtra(i, "parenthesized", !0), this.addExtra(i, "parenStart", e), i;\n          var P = this.startNodeAt(e, s);\n          return P.expression = i, this.finishNode(P, "ParenthesizedExpression"), P;\n        }\n      }, {\n        key: "shouldParseArrow",\n        value: function shouldParseArrow() {\n          return !this.canInsertSemicolon();\n        }\n      }, {\n        key: "parseArrow",\n        value: function parseArrow(t) {\n          if (this.eat(n.arrow)) return t;\n        }\n      }, {\n        key: "parseParenItem",\n        value: function parseParenItem(t, e, s) {\n          return t;\n        }\n      }, {\n        key: "parseNew",\n        value: function parseNew() {\n          var t = this.startNode();\n          var e = this.startNode();\n\n          if (this.next(), e = this.createIdentifier(e, "new"), this.eat(n.dot)) {\n            var _s51 = this.parseMetaProperty(t, e, "target");\n\n            if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n              var _t79 = f.UnexpectedNewTarget;\n              this.hasPlugin("classProperties") && (_t79 += " or class properties"), this.raise(_s51.start, _t79);\n            }\n\n            return _s51;\n          }\n\n          return t.callee = this.parseNoCallExpr(), "Import" === t.callee.type ? this.raise(t.callee.start, f.ImportCallNotNewExpression) : "OptionalMemberExpression" === t.callee.type || "OptionalCallExpression" === t.callee.type ? this.raise(this.state.lastTokEnd, f.OptionalChainingNoNew) : this.eat(n.questionDot) && this.raise(this.state.start, f.OptionalChainingNoNew), this.parseNewArguments(t), this.finishNode(t, "NewExpression");\n        }\n      }, {\n        key: "parseNewArguments",\n        value: function parseNewArguments(t) {\n          if (this.eat(n.parenL)) {\n            var _e81 = this.parseExprList(n.parenR);\n\n            this.toReferencedList(_e81), t.arguments = _e81;\n          } else t.arguments = [];\n        }\n      }, {\n        key: "parseTemplateElement",\n        value: function parseTemplateElement(t) {\n          var e = this.startNode();\n          return null === this.state.value && (t || this.raise(this.state.start + 1, f.InvalidEscapeSequenceTemplate)), e.value = {\n            raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, "\\n"),\n            cooked: this.state.value\n          }, this.next(), e.tail = this.match(n.backQuote), this.finishNode(e, "TemplateElement");\n        }\n      }, {\n        key: "parseTemplate",\n        value: function parseTemplate(t) {\n          var e = this.startNode();\n          this.next(), e.expressions = [];\n          var s = this.parseTemplateElement(t);\n\n          for (e.quasis = [s]; !s.tail;) {\n            this.expect(n.dollarBraceL), e.expressions.push(this.parseExpression()), this.expect(n.braceR), e.quasis.push(s = this.parseTemplateElement(t));\n          }\n\n          return this.next(), this.finishNode(e, "TemplateLiteral");\n        }\n      }, {\n        key: "parseObj",\n        value: function parseObj(t, e, s, i) {\n          var r = Object.create(null);\n          var a = !0;\n          var o = this.startNode();\n\n          for (o.properties = [], this.next(); !this.eat(t);) {\n            if (a) a = !1;else if (this.expect(n.comma), this.match(t)) {\n              this.addExtra(o, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n\n            var _s52 = this.parseObjectMember(e, i);\n\n            e || this.checkDuplicatedProto(_s52, r, i), _s52.shorthand && this.addExtra(_s52, "shorthand", !0), o.properties.push(_s52);\n          }\n\n          var h = "ObjectExpression";\n          return e ? h = "ObjectPattern" : s && (h = "RecordExpression"), this.finishNode(o, h);\n        }\n      }, {\n        key: "isAsyncProp",\n        value: function isAsyncProp(t) {\n          return !t.computed && "Identifier" === t.key.type && "async" === t.key.name && (this.match(n.name) || this.match(n.num) || this.match(n.string) || this.match(n.bracketL) || this.state.type.keyword || this.match(n.star)) && !this.hasPrecedingLineBreak();\n        }\n      }, {\n        key: "parseObjectMember",\n        value: function parseObjectMember(t, e) {\n          var s = [];\n          if (this.match(n.at)) for (this.hasPlugin("decorators") && this.raise(this.state.start, f.UnsupportedPropertyDecorator); this.match(n.at);) {\n            s.push(this.parseDecorator());\n          }\n          var i = this.startNode();\n          var r,\n              a,\n              o = !1,\n              h = !1;\n          if (this.match(n.ellipsis)) return s.length && this.unexpected(), t ? (this.next(), i.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(i, "RestElement")) : this.parseSpread();\n          s.length && (i.decorators = s, s = []), i.method = !1, (t || e) && (r = this.state.start, a = this.state.startLoc), t || (o = this.eat(n.star));\n          var p = this.state.containsEsc;\n          return this.parsePropertyName(i, !1), t || p || o || !this.isAsyncProp(i) ? h = !1 : (h = !0, o = this.eat(n.star), this.parsePropertyName(i, !1)), this.parseObjPropValue(i, r, a, o, h, t, e, p), i;\n        }\n      }, {\n        key: "isGetterOrSetterMethod",\n        value: function isGetterOrSetterMethod(t, e) {\n          return !e && !t.computed && "Identifier" === t.key.type && ("get" === t.key.name || "set" === t.key.name) && (this.match(n.string) || this.match(n.num) || this.match(n.bracketL) || this.match(n.name) || !!this.state.type.keyword);\n        }\n      }, {\n        key: "getGetterSetterExpectedParamCount",\n        value: function getGetterSetterExpectedParamCount(t) {\n          return "get" === t.kind ? 0 : 1;\n        }\n      }, {\n        key: "checkGetterSetterParams",\n        value: function checkGetterSetterParams(t) {\n          var e = this.getGetterSetterExpectedParamCount(t),\n              s = t.start;\n          t.params.length !== e && ("get" === t.kind ? this.raise(s, f.BadGetterArity) : this.raise(s, f.BadSetterArity)), "set" === t.kind && "RestElement" === t.params[t.params.length - 1].type && this.raise(s, f.BadSetterRestParameter);\n        }\n      }, {\n        key: "parseObjectMethod",\n        value: function parseObjectMethod(t, e, s, i, r) {\n          return s || e || this.match(n.parenL) ? (i && this.unexpected(), t.kind = "method", t.method = !0, this.parseMethod(t, e, s, !1, !1, "ObjectMethod")) : !r && this.isGetterOrSetterMethod(t, i) ? ((e || s) && this.unexpected(), t.kind = t.key.name, this.parsePropertyName(t, !1), this.parseMethod(t, !1, !1, !1, !1, "ObjectMethod"), this.checkGetterSetterParams(t), t) : void 0;\n        }\n      }, {\n        key: "parseObjectProperty",\n        value: function parseObjectProperty(t, e, s, i, r) {\n          return t.shorthand = !1, this.eat(n.colon) ? (t.value = i ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(!1, r), this.finishNode(t, "ObjectProperty")) : t.computed || "Identifier" !== t.key.type ? void 0 : (this.checkReservedWord(t.key.name, t.key.start, !0, !0), i ? t.value = this.parseMaybeDefault(e, s, t.key.__clone()) : this.match(n.eq) && r ? (-1 === r.shorthandAssign && (r.shorthandAssign = this.state.start), t.value = this.parseMaybeDefault(e, s, t.key.__clone())) : t.value = t.key.__clone(), t.shorthand = !0, this.finishNode(t, "ObjectProperty"));\n        }\n      }, {\n        key: "parseObjPropValue",\n        value: function parseObjPropValue(t, e, s, i, r, a, n, o) {\n          var h = this.parseObjectMethod(t, i, r, a, o) || this.parseObjectProperty(t, e, s, a, n);\n          return h || this.unexpected(), h;\n        }\n      }, {\n        key: "parsePropertyName",\n        value: function parsePropertyName(t, e) {\n          if (this.eat(n.bracketL)) t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(n.bracketR);else {\n            var _s53 = this.state.inPropertyName;\n            this.state.inPropertyName = !0, t.key = this.match(n.num) || this.match(n.string) || this.match(n.bigint) ? this.parseExprAtom() : this.parseMaybePrivateName(e), "PrivateName" !== t.key.type && (t.computed = !1), this.state.inPropertyName = _s53;\n          }\n          return t.key;\n        }\n      }, {\n        key: "initFunction",\n        value: function initFunction(t, e) {\n          t.id = null, t.generator = !1, t.async = !!e;\n        }\n      }, {\n        key: "parseMethod",\n        value: function parseMethod(t, e, s, i, r, a) {\n          var n = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : !1;\n          var o = this.state.yieldPos,\n              h = this.state.awaitPos;\n          this.state.yieldPos = -1, this.state.awaitPos = -1, this.initFunction(t, s), t.generator = !!e;\n          var p = i;\n          return this.scope.enter(18 | (n ? 64 : 0) | (r ? 32 : 0)), this.prodParam.enter(et(s, t.generator)), this.parseFunctionParams(t, p), this.parseFunctionBodyAndFinish(t, a, !0), this.prodParam.exit(), this.scope.exit(), this.state.yieldPos = o, this.state.awaitPos = h, t;\n        }\n      }, {\n        key: "parseArrowExpression",\n        value: function parseArrowExpression(t, e, s, i) {\n          this.scope.enter(6), this.prodParam.enter(et(s, !1)), this.initFunction(t, s);\n          var r = this.state.maybeInArrowParameters,\n              a = this.state.yieldPos,\n              n = this.state.awaitPos;\n          return e && (this.state.maybeInArrowParameters = !0, this.setArrowFunctionParameters(t, e, i)), this.state.maybeInArrowParameters = !1, this.state.yieldPos = -1, this.state.awaitPos = -1, this.parseFunctionBody(t, !0), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = r, this.state.yieldPos = a, this.state.awaitPos = n, this.finishNode(t, "ArrowFunctionExpression");\n        }\n      }, {\n        key: "setArrowFunctionParameters",\n        value: function setArrowFunctionParameters(t, e, s) {\n          t.params = this.toAssignableList(e, s);\n        }\n      }, {\n        key: "parseFunctionBodyAndFinish",\n        value: function parseFunctionBodyAndFinish(t, e) {\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          this.parseFunctionBody(t, !1, s), this.finishNode(t, e);\n        }\n      }, {\n        key: "parseFunctionBody",\n        value: function parseFunctionBody(t, e) {\n          var _this44 = this;\n\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          var i = e && !this.match(n.braceL),\n              r = this.state.inParameters;\n          if (this.state.inParameters = !1, i) t.body = this.parseMaybeAssign(), this.checkParams(t, !1, e, !1);else {\n            var _i44 = this.state.strict,\n                _r18 = this.state.labels;\n            this.state.labels = [], this.prodParam.enter(4 | this.prodParam.currentFlags()), t.body = this.parseBlock(!0, !1, function (r) {\n              var a = !_this44.isSimpleParamList(t.params);\n\n              if (r && a) {\n                var _e82 = "method" !== t.kind && "constructor" !== t.kind || !t.key ? t.start : t.key.end;\n\n                _this44.raise(_e82, f.IllegalLanguageModeDirective);\n              }\n\n              var n = !_i44 && _this44.state.strict;\n              _this44.checkParams(t, !(_this44.state.strict || e || s || a), e, n), _this44.state.strict && t.id && _this44.checkLVal(t.id, 65, void 0, "function name", void 0, n);\n            }), this.prodParam.exit(), this.state.labels = _r18;\n          }\n          this.state.inParameters = r;\n        }\n      }, {\n        key: "isSimpleParamList",\n        value: function isSimpleParamList(t) {\n          for (var _e83 = 0, _s54 = t.length; _e83 < _s54; _e83++) {\n            if ("Identifier" !== t[_e83].type) return !1;\n          }\n\n          return !0;\n        }\n      }, {\n        key: "checkParams",\n        value: function checkParams(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n          var r = Object.create(null);\n\n          for (var _s55 = 0; _s55 < t.params.length; _s55++) {\n            this.checkLVal(t.params[_s55], 5, e ? null : r, "function parameter list", void 0, i);\n          }\n        }\n      }, {\n        key: "parseExprList",\n        value: function parseExprList(t, e, s, i) {\n          var r = [];\n          var a = !0;\n\n          for (; !this.eat(t);) {\n            if (a) a = !1;else if (this.expect(n.comma), this.match(t)) {\n              i && this.addExtra(i, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n            r.push(this.parseExprListItem(e, s));\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseExprListItem",\n        value: function parseExprListItem(t, e, s, i) {\n          var r;\n          if (t && this.match(n.comma)) r = null;else if (this.match(n.ellipsis)) {\n            var _t80 = this.state.start,\n                _i45 = this.state.startLoc;\n            r = this.parseParenItem(this.parseSpread(e, s), _t80, _i45);\n          } else if (this.match(n.question)) {\n            this.expectPlugin("partialApplication"), i || this.raise(this.state.start, f.UnexpectedArgumentPlaceholder);\n\n            var _t81 = this.startNode();\n\n            this.next(), r = this.finishNode(_t81, "ArgumentPlaceholder");\n          } else r = this.parseMaybeAssign(!1, e, this.parseParenItem, s);\n          return r;\n        }\n      }, {\n        key: "parseIdentifier",\n        value: function parseIdentifier(t) {\n          var e = this.startNode(),\n              s = this.parseIdentifierName(e.start, t);\n          return this.createIdentifier(e, s);\n        }\n      }, {\n        key: "createIdentifier",\n        value: function createIdentifier(t, e) {\n          return t.name = e, t.loc.identifierName = e, this.finishNode(t, "Identifier");\n        }\n      }, {\n        key: "parseIdentifierName",\n        value: function parseIdentifierName(t, e) {\n          var s;\n          if (this.match(n.name)) s = this.state.value;else {\n            if (!this.state.type.keyword) throw this.unexpected();\n            s = this.state.type.keyword, "class" !== s && "function" !== s || this.state.lastTokEnd === this.state.lastTokStart + 1 && 46 === this.input.charCodeAt(this.state.lastTokStart) || this.state.context.pop();\n          }\n          return e ? this.state.type = n.name : this.checkReservedWord(s, this.state.start, !!this.state.type.keyword, !1), this.next(), s;\n        }\n      }, {\n        key: "checkReservedWord",\n        value: function checkReservedWord(t, e, s, i) {\n          if (this.prodParam.hasYield && "yield" === t) return void this.raise(e, f.YieldBindingIdentifier);\n\n          if ("await" === t) {\n            if (this.prodParam.hasAwait) return void this.raise(e, f.AwaitBindingIdentifier);\n            -1 === this.state.awaitPos && (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed()) && (this.state.awaitPos = this.state.start);\n          }\n\n          if (this.scope.inClass && !this.scope.inNonArrowFunction && "arguments" === t) return void this.raise(e, f.ArgumentsDisallowedInInitializer);\n          if (s && function (t) {\n            return k.has(t);\n          }(t)) return void this.raise(e, f.UnexpectedKeyword, t);\n          (this.state.strict ? i ? O : B : L)(t, this.inModule) && (this.prodParam.hasAwait || "await" !== t ? this.raise(e, f.UnexpectedReservedWord, t) : this.raise(e, f.AwaitNotInAsyncFunction));\n        }\n      }, {\n        key: "isAwaitAllowed",\n        value: function isAwaitAllowed() {\n          return this.scope.inFunction ? this.prodParam.hasAwait : !!this.options.allowAwaitOutsideFunction || !!this.hasPlugin("topLevelAwait") && this.inModule && this.prodParam.hasAwait;\n        }\n      }, {\n        key: "parseAwait",\n        value: function parseAwait() {\n          var t = this.startNode();\n          return this.next(), this.state.inParameters ? this.raise(t.start, f.AwaitExpressionFormalParameter) : -1 === this.state.awaitPos && (this.state.awaitPos = t.start), this.eat(n.star) && this.raise(t.start, f.ObsoleteAwaitStar), this.scope.inFunction || this.options.allowAwaitOutsideFunction || (this.hasPrecedingLineBreak() || this.match(n.plusMin) || this.match(n.parenL) || this.match(n.bracketL) || this.match(n.backQuote) || this.match(n.regexp) || this.match(n.slash) || this.hasPlugin("v8intrinsic") && this.match(n.modulo) ? this.ambiguousScriptDifferentAst = !0 : this.sawUnambiguousESM = !0), this.state.soloAwait || (t.argument = this.parseMaybeUnary()), this.finishNode(t, "AwaitExpression");\n        }\n      }, {\n        key: "parseYield",\n        value: function parseYield(t) {\n          var e = this.startNode();\n          return this.state.inParameters ? this.raise(e.start, f.YieldInParameter) : -1 === this.state.yieldPos && (this.state.yieldPos = e.start), this.next(), this.match(n.semi) || !this.match(n.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak() ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(n.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");\n        }\n      }, {\n        key: "checkPipelineAtInfixOperator",\n        value: function checkPipelineAtInfixOperator(t, e) {\n          "smart" === this.getPluginOption("pipelineOperator", "proposal") && "SequenceExpression" === t.type && this.raise(e, f.PipelineHeadSequenceExpression);\n        }\n      }, {\n        key: "parseSmartPipelineBody",\n        value: function parseSmartPipelineBody(t, e, s) {\n          var i = this.checkSmartPipelineBodyStyle(t);\n          return this.checkSmartPipelineBodyEarlyErrors(t, i, e), this.parseSmartPipelineBodyInStyle(t, i, e, s);\n        }\n      }, {\n        key: "checkSmartPipelineBodyEarlyErrors",\n        value: function checkSmartPipelineBodyEarlyErrors(t, e, s) {\n          if (this.match(n.arrow)) throw this.raise(this.state.start, f.PipelineBodyNoArrow);\n          "PipelineTopicExpression" === e && "SequenceExpression" === t.type && this.raise(s, f.PipelineBodySequenceExpression);\n        }\n      }, {\n        key: "parseSmartPipelineBodyInStyle",\n        value: function parseSmartPipelineBodyInStyle(t, e, s, i) {\n          var r = this.startNodeAt(s, i);\n\n          switch (e) {\n            case "PipelineBareFunction":\n              r.callee = t;\n              break;\n\n            case "PipelineBareConstructor":\n              r.callee = t.callee;\n              break;\n\n            case "PipelineBareAwaitedFunction":\n              r.callee = t.argument;\n              break;\n\n            case "PipelineTopicExpression":\n              this.topicReferenceWasUsedInCurrentTopicContext() || this.raise(s, f.PipelineTopicUnused), r.expression = t;\n              break;\n\n            default:\n              throw new Error("Internal @babel/parser error: Unknown pipeline style (".concat(e, ")"));\n          }\n\n          return this.finishNode(r, e);\n        }\n      }, {\n        key: "checkSmartPipelineBodyStyle",\n        value: function checkSmartPipelineBodyStyle(t) {\n          return t.type, this.isSimpleReference(t) ? "PipelineBareFunction" : "PipelineTopicExpression";\n        }\n      }, {\n        key: "isSimpleReference",\n        value: function isSimpleReference(t) {\n          switch (t.type) {\n            case "MemberExpression":\n              return !t.computed && this.isSimpleReference(t.object);\n\n            case "Identifier":\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n      }, {\n        key: "withTopicPermittingContext",\n        value: function withTopicPermittingContext(t) {\n          var e = this.state.topicContext;\n          this.state.topicContext = {\n            maxNumOfResolvableTopics: 1,\n            maxTopicIndex: null\n          };\n\n          try {\n            return t();\n          } finally {\n            this.state.topicContext = e;\n          }\n        }\n      }, {\n        key: "withTopicForbiddingContext",\n        value: function withTopicForbiddingContext(t) {\n          var e = this.state.topicContext;\n          this.state.topicContext = {\n            maxNumOfResolvableTopics: 0,\n            maxTopicIndex: null\n          };\n\n          try {\n            return t();\n          } finally {\n            this.state.topicContext = e;\n          }\n        }\n      }, {\n        key: "withSoloAwaitPermittingContext",\n        value: function withSoloAwaitPermittingContext(t) {\n          var e = this.state.soloAwait;\n          this.state.soloAwait = !0;\n\n          try {\n            return t();\n          } finally {\n            this.state.soloAwait = e;\n          }\n        }\n      }, {\n        key: "registerTopicReference",\n        value: function registerTopicReference() {\n          this.state.topicContext.maxTopicIndex = 0;\n        }\n      }, {\n        key: "primaryTopicReferenceIsAllowedInCurrentTopicContext",\n        value: function primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n          return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n        }\n      }, {\n        key: "topicReferenceWasUsedInCurrentTopicContext",\n        value: function topicReferenceWasUsedInCurrentTopicContext() {\n          return null != this.state.topicContext.maxTopicIndex && this.state.topicContext.maxTopicIndex >= 0;\n        }\n      }, {\n        key: "parseFSharpPipelineBody",\n        value: function parseFSharpPipelineBody(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc;\n          this.state.potentialArrowAt = this.state.start;\n          var r = this.state.inFSharpPipelineDirectBody;\n          this.state.inFSharpPipelineDirectBody = !0;\n          var a = this.parseExprOp(this.parseMaybeUnary(), s, i, t, e);\n          return this.state.inFSharpPipelineDirectBody = r, a;\n        }\n      }]);\n      return _class8;\n    }( /*#__PURE__*/function (_ref22) {\n      (0, _inherits2.default)(_class9, _ref22);\n\n      var _super12 = _createSuper(_class9);\n\n      function _class9() {\n        (0, _classCallCheck2.default)(this, _class9);\n        return _super12.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class9, [{\n        key: "toAssignable",\n        value: function toAssignable(t) {\n          var e, s;\n          var i = void 0;\n\n          switch (("ParenthesizedExpression" === t.type || (null == (e = t.extra) ? void 0 : e.parenthesized)) && (i = Pt(t), "Identifier" !== i.type && "MemberExpression" !== i.type && this.raise(t.start, f.InvalidParenthesizedAssignment)), t.type) {\n            case "Identifier":\n            case "ObjectPattern":\n            case "ArrayPattern":\n            case "AssignmentPattern":\n              break;\n\n            case "ObjectExpression":\n              t.type = "ObjectPattern";\n\n              for (var _e84 = 0, _s56 = t.properties.length, _i46 = _s56 - 1; _e84 < _s56; _e84++) {\n                var r;\n\n                var _s57 = t.properties[_e84],\n                    _a19 = _e84 === _i46;\n\n                this.toAssignableObjectExpressionProp(_s57, _a19), _a19 && "RestElement" === _s57.type && (null == (r = t.extra) ? void 0 : r.trailingComma) && this.raiseRestNotLast(t.extra.trailingComma);\n              }\n\n              break;\n\n            case "ObjectProperty":\n              this.toAssignable(t.value);\n              break;\n\n            case "SpreadElement":\n              {\n                this.checkToRestConversion(t), t.type = "RestElement";\n                var _e85 = t.argument;\n                this.toAssignable(_e85);\n                break;\n              }\n\n            case "ArrayExpression":\n              t.type = "ArrayPattern", this.toAssignableList(t.elements, null == (s = t.extra) ? void 0 : s.trailingComma);\n              break;\n\n            case "AssignmentExpression":\n              "=" !== t.operator && this.raise(t.left.end, f.MissingEqInAssignment), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left);\n              break;\n\n            case "ParenthesizedExpression":\n              this.toAssignable(i);\n          }\n\n          return t;\n        }\n      }, {\n        key: "toAssignableObjectExpressionProp",\n        value: function toAssignableObjectExpressionProp(t, e) {\n          if ("ObjectMethod" === t.type) {\n            var _e86 = "get" === t.kind || "set" === t.kind ? f.PatternHasAccessor : f.PatternHasMethod;\n\n            this.raise(t.key.start, _e86);\n          } else "SpreadElement" !== t.type || e ? this.toAssignable(t) : this.raiseRestNotLast(t.start);\n        }\n      }, {\n        key: "toAssignableList",\n        value: function toAssignableList(t, e) {\n          var s = t.length;\n\n          if (s) {\n            var _i47 = t[s - 1];\n            if (_i47 && "RestElement" === _i47.type) --s;else if (_i47 && "SpreadElement" === _i47.type) {\n              _i47.type = "RestElement";\n              var _t82 = _i47.argument;\n              this.toAssignable(_t82), "Identifier" !== _t82.type && "MemberExpression" !== _t82.type && "ArrayPattern" !== _t82.type && "ObjectPattern" !== _t82.type && this.unexpected(_t82.start), e && this.raiseTrailingCommaAfterRest(e), --s;\n            }\n          }\n\n          for (var _e87 = 0; _e87 < s; _e87++) {\n            var _s58 = t[_e87];\n            _s58 && (this.toAssignable(_s58), "RestElement" === _s58.type && this.raiseRestNotLast(_s58.start));\n          }\n\n          return t;\n        }\n      }, {\n        key: "toReferencedList",\n        value: function toReferencedList(t, e) {\n          return t;\n        }\n      }, {\n        key: "toReferencedListDeep",\n        value: function toReferencedListDeep(t, e) {\n          this.toReferencedList(t, e);\n\n          for (var _e88 = 0; _e88 < t.length; _e88++) {\n            var _s59 = t[_e88];\n            _s59 && "ArrayExpression" === _s59.type && this.toReferencedListDeep(_s59.elements);\n          }\n        }\n      }, {\n        key: "parseSpread",\n        value: function parseSpread(t, e) {\n          var s = this.startNode();\n          return this.next(), s.argument = this.parseMaybeAssign(!1, t, void 0, e), this.finishNode(s, "SpreadElement");\n        }\n      }, {\n        key: "parseRestBinding",\n        value: function parseRestBinding() {\n          var t = this.startNode();\n          return this.next(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");\n        }\n      }, {\n        key: "parseBindingAtom",\n        value: function parseBindingAtom() {\n          switch (this.state.type) {\n            case n.bracketL:\n              {\n                var _t83 = this.startNode();\n\n                return this.next(), _t83.elements = this.parseBindingList(n.bracketR, 93, !0), this.finishNode(_t83, "ArrayPattern");\n              }\n\n            case n.braceL:\n              return this.parseObj(n.braceR, !0);\n          }\n\n          return this.parseIdentifier();\n        }\n      }, {\n        key: "parseBindingList",\n        value: function parseBindingList(t, e, s, i) {\n          var r = [];\n          var a = !0;\n\n          for (; !this.eat(t);) {\n            if (a ? a = !1 : this.expect(n.comma), s && this.match(n.comma)) r.push(null);else {\n              if (this.eat(t)) break;\n\n              if (this.match(n.ellipsis)) {\n                r.push(this.parseAssignableListItemTypes(this.parseRestBinding())), this.checkCommaAfterRest(e), this.expect(t);\n                break;\n              }\n\n              {\n                var _t84 = [];\n\n                for (this.match(n.at) && this.hasPlugin("decorators") && this.raise(this.state.start, f.UnsupportedParameterDecorator); this.match(n.at);) {\n                  _t84.push(this.parseDecorator());\n                }\n\n                r.push(this.parseAssignableListItem(i, _t84));\n              }\n            }\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseAssignableListItem",\n        value: function parseAssignableListItem(t, e) {\n          var s = this.parseMaybeDefault();\n          this.parseAssignableListItemTypes(s);\n          var i = this.parseMaybeDefault(s.start, s.loc.start, s);\n          return e.length && (s.decorators = e), i;\n        }\n      }, {\n        key: "parseAssignableListItemTypes",\n        value: function parseAssignableListItemTypes(t) {\n          return t;\n        }\n      }, {\n        key: "parseMaybeDefault",\n        value: function parseMaybeDefault(t, e, s) {\n          if (e = e || this.state.startLoc, t = t || this.state.start, s = s || this.parseBindingAtom(), !this.eat(n.eq)) return s;\n          var i = this.startNodeAt(t, e);\n          return i.left = s, i.right = this.parseMaybeAssign(), this.finishNode(i, "AssignmentPattern");\n        }\n      }, {\n        key: "checkLVal",\n        value: function checkLVal(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n          var s = arguments.length > 2 ? arguments[2] : undefined;\n          var i = arguments.length > 3 ? arguments[3] : undefined;\n          var r = arguments.length > 4 ? arguments[4] : undefined;\n          var a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !1;\n\n          switch (t.type) {\n            case "Identifier":\n              if (this.state.strict && (a ? O(t.name, this.inModule) : M(t.name)) && this.raise(t.start, 64 === e ? f.StrictEvalArguments : f.StrictEvalArgumentsBinding, t.name), s) {\n                var _e89 = "_".concat(t.name);\n\n                s[_e89] ? this.raise(t.start, f.ParamDupe) : s[_e89] = !0;\n              }\n\n              r && "let" === t.name && this.raise(t.start, f.LetInLexicalBinding), 64 & e || this.scope.declareName(t.name, e, t.start);\n              break;\n\n            case "MemberExpression":\n              64 !== e && this.raise(t.start, f.InvalidPropertyBindingPattern);\n              break;\n\n            case "ObjectPattern":\n              for (var _i48 = 0, _a20 = t.properties; _i48 < _a20.length; _i48++) {\n                var _t85 = _a20[_i48];\n                if ("ObjectProperty" === _t85.type) _t85 = _t85.value;else if ("ObjectMethod" === _t85.type) continue;\n                this.checkLVal(_t85, e, s, "object destructuring pattern", r);\n              }\n\n              break;\n\n            case "ArrayPattern":\n              for (var _i49 = 0, _a21 = t.elements; _i49 < _a21.length; _i49++) {\n                var _t86 = _a21[_i49];\n                _t86 && this.checkLVal(_t86, e, s, "array destructuring pattern", r);\n              }\n\n              break;\n\n            case "AssignmentPattern":\n              this.checkLVal(t.left, e, s, "assignment pattern");\n              break;\n\n            case "RestElement":\n              this.checkLVal(t.argument, e, s, "rest element");\n              break;\n\n            case "ParenthesizedExpression":\n              this.checkLVal(t.expression, e, s, "parenthesized expression");\n              break;\n\n            default:\n              this.raise(t.start, 64 === e ? f.InvalidLhs : f.InvalidLhsBinding, i);\n          }\n        }\n      }, {\n        key: "checkToRestConversion",\n        value: function checkToRestConversion(t) {\n          "Identifier" !== t.argument.type && "MemberExpression" !== t.argument.type && this.raise(t.argument.start, f.InvalidRestAssignmentPattern);\n        }\n      }, {\n        key: "checkCommaAfterRest",\n        value: function checkCommaAfterRest(t) {\n          this.match(n.comma) && (this.lookaheadCharCode() === t ? this.raiseTrailingCommaAfterRest(this.state.start) : this.raiseRestNotLast(this.state.start));\n        }\n      }, {\n        key: "raiseRestNotLast",\n        value: function raiseRestNotLast(t) {\n          throw this.raise(t, f.ElementAfterRest);\n        }\n      }, {\n        key: "raiseTrailingCommaAfterRest",\n        value: function raiseTrailingCommaAfterRest(t) {\n          this.raise(t, f.RestTrailingComma);\n        }\n      }]);\n      return _class9;\n    }( /*#__PURE__*/function (_ref23) {\n      (0, _inherits2.default)(_class10, _ref23);\n\n      var _super13 = _createSuper(_class10);\n\n      function _class10() {\n        (0, _classCallCheck2.default)(this, _class10);\n        return _super13.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class10, [{\n        key: "startNode",\n        value: function startNode() {\n          return new gt(this, this.state.start, this.state.startLoc);\n        }\n      }, {\n        key: "startNodeAt",\n        value: function startNodeAt(t, e) {\n          return new gt(this, t, e);\n        }\n      }, {\n        key: "startNodeAtNode",\n        value: function startNodeAtNode(t) {\n          return this.startNodeAt(t.start, t.loc.start);\n        }\n      }, {\n        key: "finishNode",\n        value: function finishNode(t, e) {\n          return this.finishNodeAt(t, e, this.state.lastTokEnd, this.state.lastTokEndLoc);\n        }\n      }, {\n        key: "finishNodeAt",\n        value: function finishNodeAt(t, e, s, i) {\n          return t.type = e, t.end = s, t.loc.end = i, this.options.ranges && (t.range[1] = s), this.processComment(t), t;\n        }\n      }, {\n        key: "resetStartLocation",\n        value: function resetStartLocation(t, e, s) {\n          t.start = e, t.loc.start = s, this.options.ranges && (t.range[0] = e);\n        }\n      }, {\n        key: "resetEndLocation",\n        value: function resetEndLocation(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.lastTokEnd;\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.lastTokEndLoc;\n          t.end = e, t.loc.end = s, this.options.ranges && (t.range[1] = e);\n        }\n      }, {\n        key: "resetStartLocationFromNode",\n        value: function resetStartLocationFromNode(t, e) {\n          this.resetStartLocation(t, e.start, e.loc.start);\n        }\n      }]);\n      return _class10;\n    }( /*#__PURE__*/function (_ref24) {\n      (0, _inherits2.default)(_class11, _ref24);\n\n      var _super14 = _createSuper(_class11);\n\n      function _class11() {\n        (0, _classCallCheck2.default)(this, _class11);\n        return _super14.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class11, [{\n        key: "addExtra",\n        value: function addExtra(t, e, s) {\n          if (!t) return;\n          (t.extra = t.extra || {})[e] = s;\n        }\n      }, {\n        key: "isRelational",\n        value: function isRelational(t) {\n          return this.match(n.relational) && this.state.value === t;\n        }\n      }, {\n        key: "isLookaheadRelational",\n        value: function isLookaheadRelational(t) {\n          var e = this.nextTokenStart();\n\n          if (this.input.charAt(e) === t) {\n            if (e + 1 === this.input.length) return !0;\n\n            var _s60 = this.input.charCodeAt(e + 1);\n\n            return _s60 !== t.charCodeAt(0) && 61 !== _s60;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "expectRelational",\n        value: function expectRelational(t) {\n          this.isRelational(t) ? this.next() : this.unexpected(null, n.relational);\n        }\n      }, {\n        key: "isContextual",\n        value: function isContextual(t) {\n          return this.match(n.name) && this.state.value === t && !this.state.containsEsc;\n        }\n      }, {\n        key: "isUnparsedContextual",\n        value: function isUnparsedContextual(t, e) {\n          var s = t + e.length;\n          return this.input.slice(t, s) === e && (s === this.input.length || !S(this.input.charCodeAt(s)));\n        }\n      }, {\n        key: "isLookaheadContextual",\n        value: function isLookaheadContextual(t) {\n          var e = this.nextTokenStart();\n          return this.isUnparsedContextual(e, t);\n        }\n      }, {\n        key: "eatContextual",\n        value: function eatContextual(t) {\n          return this.isContextual(t) && this.eat(n.name);\n        }\n      }, {\n        key: "expectContextual",\n        value: function expectContextual(t, e) {\n          this.eatContextual(t) || this.unexpected(null, e);\n        }\n      }, {\n        key: "canInsertSemicolon",\n        value: function canInsertSemicolon() {\n          return this.match(n.eof) || this.match(n.braceR) || this.hasPrecedingLineBreak();\n        }\n      }, {\n        key: "hasPrecedingLineBreak",\n        value: function hasPrecedingLineBreak() {\n          return o.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n        }\n      }, {\n        key: "isLineTerminator",\n        value: function isLineTerminator() {\n          return this.eat(n.semi) || this.canInsertSemicolon();\n        }\n      }, {\n        key: "semicolon",\n        value: function semicolon() {\n          this.isLineTerminator() || this.unexpected(null, n.semi);\n        }\n      }, {\n        key: "expect",\n        value: function expect(t, e) {\n          this.eat(t) || this.unexpected(e, t);\n        }\n      }, {\n        key: "assertNoSpace",\n        value: function assertNoSpace() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Unexpected space.";\n          this.state.start > this.state.lastTokEnd && this.raise(this.state.lastTokEnd, t);\n        }\n      }, {\n        key: "unexpected",\n        value: function unexpected(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Unexpected token";\n          throw "string" != typeof e && (e = \'Unexpected token, expected "\'.concat(e.label, \'"\')), this.raise(null != t ? t : this.state.start, e);\n        }\n      }, {\n        key: "expectPlugin",\n        value: function expectPlugin(t, e) {\n          if (!this.hasPlugin(t)) throw this.raiseWithData(null != e ? e : this.state.start, {\n            missingPlugin: [t]\n          }, "This experimental syntax requires enabling the parser plugin: \'".concat(t, "\'"));\n          return !0;\n        }\n      }, {\n        key: "expectOnePlugin",\n        value: function expectOnePlugin(t, e) {\n          var _this45 = this;\n\n          if (!t.some(function (t) {\n            return _this45.hasPlugin(t);\n          })) throw this.raiseWithData(null != e ? e : this.state.start, {\n            missingPlugin: t\n          }, "This experimental syntax requires enabling one of the following parser plugin(s): \'".concat(t.join(", "), "\'"));\n        }\n      }, {\n        key: "checkYieldAwaitInDefaultParams",\n        value: function checkYieldAwaitInDefaultParams() {\n          -1 !== this.state.yieldPos && (-1 === this.state.awaitPos || this.state.yieldPos < this.state.awaitPos) && this.raise(this.state.yieldPos, "Yield cannot be used as name inside a generator function"), -1 !== this.state.awaitPos && this.raise(this.state.awaitPos, "Await cannot be used as name inside an async function");\n        }\n      }, {\n        key: "tryParse",\n        value: function tryParse(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.clone();\n          var s = {\n            node: null\n          };\n\n          try {\n            var _i50 = t(function () {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n              throw s.node = t, s;\n            });\n\n            if (this.state.errors.length > e.errors.length) {\n              var _t87 = this.state;\n              return this.state = e, {\n                node: _i50,\n                error: _t87.errors[e.errors.length],\n                thrown: !1,\n                aborted: !1,\n                failState: _t87\n              };\n            }\n\n            return {\n              node: _i50,\n              error: null,\n              thrown: !1,\n              aborted: !1,\n              failState: null\n            };\n          } catch (t) {\n            var _i51 = this.state;\n            if (this.state = e, t instanceof SyntaxError) return {\n              node: null,\n              error: t,\n              thrown: !0,\n              aborted: !1,\n              failState: _i51\n            };\n            if (t === s) return {\n              node: s.node,\n              error: null,\n              thrown: !1,\n              aborted: !0,\n              failState: _i51\n            };\n            throw t;\n          }\n        }\n      }, {\n        key: "checkExpressionErrors",\n        value: function checkExpressionErrors(t, e) {\n          if (!t) return !1;\n          var s = t.shorthandAssign,\n              i = t.doubleProto;\n          if (!e) return s >= 0 || i >= 0;\n          s >= 0 && this.unexpected(s), i >= 0 && this.raise(i, f.DuplicateProto);\n        }\n      }]);\n      return _class11;\n    }( /*#__PURE__*/function (_ref25) {\n      (0, _inherits2.default)(_class12, _ref25);\n\n      var _super15 = _createSuper(_class12);\n\n      function _class12(t, e) {\n        var _this46;\n\n        (0, _classCallCheck2.default)(this, _class12);\n        _this46 = _super15.call(this), _this46.tokens = [], _this46.state = new lt(), _this46.state.init(t), _this46.input = e, _this46.length = e.length, _this46.isLookahead = !1;\n        return _this46;\n      }\n\n      (0, _createClass2.default)(_class12, [{\n        key: "pushToken",\n        value: function pushToken(t) {\n          this.tokens.length = this.state.tokensLength, this.tokens.push(t), ++this.state.tokensLength;\n        }\n      }, {\n        key: "next",\n        value: function next() {\n          this.isLookahead || (this.checkKeywordEscapes(), this.options.tokens && this.pushToken(new yt(this.state))), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();\n        }\n      }, {\n        key: "eat",\n        value: function eat(t) {\n          return !!this.match(t) && (this.next(), !0);\n        }\n      }, {\n        key: "match",\n        value: function match(t) {\n          return this.state.type === t;\n        }\n      }, {\n        key: "lookahead",\n        value: function lookahead() {\n          var t = this.state;\n          this.state = t.clone(!0), this.isLookahead = !0, this.next(), this.isLookahead = !1;\n          var e = this.state;\n          return this.state = t, e;\n        }\n      }, {\n        key: "nextTokenStart",\n        value: function nextTokenStart() {\n          var t = this.state.pos;\n          return c.lastIndex = t, t + c.exec(this.input)[0].length;\n        }\n      }, {\n        key: "lookaheadCharCode",\n        value: function lookaheadCharCode() {\n          return this.input.charCodeAt(this.nextTokenStart());\n        }\n      }, {\n        key: "setStrict",\n        value: function setStrict(t) {\n          if (this.state.strict = t, this.match(n.num) || this.match(n.string)) {\n            for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart;) {\n              this.state.lineStart = this.input.lastIndexOf("\\n", this.state.lineStart - 2) + 1, --this.state.curLine;\n            }\n\n            this.nextToken();\n          }\n        }\n      }, {\n        key: "curContext",\n        value: function curContext() {\n          return this.state.context[this.state.context.length - 1];\n        }\n      }, {\n        key: "nextToken",\n        value: function nextToken() {\n          var t = this.curContext();\n          if (t && t.preserveSpace || this.skipSpace(), this.state.octalPositions = [], this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.length) return void this.finishToken(n.eof);\n          var e = null == t ? void 0 : t.override;\n          e ? e(this) : this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n        }\n      }, {\n        key: "pushComment",\n        value: function pushComment(t, e, s, i, r, a) {\n          var n = {\n            type: t ? "CommentBlock" : "CommentLine",\n            value: e,\n            start: s,\n            end: i,\n            loc: new d(r, a)\n          };\n          this.options.tokens && this.pushToken(n), this.state.comments.push(n), this.addComment(n);\n        }\n      }, {\n        key: "skipBlockComment",\n        value: function skipBlockComment() {\n          var t = this.state.curPosition(),\n              e = this.state.pos,\n              s = this.input.indexOf("*/", this.state.pos + 2);\n          if (-1 === s) throw this.raise(e, f.UnterminatedComment);\n          var i;\n\n          for (this.state.pos = s + 2, h.lastIndex = e; (i = h.exec(this.input)) && i.index < this.state.pos;) {\n            ++this.state.curLine, this.state.lineStart = i.index + i[0].length;\n          }\n\n          this.isLookahead || this.pushComment(!0, this.input.slice(e + 2, s), e, this.state.pos, t, this.state.curPosition());\n        }\n      }, {\n        key: "skipLineComment",\n        value: function skipLineComment(t) {\n          var e = this.state.pos,\n              s = this.state.curPosition();\n          var i = this.input.charCodeAt(this.state.pos += t);\n          if (this.state.pos < this.length) for (; !p(i) && ++this.state.pos < this.length;) {\n            i = this.input.charCodeAt(this.state.pos);\n          }\n          this.isLookahead || this.pushComment(!1, this.input.slice(e + t, this.state.pos), e, this.state.pos, s, this.state.curPosition());\n        }\n      }, {\n        key: "skipSpace",\n        value: function skipSpace() {\n          t: for (; this.state.pos < this.length;) {\n            var _t88 = this.input.charCodeAt(this.state.pos);\n\n            switch (_t88) {\n              case 32:\n              case 160:\n              case 9:\n                ++this.state.pos;\n                break;\n\n              case 13:\n                10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;\n\n              case 10:\n              case 8232:\n              case 8233:\n                ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;\n                break;\n\n              case 47:\n                switch (this.input.charCodeAt(this.state.pos + 1)) {\n                  case 42:\n                    this.skipBlockComment();\n                    break;\n\n                  case 47:\n                    this.skipLineComment(2);\n                    break;\n\n                  default:\n                    break t;\n                }\n\n                break;\n\n              default:\n                if (!u(_t88)) break t;\n                ++this.state.pos;\n            }\n          }\n        }\n      }, {\n        key: "finishToken",\n        value: function finishToken(t, e) {\n          this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();\n          var s = this.state.type;\n          this.state.type = t, this.state.value = e, this.isLookahead || this.updateContext(s);\n        }\n      }, {\n        key: "readToken_numberSign",\n        value: function readToken_numberSign() {\n          if (0 === this.state.pos && this.readToken_interpreter()) return;\n          var t = this.state.pos + 1,\n              e = this.input.charCodeAt(t);\n          if (e >= 48 && e <= 57) throw this.raise(this.state.pos, f.UnexpectedDigitAfterHash);\n\n          if (!this.hasPlugin("recordAndTuple") || 123 !== e && 91 !== e) {\n            if (!this.hasPlugin("classPrivateProperties") && !this.hasPlugin("classPrivateMethods") && "smart" !== this.getPluginOption("pipelineOperator", "proposal")) throw this.raise(this.state.pos, f.InvalidOrUnexpectedToken, "#");\n            this.finishOp(n.hash, 1);\n          } else {\n            if ("hash" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, 123 === e ? f.RecordExpressionHashIncorrectStartSyntaxType : f.TupleExpressionHashIncorrectStartSyntaxType);\n            123 === e ? this.finishToken(n.braceHashL) : this.finishToken(n.bracketHashL), this.state.pos += 2;\n          }\n        }\n      }, {\n        key: "readToken_dot",\n        value: function readToken_dot() {\n          var t = this.input.charCodeAt(this.state.pos + 1);\n          t >= 48 && t <= 57 ? this.readNumber(!0) : 46 === t && 46 === this.input.charCodeAt(this.state.pos + 2) ? (this.state.pos += 3, this.finishToken(n.ellipsis)) : (++this.state.pos, this.finishToken(n.dot));\n        }\n      }, {\n        key: "readToken_slash",\n        value: function readToken_slash() {\n          if (this.state.exprAllowed && !this.state.inType) return ++this.state.pos, void this.readRegexp();\n          61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.assign, 2) : this.finishOp(n.slash, 1);\n        }\n      }, {\n        key: "readToken_interpreter",\n        value: function readToken_interpreter() {\n          if (0 !== this.state.pos || this.length < 2) return !1;\n          var t = this.input.charCodeAt(this.state.pos + 1);\n          if (33 !== t) return !1;\n          var e = this.state.pos;\n\n          for (this.state.pos += 1; !p(t) && ++this.state.pos < this.length;) {\n            t = this.input.charCodeAt(this.state.pos);\n          }\n\n          var s = this.input.slice(e + 2, this.state.pos);\n          return this.finishToken(n.interpreterDirective, s), !0;\n        }\n      }, {\n        key: "readToken_mult_modulo",\n        value: function readToken_mult_modulo(t) {\n          var e = 42 === t ? n.star : n.modulo,\n              s = 1,\n              i = this.input.charCodeAt(this.state.pos + 1);\n          var r = this.state.exprAllowed;\n          42 === t && 42 === i && (s++, i = this.input.charCodeAt(this.state.pos + 2), e = n.exponent), 61 !== i || r || (s++, e = n.assign), this.finishOp(e, s);\n        }\n      }, {\n        key: "readToken_pipe_amp",\n        value: function readToken_pipe_amp(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n\n          if (e !== t) {\n            if (124 === t) {\n              if (62 === e) return void this.finishOp(n.pipeline, 2);\n\n              if (this.hasPlugin("recordAndTuple") && 125 === e) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.RecordExpressionBarIncorrectEndSyntaxType);\n                return void this.finishOp(n.braceBarR, 2);\n              }\n\n              if (this.hasPlugin("recordAndTuple") && 93 === e) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.TupleExpressionBarIncorrectEndSyntaxType);\n                return void this.finishOp(n.bracketBarR, 2);\n              }\n            }\n\n            61 !== e ? this.finishOp(124 === t ? n.bitwiseOR : n.bitwiseAND, 1) : this.finishOp(n.assign, 2);\n          } else 61 === this.input.charCodeAt(this.state.pos + 2) ? this.finishOp(n.assign, 3) : this.finishOp(124 === t ? n.logicalOR : n.logicalAND, 2);\n        }\n      }, {\n        key: "readToken_caret",\n        value: function readToken_caret() {\n          61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.assign, 2) : this.finishOp(n.bitwiseXOR, 1);\n        }\n      }, {\n        key: "readToken_plus_min",\n        value: function readToken_plus_min(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          if (e === t) return 45 !== e || this.inModule || 62 !== this.input.charCodeAt(this.state.pos + 2) || 0 !== this.state.lastTokEnd && !o.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? void this.finishOp(n.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), void this.nextToken());\n          61 === e ? this.finishOp(n.assign, 2) : this.finishOp(n.plusMin, 1);\n        }\n      }, {\n        key: "readToken_lt_gt",\n        value: function readToken_lt_gt(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          var s = 1;\n          return e === t ? (s = 62 === t && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + s) ? void this.finishOp(n.assign, s + 1) : void this.finishOp(n.bitShift, s)) : 33 !== e || 60 !== t || this.inModule || 45 !== this.input.charCodeAt(this.state.pos + 2) || 45 !== this.input.charCodeAt(this.state.pos + 3) ? (61 === e && (s = 2), void this.finishOp(n.relational, s)) : (this.skipLineComment(4), this.skipSpace(), void this.nextToken());\n        }\n      }, {\n        key: "readToken_eq_excl",\n        value: function readToken_eq_excl(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          if (61 !== e) return 61 === t && 62 === e ? (this.state.pos += 2, void this.finishToken(n.arrow)) : void this.finishOp(61 === t ? n.eq : n.bang, 1);\n          this.finishOp(n.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2);\n        }\n      }, {\n        key: "readToken_question",\n        value: function readToken_question() {\n          var t = this.input.charCodeAt(this.state.pos + 1),\n              e = this.input.charCodeAt(this.state.pos + 2);\n          63 !== t || this.state.inType ? 46 !== t || e >= 48 && e <= 57 ? (++this.state.pos, this.finishToken(n.question)) : (this.state.pos += 2, this.finishToken(n.questionDot)) : 61 === e ? this.finishOp(n.assign, 3) : this.finishOp(n.nullishCoalescing, 2);\n        }\n      }, {\n        key: "getTokenFromCode",\n        value: function getTokenFromCode(t) {\n          switch (t) {\n            case 46:\n              return void this.readToken_dot();\n\n            case 40:\n              return ++this.state.pos, void this.finishToken(n.parenL);\n\n            case 41:\n              return ++this.state.pos, void this.finishToken(n.parenR);\n\n            case 59:\n              return ++this.state.pos, void this.finishToken(n.semi);\n\n            case 44:\n              return ++this.state.pos, void this.finishToken(n.comma);\n\n            case 91:\n              if (this.hasPlugin("recordAndTuple") && 124 === this.input.charCodeAt(this.state.pos + 1)) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.TupleExpressionBarIncorrectStartSyntaxType);\n                this.finishToken(n.bracketBarL), this.state.pos += 2;\n              } else ++this.state.pos, this.finishToken(n.bracketL);\n\n              return;\n\n            case 93:\n              return ++this.state.pos, void this.finishToken(n.bracketR);\n\n            case 123:\n              if (this.hasPlugin("recordAndTuple") && 124 === this.input.charCodeAt(this.state.pos + 1)) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.RecordExpressionBarIncorrectStartSyntaxType);\n                this.finishToken(n.braceBarL), this.state.pos += 2;\n              } else ++this.state.pos, this.finishToken(n.braceL);\n\n              return;\n\n            case 125:\n              return ++this.state.pos, void this.finishToken(n.braceR);\n\n            case 58:\n              return void (this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.doubleColon, 2) : (++this.state.pos, this.finishToken(n.colon)));\n\n            case 63:\n              return void this.readToken_question();\n\n            case 96:\n              return ++this.state.pos, void this.finishToken(n.backQuote);\n\n            case 48:\n              {\n                var _t89 = this.input.charCodeAt(this.state.pos + 1);\n\n                if (120 === _t89 || 88 === _t89) return void this.readRadixNumber(16);\n                if (111 === _t89 || 79 === _t89) return void this.readRadixNumber(8);\n                if (98 === _t89 || 66 === _t89) return void this.readRadixNumber(2);\n              }\n\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n              return void this.readNumber(!1);\n\n            case 34:\n            case 39:\n              return void this.readString(t);\n\n            case 47:\n              return void this.readToken_slash();\n\n            case 37:\n            case 42:\n              return void this.readToken_mult_modulo(t);\n\n            case 124:\n            case 38:\n              return void this.readToken_pipe_amp(t);\n\n            case 94:\n              return void this.readToken_caret();\n\n            case 43:\n            case 45:\n              return void this.readToken_plus_min(t);\n\n            case 60:\n            case 62:\n              return void this.readToken_lt_gt(t);\n\n            case 61:\n            case 33:\n              return void this.readToken_eq_excl(t);\n\n            case 126:\n              return void this.finishOp(n.tilde, 1);\n\n            case 64:\n              return ++this.state.pos, void this.finishToken(n.at);\n\n            case 35:\n              return void this.readToken_numberSign();\n\n            case 92:\n              return void this.readWord();\n\n            default:\n              if (w(t)) return void this.readWord();\n          }\n\n          throw this.raise(this.state.pos, f.InvalidOrUnexpectedToken, String.fromCodePoint(t));\n        }\n      }, {\n        key: "finishOp",\n        value: function finishOp(t, e) {\n          var s = this.input.slice(this.state.pos, this.state.pos + e);\n          this.state.pos += e, this.finishToken(t, s);\n        }\n      }, {\n        key: "readRegexp",\n        value: function readRegexp() {\n          var t = this.state.pos;\n          var e, s;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(t, f.UnterminatedRegExp);\n\n            var _i52 = this.input.charAt(this.state.pos);\n\n            if (o.test(_i52)) throw this.raise(t, f.UnterminatedRegExp);\n            if (e) e = !1;else {\n              if ("[" === _i52) s = !0;else if ("]" === _i52 && s) s = !1;else if ("/" === _i52 && !s) break;\n              e = "\\\\" === _i52;\n            }\n            ++this.state.pos;\n          }\n\n          var i = this.input.slice(t, this.state.pos);\n          ++this.state.pos;\n          var r = "";\n\n          for (; this.state.pos < this.length;) {\n            var _t90 = this.input[this.state.pos],\n                _e90 = this.input.codePointAt(this.state.pos);\n\n            if (mt.has(_t90)) r.indexOf(_t90) > -1 && this.raise(this.state.pos + 1, f.DuplicateRegExpFlags);else {\n              if (!S(_e90) && 92 !== _e90) break;\n              this.raise(this.state.pos + 1, f.MalformedRegExpFlags);\n            }\n            ++this.state.pos, r += _t90;\n          }\n\n          this.finishToken(n.regexp, {\n            pattern: i,\n            flags: r\n          });\n        }\n      }, {\n        key: "readInt",\n        value: function readInt(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n          var r = this.state.pos,\n              a = 16 === t ? ft.hex : ft.decBinOct,\n              n = 16 === t ? Dt.hex : 10 === t ? Dt.dec : 8 === t ? Dt.oct : Dt.bin;\n          var o = !1,\n              h = 0;\n\n          for (var _r19 = 0, _p5 = null == e ? 1 / 0 : e; _r19 < _p5; ++_r19) {\n            var _e91 = this.input.charCodeAt(this.state.pos);\n\n            var _p6 = void 0;\n\n            if (this.hasPlugin("numericSeparator") && 95 === _e91) {\n              var _t91 = this.input.charCodeAt(this.state.pos - 1),\n                  _e92 = this.input.charCodeAt(this.state.pos + 1);\n\n              -1 === n.indexOf(_e92) ? this.raise(this.state.pos, f.UnexpectedNumericSeparator) : (a.indexOf(_t91) > -1 || a.indexOf(_e92) > -1 || Number.isNaN(_e92)) && this.raise(this.state.pos, f.UnexpectedNumericSeparator), i || this.raise(this.state.pos, f.NumericSeparatorInEscapeSequence), ++this.state.pos;\n            } else {\n              if (_p6 = _e91 >= 97 ? _e91 - 97 + 10 : _e91 >= 65 ? _e91 - 65 + 10 : dt(_e91) ? _e91 - 48 : 1 / 0, _p6 >= t) if (this.options.errorRecovery && _p6 <= 9) _p6 = 0, this.raise(this.state.start + _r19 + 2, f.InvalidDigit, t);else {\n                if (!s) break;\n                _p6 = 0, o = !0;\n              }\n              ++this.state.pos, h = h * t + _p6;\n            }\n          }\n\n          return this.state.pos === r || null != e && this.state.pos - r !== e || o ? null : h;\n        }\n      }, {\n        key: "readRadixNumber",\n        value: function readRadixNumber(t) {\n          var e = this.state.pos;\n          var s = !1;\n          this.state.pos += 2;\n          var i = this.readInt(t);\n          if (null == i && this.raise(this.state.start + 2, f.InvalidDigit, t), 110 === this.input.charCodeAt(this.state.pos) && (++this.state.pos, s = !0), w(this.input.codePointAt(this.state.pos))) throw this.raise(this.state.pos, f.NumberIdentifier);\n\n          if (s) {\n            var _t92 = this.input.slice(e, this.state.pos).replace(/[_n]/g, "");\n\n            this.finishToken(n.bigint, _t92);\n          } else this.finishToken(n.num, i);\n        }\n      }, {\n        key: "readNumber",\n        value: function readNumber(t) {\n          var e = this.state.pos;\n          var s = !1,\n              i = !1,\n              r = !1;\n          t || null !== this.readInt(10) || this.raise(e, f.InvalidNumber);\n          var a = this.state.pos - e >= 2 && 48 === this.input.charCodeAt(e);\n          a && (this.state.strict && this.raise(e, f.StrictOctalLiteral), /[89]/.test(this.input.slice(e, this.state.pos)) && (a = !1, r = !0));\n          var o = this.input.charCodeAt(this.state.pos);\n\n          if (46 !== o || a || (++this.state.pos, this.readInt(10), s = !0, o = this.input.charCodeAt(this.state.pos)), 69 !== o && 101 !== o || a || (o = this.input.charCodeAt(++this.state.pos), 43 !== o && 45 !== o || ++this.state.pos, null === this.readInt(10) && this.raise(e, "Invalid number"), s = !0, o = this.input.charCodeAt(this.state.pos)), this.hasPlugin("numericSeparator") && (a || r)) {\n            var _t93 = this.input.slice(e, this.state.pos).indexOf("_");\n\n            _t93 > 0 && this.raise(_t93 + e, f.ZeroDigitNumericSeparator);\n          }\n\n          if (110 === o && ((s || a || r) && this.raise(e, "Invalid BigIntLiteral"), ++this.state.pos, i = !0), w(this.input.codePointAt(this.state.pos))) throw this.raise(this.state.pos, f.NumberIdentifier);\n          var h = this.input.slice(e, this.state.pos).replace(/[_n]/g, "");\n          if (i) return void this.finishToken(n.bigint, h);\n          var p = a ? parseInt(h, 8) : parseFloat(h);\n          this.finishToken(n.num, p);\n        }\n      }, {\n        key: "readCodePoint",\n        value: function readCodePoint(t) {\n          var e;\n\n          if (123 === this.input.charCodeAt(this.state.pos)) {\n            var _s61 = ++this.state.pos;\n\n            if (e = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, !0, t), ++this.state.pos, null !== e && e > 1114111) {\n              if (!t) return null;\n              this.raise(_s61, f.InvalidCodePoint);\n            }\n          } else e = this.readHexChar(4, !1, t);\n\n          return e;\n        }\n      }, {\n        key: "readString",\n        value: function readString(t) {\n          var e = "",\n              s = ++this.state.pos;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedString);\n\n            var _i53 = this.input.charCodeAt(this.state.pos);\n\n            if (_i53 === t) break;\n            if (92 === _i53) e += this.input.slice(s, this.state.pos), e += this.readEscapedChar(!1), s = this.state.pos;else if (8232 === _i53 || 8233 === _i53) ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;else {\n              if (p(_i53)) throw this.raise(this.state.start, f.UnterminatedString);\n              ++this.state.pos;\n            }\n          }\n\n          e += this.input.slice(s, this.state.pos++), this.finishToken(n.string, e);\n        }\n      }, {\n        key: "readTmplToken",\n        value: function readTmplToken() {\n          var t = "",\n              e = this.state.pos,\n              s = !1;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedTemplate);\n\n            var _i54 = this.input.charCodeAt(this.state.pos);\n\n            if (96 === _i54 || 36 === _i54 && 123 === this.input.charCodeAt(this.state.pos + 1)) return this.state.pos === this.state.start && this.match(n.template) ? 36 === _i54 ? (this.state.pos += 2, void this.finishToken(n.dollarBraceL)) : (++this.state.pos, void this.finishToken(n.backQuote)) : (t += this.input.slice(e, this.state.pos), void this.finishToken(n.template, s ? null : t));\n\n            if (92 === _i54) {\n              t += this.input.slice(e, this.state.pos);\n\n              var _i55 = this.readEscapedChar(!0);\n\n              null === _i55 ? s = !0 : t += _i55, e = this.state.pos;\n            } else if (p(_i54)) {\n              switch (t += this.input.slice(e, this.state.pos), ++this.state.pos, _i54) {\n                case 13:\n                  10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;\n\n                case 10:\n                  t += "\\n";\n                  break;\n\n                default:\n                  t += String.fromCharCode(_i54);\n              }\n\n              ++this.state.curLine, this.state.lineStart = this.state.pos, e = this.state.pos;\n            } else ++this.state.pos;\n          }\n        }\n      }, {\n        key: "readEscapedChar",\n        value: function readEscapedChar(t) {\n          var e = !t,\n              s = this.input.charCodeAt(++this.state.pos);\n\n          switch (++this.state.pos, s) {\n            case 110:\n              return "\\n";\n\n            case 114:\n              return "\\r";\n\n            case 120:\n              {\n                var _t94 = this.readHexChar(2, !1, e);\n\n                return null === _t94 ? null : String.fromCharCode(_t94);\n              }\n\n            case 117:\n              {\n                var _t95 = this.readCodePoint(e);\n\n                return null === _t95 ? null : String.fromCodePoint(_t95);\n              }\n\n            case 116:\n              return "\\t";\n\n            case 98:\n              return "\\b";\n\n            case 118:\n              return "\\v";\n\n            case 102:\n              return "\\f";\n\n            case 13:\n              10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;\n\n            case 10:\n              this.state.lineStart = this.state.pos, ++this.state.curLine;\n\n            case 8232:\n            case 8233:\n              return "";\n\n            case 56:\n            case 57:\n              if (t) return null;\n\n            default:\n              if (s >= 48 && s <= 55) {\n                var _e93 = this.state.pos - 1;\n\n                var _s62 = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0],\n                    _i56 = parseInt(_s62, 8);\n\n                _i56 > 255 && (_s62 = _s62.slice(0, -1), _i56 = parseInt(_s62, 8)), this.state.pos += _s62.length - 1;\n\n                var _r20 = this.input.charCodeAt(this.state.pos);\n\n                if ("0" !== _s62 || 56 === _r20 || 57 === _r20) {\n                  if (t) return null;\n                  this.state.strict ? this.raise(_e93, f.StrictOctalLiteral) : this.state.octalPositions.push(_e93);\n                }\n\n                return String.fromCharCode(_i56);\n              }\n\n              return String.fromCharCode(s);\n          }\n        }\n      }, {\n        key: "readHexChar",\n        value: function readHexChar(t, e, s) {\n          var i = this.state.pos,\n              r = this.readInt(16, t, e, !1);\n          return null === r && (s ? this.raise(i, f.InvalidEscapeSequence) : this.state.pos = i - 1), r;\n        }\n      }, {\n        key: "readWord1",\n        value: function readWord1() {\n          var t = "";\n          this.state.containsEsc = !1;\n          var e = this.state.pos;\n          var s = this.state.pos;\n\n          for (; this.state.pos < this.length;) {\n            var _i57 = this.input.codePointAt(this.state.pos);\n\n            if (S(_i57)) this.state.pos += _i57 <= 65535 ? 1 : 2;else if (this.state.isIterator && 64 === _i57) ++this.state.pos;else {\n              if (92 !== _i57) break;\n              {\n                this.state.containsEsc = !0, t += this.input.slice(s, this.state.pos);\n\n                var _i58 = this.state.pos,\n                    _r21 = this.state.pos === e ? w : S;\n\n                if (117 !== this.input.charCodeAt(++this.state.pos)) {\n                  this.raise(this.state.pos, f.MissingUnicodeEscape);\n                  continue;\n                }\n\n                ++this.state.pos;\n\n                var _a22 = this.readCodePoint(!0);\n\n                null !== _a22 && (_r21(_a22) || this.raise(_i58, f.EscapedCharNotAnIdentifier), t += String.fromCodePoint(_a22)), s = this.state.pos;\n              }\n            }\n          }\n\n          return t + this.input.slice(s, this.state.pos);\n        }\n      }, {\n        key: "isIterator",\n        value: function isIterator(t) {\n          return "@@iterator" === t || "@@asyncIterator" === t;\n        }\n      }, {\n        key: "readWord",\n        value: function readWord() {\n          var t = this.readWord1(),\n              e = i.get(t) || n.name;\n          !this.state.isIterator || this.isIterator(t) && this.state.inType || this.raise(this.state.pos, f.InvalidIdentifier, t), this.finishToken(e, t);\n        }\n      }, {\n        key: "checkKeywordEscapes",\n        value: function checkKeywordEscapes() {\n          var t = this.state.type.keyword;\n          t && this.state.containsEsc && this.raise(this.state.start, f.InvalidEscapedReservedWord, t);\n        }\n      }, {\n        key: "braceIsBlock",\n        value: function braceIsBlock(t) {\n          var e = this.curContext();\n          return e === x.functionExpression || e === x.functionStatement || (t !== n.colon || e !== x.braceStatement && e !== x.braceExpression ? t === n._return || t === n.name && this.state.exprAllowed ? o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : t === n._else || t === n.semi || t === n.eof || t === n.parenR || t === n.arrow || (t === n.braceL ? e === x.braceStatement : t !== n._var && t !== n._const && t !== n.name && (t === n.relational || !this.state.exprAllowed)) : !e.isExpr);\n        }\n      }, {\n        key: "updateContext",\n        value: function updateContext(t) {\n          var e = this.state.type;\n          var s;\n          !e.keyword || t !== n.dot && t !== n.questionDot ? (s = e.updateContext) ? s.call(this, t) : this.state.exprAllowed = e.beforeExpr : this.state.exprAllowed = !1;\n        }\n      }]);\n      return _class12;\n    }( /*#__PURE__*/function (_ref26) {\n      (0, _inherits2.default)(_class13, _ref26);\n\n      var _super16 = _createSuper(_class13);\n\n      function _class13() {\n        (0, _classCallCheck2.default)(this, _class13);\n        return _super16.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class13, [{\n        key: "getLocationForPosition",\n        value: function getLocationForPosition(t) {\n          var e;\n          return e = t === this.state.start ? this.state.startLoc : t === this.state.lastTokStart ? this.state.lastTokStartLoc : t === this.state.end ? this.state.endLoc : t === this.state.lastTokEnd ? this.state.lastTokEndLoc : function (t, e) {\n            var s,\n                i = 1,\n                r = 0;\n\n            for (h.lastIndex = 0; (s = h.exec(t)) && s.index < e;) {\n              i++, r = h.lastIndex;\n            }\n\n            return new l(i, e - r);\n          }(this.input, t), e;\n        }\n      }, {\n        key: "raise",\n        value: function raise(t, e) {\n          for (var _len5 = arguments.length, s = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n            s[_key5 - 2] = arguments[_key5];\n          }\n\n          return this.raiseWithData.apply(this, [t, void 0, e].concat(s));\n        }\n      }, {\n        key: "raiseWithData",\n        value: function raiseWithData(t, e, s) {\n          for (var _len6 = arguments.length, i = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n            i[_key6 - 3] = arguments[_key6];\n          }\n\n          var r = this.getLocationForPosition(t),\n              a = s.replace(/%(\\d+)/g, function (t, e) {\n            return i[e];\n          }) + " (".concat(r.line, ":").concat(r.column, ")");\n          return this._raise(Object.assign({\n            loc: r,\n            pos: t\n          }, e), a);\n        }\n      }, {\n        key: "_raise",\n        value: function _raise(t, e) {\n          var s = new SyntaxError(e);\n          if (Object.assign(s, t), this.options.errorRecovery) return this.isLookahead || this.state.errors.push(s), s;\n          throw s;\n        }\n      }]);\n      return _class13;\n    }( /*#__PURE__*/function (_ref27) {\n      (0, _inherits2.default)(_class14, _ref27);\n\n      var _super17 = _createSuper(_class14);\n\n      function _class14() {\n        (0, _classCallCheck2.default)(this, _class14);\n        return _super17.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class14, [{\n        key: "addComment",\n        value: function addComment(t) {\n          this.filename && (t.loc.filename = this.filename), this.state.trailingComments.push(t), this.state.leadingComments.push(t);\n        }\n      }, {\n        key: "adjustCommentsAfterTrailingComma",\n        value: function adjustCommentsAfterTrailingComma(t, e, s) {\n          if (0 === this.state.leadingComments.length) return;\n          var i = null,\n              r = e.length;\n\n          for (; null === i && r > 0;) {\n            i = e[--r];\n          }\n\n          if (null === i) return;\n\n          for (var _t96 = 0; _t96 < this.state.leadingComments.length; _t96++) {\n            this.state.leadingComments[_t96].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(_t96, 1), _t96--);\n          }\n\n          var a = [];\n\n          for (var _e94 = 0; _e94 < this.state.leadingComments.length; _e94++) {\n            var _i59 = this.state.leadingComments[_e94];\n            _i59.end < t.end ? (a.push(_i59), s || (this.state.leadingComments.splice(_e94, 1), _e94--)) : (void 0 === t.trailingComments && (t.trailingComments = []), t.trailingComments.push(_i59));\n          }\n\n          s && (this.state.leadingComments = []), a.length > 0 ? i.trailingComments = a : void 0 !== i.trailingComments && (i.trailingComments = []);\n        }\n      }, {\n        key: "processComment",\n        value: function processComment(t) {\n          if ("Program" === t.type && t.body.length > 0) return;\n          var e = this.state.commentStack;\n          var s, i, r, a, n;\n          if (this.state.trailingComments.length > 0) this.state.trailingComments[0].start >= t.end ? (r = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;else if (e.length > 0) {\n            var _s63 = m(e);\n\n            _s63.trailingComments && _s63.trailingComments[0].start >= t.end && (r = _s63.trailingComments, delete _s63.trailingComments);\n          }\n\n          for (e.length > 0 && m(e).start >= t.start && (s = e.pop()); e.length > 0 && m(e).start >= t.start;) {\n            i = e.pop();\n          }\n\n          if (!i && s && (i = s), s) switch (t.type) {\n            case "ObjectExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.properties);\n              break;\n\n            case "ObjectPattern":\n              this.adjustCommentsAfterTrailingComma(t, t.properties, !0);\n              break;\n\n            case "CallExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.arguments);\n              break;\n\n            case "ArrayExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.elements);\n              break;\n\n            case "ArrayPattern":\n              this.adjustCommentsAfterTrailingComma(t, t.elements, !0);\n          } else this.state.commentPreviousNode && ("ImportSpecifier" === this.state.commentPreviousNode.type && "ImportSpecifier" !== t.type || "ExportSpecifier" === this.state.commentPreviousNode.type && "ExportSpecifier" !== t.type) && this.adjustCommentsAfterTrailingComma(t, [this.state.commentPreviousNode]);\n\n          if (i) {\n            if (i.leadingComments) if (i !== t && i.leadingComments.length > 0 && m(i.leadingComments).end <= t.start) t.leadingComments = i.leadingComments, delete i.leadingComments;else for (a = i.leadingComments.length - 2; a >= 0; --a) {\n              if (i.leadingComments[a].end <= t.start) {\n                t.leadingComments = i.leadingComments.splice(0, a + 1);\n                break;\n              }\n            }\n          } else if (this.state.leadingComments.length > 0) if (m(this.state.leadingComments).end <= t.start) {\n            if (this.state.commentPreviousNode) for (n = 0; n < this.state.leadingComments.length; n++) {\n              this.state.leadingComments[n].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(n, 1), n--);\n            }\n            this.state.leadingComments.length > 0 && (t.leadingComments = this.state.leadingComments, this.state.leadingComments = []);\n          } else {\n            for (a = 0; a < this.state.leadingComments.length && !(this.state.leadingComments[a].end > t.start); a++) {\n              ;\n            }\n\n            var _e95 = this.state.leadingComments.slice(0, a);\n\n            _e95.length && (t.leadingComments = _e95), r = this.state.leadingComments.slice(a), 0 === r.length && (r = null);\n          }\n\n          this.state.commentPreviousNode = t, r && (r.length && r[0].start >= t.start && m(r).end <= t.end ? t.innerComments = r : t.trailingComments = r), e.push(t);\n        }\n      }]);\n      return _class14;\n    }( /*#__PURE__*/function () {\n      function _class15() {\n        (0, _classCallCheck2.default)(this, _class15);\n        this.sawUnambiguousESM = !1, this.ambiguousScriptDifferentAst = !1;\n      }\n\n      (0, _createClass2.default)(_class15, [{\n        key: "hasPlugin",\n        value: function hasPlugin(t) {\n          return this.plugins.has(t);\n        }\n      }, {\n        key: "getPluginOption",\n        value: function getPluginOption(t, e) {\n          if (this.hasPlugin(t)) return this.plugins.get(t)[e];\n        }\n      }]);\n      return _class15;\n    }())))))))));\n\n    function wt(t, e) {\n      var s = At;\n      return t && t.plugins && (!function (t) {\n        if (at(t, "decorators")) {\n          if (at(t, "decorators-legacy")) throw new Error("Cannot use the decorators and decorators-legacy plugin together");\n\n          var _e96 = nt(t, "decorators", "decoratorsBeforeExport");\n\n          if (null == _e96) throw new Error("The \'decorators\' plugin requires a \'decoratorsBeforeExport\' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the \'decorators-legacy\' plugin instead of \'decorators\'.");\n          if ("boolean" != typeof _e96) throw new Error("\'decoratorsBeforeExport\' must be a boolean.");\n        }\n\n        if (at(t, "flow") && at(t, "typescript")) throw new Error("Cannot combine flow and typescript plugins.");\n        if (at(t, "placeholders") && at(t, "v8intrinsic")) throw new Error("Cannot combine placeholders and v8intrinsic plugins.");\n        if (at(t, "pipelineOperator") && !ot.includes(nt(t, "pipelineOperator", "proposal"))) throw new Error("\'pipelineOperator\' requires \'proposal\' option whose value should be one of: " + ot.map(function (t) {\n          return "\'".concat(t, "\'");\n        }).join(", "));\n        if (at(t, "recordAndTuple") && !ht.includes(nt(t, "recordAndTuple", "syntaxType"))) throw new Error("\'recordAndTuple\' requires \'syntaxType\' option whose value should be one of: " + ht.map(function (t) {\n          return "\'".concat(t, "\'");\n        }).join(", "));\n      }(t.plugins), s = function (t) {\n        var e = ct.filter(function (e) {\n          return at(t, e);\n        }),\n            s = e.join("/");\n        var i = St[s];\n\n        if (!i) {\n          i = At;\n\n          for (var _t97 = 0; _t97 < e.length; _t97++) {\n            var _s64 = e[_t97];\n            i = pt[_s64](i);\n          }\n\n          St[s] = i;\n        }\n\n        return i;\n      }(t.plugins)), new s(t, e);\n    }\n\n    var St = {};\n    e.parse = function (t, e) {\n      if (!e || "unambiguous" !== e.sourceType) return wt(e, t).parse();\n      e = Object.assign({}, e);\n\n      try {\n        e.sourceType = "module";\n\n        var _s65 = wt(e, t),\n            _i60 = _s65.parse();\n\n        if (_s65.sawUnambiguousESM) return _i60;\n        if (_s65.ambiguousScriptDifferentAst) try {\n          return e.sourceType = "script", wt(e, t).parse();\n        } catch (t) {} else _i60.program.sourceType = "script";\n        return _i60;\n      } catch (s) {\n        try {\n          return e.sourceType = "script", wt(e, t).parse();\n        } catch (t) {}\n\n        throw s;\n      }\n    }, e.parseExpression = function (t, e) {\n      var s = wt(e, t);\n      return s.options.strictMode && (s.state.strict = !0), s.getExpression();\n    }, e.tokTypes = n;\n  });\n\n  s(Kt);\n  Kt.parse, Kt.parseExpression, Kt.tokTypes;\n  var Jt = c.hasPragma;\n\n  function Xt() {\n    var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return {\n      sourceType: "module",\n      allowAwaitOutsideFunction: !0,\n      allowImportExportEverywhere: !0,\n      allowReturnOutsideFunction: !0,\n      allowSuperOutsideMethod: !0,\n      allowUndeclaredExports: !0,\n      errorRecovery: !0,\n      createParenthesizedExpressions: !0,\n      plugins: ["doExpressions", "objectRestSpread", "classProperties", "exportDefaultFrom", "exportNamespaceFrom", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "numericSeparator", "importMeta", "optionalCatchBinding", "optionalChaining", "classPrivateProperties", ["pipelineOperator", {\n        proposal: "minimal"\n      }], "nullishCoalescingOperator", "bigInt", "throwExpressions", "logicalAssignment", "classPrivateMethods", "v8intrinsic", "partialApplication", ["decorators", {\n        decoratorsBeforeExport: !1\n      }]].concat((0, _toConsumableArray2.default)(t))\n    };\n  }\n\n  function Gt(t) {\n    for (var _len7 = arguments.length, s = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      s[_key7 - 1] = arguments[_key7];\n    }\n\n    return function (i, r, a) {\n      var n = Kt;\n      var o;\n\n      try {\n        o = function (t, e) {\n          var s;\n\n          for (var _i61 = 0; _i61 < e.length; _i61++) {\n            try {\n              return t(e[_i61]);\n            } catch (t) {\n              s || (s = t);\n            }\n          }\n\n          throw s;\n        }(function (e) {\n          return n[t](i, e);\n        }, s.map(Xt));\n      } catch (t) {\n        throw e(t.message.replace(/ \\(.*\\)/, ""), {\n          start: {\n            line: t.loc.line,\n            column: t.loc.column + 1\n          }\n        });\n      }\n\n      return delete o.tokens, Wt(o, Object.assign({}, a, {\n        originalText: i\n      }));\n    };\n  }\n\n  var Qt = Gt("parse", ["jsx", "flow"]),\n      Yt = Gt("parse", ["jsx", ["flow", {\n    all: !0,\n    enums: !0\n  }]]),\n      $t = Gt("parse", ["jsx", "typescript"], ["typescript"]),\n      Zt = Gt("parseExpression", ["jsx"]);\n\n  function te(t, s) {\n    switch (t.type) {\n      case "ArrayExpression":\n        return t.elements.forEach(i);\n\n      case "ObjectExpression":\n        return t.properties.forEach(i);\n\n      case "ObjectProperty":\n        if (t.computed) throw r("computed");\n        if (t.shorthand) throw r("shorthand");\n        return [t.key, t.value].forEach(i);\n\n      case "UnaryExpression":\n        switch (t.operator) {\n          case "+":\n          case "-":\n            return i(t.argument);\n\n          default:\n            throw r("operator");\n        }\n\n      case "Identifier":\n        if (s && "ObjectProperty" === s.type && s.key === t) return;\n        throw r();\n\n      case "NullLiteral":\n      case "BooleanLiteral":\n      case "NumericLiteral":\n      case "StringLiteral":\n        return;\n\n      default:\n        throw r();\n    }\n\n    function i(e) {\n      return te(e, t);\n    }\n\n    function r(s) {\n      var i = s ? "".concat(t.type, " with ").concat(s, "=").concat(JSON.stringify(t[s])) : t.type;\n      return e("".concat(i, " is not allowed in JSON."), {\n        start: {\n          line: t.loc.start.line,\n          column: t.loc.start.column + 1\n        }\n      });\n    }\n  }\n\n  var ee = Object.assign({\n    parse: Qt,\n    astFormat: "estree",\n    hasPragma: Jt\n  }, m),\n      se = Object.assign({}, ee, {\n    parse: Yt\n  }),\n      ie = Object.assign({}, ee, {\n    parse: $t\n  }),\n      re = Object.assign({}, ee, {\n    parse: Zt\n  });\n  var ae = {\n    parsers: {\n      babel: ee,\n      "babel-flow": se,\n      "babel-ts": ie,\n      json: Object.assign({}, re, {\n        hasPragma: function hasPragma() {\n          return !0;\n        }\n      }),\n      json5: re,\n      "json-stringify": Object.assign({\n        parse: function parse(t, e, s) {\n          var i = Zt(t, e, s);\n          return i.comments.forEach(te), te(i), i;\n        },\n        astFormat: "estree-json"\n      }, m),\n      __js_expression: re,\n      __vue_expression: re,\n      __vue_event_binding: ee\n    }\n  },\n      ne = ae.parsers;\n  t.default = ae, t.parsers = ne, Object.defineProperty(t, "__esModule", {\n    value: !0\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/prettier/parser-babel.js?')},"./node_modules/prettier/standalone.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _interopRequireDefault2=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _toArray2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/toArray.js"));var _get3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/get.js"));var _toConsumableArray3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js"));var _defineProperty2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/defineProperty.js"));var _slicedToArray2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"));var _inherits2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));var _wrapNativeSuper2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/wrapNativeSuper.js"));var _classCallCheck2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _createClass2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/createClass.js"));var _typeof3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/typeof.js"));function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(hasNativeReflectConstruct){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}(function(global,factory){( false?undefined:(0,_typeof3.default)(exports))===\'object\'&&typeof module!==\'undefined\'?module.exports=factory(): true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):(undefined);})(void 0,function(){\'use strict\';var name="prettier";var version="2.0.4";var description="Prettier is an opinionated code formatter";var bin="./bin/prettier.js";var repository="prettier/prettier";var homepage="https://prettier.io";var author="James Long";var license="MIT";var main="./index.js";var engines={node:">=10.13.0"};var dependencies={"@angular/compiler":"9.0.5","@babel/code-frame":"7.8.0","@babel/parser":"7.9.4","@glimmer/syntax":"0.50.0","@iarna/toml":"2.2.3","@typescript-eslint/typescript-estree":"2.26.0","angular-estree-parser":"1.3.0","angular-html-parser":"1.4.0",camelcase:"5.3.1",chalk:"4.0.0","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cjk-regex":"2.0.0",cosmiconfig:"6.0.0",dashify:"2.0.0",dedent:"0.7.0",diff:"4.0.2",editorconfig:"0.15.3","editorconfig-to-prettier":"0.1.1","escape-string-regexp":"2.0.0",esutils:"2.0.3","fast-glob":"3.2.2","find-parent-dir":"0.3.0","find-project-root":"1.1.1","flow-parser":"0.122.0","get-stream":"5.1.0",globby:"11.0.0",graphql:"15.0.0","html-element-attributes":"2.2.1","html-styles":"1.0.0","html-tag-names":"1.1.5",ignore:"4.0.6","jest-docblock":"25.2.6","json-stable-stringify":"1.0.1",leven:"3.1.0","lines-and-columns":"1.1.6","linguist-languages":"7.9.0",lodash:"4.17.15",mem:"6.0.1",minimatch:"3.0.4",minimist:"1.2.5","n-readlines":"1.0.0","please-upgrade-node":"3.2.0","postcss-less":"3.1.4","postcss-media-query-parser":"0.2.3","postcss-scss":"2.0.0","postcss-selector-parser":"2.2.3","postcss-values-parser":"2.0.1","regexp-util":"1.2.2","remark-math":"1.0.6","remark-parse":"5.0.0",semver:"7.1.3",srcset:"2.0.1","string-width":"4.2.0",typescript:"3.8.3","unicode-regex":"3.0.0",unified:"9.0.0",vnopts:"1.0.2","yaml-unist-parser":"1.1.1"};var devDependencies={"@babel/core":"7.9.0","@babel/preset-env":"7.9.0","@rollup/plugin-alias":"3.0.1","@rollup/plugin-commonjs":"11.0.2","@rollup/plugin-json":"4.0.2","@rollup/plugin-node-resolve":"7.1.1","@rollup/plugin-replace":"2.3.1","babel-loader":"8.1.0",benchmark:"2.1.4","builtin-modules":"3.1.0",codecov:"3.6.5","cross-env":"7.0.2",cspell:"4.0.55",eslint:"6.8.0","eslint-config-prettier":"6.10.1","eslint-formatter-friendly":"7.0.0","eslint-plugin-import":"2.20.2","eslint-plugin-prettier":"3.1.2","eslint-plugin-react":"7.19.0","eslint-plugin-unicorn":"18.0.1",execa:"4.0.0",jest:"25.2.7","jest-snapshot-serializer-ansi":"1.0.0","jest-snapshot-serializer-raw":"1.1.0","jest-watch-typeahead":"0.5.0",prettier:"2.0.3",rimraf:"3.0.2",rollup:"2.3.2","rollup-plugin-babel":"4.4.0","rollup-plugin-node-globals":"1.4.0","rollup-plugin-terser":"5.3.0",shelljs:"0.8.3","snapshot-diff":"0.7.0","strip-ansi":"6.0.0","synchronous-promise":"2.0.10",tempy:"0.5.0","terser-webpack-plugin":"2.3.5",webpack:"4.42.1"};var scripts={prepublishOnly:"echo \\"Error: must publish from dist/\\" && exit 1","prepare-release":"yarn && yarn build && yarn test:dist",test:"jest","test:dist":"node ./scripts/test-dist.js","test:integration":"jest tests_integration","perf:repeat":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:repeat-inspect":"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:benchmark":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","lint:typecheck":"tsc","lint:eslint":"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly","lint:changelog":"node ./scripts/lint-changelog.js","lint:prettier":"prettier \\"**/*.{md,json,yml,html,css}\\" --check","lint:dist":"eslint --no-eslintrc --no-ignore --env=es6,browser --parser-options=ecmaVersion:2016 \\"dist/!(bin-prettier|index|third-party).js\\"","lint:spellcheck":"cspell {bin,scripts,src,website}/**/*.js {docs,website/blog,changelog_unreleased}/**/*.md","lint:deps":"node ./scripts/check-deps.js",build:"node --max-old-space-size=3072 ./scripts/build/build.js","build-docs":"node ./scripts/build-docs.js"};var _package={name:name,version:version,description:description,bin:bin,repository:repository,homepage:homepage,author:author,license:license,main:main,engines:engines,dependencies:dependencies,devDependencies:devDependencies,scripts:scripts};var _package$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name,version:version,description:description,bin:bin,repository:repository,homepage:homepage,author:author,license:license,main:main,engines:engines,dependencies:dependencies,devDependencies:devDependencies,scripts:scripts,\'default\':_package});function Diff(){}Diff.prototype={diff:function diff(oldString,newString){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var callback=options.callback;if(typeof options===\'function\'){callback=options;options={};}this.options=options;var self=this;function done(value){if(callback){setTimeout(function(){callback(undefined,value);},0);return true;}else{return value;}}// Allow subclasses to massage the input prior to running\noldString=this.castInput(oldString);newString=this.castInput(newString);oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length;var editLength=1;var maxEditLength=newLen+oldLen;var bestPath=[{newPos:-1,components:[]}];// Seed editLength = 0, i.e. the content starts with the same values\nvar oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen){// Identity per the equality and tokenizer\nreturn done([{value:this.join(newString),count:newString.length}]);}// Main worker method. checks all permutations of a given edit length for acceptance.\nfunction execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0;var addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;if(addPath){// No one else is going to attempt to use this value, clear it\nbestPath[diagonalPath-1]=undefined;}var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){// If this path is a terminal then prune\nbestPath[diagonalPath]=undefined;continue;}// Select the diagonal that we want to branch from. We select the prior\n// path whose position in the new string is the farthest from the origin\n// and does not pass the bounds of the diff graph\nif(!canAdd||canRemove&&addPath.newPos<removePath.newPos){basePath=clonePath(removePath);self.pushComponent(basePath.components,undefined,true);}else{basePath=addPath;// No need to clone, we\'ve pulled it from the list\nbasePath.newPos++;self.pushComponent(basePath.components,true,undefined);}_oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);// If we have hit the end of both strings, then we are done\nif(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen){return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken));}else{// Otherwise track this path as a potential candidate and continue.\nbestPath[diagonalPath]=basePath;}}editLength++;}// Performs the length of edit iteration. Is a bit fugly as this has to support the\n// sync and async mode which is never fun. Loops over execEditLength until a value\n// is produced.\nif(callback){(function exec(){setTimeout(function(){// This should not happen, but we want to be safe.\n/* istanbul ignore next */if(editLength>maxEditLength){return callback();}if(!execEditLength()){exec();}},0);})();}else{while(editLength<=maxEditLength){var ret=execEditLength();if(ret){return ret;}}}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];if(last&&last.added===added&&last.removed===removed){// We need to clone here as the component clone operation is just\n// as shallow array clone\ncomponents[components.length-1]={count:last.count+1,added:added,removed:removed};}else{components.push({count:1,added:added,removed:removed});}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;while(newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1])){newPos++;oldPos++;commonCount++;}if(commonCount){basePath.components.push({count:commonCount});}basePath.newPos=newPos;return oldPos;},equals:function equals(left,right){if(this.options.comparator){return this.options.comparator(left,right);}else{return left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase();}},removeEmpty:function removeEmpty(array){var ret=[];for(var i=0;i<array.length;i++){if(array[i]){ret.push(array[i]);}}return ret;},castInput:function castInput(value){return value;},tokenize:function tokenize(value){return value.split(\'\');},join:function join(chars){return chars.join(\'\');}};function buildValues(diff,components,newString,oldString,useLongestToken){var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;for(;componentPos<componentLen;componentPos++){var component=components[componentPos];if(!component.removed){if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value;});component.value=diff.join(value);}else{component.value=diff.join(newString.slice(newPos,newPos+component.count));}newPos+=component.count;// Common case\nif(!component.added){oldPos+=component.count;}}else{component.value=diff.join(oldString.slice(oldPos,oldPos+component.count));oldPos+=component.count;// Reverse add and remove so removes are output first to match common convention\n// The diffing algorithm is tied to add then remove output and this is the simplest\n// route to get the desired output with minimal overhead.\nif(componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos];components[componentPos]=tmp;}}}// Special case handle for when one terminal is ignored (i.e. whitespace).\n// For this case we merge the terminal into the prior string and drop the change.\n// This is only available for string mode.\nvar lastComponent=components[componentLen-1];if(componentLen>1&&typeof lastComponent.value===\'string\'&&(lastComponent.added||lastComponent.removed)&&diff.equals(\'\',lastComponent.value)){components[componentLen-2].value+=lastComponent.value;components.pop();}return components;}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)};}var characterDiff=new Diff();function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options);}function generateOptions(options,defaults){if(typeof options===\'function\'){defaults.callback=options;}else if(options){for(var name in options){/* istanbul ignore else */if(options.hasOwnProperty(name)){defaults[name]=options[name];}}}return defaults;}//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars=/^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;var reWhitespace=/\\S/;var wordDiff=new Diff();wordDiff.equals=function(left,right){if(this.options.ignoreCase){left=left.toLowerCase();right=right.toLowerCase();}return left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right);};wordDiff.tokenize=function(value){var tokens=value.split(/(\\s+|[()[\\]{}\'"]|\\b)/);// Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\nfor(var i=0;i<tokens.length-1;i++){// If we have an empty string in the next field and we have only word chars before and after, merge\nif(!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])){tokens[i]+=tokens[i+2];tokens.splice(i+1,2);i--;}}return tokens;};function diffWords(oldStr,newStr,options){options=generateOptions(options,{ignoreWhitespace:true});return wordDiff.diff(oldStr,newStr,options);}function diffWordsWithSpace(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options);}var lineDiff=new Diff();lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\\n|\\r\\n)/);// Ignore the final empty token that occurs if the string ends with a new line\nif(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop();}// Merge the content and line separators into single tokens\nfor(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line;}else{if(this.options.ignoreWhitespace){line=line.trim();}retLines.push(line);}}return retLines;};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback);}function diffTrimmedLines(oldStr,newStr,callback){var options=generateOptions(callback,{ignoreWhitespace:true});return lineDiff.diff(oldStr,newStr,options);}var sentenceDiff=new Diff();sentenceDiff.tokenize=function(value){return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);};function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback);}var cssDiff=new Diff();cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\\s+)/);};function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback);}function _typeof(obj){if(typeof Symbol==="function"&&(0,_typeof3.default)(Symbol.iterator)==="symbol"){_typeof=function _typeof(obj){return(0,_typeof3.default)(obj);};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":(0,_typeof3.default)(obj);};}return _typeof(obj);}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var objectPrototypeToString=Object.prototype.toString;var jsonDiff=new Diff();// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn\'t. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken=true;jsonDiff.tokenize=lineDiff.tokenize;jsonDiff.castInput=function(value){var _this$options=this.options,undefinedReplacement=_this$options.undefinedReplacement,_this$options$stringi=_this$options.stringifyReplacer,stringifyReplacer=_this$options$stringi===void 0?function(k,v){return typeof v===\'undefined\'?undefinedReplacement:v;}:_this$options$stringi;return typeof value===\'string\'?value:JSON.stringify(canonicalize(value,null,null,stringifyReplacer),stringifyReplacer,\'  \');};jsonDiff.equals=function(left,right){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\\r\\n])/g,\'$1\'),right.replace(/,([\\r\\n])/g,\'$1\'));};function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options);}// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the "stack" of items being processed. Accepts an optional replacer\nfunction canonicalize(obj,stack,replacementStack,replacer,key){stack=stack||[];replacementStack=replacementStack||[];if(replacer){obj=replacer(key,obj);}var i;for(i=0;i<stack.length;i+=1){if(stack[i]===obj){return replacementStack[i];}}var canonicalizedObj;if(\'[object Array]\'===objectPrototypeToString.call(obj)){stack.push(obj);canonicalizedObj=new Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1){canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);}stack.pop();replacementStack.pop();return canonicalizedObj;}if(obj&&obj.toJSON){obj=obj.toJSON();}if(_typeof(obj)===\'object\'&&obj!==null){stack.push(obj);canonicalizedObj={};replacementStack.push(canonicalizedObj);var sortedKeys=[],_key;for(_key in obj){/* istanbul ignore else */if(obj.hasOwnProperty(_key)){sortedKeys.push(_key);}}sortedKeys.sort();for(i=0;i<sortedKeys.length;i+=1){_key=sortedKeys[i];canonicalizedObj[_key]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);}stack.pop();replacementStack.pop();}else{canonicalizedObj=obj;}return canonicalizedObj;}var arrayDiff=new Diff();arrayDiff.tokenize=function(value){return value.slice();};arrayDiff.join=arrayDiff.removeEmpty=function(value){return value;};function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback);}function parsePatch(uniDiff){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var diffstr=uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};list.push(index);// Parse diff metadata\nwhile(i<diffstr.length){var line=diffstr[i];// File header found, end parsing diff metadata\nif(/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)){break;}// Diff index\nvar header=/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);if(header){index.index=header[1];}i++;}// Parse file headers if they are defined. Unified diff requires them, but\n// there\'s no technical issues to have an isolated hunk without file header\nparseFileHeader(index);parseFileHeader(index);// Parse hunks\nindex.hunks=[];while(i<diffstr.length){var _line=diffstr[i];if(/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)){break;}else if(/^@@/.test(_line)){index.hunks.push(parseHunk());}else if(_line&&options.strict){// Ignore unexpected content unless in strict mode\nthrow new Error(\'Unknown line \'+(i+1)+\' \'+JSON.stringify(_line));}else{i++;}}}// Parses the --- and +++ headers, if none are found, no lines\n// are consumed.\nfunction parseFileHeader(index){var fileHeader=/^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);if(fileHeader){var keyPrefix=fileHeader[1]===\'---\'?\'old\':\'new\';var data=fileHeader[2].split(\'\\t\',2);var fileName=data[0].replace(/\\\\\\\\/g,\'\\\\\');if(/^".*"$/.test(fileName)){fileName=fileName.substr(1,fileName.length-2);}index[keyPrefix+\'FileName\']=fileName;index[keyPrefix+\'Header\']=(data[1]||\'\').trim();i++;}}// Parses a hunk\n// This assumes that we are at the start of a hunk.\nfunction parseHunk(){var chunkHeaderIndex=i,chunkHeaderLine=diffstr[i++],chunkHeader=chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);var hunk={oldStart:+chunkHeader[1],oldLines:+chunkHeader[2]||1,newStart:+chunkHeader[3],newLines:+chunkHeader[4]||1,lines:[],linedelimiters:[]};var addCount=0,removeCount=0;for(;i<diffstr.length;i++){// Lines starting with \'---\' could be mistaken for the "remove line" operation\n// But they could be the header for the next file. Therefore prune such cases out.\nif(diffstr[i].indexOf(\'--- \')===0&&i+2<diffstr.length&&diffstr[i+1].indexOf(\'+++ \')===0&&diffstr[i+2].indexOf(\'@@\')===0){break;}var operation=diffstr[i].length==0&&i!=diffstr.length-1?\' \':diffstr[i][0];if(operation===\'+\'||operation===\'-\'||operation===\' \'||operation===\'\\\\\'){hunk.lines.push(diffstr[i]);hunk.linedelimiters.push(delimiters[i]||\'\\n\');if(operation===\'+\'){addCount++;}else if(operation===\'-\'){removeCount++;}else if(operation===\' \'){addCount++;removeCount++;}}else{break;}}// Handle the empty block count case\nif(!addCount&&hunk.newLines===1){hunk.newLines=0;}if(!removeCount&&hunk.oldLines===1){hunk.oldLines=0;}// Perform optional sanity checking\nif(options.strict){if(addCount!==hunk.newLines){throw new Error(\'Added line count did not match for hunk at line \'+(chunkHeaderIndex+1));}if(removeCount!==hunk.oldLines){throw new Error(\'Removed line count did not match for hunk at line \'+(chunkHeaderIndex+1));}}return hunk;}while(i<diffstr.length){parseIndex();}return list;}// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator(start,minLine,maxLine){var wantForward=true,backwardExhausted=false,forwardExhausted=false,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted){localOffset++;}else{wantForward=false;}// Check if trying to fit beyond text length, and if not, check it fits\n// after offset location (or desired location on first iteration)\nif(start+localOffset<=maxLine){return localOffset;}forwardExhausted=true;}if(!backwardExhausted){if(!forwardExhausted){wantForward=true;}// Check if trying to fit before text beginning, and if not, check it fits\n// before offset location\nif(minLine<=start-localOffset){return-localOffset++;}backwardExhausted=true;return iterator();}// We tried to fit hunk before text beginning and beyond text length, then\n// hunk can\'t fit on the text. Return undefined\n};}function applyPatch(source,uniDiff){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof uniDiff===\'string\'){uniDiff=parsePatch(uniDiff);}if(Array.isArray(uniDiff)){if(uniDiff.length>1){throw new Error(\'applyPatch only works with a single input.\');}uniDiff=uniDiff[0];}// Apply the diff to the input\nvar lines=source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent;},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0,removeEOFNL,addEOFNL;/**\n     * Checks if the hunk exactly fits on the provided location\n     */function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line.length>0?line[0]:\' \',content=line.length>0?line.substr(1):line;if(operation===\' \'||operation===\'-\'){// Context sanity check\nif(!compareLine(toPos+1,lines[toPos],operation,content)){errorCount++;if(errorCount>fuzzFactor){return false;}}toPos++;}}return true;}// Search best fit offsets for each hunk based on the previous ones\nfor(var i=0;i<hunks.length;i++){var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1;var iterator=distanceIterator(toPos,minLine,maxLine);for(;localOffset!==undefined;localOffset=iterator()){if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break;}}if(localOffset===undefined){return false;}// Set lower text limit to end of the current hunk, so next ones don\'t try\n// to fit over already patched text\nminLine=hunk.offset+hunk.oldStart+hunk.oldLines;}// Apply patch hunks\nvar diffOffset=0;for(var _i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.oldStart+_hunk.offset+diffOffset-1;diffOffset+=_hunk.newLines-_hunk.oldLines;if(_toPos<0){// Creating a new file\n_toPos=0;}for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line.length>0?line[0]:\' \',content=line.length>0?line.substr(1):line,delimiter=_hunk.linedelimiters[j];if(operation===\' \'){_toPos++;}else if(operation===\'-\'){lines.splice(_toPos,1);delimiters.splice(_toPos,1);/* istanbul ignore else */}else if(operation===\'+\'){lines.splice(_toPos,0,content);delimiters.splice(_toPos,0,delimiter);_toPos++;}else if(operation===\'\\\\\'){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;if(previousOperation===\'+\'){removeEOFNL=true;}else if(previousOperation===\'-\'){addEOFNL=true;}}}}// Handle EOFNL insertion/removal\nif(removeEOFNL){while(!lines[lines.length-1]){lines.pop();delimiters.pop();}}else if(addEOFNL){lines.push(\'\');delimiters.push(\'\\n\');}for(var _k=0;_k<lines.length-1;_k++){lines[_k]=lines[_k]+delimiters[_k];}return lines.join(\'\');}// Wrapper that supports multiple file patches via callbacks.\nfunction applyPatches(uniDiff,options){if(typeof uniDiff===\'string\'){uniDiff=parsePatch(uniDiff);}var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index){return options.complete();}options.loadFile(index,function(err,data){if(err){return options.complete(err);}var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err){return options.complete(err);}processIndex();});});}processIndex();}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={};}if(typeof options.context===\'undefined\'){options.context=4;}var diff=diffLines(oldStr,newStr,options);diff.push({value:\'\',lines:[]});// Append an empty value to make cleanup easier\nfunction contextLines(lines){return lines.map(function(entry){return\' \'+entry;});}var hunks=[];var oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1;var _loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\\n$/,\'\').split(\'\\n\');current.lines=lines;if(current.added||current.removed){var _curRange;// If we have previous context, start with that\nif(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=options.context>0?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length;}}// Output our changes\n(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?\'+\':\'-\')+entry;})));// Track the updated file position\nif(current.added){newLine+=lines.length;}else{oldLine+=lines.length;}}else{// Identical context lines. Track line changes\nif(oldRangeStart){// Close out any changes that have been output (or join overlapping)\nif(lines.length<=options.context*2&&i<diff.length-2){var _curRange2;// Overlapping\n(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)));}else{var _curRange3;// end the range and output\nvar contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){// EOF is inside this hunk\nvar oldEOFNewline=/\\n$/.test(oldStr);var newEOFNewline=/\\n$/.test(newStr);var noNlBeforeAdds=lines.length==0&&curRange.length>hunk.oldLines;if(!oldEOFNewline&&noNlBeforeAdds){// special case: old has no eol and no trailing context; no-nl can end up before adds\ncurRange.splice(hunk.oldLines,0,\'\\\\ No newline at end of file\');}if(!oldEOFNewline&&!noNlBeforeAdds||!newEOFNewline){curRange.push(\'\\\\ No newline at end of file\');}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[];}}oldLine+=lines.length;newLine+=lines.length;}};for(var i=0;i<diff.length;i++){_loop(i);}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks};}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){var diff=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options);var ret=[];if(oldFileName==newFileName){ret.push(\'Index: \'+oldFileName);}ret.push(\'===================================================================\');ret.push(\'--- \'+diff.oldFileName+(typeof diff.oldHeader===\'undefined\'?\'\':\'\\t\'+diff.oldHeader));ret.push(\'+++ \'+diff.newFileName+(typeof diff.newHeader===\'undefined\'?\'\':\'\\t\'+diff.newHeader));for(var i=0;i<diff.hunks.length;i++){var hunk=diff.hunks[i];ret.push(\'@@ -\'+hunk.oldStart+\',\'+hunk.oldLines+\' +\'+hunk.newStart+\',\'+hunk.newLines+\' @@\');ret.push.apply(ret,hunk.lines);}return ret.join(\'\\n\')+\'\\n\';}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options);}function arrayEqual(a,b){if(a.length!==b.length){return false;}return arrayStartsWith(a,b);}function arrayStartsWith(array,start){if(start.length>array.length){return false;}for(var i=0;i<start.length;i++){if(start[i]!==array[i]){return false;}}return true;}function calcLineCount(hunk){var _calcOldNewLineCount=calcOldNewLineCount(hunk.lines),oldLines=_calcOldNewLineCount.oldLines,newLines=_calcOldNewLineCount.newLines;if(oldLines!==undefined){hunk.oldLines=oldLines;}else{delete hunk.oldLines;}if(newLines!==undefined){hunk.newLines=newLines;}else{delete hunk.newLines;}}function merge(mine,theirs,base){mine=loadPatch(mine,base);theirs=loadPatch(theirs,base);var ret={};// For index we just let it pass through as it doesn\'t have any necessary meaning.\n// Leaving sanity checks on this to the API consumer that may know more about the\n// meaning in their own context.\nif(mine.index||theirs.index){ret.index=mine.index||theirs.index;}if(mine.newFileName||theirs.newFileName){if(!fileNameChanged(mine)){// No header or no change in ours, use theirs (and ours if theirs does not exist)\nret.oldFileName=theirs.oldFileName||mine.oldFileName;ret.newFileName=theirs.newFileName||mine.newFileName;ret.oldHeader=theirs.oldHeader||mine.oldHeader;ret.newHeader=theirs.newHeader||mine.newHeader;}else if(!fileNameChanged(theirs)){// No header or no change in theirs, use ours\nret.oldFileName=mine.oldFileName;ret.newFileName=mine.newFileName;ret.oldHeader=mine.oldHeader;ret.newHeader=mine.newHeader;}else{// Both changed... figure it out\nret.oldFileName=selectField(ret,mine.oldFileName,theirs.oldFileName);ret.newFileName=selectField(ret,mine.newFileName,theirs.newFileName);ret.oldHeader=selectField(ret,mine.oldHeader,theirs.oldHeader);ret.newHeader=selectField(ret,mine.newHeader,theirs.newHeader);}}ret.hunks=[];var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;while(mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length){var mineCurrent=mine.hunks[mineIndex]||{oldStart:Infinity},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:Infinity};if(hunkBefore(mineCurrent,theirsCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(mineCurrent,mineOffset));mineIndex++;theirsOffset+=mineCurrent.newLines-mineCurrent.oldLines;}else if(hunkBefore(theirsCurrent,mineCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(theirsCurrent,theirsOffset));theirsIndex++;mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines;}else{// Overlap, merge as best we can\nvar mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]};mergeLines(mergedHunk,mineCurrent.oldStart,mineCurrent.lines,theirsCurrent.oldStart,theirsCurrent.lines);theirsIndex++;mineIndex++;ret.hunks.push(mergedHunk);}}return ret;}function loadPatch(param,base){if(typeof param===\'string\'){if(/^@@/m.test(param)||/^Index:/m.test(param)){return parsePatch(param)[0];}if(!base){throw new Error(\'Must provide a base reference or pass in a patch\');}return structuredPatch(undefined,undefined,base,param);}return param;}function fileNameChanged(patch){return patch.newFileName&&patch.newFileName!==patch.oldFileName;}function selectField(index,mine,theirs){if(mine===theirs){return mine;}else{index.conflict=true;return{mine:mine,theirs:theirs};}}function hunkBefore(test,check){return test.oldStart<check.oldStart&&test.oldStart+test.oldLines<check.oldStart;}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines};}function mergeLines(hunk,mineOffset,mineLines,theirOffset,theirLines){// This will generally result in a conflicted hunk, but there are cases where the context\n// is the only overlap where we can successfully merge the content here.\nvar mine={offset:mineOffset,lines:mineLines,index:0},their={offset:theirOffset,lines:theirLines,index:0};// Handle any leading content\ninsertLeading(hunk,mine,their);insertLeading(hunk,their,mine);// Now in the overlap content. Scan through and select the best changes from each.\nwhile(mine.index<mine.lines.length&&their.index<their.lines.length){var mineCurrent=mine.lines[mine.index],theirCurrent=their.lines[their.index];if((mineCurrent[0]===\'-\'||mineCurrent[0]===\'+\')&&(theirCurrent[0]===\'-\'||theirCurrent[0]===\'+\')){// Both modified ...\nmutualChange(hunk,mine,their);}else if(mineCurrent[0]===\'+\'&&theirCurrent[0]===\' \'){var _hunk$lines;// Mine inserted\n(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mine)));}else if(theirCurrent[0]===\'+\'&&mineCurrent[0]===\' \'){var _hunk$lines2;// Theirs inserted\n(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(their)));}else if(mineCurrent[0]===\'-\'&&theirCurrent[0]===\' \'){// Mine removed or edited\nremoval(hunk,mine,their);}else if(theirCurrent[0]===\'-\'&&mineCurrent[0]===\' \'){// Their removed or edited\nremoval(hunk,their,mine,true);}else if(mineCurrent===theirCurrent){// Context identity\nhunk.lines.push(mineCurrent);mine.index++;their.index++;}else{// Context mismatch\nconflict(hunk,collectChange(mine),collectChange(their));}}// Now push anything that may be remaining\ninsertTrailing(hunk,mine);insertTrailing(hunk,their);calcLineCount(hunk);}function mutualChange(hunk,mine,their){var myChanges=collectChange(mine),theirChanges=collectChange(their);if(allRemoves(myChanges)&&allRemoves(theirChanges)){// Special case for remove changes that are supersets of one another\nif(arrayStartsWith(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){var _hunk$lines3;(_hunk$lines3=hunk.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));return;}else if(arrayStartsWith(theirChanges,myChanges)&&skipRemoveSuperset(mine,theirChanges,theirChanges.length-myChanges.length)){var _hunk$lines4;(_hunk$lines4=hunk.lines).push.apply(_hunk$lines4,_toConsumableArray(theirChanges));return;}}else if(arrayEqual(myChanges,theirChanges)){var _hunk$lines5;(_hunk$lines5=hunk.lines).push.apply(_hunk$lines5,_toConsumableArray(myChanges));return;}conflict(hunk,myChanges,theirChanges);}function removal(hunk,mine,their,swap){var myChanges=collectChange(mine),theirChanges=collectContext(their,myChanges);if(theirChanges.merged){var _hunk$lines6;(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(theirChanges.merged));}else{conflict(hunk,swap?theirChanges:myChanges,swap?myChanges:theirChanges);}}function conflict(hunk,mine,their){hunk.conflict=true;hunk.lines.push({conflict:true,mine:mine,theirs:their});}function insertLeading(hunk,insert,their){while(insert.offset<their.offset&&insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);insert.offset++;}}function insertTrailing(hunk,insert){while(insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);}}function collectChange(state){var ret=[],operation=state.lines[state.index][0];while(state.index<state.lines.length){var line=state.lines[state.index];// Group additions that are immediately after subtractions and treat them as one "atomic" modify change.\nif(operation===\'-\'&&line[0]===\'+\'){operation=\'+\';}if(operation===line[0]){ret.push(line);state.index++;}else{break;}}return ret;}function collectContext(state,matchChanges){var changes=[],merged=[],matchIndex=0,contextChanges=false,conflicted=false;while(matchIndex<matchChanges.length&&state.index<state.lines.length){var change=state.lines[state.index],match=matchChanges[matchIndex];// Once we\'ve hit our add, then we are done\nif(match[0]===\'+\'){break;}contextChanges=contextChanges||change[0]!==\' \';merged.push(match);matchIndex++;// Consume any additions in the other block as a conflict to attempt\n// to pull in the remaining context after this\nif(change[0]===\'+\'){conflicted=true;while(change[0]===\'+\'){changes.push(change);change=state.lines[++state.index];}}if(match.substr(1)===change.substr(1)){changes.push(change);state.index++;}else{conflicted=true;}}if((matchChanges[matchIndex]||\'\')[0]===\'+\'&&contextChanges){conflicted=true;}if(conflicted){return changes;}while(matchIndex<matchChanges.length){merged.push(matchChanges[matchIndex++]);}return{merged:merged,changes:changes};}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&change[0]===\'-\';},true);}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==\' \'+changeContent){return false;}}state.index+=delta;return true;}function calcOldNewLineCount(lines){var oldLines=0;var newLines=0;lines.forEach(function(line){if(typeof line!==\'string\'){var myCount=calcOldNewLineCount(line.mine);var theirCount=calcOldNewLineCount(line.theirs);if(oldLines!==undefined){if(myCount.oldLines===theirCount.oldLines){oldLines+=myCount.oldLines;}else{oldLines=undefined;}}if(newLines!==undefined){if(myCount.newLines===theirCount.newLines){newLines+=myCount.newLines;}else{newLines=undefined;}}}else{if(newLines!==undefined&&(line[0]===\'+\'||line[0]===\' \')){newLines++;}if(oldLines!==undefined&&(line[0]===\'-\'||line[0]===\' \')){oldLines++;}}});return{oldLines:oldLines,newLines:newLines};}// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes){var ret=[],change,operation;for(var i=0;i<changes.length;i++){change=changes[i];if(change.added){operation=1;}else if(change.removed){operation=-1;}else{operation=0;}ret.push([operation,change.value]);}return ret;}function convertChangesToXML(changes){var ret=[];for(var i=0;i<changes.length;i++){var change=changes[i];if(change.added){ret.push(\'<ins>\');}else if(change.removed){ret.push(\'<del>\');}ret.push(escapeHTML(change.value));if(change.added){ret.push(\'</ins>\');}else if(change.removed){ret.push(\'</del>\');}}return ret.join(\'\');}function escapeHTML(s){var n=s;n=n.replace(/&/g,\'&amp;\');n=n.replace(/</g,\'&lt;\');n=n.replace(/>/g,\'&gt;\');n=n.replace(/"/g,\'&quot;\');return n;}var index_es6=/*#__PURE__*/Object.freeze({__proto__:null,Diff:Diff,diffChars:diffChars,diffWords:diffWords,diffWordsWithSpace:diffWordsWithSpace,diffLines:diffLines,diffTrimmedLines:diffTrimmedLines,diffSentences:diffSentences,diffCss:diffCss,diffJson:diffJson,diffArrays:diffArrays,structuredPatch:structuredPatch,createTwoFilesPatch:createTwoFilesPatch,createPatch:createPatch,applyPatch:applyPatch,applyPatches:applyPatches,parsePatch:parsePatch,merge:merge,convertChangesToDMP:convertChangesToDMP,convertChangesToXML:convertChangesToXML,canonicalize:canonicalize});var _shim_fs={};var _shim_fs$1=/*#__PURE__*/Object.freeze({__proto__:null,\'default\':_shim_fs});var sep=/[\\\\/]/;function extname(path){var filename=basename(path);var dotIndex=filename.lastIndexOf(".");if(dotIndex===-1)return"";return filename.slice(dotIndex);}function basename(path){return path.split(sep).pop();}function isAbsolute(){return true;}var path=/*#__PURE__*/Object.freeze({__proto__:null,extname:extname,basename:basename,isAbsolute:isAbsolute});var global$1=typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!==\'undefined\'?Uint8Array:Array;var inited=false;function init(){inited=true;var code=\'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}revLookup[\'-\'.charCodeAt(0)]=62;revLookup[\'_\'.charCodeAt(0)]=63;}function toByteArray(b64){if(!inited){init();}var i,j,l,tmp,placeHolders,arr;var len=b64.length;if(len%4>0){throw new Error(\'Invalid string. Length must be a multiple of 4\');}// the number of equal signs (place holders)\n// if there are two placeholders, than the two characters before it\n// represent one byte\n// if there is only one, then the three characters before it represent 2 bytes\n// this is just a cheap hack to not do indexOf twice\nplaceHolders=b64[len-2]===\'=\'?2:b64[len-1]===\'=\'?1:0;// base64 is 4/3 + up to two characters of the original data\narr=new Arr(len*3/4-placeHolders);// if there are placeholders, only get up to the last complete 4 chars\nl=placeHolders>0?len-4:len;var L=0;for(i=0,j=0;i<l;i+=4,j+=3){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&0xFF;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&0xFF;}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2];output.push(tripletToBase64(tmp));}return output.join(\'\');}function fromByteArray(uint8){if(!inited){init();}var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar output=\'\';var parts=[];var maxChunkLength=16383;// must be multiple of 3\n// go through the array every three bytes, we\'ll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&0x3F];output+=\'==\';}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&0x3F];output+=lookup[tmp<<2&0x3F];output+=\'=\';}parts.push(output);return parts.join(\'\');}function read(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);}function write(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;}var toString={}.toString;var isArray=Array.isArray||function(arr){return toString.call(arr)==\'[object Array]\';};var INSPECT_MAX_BYTES=50;/**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Use Object implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * Due to various browser bugs, sometimes the Object implementation will be used even\n   * when the browser supports typed arrays.\n   *\n   * Note:\n   *\n   *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n   *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n   *\n   *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n   *\n   *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n   *     incorrect length in some situations.\n\n   * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n   * get the Object implementation, which is slower but behaves correctly.\n   */Buffer.TYPED_ARRAY_SUPPORT=global$1.TYPED_ARRAY_SUPPORT!==undefined?global$1.TYPED_ARRAY_SUPPORT:true;function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?0x7fffffff:0x3fffffff;}function createBuffer(that,length){if(kMaxLength()<length){throw new RangeError(\'Invalid typed array length\');}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=new Uint8Array(length);that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nif(that===null){that=new Buffer(length);}that.length=length;}return that;}/**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */function Buffer(arg,encodingOrOffset,length){if(!Buffer.TYPED_ARRAY_SUPPORT&&!(this instanceof Buffer)){return new Buffer(arg,encodingOrOffset,length);}// Common case.\nif(typeof arg===\'number\'){if(typeof encodingOrOffset===\'string\'){throw new Error(\'If encoding is specified then the first argument must be a string\');}return allocUnsafe(this,arg);}return from(this,arg,encodingOrOffset,length);}Buffer.poolSize=8192;// not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment=function(arr){arr.__proto__=Buffer.prototype;return arr;};function from(that,value,encodingOrOffset,length){if(typeof value===\'number\'){throw new TypeError(\'"value" argument must not be a number\');}if(typeof ArrayBuffer!==\'undefined\'&&value instanceof ArrayBuffer){return fromArrayBuffer(that,value,encodingOrOffset,length);}if(typeof value===\'string\'){return fromString(that,value,encodingOrOffset);}return fromObject(that,value);}/**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length);};if(Buffer.TYPED_ARRAY_SUPPORT){Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;}function assertSize(size){if(typeof size!==\'number\'){throw new TypeError(\'"size" argument must be a number\');}else if(size<0){throw new RangeError(\'"size" argument must not be negative\');}}function alloc(that,size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(that,size);}if(fill!==undefined){// Only pay attention to encoding if it\'s a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding===\'string\'?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill);}return createBuffer(that,size);}/**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/Buffer.alloc=function(size,fill,encoding){return alloc(null,size,fill,encoding);};function allocUnsafe(that,size){assertSize(size);that=createBuffer(that,size<0?0:checked(size)|0);if(!Buffer.TYPED_ARRAY_SUPPORT){for(var i=0;i<size;++i){that[i]=0;}}return that;}/**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */Buffer.allocUnsafe=function(size){return allocUnsafe(null,size);};/**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size);};function fromString(that,string,encoding){if(typeof encoding!==\'string\'||encoding===\'\'){encoding=\'utf8\';}if(!Buffer.isEncoding(encoding)){throw new TypeError(\'"encoding" must be a valid string encoding\');}var length=byteLength(string,encoding)|0;that=createBuffer(that,length);var actual=that.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// \'abxxcd\' will be treated as \'ab\')\nthat=that.slice(0,actual);}return that;}function fromArrayLike(that,array){var length=array.length<0?0:checked(array.length)|0;that=createBuffer(that,length);for(var i=0;i<length;i+=1){that[i]=array[i]&255;}return that;}function fromArrayBuffer(that,array,byteOffset,length){array.byteLength;// this throws if `array` is not a valid ArrayBuffer\nif(byteOffset<0||array.byteLength<byteOffset){throw new RangeError(\'\\\'offset\\\' is out of bounds\');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError(\'\\\'length\\\' is out of bounds\');}if(byteOffset===undefined&&length===undefined){array=new Uint8Array(array);}else if(length===undefined){array=new Uint8Array(array,byteOffset);}else{array=new Uint8Array(array,byteOffset,length);}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=array;that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nthat=fromArrayLike(that,array);}return that;}function fromObject(that,obj){if(internalIsBuffer(obj)){var len=checked(obj.length)|0;that=createBuffer(that,len);if(that.length===0){return that;}obj.copy(that,0,0,len);return that;}if(obj){if(typeof ArrayBuffer!==\'undefined\'&&obj.buffer instanceof ArrayBuffer||\'length\'in obj){if(typeof obj.length!==\'number\'||isnan(obj.length)){return createBuffer(that,0);}return fromArrayLike(that,obj);}if(obj.type===\'Buffer\'&&isArray(obj.data)){return fromArrayLike(that,obj.data);}}throw new TypeError(\'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\');}function checked(length){// Note: cannot use `length < kMaxLength()` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=kMaxLength()){throw new RangeError(\'Attempt to allocate Buffer larger than maximum \'+\'size: 0x\'+kMaxLength().toString(16)+\' bytes\');}return length|0;}Buffer.isBuffer=isBuffer;function internalIsBuffer(b){return!!(b!=null&&b._isBuffer);}Buffer.compare=function compare(a,b){if(!internalIsBuffer(a)||!internalIsBuffer(b)){throw new TypeError(\'Arguments must be Buffers\');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case\'hex\':case\'utf8\':case\'utf-8\':case\'ascii\':case\'latin1\':case\'binary\':case\'base64\':case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!isArray(list)){throw new TypeError(\'"list" argument must be an Array of Buffers\');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!internalIsBuffer(buf)){throw new TypeError(\'"list" argument must be an Array of Buffers\');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(internalIsBuffer(string)){return string.length;}if(typeof ArrayBuffer!==\'undefined\'&&typeof ArrayBuffer.isView===\'function\'&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer)){return string.byteLength;}if(typeof string!==\'string\'){string=\'\'+string;}var len=string.length;if(len===0)return 0;// Use a for loop to avoid recursion\nvar loweredCase=false;for(;;){switch(encoding){case\'ascii\':case\'latin1\':case\'binary\':return len;case\'utf8\':case\'utf-8\':case undefined:return utf8ToBytes(string).length;case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return len*2;case\'hex\':return len>>>1;case\'base64\':return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;// assume utf8\nencoding=(\'\'+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that "this.length <= MAX_UINT32" since it\'s a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){return\'\';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return\'\';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;start>>>=0;if(end<=start){return\'\';}if(!encoding)encoding=\'utf8\';while(true){switch(encoding){case\'hex\':return hexSlice(this,start,end);case\'utf8\':case\'utf-8\':return utf8Slice(this,start,end);case\'ascii\':return asciiSlice(this,start,end);case\'latin1\':case\'binary\':return latin1Slice(this,start,end);case\'base64\':return base64Slice(this,start,end);case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError(\'Unknown encoding: \'+encoding);encoding=(encoding+\'\').toLowerCase();loweredCase=true;}}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError(\'Buffer size must be a multiple of 16-bits\');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError(\'Buffer size must be a multiple of 32-bits\');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError(\'Buffer size must be a multiple of 64-bits\');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length|0;if(length===0)return\'\';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.equals=function equals(b){if(!internalIsBuffer(b))throw new TypeError(\'Argument must be a Buffer\');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str=\'\';var max=INSPECT_MAX_BYTES;if(this.length>0){str=this.toString(\'hex\',0,max).match(/.{2}/g).join(\' \');if(this.length>max)str+=\' ... \';}return\'<Buffer \'+str+\'>\';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!internalIsBuffer(target)){throw new TypeError(\'Argument must be a Buffer\');}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError(\'out of range index\');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match\nif(buffer.length===0)return-1;// Normalize byteOffset\nif(typeof byteOffset===\'string\'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.\nif(isNaN(byteOffset)){// byteOffset: it it\'s undefined, null, NaN, "foo", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val\nif(typeof val===\'string\'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(internalIsBuffer(val)){// Special case: looking for empty string/buffer always fails\nif(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val===\'number\'){val=val&0xFF;// Search for a byte value [0-255]\nif(Buffer.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf===\'function\'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError(\'val must be string, number or Buffer\');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding===\'ucs2\'||encoding===\'ucs-2\'||encoding===\'utf16le\'||encoding===\'utf-16le\'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}// must be an even number of digits\nvar strLen=string.length;if(strLen%2!==0)throw new TypeError(\'Invalid hex string\');if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)\nif(offset===undefined){encoding=\'utf8\';length=this.length;offset=0;// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset===\'string\'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){offset=offset|0;if(isFinite(length)){length=length|0;if(encoding===undefined)encoding=\'utf8\';}else{encoding=length;length=undefined;}// legacy write(string, encoding, offset, length) - remove in v0.13\n}else{throw new Error(\'Buffer.write(string, encoding, offset[, length]) is no longer supported\');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError(\'Attempt to write outside buffer bounds\');}if(!encoding)encoding=\'utf8\';var loweredCase=false;for(;;){switch(encoding){case\'hex\':return hexWrite(this,string,offset,length);case\'utf8\':case\'utf-8\':return utf8Write(this,string,offset,length);case\'ascii\':return asciiWrite(this,string,offset,length);case\'latin1\':case\'binary\':return latin1Write(this,string,offset,length);case\'base64\':// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError(\'Unknown encoding: \'+encoding);encoding=(\'\'+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:\'Buffer\',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return fromByteArray(buf);}else{return fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}// Decode in chunks to avoid "call stack size exceeded".\nvar res=\'\';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret=\'\';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret=\'\';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out=\'\';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res=\'\';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf;if(Buffer.TYPED_ARRAY_SUPPORT){newBuf=this.subarray(start,end);newBuf.__proto__=Buffer.prototype;}else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,undefined);for(var i=0;i<sliceLen;++i){newBuf[i]=this[i+start];}}return newBuf;};/*\n   * Need to make sure that buffer isn\'t trying to write out of bounds.\n   */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError(\'offset is not uint\');if(offset+ext>length)throw new RangeError(\'Trying to access beyond buffer length\');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!internalIsBuffer(buf))throw new TypeError(\'"buffer" argument must be a Buffer instance\');if(value>max||value<min)throw new RangeError(\'"value" argument is out of bounds\');if(offset+ext>buf.length)throw new RangeError(\'Index out of range\');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);this[offset]=value&0xff;return offset+1;};function objectWriteUInt16(buf,value,offset,littleEndian){if(value<0)value=0xffff+value+1;for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i){buf[offset+i]=(value&0xff<<8*(littleEndian?i:1-i))>>>(littleEndian?i:1-i)*8;}}Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};function objectWriteUInt32(buf,value,offset,littleEndian){if(value<0)value=0xffffffff+value+1;for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i){buf[offset+i]=value>>>(littleEndian?i:3-i)*8&0xff;}}Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError(\'Index out of range\');if(offset<0)throw new RangeError(\'Index out of range\');}function writeFloat(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,4);}write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,8);}write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we\'re done\nif(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions\nif(targetStart<0){throw new RangeError(\'targetStart out of bounds\');}if(start<0||start>=this.length)throw new RangeError(\'sourceStart out of bounds\');if(end<0)throw new RangeError(\'sourceEnd out of bounds\');// Are we oob?\nif(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){// descending copy from end\nfor(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else if(len<1000||!Buffer.TYPED_ARRAY_SUPPORT){// ascending copy from start\nfor(i=0;i<len;++i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);}return len;};// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:\nif(typeof val===\'string\'){if(typeof start===\'string\'){encoding=start;start=0;end=this.length;}else if(typeof end===\'string\'){encoding=end;end=this.length;}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code;}}if(encoding!==undefined&&typeof encoding!==\'string\'){throw new TypeError(\'encoding must be a string\');}if(typeof encoding===\'string\'&&!Buffer.isEncoding(encoding)){throw new TypeError(\'Unknown encoding: \'+encoding);}}else if(typeof val===\'number\'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){throw new RangeError(\'Out of range index\');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val===\'number\'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=internalIsBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString());var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS\n// ================\nvar INVALID_BASE64_RE=/[^+\\/0-9A-Za-z-_]/g;function base64clean(str){// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=stringtrim(str).replace(INVALID_BASE64_RE,\'\');// Node converts strings with length < 2 to \'\'\nif(str.length<2)return\'\';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){str=str+\'=\';}return str;}function stringtrim(str){if(str.trim)return str.trim();return str.replace(/^\\s+|\\s+$/g,\'\');}function toHex(n){if(n<16)return\'0\'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead\nif(!leadSurrogate){// no lead yet\nif(codePoint>0xDBFF){// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead\nleadSurrogate=codePoint;continue;}// 2 leads in a row\nif(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8\nif(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error(\'Invalid code point\');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node\'s code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}function isnan(val){return val!==val;// eslint-disable-line no-self-compare\n}// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it\'s missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj){return obj!=null&&(!!obj._isBuffer||isFastBuffer(obj)||isSlowBuffer(obj));}function isFastBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer===\'function\'&&obj.constructor.isBuffer(obj);}// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj){return typeof obj.readFloatLE===\'function\'&&typeof obj.slice===\'function\'&&isFastBuffer(obj.slice(0,0));}var commonjsGlobal=typeof globalThis!==\'undefined\'?globalThis:typeof window!==\'undefined\'?window:typeof global!==\'undefined\'?global:typeof self!==\'undefined\'?self:{};function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,\'default\')?x[\'default\']:x;}function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}function getCjsExportFromNamespace(n){return n&&n[\'default\']||n;}var fs=getCjsExportFromNamespace(_shim_fs$1);/**\n   * @class\n   */var LineByLine=/*#__PURE__*/function(){function LineByLine(file,options){(0,_classCallCheck2.default)(this,LineByLine);options=options||{};if(!options.readChunk)options.readChunk=1024;if(!options.newLineCharacter){options.newLineCharacter=0x0a;//linux line ending\n}else{options.newLineCharacter=options.newLineCharacter.charCodeAt(0);}if(typeof file===\'number\'){this.fd=file;}else{this.fd=fs.openSync(file,\'r\');}this.options=options;this.newLineCharacter=options.newLineCharacter;this.reset();}(0,_createClass2.default)(LineByLine,[{key:"_searchInBuffer",value:function _searchInBuffer(buffer,hexNeedle){var found=-1;for(var i=0;i<=buffer.length;i++){var b_byte=buffer[i];if(b_byte===hexNeedle){found=i;break;}}return found;}},{key:"reset",value:function reset(){this.eofReached=false;this.linesCache=[];this.fdPosition=0;}},{key:"close",value:function close(){fs.closeSync(this.fd);this.fd=null;}},{key:"_extractLines",value:function _extractLines(buffer){var line;var lines=[];var bufferPosition=0;var lastNewLineBufferPosition=0;while(true){var bufferPositionValue=buffer[bufferPosition++];if(bufferPositionValue===this.newLineCharacter){line=buffer.slice(lastNewLineBufferPosition,bufferPosition);lines.push(line);lastNewLineBufferPosition=bufferPosition;}else if(!bufferPositionValue){break;}}var leftovers=buffer.slice(lastNewLineBufferPosition,bufferPosition);if(leftovers.length){lines.push(leftovers);}return lines;}},{key:"_readChunk",value:function _readChunk(lineLeftovers){var totalBytesRead=0;var bytesRead;var buffers=[];do{var readBuffer=new Buffer(this.options.readChunk);bytesRead=fs.readSync(this.fd,readBuffer,0,this.options.readChunk,this.fdPosition);totalBytesRead=totalBytesRead+bytesRead;this.fdPosition=this.fdPosition+bytesRead;buffers.push(readBuffer);}while(bytesRead&&this._searchInBuffer(buffers[buffers.length-1],this.options.newLineCharacter)===-1);var bufferData=Buffer.concat(buffers);if(bytesRead<this.options.readChunk){this.eofReached=true;bufferData=bufferData.slice(0,totalBytesRead);}if(totalBytesRead){this.linesCache=this._extractLines(bufferData);if(lineLeftovers){this.linesCache[0]=Buffer.concat([lineLeftovers,this.linesCache[0]]);}}return totalBytesRead;}},{key:"next",value:function next(){if(!this.fd)return false;var line=false;if(this.eofReached&&this.linesCache.length===0){return line;}var bytesRead;if(!this.linesCache.length){bytesRead=this._readChunk();}if(this.linesCache.length){line=this.linesCache.shift();var lastLineCharacter=line[line.length-1];if(lastLineCharacter!==0x0a){bytesRead=this._readChunk(line);if(bytesRead){line=this.linesCache.shift();}}}if(this.eofReached&&this.linesCache.length===0){this.close();}if(line&&line[line.length-1]===this.newLineCharacter){line=line.slice(0,line.length-1);}return line;}}]);return LineByLine;}();var readlines=LineByLine;/**\n   * The inverse of `_.toPairs`; this method returns an object composed\n   * from key-value `pairs`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} pairs The key-value pairs.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * _.fromPairs([[\'a\', 1], [\'b\', 2]]);\n   * // => { \'a\': 1, \'b\': 2 }\n   */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}var fromPairs_1=fromPairs;var ConfigError=/*#__PURE__*/function(_Error){(0,_inherits2.default)(ConfigError,_Error);var _super=_createSuper(ConfigError);function ConfigError(){(0,_classCallCheck2.default)(this,ConfigError);return _super.apply(this,arguments);}return(0,_createClass2.default)(ConfigError);}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var DebugError=/*#__PURE__*/function(_Error2){(0,_inherits2.default)(DebugError,_Error2);var _super2=_createSuper(DebugError);function DebugError(){(0,_classCallCheck2.default)(this,DebugError);return _super2.apply(this,arguments);}return(0,_createClass2.default)(DebugError);}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var UndefinedParserError=/*#__PURE__*/function(_Error3){(0,_inherits2.default)(UndefinedParserError,_Error3);var _super3=_createSuper(UndefinedParserError);function UndefinedParserError(){(0,_classCallCheck2.default)(this,UndefinedParserError);return _super3.apply(this,arguments);}return(0,_createClass2.default)(UndefinedParserError);}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var errors={ConfigError:ConfigError,DebugError:DebugError,UndefinedParserError:UndefinedParserError};function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0);}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\nfunction defaultSetTimout(){throw new Error(\'setTimeout has not been defined\');}function defaultClearTimeout(){throw new Error(\'clearTimeout has not been defined\');}var cachedSetTimeout=defaultSetTimout;var cachedClearTimeout=defaultClearTimeout;if(typeof global$1.setTimeout===\'function\'){cachedSetTimeout=setTimeout;}if(typeof global$1.clearTimeout===\'function\'){cachedClearTimeout=clearTimeout;}function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations\nreturn setTimeout(fun,0);}// if setTimeout wasn\'t available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn\'t trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it\'s a version of I.E. that must have the global object for \'this\', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations\nreturn clearTimeout(marker);}// if clearTimeout wasn\'t available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn\'t  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it\'s a version of I.E. that must have the global object for \'this\', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}function nextTick(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}}// v8 likes predictible objects\nfunction Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};var title=\'browser\';var platform=\'browser\';var browser=true;var env={};var argv=[];var version$1=\'\';// empty string to avoid regexp issues\nvar versions={};var release={};var config={};function noop(){}var on=noop;var addListener=noop;var once=noop;var off=noop;var removeListener=noop;var removeAllListeners=noop;var emit=noop;function binding(name){throw new Error(\'process.binding is not supported\');}function cwd(){return\'/\';}function chdir(dir){throw new Error(\'process.chdir is not supported\');}function umask(){return 0;}// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance=global$1.performance||{};var performanceNow=performance.now||performance.mozNow||performance.msNow||performance.oNow||performance.webkitNow||function(){return new Date().getTime();};// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){var clocktime=performanceNow.call(performance)*1e-3;var seconds=Math.floor(clocktime);var nanoseconds=Math.floor(clocktime%1*1e9);if(previousTimestamp){seconds=seconds-previousTimestamp[0];nanoseconds=nanoseconds-previousTimestamp[1];if(nanoseconds<0){seconds--;nanoseconds+=1e9;}}return[seconds,nanoseconds];}var startTime=new Date();function uptime(){var currentTime=new Date();var dif=currentTime-startTime;return dif/1000;}var process={nextTick:nextTick,title:title,browser:browser,env:env,argv:argv,version:version$1,versions:versions,on:on,addListener:addListener,once:once,off:off,removeListener:removeListener,removeAllListeners:removeAllListeners,emit:emit,binding:binding,cwd:cwd,chdir:chdir,umask:umask,hrtime:hrtime,platform:platform,release:release,config:config,uptime:uptime};var debug=(0,_typeof3.default)(process)===\'object\'&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?function(){var _console;for(var _len=arguments.length,args=new Array(_len),_key2=0;_key2<_len;_key2++){args[_key2]=arguments[_key2];}return(_console=console).error.apply(_console,[\'SEMVER\'].concat(args));}:function(){};var debug_1=debug;// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nvar SEMVER_SPEC_VERSION=\'2.0.0\';var MAX_LENGTH=256;var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||/* istanbul ignore next */9007199254740991;// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH=16;var constants={SEMVER_SPEC_VERSION:SEMVER_SPEC_VERSION,MAX_LENGTH:MAX_LENGTH,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER,MAX_SAFE_COMPONENT_LENGTH:MAX_SAFE_COMPONENT_LENGTH};var re_1=createCommonjsModule(function(module,exports){var MAX_SAFE_COMPONENT_LENGTH=constants.MAX_SAFE_COMPONENT_LENGTH;exports=module.exports={};// The actual regexps go on exports.re\nvar re=exports.re=[];var src=exports.src=[];var t=exports.t={};var R=0;var createToken=function createToken(name,value,isGlobal){var index=R++;debug_1(index,value);t[name]=index;src[index]=value;re[index]=new RegExp(value,isGlobal?\'g\':undefined);};// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\ncreateToken(\'NUMERICIDENTIFIER\',\'0|[1-9]\\\\d*\');createToken(\'NUMERICIDENTIFIERLOOSE\',\'[0-9]+\');// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\ncreateToken(\'NONNUMERICIDENTIFIER\',\'\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\');// ## Main Version\n// Three dot-separated numeric identifiers.\ncreateToken(\'MAINVERSION\',"(".concat(src[t.NUMERICIDENTIFIER],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIER],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIER],")"));createToken(\'MAINVERSIONLOOSE\',"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")"));// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\ncreateToken(\'PRERELEASEIDENTIFIER\',"(?:".concat(src[t.NUMERICIDENTIFIER],"|").concat(src[t.NONNUMERICIDENTIFIER],")"));createToken(\'PRERELEASEIDENTIFIERLOOSE\',"(?:".concat(src[t.NUMERICIDENTIFIERLOOSE],"|").concat(src[t.NONNUMERICIDENTIFIER],")"));// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\ncreateToken(\'PRERELEASE\',"(?:-(".concat(src[t.PRERELEASEIDENTIFIER],"(?:\\\\.").concat(src[t.PRERELEASEIDENTIFIER],")*))"));createToken(\'PRERELEASELOOSE\',"(?:-?(".concat(src[t.PRERELEASEIDENTIFIERLOOSE],"(?:\\\\.").concat(src[t.PRERELEASEIDENTIFIERLOOSE],")*))"));// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\ncreateToken(\'BUILDIDENTIFIER\',\'[0-9A-Za-z-]+\');// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\ncreateToken(\'BUILD\',"(?:\\\\+(".concat(src[t.BUILDIDENTIFIER],"(?:\\\\.").concat(src[t.BUILDIDENTIFIER],")*))"));// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\ncreateToken(\'FULLPLAIN\',"v?".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE],"?").concat(src[t.BUILD],"?"));createToken(\'FULL\',"^".concat(src[t.FULLPLAIN],"$"));// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken(\'LOOSEPLAIN\',"[v=\\\\s]*".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE],"?").concat(src[t.BUILD],"?"));createToken(\'LOOSE\',"^".concat(src[t.LOOSEPLAIN],"$"));createToken(\'GTLT\',\'((?:<|>)?=?)\');// Something like "2.*" or "1.2.x".\n// Note that "x.x" is a valid xRange identifer, meaning "any version"\n// Only the first item is strictly required.\ncreateToken(\'XRANGEIDENTIFIERLOOSE\',"".concat(src[t.NUMERICIDENTIFIERLOOSE],"|x|X|\\\\*"));createToken(\'XRANGEIDENTIFIER\',"".concat(src[t.NUMERICIDENTIFIER],"|x|X|\\\\*"));createToken(\'XRANGEPLAIN\',"[v=\\\\s]*(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:".concat(src[t.PRERELEASE],")?").concat(src[t.BUILD],"?")+")?)?");createToken(\'XRANGEPLAINLOOSE\',"[v=\\\\s]*(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(src[t.PRERELEASELOOSE],")?").concat(src[t.BUILD],"?")+")?)?");createToken(\'XRANGE\',"^".concat(src[t.GTLT],"\\\\s*").concat(src[t.XRANGEPLAIN],"$"));createToken(\'XRANGELOOSE\',"^".concat(src[t.GTLT],"\\\\s*").concat(src[t.XRANGEPLAINLOOSE],"$"));// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken(\'COERCE\',"".concat(\'(^|[^\\\\d])\'+\'(\\\\d{1,\').concat(MAX_SAFE_COMPONENT_LENGTH,"})")+"(?:\\\\.(\\\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH,"}))?")+"(?:\\\\.(\\\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH,"}))?")+"(?:$|[^\\\\d])");createToken(\'COERCERTL\',src[t.COERCE],true);// Tilde ranges.\n// Meaning is "reasonably at or greater than"\ncreateToken(\'LONETILDE\',\'(?:~>?)\');createToken(\'TILDETRIM\',"(\\\\s*)".concat(src[t.LONETILDE],"\\\\s+"),true);exports.tildeTrimReplace=\'$1~\';createToken(\'TILDE\',"^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN],"$"));createToken(\'TILDELOOSE\',"^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE],"$"));// Caret ranges.\n// Meaning is "at least and backwards compatible with"\ncreateToken(\'LONECARET\',\'(?:\\\\^)\');createToken(\'CARETTRIM\',"(\\\\s*)".concat(src[t.LONECARET],"\\\\s+"),true);exports.caretTrimReplace=\'$1^\';createToken(\'CARET\',"^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN],"$"));createToken(\'CARETLOOSE\',"^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE],"$"));// A simple gt/lt/eq thing, or just "" to indicate "any version"\ncreateToken(\'COMPARATORLOOSE\',"^".concat(src[t.GTLT],"\\\\s*(").concat(src[t.LOOSEPLAIN],")$|^$"));createToken(\'COMPARATOR\',"^".concat(src[t.GTLT],"\\\\s*(").concat(src[t.FULLPLAIN],")$|^$"));// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken(\'COMPARATORTRIM\',"(\\\\s*)".concat(src[t.GTLT],"\\\\s*(").concat(src[t.LOOSEPLAIN],"|").concat(src[t.XRANGEPLAIN],")"),true);exports.comparatorTrimReplace=\'$1$2$3\';// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they\'ll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken(\'HYPHENRANGE\',"^\\\\s*(".concat(src[t.XRANGEPLAIN],")")+"\\\\s+-\\\\s+"+"(".concat(src[t.XRANGEPLAIN],")")+"\\\\s*$");createToken(\'HYPHENRANGELOOSE\',"^\\\\s*(".concat(src[t.XRANGEPLAINLOOSE],")")+"\\\\s+-\\\\s+"+"(".concat(src[t.XRANGEPLAINLOOSE],")")+"\\\\s*$");// Star ranges basically just allow anything at all.\ncreateToken(\'STAR\',\'(<|>)?=?\\\\s*\\\\*\');});var re_2=re_1.re;var re_3=re_1.src;var re_4=re_1.t;var re_5=re_1.tildeTrimReplace;var re_6=re_1.caretTrimReplace;var re_7=re_1.comparatorTrimReplace;var numeric=/^[0-9]+$/;var compareIdentifiers=function compareIdentifiers(a,b){var anum=numeric.test(a);var bnum=numeric.test(b);if(anum&&bnum){a=+a;b=+b;}return a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1;};var rcompareIdentifiers=function rcompareIdentifiers(a,b){return compareIdentifiers(b,a);};var identifiers={compareIdentifiers:compareIdentifiers,rcompareIdentifiers:rcompareIdentifiers};var MAX_LENGTH$1=constants.MAX_LENGTH,MAX_SAFE_INTEGER$1=constants.MAX_SAFE_INTEGER;var re=re_1.re,t=re_1.t;var compareIdentifiers$1=identifiers.compareIdentifiers;var SemVer=/*#__PURE__*/function(){function SemVer(version,options){(0,_classCallCheck2.default)(this,SemVer);if(!options||(0,_typeof3.default)(options)!==\'object\'){options={loose:!!options,includePrerelease:false};}if(version instanceof SemVer){if(version.loose===!!options.loose&&version.includePrerelease===!!options.includePrerelease){return version;}else{version=version.version;}}else if(typeof version!==\'string\'){throw new TypeError("Invalid Version: ".concat(version));}if(version.length>MAX_LENGTH$1){throw new TypeError("version is longer than ".concat(MAX_LENGTH$1," characters"));}debug_1(\'SemVer\',version,options);this.options=options;this.loose=!!options.loose;// this isn\'t actually relevant for versions, but keep it so that we\n// don\'t run into trouble passing this.options around.\nthis.includePrerelease=!!options.includePrerelease;var m=version.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m){throw new TypeError("Invalid Version: ".concat(version));}this.raw=version;// these are actually numbers\nthis.major=+m[1];this.minor=+m[2];this.patch=+m[3];if(this.major>MAX_SAFE_INTEGER$1||this.major<0){throw new TypeError(\'Invalid major version\');}if(this.minor>MAX_SAFE_INTEGER$1||this.minor<0){throw new TypeError(\'Invalid minor version\');}if(this.patch>MAX_SAFE_INTEGER$1||this.patch<0){throw new TypeError(\'Invalid patch version\');}// numberify any prerelease numeric ids\nif(!m[4]){this.prerelease=[];}else{this.prerelease=m[4].split(\'.\').map(function(id){if(/^[0-9]+$/.test(id)){var num=+id;if(num>=0&&num<MAX_SAFE_INTEGER$1){return num;}}return id;});}this.build=m[5]?m[5].split(\'.\'):[];this.format();}(0,_createClass2.default)(SemVer,[{key:"format",value:function format(){this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch);if(this.prerelease.length){this.version+="-".concat(this.prerelease.join(\'.\'));}return this.version;}},{key:"toString",value:function toString(){return this.version;}},{key:"compare",value:function compare(other){debug_1(\'SemVer.compare\',this.version,this.options,other);if(!(other instanceof SemVer)){if(typeof other===\'string\'&&other===this.version){return 0;}other=new SemVer(other,this.options);}if(other.version===this.version){return 0;}return this.compareMain(other)||this.comparePre(other);}},{key:"compareMain",value:function compareMain(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}return compareIdentifiers$1(this.major,other.major)||compareIdentifiers$1(this.minor,other.minor)||compareIdentifiers$1(this.patch,other.patch);}},{key:"comparePre",value:function comparePre(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}// NOT having a prerelease is > having one\nif(this.prerelease.length&&!other.prerelease.length){return-1;}else if(!this.prerelease.length&&other.prerelease.length){return 1;}else if(!this.prerelease.length&&!other.prerelease.length){return 0;}var i=0;do{var _a2=this.prerelease[i];var b=other.prerelease[i];debug_1(\'prerelease compare\',i,_a2,b);if(_a2===undefined&&b===undefined){return 0;}else if(b===undefined){return 1;}else if(_a2===undefined){return-1;}else if(_a2===b){continue;}else{return compareIdentifiers$1(_a2,b);}}while(++i);}},{key:"compareBuild",value:function compareBuild(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}var i=0;do{var _a3=this.build[i];var b=other.build[i];debug_1(\'prerelease compare\',i,_a3,b);if(_a3===undefined&&b===undefined){return 0;}else if(b===undefined){return 1;}else if(_a3===undefined){return-1;}else if(_a3===b){continue;}else{return compareIdentifiers$1(_a3,b);}}while(++i);}// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n},{key:"inc",value:function inc(release,identifier){switch(release){case\'premajor\':this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc(\'pre\',identifier);break;case\'preminor\':this.prerelease.length=0;this.patch=0;this.minor++;this.inc(\'pre\',identifier);break;case\'prepatch\':// If this is already a prerelease, it will bump to the next version\n// drop any prereleases that might already exist, since they are not\n// relevant at this point.\nthis.prerelease.length=0;this.inc(\'patch\',identifier);this.inc(\'pre\',identifier);break;// If the input is a non-prerelease version, this acts the same as\n// prepatch.\ncase\'prerelease\':if(this.prerelease.length===0){this.inc(\'patch\',identifier);}this.inc(\'pre\',identifier);break;case\'major\':// If this is a pre-major version, bump up to the same major version.\n// Otherwise increment major.\n// 1.0.0-5 bumps to 1.0.0\n// 1.1.0 bumps to 2.0.0\nif(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++;}this.minor=0;this.patch=0;this.prerelease=[];break;case\'minor\':// If this is a pre-minor version, bump up to the same minor version.\n// Otherwise increment minor.\n// 1.2.0-5 bumps to 1.2.0\n// 1.2.1 bumps to 1.3.0\nif(this.patch!==0||this.prerelease.length===0){this.minor++;}this.patch=0;this.prerelease=[];break;case\'patch\':// If this is not a pre-release version, it will increment the patch.\n// If it is a pre-release it will bump up to the same patch version.\n// 1.2.0-5 patches to 1.2.0\n// 1.2.0 patches to 1.2.1\nif(this.prerelease.length===0){this.patch++;}this.prerelease=[];break;// This probably shouldn\'t be used publicly.\n// 1.0.0 \'pre\' would become 1.0.0-0 which is the wrong direction.\ncase\'pre\':if(this.prerelease.length===0){this.prerelease=[0];}else{var i=this.prerelease.length;while(--i>=0){if(typeof this.prerelease[i]===\'number\'){this.prerelease[i]++;i=-2;}}if(i===-1){// didn\'t increment anything\nthis.prerelease.push(0);}}if(identifier){// 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n// 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\nif(this.prerelease[0]===identifier){if(isNaN(this.prerelease[1])){this.prerelease=[identifier,0];}}else{this.prerelease=[identifier,0];}}break;default:throw new Error("invalid increment argument: ".concat(release));}this.format();this.raw=this.version;return this;}}]);return SemVer;}();var semver=SemVer;var compare=function compare(a,b,loose){return new semver(a,loose).compare(new semver(b,loose));};var compare_1=compare;var lt=function lt(a,b,loose){return compare_1(a,b,loose)<0;};var lt_1=lt;var gte=function gte(a,b,loose){return compare_1(a,b,loose)>=0;};var gte_1=gte;var arrayify=function arrayify(object,keyName){return Object.entries(object).map(function(_ref){var _ref2=(0,_slicedToArray2.default)(_ref,2),key=_ref2[0],value=_ref2[1];return Object.assign((0,_defineProperty2.default)({},keyName,key),value);});};var dedent_1=createCommonjsModule(function(module){function dedent(strings){var raw=void 0;if(typeof strings==="string"){// dedent can be used as a plain function\nraw=[strings];}else{raw=strings.raw;}// first, perform interpolation\nvar result="";for(var i=0;i<raw.length;i++){result+=raw[i].// join lines when there is a suppressed newline\nreplace(/\\\\\\n[ \\t]*/g,"").// handle escaped backticks\nreplace(/\\\\`/g,"`");if(i<(arguments.length<=1?0:arguments.length-1)){result+=arguments.length<=i+1?undefined:arguments[i+1];}}// now strip indentation\nvar lines=result.split("\\n");var mindent=null;lines.forEach(function(l){var m=l.match(/^(\\s+)\\S+/);if(m){var indent=m[1].length;if(!mindent){// this is the first indented line\nmindent=indent;}else{mindent=Math.min(mindent,indent);}}});if(mindent!==null){result=lines.map(function(l){return l[0]===" "?l.slice(mindent):l;}).join("\\n");}// dedent eats leading and trailing whitespace too\nresult=result.trim();// handle escaped newlines at the end to ensure they don\'t get stripped too\nreturn result.replace(/\\\\n/g,"\\n");}{module.exports=dedent;}});function _templateObject6(){var data=_taggedTemplateLiteral(["\\n      Require either \'@prettier\' or \'@format\' to be present in the file\'s first docblock comment\\n      in order for it to be formatted.\\n    "]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral(["\\n      Format code starting at a given character offset.\\n      The range will extend backwards to the start of the first line containing the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    "]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral(["\\n      Format code ending at a given character offset (exclusive).\\n      The range will extend forwards to the end of the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    "]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral(["\\n      Custom directory that contains prettier plugins in node_modules subdirectory.\\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\\n      Multiple values are accepted.\\n    "]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral(["\\n          Maintain existing\\n          (mixed values within one file are normalised by looking at what\'s used after the first line)\\n        "]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral(["\\n      Print (to stderr) where a cursor at the given position would move to after formatting.\\n      This option cannot be used with --range-start and --range-end.\\n    "]);_templateObject=function _templateObject(){return data;};return data;}var CATEGORY_CONFIG="Config";var CATEGORY_EDITOR="Editor";var CATEGORY_FORMAT="Format";var CATEGORY_OTHER="Other";var CATEGORY_OUTPUT="Output";var CATEGORY_GLOBAL="Global";var CATEGORY_SPECIAL="Special";/**\n   * @typedef {Object} OptionInfo\n   * @property {string} [since] - available since version\n   * @property {string} category\n   * @property {\'int\' | \'boolean\' | \'choice\' | \'path\'} type\n   * @property {boolean} [array] - indicate it\'s an array of the specified type\n   * @property {OptionValueInfo} [default]\n   * @property {OptionRangeInfo} [range] - for type int\n   * @property {string} description\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionRedirectInfo} [redirect] - redirect deprecated option\n   * @property {(value: any) => boolean} [exception]\n   * @property {OptionChoiceInfo[]} [choices] - for type choice\n   * @property {string} [cliName]\n   * @property {string} [cliCategory]\n   * @property {string} [cliDescription]\n   *\n   * @typedef {number | boolean | string} OptionValue\n   * @typedef {OptionValue | [{ value: OptionValue[] }] | Array<{ since: string, value: OptionValue}>} OptionValueInfo\n   *\n   * @typedef {Object} OptionRedirectInfo\n   * @property {string} option\n   * @property {OptionValue} value\n   *\n   * @typedef {Object} OptionRangeInfo\n   * @property {number} start - recommended range start\n   * @property {number} end - recommended range end\n   * @property {number} step - recommended range step\n   *\n   * @typedef {Object} OptionChoiceInfo\n   * @property {boolean | string} value - boolean for the option that is originally boolean type\n   * @property {string} description\n   * @property {string} [since] - undefined if available since the first version of the option\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionValueInfo} [redirect] - redirect deprecated value\n   */ /** @type {{ [name: string]: OptionInfo }} */var options={cursorOffset:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:-1,range:{start:-1,end:Infinity,step:1},description:dedent_1(_templateObject()),cliCategory:CATEGORY_EDITOR},endOfLine:{since:"1.15.0",category:CATEGORY_GLOBAL,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\\\r\\\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\\\r), used very rarely"},{value:"auto",description:dedent_1(_templateObject2())}]},filepath:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:CATEGORY_OTHER,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:CATEGORY_SPECIAL,type:"boolean",default:false,description:"Insert @format pragma into file\'s first docblock comment.",cliCategory:CATEGORY_OTHER},parser:{since:"0.0.10",category:CATEGORY_GLOBAL,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:undefined}],description:"Which parser to use.",exception:function exception(value){return typeof value==="string"||typeof value==="function";},choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:true,default:[{value:[]}],category:CATEGORY_GLOBAL,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:function exception(value){return typeof value==="string"||(0,_typeof3.default)(value)==="object";},cliName:"plugin",cliCategory:CATEGORY_CONFIG},pluginSearchDirs:{since:"1.13.0",type:"path",array:true,default:[{value:[]}],category:CATEGORY_GLOBAL,description:dedent_1(_templateObject3()),exception:function exception(value){return typeof value==="string"||(0,_typeof3.default)(value)==="object";},cliName:"plugin-search-dir",cliCategory:CATEGORY_CONFIG},printWidth:{since:"0.0.0",category:CATEGORY_GLOBAL,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Infinity,step:1}},rangeEnd:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:Infinity,range:{start:0,end:Infinity,step:1},description:dedent_1(_templateObject4()),cliCategory:CATEGORY_EDITOR},rangeStart:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:0,range:{start:0,end:Infinity,step:1},description:dedent_1(_templateObject5()),cliCategory:CATEGORY_EDITOR},requirePragma:{since:"1.7.0",category:CATEGORY_SPECIAL,type:"boolean",default:false,description:dedent_1(_templateObject6()),cliCategory:CATEGORY_OTHER},tabWidth:{type:"int",category:CATEGORY_GLOBAL,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Infinity,step:1}},useTabs:{since:"1.0.0",category:CATEGORY_GLOBAL,type:"boolean",default:false,description:"Indent with tabs instead of spaces."}};var coreOptions={CATEGORY_CONFIG:CATEGORY_CONFIG,CATEGORY_EDITOR:CATEGORY_EDITOR,CATEGORY_FORMAT:CATEGORY_FORMAT,CATEGORY_OTHER:CATEGORY_OTHER,CATEGORY_OUTPUT:CATEGORY_OUTPUT,CATEGORY_GLOBAL:CATEGORY_GLOBAL,CATEGORY_SPECIAL:CATEGORY_SPECIAL,options:options};var require$$0=getCjsExportFromNamespace(_package$1);var semver$1={compare:compare_1,lt:lt_1,gte:gte_1};var currentVersion=require$$0.version;var coreOptions$1=coreOptions.options;/**\n   * Strings in `plugins` and `pluginSearchDirs` are handled by a wrapped version\n   * of this function created by `withPlugins`. Don\'t pass them here directly.\n   * @param {object} param0\n   * @param {(string | object)[]=} param0.plugins Strings are resolved by `withPlugins`.\n   * @param {string[]=} param0.pluginSearchDirs Added by `withPlugins`.\n   * @param {boolean=} param0.showUnreleased\n   * @param {boolean=} param0.showDeprecated\n   * @param {boolean=} param0.showInternal\n   */function getSupportInfo(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref3$plugins=_ref3.plugins,plugins=_ref3$plugins===void 0?[]:_ref3$plugins,_ref3$showUnreleased=_ref3.showUnreleased,showUnreleased=_ref3$showUnreleased===void 0?false:_ref3$showUnreleased,_ref3$showDeprecated=_ref3.showDeprecated,showDeprecated=_ref3$showDeprecated===void 0?false:_ref3$showDeprecated,_ref3$showInternal=_ref3.showInternal,showInternal=_ref3$showInternal===void 0?false:_ref3$showInternal;// pre-release version is smaller than the normal version in semver,\n// we need to treat it as the normal one so as to test new features.\nvar version=currentVersion.split("-",1)[0];var options=arrayify(Object.assign.apply(Object,[{}].concat((0,_toConsumableArray3.default)(plugins.map(function(_ref4){var options=_ref4.options;return options;})),[coreOptions$1])),"name").filter(function(option){return filterSince(option)&&filterDeprecated(option);}).sort(function(a,b){return a.name===b.name?0:a.name<b.name?-1:1;}).map(mapInternal).map(function(option){option=Object.assign({},option);if(Array.isArray(option.default)){option.default=option.default.length===1?option.default[0].value:option.default.filter(filterSince).sort(function(info1,info2){return semver$1.compare(info2.since,info1.since);})[0].value;}if(Array.isArray(option.choices)){option.choices=option.choices.filter(function(option){return filterSince(option)&&filterDeprecated(option);});}var filteredPlugins=plugins.filter(function(plugin){return plugin.defaultOptions&&plugin.defaultOptions[option.name]!==undefined;});var pluginDefaults=filteredPlugins.reduce(function(reduced,plugin){reduced[plugin.name]=plugin.defaultOptions[option.name];return reduced;},{});return Object.assign({},option,{pluginDefaults:pluginDefaults});});var languages=plugins.reduce(function(all,plugin){return all.concat(plugin.languages||[]);},[]).filter(filterSince);return{languages:languages,options:options};function filterSince(object){return showUnreleased||!("since"in object)||object.since&&semver$1.gte(version,object.since);}function filterDeprecated(object){return showDeprecated||!("deprecated"in object)||object.deprecated&&semver$1.lt(version,object.deprecated);}function mapInternal(object){if(showInternal){return object;}var newObject=_objectWithoutPropertiesLoose(object,["cliName","cliCategory","cliDescription"]);return newObject;}}var support={getSupportInfo:getSupportInfo};/*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the "License"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};function __extends(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign=function __assign(){_assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":(0,_typeof3.default)(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":(0,_typeof3.default)(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value);}).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n--\x3e0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;}function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result.default=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{default:mod};}var tslib_es6=/*#__PURE__*/Object.freeze({__proto__:null,__extends:__extends,get __assign(){return _assign;},__rest:__rest,__decorate:__decorate,__param:__param,__metadata:__metadata,__awaiter:__awaiter,__generator:__generator,__exportStar:__exportStar,__values:__values,__read:__read,__spread:__spread,__spreadArrays:__spreadArrays,__await:__await,__asyncGenerator:__asyncGenerator,__asyncDelegator:__asyncDelegator,__asyncValues:__asyncValues,__makeTemplateObject:__makeTemplateObject,__importStar:__importStar,__importDefault:__importDefault});var api=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.apiDescriptor={key:function key(_key){return /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(_key)?_key:JSON.stringify(_key);},value:function value(_value2){if(_value2===null||(0,_typeof3.default)(_value2)!==\'object\'){return JSON.stringify(_value2);}if(Array.isArray(_value2)){return"[".concat(_value2.map(function(subValue){return exports.apiDescriptor.value(subValue);}).join(\', \'),"]");}var keys=Object.keys(_value2);return keys.length===0?\'{}\':"{ ".concat(keys.map(function(key){return"".concat(exports.apiDescriptor.key(key),": ").concat(exports.apiDescriptor.value(_value2[key]));}).join(\', \')," }");},pair:function pair(_ref5){var key=_ref5.key,value=_ref5.value;return exports.apiDescriptor.value((0,_defineProperty2.default)({},key,value));}};});unwrapExports(api);var api_1=api.apiDescriptor;var tslib_1=getCjsExportFromNamespace(tslib_es6);var descriptors=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(api,exports);});unwrapExports(descriptors);var matchOperatorsRe=/[|\\\\{}()[\\]^$+*?.]/g;var escapeStringRegexp=function escapeStringRegexp(str){if(typeof str!==\'string\'){throw new TypeError(\'Expected a string\');}return str.replace(matchOperatorsRe,\'\\\\$&\');};var colorName={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};var conversions=createCommonjsModule(function(module){/* MIT license */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var key in colorName){if(colorName.hasOwnProperty(key)){reverseKeywords[colorName[key]]=key;}}var convert=module.exports={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};// hide .channels and .labels properties\nfor(var model in convert){if(convert.hasOwnProperty(model)){if(!(\'channels\'in convert[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert[model].labels.length!==convert[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var channels=convert[model].channels;var labels=convert[model].labels;delete convert[model].channels;delete convert[model].labels;Object.defineProperty(convert[model],\'channels\',{value:channels});Object.defineProperty(convert[model],\'labels\',{value:labels});}}convert.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;var l;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var c;var m;var y;var k;k=Math.min(1-r,1-g,1-b);c=(1-r-k)/(1-k)||0;m=(1-g-k)/(1-k)||0;y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};/**\n     * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n     * */function comparativeDistance(x,y){return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var keyword in colorName){if(colorName.hasOwnProperty(keyword)){var value=colorName[keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=keyword;}}}return currentClosestKeyword;};convert.keyword.rgb=function(keyword){return colorName[keyword];};convert.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert.rgb.lab=function(rgb){var xyz=convert.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t1;var t2;var t3;var rgb;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);var sv;var v;l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;v=(l+s)/2;sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var lmin;var sl;var l;l=(2-s)*v;lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var i;var v;var f;var n;// wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}i=Math.floor(6*h);v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}n=wh+f*(v-wh);// linear interpolation\nvar r;var g;var b;switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}return[r*255,g*255,b*255];};convert.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r;var g;var b;r=1-Math.min(1,c*(1-k)+k);g=1-Math.min(1,m*(1-k)+k);b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var hr;var h;var c;hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}c=Math.sqrt(a*a+b*b);return[l,c,h];};convert.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var a;var b;var hr;hr=h/360*2*Math.PI;a=c*Math.cos(hr);b=c*Math.sin(hr);return[l,a,b];};convert.rgb.ansi16=function(args){var r=args[0];var g=args[1];var b=args[2];var value=1 in arguments?arguments[1]:convert.rgb.hsv(args)[2];// hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert.hsv.ansi16=function(args){// optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert.rgb.ansi16(convert.hsv.rgb(args),args[2]);};convert.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// we use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert.ansi16.rgb=function(args){var color=args%10;// handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert.ansi256.rgb=function(args){// handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma+4;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=1;var f=0;if(l<0.5){c=2.0*s*l;}else{c=2.0*s*(1.0-l);}if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert.gray.hsl=convert.gray.hsv=function(args){return[0,0,args[0]];};convert.gray.hwb=function(gray){return[0,100,gray[0]];};convert.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert.gray.lab=function(gray){return[gray[0],0,0];};convert.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};});var conversions_1=conversions.rgb;var conversions_2=conversions.hsl;var conversions_3=conversions.hsv;var conversions_4=conversions.hwb;var conversions_5=conversions.cmyk;var conversions_6=conversions.xyz;var conversions_7=conversions.lab;var conversions_8=conversions.lch;var conversions_9=conversions.hex;var conversions_10=conversions.keyword;var conversions_11=conversions.ansi16;var conversions_12=conversions.ansi256;var conversions_13=conversions.hcg;var conversions_14=conversions.apple;var conversions_15=conversions.gray;/*\n  \tthis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel){var graph=buildGraph();var queue=[fromModel];// unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link(from,to){return function(args){return to(from(args));};}function wrapConversion(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link(conversions[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route=function route(fromModel){var graph=deriveBFS(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// no possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion(toModel,graph);}return conversion;};var convert={};var models=Object.keys(conversions);function wrapRaw(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}return fn(args);};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}var result=fn(args);// we\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models.forEach(function(fromModel){convert[fromModel]={};Object.defineProperty(convert[fromModel],\'channels\',{value:conversions[fromModel].channels});Object.defineProperty(convert[fromModel],\'labels\',{value:conversions[fromModel].labels});var routes=route(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn);convert[fromModel][toModel].raw=wrapRaw(fn);});});var colorConvert=convert;var ansiStyles=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(colorConvert,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(colorConvert,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(colorConvert,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],// Bright color\nredBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Fix humans\nstyles.color.grey=styles.color.gray;for(var _i2=0,_Object$keys=Object.keys(styles);_i2<_Object$keys.length;_i2++){var groupName=_Object$keys[_i2];var _group=styles[groupName];for(var _i3=0,_Object$keys2=Object.keys(_group);_i3<_Object$keys2.length;_i3++){var styleName=_Object$keys2[_i3];var _style=_group[styleName];styles[styleName]={open:"\\x1B[".concat(_style[0],"m"),close:"\\x1B[".concat(_style[1],"m")};_group[styleName]=styles[styleName];codes.set(_style[0],_style[1]);}Object.defineProperty(styles,groupName,{value:_group,enumerable:false});Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});}var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";styles.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};styles.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};styles.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};styles.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};styles.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};styles.bgColor.ansi16m={rgb:wrapAnsi16m(rgb2rgb,10)};for(var _i4=0,_Object$keys3=Object.keys(colorConvert);_i4<_Object$keys3.length;_i4++){var key=_Object$keys3[_i4];if((0,_typeof3.default)(colorConvert[key])!==\'object\'){continue;}var suite=colorConvert[key];if(key===\'ansi16\'){key=\'ansi\';}if(\'ansi16\'in suite){styles.color.ansi[key]=wrapAnsi16(suite.ansi16,0);styles.bgColor.ansi[key]=wrapAnsi16(suite.ansi16,10);}if(\'ansi256\'in suite){styles.color.ansi256[key]=wrapAnsi256(suite.ansi256,0);styles.bgColor.ansi256[key]=wrapAnsi256(suite.ansi256,10);}if(\'rgb\'in suite){styles.color.ansi16m[key]=wrapAnsi16m(suite.rgb,0);styles.bgColor.ansi16m[key]=wrapAnsi16m(suite.rgb,10);}}return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var require$$0$1={EOL:"\\n"};var hasFlag=function hasFlag(flag,argv){argv=argv||process.argv;var prefix=flag.startsWith(\'-\')?\'\':flag.length===1?\'-\':\'--\';var pos=argv.indexOf(prefix+flag);var terminatorPos=argv.indexOf(\'--\');return pos!==-1&&(terminatorPos===-1?true:pos<terminatorPos);};var env$1=process.env;var forceColor;if(hasFlag(\'no-color\')||hasFlag(\'no-colors\')||hasFlag(\'color=false\')){forceColor=false;}else if(hasFlag(\'color\')||hasFlag(\'colors\')||hasFlag(\'color=true\')||hasFlag(\'color=always\')){forceColor=true;}if(\'FORCE_COLOR\'in env$1){forceColor=env$1.FORCE_COLOR.length===0||parseInt(env$1.FORCE_COLOR,10)!==0;}function translateLevel(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor(stream){if(forceColor===false){return 0;}if(hasFlag(\'color=16m\')||hasFlag(\'color=full\')||hasFlag(\'color=truecolor\')){return 3;}if(hasFlag(\'color=256\')){return 2;}if(stream&&!stream.isTTY&&forceColor!==true){return 0;}var min=forceColor?1:0;if(process.platform===\'win32\'){// Node.js 7.5.0 is the first version of Node.js to include a patch to\n// libuv that enables 256 color output on Windows. Anything earlier and it\n// won\'t work. However, here we target Node.js 8 at minimum as it is an LTS\n// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n// release that supports 256 colors. Windows 10 build 14931 is the first release\n// that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(process.versions.node.split(\'.\')[0])>=8&&Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$1){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$1;})||env$1.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$1){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$1.TEAMCITY_VERSION)?1:0;}if(env$1.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$1){var _version=parseInt((env$1.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$1.TERM_PROGRAM){case\'iTerm.app\':return _version>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$1.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$1.TERM)){return 1;}if(\'COLORTERM\'in env$1){return 1;}if(env$1.TERM===\'dumb\'){return min;}return min;}function getSupportLevel(stream){var level=supportsColor(stream);return translateLevel(level);}var supportsColor_1={supportsColor:getSupportLevel,stdout:getSupportLevel(process.stdout),stderr:getSupportLevel(process.stderr)};var TEMPLATE_REGEX=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape(c){if(c[0]===\'u\'&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}return ESCAPES.get(c)||c;}function parseArguments(name,args){var results=[];var chunks=args.trim().split(/\\s*,\\s*/g);var matches;var _iterator=_createForOfIteratorHelper(chunks),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var chunk=_step.value;if(!isNaN(chunk)){results.push(Number(chunk));}else if(matches=chunk.match(STRING_REGEX)){results.push(matches[2].replace(ESCAPE_REGEX,function(m,escape,chr){return escape?unescape(escape):chr;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return results;}function parseStyle(style){STYLE_REGEX.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX.exec(style))!==null){var _name=matches[1];if(matches[2]){var args=parseArguments(_name,matches[2]);results.push([_name].concat(args));}else{results.push([_name]);}}return results;}function buildStyle(chalk,styles){var enabled={};var _iterator2=_createForOfIteratorHelper(styles),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var layer=_step2.value;var _iterator3=_createForOfIteratorHelper(layer.styles),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _style2=_step3.value;enabled[_style2[0]]=layer.inverse?null:_style2.slice(1);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var current=chalk;for(var _i5=0,_Object$keys4=Object.keys(enabled);_i5<_Object$keys4.length;_i5++){var styleName=_Object$keys4[_i5];if(Array.isArray(enabled[styleName])){if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}if(enabled[styleName].length>0){current=current[styleName].apply(current,enabled[styleName]);}else{current=current[styleName];}}}return current;}var templates=function templates(chalk,tmp){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntmp.replace(TEMPLATE_REGEX,function(m,escapeChar,inverse,style,close,chr){if(escapeChar){chunk.push(unescape(escapeChar));}else if(style){var str=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?str:buildStyle(chalk,styles)(str));styles.push({inverse:inverse,styles:parseStyle(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(chr);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMsg="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMsg);}return chunks.join(\'\');};var chalk=createCommonjsModule(function(module){var stdoutColor=supportsColor_1.stdout;var isSimpleWindowsTerm=process.platform===\'win32\'&&!(process.env.TERM||\'\').toLowerCase().startsWith(\'xterm\');// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];// `color-convert` models to exclude from the Chalk API due to conflicts and such\nvar skipModels=new Set([\'gray\']);var styles=Object.create(null);function applyOptions(obj,options){options=options||{};// Detect level if not set manually\nvar scLevel=stdoutColor?stdoutColor.level:0;obj.level=options.level===undefined?scLevel:options.level;obj.enabled=\'enabled\'in options?options.enabled:obj.level>0;}function Chalk(options){// We check for this.template here since calling `chalk.constructor()`\n// by itself will have a `this` of a previously constructed chalk object\nif(!this||!(this instanceof Chalk)||this.template){var _chalk2={};applyOptions(_chalk2,options);_chalk2.template=function(){var args=[].slice.call(arguments);return chalkTag.apply(null,[_chalk2.template].concat(args));};Object.setPrototypeOf(_chalk2,Chalk.prototype);Object.setPrototypeOf(_chalk2.template,_chalk2);_chalk2.template.constructor=Chalk;return _chalk2.template;}applyOptions(this,options);}// Use bright blue on Windows as the normal blue color is illegible\nif(isSimpleWindowsTerm){ansiStyles.blue.open="\\x1B[94m";}var _loop2=function _loop2(){var key=_Object$keys5[_i6];ansiStyles[key].closeRe=new RegExp(escapeStringRegexp(ansiStyles[key].close),\'g\');styles[key]={get:function get(){var codes=ansiStyles[key];return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,key);}};};for(var _i6=0,_Object$keys5=Object.keys(ansiStyles);_i6<_Object$keys5.length;_i6++){_loop2();}styles.visible={get:function get(){return build.call(this,this._styles||[],true,\'visible\');}};ansiStyles.color.closeRe=new RegExp(escapeStringRegexp(ansiStyles.color.close),\'g\');var _loop3=function _loop3(){var model=_Object$keys6[_i7];if(skipModels.has(model)){return"continue";}styles[model]={get:function get(){var level=this.level;return function(){var open=ansiStyles.color[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles.color.close,closeRe:ansiStyles.color.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i7=0,_Object$keys6=Object.keys(ansiStyles.color.ansi);_i7<_Object$keys6.length;_i7++){var _ret=_loop3();if(_ret==="continue")continue;}ansiStyles.bgColor.closeRe=new RegExp(escapeStringRegexp(ansiStyles.bgColor.close),\'g\');var _loop4=function _loop4(){var model=_Object$keys7[_i8];if(skipModels.has(model)){return"continue";}var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var open=ansiStyles.bgColor[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles.bgColor.close,closeRe:ansiStyles.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i8=0,_Object$keys7=Object.keys(ansiStyles.bgColor.ansi);_i8<_Object$keys7.length;_i8++){var _ret2=_loop4();if(_ret2==="continue")continue;}var proto=Object.defineProperties(function(){},styles);function build(_styles,_empty,key){var builder=function builder(){return applyStyle.apply(builder,arguments);};builder._styles=_styles;builder._empty=_empty;var self=this;Object.defineProperty(builder,\'level\',{enumerable:true,get:function get(){return self.level;},set:function set(level){self.level=level;}});Object.defineProperty(builder,\'enabled\',{enumerable:true,get:function get(){return self.enabled;},set:function set(enabled){self.enabled=enabled;}});// See below for fix regarding invisible grey/dim combination on Windows\nbuilder.hasGrey=this.hasGrey||key===\'gray\'||key===\'grey\';// `__proto__` is used because we must return a function, but there is\n// no way to create a function with a different prototype\nbuilder.__proto__=proto;// eslint-disable-line no-proto\nreturn builder;}function applyStyle(){// Support varags, but simply cast to string in case there\'s only one arg\nvar args=arguments;var argsLen=args.length;var str=String(arguments[0]);if(argsLen===0){return\'\';}if(argsLen>1){// Don\'t slice `arguments`, it prevents V8 optimizations\nfor(var _a4=1;_a4<argsLen;_a4++){str+=\' \'+args[_a4];}}if(!this.enabled||this.level<=0||!str){return this._empty?\'\':str;}// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n// see https://github.com/chalk/chalk/issues/58\n// If we\'re on Windows and we\'re dealing with a gray color, temporarily make \'dim\' a noop.\nvar originalDim=ansiStyles.dim.open;if(isSimpleWindowsTerm&&this.hasGrey){ansiStyles.dim.open=\'\';}var _iterator4=_createForOfIteratorHelper(this._styles.slice().reverse()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _code=_step4.value;// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstr=_code.open+str.replace(_code.closeRe,_code.open)+_code.close;// Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS\n// https://github.com/chalk/chalk/pull/92\nstr=str.replace(/\\r?\\n/g,"".concat(_code.close,"$&").concat(_code.open));}// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n}catch(err){_iterator4.e(err);}finally{_iterator4.f();}ansiStyles.dim.open=originalDim;return str;}function chalkTag(chalk,strings){if(!Array.isArray(strings)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn[].slice.call(arguments,1).join(\' \');}var args=[].slice.call(arguments,2);var parts=[strings.raw[0]];for(var i=1;i<strings.length;i++){parts.push(String(args[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'));parts.push(String(strings.raw[i]));}return templates(chalk,parts.join(\'\'));}Object.defineProperties(Chalk.prototype,styles);module.exports=Chalk();// eslint-disable-line new-cap\nmodule.exports.supportsColor=stdoutColor;module.exports.default=module.exports;// For TypeScript\n});var chalk_1=chalk.supportsColor;var common=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.commonDeprecatedHandler=function(keyOrPair,redirectTo,_ref6){var descriptor=_ref6.descriptor;var messages=["".concat(chalk.default.yellow(typeof keyOrPair===\'string\'?descriptor.key(keyOrPair):descriptor.pair(keyOrPair))," is deprecated")];if(redirectTo){messages.push("we now treat it as ".concat(chalk.default.blue(typeof redirectTo===\'string\'?descriptor.key(redirectTo):descriptor.pair(redirectTo))));}return messages.join(\'; \')+\'.\';};});unwrapExports(common);var common_1=common.commonDeprecatedHandler;var deprecated=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(common,exports);});unwrapExports(deprecated);var common$1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.commonInvalidHandler=function(key,value,utils){return["Invalid ".concat(chalk.default.red(utils.descriptor.key(key))," value."),"Expected ".concat(chalk.default.blue(utils.schemas[key].expected(utils)),","),"but received ".concat(chalk.default.red(utils.descriptor.value(value)),".")].join(\' \');};});unwrapExports(common$1);var common_1$1=common$1.commonInvalidHandler;var invalid=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(common$1,exports);});unwrapExports(invalid);/* eslint-disable no-nested-ternary */var arr=[];var charCodeCache=[];var leven=function leven(a,b){if(a===b){return 0;}var swap=a;// Swapping the strings if `a` is longer than `b` so we know which one is the\n// shortest & which one is the longest\nif(a.length>b.length){a=b;b=swap;}var aLen=a.length;var bLen=b.length;if(aLen===0){return bLen;}if(bLen===0){return aLen;}// Performing suffix trimming:\n// We can linearly drop suffix common to both strings since they\n// don\'t increase distance at all\n// Note: `~-` is the bitwise way to perform a `- 1` operation\nwhile(aLen>0&&a.charCodeAt(~-aLen)===b.charCodeAt(~-bLen)){aLen--;bLen--;}if(aLen===0){return bLen;}// Performing prefix trimming\n// We can linearly drop prefix common to both strings since they\n// don\'t increase distance at all\nvar start=0;while(start<aLen&&a.charCodeAt(start)===b.charCodeAt(start)){start++;}aLen-=start;bLen-=start;if(aLen===0){return bLen;}var bCharCode;var ret;var tmp;var tmp2;var i=0;var j=0;while(i<aLen){charCodeCache[start+i]=a.charCodeAt(start+i);arr[i]=++i;}while(j<bLen){bCharCode=b.charCodeAt(start+j);tmp=j++;ret=j;for(i=0;i<aLen;i++){tmp2=bCharCode===charCodeCache[start+i]?tmp:tmp+1;tmp=arr[i];ret=arr[i]=tmp>ret?tmp2>ret?ret+1:tmp2:tmp2>tmp?tmp+1:tmp2;}}return ret;};var leven_1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.levenUnknownHandler=function(key,value,_ref7){var descriptor=_ref7.descriptor,logger=_ref7.logger,schemas=_ref7.schemas;var messages=["Ignored unknown option ".concat(chalk.default.yellow(descriptor.pair({key:key,value:value})),".")];var suggestion=Object.keys(schemas).sort().find(function(knownKey){return leven(key,knownKey)<3;});if(suggestion){messages.push("Did you mean ".concat(chalk.default.blue(descriptor.key(suggestion)),"?"));}logger.warn(messages.join(\' \'));};});unwrapExports(leven_1);var leven_2=leven_1.levenUnknownHandler;var unknown=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(leven_1,exports);});unwrapExports(unknown);var handlers=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(deprecated,exports);tslib_1.__exportStar(invalid,exports);tslib_1.__exportStar(unknown,exports);});unwrapExports(handlers);var schema=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var HANDLER_KEYS=[\'default\',\'expected\',\'validate\',\'deprecated\',\'forward\',\'redirect\',\'overlap\',\'preprocess\',\'postprocess\'];function createSchema(SchemaConstructor,parameters){var schema=new SchemaConstructor(parameters);var subSchema=Object.create(schema);var _iterator5=_createForOfIteratorHelper(HANDLER_KEYS),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var handlerKey=_step5.value;if(handlerKey in parameters){subSchema[handlerKey]=normalizeHandler(parameters[handlerKey],schema,Schema.prototype[handlerKey].length);}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return subSchema;}exports.createSchema=createSchema;var Schema=/*#__PURE__*/function(){function Schema(parameters){(0,_classCallCheck2.default)(this,Schema);this.name=parameters.name;}(0,_createClass2.default)(Schema,[{key:"default",value:function _default(_utils){return undefined;}// istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n},{key:"expected",value:function expected(_utils){return\'nothing\';}// istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n},{key:"validate",value:function validate(_value,_utils){return false;}},{key:"deprecated",value:function deprecated(_value,_utils){return false;}},{key:"forward",value:function forward(_value,_utils){return undefined;}},{key:"redirect",value:function redirect(_value,_utils){return undefined;}},{key:"overlap",value:function overlap(currentValue,_newValue,_utils){return currentValue;}},{key:"preprocess",value:function preprocess(value,_utils){return value;}},{key:"postprocess",value:function postprocess(value,_utils){return value;}}],[{key:"create",value:function create(parameters){// @ts-ignore: https://github.com/Microsoft/TypeScript/issues/5863\nreturn createSchema(this,parameters);}}]);return Schema;}();exports.Schema=Schema;function normalizeHandler(handler,superSchema,handlerArgumentsLength){return typeof handler===\'function\'?function(){for(var _len2=arguments.length,args=new Array(_len2),_key3=0;_key3<_len2;_key3++){args[_key3]=arguments[_key3];}return handler.apply(void 0,(0,_toConsumableArray3.default)(args.slice(0,handlerArgumentsLength-1)).concat([superSchema],(0,_toConsumableArray3.default)(args.slice(handlerArgumentsLength-1))));}:function(){return handler;};}});unwrapExports(schema);var schema_1=schema.createSchema;var schema_2=schema.Schema;var alias=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var AliasSchema=/*#__PURE__*/function(_schema$Schema){(0,_inherits2.default)(AliasSchema,_schema$Schema);var _super4=_createSuper(AliasSchema);function AliasSchema(parameters){var _this;(0,_classCallCheck2.default)(this,AliasSchema);_this=_super4.call(this,parameters);_this._sourceName=parameters.sourceName;return _this;}(0,_createClass2.default)(AliasSchema,[{key:"expected",value:function expected(utils){return utils.schemas[this._sourceName].expected(utils);}},{key:"validate",value:function validate(value,utils){return utils.schemas[this._sourceName].validate(value,utils);}},{key:"redirect",value:function redirect(_value,_utils){return this._sourceName;}}]);return AliasSchema;}(schema.Schema);exports.AliasSchema=AliasSchema;});unwrapExports(alias);var alias_1=alias.AliasSchema;var any=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var AnySchema=/*#__PURE__*/function(_schema$Schema2){(0,_inherits2.default)(AnySchema,_schema$Schema2);var _super5=_createSuper(AnySchema);function AnySchema(){(0,_classCallCheck2.default)(this,AnySchema);return _super5.apply(this,arguments);}(0,_createClass2.default)(AnySchema,[{key:"expected",value:function expected(){return\'anything\';}},{key:"validate",value:function validate(){return true;}}]);return AnySchema;}(schema.Schema);exports.AnySchema=AnySchema;});unwrapExports(any);var any_1=any.AnySchema;var array=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ArraySchema=/*#__PURE__*/function(_schema$Schema3){(0,_inherits2.default)(ArraySchema,_schema$Schema3);var _super6=_createSuper(ArraySchema);function ArraySchema(_a){var _this2;(0,_classCallCheck2.default)(this,ArraySchema);var valueSchema=_a.valueSchema,_a$name=_a.name,name=_a$name===void 0?valueSchema.name:_a$name,handlers=tslib_1.__rest(_a,["valueSchema","name"]);_this2=_super6.call(this,Object.assign({},handlers,{name:name}));_this2._valueSchema=valueSchema;return _this2;}(0,_createClass2.default)(ArraySchema,[{key:"expected",value:function expected(utils){return"an array of ".concat(this._valueSchema.expected(utils));}},{key:"validate",value:function validate(value,utils){if(!Array.isArray(value)){return false;}var invalidValues=[];var _iterator6=_createForOfIteratorHelper(value),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var subValue=_step6.value;var subValidateResult=utils.normalizeValidateResult(this._valueSchema.validate(subValue,utils),subValue);if(subValidateResult!==true){invalidValues.push(subValidateResult.value);}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}return invalidValues.length===0?true:{value:invalidValues};}},{key:"deprecated",value:function deprecated(value,utils){var deprecatedResult=[];var _iterator7=_createForOfIteratorHelper(value),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var subValue=_step7.value;var subDeprecatedResult=utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue,utils),subValue);if(subDeprecatedResult!==false){deprecatedResult.push.apply(deprecatedResult,(0,_toConsumableArray3.default)(subDeprecatedResult.map(function(_ref8){var deprecatedValue=_ref8.value;return{value:[deprecatedValue]};})));}}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return deprecatedResult;}},{key:"forward",value:function forward(value,utils){var forwardResult=[];var _iterator8=_createForOfIteratorHelper(value),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var subValue=_step8.value;var subForwardResult=utils.normalizeForwardResult(this._valueSchema.forward(subValue,utils),subValue);forwardResult.push.apply(forwardResult,(0,_toConsumableArray3.default)(subForwardResult.map(wrapTransferResult)));}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return forwardResult;}},{key:"redirect",value:function redirect(value,utils){var remain=[];var redirect=[];var _iterator9=_createForOfIteratorHelper(value),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var subValue=_step9.value;var subRedirectResult=utils.normalizeRedirectResult(this._valueSchema.redirect(subValue,utils),subValue);if(\'remain\'in subRedirectResult){remain.push(subRedirectResult.remain);}redirect.push.apply(redirect,(0,_toConsumableArray3.default)(subRedirectResult.redirect.map(wrapTransferResult)));}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}return remain.length===0?{redirect:redirect}:{redirect:redirect,remain:remain};}},{key:"overlap",value:function overlap(currentValue,newValue){return currentValue.concat(newValue);}}]);return ArraySchema;}(schema.Schema);exports.ArraySchema=ArraySchema;function wrapTransferResult(_ref9){var from=_ref9.from,to=_ref9.to;return{from:[from],to:to};}});unwrapExports(array);var array_1=array.ArraySchema;var boolean_1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var BooleanSchema=/*#__PURE__*/function(_schema$Schema4){(0,_inherits2.default)(BooleanSchema,_schema$Schema4);var _super7=_createSuper(BooleanSchema);function BooleanSchema(){(0,_classCallCheck2.default)(this,BooleanSchema);return _super7.apply(this,arguments);}(0,_createClass2.default)(BooleanSchema,[{key:"expected",value:function expected(){return\'true or false\';}},{key:"validate",value:function validate(value){return typeof value===\'boolean\';}}]);return BooleanSchema;}(schema.Schema);exports.BooleanSchema=BooleanSchema;});unwrapExports(boolean_1);var boolean_2=boolean_1.BooleanSchema;var utils=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});function recordFromArray(array,mainKey){var record=Object.create(null);var _iterator10=_createForOfIteratorHelper(array),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var value=_step10.value;var key=value[mainKey];// istanbul ignore next\nif(record[key]){throw new Error("Duplicate ".concat(mainKey," ").concat(JSON.stringify(key)));}// @ts-ignore\nrecord[key]=value;}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}return record;}exports.recordFromArray=recordFromArray;function mapFromArray(array,mainKey){var map=new Map();var _iterator11=_createForOfIteratorHelper(array),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var value=_step11.value;var key=value[mainKey];// istanbul ignore next\nif(map.has(key)){throw new Error("Duplicate ".concat(mainKey," ").concat(JSON.stringify(key)));}map.set(key,value);}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}return map;}exports.mapFromArray=mapFromArray;function createAutoChecklist(){var map=Object.create(null);return function(id){var idString=JSON.stringify(id);if(map[idString]){return true;}map[idString]=true;return false;};}exports.createAutoChecklist=createAutoChecklist;function partition(array,predicate){var trueArray=[];var falseArray=[];var _iterator12=_createForOfIteratorHelper(array),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var value=_step12.value;if(predicate(value)){trueArray.push(value);}else{falseArray.push(value);}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}return[trueArray,falseArray];}exports.partition=partition;function isInt(value){return value===Math.floor(value);}exports.isInt=isInt;function comparePrimitive(a,b){if(a===b){return 0;}var typeofA=(0,_typeof3.default)(a);var typeofB=(0,_typeof3.default)(b);var orders=[\'undefined\',\'object\',\'boolean\',\'number\',\'string\'];if(typeofA!==typeofB){return orders.indexOf(typeofA)-orders.indexOf(typeofB);}if(typeofA!==\'string\'){return Number(a)-Number(b);}return a.localeCompare(b);}exports.comparePrimitive=comparePrimitive;function normalizeDefaultResult(result){return result===undefined?{}:result;}exports.normalizeDefaultResult=normalizeDefaultResult;function normalizeValidateResult(result,value){return result===true?true:result===false?{value:value}:result;}exports.normalizeValidateResult=normalizeValidateResult;function normalizeDeprecatedResult(result,value){var doNotNormalizeTrue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return result===false?false:result===true?doNotNormalizeTrue?true:[{value:value}]:\'value\'in result?[result]:result.length===0?false:result;}exports.normalizeDeprecatedResult=normalizeDeprecatedResult;function normalizeTransferResult(result,value){return typeof result===\'string\'||\'key\'in result?{from:value,to:result}:\'from\'in result?{from:result.from,to:result.to}:{from:value,to:result.to};}exports.normalizeTransferResult=normalizeTransferResult;function normalizeForwardResult(result,value){return result===undefined?[]:Array.isArray(result)?result.map(function(transferResult){return normalizeTransferResult(transferResult,value);}):[normalizeTransferResult(result,value)];}exports.normalizeForwardResult=normalizeForwardResult;function normalizeRedirectResult(result,value){var redirect=normalizeForwardResult((0,_typeof3.default)(result)===\'object\'&&\'redirect\'in result?result.redirect:result,value);return redirect.length===0?{remain:value,redirect:redirect}:(0,_typeof3.default)(result)===\'object\'&&\'remain\'in result?{remain:result.remain,redirect:redirect}:{redirect:redirect};}exports.normalizeRedirectResult=normalizeRedirectResult;});unwrapExports(utils);var utils_1=utils.recordFromArray;var utils_2=utils.mapFromArray;var utils_3=utils.createAutoChecklist;var utils_4=utils.partition;var utils_5=utils.isInt;var utils_6=utils.comparePrimitive;var utils_7=utils.normalizeDefaultResult;var utils_8=utils.normalizeValidateResult;var utils_9=utils.normalizeDeprecatedResult;var utils_10=utils.normalizeTransferResult;var utils_11=utils.normalizeForwardResult;var utils_12=utils.normalizeRedirectResult;var choice=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ChoiceSchema=/*#__PURE__*/function(_schema$Schema5){(0,_inherits2.default)(ChoiceSchema,_schema$Schema5);var _super8=_createSuper(ChoiceSchema);function ChoiceSchema(parameters){var _this3;(0,_classCallCheck2.default)(this,ChoiceSchema);_this3=_super8.call(this,parameters);_this3._choices=utils.mapFromArray(parameters.choices.map(function(choice){return choice&&(0,_typeof3.default)(choice)===\'object\'?choice:{value:choice};}),\'value\');return _this3;}(0,_createClass2.default)(ChoiceSchema,[{key:"expected",value:function expected(_ref10){var _this4=this;var descriptor=_ref10.descriptor;var choiceValues=Array.from(this._choices.keys()).map(function(value){return _this4._choices.get(value);}).filter(function(choiceInfo){return!choiceInfo.deprecated;}).map(function(choiceInfo){return choiceInfo.value;}).sort(utils.comparePrimitive).map(descriptor.value);var head=choiceValues.slice(0,-2);var tail=choiceValues.slice(-2);return head.concat(tail.join(\' or \')).join(\', \');}},{key:"validate",value:function validate(value){return this._choices.has(value);}},{key:"deprecated",value:function deprecated(value){var choiceInfo=this._choices.get(value);return choiceInfo&&choiceInfo.deprecated?{value:value}:false;}},{key:"forward",value:function forward(value){var choiceInfo=this._choices.get(value);return choiceInfo?choiceInfo.forward:undefined;}},{key:"redirect",value:function redirect(value){var choiceInfo=this._choices.get(value);return choiceInfo?choiceInfo.redirect:undefined;}}]);return ChoiceSchema;}(schema.Schema);exports.ChoiceSchema=ChoiceSchema;});unwrapExports(choice);var choice_1=choice.ChoiceSchema;var number=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var NumberSchema=/*#__PURE__*/function(_schema$Schema6){(0,_inherits2.default)(NumberSchema,_schema$Schema6);var _super9=_createSuper(NumberSchema);function NumberSchema(){(0,_classCallCheck2.default)(this,NumberSchema);return _super9.apply(this,arguments);}(0,_createClass2.default)(NumberSchema,[{key:"expected",value:function expected(){return\'a number\';}},{key:"validate",value:function validate(value,_utils){return typeof value===\'number\';}}]);return NumberSchema;}(schema.Schema);exports.NumberSchema=NumberSchema;});unwrapExports(number);var number_1=number.NumberSchema;var integer=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var IntegerSchema=/*#__PURE__*/function(_number$NumberSchema){(0,_inherits2.default)(IntegerSchema,_number$NumberSchema);var _super10=_createSuper(IntegerSchema);function IntegerSchema(){(0,_classCallCheck2.default)(this,IntegerSchema);return _super10.apply(this,arguments);}(0,_createClass2.default)(IntegerSchema,[{key:"expected",value:function expected(){return\'an integer\';}},{key:"validate",value:function validate(value,utils$1){return utils$1.normalizeValidateResult((0,_get3.default)((0,_getPrototypeOf2.default)(IntegerSchema.prototype),"validate",this).call(this,value,utils$1),value)===true&&utils.isInt(value);}}]);return IntegerSchema;}(number.NumberSchema);exports.IntegerSchema=IntegerSchema;});unwrapExports(integer);var integer_1=integer.IntegerSchema;var string=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var StringSchema=/*#__PURE__*/function(_schema$Schema7){(0,_inherits2.default)(StringSchema,_schema$Schema7);var _super11=_createSuper(StringSchema);function StringSchema(){(0,_classCallCheck2.default)(this,StringSchema);return _super11.apply(this,arguments);}(0,_createClass2.default)(StringSchema,[{key:"expected",value:function expected(){return\'a string\';}},{key:"validate",value:function validate(value){return typeof value===\'string\';}}]);return StringSchema;}(schema.Schema);exports.StringSchema=StringSchema;});unwrapExports(string);var string_1=string.StringSchema;var schemas=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(alias,exports);tslib_1.__exportStar(any,exports);tslib_1.__exportStar(array,exports);tslib_1.__exportStar(boolean_1,exports);tslib_1.__exportStar(choice,exports);tslib_1.__exportStar(integer,exports);tslib_1.__exportStar(number,exports);tslib_1.__exportStar(string,exports);});unwrapExports(schemas);var defaults=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.defaultDescriptor=api.apiDescriptor;exports.defaultUnknownHandler=leven_1.levenUnknownHandler;exports.defaultInvalidHandler=invalid.commonInvalidHandler;exports.defaultDeprecatedHandler=common.commonDeprecatedHandler;});unwrapExports(defaults);var defaults_1=defaults.defaultDescriptor;var defaults_2=defaults.defaultUnknownHandler;var defaults_3=defaults.defaultInvalidHandler;var defaults_4=defaults.defaultDeprecatedHandler;var normalize=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.normalize=function(options,schemas,opts){return new Normalizer(schemas,opts).normalize(options);};var Normalizer=/*#__PURE__*/function(){function Normalizer(schemas,opts){(0,_classCallCheck2.default)(this,Normalizer);// istanbul ignore next\nvar _ref11=opts||{},_ref11$logger=_ref11.logger,logger=_ref11$logger===void 0?console:_ref11$logger,_ref11$descriptor=_ref11.descriptor,descriptor=_ref11$descriptor===void 0?defaults.defaultDescriptor:_ref11$descriptor,_ref11$unknown=_ref11.unknown,unknown=_ref11$unknown===void 0?defaults.defaultUnknownHandler:_ref11$unknown,_ref11$invalid=_ref11.invalid,invalid=_ref11$invalid===void 0?defaults.defaultInvalidHandler:_ref11$invalid,_ref11$deprecated=_ref11.deprecated,deprecated=_ref11$deprecated===void 0?defaults.defaultDeprecatedHandler:_ref11$deprecated;this._utils={descriptor:descriptor,logger:/* istanbul ignore next */logger||{warn:function warn(){}},schemas:utils.recordFromArray(schemas,\'name\'),normalizeDefaultResult:utils.normalizeDefaultResult,normalizeDeprecatedResult:utils.normalizeDeprecatedResult,normalizeForwardResult:utils.normalizeForwardResult,normalizeRedirectResult:utils.normalizeRedirectResult,normalizeValidateResult:utils.normalizeValidateResult};this._unknownHandler=unknown;this._invalidHandler=invalid;this._deprecatedHandler=deprecated;this.cleanHistory();}(0,_createClass2.default)(Normalizer,[{key:"cleanHistory",value:function cleanHistory(){this._hasDeprecationWarned=utils.createAutoChecklist();}},{key:"normalize",value:function normalize(options){var _this5=this;var normalized={};var restOptionsArray=[options];var applyNormalization=function applyNormalization(){while(restOptionsArray.length!==0){var currentOptions=restOptionsArray.shift();var transferredOptionsArray=_this5._applyNormalization(currentOptions,normalized);restOptionsArray.push.apply(restOptionsArray,(0,_toConsumableArray3.default)(transferredOptionsArray));}};applyNormalization();for(var _i9=0,_Object$keys8=Object.keys(this._utils.schemas);_i9<_Object$keys8.length;_i9++){var key=_Object$keys8[_i9];var _schema=this._utils.schemas[key];if(!(key in normalized)){var defaultResult=utils.normalizeDefaultResult(_schema.default(this._utils));if(\'value\'in defaultResult){restOptionsArray.push((0,_defineProperty2.default)({},key,defaultResult.value));}}}applyNormalization();for(var _i10=0,_Object$keys9=Object.keys(this._utils.schemas);_i10<_Object$keys9.length;_i10++){var _key4=_Object$keys9[_i10];var _schema2=this._utils.schemas[_key4];if(_key4 in normalized){normalized[_key4]=_schema2.postprocess(normalized[_key4],this._utils);}}return normalized;}},{key:"_applyNormalization",value:function _applyNormalization(options,normalized){var _this6=this;var transferredOptionsArray=[];var _utils$partition=utils.partition(Object.keys(options),function(key){return key in _this6._utils.schemas;}),_utils$partition2=(0,_slicedToArray2.default)(_utils$partition,2),knownOptionNames=_utils$partition2[0],unknownOptionNames=_utils$partition2[1];var _iterator13=_createForOfIteratorHelper(knownOptionNames),_step13;try{var _loop5=function _loop5(){var key=_step13.value;var schema=_this6._utils.schemas[key];var value=schema.preprocess(options[key],_this6._utils);var validateResult=utils.normalizeValidateResult(schema.validate(value,_this6._utils),value);if(validateResult!==true){var invalidValue=validateResult.value;var errorMessageOrError=_this6._invalidHandler(key,invalidValue,_this6._utils);throw typeof errorMessageOrError===\'string\'?new Error(errorMessageOrError):/* istanbul ignore next*/errorMessageOrError;}var appendTransferredOptions=function appendTransferredOptions(_ref12){var from=_ref12.from,to=_ref12.to;transferredOptionsArray.push(typeof to===\'string\'?(0,_defineProperty2.default)({},to,from):(0,_defineProperty2.default)({},to.key,to.value));};var warnDeprecated=function warnDeprecated(_ref15){var currentValue=_ref15.value,redirectTo=_ref15.redirectTo;var deprecatedResult=utils.normalizeDeprecatedResult(schema.deprecated(currentValue,_this6._utils),value,/* doNotNormalizeTrue */true);if(deprecatedResult===false){return;}if(deprecatedResult===true){if(!_this6._hasDeprecationWarned(key)){_this6._utils.logger.warn(_this6._deprecatedHandler(key,redirectTo,_this6._utils));}}else{var _iterator15=_createForOfIteratorHelper(deprecatedResult),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var deprecatedValue=_step15.value.value;var pair={key:key,value:deprecatedValue};if(!_this6._hasDeprecationWarned(pair)){var redirectToPair=typeof redirectTo===\'string\'?{key:redirectTo,value:deprecatedValue}:redirectTo;_this6._utils.logger.warn(_this6._deprecatedHandler(pair,redirectToPair,_this6._utils));}}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}}};var forwardResult=utils.normalizeForwardResult(schema.forward(value,_this6._utils),value);forwardResult.forEach(appendTransferredOptions);var redirectResult=utils.normalizeRedirectResult(schema.redirect(value,_this6._utils),value);redirectResult.redirect.forEach(appendTransferredOptions);if(\'remain\'in redirectResult){var remainingValue=redirectResult.remain;normalized[key]=key in normalized?schema.overlap(normalized[key],remainingValue,_this6._utils):remainingValue;warnDeprecated({value:remainingValue});}var _iterator16=_createForOfIteratorHelper(redirectResult.redirect),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var _step16$value=_step16.value,_from=_step16$value.from,to=_step16$value.to;warnDeprecated({value:_from,redirectTo:to});}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}};for(_iterator13.s();!(_step13=_iterator13.n()).done;){_loop5();}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}var _iterator14=_createForOfIteratorHelper(unknownOptionNames),_step14;try{for(_iterator14.s();!(_step14=_iterator14.n()).done;){var key=_step14.value;var value=options[key];var unknownResult=this._unknownHandler(key,value,this._utils);if(unknownResult){for(var _i11=0,_Object$keys10=Object.keys(unknownResult);_i11<_Object$keys10.length;_i11++){var unknownKey=_Object$keys10[_i11];var unknownOption=(0,_defineProperty2.default)({},unknownKey,unknownResult[unknownKey]);if(unknownKey in this._utils.schemas){transferredOptionsArray.push(unknownOption);}else{Object.assign(normalized,unknownOption);}}}}}catch(err){_iterator14.e(err);}finally{_iterator14.f();}return transferredOptionsArray;}}]);return Normalizer;}();exports.Normalizer=Normalizer;});unwrapExports(normalize);var normalize_1=normalize.normalize;var normalize_2=normalize.Normalizer;var lib=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(descriptors,exports);tslib_1.__exportStar(handlers,exports);tslib_1.__exportStar(schemas,exports);tslib_1.__exportStar(normalize,exports);tslib_1.__exportStar(schema,exports);});unwrapExports(lib);var array$1=[];var charCodeCache$1=[];var leven$1=function leven$1(left,right){if(left===right){return 0;}var swap=left;// Swapping the strings if `a` is longer than `b` so we know which one is the\n// shortest & which one is the longest\nif(left.length>right.length){left=right;right=swap;}var leftLength=left.length;var rightLength=right.length;// Performing suffix trimming:\n// We can linearly drop suffix common to both strings since they\n// don\'t increase distance at all\n// Note: `~-` is the bitwise way to perform a `- 1` operation\nwhile(leftLength>0&&left.charCodeAt(~-leftLength)===right.charCodeAt(~-rightLength)){leftLength--;rightLength--;}// Performing prefix trimming\n// We can linearly drop prefix common to both strings since they\n// don\'t increase distance at all\nvar start=0;while(start<leftLength&&left.charCodeAt(start)===right.charCodeAt(start)){start++;}leftLength-=start;rightLength-=start;if(leftLength===0){return rightLength;}var bCharCode;var result;var temp;var temp2;var i=0;var j=0;while(i<leftLength){charCodeCache$1[i]=left.charCodeAt(start+i);array$1[i]=++i;}while(j<rightLength){bCharCode=right.charCodeAt(start+j);temp=j++;result=j;for(i=0;i<leftLength;i++){temp2=bCharCode===charCodeCache$1[i]?temp:temp+1;temp=array$1[i];// eslint-disable-next-line no-multi-assign\nresult=array$1[i]=temp>result?temp2>result?result+1:temp2:temp2>temp?temp+1:temp2;}}return result;};var leven_1$1=leven$1;// TODO: Remove this for the next major release\nvar default_1=leven$1;leven_1$1.default=default_1;var colorName$1={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};/* MIT license */ /* eslint-disable no-mixed-operators */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var _i12=0,_Object$keys11=Object.keys(colorName$1);_i12<_Object$keys11.length;_i12++){var key=_Object$keys11[_i12];reverseKeywords[colorName$1[key]]=key;}var convert$1={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};var conversions$1=convert$1;// Hide .channels and .labels properties\nfor(var _i13=0,_Object$keys12=Object.keys(convert$1);_i13<_Object$keys12.length;_i13++){var model=_Object$keys12[_i13];if(!(\'channels\'in convert$1[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert$1[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert$1[model].labels.length!==convert$1[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var _convert$1$model=convert$1[model],channels=_convert$1$model.channels,labels=_convert$1$model.labels;delete convert$1[model].channels;delete convert$1[model].labels;Object.defineProperty(convert$1[model],\'channels\',{value:channels});Object.defineProperty(convert$1[model],\'labels\',{value:labels});}convert$1.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}var l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert$1.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=0;s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert$1.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert$1.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert$1.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var k=Math.min(1-r,1-g,1-b);var c=(1-r-k)/(1-k)||0;var m=(1-g-k)/(1-k)||0;var y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};function comparativeDistance(x,y){/*\n    \tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n    */return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert$1.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var _i14=0,_Object$keys13=Object.keys(colorName$1);_i14<_Object$keys13.length;_i14++){var _keyword=_Object$keys13[_i14];var value=colorName$1[_keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=_keyword;}}return currentClosestKeyword;};convert$1.keyword.rgb=function(keyword){return colorName$1[keyword];};convert$1.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// Assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert$1.rgb.lab=function(rgb){var xyz=convert$1.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;var l=116*y-16;var a=500*(x-y);var b=200*(y-z);return[l,a,b];};convert$1.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t2;var t3;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}var t1=2*l-t2;var rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert$1.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;var v=(l+s)/2;var sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert$1.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert$1.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var sl;var l;l=(2-s)*v;var lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$1.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var f;// Wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}var i=Math.floor(6*h);var v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}var n=wh+f*(v-wh);// Linear interpolation\nvar r;var g;var b;/* eslint-disable max-statements-per-line,no-multi-spaces */switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}/* eslint-enable max-statements-per-line,no-multi-spaces */return[r*255,g*255,b*255];};convert$1.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r=1-Math.min(1,c*(1-k)+k);var g=1-Math.min(1,m*(1-k)+k);var b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert$1.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// Assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert$1.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;var l=116*y-16;var a=500*(x-y);var b=200*(y-z);return[l,a,b];};convert$1.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert$1.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var h;var hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}var c=Math.sqrt(a*a+b*b);return[l,c,h];};convert$1.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var hr=h/360*2*Math.PI;var a=c*Math.cos(hr);var b=c*Math.sin(hr);return[l,a,b];};convert$1.rgb.ansi16=function(args){var saturation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _args=(0,_slicedToArray2.default)(args,3),r=_args[0],g=_args[1],b=_args[2];var value=saturation===null?convert$1.rgb.hsv(args)[2]:saturation;// Hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert$1.hsv.ansi16=function(args){// Optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert$1.rgb.ansi16(convert$1.hsv.rgb(args),args[2]);};convert$1.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// We use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert$1.ansi16.rgb=function(args){var color=args%10;// Handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert$1.ansi256.rgb=function(args){// Handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert$1.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert$1.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert$1.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert$1.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=l<0.5?2.0*s*l:2.0*s*(1.0-l);var f=0;if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert$1.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert$1.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;/* eslint-disable max-statements-per-line */switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}/* eslint-enable max-statements-per-line */mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert$1.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert$1.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert$1.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert$1.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert$1.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert$1.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert$1.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert$1.gray.hsl=function(args){return[0,0,args[0]];};convert$1.gray.hsv=convert$1.gray.hsl;convert$1.gray.hwb=function(gray){return[0,100,gray[0]];};convert$1.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert$1.gray.lab=function(gray){return[gray[0],0,0];};convert$1.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert$1.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};/*\n  \tThis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph$1(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions$1);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS$1(fromModel){var graph=buildGraph$1();var queue=[fromModel];// Unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions$1[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link$1(from,to){return function(args){return to(from(args));};}function wrapConversion$1(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions$1[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link$1(conversions$1[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route$1=function route(fromModel){var graph=deriveBFS$1(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// No possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion$1(toModel,graph);}return conversion;};var convert$2={};var models$1=Object.keys(conversions$1);function wrapRaw$1(fn){var wrappedFn=function wrappedFn(){for(var _len3=arguments.length,args=new Array(_len3),_key5=0;_key5<_len3;_key5++){args[_key5]=arguments[_key5];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}return fn(args);};// Preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded$1(fn){var wrappedFn=function wrappedFn(){for(var _len4=arguments.length,args=new Array(_len4),_key6=0;_key6<_len4;_key6++){args[_key6]=arguments[_key6];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}var result=fn(args);// We\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// Preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models$1.forEach(function(fromModel){convert$2[fromModel]={};Object.defineProperty(convert$2[fromModel],\'channels\',{value:conversions$1[fromModel].channels});Object.defineProperty(convert$2[fromModel],\'labels\',{value:conversions$1[fromModel].labels});var routes=route$1(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert$2[fromModel][toModel]=wrapRounded$1(fn);convert$2[fromModel][toModel].raw=wrapRaw$1(fn);});});var colorConvert$1=convert$2;var ansiStyles$1=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(void 0,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(void 0,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(void 0,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};var setLazyProperty=function setLazyProperty(object,property,_get){Object.defineProperty(object,property,{get:function get(){var value=_get();Object.defineProperty(object,property,{value:value,enumerable:true,configurable:true});return value;},enumerable:true,configurable:true});};/** @type {typeof import(\'color-convert\')} */var colorConvert;var makeDynamicStyles=function makeDynamicStyles(wrap,targetSpace,identity,isBackground){if(colorConvert===undefined){colorConvert=colorConvert$1;}var offset=isBackground?10:0;var styles={};for(var _i15=0,_Object$entries=Object.entries(colorConvert);_i15<_Object$entries.length;_i15++){var _Object$entries$_i=(0,_slicedToArray2.default)(_Object$entries[_i15],2),sourceSpace=_Object$entries$_i[0],suite=_Object$entries$_i[1];var _name2=sourceSpace===\'ansi16\'?\'ansi\':sourceSpace;if(sourceSpace===targetSpace){styles[_name2]=wrap(identity,offset);}else if((0,_typeof3.default)(suite)===\'object\'){styles[_name2]=wrap(suite[targetSpace],offset);}}return styles;};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],// Bright color\nblackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Alias bright black as gray (and grey)\nstyles.color.gray=styles.color.blackBright;styles.bgColor.bgGray=styles.bgColor.bgBlackBright;styles.color.grey=styles.color.blackBright;styles.bgColor.bgGrey=styles.bgColor.bgBlackBright;for(var _i16=0,_Object$entries2=Object.entries(styles);_i16<_Object$entries2.length;_i16++){var _Object$entries2$_i=(0,_slicedToArray2.default)(_Object$entries2[_i16],2),groupName=_Object$entries2$_i[0],_group2=_Object$entries2$_i[1];for(var _i17=0,_Object$entries3=Object.entries(_group2);_i17<_Object$entries3.length;_i17++){var _Object$entries3$_i=(0,_slicedToArray2.default)(_Object$entries3[_i17],2),styleName=_Object$entries3$_i[0],_style3=_Object$entries3$_i[1];styles[styleName]={open:"\\x1B[".concat(_style3[0],"m"),close:"\\x1B[".concat(_style3[1],"m")};_group2[styleName]=styles[styleName];codes.set(_style3[0],_style3[1]);}Object.defineProperty(styles,groupName,{value:_group2,enumerable:false});}Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";setLazyProperty(styles.color,\'ansi\',function(){return makeDynamicStyles(wrapAnsi16,\'ansi16\',ansi2ansi,false);});setLazyProperty(styles.color,\'ansi256\',function(){return makeDynamicStyles(wrapAnsi256,\'ansi256\',ansi2ansi,false);});setLazyProperty(styles.color,\'ansi16m\',function(){return makeDynamicStyles(wrapAnsi16m,\'rgb\',rgb2rgb,false);});setLazyProperty(styles.bgColor,\'ansi\',function(){return makeDynamicStyles(wrapAnsi16,\'ansi16\',ansi2ansi,true);});setLazyProperty(styles.bgColor,\'ansi256\',function(){return makeDynamicStyles(wrapAnsi256,\'ansi256\',ansi2ansi,true);});setLazyProperty(styles.bgColor,\'ansi16m\',function(){return makeDynamicStyles(wrapAnsi16m,\'rgb\',rgb2rgb,true);});return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var tty={isatty:function isatty(){return false;}};var hasFlag$1=function hasFlag$1(flag){var argv=arguments.length>1&&arguments[1]!==undefined?arguments[1]:process.argv;var prefix=flag.startsWith(\'-\')?\'\':flag.length===1?\'-\':\'--\';var position=argv.indexOf(prefix+flag);var terminatorPosition=argv.indexOf(\'--\');return position!==-1&&(terminatorPosition===-1||position<terminatorPosition);};var env$2=process.env;var forceColor$1;if(hasFlag$1(\'no-color\')||hasFlag$1(\'no-colors\')||hasFlag$1(\'color=false\')||hasFlag$1(\'color=never\')){forceColor$1=0;}else if(hasFlag$1(\'color\')||hasFlag$1(\'colors\')||hasFlag$1(\'color=true\')||hasFlag$1(\'color=always\')){forceColor$1=1;}if(\'FORCE_COLOR\'in env$2){if(env$2.FORCE_COLOR===\'true\'){forceColor$1=1;}else if(env$2.FORCE_COLOR===\'false\'){forceColor$1=0;}else{forceColor$1=env$2.FORCE_COLOR.length===0?1:Math.min(parseInt(env$2.FORCE_COLOR,10),3);}}function translateLevel$1(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor$1(haveStream,streamIsTTY){if(forceColor$1===0){return 0;}if(hasFlag$1(\'color=16m\')||hasFlag$1(\'color=full\')||hasFlag$1(\'color=truecolor\')){return 3;}if(hasFlag$1(\'color=256\')){return 2;}if(haveStream&&!streamIsTTY&&forceColor$1===undefined){return 0;}var min=forceColor$1||0;if(env$2.TERM===\'dumb\'){return min;}if(process.platform===\'win32\'){// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$2){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$2;})||env$2.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$2){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$2.TEAMCITY_VERSION)?1:0;}if(\'GITHUB_ACTIONS\'in env$2){return 1;}if(env$2.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$2){var _version2=parseInt((env$2.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$2.TERM_PROGRAM){case\'iTerm.app\':return _version2>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$2.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$2.TERM)){return 1;}if(\'COLORTERM\'in env$2){return 1;}return min;}function getSupportLevel$1(stream){var level=supportsColor$1(stream,stream&&stream.isTTY);return translateLevel$1(level);}var supportsColor_1$1={supportsColor:getSupportLevel$1,stdout:translateLevel$1(supportsColor$1(true,tty.isatty(1))),stderr:translateLevel$1(supportsColor$1(true,tty.isatty(2)))};var stringReplaceAll=function stringReplaceAll(string,substring,replacer){var index=string.indexOf(substring);if(index===-1){return string;}var substringLength=substring.length;var endIndex=0;var returnValue=\'\';do{returnValue+=string.substr(endIndex,index-endIndex)+substring+replacer;endIndex=index+substringLength;index=string.indexOf(substring,endIndex);}while(index!==-1);returnValue+=string.substr(endIndex);return returnValue;};var stringEncaseCRLFWithFirstIndex=function stringEncaseCRLFWithFirstIndex(string,prefix,postfix,index){var endIndex=0;var returnValue=\'\';do{var gotCR=string[index-1]===\'\\r\';returnValue+=string.substr(endIndex,(gotCR?index-1:index)-endIndex)+prefix+(gotCR?\'\\r\\n\':\'\\n\')+postfix;endIndex=index+1;index=string.indexOf(\'\\n\',endIndex);}while(index!==-1);returnValue+=string.substr(endIndex);return returnValue;};var util={stringReplaceAll:stringReplaceAll,stringEncaseCRLFWithFirstIndex:stringEncaseCRLFWithFirstIndex};var TEMPLATE_REGEX$1=/(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX$1=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX$1=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX$1=/\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES$1=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape$1(c){var u=c[0]===\'u\';var bracket=c[1]===\'{\';if(u&&!bracket&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}if(u&&bracket){return String.fromCodePoint(parseInt(c.slice(2,-1),16));}return ESCAPES$1.get(c)||c;}function parseArguments$1(name,arguments_){var results=[];var chunks=arguments_.trim().split(/\\s*,\\s*/g);var matches;var _iterator17=_createForOfIteratorHelper(chunks),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var chunk=_step17.value;var _number=Number(chunk);if(!Number.isNaN(_number)){results.push(_number);}else if(matches=chunk.match(STRING_REGEX$1)){results.push(matches[2].replace(ESCAPE_REGEX$1,function(m,escape,character){return escape?unescape$1(escape):character;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator17.e(err);}finally{_iterator17.f();}return results;}function parseStyle$1(style){STYLE_REGEX$1.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX$1.exec(style))!==null){var _name3=matches[1];if(matches[2]){var args=parseArguments$1(_name3,matches[2]);results.push([_name3].concat(args));}else{results.push([_name3]);}}return results;}function buildStyle$1(chalk,styles){var enabled={};var _iterator18=_createForOfIteratorHelper(styles),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var layer=_step18.value;var _iterator19=_createForOfIteratorHelper(layer.styles),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var _style4=_step19.value;enabled[_style4[0]]=layer.inverse?null:_style4.slice(1);}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}}}catch(err){_iterator18.e(err);}finally{_iterator18.f();}var current=chalk;for(var _i18=0,_Object$entries4=Object.entries(enabled);_i18<_Object$entries4.length;_i18++){var _current;var _Object$entries4$_i=(0,_slicedToArray2.default)(_Object$entries4[_i18],2),styleName=_Object$entries4$_i[0],_styles2=_Object$entries4$_i[1];if(!Array.isArray(_styles2)){continue;}if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}current=_styles2.length>0?(_current=current)[styleName].apply(_current,(0,_toConsumableArray3.default)(_styles2)):current[styleName];}return current;}var templates$1=function templates$1(chalk,temporary){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntemporary.replace(TEMPLATE_REGEX$1,function(m,escapeCharacter,inverse,style,close,character){if(escapeCharacter){chunk.push(unescape$1(escapeCharacter));}else if(style){var _string=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?_string:buildStyle$1(chalk,styles)(_string));styles.push({inverse:inverse,styles:parseStyle$1(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle$1(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(character);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMessage="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMessage);}return chunks.join(\'\');};var stdoutColor=supportsColor_1$1.stdout,stderrColor=supportsColor_1$1.stderr;var stringReplaceAll$1=util.stringReplaceAll,stringEncaseCRLFWithFirstIndex$1=util.stringEncaseCRLFWithFirstIndex;// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];var styles=Object.create(null);var applyOptions=function applyOptions(object){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(options.level&&!(Number.isInteger(options.level)&&options.level>=0&&options.level<=3)){throw new Error(\'The `level` option should be an integer from 0 to 3\');}// Detect level if not set manually\nvar colorLevel=stdoutColor?stdoutColor.level:0;object.level=options.level===undefined?colorLevel:options.level;};var ChalkClass=/*#__PURE__*/(0,_createClass2.default)(function ChalkClass(options){(0,_classCallCheck2.default)(this,ChalkClass);// eslint-disable-next-line no-constructor-return\nreturn chalkFactory(options);});var chalkFactory=function chalkFactory(options){var chalk={};applyOptions(chalk,options);chalk.template=function(){for(var _len5=arguments.length,arguments_=new Array(_len5),_key7=0;_key7<_len5;_key7++){arguments_[_key7]=arguments[_key7];}return chalkTag.apply(void 0,[chalk.template].concat(arguments_));};Object.setPrototypeOf(chalk,Chalk.prototype);Object.setPrototypeOf(chalk.template,chalk);chalk.template.constructor=function(){throw new Error(\'`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.\');};chalk.template.Instance=ChalkClass;return chalk.template;};function Chalk(options){return chalkFactory(options);}var _loop6=function _loop6(){var _Object$entries5$_i=(0,_slicedToArray2.default)(_Object$entries5[_i19],2),styleName=_Object$entries5$_i[0],style=_Object$entries5$_i[1];styles[styleName]={get:function get(){var builder=createBuilder(this,createStyler(style.open,style.close,this._styler),this._isEmpty);Object.defineProperty(this,styleName,{value:builder});return builder;}};};for(var _i19=0,_Object$entries5=Object.entries(ansiStyles$1);_i19<_Object$entries5.length;_i19++){_loop6();}styles.visible={get:function get(){var builder=createBuilder(this,this._styler,true);Object.defineProperty(this,\'visible\',{value:builder});return builder;}};var usedModels=[\'rgb\',\'hex\',\'keyword\',\'hsl\',\'hsv\',\'hwb\',\'ansi\',\'ansi256\'];var _loop7=function _loop7(){var model=_usedModels[_i20];styles[model]={get:function get(){var level=this.level;return function(){var _ansiStyles$1$color$l;var styler=createStyler((_ansiStyles$1$color$l=ansiStyles$1.color[levelMapping[level]])[model].apply(_ansiStyles$1$color$l,arguments),ansiStyles$1.color.close,this._styler);return createBuilder(this,styler,this._isEmpty);};}};};for(var _i20=0,_usedModels=usedModels;_i20<_usedModels.length;_i20++){_loop7();}var _loop8=function _loop8(){var model=_usedModels2[_i21];var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var _ansiStyles$1$bgColor;var styler=createStyler((_ansiStyles$1$bgColor=ansiStyles$1.bgColor[levelMapping[level]])[model].apply(_ansiStyles$1$bgColor,arguments),ansiStyles$1.bgColor.close,this._styler);return createBuilder(this,styler,this._isEmpty);};}};};for(var _i21=0,_usedModels2=usedModels;_i21<_usedModels2.length;_i21++){_loop8();}var proto=Object.defineProperties(function(){},Object.assign({},styles,{level:{enumerable:true,get:function get(){return this._generator.level;},set:function set(level){this._generator.level=level;}}}));var createStyler=function createStyler(open,close,parent){var openAll;var closeAll;if(parent===undefined){openAll=open;closeAll=close;}else{openAll=parent.openAll+open;closeAll=close+parent.closeAll;}return{open:open,close:close,openAll:openAll,closeAll:closeAll,parent:parent};};var createBuilder=function createBuilder(self,_styler,_isEmpty){var builder=function builder(){for(var _len6=arguments.length,arguments_=new Array(_len6),_key8=0;_key8<_len6;_key8++){arguments_[_key8]=arguments[_key8];}// Single argument is hot path, implicit coercion is faster than anything\n// eslint-disable-next-line no-implicit-coercion\nreturn applyStyle(builder,arguments_.length===1?\'\'+arguments_[0]:arguments_.join(\' \'));};// We alter the prototype because we must return a function, but there is\n// no way to create a function with a different prototype\nObject.setPrototypeOf(builder,proto);builder._generator=self;builder._styler=_styler;builder._isEmpty=_isEmpty;return builder;};var applyStyle=function applyStyle(self,string){if(self.level<=0||!string){return self._isEmpty?\'\':string;}var styler=self._styler;if(styler===undefined){return string;}var _styler2=styler,openAll=_styler2.openAll,closeAll=_styler2.closeAll;if(string.indexOf("\\x1B")!==-1){while(styler!==undefined){// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstring=stringReplaceAll$1(string,styler.close,styler.open);styler=styler.parent;}}// We can move both next actions out of loop, because remaining actions in loop won\'t have\n// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\nvar lfIndex=string.indexOf(\'\\n\');if(lfIndex!==-1){string=stringEncaseCRLFWithFirstIndex$1(string,closeAll,openAll,lfIndex);}return openAll+string+closeAll;};var template;var chalkTag=function chalkTag(chalk){for(var _len7=arguments.length,strings=new Array(_len7>1?_len7-1:0),_key9=1;_key9<_len7;_key9++){strings[_key9-1]=arguments[_key9];}var firstString=strings[0];if(!Array.isArray(firstString)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn strings.join(\' \');}var arguments_=strings.slice(1);var parts=[firstString.raw[0]];for(var i=1;i<firstString.length;i++){parts.push(String(arguments_[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'),String(firstString.raw[i]));}if(template===undefined){template=templates$1;}return template(chalk,parts.join(\'\'));};Object.defineProperties(Chalk.prototype,styles);var chalk$1=Chalk();// eslint-disable-line new-cap\nchalk$1.supportsColor=stdoutColor;chalk$1.stderr=Chalk({level:stderrColor?stderrColor.level:0});// eslint-disable-line new-cap\nchalk$1.stderr.supportsColor=stderrColor;var source=chalk$1;var cliDescriptor={key:function key(_key){return _key.length===1?"-".concat(_key):"--".concat(_key);},value:function value(_value){return lib.apiDescriptor.value(_value);},pair:function pair(_ref16){var key=_ref16.key,value=_ref16.value;return value===false?"--no-".concat(key):value===true?cliDescriptor.key(key):value===""?"".concat(cliDescriptor.key(key)," without an argument"):"".concat(cliDescriptor.key(key),"=").concat(value);}};var FlagSchema=/*#__PURE__*/function(_lib$ChoiceSchema){(0,_inherits2.default)(FlagSchema,_lib$ChoiceSchema);var _super12=_createSuper(FlagSchema);function FlagSchema(_ref17){var _this7;var name=_ref17.name,flags=_ref17.flags;(0,_classCallCheck2.default)(this,FlagSchema);_this7=_super12.call(this,{name:name,choices:flags});_this7._flags=flags.slice().sort();return _this7;}(0,_createClass2.default)(FlagSchema,[{key:"preprocess",value:function preprocess(value,utils){if(typeof value==="string"&&value.length!==0&&!this._flags.includes(value)){var suggestion=this._flags.find(function(flag){return leven_1$1(flag,value)<3;});if(suggestion){utils.logger.warn(["Unknown flag ".concat(source.yellow(utils.descriptor.value(value)),","),"did you mean ".concat(source.blue(utils.descriptor.value(suggestion)),"?")].join(" "));return suggestion;}}return value;}},{key:"expected",value:function expected(){return"a flag";}}]);return FlagSchema;}(lib.ChoiceSchema);var hasDeprecationWarned;function normalizeOptions(options,optionInfos){var _ref18=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref18.logger,_ref18$isCLI=_ref18.isCLI,isCLI=_ref18$isCLI===void 0?false:_ref18$isCLI,_ref18$passThrough=_ref18.passThrough,passThrough=_ref18$passThrough===void 0?false:_ref18$passThrough;var unknown=!passThrough?lib.levenUnknownHandler:Array.isArray(passThrough)?function(key,value){return!passThrough.includes(key)?undefined:(0,_defineProperty2.default)({},key,value);}:function(key,value){return(0,_defineProperty2.default)({},key,value);};var descriptor=isCLI?cliDescriptor:lib.apiDescriptor;var schemas=optionInfosToSchemas(optionInfos,{isCLI:isCLI});var normalizer=new lib.Normalizer(schemas,{logger:logger,unknown:unknown,descriptor:descriptor});var shouldSuppressDuplicateDeprecationWarnings=logger!==false;if(shouldSuppressDuplicateDeprecationWarnings&&hasDeprecationWarned){normalizer._hasDeprecationWarned=hasDeprecationWarned;}var normalized=normalizer.normalize(options);if(shouldSuppressDuplicateDeprecationWarnings){hasDeprecationWarned=normalizer._hasDeprecationWarned;}return normalized;}function optionInfosToSchemas(optionInfos,_ref21){var isCLI=_ref21.isCLI;var schemas=[];if(isCLI){schemas.push(lib.AnySchema.create({name:"_"}));}var _iterator20=_createForOfIteratorHelper(optionInfos),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var optionInfo=_step20.value;schemas.push(optionInfoToSchema(optionInfo,{isCLI:isCLI,optionInfos:optionInfos}));if(optionInfo.alias&&isCLI){schemas.push(lib.AliasSchema.create({name:optionInfo.alias,sourceName:optionInfo.name}));}}}catch(err){_iterator20.e(err);}finally{_iterator20.f();}return schemas;}function optionInfoToSchema(optionInfo,_ref22){var isCLI=_ref22.isCLI,optionInfos=_ref22.optionInfos;var SchemaConstructor;var parameters={name:optionInfo.name};var handlers={};switch(optionInfo.type){case"int":SchemaConstructor=lib.IntegerSchema;if(isCLI){parameters.preprocess=function(value){return Number(value);};}break;case"string":SchemaConstructor=lib.StringSchema;break;case"choice":SchemaConstructor=lib.ChoiceSchema;parameters.choices=optionInfo.choices.map(function(choiceInfo){return(0,_typeof3.default)(choiceInfo)==="object"&&choiceInfo.redirect?Object.assign({},choiceInfo,{redirect:{to:{key:optionInfo.name,value:choiceInfo.redirect}}}):choiceInfo;});break;case"boolean":SchemaConstructor=lib.BooleanSchema;break;case"flag":SchemaConstructor=FlagSchema;parameters.flags=optionInfos.map(function(optionInfo){return[].concat(optionInfo.alias||[],optionInfo.description?optionInfo.name:[],optionInfo.oppositeDescription?"no-".concat(optionInfo.name):[]);}).reduce(function(a,b){return a.concat(b);},[]);break;case"path":SchemaConstructor=lib.StringSchema;break;default:throw new Error("Unexpected type ".concat(optionInfo.type));}if(optionInfo.exception){parameters.validate=function(value,schema,utils){return optionInfo.exception(value)||schema.validate(value,utils);};}else{parameters.validate=function(value,schema,utils){return value===undefined||schema.validate(value,utils);};}if(optionInfo.redirect){handlers.redirect=function(value){return!value?undefined:{to:{key:optionInfo.redirect.option,value:optionInfo.redirect.value}};};}if(optionInfo.deprecated){handlers.deprecated=true;}// allow CLI overriding, e.g., prettier package.json --tab-width 1 --tab-width 2\nif(isCLI&&!optionInfo.array){var originalPreprocess=parameters.preprocess||function(x){return x;};parameters.preprocess=function(value,schema,utils){return schema.preprocess(originalPreprocess(Array.isArray(value)?value[value.length-1]:value),utils);};}return optionInfo.array?lib.ArraySchema.create(Object.assign({},isCLI?{preprocess:function preprocess(v){return[].concat(v);}}:{},{},handlers,{valueSchema:SchemaConstructor.create(parameters)})):SchemaConstructor.create(Object.assign({},parameters,{},handlers));}function normalizeApiOptions(options,optionInfos,opts){return normalizeOptions(options,optionInfos,opts);}function normalizeCliOptions(options,optionInfos,opts){return normalizeOptions(options,optionInfos,Object.assign({isCLI:true},opts));}var optionsNormalizer={normalizeApiOptions:normalizeApiOptions,normalizeCliOptions:normalizeCliOptions};var getLast=function getLast(arr){return arr[arr.length-1];};function locStart(node,opts){opts=opts||{};// Handle nodes with decorators. They should start at the first decorator\nif(!opts.ignoreDecorators&&node.declaration&&node.declaration.decorators&&node.declaration.decorators.length>0){return locStart(node.declaration.decorators[0]);}if(!opts.ignoreDecorators&&node.decorators&&node.decorators.length>0){return locStart(node.decorators[0]);}if(node.__location){return node.__location.startOffset;}if(node.range){return node.range[0];}if(typeof node.start==="number"){return node.start;}if(node.loc){return node.loc.start;}return null;}function locEnd(node){var endNode=node.nodes&&getLast(node.nodes);if(endNode&&node.source&&!node.source.end){node=endNode;}if(node.__location){return node.__location.endOffset;}var loc=node.range?node.range[1]:typeof node.end==="number"?node.end:null;if(node.typeAnnotation){return Math.max(loc,locEnd(node.typeAnnotation));}if(node.loc&&!loc){return node.loc.end;}return loc;}function composeLoc(startNode){var endNodeOrLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:startNode;var length=typeof endNodeOrLength==="number"?endNodeOrLength:-1;var start=locStart(startNode);var end=length!==-1?start+length:locEnd(endNodeOrLength);var startLoc=startNode.loc.start;return{start:start,end:end,range:[start,end],loc:{start:startLoc,end:length!==-1?{line:startLoc.line,column:startLoc.column+length}:endNodeOrLength.loc.end}};}var loc={locStart:locStart,locEnd:locEnd,composeLoc:composeLoc};var jsTokens=createCommonjsModule(function(module,exports){// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\nObject.defineProperty(exports,"__esModule",{value:true});// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g;exports.matchToToken=function(match){var token={type:"invalid",value:match[0],closed:undefined};if(match[1])token.type="string",token.closed=!!(match[3]||match[4]);else if(match[5])token.type="comment";else if(match[6])token.type="comment",token.closed=!!match[7];else if(match[8])token.type="regex";else if(match[9])token.type="number";else if(match[10])token.type="name";else if(match[11])token.type="punctuator";else if(match[12])token.type="whitespace";return token;};});unwrapExports(jsTokens);var jsTokens_1=jsTokens.matchToToken;var ast=createCommonjsModule(function(module){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \'AS IS\'\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){function isExpression(node){if(node==null){return false;}switch(node.type){case\'ArrayExpression\':case\'AssignmentExpression\':case\'BinaryExpression\':case\'CallExpression\':case\'ConditionalExpression\':case\'FunctionExpression\':case\'Identifier\':case\'Literal\':case\'LogicalExpression\':case\'MemberExpression\':case\'NewExpression\':case\'ObjectExpression\':case\'SequenceExpression\':case\'ThisExpression\':case\'UnaryExpression\':case\'UpdateExpression\':return true;}return false;}function isIterationStatement(node){if(node==null){return false;}switch(node.type){case\'DoWhileStatement\':case\'ForInStatement\':case\'ForStatement\':case\'WhileStatement\':return true;}return false;}function isStatement(node){if(node==null){return false;}switch(node.type){case\'BlockStatement\':case\'BreakStatement\':case\'ContinueStatement\':case\'DebuggerStatement\':case\'DoWhileStatement\':case\'EmptyStatement\':case\'ExpressionStatement\':case\'ForInStatement\':case\'ForStatement\':case\'IfStatement\':case\'LabeledStatement\':case\'ReturnStatement\':case\'SwitchStatement\':case\'ThrowStatement\':case\'TryStatement\':case\'VariableDeclaration\':case\'WhileStatement\':case\'WithStatement\':return true;}return false;}function isSourceElement(node){return isStatement(node)||node!=null&&node.type===\'FunctionDeclaration\';}function trailingStatement(node){switch(node.type){case\'IfStatement\':if(node.alternate!=null){return node.alternate;}return node.consequent;case\'LabeledStatement\':case\'ForStatement\':case\'ForInStatement\':case\'WhileStatement\':case\'WithStatement\':return node.body;}return null;}function isProblematicIfStatement(node){var current;if(node.type!==\'IfStatement\'){return false;}if(node.alternate==null){return false;}current=node.consequent;do{if(current.type===\'IfStatement\'){if(current.alternate==null){return true;}}current=trailingStatement(current);}while(current);return false;}module.exports={isExpression:isExpression,isStatement:isStatement,isIterationStatement:isIterationStatement,isSourceElement:isSourceElement,isProblematicIfStatement:isProblematicIfStatement,trailingStatement:trailingStatement};})();/* vim: set sw=4 ts=4 et tw=80 : */});var ast_1=ast.isExpression;var ast_2=ast.isStatement;var ast_3=ast.isIterationStatement;var ast_4=ast.isSourceElement;var ast_5=ast.isProblematicIfStatement;var ast_6=ast.trailingStatement;var code=createCommonjsModule(function(module){/*\n      Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n      Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,ch;// See `tools/generate-identifier-regex.js`.\nES5Regex={// ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\nNonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,// ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\nNonAsciiIdentifierPart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/};ES6Regex={// ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\nNonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,// ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\nNonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/};function isDecimalDigit(ch){return 0x30<=ch&&ch<=0x39;// 0..9\n}function isHexDigit(ch){return 0x30<=ch&&ch<=0x39||// 0..9\n0x61<=ch&&ch<=0x66||// a..f\n0x41<=ch&&ch<=0x46;// A..F\n}function isOctalDigit(ch){return ch>=0x30&&ch<=0x37;// 0..7\n}// 7.2 White Space\nNON_ASCII_WHITESPACES=[0x1680,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2007,0x2008,0x2009,0x200A,0x202F,0x205F,0x3000,0xFEFF];function isWhiteSpace(ch){return ch===0x20||ch===0x09||ch===0x0B||ch===0x0C||ch===0xA0||ch>=0x1680&&NON_ASCII_WHITESPACES.indexOf(ch)>=0;}// 7.3 Line Terminators\nfunction isLineTerminator(ch){return ch===0x0A||ch===0x0D||ch===0x2028||ch===0x2029;}// 7.6 Identifier Names and Identifiers\nfunction fromCodePoint(cp){if(cp<=0xFFFF){return String.fromCharCode(cp);}var cu1=String.fromCharCode(Math.floor((cp-0x10000)/0x400)+0xD800);var cu2=String.fromCharCode((cp-0x10000)%0x400+0xDC00);return cu1+cu2;}IDENTIFIER_START=new Array(0x80);for(ch=0;ch<0x80;++ch){IDENTIFIER_START[ch]=ch>=0x61&&ch<=0x7A||// a..z\nch>=0x41&&ch<=0x5A||// A..Z\nch===0x24||ch===0x5F;// $ (dollar) and _ (underscore)\n}IDENTIFIER_PART=new Array(0x80);for(ch=0;ch<0x80;++ch){IDENTIFIER_PART[ch]=ch>=0x61&&ch<=0x7A||// a..z\nch>=0x41&&ch<=0x5A||// A..Z\nch>=0x30&&ch<=0x39||// 0..9\nch===0x24||ch===0x5F;// $ (dollar) and _ (underscore)\n}function isIdentifierStartES5(ch){return ch<0x80?IDENTIFIER_START[ch]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));}function isIdentifierPartES5(ch){return ch<0x80?IDENTIFIER_PART[ch]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));}function isIdentifierStartES6(ch){return ch<0x80?IDENTIFIER_START[ch]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));}function isIdentifierPartES6(ch){return ch<0x80?IDENTIFIER_PART[ch]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));}module.exports={isDecimalDigit:isDecimalDigit,isHexDigit:isHexDigit,isOctalDigit:isOctalDigit,isWhiteSpace:isWhiteSpace,isLineTerminator:isLineTerminator,isIdentifierStartES5:isIdentifierStartES5,isIdentifierPartES5:isIdentifierPartES5,isIdentifierStartES6:isIdentifierStartES6,isIdentifierPartES6:isIdentifierPartES6};})();/* vim: set sw=4 ts=4 et tw=80 : */});var code_1=code.isDecimalDigit;var code_2=code.isHexDigit;var code_3=code.isOctalDigit;var code_4=code.isWhiteSpace;var code_5=code.isLineTerminator;var code_6=code.isIdentifierStartES5;var code_7=code.isIdentifierPartES5;var code_8=code.isIdentifierStartES6;var code_9=code.isIdentifierPartES6;var keyword=createCommonjsModule(function(module){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){var code$1=code;function isStrictModeReservedWordES6(id){switch(id){case\'implements\':case\'interface\':case\'package\':case\'private\':case\'protected\':case\'public\':case\'static\':case\'let\':return true;default:return false;}}function isKeywordES5(id,strict){// yield should not be treated as keyword under non-strict mode.\nif(!strict&&id===\'yield\'){return false;}return isKeywordES6(id,strict);}function isKeywordES6(id,strict){if(strict&&isStrictModeReservedWordES6(id)){return true;}switch(id.length){case 2:return id===\'if\'||id===\'in\'||id===\'do\';case 3:return id===\'var\'||id===\'for\'||id===\'new\'||id===\'try\';case 4:return id===\'this\'||id===\'else\'||id===\'case\'||id===\'void\'||id===\'with\'||id===\'enum\';case 5:return id===\'while\'||id===\'break\'||id===\'catch\'||id===\'throw\'||id===\'const\'||id===\'yield\'||id===\'class\'||id===\'super\';case 6:return id===\'return\'||id===\'typeof\'||id===\'delete\'||id===\'switch\'||id===\'export\'||id===\'import\';case 7:return id===\'default\'||id===\'finally\'||id===\'extends\';case 8:return id===\'function\'||id===\'continue\'||id===\'debugger\';case 10:return id===\'instanceof\';default:return false;}}function isReservedWordES5(id,strict){return id===\'null\'||id===\'true\'||id===\'false\'||isKeywordES5(id,strict);}function isReservedWordES6(id,strict){return id===\'null\'||id===\'true\'||id===\'false\'||isKeywordES6(id,strict);}function isRestrictedWord(id){return id===\'eval\'||id===\'arguments\';}function isIdentifierNameES5(id){var i,iz,ch;if(id.length===0){return false;}ch=id.charCodeAt(0);if(!code$1.isIdentifierStartES5(ch)){return false;}for(i=1,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(!code$1.isIdentifierPartES5(ch)){return false;}}return true;}function decodeUtf16(lead,trail){return(lead-0xD800)*0x400+(trail-0xDC00)+0x10000;}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(id.length===0){return false;}check=code$1.isIdentifierStartES6;for(i=0,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(0xD800<=ch&&ch<=0xDBFF){++i;if(i>=iz){return false;}lowCh=id.charCodeAt(i);if(!(0xDC00<=lowCh&&lowCh<=0xDFFF)){return false;}ch=decodeUtf16(ch,lowCh);}if(!check(ch)){return false;}check=code$1.isIdentifierPartES6;}return true;}function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict);}function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict);}module.exports={isKeywordES5:isKeywordES5,isKeywordES6:isKeywordES6,isReservedWordES5:isReservedWordES5,isReservedWordES6:isReservedWordES6,isRestrictedWord:isRestrictedWord,isIdentifierNameES5:isIdentifierNameES5,isIdentifierNameES6:isIdentifierNameES6,isIdentifierES5:isIdentifierES5,isIdentifierES6:isIdentifierES6};})();/* vim: set sw=4 ts=4 et tw=80 : */});var keyword_1=keyword.isKeywordES5;var keyword_2=keyword.isKeywordES6;var keyword_3=keyword.isReservedWordES5;var keyword_4=keyword.isReservedWordES6;var keyword_5=keyword.isRestrictedWord;var keyword_6=keyword.isIdentifierNameES5;var keyword_7=keyword.isIdentifierNameES6;var keyword_8=keyword.isIdentifierES5;var keyword_9=keyword.isIdentifierES6;var utils$1=createCommonjsModule(function(module,exports){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){exports.ast=ast;exports.code=code;exports.keyword=keyword;})();/* vim: set sw=4 ts=4 et tw=80 : */});var utils_1$1=utils$1.ast;var utils_2$1=utils$1.code;var utils_3$1=utils$1.keyword;var matchOperatorsRe$1=/[|\\\\{}()[\\]^$+*?.]/g;var escapeStringRegexp$1=function escapeStringRegexp(str){if(typeof str!==\'string\'){throw new TypeError(\'Expected a string\');}return str.replace(matchOperatorsRe$1,\'\\\\$&\');};var colorName$2={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};var conversions$2=createCommonjsModule(function(module){/* MIT license */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var key in colorName$2){if(colorName$2.hasOwnProperty(key)){reverseKeywords[colorName$2[key]]=key;}}var convert=module.exports={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};// hide .channels and .labels properties\nfor(var model in convert){if(convert.hasOwnProperty(model)){if(!(\'channels\'in convert[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert[model].labels.length!==convert[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var channels=convert[model].channels;var labels=convert[model].labels;delete convert[model].channels;delete convert[model].labels;Object.defineProperty(convert[model],\'channels\',{value:channels});Object.defineProperty(convert[model],\'labels\',{value:labels});}}convert.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;var l;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var c;var m;var y;var k;k=Math.min(1-r,1-g,1-b);c=(1-r-k)/(1-k)||0;m=(1-g-k)/(1-k)||0;y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};/**\n     * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n     * */function comparativeDistance(x,y){return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var keyword in colorName$2){if(colorName$2.hasOwnProperty(keyword)){var value=colorName$2[keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=keyword;}}}return currentClosestKeyword;};convert.keyword.rgb=function(keyword){return colorName$2[keyword];};convert.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert.rgb.lab=function(rgb){var xyz=convert.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t1;var t2;var t3;var rgb;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);var sv;var v;l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;v=(l+s)/2;sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var lmin;var sl;var l;l=(2-s)*v;lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var i;var v;var f;var n;// wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}i=Math.floor(6*h);v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}n=wh+f*(v-wh);// linear interpolation\nvar r;var g;var b;switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}return[r*255,g*255,b*255];};convert.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r;var g;var b;r=1-Math.min(1,c*(1-k)+k);g=1-Math.min(1,m*(1-k)+k);b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var hr;var h;var c;hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}c=Math.sqrt(a*a+b*b);return[l,c,h];};convert.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var a;var b;var hr;hr=h/360*2*Math.PI;a=c*Math.cos(hr);b=c*Math.sin(hr);return[l,a,b];};convert.rgb.ansi16=function(args){var r=args[0];var g=args[1];var b=args[2];var value=1 in arguments?arguments[1]:convert.rgb.hsv(args)[2];// hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert.hsv.ansi16=function(args){// optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert.rgb.ansi16(convert.hsv.rgb(args),args[2]);};convert.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// we use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert.ansi16.rgb=function(args){var color=args%10;// handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert.ansi256.rgb=function(args){// handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma+4;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=1;var f=0;if(l<0.5){c=2.0*s*l;}else{c=2.0*s*(1.0-l);}if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert.gray.hsl=convert.gray.hsv=function(args){return[0,0,args[0]];};convert.gray.hwb=function(gray){return[0,100,gray[0]];};convert.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert.gray.lab=function(gray){return[gray[0],0,0];};convert.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};});var conversions_1$1=conversions$2.rgb;var conversions_2$1=conversions$2.hsl;var conversions_3$1=conversions$2.hsv;var conversions_4$1=conversions$2.hwb;var conversions_5$1=conversions$2.cmyk;var conversions_6$1=conversions$2.xyz;var conversions_7$1=conversions$2.lab;var conversions_8$1=conversions$2.lch;var conversions_9$1=conversions$2.hex;var conversions_10$1=conversions$2.keyword;var conversions_11$1=conversions$2.ansi16;var conversions_12$1=conversions$2.ansi256;var conversions_13$1=conversions$2.hcg;var conversions_14$1=conversions$2.apple;var conversions_15$1=conversions$2.gray;/*\n  \tthis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph$2(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions$2);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS$2(fromModel){var graph=buildGraph$2();var queue=[fromModel];// unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions$2[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link$2(from,to){return function(args){return to(from(args));};}function wrapConversion$2(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions$2[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link$2(conversions$2[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route$2=function route(fromModel){var graph=deriveBFS$2(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// no possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion$2(toModel,graph);}return conversion;};var convert$3={};var models$2=Object.keys(conversions$2);function wrapRaw$2(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}return fn(args);};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded$2(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}var result=fn(args);// we\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models$2.forEach(function(fromModel){convert$3[fromModel]={};Object.defineProperty(convert$3[fromModel],\'channels\',{value:conversions$2[fromModel].channels});Object.defineProperty(convert$3[fromModel],\'labels\',{value:conversions$2[fromModel].labels});var routes=route$2(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert$3[fromModel][toModel]=wrapRounded$2(fn);convert$3[fromModel][toModel].raw=wrapRaw$2(fn);});});var colorConvert$2=convert$3;var ansiStyles$2=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],// Bright color\nredBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Fix humans\nstyles.color.grey=styles.color.gray;for(var _i22=0,_Object$keys14=Object.keys(styles);_i22<_Object$keys14.length;_i22++){var groupName=_Object$keys14[_i22];var _group3=styles[groupName];for(var _i23=0,_Object$keys15=Object.keys(_group3);_i23<_Object$keys15.length;_i23++){var styleName=_Object$keys15[_i23];var _style5=_group3[styleName];styles[styleName]={open:"\\x1B[".concat(_style5[0],"m"),close:"\\x1B[".concat(_style5[1],"m")};_group3[styleName]=styles[styleName];codes.set(_style5[0],_style5[1]);}Object.defineProperty(styles,groupName,{value:_group3,enumerable:false});Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});}var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";styles.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};styles.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};styles.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};styles.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};styles.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};styles.bgColor.ansi16m={rgb:wrapAnsi16m(rgb2rgb,10)};for(var _i24=0,_Object$keys16=Object.keys(colorConvert$2);_i24<_Object$keys16.length;_i24++){var _key10=_Object$keys16[_i24];if((0,_typeof3.default)(colorConvert$2[_key10])!==\'object\'){continue;}var suite=colorConvert$2[_key10];if(_key10===\'ansi16\'){_key10=\'ansi\';}if(\'ansi16\'in suite){styles.color.ansi[_key10]=wrapAnsi16(suite.ansi16,0);styles.bgColor.ansi[_key10]=wrapAnsi16(suite.ansi16,10);}if(\'ansi256\'in suite){styles.color.ansi256[_key10]=wrapAnsi256(suite.ansi256,0);styles.bgColor.ansi256[_key10]=wrapAnsi256(suite.ansi256,10);}if(\'rgb\'in suite){styles.color.ansi16m[_key10]=wrapAnsi16m(suite.rgb,0);styles.bgColor.ansi16m[_key10]=wrapAnsi16m(suite.rgb,10);}}return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var env$3=process.env;var forceColor$2;if(hasFlag(\'no-color\')||hasFlag(\'no-colors\')||hasFlag(\'color=false\')){forceColor$2=false;}else if(hasFlag(\'color\')||hasFlag(\'colors\')||hasFlag(\'color=true\')||hasFlag(\'color=always\')){forceColor$2=true;}if(\'FORCE_COLOR\'in env$3){forceColor$2=env$3.FORCE_COLOR.length===0||parseInt(env$3.FORCE_COLOR,10)!==0;}function translateLevel$2(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor$2(stream){if(forceColor$2===false){return 0;}if(hasFlag(\'color=16m\')||hasFlag(\'color=full\')||hasFlag(\'color=truecolor\')){return 3;}if(hasFlag(\'color=256\')){return 2;}if(stream&&!stream.isTTY&&forceColor$2!==true){return 0;}var min=forceColor$2?1:0;if(process.platform===\'win32\'){// Node.js 7.5.0 is the first version of Node.js to include a patch to\n// libuv that enables 256 color output on Windows. Anything earlier and it\n// won\'t work. However, here we target Node.js 8 at minimum as it is an LTS\n// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n// release that supports 256 colors. Windows 10 build 14931 is the first release\n// that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(process.versions.node.split(\'.\')[0])>=8&&Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$3){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$3;})||env$3.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$3){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$3.TEAMCITY_VERSION)?1:0;}if(env$3.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$3){var _version3=parseInt((env$3.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$3.TERM_PROGRAM){case\'iTerm.app\':return _version3>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$3.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$3.TERM)){return 1;}if(\'COLORTERM\'in env$3){return 1;}if(env$3.TERM===\'dumb\'){return min;}return min;}function getSupportLevel$2(stream){var level=supportsColor$2(stream);return translateLevel$2(level);}var supportsColor_1$2={supportsColor:getSupportLevel$2,stdout:getSupportLevel$2(process.stdout),stderr:getSupportLevel$2(process.stderr)};var TEMPLATE_REGEX$2=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX$2=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX$2=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX$2=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES$2=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape$2(c){if(c[0]===\'u\'&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}return ESCAPES$2.get(c)||c;}function parseArguments$2(name,args){var results=[];var chunks=args.trim().split(/\\s*,\\s*/g);var matches;var _iterator21=_createForOfIteratorHelper(chunks),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var chunk=_step21.value;if(!isNaN(chunk)){results.push(Number(chunk));}else if(matches=chunk.match(STRING_REGEX$2)){results.push(matches[2].replace(ESCAPE_REGEX$2,function(m,escape,chr){return escape?unescape$2(escape):chr;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}return results;}function parseStyle$2(style){STYLE_REGEX$2.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX$2.exec(style))!==null){var _name4=matches[1];if(matches[2]){var args=parseArguments$2(_name4,matches[2]);results.push([_name4].concat(args));}else{results.push([_name4]);}}return results;}function buildStyle$2(chalk,styles){var enabled={};var _iterator22=_createForOfIteratorHelper(styles),_step22;try{for(_iterator22.s();!(_step22=_iterator22.n()).done;){var layer=_step22.value;var _iterator23=_createForOfIteratorHelper(layer.styles),_step23;try{for(_iterator23.s();!(_step23=_iterator23.n()).done;){var _style6=_step23.value;enabled[_style6[0]]=layer.inverse?null:_style6.slice(1);}}catch(err){_iterator23.e(err);}finally{_iterator23.f();}}}catch(err){_iterator22.e(err);}finally{_iterator22.f();}var current=chalk;for(var _i25=0,_Object$keys17=Object.keys(enabled);_i25<_Object$keys17.length;_i25++){var styleName=_Object$keys17[_i25];if(Array.isArray(enabled[styleName])){if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}if(enabled[styleName].length>0){current=current[styleName].apply(current,enabled[styleName]);}else{current=current[styleName];}}}return current;}var templates$2=function templates$2(chalk,tmp){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntmp.replace(TEMPLATE_REGEX$2,function(m,escapeChar,inverse,style,close,chr){if(escapeChar){chunk.push(unescape$2(escapeChar));}else if(style){var str=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?str:buildStyle$2(chalk,styles)(str));styles.push({inverse:inverse,styles:parseStyle$2(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle$2(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(chr);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMsg="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMsg);}return chunks.join(\'\');};var chalk$2=createCommonjsModule(function(module){var stdoutColor=supportsColor_1$2.stdout;var isSimpleWindowsTerm=process.platform===\'win32\'&&!(process.env.TERM||\'\').toLowerCase().startsWith(\'xterm\');// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];// `color-convert` models to exclude from the Chalk API due to conflicts and such\nvar skipModels=new Set([\'gray\']);var styles=Object.create(null);function applyOptions(obj,options){options=options||{};// Detect level if not set manually\nvar scLevel=stdoutColor?stdoutColor.level:0;obj.level=options.level===undefined?scLevel:options.level;obj.enabled=\'enabled\'in options?options.enabled:obj.level>0;}function Chalk(options){// We check for this.template here since calling `chalk.constructor()`\n// by itself will have a `this` of a previously constructed chalk object\nif(!this||!(this instanceof Chalk)||this.template){var _chalk3={};applyOptions(_chalk3,options);_chalk3.template=function(){var args=[].slice.call(arguments);return chalkTag.apply(null,[_chalk3.template].concat(args));};Object.setPrototypeOf(_chalk3,Chalk.prototype);Object.setPrototypeOf(_chalk3.template,_chalk3);_chalk3.template.constructor=Chalk;return _chalk3.template;}applyOptions(this,options);}// Use bright blue on Windows as the normal blue color is illegible\nif(isSimpleWindowsTerm){ansiStyles$2.blue.open="\\x1B[94m";}var _loop9=function _loop9(){var key=_Object$keys18[_i26];ansiStyles$2[key].closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2[key].close),\'g\');styles[key]={get:function get(){var codes=ansiStyles$2[key];return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,key);}};};for(var _i26=0,_Object$keys18=Object.keys(ansiStyles$2);_i26<_Object$keys18.length;_i26++){_loop9();}styles.visible={get:function get(){return build.call(this,this._styles||[],true,\'visible\');}};ansiStyles$2.color.closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2.color.close),\'g\');var _loop10=function _loop10(){var model=_Object$keys19[_i27];if(skipModels.has(model)){return"continue";}styles[model]={get:function get(){var level=this.level;return function(){var open=ansiStyles$2.color[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles$2.color.close,closeRe:ansiStyles$2.color.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i27=0,_Object$keys19=Object.keys(ansiStyles$2.color.ansi);_i27<_Object$keys19.length;_i27++){var _ret3=_loop10();if(_ret3==="continue")continue;}ansiStyles$2.bgColor.closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2.bgColor.close),\'g\');var _loop11=function _loop11(){var model=_Object$keys20[_i28];if(skipModels.has(model)){return"continue";}var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var open=ansiStyles$2.bgColor[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles$2.bgColor.close,closeRe:ansiStyles$2.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i28=0,_Object$keys20=Object.keys(ansiStyles$2.bgColor.ansi);_i28<_Object$keys20.length;_i28++){var _ret4=_loop11();if(_ret4==="continue")continue;}var proto=Object.defineProperties(function(){},styles);function build(_styles,_empty,key){var builder=function builder(){return applyStyle.apply(builder,arguments);};builder._styles=_styles;builder._empty=_empty;var self=this;Object.defineProperty(builder,\'level\',{enumerable:true,get:function get(){return self.level;},set:function set(level){self.level=level;}});Object.defineProperty(builder,\'enabled\',{enumerable:true,get:function get(){return self.enabled;},set:function set(enabled){self.enabled=enabled;}});// See below for fix regarding invisible grey/dim combination on Windows\nbuilder.hasGrey=this.hasGrey||key===\'gray\'||key===\'grey\';// `__proto__` is used because we must return a function, but there is\n// no way to create a function with a different prototype\nbuilder.__proto__=proto;// eslint-disable-line no-proto\nreturn builder;}function applyStyle(){// Support varags, but simply cast to string in case there\'s only one arg\nvar args=arguments;var argsLen=args.length;var str=String(arguments[0]);if(argsLen===0){return\'\';}if(argsLen>1){// Don\'t slice `arguments`, it prevents V8 optimizations\nfor(var _a5=1;_a5<argsLen;_a5++){str+=\' \'+args[_a5];}}if(!this.enabled||this.level<=0||!str){return this._empty?\'\':str;}// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n// see https://github.com/chalk/chalk/issues/58\n// If we\'re on Windows and we\'re dealing with a gray color, temporarily make \'dim\' a noop.\nvar originalDim=ansiStyles$2.dim.open;if(isSimpleWindowsTerm&&this.hasGrey){ansiStyles$2.dim.open=\'\';}var _iterator24=_createForOfIteratorHelper(this._styles.slice().reverse()),_step24;try{for(_iterator24.s();!(_step24=_iterator24.n()).done;){var _code2=_step24.value;// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstr=_code2.open+str.replace(_code2.closeRe,_code2.open)+_code2.close;// Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS\n// https://github.com/chalk/chalk/pull/92\nstr=str.replace(/\\r?\\n/g,"".concat(_code2.close,"$&").concat(_code2.open));}// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n}catch(err){_iterator24.e(err);}finally{_iterator24.f();}ansiStyles$2.dim.open=originalDim;return str;}function chalkTag(chalk,strings){if(!Array.isArray(strings)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn[].slice.call(arguments,1).join(\' \');}var args=[].slice.call(arguments,2);var parts=[strings.raw[0]];for(var i=1;i<strings.length;i++){parts.push(String(args[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'));parts.push(String(strings.raw[i]));}return templates$2(chalk,parts.join(\'\'));}Object.defineProperties(Chalk.prototype,styles);module.exports=Chalk();// eslint-disable-line new-cap\nmodule.exports.supportsColor=stdoutColor;module.exports.default=module.exports;// For TypeScript\n});var chalk_1$1=chalk$2.supportsColor;var lib$1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.shouldHighlight=shouldHighlight;exports.getChalk=getChalk;exports.default=highlight;var _jsTokens=_interopRequireWildcard(jsTokens);var _esutils=_interopRequireDefault(utils$1);var _chalk=_interopRequireDefault(chalk$2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||(0,_typeof3.default)(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function getDefs(chalk){return{keyword:chalk.cyan,capitalized:chalk.yellow,jsx_tag:chalk.yellow,punctuator:chalk.yellow,number:chalk.magenta,string:chalk.green,regex:chalk.magenta,comment:chalk.grey,invalid:chalk.white.bgRed.bold};}var NEWLINE=/\\r\\n|[\\n\\r\\u2028\\u2029]/;var JSX_TAG=/^[a-z][\\w-]*$/i;var BRACKET=/^[()[\\]{}]$/;function getTokenType(match){var _match$slice=match.slice(-2),_match$slice2=(0,_slicedToArray2.default)(_match$slice,2),offset=_match$slice2[0],text=_match$slice2[1];var token=(0,_jsTokens.matchToToken)(match);if(token.type==="name"){if(_esutils.default.keyword.isReservedWordES6(token.value)){return"keyword";}if(JSX_TAG.test(token.value)&&(text[offset-1]==="<"||text.substr(offset-2,2)=="</")){return"jsx_tag";}if(token.value[0]!==token.value[0].toLowerCase()){return"capitalized";}}if(token.type==="punctuator"&&BRACKET.test(token.value)){return"bracket";}if(token.type==="invalid"&&(token.value==="@"||token.value==="#")){return"punctuator";}return token.type;}function highlightTokens(defs,text){return text.replace(_jsTokens.default,function(){for(var _len8=arguments.length,args=new Array(_len8),_key11=0;_key11<_len8;_key11++){args[_key11]=arguments[_key11];}var type=getTokenType(args);var colorize=defs[type];if(colorize){return args[0].split(NEWLINE).map(function(str){return colorize(str);}).join("\\n");}else{return args[0];}});}function shouldHighlight(options){return _chalk.default.supportsColor||options.forceColor;}function getChalk(options){var chalk=_chalk.default;if(options.forceColor){chalk=new _chalk.default.constructor({enabled:true,level:1});}return chalk;}function highlight(code){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(shouldHighlight(options)){var _chalk4=getChalk(options);var defs=getDefs(_chalk4);return highlightTokens(defs,code);}else{return code;}}});unwrapExports(lib$1);var lib_1=lib$1.shouldHighlight;var lib_2=lib$1.getChalk;var lib$2=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.codeFrameColumns=codeFrameColumns;exports.default=_default;var _highlight=_interopRequireWildcard(lib$1);function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||(0,_typeof3.default)(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var deprecationWarningShown=false;function getDefs(chalk){return{gutter:chalk.grey,marker:chalk.red.bold,message:chalk.red.bold};}var NEWLINE=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function getMarkerLines(loc,source,opts){var startLoc=Object.assign({column:0,line:-1},loc.start);var endLoc=Object.assign({},startLoc,{},loc.end);var _ref23=opts||{},_ref23$linesAbove=_ref23.linesAbove,linesAbove=_ref23$linesAbove===void 0?2:_ref23$linesAbove,_ref23$linesBelow=_ref23.linesBelow,linesBelow=_ref23$linesBelow===void 0?3:_ref23$linesBelow;var startLine=startLoc.line;var startColumn=startLoc.column;var endLine=endLoc.line;var endColumn=endLoc.column;var start=Math.max(startLine-(linesAbove+1),0);var end=Math.min(source.length,endLine+linesBelow);if(startLine===-1){start=0;}if(endLine===-1){end=source.length;}var lineDiff=endLine-startLine;var markerLines={};if(lineDiff){for(var i=0;i<=lineDiff;i++){var lineNumber=i+startLine;if(!startColumn){markerLines[lineNumber]=true;}else if(i===0){var sourceLength=source[lineNumber-1].length;markerLines[lineNumber]=[startColumn,sourceLength-startColumn+1];}else if(i===lineDiff){markerLines[lineNumber]=[0,endColumn];}else{var _sourceLength=source[lineNumber-i].length;markerLines[lineNumber]=[0,_sourceLength];}}}else{if(startColumn===endColumn){if(startColumn){markerLines[startLine]=[startColumn,0];}else{markerLines[startLine]=true;}}else{markerLines[startLine]=[startColumn,endColumn-startColumn];}}return{start:start,end:end,markerLines:markerLines};}function codeFrameColumns(rawLines,loc){var opts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var highlighted=(opts.highlightCode||opts.forceColor)&&(0,_highlight.shouldHighlight)(opts);var chalk=(0,_highlight.getChalk)(opts);var defs=getDefs(chalk);var maybeHighlight=function maybeHighlight(chalkFn,string){return highlighted?chalkFn(string):string;};var lines=rawLines.split(NEWLINE);var _getMarkerLines=getMarkerLines(loc,lines,opts),start=_getMarkerLines.start,end=_getMarkerLines.end,markerLines=_getMarkerLines.markerLines;var hasColumns=loc.start&&typeof loc.start.column==="number";var numberMaxWidth=String(end).length;var highlightedLines=highlighted?(0,_highlight.default)(rawLines,opts):rawLines;var frame=highlightedLines.split(NEWLINE).slice(start,end).map(function(line,index){var number=start+1+index;var paddedNumber=" ".concat(number).slice(-numberMaxWidth);var gutter=" ".concat(paddedNumber," | ");var hasMarker=markerLines[number];var lastMarkerLine=!markerLines[number+1];if(hasMarker){var markerLine="";if(Array.isArray(hasMarker)){var markerSpacing=line.slice(0,Math.max(hasMarker[0]-1,0)).replace(/[^\\t]/g," ");var numberOfMarkers=hasMarker[1]||1;markerLine=["\\n ",maybeHighlight(defs.gutter,gutter.replace(/\\d/g," ")),markerSpacing,maybeHighlight(defs.marker,"^").repeat(numberOfMarkers)].join("");if(lastMarkerLine&&opts.message){markerLine+=" "+maybeHighlight(defs.message,opts.message);}}return[maybeHighlight(defs.marker,">"),maybeHighlight(defs.gutter,gutter),line,markerLine].join("");}else{return" ".concat(maybeHighlight(defs.gutter,gutter)).concat(line);}}).join("\\n");if(opts.message&&!hasColumns){frame="".concat(" ".repeat(numberMaxWidth+1)).concat(opts.message,"\\n").concat(frame);}if(highlighted){return chalk.reset(frame);}else{return frame;}}function _default(rawLines,lineNumber,colNumber){var opts=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(!deprecationWarningShown){deprecationWarningShown=true;var message="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(process.emitWarning){process.emitWarning(message,"DeprecationWarning");}else{var deprecationError=new Error(message);deprecationError.name="DeprecationWarning";console.warn(new Error(message));}}colNumber=Math.max(colNumber,0);var location={start:{column:colNumber,line:lineNumber}};return codeFrameColumns(rawLines,location,opts);}});unwrapExports(lib$2);var lib_1$1=lib$2.codeFrameColumns;var ConfigError$1=errors.ConfigError;var locStart$1=loc.locStart,locEnd$1=loc.locEnd;// Use defineProperties()/getOwnPropertyDescriptor() to prevent\n// triggering the parsers getters.\nvar ownNames=Object.getOwnPropertyNames;var ownDescriptor=Object.getOwnPropertyDescriptor;function getParsers(options){var parsers={};var _iterator25=_createForOfIteratorHelper(options.plugins),_step25;try{for(_iterator25.s();!(_step25=_iterator25.n()).done;){var plugin=_step25.value;if(!plugin.parsers){continue;}var _iterator26=_createForOfIteratorHelper(ownNames(plugin.parsers)),_step26;try{for(_iterator26.s();!(_step26=_iterator26.n()).done;){var _name5=_step26.value;Object.defineProperty(parsers,_name5,ownDescriptor(plugin.parsers,_name5));}}catch(err){_iterator26.e(err);}finally{_iterator26.f();}}}catch(err){_iterator25.e(err);}finally{_iterator25.f();}return parsers;}function resolveParser(opts,parsers){parsers=parsers||getParsers(opts);if(typeof opts.parser==="function"){// Custom parser API always works with JavaScript.\nreturn{parse:opts.parser,astFormat:"estree",locStart:locStart$1,locEnd:locEnd$1};}if(typeof opts.parser==="string"){if(Object.prototype.hasOwnProperty.call(parsers,opts.parser)){return parsers[opts.parser];}/* istanbul ignore next */{throw new ConfigError$1("Couldn\'t resolve parser \\"".concat(opts.parser,"\\". Parsers must be explicitly added to the standalone bundle."));}}}function parse(text,opts){var parsers=getParsers(opts);// Create a new object {parserName: parseFn}. Uses defineProperty() to only call\n// the parsers getters when actually calling the parser `parse` function.\nvar parsersForCustomParserApi=Object.keys(parsers).reduce(function(object,parserName){return Object.defineProperty(object,parserName,{enumerable:true,get:function get(){return parsers[parserName].parse;}});},{});var parser=resolveParser(opts,parsers);try{if(parser.preprocess){text=parser.preprocess(text,opts);}return{text:text,ast:parser.parse(text,parsersForCustomParserApi,opts)};}catch(error){var _loc=error.loc;if(_loc){var codeFrame=lib$2;error.codeFrame=codeFrame.codeFrameColumns(text,_loc,{highlightCode:true});error.message+="\\n"+error.codeFrame;throw error;}/* istanbul ignore next */throw error.stack;}}var parser={parse:parse,resolveParser:resolveParser};var UndefinedParserError$1=errors.UndefinedParserError;var getSupportInfo$1=support.getSupportInfo;var resolveParser$1=parser.resolveParser;var hiddenDefaults={astFormat:"estree",printer:{},originalText:undefined,locStart:null,locEnd:null};// Copy options and fill in default values.\nfunction normalize$1(options,opts){opts=opts||{};var rawOptions=Object.assign({},options);var supportOptions=getSupportInfo$1({plugins:options.plugins,showUnreleased:true,showDeprecated:true}).options;var defaults=Object.assign({},hiddenDefaults,{},fromPairs_1(supportOptions.filter(function(optionInfo){return optionInfo.default!==undefined;}).map(function(option){return[option.name,option.default];})));if(!rawOptions.parser){if(!rawOptions.filepath){var logger=opts.logger||console;logger.warn("No parser and no filepath given, using \'babel\' the parser now "+"but this will throw an error in the future. "+"Please specify a parser or a filepath so one can be inferred.");rawOptions.parser="babel";}else{rawOptions.parser=inferParser(rawOptions.filepath,rawOptions.plugins);if(!rawOptions.parser){throw new UndefinedParserError$1("No parser could be inferred for file: ".concat(rawOptions.filepath));}}}var parser=resolveParser$1(optionsNormalizer.normalizeApiOptions(rawOptions,[supportOptions.find(function(x){return x.name==="parser";})],{passThrough:true,logger:false}));rawOptions.astFormat=parser.astFormat;rawOptions.locEnd=parser.locEnd;rawOptions.locStart=parser.locStart;var plugin=getPlugin(rawOptions);rawOptions.printer=plugin.printers[rawOptions.astFormat];var pluginDefaults=supportOptions.filter(function(optionInfo){return optionInfo.pluginDefaults&&optionInfo.pluginDefaults[plugin.name]!==undefined;}).reduce(function(reduced,optionInfo){return Object.assign(reduced,(0,_defineProperty2.default)({},optionInfo.name,optionInfo.pluginDefaults[plugin.name]));},{});var mixedDefaults=Object.assign({},defaults,{},pluginDefaults);Object.keys(mixedDefaults).forEach(function(k){if(rawOptions[k]==null){rawOptions[k]=mixedDefaults[k];}});if(rawOptions.parser==="json"){rawOptions.trailingComma="none";}return optionsNormalizer.normalizeApiOptions(rawOptions,supportOptions,Object.assign({passThrough:Object.keys(hiddenDefaults)},opts));}function getPlugin(options){var astFormat=options.astFormat;if(!astFormat){throw new Error("getPlugin() requires astFormat to be set");}var printerPlugin=options.plugins.find(function(plugin){return plugin.printers&&plugin.printers[astFormat];});if(!printerPlugin){throw new Error("Couldn\'t find plugin for AST format \\"".concat(astFormat,"\\""));}return printerPlugin;}function getInterpreter(filepath){if(typeof filepath!=="string"){return"";}var fd;try{fd=fs.openSync(filepath,"r");}catch(err){// istanbul ignore next\nreturn"";}try{var liner=new readlines(fd);var firstLine=liner.next().toString("utf8");// #!/bin/env node, #!/usr/bin/env node\nvar m1=firstLine.match(/^#!\\/(?:usr\\/)?bin\\/env\\s+(\\S+)/);if(m1){return m1[1];}// #!/bin/node, #!/usr/bin/node, #!/usr/local/bin/node\nvar m2=firstLine.match(/^#!\\/(?:usr\\/(?:local\\/)?)?bin\\/(\\S+)/);if(m2){return m2[1];}return"";}catch(err){// There are some weird cases where paths are missing, causing Jest\n// failures. It\'s unclear what these correspond to in the real world.\nreturn"";}finally{try{// There are some weird cases where paths are missing, causing Jest\n// failures. It\'s unclear what these correspond to in the real world.\nfs.closeSync(fd);}catch(err){// nop\n}}}function inferParser(filepath,plugins){var filename=path.basename(filepath).toLowerCase();var languages=getSupportInfo$1({plugins:plugins}).languages.filter(function(language){return language.since!==null;});// If the file has no extension, we can try to infer the language from the\n// interpreter in the shebang line, if any; but since this requires FS access,\n// do it last.\nvar language=languages.find(function(language){return language.extensions&&language.extensions.some(function(extension){return filename.endsWith(extension);})||language.filenames&&language.filenames.find(function(name){return name.toLowerCase()===filename;});});if(!language&&!filename.includes(".")){var interpreter=getInterpreter(filepath);language=languages.find(function(language){return language.interpreters&&language.interpreters.includes(interpreter);});}return language&&language.parsers[0];}var options$1={normalize:normalize$1,hiddenDefaults:hiddenDefaults,inferParser:inferParser};function massageAST(ast,options,parent){if(Array.isArray(ast)){return ast.map(function(e){return massageAST(e,options,parent);}).filter(Boolean);}if(!ast||(0,_typeof3.default)(ast)!=="object"){return ast;}var newObj={};for(var _i29=0,_Object$keys21=Object.keys(ast);_i29<_Object$keys21.length;_i29++){var _key12=_Object$keys21[_i29];if(typeof ast[_key12]!=="function"){newObj[_key12]=massageAST(ast[_key12],options,ast);}}if(options.printer.massageAstNode){var result=options.printer.massageAstNode(ast,newObj,parent);if(result===null){return undefined;}if(result){return result;}}return newObj;}var massageAst=massageAST;function assert(){}assert.ok=function(){};assert.strictEqual=function(){};/**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */function concat(parts){// access the internals of a document directly.\n// if(parts.length === 1) {\n//   // If it\'s a single document, no need to concat it.\n//   return parts[0];\n// }\nreturn{type:"concat",parts:parts};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function indent(contents){return{type:"indent",contents:contents};}/**\n   * @param {number} n\n   * @param {Doc} contents\n   * @returns Doc\n   */function align(n,contents){return{type:"align",contents:contents,n:n};}/**\n   * @param {Doc} contents\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function group(contents,opts){opts=opts||{};return{type:"group",id:opts.id,contents:contents,break:!!opts.shouldBreak,expandedStates:opts.expandedStates};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function dedentToRoot(contents){return align(-Infinity,contents);}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function markAsRoot(contents){// @ts-ignore - TBD ???:\nreturn align({type:"root"},contents);}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function dedent(contents){return align(-1,contents);}/**\n   * @param {Doc[]} states\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function conditionalGroup(states,opts){return group(states[0],Object.assign({},opts,{expandedStates:states}));}/**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */function fill(parts){return{type:"fill",parts:parts};}/**\n   * @param {Doc} [breakContents]\n   * @param {Doc} [flatContents]\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function ifBreak(breakContents,flatContents,opts){opts=opts||{};return{type:"if-break",breakContents:breakContents,flatContents:flatContents,groupId:opts.groupId};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function lineSuffix(contents){return{type:"line-suffix",contents:contents};}var lineSuffixBoundary={type:"line-suffix-boundary"};var breakParent={type:"break-parent"};var trim={type:"trim"};var line={type:"line"};var softline={type:"line",soft:true};var hardline=concat([{type:"line",hard:true},breakParent]);var literalline=concat([{type:"line",hard:true,literal:true},breakParent]);var cursor={type:"cursor",placeholder:Symbol("cursor")};/**\n   * @param {Doc} sep\n   * @param {Doc[]} arr\n   * @returns Doc\n   */function join(sep,arr){var res=[];for(var i=0;i<arr.length;i++){if(i!==0){res.push(sep);}res.push(arr[i]);}return concat(res);}/**\n   * @param {Doc} doc\n   * @param {number} size\n   * @param {number} tabWidth\n   */function addAlignmentToDoc(doc,size,tabWidth){var aligned=doc;if(size>0){// Use indent to add tabs for all the levels of tabs we need\nfor(var i=0;i<Math.floor(size/tabWidth);++i){aligned=indent(aligned);}// Use align for all the spaces that are needed\naligned=align(size%tabWidth,aligned);// size is absolute from 0 and not relative to the current\n// indentation, so we use -Infinity to reset the indentation to 0\naligned=align(-Infinity,aligned);}return aligned;}var docBuilders={concat:concat,join:join,line:line,softline:softline,hardline:hardline,literalline:literalline,group:group,conditionalGroup:conditionalGroup,fill:fill,lineSuffix:lineSuffix,lineSuffixBoundary:lineSuffixBoundary,cursor:cursor,breakParent:breakParent,ifBreak:ifBreak,trim:trim,indent:indent,align:align,addAlignmentToDoc:addAlignmentToDoc,markAsRoot:markAsRoot,dedentToRoot:dedentToRoot,dedent:dedent};var ansiRegex=function ansiRegex(){var _ref24=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref24$onlyFirst=_ref24.onlyFirst,onlyFirst=_ref24$onlyFirst===void 0?false:_ref24$onlyFirst;var pattern=["[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)",\'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\'].join(\'|\');return new RegExp(pattern,onlyFirst?undefined:\'g\');};var stripAnsi=function stripAnsi(string){return typeof string===\'string\'?string.replace(ansiRegex(),\'\'):string;};/* eslint-disable yoda */var isFullwidthCodePoint=function isFullwidthCodePoint(codePoint){if(Number.isNaN(codePoint)){return false;}// Code points are derived from:\n// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\nif(codePoint>=0x1100&&(codePoint<=0x115F||// Hangul Jamo\ncodePoint===0x2329||// LEFT-POINTING ANGLE BRACKET\ncodePoint===0x232A||// RIGHT-POINTING ANGLE BRACKET\n// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n0x2E80<=codePoint&&codePoint<=0x3247&&codePoint!==0x303F||// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n0x3250<=codePoint&&codePoint<=0x4DBF||// CJK Unified Ideographs .. Yi Radicals\n0x4E00<=codePoint&&codePoint<=0xA4C6||// Hangul Jamo Extended-A\n0xA960<=codePoint&&codePoint<=0xA97C||// Hangul Syllables\n0xAC00<=codePoint&&codePoint<=0xD7A3||// CJK Compatibility Ideographs\n0xF900<=codePoint&&codePoint<=0xFAFF||// Vertical Forms\n0xFE10<=codePoint&&codePoint<=0xFE19||// CJK Compatibility Forms .. Small Form Variants\n0xFE30<=codePoint&&codePoint<=0xFE6B||// Halfwidth and Fullwidth Forms\n0xFF01<=codePoint&&codePoint<=0xFF60||0xFFE0<=codePoint&&codePoint<=0xFFE6||// Kana Supplement\n0x1B000<=codePoint&&codePoint<=0x1B001||// Enclosed Ideographic Supplement\n0x1F200<=codePoint&&codePoint<=0x1F251||// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n0x20000<=codePoint&&codePoint<=0x3FFFD)){return true;}return false;};var isFullwidthCodePoint_1=isFullwidthCodePoint;var default_1$1=isFullwidthCodePoint;isFullwidthCodePoint_1.default=default_1$1;var emojiRegex=function emojiRegex(){// https://mths.be/emoji\nreturn /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;};var stringWidth=function stringWidth(string){string=string.replace(emojiRegex(),\'  \');if(typeof string!==\'string\'||string.length===0){return 0;}string=stripAnsi(string);var width=0;for(var i=0;i<string.length;i++){var _code3=string.codePointAt(i);// Ignore control characters\nif(_code3<=0x1F||_code3>=0x7F&&_code3<=0x9F){continue;}// Ignore combining characters\nif(_code3>=0x300&&_code3<=0x36F){continue;}// Surrogates\nif(_code3>0xFFFF){i++;}width+=isFullwidthCodePoint_1(_code3)?2:1;}return width;};var stringWidth_1=stringWidth;// TODO: remove this in the next major version\nvar default_1$2=stringWidth;stringWidth_1.default=default_1$2;var matchOperatorsRegex=/[|\\\\{}()[\\]^$+*?.-]/g;var escapeStringRegexp$2=function escapeStringRegexp$2(string){if(typeof string!==\'string\'){throw new TypeError(\'Expected a string\');}return string.replace(matchOperatorsRegex,\'\\\\$&\');};var notAsciiRegex=/[^\\x20-\\x7F]/;function getPenultimate(arr){if(arr.length>1){return arr[arr.length-2];}return null;}/**\n   * @typedef {{backwards?: boolean}} SkipOptions\n   */ /**\n   * @param {string | RegExp} chars\n   * @returns {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */function skip(chars){return function(text,index,opts){var backwards=opts&&opts.backwards;// Allow `skip` functions to be threaded together without having\n// to check for failures (did someone say monads?).\nif(index===false){return false;}var length=text.length;var cursor=index;while(cursor>=0&&cursor<length){var c=text.charAt(cursor);if(chars instanceof RegExp){if(!chars.test(c)){return cursor;}}else if(!chars.includes(c)){return cursor;}backwards?cursor--:cursor++;}if(cursor===-1||cursor===length){// If we reached the beginning or end of the file, return the\n// out-of-bounds cursor. It\'s up to the caller to handle this\n// correctly. We don\'t want to indicate `false` though if it\n// actually skipped valid characters.\nreturn cursor;}return false;};}/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipWhitespace=skip(/\\s/);/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipSpaces=skip(" \\t");/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipToLineEnd=skip(",; \\t");/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipEverythingButNewLine=skip(/[^\\r\\n]/);/**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */function skipInlineComment(text,index){if(index===false){return false;}if(text.charAt(index)==="/"&&text.charAt(index+1)==="*"){for(var i=index+2;i<text.length;++i){if(text.charAt(i)==="*"&&text.charAt(i+1)==="/"){return i+2;}}}return index;}/**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */function skipTrailingComment(text,index){if(index===false){return false;}if(text.charAt(index)==="/"&&text.charAt(index+1)==="/"){return skipEverythingButNewLine(text,index);}return index;}// This one doesn\'t use the above helper function because it wants to\n// test \\r\\n in order and `skip` doesn\'t support ordering and we only\n// want to skip one newline. It\'s simple to implement.\n/**\n   * @param {string} text\n   * @param {number | false} index\n   * @param {SkipOptions=} opts\n   * @returns {number | false}\n   */function skipNewline(text,index,opts){var backwards=opts&&opts.backwards;if(index===false){return false;}var atIndex=text.charAt(index);if(backwards){if(text.charAt(index-1)==="\\r"&&atIndex==="\\n"){return index-2;}if(atIndex==="\\n"||atIndex==="\\r"||atIndex==="\\u2028"||atIndex==="\\u2029"){return index-1;}}else{if(atIndex==="\\r"&&text.charAt(index+1)==="\\n"){return index+2;}if(atIndex==="\\n"||atIndex==="\\r"||atIndex==="\\u2028"||atIndex==="\\u2029"){return index+1;}}return index;}/**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */function hasNewline(text,index,opts){opts=opts||{};var idx=skipSpaces(text,opts.backwards?index-1:index,opts);var idx2=skipNewline(text,idx,opts);return idx!==idx2;}/**\n   * @param {string} text\n   * @param {number} start\n   * @param {number} end\n   * @returns {boolean}\n   */function hasNewlineInRange(text,start,end){for(var i=start;i<end;++i){if(text.charAt(i)==="\\n"){return true;}}return false;}// Note: this function doesn\'t ignore leading comments unlike isNextLineEmpty\n/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locStart\n   */function isPreviousLineEmpty(text,node,locStart){/** @type {number | false} */var idx=locStart(node)-1;idx=skipSpaces(text,idx,{backwards:true});idx=skipNewline(text,idx,{backwards:true});idx=skipSpaces(text,idx,{backwards:true});var idx2=skipNewline(text,idx,{backwards:true});return idx!==idx2;}/**\n   * @param {string} text\n   * @param {number} index\n   * @returns {boolean}\n   */function isNextLineEmptyAfterIndex(text,index){/** @type {number | false} */var oldIdx=null;/** @type {number | false} */var idx=index;while(idx!==oldIdx){// We need to skip all the potential trailing inline comments\noldIdx=idx;idx=skipToLineEnd(text,idx);idx=skipInlineComment(text,idx);idx=skipSpaces(text,idx);}idx=skipTrailingComment(text,idx);idx=skipNewline(text,idx);return idx!==false&&hasNewline(text,idx);}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {boolean}\n   */function isNextLineEmpty(text,node,locEnd){return isNextLineEmptyAfterIndex(text,locEnd(node));}/**\n   * @param {string} text\n   * @param {number} idx\n   * @returns {number | false}\n   */function getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,idx){/** @type {number | false} */var oldIdx=null;/** @type {number | false} */var nextIdx=idx;while(nextIdx!==oldIdx){oldIdx=nextIdx;nextIdx=skipSpaces(text,nextIdx);nextIdx=skipInlineComment(text,nextIdx);nextIdx=skipTrailingComment(text,nextIdx);nextIdx=skipNewline(text,nextIdx);}return nextIdx;}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {number | false}\n   */function getNextNonSpaceNonCommentCharacterIndex(text,node,locEnd){return getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,locEnd(node));}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {string}\n   */function getNextNonSpaceNonCommentCharacter(text,node,locEnd){return text.charAt(// @ts-ignore => TBD: can return false, should we define a fallback?\ngetNextNonSpaceNonCommentCharacterIndex(text,node,locEnd));}/**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */function hasSpaces(text,index,opts){opts=opts||{};var idx=skipSpaces(text,opts.backwards?index-1:index,opts);return idx!==index;}/**\n   * @param {{range?: [number, number], start?: number}} node\n   * @param {number} index\n   */function setLocStart(node,index){if(node.range){node.range[0]=index;}else{node.start=index;}}/**\n   * @param {{range?: [number, number], end?: number}} node\n   * @param {number} index\n   */function setLocEnd(node,index){if(node.range){node.range[1]=index;}else{node.end=index;}}var PRECEDENCE={};[["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(function(tier,i){tier.forEach(function(op){PRECEDENCE[op]=i;});});function getPrecedence(op){return PRECEDENCE[op];}var equalityOperators={"==":true,"!=":true,"===":true,"!==":true};var multiplicativeOperators={"*":true,"/":true,"%":true};var bitshiftOperators={">>":true,">>>":true,"<<":true};function shouldFlatten(parentOp,nodeOp){if(getPrecedence(nodeOp)!==getPrecedence(parentOp)){return false;}// ** is right-associative\n// x ** y ** z --\x3e x ** (y ** z)\nif(parentOp==="**"){return false;}// x == y == z --\x3e (x == y) == z\nif(equalityOperators[parentOp]&&equalityOperators[nodeOp]){return false;}// x * y % z --\x3e (x * y) % z\nif(nodeOp==="%"&&multiplicativeOperators[parentOp]||parentOp==="%"&&multiplicativeOperators[nodeOp]){return false;}// x * y / z --\x3e (x * y) / z\n// x / y * z --\x3e (x / y) * z\nif(nodeOp!==parentOp&&multiplicativeOperators[nodeOp]&&multiplicativeOperators[parentOp]){return false;}// x << y << z --\x3e (x << y) << z\nif(bitshiftOperators[parentOp]&&bitshiftOperators[nodeOp]){return false;}return true;}function isBitwiseOperator(operator){return!!bitshiftOperators[operator]||operator==="|"||operator==="^"||operator==="&";}// Tests if an expression starts with `{`, or (if forbidFunctionClassAndDoExpr\n// holds) `function`, `class`, or `do {}`. Will be overzealous if there\'s\n// already necessary grouping parentheses.\nfunction startsWithNoLookaheadToken(node,forbidFunctionClassAndDoExpr){node=getLeftMost(node);switch(node.type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return forbidFunctionClassAndDoExpr;case"ObjectExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return startsWithNoLookaheadToken(node.object,forbidFunctionClassAndDoExpr);case"TaggedTemplateExpression":if(node.tag.type==="FunctionExpression"){// IIFEs are always already parenthesized\nreturn false;}return startsWithNoLookaheadToken(node.tag,forbidFunctionClassAndDoExpr);case"CallExpression":case"OptionalCallExpression":if(node.callee.type==="FunctionExpression"){// IIFEs are always already parenthesized\nreturn false;}return startsWithNoLookaheadToken(node.callee,forbidFunctionClassAndDoExpr);case"ConditionalExpression":return startsWithNoLookaheadToken(node.test,forbidFunctionClassAndDoExpr);case"UpdateExpression":return!node.prefix&&startsWithNoLookaheadToken(node.argument,forbidFunctionClassAndDoExpr);case"BindExpression":return node.object&&startsWithNoLookaheadToken(node.object,forbidFunctionClassAndDoExpr);case"SequenceExpression":return startsWithNoLookaheadToken(node.expressions[0],forbidFunctionClassAndDoExpr);case"TSAsExpression":return startsWithNoLookaheadToken(node.expression,forbidFunctionClassAndDoExpr);default:return false;}}function getLeftMost(node){if(node.left){return getLeftMost(node.left);}return node;}/**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @param {number=} startIndex\n   * @returns {number}\n   */function getAlignmentSize(value,tabWidth,startIndex){startIndex=startIndex||0;var size=0;for(var i=startIndex;i<value.length;++i){if(value[i]==="\\t"){// Tabs behave in a way that they are aligned to the nearest\n// multiple of tabWidth:\n// 0 -> 4, 1 -> 4, 2 -> 4, 3 -> 4\n// 4 -> 8, 5 -> 8, 6 -> 8, 7 -> 8 ...\nsize=size+tabWidth-size%tabWidth;}else{size++;}}return size;}/**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @returns {number}\n   */function getIndentSize(value,tabWidth){var lastNewlineIndex=value.lastIndexOf("\\n");if(lastNewlineIndex===-1){return 0;}return getAlignmentSize(// All the leading whitespaces\nvalue.slice(lastNewlineIndex+1).match(/^[ \\t]*/)[0],tabWidth);}/**\n   * @typedef {\'"\' | "\'"} Quote\n   */ /**\n   *\n   * @param {string} raw\n   * @param {Quote} preferredQuote\n   * @returns {Quote}\n   */function getPreferredQuote(raw,preferredQuote){// `rawContent` is the string exactly like it appeared in the input source\n// code, without its enclosing quotes.\nvar rawContent=raw.slice(1,-1);/** @type {{ quote: \'"\', regex: RegExp }} */var double={quote:\'"\',regex:/"/g};/** @type {{ quote: "\'", regex: RegExp }} */var single={quote:"\'",regex:/\'/g};var preferred=preferredQuote==="\'"?single:double;var alternate=preferred===single?double:single;var result=preferred.quote;// If `rawContent` contains at least one of the quote preferred for enclosing\n// the string, we might want to enclose with the alternate quote instead, to\n// minimize the number of escaped quotes.\nif(rawContent.includes(preferred.quote)||rawContent.includes(alternate.quote)){var numPreferredQuotes=(rawContent.match(preferred.regex)||[]).length;var numAlternateQuotes=(rawContent.match(alternate.regex)||[]).length;result=numPreferredQuotes>numAlternateQuotes?alternate.quote:preferred.quote;}return result;}function printString(raw,options,isDirectiveLiteral){// `rawContent` is the string exactly like it appeared in the input source\n// code, without its enclosing quotes.\nvar rawContent=raw.slice(1,-1);// Check for the alternate quote, to determine if we\'re allowed to swap\n// the quotes on a DirectiveLiteral.\nvar canChangeDirectiveQuotes=!rawContent.includes(\'"\')&&!rawContent.includes("\'");/** @type {Quote} */var enclosingQuote=options.parser==="json"?\'"\':options.__isInHtmlAttribute?"\'":getPreferredQuote(raw,options.singleQuote?"\'":\'"\');// Directives are exact code unit sequences, which means that you can\'t\n// change the escape sequences they use.\n// See https://github.com/prettier/prettier/issues/1555\n// and https://tc39.github.io/ecma262/#directive-prologue\nif(isDirectiveLiteral){if(canChangeDirectiveQuotes){return enclosingQuote+rawContent+enclosingQuote;}return raw;}// It might sound unnecessary to use `makeString` even if the string already\n// is enclosed with `enclosingQuote`, but it isn\'t. The string could contain\n// unnecessary escapes (such as in `"\\\'"`). Always using `makeString` makes\n// sure that we consistently output the minimum amount of escaped quotes.\nreturn makeString(rawContent,enclosingQuote,!(options.parser==="css"||options.parser==="less"||options.parser==="scss"||options.embeddedInHtml));}/**\n   * @param {string} rawContent\n   * @param {Quote} enclosingQuote\n   * @param {boolean=} unescapeUnnecessaryEscapes\n   * @returns {string}\n   */function makeString(rawContent,enclosingQuote,unescapeUnnecessaryEscapes){var otherQuote=enclosingQuote===\'"\'?"\'":\'"\';// Matches _any_ escape and unescaped quotes (both single and double).\nvar regex=/\\\\([\\s\\S])|([\'"])/g;// Escape and unescape single and double quotes as needed to be able to\n// enclose `rawContent` with `enclosingQuote`.\nvar newContent=rawContent.replace(regex,function(match,escaped,quote){// If we matched an escape, and the escaped character is a quote of the\n// other type than we intend to enclose the string with, there\'s no need for\n// it to be escaped, so return it _without_ the backslash.\nif(escaped===otherQuote){return escaped;}// If we matched an unescaped quote and it is of the _same_ type as we\n// intend to enclose the string with, it must be escaped, so return it with\n// a backslash.\nif(quote===enclosingQuote){return"\\\\"+quote;}if(quote){return quote;}// Unescape any unnecessarily escaped character.\n// Adapted from https://github.com/eslint/eslint/blob/de0b4ad7bd820ade41b1f606008bea68683dc11a/lib/rules/no-useless-escape.js#L27\nreturn unescapeUnnecessaryEscapes&&/^[^\\\\nrvtbfux\\r\\n\\u2028\\u2029"\'0-7]$/.test(escaped)?escaped:"\\\\"+escaped;});return enclosingQuote+newContent+enclosingQuote;}function printNumber(rawNumber){return rawNumber.toLowerCase()// Remove unnecessary plus and zeroes from scientific notation.\n.replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/,"$1$2$3")// Remove unnecessary scientific notation (1e0).\n.replace(/^([+-]?[\\d.]+)e[+-]?0+$/,"$1")// Make sure numbers always start with a digit.\n.replace(/^([+-])?\\./,"$10.")// Remove extraneous trailing decimal zeroes.\n.replace(/(\\.\\d+?)0+(?=e|$)/,"$1")// Remove trailing dot.\n.replace(/\\.(?=e|$)/,"");}/**\n   * @param {string} str\n   * @param {string} target\n   * @returns {number}\n   */function getMaxContinuousCount(str,target){var results=str.match(new RegExp("(".concat(escapeStringRegexp$2(target),")+"),"g"));if(results===null){return 0;}return results.reduce(function(maxCount,result){return Math.max(maxCount,result.length/target.length);},0);}function getMinNotPresentContinuousCount(str,target){var matches=str.match(new RegExp("(".concat(escapeStringRegexp$2(target),")+"),"g"));if(matches===null){return 0;}var countPresent=new Map();var max=0;var _iterator27=_createForOfIteratorHelper(matches),_step27;try{for(_iterator27.s();!(_step27=_iterator27.n()).done;){var match=_step27.value;var count=match.length/target.length;countPresent.set(count,true);if(count>max){max=count;}}}catch(err){_iterator27.e(err);}finally{_iterator27.f();}for(var i=1;i<max;i++){if(!countPresent.get(i)){return i;}}return max+1;}/**\n   * @param {string} text\n   * @returns {number}\n   */function getStringWidth(text){if(!text){return 0;}// shortcut to avoid needless string `RegExp`s, replacements, and allocations within `string-width`\nif(!notAsciiRegex.test(text)){return text.length;}return stringWidth_1(text);}function hasIgnoreComment(path){var node=path.getValue();return hasNodeIgnoreComment(node);}function hasNodeIgnoreComment(node){return node&&(node.comments&&node.comments.length>0&&node.comments.some(function(comment){return isNodeIgnoreComment(comment)&&!comment.unignore;})||node.prettierIgnore);}function isNodeIgnoreComment(comment){return comment.value.trim()==="prettier-ignore";}function addCommentHelper(node,comment){var comments=node.comments||(node.comments=[]);comments.push(comment);comment.printed=false;// For some reason, TypeScript parses `// x` inside of JSXText as a comment\n// We already "print" it via the raw text, we don\'t need to re-print it as a\n// comment\nif(node.type==="JSXText"){comment.printed=true;}}function addLeadingComment(node,comment){comment.leading=true;comment.trailing=false;addCommentHelper(node,comment);}function addDanglingComment(node,comment){comment.leading=false;comment.trailing=false;addCommentHelper(node,comment);}function addTrailingComment(node,comment){comment.leading=false;comment.trailing=true;addCommentHelper(node,comment);}function isWithinParentArrayProperty(path,propertyName){var node=path.getValue();var parent=path.getParentNode();if(parent==null){return false;}if(!Array.isArray(parent[propertyName])){return false;}var key=path.getName();return parent[propertyName][key]===node;}function replaceEndOfLineWith(text,replacement){var parts=[];var _iterator28=_createForOfIteratorHelper(text.split("\\n")),_step28;try{for(_iterator28.s();!(_step28=_iterator28.n()).done;){var part=_step28.value;if(parts.length!==0){parts.push(replacement);}parts.push(part);}}catch(err){_iterator28.e(err);}finally{_iterator28.f();}return parts;}var util$1={replaceEndOfLineWith:replaceEndOfLineWith,getStringWidth:getStringWidth,getMaxContinuousCount:getMaxContinuousCount,getMinNotPresentContinuousCount:getMinNotPresentContinuousCount,getPrecedence:getPrecedence,shouldFlatten:shouldFlatten,isBitwiseOperator:isBitwiseOperator,getPenultimate:getPenultimate,getLast:getLast,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:getNextNonSpaceNonCommentCharacterIndexWithStartIndex,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex,getNextNonSpaceNonCommentCharacter:getNextNonSpaceNonCommentCharacter,skip:skip,skipWhitespace:skipWhitespace,skipSpaces:skipSpaces,skipToLineEnd:skipToLineEnd,skipEverythingButNewLine:skipEverythingButNewLine,skipInlineComment:skipInlineComment,skipTrailingComment:skipTrailingComment,skipNewline:skipNewline,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex,isNextLineEmpty:isNextLineEmpty,isPreviousLineEmpty:isPreviousLineEmpty,hasNewline:hasNewline,hasNewlineInRange:hasNewlineInRange,hasSpaces:hasSpaces,setLocStart:setLocStart,setLocEnd:setLocEnd,startsWithNoLookaheadToken:startsWithNoLookaheadToken,getAlignmentSize:getAlignmentSize,getIndentSize:getIndentSize,getPreferredQuote:getPreferredQuote,printString:printString,printNumber:printNumber,hasIgnoreComment:hasIgnoreComment,hasNodeIgnoreComment:hasNodeIgnoreComment,isNodeIgnoreComment:isNodeIgnoreComment,makeString:makeString,addLeadingComment:addLeadingComment,addDanglingComment:addDanglingComment,addTrailingComment:addTrailingComment,isWithinParentArrayProperty:isWithinParentArrayProperty};function guessEndOfLine(text){var index=text.indexOf("\\r");if(index>=0){return text.charAt(index+1)==="\\n"?"crlf":"cr";}return"lf";}function convertEndOfLineToChars(value){switch(value){case"cr":return"\\r";case"crlf":return"\\r\\n";default:return"\\n";}}var endOfLine={guessEndOfLine:guessEndOfLine,convertEndOfLineToChars:convertEndOfLineToChars};var getStringWidth$1=util$1.getStringWidth;var convertEndOfLineToChars$1=endOfLine.convertEndOfLineToChars;var concat$1=docBuilders.concat,fill$1=docBuilders.fill,cursor$1=docBuilders.cursor;/** @type {Record<symbol, typeof MODE_BREAK | typeof MODE_FLAT>} */var groupModeMap;var MODE_BREAK=1;var MODE_FLAT=2;function rootIndent(){return{value:"",length:0,queue:[]};}function makeIndent(ind,options){return generateInd(ind,{type:"indent"},options);}function makeAlign(ind,n,options){return n===-Infinity?ind.root||rootIndent():n<0?generateInd(ind,{type:"dedent"},options):!n?ind:n.type==="root"?Object.assign({},ind,{root:ind}):typeof n==="string"?generateInd(ind,{type:"stringAlign",n:n},options):generateInd(ind,{type:"numberAlign",n:n},options);}function generateInd(ind,newPart,options){var queue=newPart.type==="dedent"?ind.queue.slice(0,-1):ind.queue.concat(newPart);var value="";var length=0;var lastTabs=0;var lastSpaces=0;var _iterator29=_createForOfIteratorHelper(queue),_step29;try{for(_iterator29.s();!(_step29=_iterator29.n()).done;){var part=_step29.value;switch(part.type){case"indent":flush();if(options.useTabs){addTabs(1);}else{addSpaces(options.tabWidth);}break;case"stringAlign":flush();value+=part.n;length+=part.n.length;break;case"numberAlign":lastTabs+=1;lastSpaces+=part.n;break;/* istanbul ignore next */default:throw new Error("Unexpected type \'".concat(part.type,"\'"));}}}catch(err){_iterator29.e(err);}finally{_iterator29.f();}flushSpaces();return Object.assign({},ind,{value:value,length:length,queue:queue});function addTabs(count){value+="\\t".repeat(count);length+=options.tabWidth*count;}function addSpaces(count){value+=" ".repeat(count);length+=count;}function flush(){if(options.useTabs){flushTabs();}else{flushSpaces();}}function flushTabs(){if(lastTabs>0){addTabs(lastTabs);}resetLast();}function flushSpaces(){if(lastSpaces>0){addSpaces(lastSpaces);}resetLast();}function resetLast(){lastTabs=0;lastSpaces=0;}}function trim$1(out){if(out.length===0){return 0;}var trimCount=0;// Trim whitespace at the end of line\nwhile(out.length>0&&typeof out[out.length-1]==="string"&&out[out.length-1].match(/^[ \\t]*$/)){trimCount+=out.pop().length;}if(out.length&&typeof out[out.length-1]==="string"){var trimmed=out[out.length-1].replace(/[ \\t]*$/,"");trimCount+=out[out.length-1].length-trimmed.length;out[out.length-1]=trimmed;}return trimCount;}function fits(next,restCommands,width,options,mustBeFlat){var restIdx=restCommands.length;var cmds=[next];// `out` is only used for width counting because `trim` requires to look\n// backwards for space characters.\nvar out=[];while(width>=0){if(cmds.length===0){if(restIdx===0){return true;}cmds.push(restCommands[restIdx-1]);restIdx--;continue;}var _cmds$pop=cmds.pop(),_cmds$pop2=(0,_slicedToArray2.default)(_cmds$pop,3),ind=_cmds$pop2[0],mode=_cmds$pop2[1],_doc=_cmds$pop2[2];if(typeof _doc==="string"){out.push(_doc);width-=getStringWidth$1(_doc);}else{switch(_doc.type){case"concat":for(var i=_doc.parts.length-1;i>=0;i--){cmds.push([ind,mode,_doc.parts[i]]);}break;case"indent":cmds.push([makeIndent(ind,options),mode,_doc.contents]);break;case"align":cmds.push([makeAlign(ind,_doc.n,options),mode,_doc.contents]);break;case"trim":width+=trim$1(out);break;case"group":if(mustBeFlat&&_doc.break){return false;}cmds.push([ind,_doc.break?MODE_BREAK:mode,_doc.contents]);if(_doc.id){groupModeMap[_doc.id]=cmds[cmds.length-1][1];}break;case"fill":for(var _i30=_doc.parts.length-1;_i30>=0;_i30--){cmds.push([ind,mode,_doc.parts[_i30]]);}break;case"if-break":{var groupMode=_doc.groupId?groupModeMap[_doc.groupId]:mode;if(groupMode===MODE_BREAK){if(_doc.breakContents){cmds.push([ind,mode,_doc.breakContents]);}}if(groupMode===MODE_FLAT){if(_doc.flatContents){cmds.push([ind,mode,_doc.flatContents]);}}break;}case"line":switch(mode){// fallthrough\ncase MODE_FLAT:if(!_doc.hard){if(!_doc.soft){out.push(" ");width-=1;}break;}return true;case MODE_BREAK:return true;}break;}}}return false;}function printDocToString(doc,options){groupModeMap={};var width=options.printWidth;var newLine=convertEndOfLineToChars$1(options.endOfLine);var pos=0;// cmds is basically a stack. We\'ve turned a recursive call into a\n// while loop which is much faster. The while loop below adds new\n// cmds to the array instead of recursively calling `print`.\nvar cmds=[[rootIndent(),MODE_BREAK,doc]];var out=[];var shouldRemeasure=false;var lineSuffix=[];while(cmds.length!==0){var _cmds$pop3=cmds.pop(),_cmds$pop4=(0,_slicedToArray2.default)(_cmds$pop3,3),ind=_cmds$pop4[0],mode=_cmds$pop4[1],_doc2=_cmds$pop4[2];if(typeof _doc2==="string"){var formatted=newLine!=="\\n"&&_doc2.includes("\\n")?_doc2.replace(/\\n/g,newLine):_doc2;out.push(formatted);pos+=getStringWidth$1(formatted);}else{switch(_doc2.type){case"cursor":out.push(cursor$1.placeholder);break;case"concat":for(var i=_doc2.parts.length-1;i>=0;i--){cmds.push([ind,mode,_doc2.parts[i]]);}break;case"indent":cmds.push([makeIndent(ind,options),mode,_doc2.contents]);break;case"align":cmds.push([makeAlign(ind,_doc2.n,options),mode,_doc2.contents]);break;case"trim":pos-=trim$1(out);break;case"group":switch(mode){case MODE_FLAT:if(!shouldRemeasure){cmds.push([ind,_doc2.break?MODE_BREAK:MODE_FLAT,_doc2.contents]);break;}// fallthrough\ncase MODE_BREAK:{shouldRemeasure=false;var next=[ind,MODE_FLAT,_doc2.contents];var rem=width-pos;if(!_doc2.break&&fits(next,cmds,rem,options)){cmds.push(next);}else{// Expanded states are a rare case where a document\n// can manually provide multiple representations of\n// itself. It provides an array of documents\n// going from the least expanded (most flattened)\n// representation first to the most expanded. If a\n// group has these, we need to manually go through\n// these states and find the first one that fits.\nif(_doc2.expandedStates){var mostExpanded=_doc2.expandedStates[_doc2.expandedStates.length-1];if(_doc2.break){cmds.push([ind,MODE_BREAK,mostExpanded]);break;}else{for(var _i31=1;_i31<_doc2.expandedStates.length+1;_i31++){if(_i31>=_doc2.expandedStates.length){cmds.push([ind,MODE_BREAK,mostExpanded]);break;}else{var state=_doc2.expandedStates[_i31];var cmd=[ind,MODE_FLAT,state];if(fits(cmd,cmds,rem,options)){cmds.push(cmd);break;}}}}}else{cmds.push([ind,MODE_BREAK,_doc2.contents]);}}break;}}if(_doc2.id){groupModeMap[_doc2.id]=cmds[cmds.length-1][1];}break;// Fills each line with as much code as possible before moving to a new\n// line with the same indentation.\n//\n// Expects doc.parts to be an array of alternating content and\n// whitespace. The whitespace contains the linebreaks.\n//\n// For example:\n//   ["I", line, "love", line, "monkeys"]\n// or\n//   [{ type: group, ... }, softline, { type: group, ... }]\n//\n// It uses this parts structure to handle three main layout cases:\n// * The first two content items fit on the same line without\n//   breaking\n//   -> output the first content item and the whitespace "flat".\n// * Only the first content item fits on the line without breaking\n//   -> output the first content item "flat" and the whitespace with\n//   "break".\n// * Neither content item fits on the line without breaking\n//   -> output the first content item and the whitespace with "break".\ncase"fill":{var _rem=width-pos;var parts=_doc2.parts;if(parts.length===0){break;}var _parts=(0,_slicedToArray2.default)(parts,2),content=_parts[0],whitespace=_parts[1];var contentFlatCmd=[ind,MODE_FLAT,content];var contentBreakCmd=[ind,MODE_BREAK,content];var contentFits=fits(contentFlatCmd,[],_rem,options,true);if(parts.length===1){if(contentFits){cmds.push(contentFlatCmd);}else{cmds.push(contentBreakCmd);}break;}var whitespaceFlatCmd=[ind,MODE_FLAT,whitespace];var whitespaceBreakCmd=[ind,MODE_BREAK,whitespace];if(parts.length===2){if(contentFits){cmds.push(whitespaceFlatCmd);cmds.push(contentFlatCmd);}else{cmds.push(whitespaceBreakCmd);cmds.push(contentBreakCmd);}break;}// At this point we\'ve handled the first pair (context, separator)\n// and will create a new fill doc for the rest of the content.\n// Ideally we wouldn\'t mutate the array here but copying all the\n// elements to a new array would make this algorithm quadratic,\n// which is unusable for large arrays (e.g. large texts in JSX).\nparts.splice(0,2);var remainingCmd=[ind,mode,fill$1(parts)];var secondContent=parts[0];var firstAndSecondContentFlatCmd=[ind,MODE_FLAT,concat$1([content,whitespace,secondContent])];var firstAndSecondContentFits=fits(firstAndSecondContentFlatCmd,[],_rem,options,true);if(firstAndSecondContentFits){cmds.push(remainingCmd);cmds.push(whitespaceFlatCmd);cmds.push(contentFlatCmd);}else if(contentFits){cmds.push(remainingCmd);cmds.push(whitespaceBreakCmd);cmds.push(contentFlatCmd);}else{cmds.push(remainingCmd);cmds.push(whitespaceBreakCmd);cmds.push(contentBreakCmd);}break;}case"if-break":{var groupMode=_doc2.groupId?groupModeMap[_doc2.groupId]:mode;if(groupMode===MODE_BREAK){if(_doc2.breakContents){cmds.push([ind,mode,_doc2.breakContents]);}}if(groupMode===MODE_FLAT){if(_doc2.flatContents){cmds.push([ind,mode,_doc2.flatContents]);}}break;}case"line-suffix":lineSuffix.push([ind,mode,_doc2.contents]);break;case"line-suffix-boundary":if(lineSuffix.length>0){cmds.push([ind,mode,{type:"line",hard:true}]);}break;case"line":switch(mode){case MODE_FLAT:if(!_doc2.hard){if(!_doc2.soft){out.push(" ");pos+=1;}break;}else{// This line was forced into the output even if we\n// were in flattened mode, so we need to tell the next\n// group that no matter what, it needs to remeasure\n// because the previous measurement didn\'t accurately\n// capture the entire expression (this is necessary\n// for nested groups)\nshouldRemeasure=true;}// fallthrough\ncase MODE_BREAK:if(lineSuffix.length){cmds.push([ind,mode,_doc2]);cmds.push.apply(cmds,(0,_toConsumableArray3.default)(lineSuffix.reverse()));lineSuffix=[];break;}if(_doc2.literal){if(ind.root){out.push(newLine,ind.root.value);pos=ind.root.length;}else{out.push(newLine);pos=0;}}else{pos-=trim$1(out);out.push(newLine+ind.value);pos=ind.length;}break;}break;}}}var cursorPlaceholderIndex=out.indexOf(cursor$1.placeholder);if(cursorPlaceholderIndex!==-1){var otherCursorPlaceholderIndex=out.indexOf(cursor$1.placeholder,cursorPlaceholderIndex+1);var beforeCursor=out.slice(0,cursorPlaceholderIndex).join("");var aroundCursor=out.slice(cursorPlaceholderIndex+1,otherCursorPlaceholderIndex).join("");var afterCursor=out.slice(otherCursorPlaceholderIndex+1).join("");return{formatted:beforeCursor+aroundCursor+afterCursor,cursorNodeStart:beforeCursor.length,cursorNodeText:aroundCursor};}return{formatted:out.join("")};}var docPrinter={printDocToString:printDocToString};var traverseDocOnExitStackMarker={};function traverseDoc(doc,onEnter,onExit,shouldTraverseConditionalGroups){var docsStack=[doc];while(docsStack.length!==0){var _doc3=docsStack.pop();if(_doc3===traverseDocOnExitStackMarker){onExit(docsStack.pop());continue;}var shouldRecurse=true;if(onEnter){if(onEnter(_doc3)===false){shouldRecurse=false;}}if(onExit){docsStack.push(_doc3);docsStack.push(traverseDocOnExitStackMarker);}if(shouldRecurse){// When there are multiple parts to process,\n// the parts need to be pushed onto the stack in reverse order,\n// so that they are processed in the original order\n// when the stack is popped.\nif(_doc3.type==="concat"||_doc3.type==="fill"){for(var ic=_doc3.parts.length,i=ic-1;i>=0;--i){docsStack.push(_doc3.parts[i]);}}else if(_doc3.type==="if-break"){if(_doc3.flatContents){docsStack.push(_doc3.flatContents);}if(_doc3.breakContents){docsStack.push(_doc3.breakContents);}}else if(_doc3.type==="group"&&_doc3.expandedStates){if(shouldTraverseConditionalGroups){for(var _ic=_doc3.expandedStates.length,_i32=_ic-1;_i32>=0;--_i32){docsStack.push(_doc3.expandedStates[_i32]);}}else{docsStack.push(_doc3.contents);}}else if(_doc3.contents){docsStack.push(_doc3.contents);}}}}function mapDoc(doc,cb){if(doc.type==="concat"||doc.type==="fill"){var parts=doc.parts.map(function(part){return mapDoc(part,cb);});return cb(Object.assign({},doc,{parts:parts}));}else if(doc.type==="if-break"){var breakContents=doc.breakContents&&mapDoc(doc.breakContents,cb);var flatContents=doc.flatContents&&mapDoc(doc.flatContents,cb);return cb(Object.assign({},doc,{breakContents:breakContents,flatContents:flatContents}));}else if(doc.contents){var contents=mapDoc(doc.contents,cb);return cb(Object.assign({},doc,{contents:contents}));}return cb(doc);}function findInDoc(doc,fn,defaultValue){var result=defaultValue;var hasStopped=false;function findInDocOnEnterFn(doc){var maybeResult=fn(doc);if(maybeResult!==undefined){hasStopped=true;result=maybeResult;}if(hasStopped){return false;}}traverseDoc(doc,findInDocOnEnterFn);return result;}function isEmpty(n){return typeof n==="string"&&n.length===0;}function isLineNextFn(doc){if(typeof doc==="string"){return false;}if(doc.type==="line"){return true;}}function isLineNext(doc){return findInDoc(doc,isLineNextFn,false);}function willBreakFn(doc){if(doc.type==="group"&&doc.break){return true;}if(doc.type==="line"&&doc.hard){return true;}if(doc.type==="break-parent"){return true;}}function willBreak(doc){return findInDoc(doc,willBreakFn,false);}function breakParentGroup(groupStack){if(groupStack.length>0){var parentGroup=groupStack[groupStack.length-1];// Breaks are not propagated through conditional groups because\n// the user is expected to manually handle what breaks.\nif(!parentGroup.expandedStates){parentGroup.break=true;}}return null;}function propagateBreaks(doc){var alreadyVisitedSet=new Set();var groupStack=[];function propagateBreaksOnEnterFn(doc){if(doc.type==="break-parent"){breakParentGroup(groupStack);}if(doc.type==="group"){groupStack.push(doc);if(alreadyVisitedSet.has(doc)){return false;}alreadyVisitedSet.add(doc);}}function propagateBreaksOnExitFn(doc){if(doc.type==="group"){var _group4=groupStack.pop();if(_group4.break){breakParentGroup(groupStack);}}}traverseDoc(doc,propagateBreaksOnEnterFn,propagateBreaksOnExitFn,/* shouldTraverseConditionalGroups */true);}function removeLinesFn(doc){// Force this doc into flat mode by statically converting all\n// lines into spaces (or soft lines into nothing). Hard lines\n// should still output because there\'s too great of a chance\n// of breaking existing assumptions otherwise.\nif(doc.type==="line"&&!doc.hard){return doc.soft?"":" ";}else if(doc.type==="if-break"){return doc.flatContents||"";}return doc;}function removeLines(doc){return mapDoc(doc,removeLinesFn);}function stripTrailingHardline(doc){// HACK remove ending hardline, original PR: #1984\nif(doc.type==="concat"&&doc.parts.length!==0){var lastPart=doc.parts[doc.parts.length-1];if(lastPart.type==="concat"){if(lastPart.parts.length===2&&lastPart.parts[0].hard&&lastPart.parts[1].type==="break-parent"){return{type:"concat",parts:doc.parts.slice(0,-1)};}return{type:"concat",parts:doc.parts.slice(0,-1).concat(stripTrailingHardline(lastPart))};}}return doc;}var docUtils={isEmpty:isEmpty,willBreak:willBreak,isLineNext:isLineNext,traverseDoc:traverseDoc,findInDoc:findInDoc,mapDoc:mapDoc,propagateBreaks:propagateBreaks,removeLines:removeLines,stripTrailingHardline:stripTrailingHardline};function flattenDoc(doc){if(doc.type==="concat"){var res=[];for(var i=0;i<doc.parts.length;++i){var doc2=doc.parts[i];if(typeof doc2!=="string"&&doc2.type==="concat"){res.push.apply(res,(0,_toConsumableArray3.default)(flattenDoc(doc2).parts));}else{var flattened=flattenDoc(doc2);if(flattened!==""){res.push(flattened);}}}return Object.assign({},doc,{parts:res});}else if(doc.type==="if-break"){return Object.assign({},doc,{breakContents:doc.breakContents!=null?flattenDoc(doc.breakContents):null,flatContents:doc.flatContents!=null?flattenDoc(doc.flatContents):null});}else if(doc.type==="group"){return Object.assign({},doc,{contents:flattenDoc(doc.contents),expandedStates:doc.expandedStates?doc.expandedStates.map(flattenDoc):doc.expandedStates});}else if(doc.contents){return Object.assign({},doc,{contents:flattenDoc(doc.contents)});}return doc;}function printDoc(doc){if(typeof doc==="string"){return JSON.stringify(doc);}if(doc.type==="line"){if(doc.literal){return"literalline";}if(doc.hard){return"hardline";}if(doc.soft){return"softline";}return"line";}if(doc.type==="break-parent"){return"breakParent";}if(doc.type==="trim"){return"trim";}if(doc.type==="concat"){return"["+doc.parts.map(printDoc).join(", ")+"]";}if(doc.type==="indent"){return"indent("+printDoc(doc.contents)+")";}if(doc.type==="align"){return doc.n===-Infinity?"dedentToRoot("+printDoc(doc.contents)+")":doc.n<0?"dedent("+printDoc(doc.contents)+")":doc.n.type==="root"?"markAsRoot("+printDoc(doc.contents)+")":"align("+JSON.stringify(doc.n)+", "+printDoc(doc.contents)+")";}if(doc.type==="if-break"){return"ifBreak("+printDoc(doc.breakContents)+(doc.flatContents?", "+printDoc(doc.flatContents):"")+")";}if(doc.type==="group"){if(doc.expandedStates){return"conditionalGroup("+"["+doc.expandedStates.map(printDoc).join(",")+"])";}return(doc.break?"wrappedGroup":"group")+"("+printDoc(doc.contents)+")";}if(doc.type==="fill"){return"fill"+"("+doc.parts.map(printDoc).join(", ")+")";}if(doc.type==="line-suffix"){return"lineSuffix("+printDoc(doc.contents)+")";}if(doc.type==="line-suffix-boundary"){return"lineSuffixBoundary";}throw new Error("Unknown doc type "+doc.type);}var docDebug={printDocToDebug:function printDocToDebug(doc){return printDoc(flattenDoc(doc));}};var document={builders:docBuilders,printer:docPrinter,utils:docUtils,debug:docDebug};var getMaxContinuousCount$1=util$1.getMaxContinuousCount,getStringWidth$2=util$1.getStringWidth,getAlignmentSize$1=util$1.getAlignmentSize,getIndentSize$1=util$1.getIndentSize,skip$1=util$1.skip,skipWhitespace$1=util$1.skipWhitespace,skipSpaces$1=util$1.skipSpaces,skipNewline$1=util$1.skipNewline,skipToLineEnd$1=util$1.skipToLineEnd,skipEverythingButNewLine$1=util$1.skipEverythingButNewLine,skipInlineComment$1=util$1.skipInlineComment,skipTrailingComment$1=util$1.skipTrailingComment,hasNewline$1=util$1.hasNewline,hasNewlineInRange$1=util$1.hasNewlineInRange,hasSpaces$1=util$1.hasSpaces,isNextLineEmpty$1=util$1.isNextLineEmpty,isNextLineEmptyAfterIndex$1=util$1.isNextLineEmptyAfterIndex,isPreviousLineEmpty$1=util$1.isPreviousLineEmpty,getNextNonSpaceNonCommentCharacterIndex$1=util$1.getNextNonSpaceNonCommentCharacterIndex,makeString$1=util$1.makeString,addLeadingComment$1=util$1.addLeadingComment,addDanglingComment$1=util$1.addDanglingComment,addTrailingComment$1=util$1.addTrailingComment;var utilShared={getMaxContinuousCount:getMaxContinuousCount$1,getStringWidth:getStringWidth$2,getAlignmentSize:getAlignmentSize$1,getIndentSize:getIndentSize$1,skip:skip$1,skipWhitespace:skipWhitespace$1,skipSpaces:skipSpaces$1,skipNewline:skipNewline$1,skipToLineEnd:skipToLineEnd$1,skipEverythingButNewLine:skipEverythingButNewLine$1,skipInlineComment:skipInlineComment$1,skipTrailingComment:skipTrailingComment$1,hasNewline:hasNewline$1,hasNewlineInRange:hasNewlineInRange$1,hasSpaces:hasSpaces$1,isNextLineEmpty:isNextLineEmpty$1,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex$1,isPreviousLineEmpty:isPreviousLineEmpty$1,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex$1,makeString:makeString$1,addLeadingComment:addLeadingComment$1,addDanglingComment:addDanglingComment$1,addTrailingComment:addTrailingComment$1};var _document$builders=document.builders,concat$2=_document$builders.concat,line$1=_document$builders.line,hardline$1=_document$builders.hardline,breakParent$1=_document$builders.breakParent,indent$1=_document$builders.indent,lineSuffix$1=_document$builders.lineSuffix,join$1=_document$builders.join,cursor$2=_document$builders.cursor;var hasNewline$2=util$1.hasNewline,skipNewline$2=util$1.skipNewline,isPreviousLineEmpty$2=util$1.isPreviousLineEmpty;var addLeadingComment$2=utilShared.addLeadingComment,addDanglingComment$2=utilShared.addDanglingComment,addTrailingComment$2=utilShared.addTrailingComment;var childNodesCacheKey=Symbol("child-nodes");function getSortedChildNodes(node,options,resultArray){if(!node){return;}var printer=options.printer,locStart=options.locStart,locEnd=options.locEnd;if(resultArray){if(printer.canAttachComment&&printer.canAttachComment(node)){// This reverse insertion sort almost always takes constant\n// time because we almost always (maybe always?) append the\n// nodes in order anyway.\nvar i;for(i=resultArray.length-1;i>=0;--i){if(locStart(resultArray[i])<=locStart(node)&&locEnd(resultArray[i])<=locEnd(node)){break;}}resultArray.splice(i+1,0,node);return;}}else if(node[childNodesCacheKey]){return node[childNodesCacheKey];}var childNodes=printer.getCommentChildNodes&&printer.getCommentChildNodes(node,options)||(0,_typeof3.default)(node)==="object"&&Object.keys(node).filter(function(n){return n!=="enclosingNode"&&n!=="precedingNode"&&n!=="followingNode";}).map(function(n){return node[n];});if(!childNodes){return;}if(!resultArray){Object.defineProperty(node,childNodesCacheKey,{value:resultArray=[],enumerable:false});}childNodes.forEach(function(childNode){getSortedChildNodes(childNode,options,resultArray);});return resultArray;}// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node,comment,options){var locStart=options.locStart,locEnd=options.locEnd;var childNodes=getSortedChildNodes(node,options);var precedingNode;var followingNode;// Time to dust off the old binary search robes and wizard hat.\nvar left=0;var right=childNodes.length;while(left<right){var middle=left+right>>1;var child=childNodes[middle];if(locStart(child)-locStart(comment)<=0&&locEnd(comment)-locEnd(child)<=0){// The comment is completely contained by this child node.\ncomment.enclosingNode=child;decorateComment(child,comment,options);return;// Abandon the binary search at this level.\n}if(locEnd(child)-locStart(comment)<=0){// This child node falls completely before the comment.\n// Because we will never consider this node or any nodes\n// before it again, this node must be the closest preceding\n// node we have encountered so far.\nprecedingNode=child;left=middle+1;continue;}if(locEnd(comment)-locStart(child)<=0){// This child node falls completely after the comment.\n// Because we will never consider this node or any nodes after\n// it again, this node must be the closest following node we\n// have encountered so far.\nfollowingNode=child;right=middle;continue;}/* istanbul ignore next */throw new Error("Comment location overlaps with node location");}// We don\'t want comments inside of different expressions inside of the same\n// template literal to move to another expression.\nif(comment.enclosingNode&&comment.enclosingNode.type==="TemplateLiteral"){var quasis=comment.enclosingNode.quasis;var commentIndex=findExpressionIndexForComment(quasis,comment,options);if(precedingNode&&findExpressionIndexForComment(quasis,precedingNode,options)!==commentIndex){precedingNode=null;}if(followingNode&&findExpressionIndexForComment(quasis,followingNode,options)!==commentIndex){followingNode=null;}}if(precedingNode){comment.precedingNode=precedingNode;}if(followingNode){comment.followingNode=followingNode;}}function attach(comments,ast,text,options){if(!Array.isArray(comments)){return;}var tiesToBreak=[];var locStart=options.locStart,locEnd=options.locEnd;comments.forEach(function(comment,i){if(options.parser==="json"||options.parser==="json5"||options.parser==="__js_expression"||options.parser==="__vue_expression"){if(locStart(comment)-locStart(ast)<=0){addLeadingComment$2(ast,comment);return;}if(locEnd(comment)-locEnd(ast)>=0){addTrailingComment$2(ast,comment);return;}}decorateComment(ast,comment,options);var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;var pluginHandleOwnLineComment=options.printer.handleComments&&options.printer.handleComments.ownLine?options.printer.handleComments.ownLine:function(){return false;};var pluginHandleEndOfLineComment=options.printer.handleComments&&options.printer.handleComments.endOfLine?options.printer.handleComments.endOfLine:function(){return false;};var pluginHandleRemainingComment=options.printer.handleComments&&options.printer.handleComments.remaining?options.printer.handleComments.remaining:function(){return false;};var isLastComment=comments.length-1===i;if(hasNewline$2(text,locStart(comment),{backwards:true})){// If a comment exists on its own line, prefer a leading comment.\n// We also need to check if it\'s the first line of the file.\nif(pluginHandleOwnLineComment(comment,text,options,ast,isLastComment));else if(followingNode){// Always a leading comment.\naddLeadingComment$2(followingNode,comment);}else if(precedingNode){addTrailingComment$2(precedingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}else if(hasNewline$2(text,locEnd(comment))){if(pluginHandleEndOfLineComment(comment,text,options,ast,isLastComment));else if(precedingNode){// There is content before this comment on the same line, but\n// none after it, so prefer a trailing comment of the previous node.\naddTrailingComment$2(precedingNode,comment);}else if(followingNode){addLeadingComment$2(followingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}else{if(pluginHandleRemainingComment(comment,text,options,ast,isLastComment));else if(precedingNode&&followingNode){// Otherwise, text exists both before and after the comment on\n// the same line. If there is both a preceding and following\n// node, use a tie-breaking algorithm to determine if it should\n// be attached to the next or previous node. In the last case,\n// simply attach the right node;\nvar tieCount=tiesToBreak.length;if(tieCount>0){var lastTie=tiesToBreak[tieCount-1];if(lastTie.followingNode!==comment.followingNode){breakTies(tiesToBreak,text,options);}}tiesToBreak.push(comment);}else if(precedingNode){addTrailingComment$2(precedingNode,comment);}else if(followingNode){addLeadingComment$2(followingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}});breakTies(tiesToBreak,text,options);comments.forEach(function(comment){// These node references were useful for breaking ties, but we\n// don\'t need them anymore, and they create cycles in the AST that\n// may lead to infinite recursion if we don\'t delete them here.\ndelete comment.precedingNode;delete comment.enclosingNode;delete comment.followingNode;});}function breakTies(tiesToBreak,text,options){var tieCount=tiesToBreak.length;if(tieCount===0){return;}var _tiesToBreak$=tiesToBreak[0],precedingNode=_tiesToBreak$.precedingNode,followingNode=_tiesToBreak$.followingNode,enclosingNode=_tiesToBreak$.enclosingNode;var gapRegExp=options.printer.getGapRegex&&options.printer.getGapRegex(enclosingNode)||/^[\\s(]*$/;var gapEndPos=options.locStart(followingNode);// Iterate backwards through tiesToBreak, examining the gaps\n// between the tied comments. In order to qualify as leading, a\n// comment must be separated from followingNode by an unbroken series of\n// gaps (or other comments). Gaps should only contain whitespace or open\n// parentheses.\nvar indexOfFirstLeadingComment;for(indexOfFirstLeadingComment=tieCount;indexOfFirstLeadingComment>0;--indexOfFirstLeadingComment){var comment=tiesToBreak[indexOfFirstLeadingComment-1];assert.strictEqual(comment.precedingNode,precedingNode);assert.strictEqual(comment.followingNode,followingNode);var gap=text.slice(options.locEnd(comment),gapEndPos);if(gapRegExp.test(gap)){gapEndPos=options.locStart(comment);}else{// The gap string contained something other than whitespace or open\n// parentheses.\nbreak;}}tiesToBreak.forEach(function(comment,i){if(i<indexOfFirstLeadingComment){addTrailingComment$2(precedingNode,comment);}else{addLeadingComment$2(followingNode,comment);}});tiesToBreak.length=0;}function printComment(commentPath,options){var comment=commentPath.getValue();comment.printed=true;return options.printer.printComment(commentPath,options);}function findExpressionIndexForComment(quasis,comment,options){var startPos=options.locStart(comment)-1;for(var i=1;i<quasis.length;++i){if(startPos<getQuasiRange(quasis[i]).start){return i-1;}}// We haven\'t found it, it probably means that some of the locations are off.\n// Let\'s just return the first one.\n/* istanbul ignore next */return 0;}function getQuasiRange(expr){if(expr.start!==undefined){// Babel\nreturn{start:expr.start,end:expr.end};}// Flow\nreturn{start:expr.range[0],end:expr.range[1]};}function printLeadingComment(commentPath,print,options){var comment=commentPath.getValue();var contents=printComment(commentPath,options);if(!contents){return"";}var isBlock=options.printer.isBlockComment&&options.printer.isBlockComment(comment);// Leading block comments should see if they need to stay on the\n// same line or not.\nif(isBlock){var lineBreak=hasNewline$2(options.originalText,options.locEnd(comment))?hasNewline$2(options.originalText,options.locStart(comment),{backwards:true})?hardline$1:line$1:" ";return concat$2([contents,lineBreak]);}return concat$2([contents,hardline$1]);}function printTrailingComment(commentPath,print,options){var comment=commentPath.getValue();var contents=printComment(commentPath,options);if(!contents){return"";}var isBlock=options.printer.isBlockComment&&options.printer.isBlockComment(comment);// We don\'t want the line to break\n// when the parentParentNode is a ClassDeclaration/-Expression\n// And the parentNode is in the superClass property\nvar parentNode=commentPath.getNode(1);var parentParentNode=commentPath.getNode(2);var isParentSuperClass=parentParentNode&&(parentParentNode.type==="ClassDeclaration"||parentParentNode.type==="ClassExpression")&&parentParentNode.superClass===parentNode;if(hasNewline$2(options.originalText,options.locStart(comment),{backwards:true})){// This allows comments at the end of nested structures:\n// {\n//   x: 1,\n//   y: 2\n//   // A comment\n// }\n// Those kinds of comments are almost always leading comments, but\n// here it doesn\'t go "outside" the block and turns it into a\n// trailing comment for `2`. We can simulate the above by checking\n// if this a comment on its own line; normal trailing comments are\n// always at the end of another expression.\nvar isLineBeforeEmpty=isPreviousLineEmpty$2(options.originalText,comment,options.locStart);return lineSuffix$1(concat$2([hardline$1,isLineBeforeEmpty?hardline$1:"",contents]));}else if(isBlock||isParentSuperClass){// Trailing block comments never need a newline\nreturn concat$2([" ",contents]);}return concat$2([lineSuffix$1(concat$2([" ",contents])),!isBlock?breakParent$1:""]);}function printDanglingComments(path,options,sameIndent,filter){var parts=[];var node=path.getValue();if(!node||!node.comments){return"";}path.each(function(commentPath){var comment=commentPath.getValue();if(comment&&!comment.leading&&!comment.trailing&&(!filter||filter(comment))){parts.push(printComment(commentPath,options));}},"comments");if(parts.length===0){return"";}if(sameIndent){return join$1(hardline$1,parts);}return indent$1(concat$2([hardline$1,join$1(hardline$1,parts)]));}function prependCursorPlaceholder(path,options,printed){if(path.getNode()===options.cursorNode&&path.getValue()){return concat$2([cursor$2,printed,cursor$2]);}return printed;}function printComments(path,print,options,needsSemi){var value=path.getValue();var printed=print(path);var comments=value&&value.comments;if(!comments||comments.length===0){return prependCursorPlaceholder(path,options,printed);}var leadingParts=[];var trailingParts=[needsSemi?";":"",printed];path.each(function(commentPath){var comment=commentPath.getValue();var leading=comment.leading,trailing=comment.trailing;if(leading){var contents=printLeadingComment(commentPath,print,options);if(!contents){return;}leadingParts.push(contents);var text=options.originalText;var _index=skipNewline$2(text,options.locEnd(comment));if(_index!==false&&hasNewline$2(text,_index)){leadingParts.push(hardline$1);}}else if(trailing){trailingParts.push(printTrailingComment(commentPath,print,options));}},"comments");return prependCursorPlaceholder(path,options,concat$2(leadingParts.concat(trailingParts)));}var comments={attach:attach,printComments:printComments,printDanglingComments:printDanglingComments,getSortedChildNodes:getSortedChildNodes};function getNodeHelper(path,count){var stackIndex=getNodeStackIndexHelper(path.stack,count);return stackIndex===-1?null:path.stack[stackIndex];}function getNodeStackIndexHelper(stack,count){for(var i=stack.length-1;i>=0;i-=2){var value=stack[i];if(value&&!Array.isArray(value)&&--count<0){return i;}}return-1;}var FastPath=/*#__PURE__*/function(){function FastPath(value){(0,_classCallCheck2.default)(this,FastPath);this.stack=[value];}// The name of the current property is always the penultimate element of\n// this.stack, and always a String.\n(0,_createClass2.default)(FastPath,[{key:"getName",value:function getName(){var stack=this.stack;var length=stack.length;if(length>1){return stack[length-2];}// Since the name is always a string, null is a safe sentinel value to\n// return if we do not know the name of the (root) value.\n/* istanbul ignore next */return null;}// The value of the current property is always the final element of\n// this.stack.\n},{key:"getValue",value:function getValue(){return getLast(this.stack);}},{key:"getNode",value:function getNode(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return getNodeHelper(this,count);}},{key:"getParentNode",value:function getParentNode(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return getNodeHelper(this,count+1);}// Temporarily push properties named by string arguments given after the\n// callback function onto this.stack, then call the callback with a\n// reference to this (modified) FastPath object. Note that the stack will\n// be restored to its original state after the callback is finished, so it\n// is probably a mistake to retain a reference to the path.\n},{key:"call",value:function call(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len9=arguments.length,names=new Array(_len9>1?_len9-1:0),_key13=1;_key13<_len9;_key13++){names[_key13-1]=arguments[_key13];}for(var _i33=0,_names=names;_i33<_names.length;_i33++){var _name6=_names[_i33];value=value[_name6];stack.push(_name6,value);}var result=callback(this);stack.length=length;return result;}},{key:"callParent",value:function callParent(callback){var _this$stack;var count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var stackIndex=getNodeStackIndexHelper(this.stack,count+1);var parentValues=this.stack.splice(stackIndex+1);var result=callback(this);(_this$stack=this.stack).push.apply(_this$stack,(0,_toConsumableArray3.default)(parentValues));return result;}// Similar to FastPath.prototype.call, except that the value obtained by\n// accessing this.getValue()[name1][name2]... should be array-like. The\n// callback will be called with a reference to this path object for each\n// element of the array.\n},{key:"each",value:function each(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len10=arguments.length,names=new Array(_len10>1?_len10-1:0),_key14=1;_key14<_len10;_key14++){names[_key14-1]=arguments[_key14];}for(var _i34=0,_names2=names;_i34<_names2.length;_i34++){var _name7=_names2[_i34];value=value[_name7];stack.push(_name7,value);}for(var i=0;i<value.length;++i){if(i in value){stack.push(i,value[i]);// If the callback needs to know the value of i, call\n// path.getName(), assuming path is the parameter name.\ncallback(this);stack.length-=2;}}stack.length=length;}// Similar to FastPath.prototype.each, except that the results of the\n// callback function invocations are stored in an array and returned at\n// the end of the iteration.\n},{key:"map",value:function map(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len11=arguments.length,names=new Array(_len11>1?_len11-1:0),_key15=1;_key15<_len11;_key15++){names[_key15-1]=arguments[_key15];}for(var _i35=0,_names3=names;_i35<_names3.length;_i35++){var _name8=_names3[_i35];value=value[_name8];stack.push(_name8,value);}var result=new Array(value.length);for(var i=0;i<value.length;++i){if(i in value){stack.push(i,value[i]);result[i]=callback(this,i);stack.length-=2;}}stack.length=length;return result;}/**\n     * @param {...(\n     *   | ((node: any, name: string | null, number: number | null) => boolean)\n     *   | undefined\n     * )} predicates\n     */},{key:"match",value:function match(){var stackPointer=this.stack.length-1;var name=null;var node=this.stack[stackPointer--];for(var _len12=arguments.length,predicates=new Array(_len12),_key16=0;_key16<_len12;_key16++){predicates[_key16]=arguments[_key16];}for(var _i36=0,_predicates=predicates;_i36<_predicates.length;_i36++){var predicate=_predicates[_i36];if(node===undefined){return false;}// skip index/array\nvar _number2=null;if(typeof name==="number"){_number2=name;name=this.stack[stackPointer--];node=this.stack[stackPointer--];}if(predicate&&!predicate(node,name,_number2)){return false;}name=this.stack[stackPointer--];node=this.stack[stackPointer--];}return true;}}]);return FastPath;}();var fastPath=FastPath;var normalize$2=options$1.normalize;function printSubtree(path,print,options,printAstToDoc){if(options.printer.embed){return options.printer.embed(path,print,function(text,partialNextOptions){return textToDoc(text,partialNextOptions,options,printAstToDoc);},options);}}function textToDoc(text,partialNextOptions,parentOptions,printAstToDoc){var nextOptions=normalize$2(Object.assign({},parentOptions,{},partialNextOptions,{parentParser:parentOptions.parser,embeddedInHtml:!!(parentOptions.embeddedInHtml||parentOptions.parser==="html"||parentOptions.parser==="vue"||parentOptions.parser==="angular"||parentOptions.parser==="lwc"),originalText:text}),{passThrough:true});var result=parser.parse(text,nextOptions);var ast=result.ast;text=result.text;var astComments=ast.comments;delete ast.comments;comments.attach(astComments,ast,text,nextOptions);return printAstToDoc(ast,nextOptions);}var multiparser={printSubtree:printSubtree};var doc=document;var docBuilders$1=doc.builders;var concat$3=docBuilders$1.concat,hardline$2=docBuilders$1.hardline,addAlignmentToDoc$1=docBuilders$1.addAlignmentToDoc;var docUtils$1=doc.utils;/**\n   * Takes an abstract syntax tree (AST) and recursively converts it to a\n   * document (series of printing primitives).\n   *\n   * This is done by descending down the AST recursively. The recursion\n   * involves two functions that call each other:\n   *\n   * 1. printGenerically(), which is defined as an inner function here.\n   *    It basically takes care of node caching.\n   * 2. callPluginPrintFunction(), which checks for some options, and\n   *    ultimately calls the print() function provided by the plugin.\n   *\n   * The plugin function will call printGenerically() again for child nodes\n   * of the current node, which will do its housekeeping, then call the\n   * plugin function again, and so on.\n   *\n   * All the while, these functions pass a "path" variable around, which\n   * is a stack-like data structure (FastPath) that maintains the current\n   * state of the recursion. It is called "path", because it represents\n   * the path to the current node through the Abstract Syntax Tree.\n   */function printAstToDoc(ast,options){var alignmentSize=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var printer=options.printer;if(printer.preprocess){ast=printer.preprocess(ast,options);}var cache=new Map();function printGenerically(path,args){var node=path.getValue();var shouldCache=node&&(0,_typeof3.default)(node)==="object"&&args===undefined;if(shouldCache&&cache.has(node)){return cache.get(node);}// We let JSXElement print its comments itself because it adds () around\n// UnionTypeAnnotation has to align the child without the comments\nvar res;if(printer.willPrintOwnComments&&printer.willPrintOwnComments(path,options)){res=callPluginPrintFunction(path,options,printGenerically,args);}else{// printComments will call the plugin print function and check for\n// comments to print\nres=comments.printComments(path,function(p){return callPluginPrintFunction(p,options,printGenerically,args);},options,args&&args.needsSemi);}if(shouldCache){cache.set(node,res);}return res;}var doc=printGenerically(new fastPath(ast));if(alignmentSize>0){// Add a hardline to make the indents take effect\n// It should be removed in index.js format()\ndoc=addAlignmentToDoc$1(concat$3([hardline$2,doc]),alignmentSize,options.tabWidth);}docUtils$1.propagateBreaks(doc);return doc;}function callPluginPrintFunction(path,options,printPath,args){assert.ok(path instanceof fastPath);var node=path.getValue();var printer=options.printer;// Escape hatch\nif(printer.hasPrettierIgnore&&printer.hasPrettierIgnore(path)){return options.originalText.slice(options.locStart(node),options.locEnd(node));}if(node){try{// Potentially switch to a different parser\nvar sub=multiparser.printSubtree(path,printPath,options,printAstToDoc);if(sub){return sub;}}catch(error){/* istanbul ignore if */if(commonjsGlobal.PRETTIER_DEBUG){throw error;}// Continue with current parser\n}}return printer.print(path,options,printPath,args);}var astToDoc=printAstToDoc;function findSiblingAncestors(startNodeAndParents,endNodeAndParents,opts){var resultStartNode=startNodeAndParents.node;var resultEndNode=endNodeAndParents.node;if(resultStartNode===resultEndNode){return{startNode:resultStartNode,endNode:resultEndNode};}var _iterator30=_createForOfIteratorHelper(endNodeAndParents.parentNodes),_step30;try{for(_iterator30.s();!(_step30=_iterator30.n()).done;){var endParent=_step30.value;if(endParent.type!=="Program"&&endParent.type!=="File"&&opts.locStart(endParent)>=opts.locStart(startNodeAndParents.node)){resultEndNode=endParent;}else{break;}}}catch(err){_iterator30.e(err);}finally{_iterator30.f();}var _iterator31=_createForOfIteratorHelper(startNodeAndParents.parentNodes),_step31;try{for(_iterator31.s();!(_step31=_iterator31.n()).done;){var startParent=_step31.value;if(startParent.type!=="Program"&&startParent.type!=="File"&&opts.locEnd(startParent)<=opts.locEnd(endNodeAndParents.node)){resultStartNode=startParent;}else{break;}}}catch(err){_iterator31.e(err);}finally{_iterator31.f();}return{startNode:resultStartNode,endNode:resultEndNode};}function findNodeAtOffset(node,offset,options,predicate,parentNodes){predicate=predicate||function(){return true;};parentNodes=parentNodes||[];var start=options.locStart(node,options.locStart);var end=options.locEnd(node,options.locEnd);if(start<=offset&&offset<=end){var _iterator32=_createForOfIteratorHelper(comments.getSortedChildNodes(node,options)),_step32;try{for(_iterator32.s();!(_step32=_iterator32.n()).done;){var childNode=_step32.value;var childResult=findNodeAtOffset(childNode,offset,options,predicate,[node].concat(parentNodes));if(childResult){return childResult;}}}catch(err){_iterator32.e(err);}finally{_iterator32.f();}if(predicate(node)){return{node:node,parentNodes:parentNodes};}}}// See https://www.ecma-international.org/ecma-262/5.1/#sec-A.5\nfunction isSourceElement(opts,node){if(node==null){return false;}// JS and JS like to avoid repetitions\nvar jsSourceElements=["FunctionDeclaration","BlockStatement","BreakStatement","ContinueStatement","DebuggerStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","ForInStatement","ForStatement","IfStatement","LabeledStatement","ReturnStatement","SwitchStatement","ThrowStatement","TryStatement","VariableDeclaration","WhileStatement","WithStatement","ClassDeclaration",// ES 2015\n"ImportDeclaration",// Module\n"ExportDefaultDeclaration",// Module\n"ExportNamedDeclaration",// Module\n"ExportAllDeclaration",// Module\n"TypeAlias",// Flow\n"InterfaceDeclaration",// Flow, TypeScript\n"TypeAliasDeclaration",// TypeScript\n"ExportAssignment",// TypeScript\n"ExportDeclaration"// TypeScript\n];var jsonSourceElements=["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral"];var graphqlSourceElements=["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"];switch(opts.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":return jsSourceElements.includes(node.type);case"json":return jsonSourceElements.includes(node.type);case"graphql":return graphqlSourceElements.includes(node.kind);case"vue":return node.tag!=="root";}return false;}function calculateRange(text,opts,ast){// Contract the range so that it has non-whitespace characters at its endpoints.\n// This ensures we can format a range that doesn\'t end on a node.\nvar rangeStringOrig=text.slice(opts.rangeStart,opts.rangeEnd);var startNonWhitespace=Math.max(opts.rangeStart+rangeStringOrig.search(/\\S/),opts.rangeStart);var endNonWhitespace;for(endNonWhitespace=opts.rangeEnd;endNonWhitespace>opts.rangeStart;--endNonWhitespace){if(text[endNonWhitespace-1].match(/\\S/)){break;}}var startNodeAndParents=findNodeAtOffset(ast,startNonWhitespace,opts,function(node){return isSourceElement(opts,node);});var endNodeAndParents=findNodeAtOffset(ast,endNonWhitespace,opts,function(node){return isSourceElement(opts,node);});if(!startNodeAndParents||!endNodeAndParents){return{rangeStart:0,rangeEnd:0};}var siblingAncestors=findSiblingAncestors(startNodeAndParents,endNodeAndParents,opts);var startNode=siblingAncestors.startNode,endNode=siblingAncestors.endNode;var rangeStart=Math.min(opts.locStart(startNode,opts.locStart),opts.locStart(endNode,opts.locStart));var rangeEnd=Math.max(opts.locEnd(startNode,opts.locEnd),opts.locEnd(endNode,opts.locEnd));return{rangeStart:rangeStart,rangeEnd:rangeEnd};}var rangeUtil={calculateRange:calculateRange,findNodeAtOffset:findNodeAtOffset};var diff=getCjsExportFromNamespace(index_es6);var normalizeOptions$1=options$1.normalize;var guessEndOfLine$1=endOfLine.guessEndOfLine,convertEndOfLineToChars$2=endOfLine.convertEndOfLineToChars;var printDocToString$1=document.printer.printDocToString,printDocToDebug=document.debug.printDocToDebug;var BOM="\\uFEFF";var CURSOR=Symbol("cursor");var PLACEHOLDERS={cursorOffset:"<<<PRETTIER_CURSOR>>>",rangeStart:"<<<PRETTIER_RANGE_START>>>",rangeEnd:"<<<PRETTIER_RANGE_END>>>"};function ensureAllCommentsPrinted(astComments){if(!astComments){return;}for(var i=0;i<astComments.length;++i){if(util$1.isNodeIgnoreComment(astComments[i])){// If there\'s a prettier-ignore, we\'re not printing that sub-tree so we\n// don\'t know if the comments was printed or not.\nreturn;}}astComments.forEach(function(comment){if(!comment.printed){throw new Error(\'Comment "\'+comment.value.trim()+\'" was not printed. Please report this error!\');}delete comment.printed;});}function attachComments(text,ast,opts){var astComments=ast.comments;if(astComments){delete ast.comments;comments.attach(astComments,ast,text,opts);}ast.tokens=[];opts.originalText=opts.parser==="yaml"?text:text.trimEnd();return astComments;}function coreFormat(text,opts,addAlignmentSize){if(!text||!text.trim().length){return{formatted:"",cursorOffset:0};}addAlignmentSize=addAlignmentSize||0;var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;if(opts.cursorOffset>=0){var nodeResult=rangeUtil.findNodeAtOffset(ast,opts.cursorOffset,opts);if(nodeResult&&nodeResult.node){opts.cursorNode=nodeResult.node;}}var astComments=attachComments(text,ast,opts);var doc=astToDoc(ast,opts,addAlignmentSize);var result=printDocToString$1(doc,opts);ensureAllCommentsPrinted(astComments);// Remove extra leading indentation as well as the added indentation after last newline\nif(addAlignmentSize>0){var trimmed=result.formatted.trim();if(result.cursorNodeStart!==undefined){result.cursorNodeStart-=result.formatted.indexOf(trimmed);}result.formatted=trimmed+convertEndOfLineToChars$2(opts.endOfLine);}if(opts.cursorOffset>=0){var oldCursorNodeStart;var oldCursorNodeText;var cursorOffsetRelativeToOldCursorNode;var newCursorNodeStart;var newCursorNodeText;if(opts.cursorNode&&result.cursorNodeText){oldCursorNodeStart=opts.locStart(opts.cursorNode);oldCursorNodeText=text.slice(oldCursorNodeStart,opts.locEnd(opts.cursorNode));cursorOffsetRelativeToOldCursorNode=opts.cursorOffset-oldCursorNodeStart;newCursorNodeStart=result.cursorNodeStart;newCursorNodeText=result.cursorNodeText;}else{oldCursorNodeStart=0;oldCursorNodeText=text;cursorOffsetRelativeToOldCursorNode=opts.cursorOffset;newCursorNodeStart=0;newCursorNodeText=result.formatted;}if(oldCursorNodeText===newCursorNodeText){return{formatted:result.formatted,cursorOffset:newCursorNodeStart+cursorOffsetRelativeToOldCursorNode};}// diff old and new cursor node texts, with a special cursor\n// symbol inserted to find out where it moves to\nvar oldCursorNodeCharArray=oldCursorNodeText.split("");oldCursorNodeCharArray.splice(cursorOffsetRelativeToOldCursorNode,0,CURSOR);var newCursorNodeCharArray=newCursorNodeText.split("");var cursorNodeDiff=diff.diffArrays(oldCursorNodeCharArray,newCursorNodeCharArray);var cursorOffset=newCursorNodeStart;var _iterator33=_createForOfIteratorHelper(cursorNodeDiff),_step33;try{for(_iterator33.s();!(_step33=_iterator33.n()).done;){var entry=_step33.value;if(entry.removed){if(entry.value.includes(CURSOR)){break;}}else{cursorOffset+=entry.count;}}}catch(err){_iterator33.e(err);}finally{_iterator33.f();}return{formatted:result.formatted,cursorOffset:cursorOffset};}return{formatted:result.formatted};}function formatRange(text,opts){var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;var range=rangeUtil.calculateRange(text,opts,ast);var rangeStart=range.rangeStart,rangeEnd=range.rangeEnd;var rangeString=text.slice(rangeStart,rangeEnd);// Try to extend the range backwards to the beginning of the line.\n// This is so we can detect indentation correctly and restore it.\n// Use `Math.min` since `lastIndexOf` returns 0 when `rangeStart` is 0\nvar rangeStart2=Math.min(rangeStart,text.lastIndexOf("\\n",rangeStart)+1);var indentString=text.slice(rangeStart2,rangeStart);var alignmentSize=util$1.getAlignmentSize(indentString,opts.tabWidth);var rangeResult=coreFormat(rangeString,Object.assign({},opts,{rangeStart:0,rangeEnd:Infinity,// track the cursor offset only if it\'s within our range\ncursorOffset:opts.cursorOffset>=rangeStart&&opts.cursorOffset<rangeEnd?opts.cursorOffset-rangeStart:-1}),alignmentSize);// Since the range contracts to avoid trailing whitespace,\n// we need to remove the newline that was inserted by the `format` call.\nvar rangeTrimmed=rangeResult.formatted.trimEnd();var rangeLeft=text.slice(0,rangeStart);var rangeRight=text.slice(rangeEnd);var cursorOffset=opts.cursorOffset;if(opts.cursorOffset>=rangeEnd){// handle the case where the cursor was past the end of the range\ncursorOffset=opts.cursorOffset-rangeEnd+(rangeStart+rangeTrimmed.length);}else if(rangeResult.cursorOffset!==undefined){// handle the case where the cursor was in the range\ncursorOffset=rangeResult.cursorOffset+rangeStart;}// keep the cursor as it was if it was before the start of the range\nvar formatted;if(opts.endOfLine==="lf"){formatted=rangeLeft+rangeTrimmed+rangeRight;}else{var eol=convertEndOfLineToChars$2(opts.endOfLine);if(cursorOffset>=0){var parts=[rangeLeft,rangeTrimmed,rangeRight];var partIndex=0;var partOffset=cursorOffset;while(partIndex<parts.length){var part=parts[partIndex];if(partOffset<part.length){parts[partIndex]=parts[partIndex].slice(0,partOffset)+PLACEHOLDERS.cursorOffset+parts[partIndex].slice(partOffset);break;}partIndex++;partOffset-=part.length;}var newRangeLeft=parts[0],newRangeTrimmed=parts[1],newRangeRight=parts[2];formatted=(newRangeLeft.replace(/\\n/g,eol)+newRangeTrimmed+newRangeRight.replace(/\\n/g,eol)).replace(PLACEHOLDERS.cursorOffset,function(_,index){cursorOffset=index;return"";});}else{formatted=rangeLeft.replace(/\\n/g,eol)+rangeTrimmed+rangeRight.replace(/\\n/g,eol);}}return{formatted:formatted,cursorOffset:cursorOffset};}function format(text,opts){var selectedParser=parser.resolveParser(opts);var hasPragma=!selectedParser.hasPragma||selectedParser.hasPragma(text);if(opts.requirePragma&&!hasPragma){return{formatted:text};}if(opts.endOfLine==="auto"){opts.endOfLine=guessEndOfLine$1(text);}var hasCursor=opts.cursorOffset>=0;var hasRangeStart=opts.rangeStart>0;var hasRangeEnd=opts.rangeEnd<text.length;// get rid of CR/CRLF parsing\nif(text.includes("\\r")){var offsetKeys=[hasCursor&&"cursorOffset",hasRangeStart&&"rangeStart",hasRangeEnd&&"rangeEnd"].filter(Boolean).sort(function(aKey,bKey){return opts[aKey]-opts[bKey];});for(var i=offsetKeys.length-1;i>=0;i--){var _key17=offsetKeys[i];text=text.slice(0,opts[_key17])+PLACEHOLDERS[_key17]+text.slice(opts[_key17]);}text=text.replace(/\\r\\n?/g,"\\n");var _loop12=function _loop12(_i37){var key=offsetKeys[_i37];text=text.replace(PLACEHOLDERS[key],function(_,index){opts[key]=index;return"";});};for(var _i37=0;_i37<offsetKeys.length;_i37++){_loop12(_i37);}}var hasUnicodeBOM=text.charAt(0)===BOM;if(hasUnicodeBOM){text=text.slice(1);if(hasCursor){opts.cursorOffset++;}if(hasRangeStart){opts.rangeStart++;}if(hasRangeEnd){opts.rangeEnd++;}}if(!hasCursor){opts.cursorOffset=-1;}if(opts.rangeStart<0){opts.rangeStart=0;}if(opts.rangeEnd>text.length){opts.rangeEnd=text.length;}var result=hasRangeStart||hasRangeEnd?formatRange(text,opts):coreFormat(opts.insertPragma&&opts.printer.insertPragma&&!hasPragma?opts.printer.insertPragma(text):text,opts);if(hasUnicodeBOM){result.formatted=BOM+result.formatted;if(hasCursor){result.cursorOffset++;}}return result;}var core={formatWithCursor:function formatWithCursor(text,opts){opts=normalizeOptions$1(opts);return format(text,opts);},parse:function parse(text,opts,massage){opts=normalizeOptions$1(opts);if(text.includes("\\r")){text=text.replace(/\\r\\n?/g,"\\n");}var parsed=parser.parse(text,opts);if(massage){parsed.ast=massageAst(parsed.ast,opts);}return parsed;},formatAST:function formatAST(ast,opts){opts=normalizeOptions$1(opts);var doc=astToDoc(ast,opts);return printDocToString$1(doc,opts);},// Doesn\'t handle shebang for now\nformatDoc:function formatDoc(doc,opts){var debug=printDocToDebug(doc);opts=normalizeOptions$1(Object.assign({},opts,{parser:"babel"}));return format(debug,opts).formatted;},printToDoc:function printToDoc(text,opts){opts=normalizeOptions$1(opts);var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;attachComments(text,ast,opts);return astToDoc(ast,opts);},printDocToString:function printDocToString(doc,opts){return printDocToString$1(doc,normalizeOptions$1(opts));}};function clean(ast,newObj,parent){["raw",// front-matter\n"raws","sourceIndex","source","before","after","trailingComma"].forEach(function(name){delete newObj[name];});if(ast.type==="yaml"){delete newObj.value;}// --insert-pragma\nif(ast.type==="css-comment"&&parent.type==="css-root"&&parent.nodes.length!==0&&(// first non-front-matter comment\nparent.nodes[0]===ast||(parent.nodes[0].type==="yaml"||parent.nodes[0].type==="toml")&&parent.nodes[1]===ast)){/**\n       * something\n       *\n       * @format\n       */delete newObj.text;// standalone pragma\nif(/^\\*\\s*@(format|prettier)\\s*$/.test(ast.text)){return null;}}if(ast.type==="media-query"||ast.type==="media-query-list"||ast.type==="media-feature-expression"){delete newObj.value;}if(ast.type==="css-rule"){delete newObj.params;}if(ast.type==="selector-combinator"){newObj.value=newObj.value.replace(/\\s+/g," ");}if(ast.type==="media-feature"){newObj.value=newObj.value.replace(/ /g,"");}if(ast.type==="value-word"&&(ast.isColor&&ast.isHex||["initial","inherit","unset","revert"].includes(newObj.value.replace().toLowerCase()))||ast.type==="media-feature"||ast.type==="selector-root-invalid"||ast.type==="selector-pseudo"){newObj.value=newObj.value.toLowerCase();}if(ast.type==="css-decl"){newObj.prop=newObj.prop.toLowerCase();}if(ast.type==="css-atrule"||ast.type==="css-import"){newObj.name=newObj.name.toLowerCase();}if(ast.type==="value-number"){newObj.unit=newObj.unit.toLowerCase();}if((ast.type==="media-feature"||ast.type==="media-keyword"||ast.type==="media-type"||ast.type==="media-unknown"||ast.type==="media-url"||ast.type==="media-value"||ast.type==="selector-attribute"||ast.type==="selector-string"||ast.type==="selector-class"||ast.type==="selector-combinator"||ast.type==="value-string")&&newObj.value){newObj.value=cleanCSSStrings(newObj.value);}if(ast.type==="selector-attribute"){newObj.attribute=newObj.attribute.trim();if(newObj.namespace){if(typeof newObj.namespace==="string"){newObj.namespace=newObj.namespace.trim();if(newObj.namespace.length===0){newObj.namespace=true;}}}if(newObj.value){newObj.value=newObj.value.trim().replace(/^[\'"]|[\'"]$/g,"");delete newObj.quoted;}}if((ast.type==="media-value"||ast.type==="media-type"||ast.type==="value-number"||ast.type==="selector-root-invalid"||ast.type==="selector-class"||ast.type==="selector-combinator"||ast.type==="selector-tag")&&newObj.value){newObj.value=newObj.value.replace(/([\\d.eE+-]+)([a-zA-Z]*)/g,function(match,numStr,unit){var num=Number(numStr);return isNaN(num)?match:num+unit.toLowerCase();});}if(ast.type==="selector-tag"){var lowercasedValue=ast.value.toLowerCase();if(["from","to"].includes(lowercasedValue)){newObj.value=lowercasedValue;}}// Workaround when `postcss-values-parser` parse `not`, `and` or `or` keywords as `value-func`\nif(ast.type==="css-atrule"&&ast.name.toLowerCase()==="supports"){delete newObj.value;}// Workaround for SCSS nested properties\nif(ast.type==="selector-unknown"){delete newObj.value;}}function cleanCSSStrings(value){return value.replace(/\'/g,\'"\').replace(/\\\\([^a-fA-F\\d])/g,"$1");}var clean_1=clean;var _document$builders2=document.builders,hardline$3=_document$builders2.hardline,literalline$1=_document$builders2.literalline,concat$4=_document$builders2.concat,markAsRoot$1=_document$builders2.markAsRoot,mapDoc$1=document.utils.mapDoc;function embed(path,print,textToDoc/*, options */){var node=path.getValue();if(node.type==="yaml"){return markAsRoot$1(concat$4(["---",hardline$3,node.value.trim()?replaceNewlinesWithLiterallines(textToDoc(node.value,{parser:"yaml"})):"","---",hardline$3]));}return null;function replaceNewlinesWithLiterallines(doc){return mapDoc$1(doc,function(currentDoc){return typeof currentDoc==="string"&&currentDoc.includes("\\n")?concat$4(currentDoc.split(/(\\n)/g).map(function(v,i){return i%2===0?v:literalline$1;})):currentDoc;});}}var embed_1=embed;var detectNewline=function detectNewline(string){if(typeof string!==\'string\'){throw new TypeError(\'Expected a string\');}var newlines=string.match(/(?:\\r?\\n)/g)||[];if(newlines.length===0){return;}var crlf=newlines.filter(function(newline){return newline===\'\\r\\n\';}).length;var lf=newlines.length-crlf;return crlf>lf?\'\\r\\n\':\'\\n\';};var detectNewline_1=detectNewline;var graceful=function graceful(string){return typeof string===\'string\'&&detectNewline(string)||\'\\n\';};detectNewline_1.graceful=graceful;var build=createCommonjsModule(function(module,exports){Object.defineProperty(exports,\'__esModule\',{value:true});exports.extract=extract;exports.strip=strip;exports.parse=parse;exports.parseWithComments=parseWithComments;exports.print=print;function _os(){var data=require$$0$1;_os=function _os(){return data;};return data;}function _detectNewline(){var data=_interopRequireDefault(detectNewline_1);_detectNewline=function _detectNewline(){return data;};return data;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**\n     * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */var commentEndRe=/\\*\\/$/;var commentStartRe=/^\\/\\*\\*/;var docblockRe=/^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)/;var lineCommentRe=/(^|\\s+)\\/\\/([^\\r\\n]*)/g;var ltrimNewlineRe=/^(\\r?\\n)+/;var multilineRe=/(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *(?![^@\\r\\n]*\\/\\/[^]*)([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g;var propertyRe=/(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g;var stringStartRe=/(\\r?\\n|^) *\\* ?/g;function extract(contents){var match=contents.match(docblockRe);return match?match[0].trimLeft():\'\';}function strip(contents){var match=contents.match(docblockRe);return match&&match[0]?contents.substring(match[0].length):contents;}function parse(docblock){return parseWithComments(docblock).pragmas;}function parseWithComments(docblock){var line=(0,_detectNewline().default)(docblock)||_os().EOL;docblock=docblock.replace(commentStartRe,\'\').replace(commentEndRe,\'\').replace(stringStartRe,\'$1\');// Normalize multi-line directives\nvar prev=\'\';while(prev!==docblock){prev=docblock;docblock=docblock.replace(multilineRe,"".concat(line,"$1 $2").concat(line));}docblock=docblock.replace(ltrimNewlineRe,\'\').trimRight();var result=Object.create(null);var comments=docblock.replace(propertyRe,\'\').replace(ltrimNewlineRe,\'\').trimRight();var match;while(match=propertyRe.exec(docblock)){// strip linecomments from pragmas\nvar nextPragma=match[2].replace(lineCommentRe,\'\');if(typeof result[match[1]]===\'string\'||Array.isArray(result[match[1]])){result[match[1]]=[].concat(result[match[1]],nextPragma);}else{result[match[1]]=nextPragma;}}return{comments:comments,pragmas:result};}function print(_ref25){var _ref25$comments=_ref25.comments,comments=_ref25$comments===void 0?\'\':_ref25$comments,_ref25$pragmas=_ref25.pragmas,pragmas=_ref25$pragmas===void 0?{}:_ref25$pragmas;var line=(0,_detectNewline().default)(comments)||_os().EOL;var head=\'/**\';var start=\' *\';var tail=\' */\';var keys=Object.keys(pragmas);var printedObject=keys.map(function(key){return printKeyValues(key,pragmas[key]);}).reduce(function(arr,next){return arr.concat(next);},[]).map(function(keyValue){return start+\' \'+keyValue+line;}).join(\'\');if(!comments){if(keys.length===0){return\'\';}if(keys.length===1&&!Array.isArray(pragmas[keys[0]])){var value=pragmas[keys[0]];return"".concat(head," ").concat(printKeyValues(keys[0],value)[0]).concat(tail);}}var printedComments=comments.split(line).map(function(textLine){return"".concat(start," ").concat(textLine);}).join(line)+line;return head+line+(comments?printedComments:\'\')+(comments&&keys.length?start+line:\'\')+printedObject+tail;}function printKeyValues(key,valueOrArray){return[].concat(valueOrArray).map(function(value){return"@".concat(key," ").concat(value).trim();});}});unwrapExports(build);var build_1=build.extract;var build_2=build.strip;var build_3=build.parse;var build_4=build.parseWithComments;var build_5=build.print;function hasPragma(text){var pragmas=Object.keys(build.parse(build.extract(text)));return pragmas.includes("prettier")||pragmas.includes("format");}function insertPragma(text){var parsedDocblock=build.parseWithComments(build.extract(text));var pragmas=Object.assign({format:""},parsedDocblock.pragmas);var newDocblock=build.print({pragmas:pragmas,comments:parsedDocblock.comments.replace(/^(\\s+?\\r?\\n)+/,"")// remove leading newlines\n}).replace(/(\\r\\n|\\r)/g,"\\n");// normalise newlines (mitigate use of os.EOL by jest-docblock)\nvar strippedText=build.strip(text);var separatingNewlines=strippedText.startsWith("\\n")?"\\n":"\\n\\n";return newDocblock+separatingNewlines+strippedText;}var pragma={hasPragma:hasPragma,insertPragma:insertPragma};var DELIMITER_MAP={"---":"yaml","+++":"toml"};function parse$1(text){var delimiterRegex=Object.keys(DELIMITER_MAP).map(escapeStringRegexp$2).join("|");var match=text.match(// trailing spaces after delimiters are allowed\nnew RegExp("^(".concat(delimiterRegex,")[^\\\\n\\\\S]*\\\\n(?:([\\\\s\\\\S]*?)\\\\n)?\\\\1[^\\\\n\\\\S]*(\\\\n|$)")));if(match===null){return{frontMatter:null,content:text};}var _match=(0,_slicedToArray2.default)(match,3),raw=_match[0],delimiter=_match[1],value=_match[2];return{frontMatter:{type:DELIMITER_MAP[delimiter],value:value,raw:raw.replace(/\\n$/,"")},content:raw.replace(/[^\\n]/g," ")+text.slice(raw.length)};}var frontMatter=parse$1;function hasPragma$1(text){return pragma.hasPragma(frontMatter(text).content);}function insertPragma$1(text){var _frontMatter=frontMatter(text),frontMatter$1=_frontMatter.frontMatter,content=_frontMatter.content;return(frontMatter$1?frontMatter$1.raw+"\\n\\n":"")+pragma.insertPragma(content);}var pragma$1={hasPragma:hasPragma$1,insertPragma:insertPragma$1};var lineColumnToIndex=function lineColumnToIndex(lineColumn,text){var index=0;for(var i=0;i<lineColumn.line-1;++i){index=text.indexOf("\\n",index)+1;if(index===-1){return-1;}}return index+lineColumn.column;};var getLast$1=util$1.getLast,skipEverythingButNewLine$2=util$1.skipEverythingButNewLine;function calculateLocStart(node,text){if(node.source){return lineColumnToIndex(node.source.start,text)-1;}return null;}function calculateLocEnd(node,text){if(node.type==="css-comment"&&node.inline){return skipEverythingButNewLine$2(text,node.source.startOffset);}var endNode=node.nodes&&getLast$1(node.nodes);if(endNode&&node.source&&!node.source.end){node=endNode;}if(node.source&&node.source.end){return lineColumnToIndex(node.source.end,text);}return null;}function calculateLoc(node,text){if(node&&(0,_typeof3.default)(node)==="object"){if(node.source){node.source.startOffset=calculateLocStart(node,text);node.source.endOffset=calculateLocEnd(node,text);}for(var _key18 in node){calculateLoc(node[_key18],text);}}}/**\n   * Workaround for a bug: quotes in inline comments corrupt loc data of subsequent nodes.\n   * This function replaces the quotes with U+FFFE and U+FFFF. Later, when the comments are printed,\n   * their content is extracted from the original text or restored by replacing the placeholder\n   * characters back with quotes.\n   * - https://github.com/prettier/prettier/issues/7780\n   * - https://github.com/shellscape/postcss-less/issues/145\n   * - About noncharacters (U+FFFE and U+FFFF): http://www.unicode.org/faq/private_use.html#nonchar1\n   * @param text {string}\n   */function replaceQuotesInInlineComments(text){/** @typedef { \'initial\' | \'single-quotes\' | \'double-quotes\' | \'url\' | \'comment-block\' | \'comment-inline\' } State */ /** @type {State} */var state="initial";/** @type {State} */var stateToReturnFromQuotes="initial";var inlineCommentStartIndex;var inlineCommentContainsQuotes=false;var inlineCommentsToReplace=[];for(var i=0;i<text.length;i++){var c=text[i];switch(state){case"initial":if(c==="\'"){state="single-quotes";continue;}if(c===\'"\'){state="double-quotes";continue;}if((c==="u"||c==="U")&&text.slice(i,i+4).toLowerCase()==="url("){state="url";i+=3;continue;}if(c==="*"&&text[i-1]==="/"){state="comment-block";continue;}if(c==="/"&&text[i-1]==="/"){state="comment-inline";inlineCommentStartIndex=i-1;continue;}continue;case"single-quotes":if(c==="\'"&&text[i-1]!=="\\\\"){state=stateToReturnFromQuotes;stateToReturnFromQuotes="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}continue;case"double-quotes":if(c===\'"\'&&text[i-1]!=="\\\\"){state=stateToReturnFromQuotes;stateToReturnFromQuotes="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}continue;case"url":if(c===")"){state="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}if(c==="\'"){state="single-quotes";stateToReturnFromQuotes="url";continue;}if(c===\'"\'){state="double-quotes";stateToReturnFromQuotes="url";continue;}continue;case"comment-block":if(c==="/"&&text[i-1]==="*"){state="initial";}continue;case"comment-inline":if(c===\'"\'||c==="\'"){inlineCommentContainsQuotes=true;}if(c==="\\n"||c==="\\r"){if(inlineCommentContainsQuotes){inlineCommentsToReplace.push([inlineCommentStartIndex,i]);}state="initial";inlineCommentContainsQuotes=false;}continue;}}for(var _i38=0,_inlineCommentsToRepl=inlineCommentsToReplace;_i38<_inlineCommentsToRepl.length;_i38++){var _inlineCommentsToRepl2=(0,_slicedToArray2.default)(_inlineCommentsToRepl[_i38],2),start=_inlineCommentsToRepl2[0],end=_inlineCommentsToRepl2[1];text=text.slice(0,start)+text.slice(start,end).replace(/\'/g,"\\uFFFE").replace(/"/g,"\\uFFFF")+text.slice(end);}return text;}function restoreQuotesInInlineComments(text){return text.replace(/\\ufffe/g,"\'").replace(/\\uffff/g,\'"\');}var loc$1={calculateLoc:calculateLoc,replaceQuotesInInlineComments:replaceQuotesInInlineComments,restoreQuotesInInlineComments:restoreQuotesInInlineComments};var colorAdjusterFunctions=["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"];function getAncestorCounter(path,typeOrTypes){var types=[].concat(typeOrTypes);var counter=-1;var ancestorNode;while(ancestorNode=path.getParentNode(++counter)){if(types.includes(ancestorNode.type)){return counter;}}return-1;}function getAncestorNode(path,typeOrTypes){var counter=getAncestorCounter(path,typeOrTypes);return counter===-1?null:path.getParentNode(counter);}function getPropOfDeclNode(path){var declAncestorNode=getAncestorNode(path,"css-decl");return declAncestorNode&&declAncestorNode.prop&&declAncestorNode.prop.toLowerCase();}function isSCSS(parser,text){var hasExplicitParserChoice=parser==="less"||parser==="scss";var IS_POSSIBLY_SCSS=/(\\w\\s*:\\s*[^}:]+|#){|@import[^\\n]+(?:url|,)/;return hasExplicitParserChoice?parser==="scss":IS_POSSIBLY_SCSS.test(text);}function isWideKeywords(value){return["initial","inherit","unset","revert"].includes(value.toLowerCase());}function isKeyframeAtRuleKeywords(path,value){var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleAncestorNode.name&&atRuleAncestorNode.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(value.toLowerCase());}function maybeToLowerCase(value){return value.includes("$")||value.includes("@")||value.includes("#")||value.startsWith("%")||value.startsWith("--")||value.startsWith(":--")||value.includes("(")&&value.includes(")")?value:value.toLowerCase();}function insideValueFunctionNode(path,functionName){var funcAncestorNode=getAncestorNode(path,"value-func");return funcAncestorNode&&funcAncestorNode.value&&funcAncestorNode.value.toLowerCase()===functionName;}function insideICSSRuleNode(path){var ruleAncestorNode=getAncestorNode(path,"css-rule");return ruleAncestorNode&&ruleAncestorNode.raws&&ruleAncestorNode.raws.selector&&(ruleAncestorNode.raws.selector.startsWith(":import")||ruleAncestorNode.raws.selector.startsWith(":export"));}function insideAtRuleNode(path,atRuleNameOrAtRuleNames){var atRuleNames=[].concat(atRuleNameOrAtRuleNames);var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleNames.includes(atRuleAncestorNode.name.toLowerCase());}function insideURLFunctionInImportAtRuleNode(path){var node=path.getValue();var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleAncestorNode.name==="import"&&node.groups[0].value==="url"&&node.groups.length===2;}function isURLFunctionNode(node){return node.type==="value-func"&&node.value.toLowerCase()==="url";}function isLastNode(path,node){var parentNode=path.getParentNode();if(!parentNode){return false;}var nodes=parentNode.nodes;return nodes&&nodes.indexOf(node)===nodes.length-1;}function isDetachedRulesetDeclarationNode(node){// If a Less file ends up being parsed with the SCSS parser, Less\n// variable declarations will be parsed as atrules with names ending\n// with a colon, so keep the original case then.\nif(!node.selector){return false;}return typeof node.selector==="string"&&/^@.+:.*$/.test(node.selector)||node.selector.value&&/^@.+:.*$/.test(node.selector.value);}function isForKeywordNode(node){return node.type==="value-word"&&["from","through","end"].includes(node.value);}function isIfElseKeywordNode(node){return node.type==="value-word"&&["and","or","not"].includes(node.value);}function isEachKeywordNode(node){return node.type==="value-word"&&node.value==="in";}function isMultiplicationNode(node){return node.type==="value-operator"&&node.value==="*";}function isDivisionNode(node){return node.type==="value-operator"&&node.value==="/";}function isAdditionNode(node){return node.type==="value-operator"&&node.value==="+";}function isSubtractionNode(node){return node.type==="value-operator"&&node.value==="-";}function isModuloNode(node){return node.type==="value-operator"&&node.value==="%";}function isMathOperatorNode(node){return isMultiplicationNode(node)||isDivisionNode(node)||isAdditionNode(node)||isSubtractionNode(node)||isModuloNode(node);}function isEqualityOperatorNode(node){return node.type==="value-word"&&["==","!="].includes(node.value);}function isRelationalOperatorNode(node){return node.type==="value-word"&&["<",">","<=",">="].includes(node.value);}function isSCSSControlDirectiveNode(node){return node.type==="css-atrule"&&["if","else","for","each","while"].includes(node.name);}function isSCSSNestedPropertyNode(node){if(!node.selector){return false;}return node.selector.replace(/\\/\\*.*?\\*\\//,"").replace(/\\/\\/.*?\\n/,"").trim().endsWith(":");}function isDetachedRulesetCallNode(node){return node.raws&&node.raws.params&&/^\\(\\s*\\)$/.test(node.raws.params);}function isTemplatePlaceholderNode(node){return node.name.startsWith("prettier-placeholder");}function isTemplatePropNode(node){return node.prop.startsWith("@prettier-placeholder");}function isPostcssSimpleVarNode(currentNode,nextNode){return currentNode.value==="$$"&&currentNode.type==="value-func"&&nextNode&&nextNode.type==="value-word"&&!nextNode.raws.before;}function hasComposesNode(node){return node.value&&node.value.type==="value-root"&&node.value.group&&node.value.group.type==="value-value"&&node.prop.toLowerCase()==="composes";}function hasParensAroundNode(node){return node.value&&node.value.group&&node.value.group.group&&node.value.group.group.type==="value-paren_group"&&node.value.group.group.open!==null&&node.value.group.group.close!==null;}function hasEmptyRawBefore(node){return node.raws&&node.raws.before==="";}function isKeyValuePairNode(node){return node.type==="value-comma_group"&&node.groups&&node.groups[1]&&node.groups[1].type==="value-colon";}function isKeyValuePairInParenGroupNode(node){return node.type==="value-paren_group"&&node.groups&&node.groups[0]&&isKeyValuePairNode(node.groups[0]);}function isSCSSMapItemNode(path){var node=path.getValue();// Ignore empty item (i.e. `$key: ()`)\nif(node.groups.length===0){return false;}var parentParentNode=path.getParentNode(1);// Check open parens contain key/value pair (i.e. `(key: value)` and `(key: (value, other-value)`)\nif(!isKeyValuePairInParenGroupNode(node)&&!(parentParentNode&&isKeyValuePairInParenGroupNode(parentParentNode))){return false;}var declNode=getAncestorNode(path,"css-decl");// SCSS map declaration (i.e. `$map: (key: value, other-key: other-value)`)\nif(declNode&&declNode.prop&&declNode.prop.startsWith("$")){return true;}// List as value of key inside SCSS map (i.e. `$map: (key: (value other-value other-other-value))`)\nif(isKeyValuePairInParenGroupNode(parentParentNode)){return true;}// SCSS Map is argument of function (i.e. `func((key: value, other-key: other-value))`)\nif(parentParentNode.type==="value-func"){return true;}return false;}function isInlineValueCommentNode(node){return node.type==="value-comment"&&node.inline;}function isHashNode(node){return node.type==="value-word"&&node.value==="#";}function isLeftCurlyBraceNode(node){return node.type==="value-word"&&node.value==="{";}function isRightCurlyBraceNode(node){return node.type==="value-word"&&node.value==="}";}function isWordNode(node){return["value-word","value-atword"].includes(node.type);}function isColonNode(node){return node.type==="value-colon";}function isMediaAndSupportsKeywords(node){return node.value&&["not","and","or"].includes(node.value.toLowerCase());}function isColorAdjusterFuncNode(node){if(node.type!=="value-func"){return false;}return colorAdjusterFunctions.includes(node.value.toLowerCase());}// TODO: only check `less` when we don\'t use `less` to parse `css`\nfunction isLessParser(options){return options.parser==="css"||options.parser==="less";}function lastLineHasInlineComment(text){return /\\/\\//.test(text.split(/[\\r\\n]/).pop());}var utils$2={getAncestorCounter:getAncestorCounter,getAncestorNode:getAncestorNode,getPropOfDeclNode:getPropOfDeclNode,maybeToLowerCase:maybeToLowerCase,insideValueFunctionNode:insideValueFunctionNode,insideICSSRuleNode:insideICSSRuleNode,insideAtRuleNode:insideAtRuleNode,insideURLFunctionInImportAtRuleNode:insideURLFunctionInImportAtRuleNode,isKeyframeAtRuleKeywords:isKeyframeAtRuleKeywords,isWideKeywords:isWideKeywords,isSCSS:isSCSS,isLastNode:isLastNode,isLessParser:isLessParser,isSCSSControlDirectiveNode:isSCSSControlDirectiveNode,isDetachedRulesetDeclarationNode:isDetachedRulesetDeclarationNode,isRelationalOperatorNode:isRelationalOperatorNode,isEqualityOperatorNode:isEqualityOperatorNode,isMultiplicationNode:isMultiplicationNode,isDivisionNode:isDivisionNode,isAdditionNode:isAdditionNode,isSubtractionNode:isSubtractionNode,isModuloNode:isModuloNode,isMathOperatorNode:isMathOperatorNode,isEachKeywordNode:isEachKeywordNode,isForKeywordNode:isForKeywordNode,isURLFunctionNode:isURLFunctionNode,isIfElseKeywordNode:isIfElseKeywordNode,hasComposesNode:hasComposesNode,hasParensAroundNode:hasParensAroundNode,hasEmptyRawBefore:hasEmptyRawBefore,isSCSSNestedPropertyNode:isSCSSNestedPropertyNode,isDetachedRulesetCallNode:isDetachedRulesetCallNode,isTemplatePlaceholderNode:isTemplatePlaceholderNode,isTemplatePropNode:isTemplatePropNode,isPostcssSimpleVarNode:isPostcssSimpleVarNode,isKeyValuePairNode:isKeyValuePairNode,isKeyValuePairInParenGroupNode:isKeyValuePairInParenGroupNode,isSCSSMapItemNode:isSCSSMapItemNode,isInlineValueCommentNode:isInlineValueCommentNode,isHashNode:isHashNode,isLeftCurlyBraceNode:isLeftCurlyBraceNode,isRightCurlyBraceNode:isRightCurlyBraceNode,isWordNode:isWordNode,isColonNode:isColonNode,isMediaAndSupportsKeywords:isMediaAndSupportsKeywords,isColorAdjusterFuncNode:isColorAdjusterFuncNode,lastLineHasInlineComment:lastLineHasInlineComment};var insertPragma$2=pragma$1.insertPragma;var printNumber$1=util$1.printNumber,printString$1=util$1.printString,hasIgnoreComment$1=util$1.hasIgnoreComment,hasNewline$3=util$1.hasNewline;var isNextLineEmpty$2=utilShared.isNextLineEmpty;var restoreQuotesInInlineComments$1=loc$1.restoreQuotesInInlineComments;var _document$builders3=document.builders,concat$5=_document$builders3.concat,join$2=_document$builders3.join,line$2=_document$builders3.line,hardline$4=_document$builders3.hardline,softline$1=_document$builders3.softline,group$1=_document$builders3.group,fill$2=_document$builders3.fill,indent$2=_document$builders3.indent,dedent$1=_document$builders3.dedent,ifBreak$1=_document$builders3.ifBreak,removeLines$1=document.utils.removeLines;var getAncestorNode$1=utils$2.getAncestorNode,getPropOfDeclNode$1=utils$2.getPropOfDeclNode,maybeToLowerCase$1=utils$2.maybeToLowerCase,insideValueFunctionNode$1=utils$2.insideValueFunctionNode,insideICSSRuleNode$1=utils$2.insideICSSRuleNode,insideAtRuleNode$1=utils$2.insideAtRuleNode,insideURLFunctionInImportAtRuleNode$1=utils$2.insideURLFunctionInImportAtRuleNode,isKeyframeAtRuleKeywords$1=utils$2.isKeyframeAtRuleKeywords,isWideKeywords$1=utils$2.isWideKeywords,isSCSS$1=utils$2.isSCSS,isLastNode$1=utils$2.isLastNode,isLessParser$1=utils$2.isLessParser,isSCSSControlDirectiveNode$1=utils$2.isSCSSControlDirectiveNode,isDetachedRulesetDeclarationNode$1=utils$2.isDetachedRulesetDeclarationNode,isRelationalOperatorNode$1=utils$2.isRelationalOperatorNode,isEqualityOperatorNode$1=utils$2.isEqualityOperatorNode,isMultiplicationNode$1=utils$2.isMultiplicationNode,isDivisionNode$1=utils$2.isDivisionNode,isAdditionNode$1=utils$2.isAdditionNode,isSubtractionNode$1=utils$2.isSubtractionNode,isMathOperatorNode$1=utils$2.isMathOperatorNode,isEachKeywordNode$1=utils$2.isEachKeywordNode,isForKeywordNode$1=utils$2.isForKeywordNode,isURLFunctionNode$1=utils$2.isURLFunctionNode,isIfElseKeywordNode$1=utils$2.isIfElseKeywordNode,hasComposesNode$1=utils$2.hasComposesNode,hasParensAroundNode$1=utils$2.hasParensAroundNode,hasEmptyRawBefore$1=utils$2.hasEmptyRawBefore,isKeyValuePairNode$1=utils$2.isKeyValuePairNode,isDetachedRulesetCallNode$1=utils$2.isDetachedRulesetCallNode,isTemplatePlaceholderNode$1=utils$2.isTemplatePlaceholderNode,isTemplatePropNode$1=utils$2.isTemplatePropNode,isPostcssSimpleVarNode$1=utils$2.isPostcssSimpleVarNode,isSCSSMapItemNode$1=utils$2.isSCSSMapItemNode,isInlineValueCommentNode$1=utils$2.isInlineValueCommentNode,isHashNode$1=utils$2.isHashNode,isLeftCurlyBraceNode$1=utils$2.isLeftCurlyBraceNode,isRightCurlyBraceNode$1=utils$2.isRightCurlyBraceNode,isWordNode$1=utils$2.isWordNode,isColonNode$1=utils$2.isColonNode,isMediaAndSupportsKeywords$1=utils$2.isMediaAndSupportsKeywords,isColorAdjusterFuncNode$1=utils$2.isColorAdjusterFuncNode,lastLineHasInlineComment$1=utils$2.lastLineHasInlineComment;function shouldPrintComma(options){switch(options.trailingComma){case"all":case"es5":return true;case"none":default:return false;}}function genericPrint(path,options,print){var node=path.getValue();/* istanbul ignore if */if(!node){return"";}if(typeof node==="string"){return node;}switch(node.type){case"yaml":case"toml":return concat$5([node.raw,hardline$4]);case"css-root":{var nodes=printNodeSequence(path,options,print);if(nodes.parts.length){return concat$5([nodes,options.__isHTMLStyleAttribute?"":hardline$4]);}return nodes;}case"css-comment":{var isInlineComment=node.inline||node.raws.inline;var text=options.originalText.slice(options.locStart(node),options.locEnd(node));return isInlineComment?text.trimEnd():text;}case"css-rule":{return concat$5([path.call(print,"selector"),node.important?" !important":"",node.nodes?concat$5([node.selector&&node.selector.type==="selector-unknown"&&lastLineHasInlineComment$1(node.selector.value)?line$2:" ","{",node.nodes.length>0?indent$2(concat$5([hardline$4,printNodeSequence(path,options,print)])):"",hardline$4,"}",isDetachedRulesetDeclarationNode$1(node)?";":""]):";"]);}case"css-decl":{var parentNode=path.getParentNode();return concat$5([node.raws.before.replace(/[\\s;]/g,""),insideICSSRuleNode$1(path)?node.prop:maybeToLowerCase$1(node.prop),node.raws.between.trim()===":"?":":node.raws.between.trim(),node.extend?"":" ",hasComposesNode$1(node)?removeLines$1(path.call(print,"value")):path.call(print,"value"),node.raws.important?node.raws.important.replace(/\\s*!\\s*important/i," !important"):node.important?" !important":"",node.raws.scssDefault?node.raws.scssDefault.replace(/\\s*!default/i," !default"):node.scssDefault?" !default":"",node.raws.scssGlobal?node.raws.scssGlobal.replace(/\\s*!global/i," !global"):node.scssGlobal?" !global":"",node.nodes?concat$5([" {",indent$2(concat$5([softline$1,printNodeSequence(path,options,print)])),softline$1,"}"]):isTemplatePropNode$1(node)&&!parentNode.raws.semicolon&&options.originalText[options.locEnd(node)-1]!==";"?"":";"]);}case"css-atrule":{var _parentNode=path.getParentNode();var isTemplatePlaceholderNodeWithoutSemiColon=isTemplatePlaceholderNode$1(node)&&!_parentNode.raws.semicolon&&options.originalText[options.locEnd(node)-1]!==";";if(isLessParser$1(options)){if(node.mixin){return concat$5([path.call(print,"selector"),node.important?" !important":"",isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}if(node.function){return concat$5([node.name,concat$5([path.call(print,"params")]),isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}if(node.variable){return concat$5(["@",node.name,": ",node.value?concat$5([path.call(print,"value")]):"",node.raws.between.trim()?node.raws.between.trim()+" ":"",node.nodes?concat$5(["{",indent$2(concat$5([node.nodes.length>0?softline$1:"",printNodeSequence(path,options,print)])),softline$1,"}"]):"",isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}}return concat$5(["@",// If a Less file ends up being parsed with the SCSS parser, Less\n// variable declarations will be parsed as at-rules with names ending\n// with a colon, so keep the original case then.\nisDetachedRulesetCallNode$1(node)||node.name.endsWith(":")?node.name:maybeToLowerCase$1(node.name),node.params?concat$5([isDetachedRulesetCallNode$1(node)?"":isTemplatePlaceholderNode$1(node)?node.raws.afterName===""?"":node.name.endsWith(":")?" ":/^\\s*\\n\\s*\\n/.test(node.raws.afterName)?concat$5([hardline$4,hardline$4]):/^\\s*\\n/.test(node.raws.afterName)?hardline$4:" ":" ",path.call(print,"params")]):"",node.selector?indent$2(concat$5([" ",path.call(print,"selector")])):"",node.value?group$1(concat$5([" ",path.call(print,"value"),isSCSSControlDirectiveNode$1(node)?hasParensAroundNode$1(node)?" ":line$2:""])):node.name==="else"?" ":"",node.nodes?concat$5([isSCSSControlDirectiveNode$1(node)?"":" ","{",indent$2(concat$5([node.nodes.length>0?softline$1:"",printNodeSequence(path,options,print)])),softline$1,"}"]):isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}// postcss-media-query-parser\ncase"media-query-list":{var parts=[];path.each(function(childPath){var node=childPath.getValue();if(node.type==="media-query"&&node.value===""){return;}parts.push(childPath.call(print));},"nodes");return group$1(indent$2(join$2(line$2,parts)));}case"media-query":{return concat$5([join$2(" ",path.map(print,"nodes")),isLastNode$1(path,node)?"":","]);}case"media-type":{return adjustNumbers(adjustStrings(node.value,options));}case"media-feature-expression":{if(!node.nodes){return node.value;}return concat$5(["(",concat$5(path.map(print,"nodes")),")"]);}case"media-feature":{return maybeToLowerCase$1(adjustStrings(node.value.replace(/ +/g," "),options));}case"media-colon":{return concat$5([node.value," "]);}case"media-value":{return adjustNumbers(adjustStrings(node.value,options));}case"media-keyword":{return adjustStrings(node.value,options);}case"media-url":{return adjustStrings(node.value.replace(/^url\\(\\s+/gi,"url(").replace(/\\s+\\)$/gi,")"),options);}case"media-unknown":{return node.value;}// postcss-selector-parser\ncase"selector-root":{return group$1(concat$5([insideAtRuleNode$1(path,"custom-selector")?concat$5([getAncestorNode$1(path,"css-atrule").customSelector,line$2]):"",join$2(concat$5([",",insideAtRuleNode$1(path,["extend","custom-selector","nest"])?line$2:hardline$4]),path.map(print,"nodes"))]));}case"selector-selector":{return group$1(indent$2(concat$5(path.map(print,"nodes"))));}case"selector-comment":{return node.value;}case"selector-string":{return adjustStrings(node.value,options);}case"selector-tag":{var _parentNode2=path.getParentNode();var _index2=_parentNode2&&_parentNode2.nodes.indexOf(node);var prevNode=_index2&&_parentNode2.nodes[_index2-1];return concat$5([node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",prevNode.type==="selector-nesting"?node.value:adjustNumbers(isKeyframeAtRuleKeywords$1(path,node.value)?node.value.toLowerCase():node.value)]);}case"selector-id":{return concat$5(["#",node.value]);}case"selector-class":{return concat$5([".",adjustNumbers(adjustStrings(node.value,options))]);}case"selector-attribute":{return concat$5(["[",node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",node.attribute.trim(),node.operator?node.operator:"",node.value?quoteAttributeValue(adjustStrings(node.value.trim(),options),options):"",node.insensitive?" i":"","]"]);}case"selector-combinator":{if(node.value==="+"||node.value===">"||node.value==="~"||node.value===">>>"){var _parentNode3=path.getParentNode();var _leading=_parentNode3.type==="selector-selector"&&_parentNode3.nodes[0]===node?"":line$2;return concat$5([_leading,node.value,isLastNode$1(path,node)?"":" "]);}var leading=node.value.trim().startsWith("(")?line$2:"";var value=adjustNumbers(adjustStrings(node.value.trim(),options))||line$2;return concat$5([leading,value]);}case"selector-universal":{return concat$5([node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",node.value]);}case"selector-pseudo":{return concat$5([maybeToLowerCase$1(node.value),node.nodes&&node.nodes.length>0?concat$5(["(",join$2(", ",path.map(print,"nodes")),")"]):""]);}case"selector-nesting":{return node.value;}case"selector-unknown":{var ruleAncestorNode=getAncestorNode$1(path,"css-rule");// Nested SCSS property\nif(ruleAncestorNode&&ruleAncestorNode.isSCSSNesterProperty){return adjustNumbers(adjustStrings(maybeToLowerCase$1(node.value),options));}// originalText has to be used for Less, see replaceQuotesInInlineComments in loc.js\nvar _parentNode4=path.getParentNode();if(_parentNode4.raws&&_parentNode4.raws.selector){var start=options.locStart(_parentNode4);var end=start+_parentNode4.raws.selector.length;return options.originalText.slice(start,end).trim();}return node.value;}// postcss-values-parser\ncase"value-value":case"value-root":{return path.call(print,"group");}case"value-comment":{return concat$5([node.inline?"//":"/*",// see replaceQuotesInInlineComments in loc.js\n// value-* nodes don\'t have correct location data, so we have to rely on placeholder characters.\nrestoreQuotesInInlineComments$1(node.value),node.inline?"":"*/"]);}case"value-comma_group":{var _parentNode5=path.getParentNode();var parentParentNode=path.getParentNode(1);var declAncestorProp=getPropOfDeclNode$1(path);var isGridValue=declAncestorProp&&_parentNode5.type==="value-value"&&(declAncestorProp==="grid"||declAncestorProp.startsWith("grid-template"));var atRuleAncestorNode=getAncestorNode$1(path,"css-atrule");var isControlDirective=atRuleAncestorNode&&isSCSSControlDirectiveNode$1(atRuleAncestorNode);var printed=path.map(print,"groups");var _parts2=[];var insideURLFunction=insideValueFunctionNode$1(path,"url");var insideSCSSInterpolationInString=false;var didBreak=false;for(var i=0;i<node.groups.length;++i){_parts2.push(printed[i]);var iPrevNode=node.groups[i-1];var iNode=node.groups[i];var iNextNode=node.groups[i+1];var iNextNextNode=node.groups[i+2];if(insideURLFunction){if(iNextNode&&isAdditionNode$1(iNextNode)||isAdditionNode$1(iNode)){_parts2.push(" ");}continue;}// Ignore after latest node (i.e. before semicolon)\nif(!iNextNode){continue;}// styled.div` background: var(--${one}); `\nif(!iPrevNode&&iNode.value==="--"&&iNextNode.type==="value-atword"){continue;}// Ignore spaces before/after string interpolation (i.e. `"#{my-fn("_")}"`)\nvar isStartSCSSInterpolationInString=iNode.type==="value-string"&&iNode.value.startsWith("#{");var isEndingSCSSInterpolationInString=insideSCSSInterpolationInString&&iNextNode.type==="value-string"&&iNextNode.value.endsWith("}");if(isStartSCSSInterpolationInString||isEndingSCSSInterpolationInString){insideSCSSInterpolationInString=!insideSCSSInterpolationInString;continue;}if(insideSCSSInterpolationInString){continue;}// Ignore colon (i.e. `:`)\nif(isColonNode$1(iNode)||isColonNode$1(iNextNode)){continue;}// Ignore `@` in Less (i.e. `@@var;`)\nif(iNode.type==="value-atword"&&iNode.value===""){continue;}// Ignore `~` in Less (i.e. `content: ~"^//* some horrible but needed css hack";`)\nif(iNode.value==="~"){continue;}// Ignore escape `\\`\nif(iNode.value&&iNode.value.includes("\\\\")&&iNextNode&&iNextNode.type!=="value-comment"){continue;}// Ignore escaped `/`\nif(iPrevNode&&iPrevNode.value&&iPrevNode.value.indexOf("\\\\")===iPrevNode.value.length-1&&iNode.type==="value-operator"&&iNode.value==="/"){continue;}// Ignore `\\` (i.e. `$variable: \\@small;`)\nif(iNode.value==="\\\\"){continue;}// Ignore `$$` (i.e. `background-color: $$(style)Color;`)\nif(isPostcssSimpleVarNode$1(iNode,iNextNode)){continue;}// Ignore spaces after `#` and after `{` and before `}` in SCSS interpolation (i.e. `#{variable}`)\nif(isHashNode$1(iNode)||isLeftCurlyBraceNode$1(iNode)||isRightCurlyBraceNode$1(iNextNode)||isLeftCurlyBraceNode$1(iNextNode)&&hasEmptyRawBefore$1(iNextNode)||isRightCurlyBraceNode$1(iNode)&&hasEmptyRawBefore$1(iNextNode)){continue;}// Ignore css variables and interpolation in SCSS (i.e. `--#{$var}`)\nif(iNode.value==="--"&&isHashNode$1(iNextNode)){continue;}// Formatting math operations\nvar isMathOperator=isMathOperatorNode$1(iNode);var isNextMathOperator=isMathOperatorNode$1(iNextNode);// Print spaces before and after math operators beside SCSS interpolation as is\n// (i.e. `#{$var}+5`, `#{$var} +5`, `#{$var}+ 5`, `#{$var} + 5`)\n// (i.e. `5+#{$var}`, `5 +#{$var}`, `5+ #{$var}`, `5 + #{$var}`)\nif((isMathOperator&&isHashNode$1(iNextNode)||isNextMathOperator&&isRightCurlyBraceNode$1(iNode))&&hasEmptyRawBefore$1(iNextNode)){continue;}// Print spaces before and after addition and subtraction math operators as is in `calc` function\n// due to the fact that it is not valid syntax\n// (i.e. `calc(1px+1px)`, `calc(1px+ 1px)`, `calc(1px +1px)`, `calc(1px + 1px)`)\nif(insideValueFunctionNode$1(path,"calc")&&(isAdditionNode$1(iNode)||isAdditionNode$1(iNextNode)||isSubtractionNode$1(iNode)||isSubtractionNode$1(iNextNode))&&hasEmptyRawBefore$1(iNextNode)){continue;}// Print spaces after `+` and `-` in color adjuster functions as is (e.g. `color(red l(+ 20%))`)\n// Adjusters with signed numbers (e.g. `color(red l(+20%))`) output as-is.\nvar isColorAdjusterNode=(isAdditionNode$1(iNode)||isSubtractionNode$1(iNode))&&i===0&&(iNextNode.type==="value-number"||iNextNode.isHex)&&parentParentNode&&isColorAdjusterFuncNode$1(parentParentNode)&&!hasEmptyRawBefore$1(iNextNode);var requireSpaceBeforeOperator=iNextNextNode&&iNextNextNode.type==="value-func"||iNextNextNode&&isWordNode$1(iNextNextNode)||iNode.type==="value-func"||isWordNode$1(iNode);var requireSpaceAfterOperator=iNextNode.type==="value-func"||isWordNode$1(iNextNode)||iPrevNode&&iPrevNode.type==="value-func"||iPrevNode&&isWordNode$1(iPrevNode);// Formatting `/`, `+`, `-` sign\nif(!(isMultiplicationNode$1(iNextNode)||isMultiplicationNode$1(iNode))&&!insideValueFunctionNode$1(path,"calc")&&!isColorAdjusterNode&&(isDivisionNode$1(iNextNode)&&!requireSpaceBeforeOperator||isDivisionNode$1(iNode)&&!requireSpaceAfterOperator||isAdditionNode$1(iNextNode)&&!requireSpaceBeforeOperator||isAdditionNode$1(iNode)&&!requireSpaceAfterOperator||isSubtractionNode$1(iNextNode)||isSubtractionNode$1(iNode))&&(hasEmptyRawBefore$1(iNextNode)||isMathOperator&&(!iPrevNode||iPrevNode&&isMathOperatorNode$1(iPrevNode)))){continue;}// Add `hardline` after inline comment (i.e. `// comment\\n foo: bar;`)\nif(isInlineValueCommentNode$1(iNode)){_parts2.push(hardline$4);continue;}// Handle keywords in SCSS control directive\nif(isControlDirective&&(isEqualityOperatorNode$1(iNextNode)||isRelationalOperatorNode$1(iNextNode)||isIfElseKeywordNode$1(iNextNode)||isEachKeywordNode$1(iNode)||isForKeywordNode$1(iNode))){_parts2.push(" ");continue;}// At-rule `namespace` should be in one line\nif(atRuleAncestorNode&&atRuleAncestorNode.name.toLowerCase()==="namespace"){_parts2.push(" ");continue;}// Formatting `grid` property\nif(isGridValue){if(iNode.source&&iNextNode.source&&iNode.source.start.line!==iNextNode.source.start.line){_parts2.push(hardline$4);didBreak=true;}else{_parts2.push(" ");}continue;}// Add `space` before next math operation\n// Note: `grip` property have `/` delimiter and it is not math operation, so\n// `grid` property handles above\nif(isNextMathOperator){_parts2.push(" ");continue;}// Be default all values go through `line`\n_parts2.push(line$2);}if(didBreak){_parts2.unshift(hardline$4);}if(isControlDirective){return group$1(indent$2(concat$5(_parts2)));}// Indent is not needed for import url when url is very long\n// and node has two groups\n// when type is value-comma_group\n// example @import url("verylongurl") projection,tv\nif(insideURLFunctionInImportAtRuleNode$1(path)){return group$1(fill$2(_parts2));}return group$1(indent$2(fill$2(_parts2)));}case"value-paren_group":{var _parentNode6=path.getParentNode();if(_parentNode6&&isURLFunctionNode$1(_parentNode6)&&(node.groups.length===1||node.groups.length>0&&node.groups[0].type==="value-comma_group"&&node.groups[0].groups.length>0&&node.groups[0].groups[0].type==="value-word"&&node.groups[0].groups[0].value.startsWith("data:"))){return concat$5([node.open?path.call(print,"open"):"",join$2(",",path.map(print,"groups")),node.close?path.call(print,"close"):""]);}if(!node.open){var _printed=path.map(print,"groups");var res=[];for(var _i39=0;_i39<_printed.length;_i39++){if(_i39!==0){res.push(concat$5([",",line$2]));}res.push(_printed[_i39]);}return group$1(indent$2(fill$2(res)));}var isSCSSMapItem=isSCSSMapItemNode$1(path);var lastItem=node.groups[node.groups.length-1];var isLastItemComment=lastItem&&lastItem.type==="value-comment";return group$1(concat$5([node.open?path.call(print,"open"):"",indent$2(concat$5([softline$1,join$2(concat$5([",",line$2]),path.map(function(childPath){var node=childPath.getValue();var printed=print(childPath);// Key/Value pair in open paren already indented\nif(isKeyValuePairNode$1(node)&&node.type==="value-comma_group"&&node.groups&&node.groups[2]&&node.groups[2].type==="value-paren_group"){printed.contents.contents.parts[1]=group$1(printed.contents.contents.parts[1]);return group$1(dedent$1(printed));}return printed;},"groups"))])),ifBreak$1(!isLastItemComment&&isSCSS$1(options.parser,options.originalText)&&isSCSSMapItem&&shouldPrintComma(options)?",":""),softline$1,node.close?path.call(print,"close"):""]),{shouldBreak:isSCSSMapItem});}case"value-func":{return concat$5([node.value,insideAtRuleNode$1(path,"supports")&&isMediaAndSupportsKeywords$1(node)?" ":"",path.call(print,"group")]);}case"value-paren":{return node.value;}case"value-number":{return concat$5([printCssNumber(node.value),maybeToLowerCase$1(node.unit)]);}case"value-operator":{return node.value;}case"value-word":{if(node.isColor&&node.isHex||isWideKeywords$1(node.value)){return node.value.toLowerCase();}return node.value;}case"value-colon":{return concat$5([node.value,// Don\'t add spaces on `:` in `url` function (i.e. `url(fbglyph: cross-outline, fig-white)`)\ninsideValueFunctionNode$1(path,"url")?"":line$2]);}case"value-comma":{return concat$5([node.value," "]);}case"value-string":{return printString$1(node.raws.quote+node.value+node.raws.quote,options);}case"value-atword":{return concat$5(["@",node.value]);}case"value-unicode-range":{return node.value;}case"value-unknown":{return node.value;}default:/* istanbul ignore next */throw new Error("Unknown postcss type ".concat(JSON.stringify(node.type)));}}function printNodeSequence(path,options,print){var node=path.getValue();var parts=[];var i=0;path.map(function(pathChild){var prevNode=node.nodes[i-1];if(prevNode&&prevNode.type==="css-comment"&&prevNode.text.trim()==="prettier-ignore"){var childNode=pathChild.getValue();parts.push(options.originalText.slice(options.locStart(childNode),options.locEnd(childNode)));}else{parts.push(pathChild.call(print));}if(i!==node.nodes.length-1){if(node.nodes[i+1].type==="css-comment"&&!hasNewline$3(options.originalText,options.locStart(node.nodes[i+1]),{backwards:true})&&node.nodes[i].type!=="yaml"&&node.nodes[i].type!=="toml"||node.nodes[i+1].type==="css-atrule"&&node.nodes[i+1].name==="else"&&node.nodes[i].type!=="css-comment"){parts.push(" ");}else{parts.push(options.__isHTMLStyleAttribute?line$2:hardline$4);if(isNextLineEmpty$2(options.originalText,pathChild.getValue(),options.locEnd)&&node.nodes[i].type!=="yaml"&&node.nodes[i].type!=="toml"){parts.push(hardline$4);}}}i++;},"nodes");return concat$5(parts);}var STRING_REGEX$3=/([\'"])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/g;var NUMBER_REGEX=/(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g;var STANDARD_UNIT_REGEX=/[a-zA-Z]+/g;var WORD_PART_REGEX=/[$@]?[a-zA-Z_\\u0080-\\uFFFF][\\w\\-\\u0080-\\uFFFF]*/g;var ADJUST_NUMBERS_REGEX=new RegExp(STRING_REGEX$3.source+"|"+"(".concat(WORD_PART_REGEX.source,")?")+"(".concat(NUMBER_REGEX.source,")")+"(".concat(STANDARD_UNIT_REGEX.source,")?"),"g");function adjustStrings(value,options){return value.replace(STRING_REGEX$3,function(match){return printString$1(match,options);});}function quoteAttributeValue(value,options){var quote=options.singleQuote?"\'":\'"\';return value.includes(\'"\')||value.includes("\'")?value:quote+value+quote;}function adjustNumbers(value){return value.replace(ADJUST_NUMBERS_REGEX,function(match,quote,wordPart,number,unit){return!wordPart&&number?printCssNumber(number)+maybeToLowerCase$1(unit||""):match;});}function printCssNumber(rawNumber){return printNumber$1(rawNumber)// Remove trailing `.0`.\n.replace(/\\.0(?=$|e)/,"");}var printerPostcss={print:genericPrint,embed:embed_1,insertPragma:insertPragma$2,hasPrettierIgnore:hasIgnoreComment$1,massageAstNode:clean_1};var CATEGORY_COMMON="Common";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar commonOptions={bracketSpacing:{since:"0.0.0",category:CATEGORY_COMMON,type:"boolean",default:true,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:CATEGORY_COMMON,type:"boolean",default:false,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:CATEGORY_COMMON,type:"choice",default:[{since:"1.8.2",value:true},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]}};var options$2={singleQuote:commonOptions.singleQuote};var createLanguage=function createLanguage(linguistData,override){var languageId=linguistData.languageId,rest=_objectWithoutPropertiesLoose(linguistData,["languageId"]);return Object.assign({linguistLanguageId:languageId},rest,{},override(linguistData));};var name$1="CSS";var type="markup";var tmScope="source.css";var aceMode="css";var codemirrorMode="css";var codemirrorMimeType="text/css";var color="#563d7c";var extensions=[".css"];var languageId=50;var CSS={name:name$1,type:type,tmScope:tmScope,aceMode:aceMode,codemirrorMode:codemirrorMode,codemirrorMimeType:codemirrorMimeType,color:color,extensions:extensions,languageId:languageId};var CSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$1,type:type,tmScope:tmScope,aceMode:aceMode,codemirrorMode:codemirrorMode,codemirrorMimeType:codemirrorMimeType,color:color,extensions:extensions,languageId:languageId,\'default\':CSS});var name$2="PostCSS";var type$1="markup";var tmScope$1="source.postcss";var group$2="CSS";var extensions$1=[".pcss",".postcss"];var aceMode$1="text";var languageId$1=262764437;var PostCSS={name:name$2,type:type$1,tmScope:tmScope$1,group:group$2,extensions:extensions$1,aceMode:aceMode$1,languageId:languageId$1};var PostCSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$2,type:type$1,tmScope:tmScope$1,group:group$2,extensions:extensions$1,aceMode:aceMode$1,languageId:languageId$1,\'default\':PostCSS});var name$3="Less";var type$2="markup";var group$3="CSS";var extensions$2=[".less"];var tmScope$2="source.css.less";var aceMode$2="less";var codemirrorMode$1="css";var codemirrorMimeType$1="text/css";var languageId$2=198;var Less={name:name$3,type:type$2,group:group$3,extensions:extensions$2,tmScope:tmScope$2,aceMode:aceMode$2,codemirrorMode:codemirrorMode$1,codemirrorMimeType:codemirrorMimeType$1,languageId:languageId$2};var Less$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$3,type:type$2,group:group$3,extensions:extensions$2,tmScope:tmScope$2,aceMode:aceMode$2,codemirrorMode:codemirrorMode$1,codemirrorMimeType:codemirrorMimeType$1,languageId:languageId$2,\'default\':Less});var name$4="SCSS";var type$3="markup";var tmScope$3="source.css.scss";var group$4="CSS";var aceMode$3="scss";var codemirrorMode$2="css";var codemirrorMimeType$2="text/x-scss";var extensions$3=[".scss"];var languageId$3=329;var SCSS={name:name$4,type:type$3,tmScope:tmScope$3,group:group$4,aceMode:aceMode$3,codemirrorMode:codemirrorMode$2,codemirrorMimeType:codemirrorMimeType$2,extensions:extensions$3,languageId:languageId$3};var SCSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$4,type:type$3,tmScope:tmScope$3,group:group$4,aceMode:aceMode$3,codemirrorMode:codemirrorMode$2,codemirrorMimeType:codemirrorMimeType$2,extensions:extensions$3,languageId:languageId$3,\'default\':SCSS});var require$$0$2=getCjsExportFromNamespace(CSS$1);var require$$1=getCjsExportFromNamespace(PostCSS$1);var require$$2=getCjsExportFromNamespace(Less$1);var require$$3=getCjsExportFromNamespace(SCSS$1);var languages=[createLanguage(require$$0$2,function(){return{since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"]};}),createLanguage(require$$1,function(){return{since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]};}),createLanguage(require$$2,function(){return{since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]};}),createLanguage(require$$3,function(){return{since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]};})];var printers={postcss:printerPostcss};var languageCss={languages:languages,options:options$2,printers:printers};function hasPragma$2(text){return /^\\s*#[^\\n\\S]*@(format|prettier)\\s*(\\n|$)/.test(text);}function insertPragma$3(text){return"# @format\\n\\n"+text;}var pragma$2={hasPragma:hasPragma$2,insertPragma:insertPragma$3};var _document$builders4=document.builders,concat$6=_document$builders4.concat,join$3=_document$builders4.join,hardline$5=_document$builders4.hardline,line$3=_document$builders4.line,softline$2=_document$builders4.softline,group$5=_document$builders4.group,indent$3=_document$builders4.indent,ifBreak$2=_document$builders4.ifBreak;var hasIgnoreComment$2=util$1.hasIgnoreComment;var isNextLineEmpty$3=utilShared.isNextLineEmpty;var insertPragma$4=pragma$2.insertPragma;function genericPrint$1(path,options,print){var n=path.getValue();if(!n){return"";}if(typeof n==="string"){return n;}switch(n.kind){case"Document":{var parts=[];path.map(function(pathChild,index){parts.push(concat$6([pathChild.call(print)]));if(index!==n.definitions.length-1){parts.push(hardline$5);if(isNextLineEmpty$3(options.originalText,pathChild.getValue(),options.locEnd)){parts.push(hardline$5);}}},"definitions");return concat$6([concat$6(parts),hardline$5]);}case"OperationDefinition":{var hasOperation=options.originalText[options.locStart(n)]!=="{";var hasName=!!n.name;return concat$6([hasOperation?n.operation:"",hasOperation&&hasName?concat$6([" ",path.call(print,"name")]):"",n.variableDefinitions&&n.variableDefinitions.length?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"variableDefinitions"))])),softline$2,")"])):"",printDirectives(path,print,n),n.selectionSet?!hasOperation&&!hasName?"":" ":"",path.call(print,"selectionSet")]);}case"FragmentDefinition":{return concat$6(["fragment ",path.call(print,"name"),n.variableDefinitions&&n.variableDefinitions.length?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"variableDefinitions"))])),softline$2,")"])):""," on ",path.call(print,"typeCondition"),printDirectives(path,print,n)," ",path.call(print,"selectionSet")]);}case"SelectionSet":{return concat$6(["{",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(selectionsPath){return printSequence(selectionsPath,options,print);},"selections"))])),hardline$5,"}"]);}case"Field":{return group$5(concat$6([n.alias?concat$6([path.call(print,"alias"),": "]):"",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",printDirectives(path,print,n),n.selectionSet?" ":"",path.call(print,"selectionSet")]));}case"Name":{return n.value;}case"StringValue":{if(n.block){return concat$6([\'"""\',hardline$5,join$3(hardline$5,n.value.replace(/"""/g,"\\\\$&").split("\\n")),hardline$5,\'"""\']);}return concat$6([\'"\',n.value.replace(/["\\\\]/g,"\\\\$&").replace(/\\n/g,"\\\\n"),\'"\']);}case"IntValue":case"FloatValue":case"EnumValue":{return n.value;}case"BooleanValue":{return n.value?"true":"false";}case"NullValue":{return"null";}case"Variable":{return concat$6(["$",path.call(print,"name")]);}case"ListValue":{return group$5(concat$6(["[",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"values"))])),softline$2,"]"]));}case"ObjectValue":{return group$5(concat$6(["{",options.bracketSpacing&&n.fields.length>0?" ":"",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"fields"))])),softline$2,ifBreak$2("",options.bracketSpacing&&n.fields.length>0?" ":""),"}"]));}case"ObjectField":case"Argument":{return concat$6([path.call(print,"name"),": ",path.call(print,"value")]);}case"Directive":{return concat$6(["@",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):""]);}case"NamedType":{return path.call(print,"name");}case"VariableDefinition":{return concat$6([path.call(print,"variable"),": ",path.call(print,"type"),n.defaultValue?concat$6([" = ",path.call(print,"defaultValue")]):"",printDirectives(path,print,n)]);}case"TypeExtensionDefinition":{return concat$6(["extend ",path.call(print,"definition")]);}case"ObjectTypeExtension":case"ObjectTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="ObjectTypeExtension"?"extend ":"","type ",path.call(print,"name"),n.interfaces.length>0?concat$6([" implements ",concat$6(printInterfaces(path,options,print))]):"",printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"FieldDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",": ",path.call(print,"type"),printDirectives(path,print,n)]);}case"DirectiveDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"","directive ","@",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",n.repeatable?" repeatable":"",concat$6([" on ",join$3(" | ",path.map(print,"locations"))])]);}case"EnumTypeExtension":case"EnumTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="EnumTypeExtension"?"extend ":"","enum ",path.call(print,"name"),printDirectives(path,print,n),n.values.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(valuesPath){return printSequence(valuesPath,options,print);},"values"))])),hardline$5,"}"]):""]);}case"EnumValueDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",path.call(print,"name"),printDirectives(path,print,n)]);}case"InputValueDefinition":{return concat$6([path.call(print,"description"),n.description?n.description.block?hardline$5:line$3:"",path.call(print,"name"),": ",path.call(print,"type"),n.defaultValue?concat$6([" = ",path.call(print,"defaultValue")]):"",printDirectives(path,print,n)]);}case"InputObjectTypeExtension":case"InputObjectTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="InputObjectTypeExtension"?"extend ":"","input ",path.call(print,"name"),printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"SchemaDefinition":{return concat$6(["schema",printDirectives(path,print,n)," {",n.operationTypes.length>0?indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(opsPath){return printSequence(opsPath,options,print);},"operationTypes"))])):"",hardline$5,"}"]);}case"OperationTypeDefinition":{return concat$6([path.call(print,"operation"),": ",path.call(print,"type")]);}case"InterfaceTypeExtension":case"InterfaceTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="InterfaceTypeExtension"?"extend ":"","interface ",path.call(print,"name"),printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"FragmentSpread":{return concat$6(["...",path.call(print,"name"),printDirectives(path,print,n)]);}case"InlineFragment":{return concat$6(["...",n.typeCondition?concat$6([" on ",path.call(print,"typeCondition")]):"",printDirectives(path,print,n)," ",path.call(print,"selectionSet")]);}case"UnionTypeExtension":case"UnionTypeDefinition":{return group$5(concat$6([path.call(print,"description"),n.description?hardline$5:"",group$5(concat$6([n.kind==="UnionTypeExtension"?"extend ":"","union ",path.call(print,"name"),printDirectives(path,print,n),n.types.length>0?concat$6([" =",ifBreak$2(""," "),indent$3(concat$6([ifBreak$2(concat$6([line$3,"  "])),join$3(concat$6([line$3,"| "]),path.map(print,"types"))]))]):""]))]));}case"ScalarTypeExtension":case"ScalarTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="ScalarTypeExtension"?"extend ":"","scalar ",path.call(print,"name"),printDirectives(path,print,n)]);}case"NonNullType":{return concat$6([path.call(print,"type"),"!"]);}case"ListType":{return concat$6(["[",path.call(print,"type"),"]"]);}default:/* istanbul ignore next */throw new Error("unknown graphql type: "+JSON.stringify(n.kind));}}function printDirectives(path,print,n){if(n.directives.length===0){return"";}return concat$6([" ",group$5(indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2(""," "),softline$2]),path.map(print,"directives"))])))]);}function printSequence(sequencePath,options,print){var count=sequencePath.getValue().length;return sequencePath.map(function(path,i){var printed=print(path);if(isNextLineEmpty$3(options.originalText,path.getValue(),options.locEnd)&&i<count-1){return concat$6([printed,hardline$5]);}return printed;});}function canAttachComment(node){return node.kind&&node.kind!=="Comment";}function printComment$1(commentPath){var comment=commentPath.getValue();if(comment.kind==="Comment"){return"#"+comment.value.trimEnd();}throw new Error("Not a comment: "+JSON.stringify(comment));}function determineInterfaceSeparatorBetween(first,second,options){var textBetween=options.originalText.slice(first.loc.end,second.loc.start).replace(/#.*/g,"").trim();return textBetween===","?", ":" & ";}function printInterfaces(path,options,print){var node=path.getNode();var parts=[];var interfaces=node.interfaces;var printed=path.map(function(node){return print(node);},"interfaces");for(var _index3=0;_index3<interfaces.length;_index3++){var interfaceNode=interfaces[_index3];if(_index3>0){parts.push(determineInterfaceSeparatorBetween(interfaces[_index3-1],interfaceNode,options));}parts.push(printed[_index3]);}return parts;}function clean$1(node,newNode/*, parent*/){delete newNode.loc;delete newNode.comments;}var printerGraphql={print:genericPrint$1,massageAstNode:clean$1,hasPrettierIgnore:hasIgnoreComment$2,insertPragma:insertPragma$4,printComment:printComment$1,canAttachComment:canAttachComment};var options$3={bracketSpacing:commonOptions.bracketSpacing};var name$5="GraphQL";var type$4="data";var extensions$4=[".graphql",".gql",".graphqls"];var tmScope$4="source.graphql";var aceMode$4="text";var languageId$4=139;var GraphQL={name:name$5,type:type$4,extensions:extensions$4,tmScope:tmScope$4,aceMode:aceMode$4,languageId:languageId$4};var GraphQL$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$5,type:type$4,extensions:extensions$4,tmScope:tmScope$4,aceMode:aceMode$4,languageId:languageId$4,\'default\':GraphQL});var require$$0$3=getCjsExportFromNamespace(GraphQL$1);var languages$1=[createLanguage(require$$0$3,function(){return{since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]};})];var printers$1={graphql:printerGraphql};var languageGraphql={languages:languages$1,options:options$3,printers:printers$1};var clean$2=function clean(ast,newNode){delete newNode.loc;delete newNode.selfClosing;// (Glimmer/HTML) ignore TextNode whitespace\nif(ast.type==="TextNode"){var trimmed=ast.chars.trim();if(!trimmed){return null;}newNode.chars=trimmed;}};function isUppercase(string){return string.toUpperCase()===string;}function isGlimmerComponent(node){return isNodeOfSomeType(node,["ElementNode"])&&typeof node.tag==="string"&&(isUppercase(node.tag[0])||node.tag.includes("."));}function isWhitespaceNode(node){return isNodeOfSomeType(node,["TextNode"])&&!/\\S/.test(node.chars);}function isNodeOfSomeType(node,types){return node&&types.some(function(type){return node.type===type;});}function isParentOfSomeType(path,types){var parentNode=path.getParentNode(0);return isNodeOfSomeType(parentNode,types);}function isPreviousNodeOfSomeType(path,types){var previousNode=getPreviousNode(path);return isNodeOfSomeType(previousNode,types);}function isNextNodeOfSomeType(path,types){var nextNode=getNextNode(path);return isNodeOfSomeType(nextNode,types);}function getSiblingNode(path,offset){var node=path.getValue();var parentNode=path.getParentNode(0)||{};var children=parentNode.children||parentNode.body||[];var index=children.indexOf(node);return index!==-1&&children[index+offset];}function getPreviousNode(path){var lookBack=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return getSiblingNode(path,-lookBack);}function getNextNode(path){return getSiblingNode(path,1);}function isPrettierIgnoreNode(node){return isNodeOfSomeType(node,["MustacheCommentStatement"])&&typeof node.value==="string"&&node.value.trim()==="prettier-ignore";}function hasPrettierIgnore(path){var node=path.getValue();var previousPreviousNode=getPreviousNode(path,2);return isPrettierIgnoreNode(node)||isPrettierIgnoreNode(previousPreviousNode);}var utils$3={getNextNode:getNextNode,getPreviousNode:getPreviousNode,hasPrettierIgnore:hasPrettierIgnore,isGlimmerComponent:isGlimmerComponent,isNextNodeOfSomeType:isNextNodeOfSomeType,isNodeOfSomeType:isNodeOfSomeType,isParentOfSomeType:isParentOfSomeType,isPreviousNodeOfSomeType:isPreviousNodeOfSomeType,isWhitespaceNode:isWhitespaceNode};var _document$builders5=document.builders,concat$7=_document$builders5.concat,join$4=_document$builders5.join,softline$3=_document$builders5.softline,hardline$6=_document$builders5.hardline,line$4=_document$builders5.line,group$6=_document$builders5.group,indent$4=_document$builders5.indent,ifBreak$3=_document$builders5.ifBreak;var getNextNode$1=utils$3.getNextNode,getPreviousNode$1=utils$3.getPreviousNode,hasPrettierIgnore$1=utils$3.hasPrettierIgnore,isGlimmerComponent$1=utils$3.isGlimmerComponent,isNextNodeOfSomeType$1=utils$3.isNextNodeOfSomeType,isParentOfSomeType$1=utils$3.isParentOfSomeType,isPreviousNodeOfSomeType$1=utils$3.isPreviousNodeOfSomeType,isWhitespaceNode$1=utils$3.isWhitespaceNode;// http://w3c.github.io/html/single-page.html#void-elements\nvar voidTags=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"];// Formatter based on @glimmerjs/syntax\'s built-in test formatter:\n// https://github.com/glimmerjs/glimmer-vm/blob/master/packages/%40glimmer/syntax/lib/generation/print.ts\nfunction print(path,options,print){var n=path.getValue();/* istanbul ignore if*/if(!n){return"";}if(hasPrettierIgnore$1(path)){var startOffset=locationToOffset(options.originalText,n.loc.start.line-1,n.loc.start.column);var endOffset=locationToOffset(options.originalText,n.loc.end.line-1,n.loc.end.column);var ignoredText=options.originalText.slice(startOffset,endOffset);return ignoredText;}switch(n.type){case"Block":case"Program":case"Template":{return group$6(concat$7(path.map(print,"body")));}case"ElementNode":{var hasChildren=n.children.length>0;var hasNonWhitespaceChildren=n.children.some(function(n){return!isWhitespaceNode$1(n);});var isVoid=isGlimmerComponent$1(n)&&(!hasChildren||!hasNonWhitespaceChildren)||voidTags.includes(n.tag);var closeTagForNoBreak=isVoid?concat$7([" />",softline$3]):">";var closeTagForBreak=isVoid?"/>":">";var _printParams=function _printParams(path,print){return indent$4(concat$7([n.attributes.length?line$4:"",join$4(line$4,path.map(print,"attributes")),n.modifiers.length?line$4:"",join$4(line$4,path.map(print,"modifiers")),n.comments.length?line$4:"",join$4(line$4,path.map(print,"comments"))]));};var nextNode=getNextNode$1(path);return concat$7([group$6(concat$7(["<",n.tag,_printParams(path,print),n.blockParams.length?" as |".concat(n.blockParams.join(" "),"|"):"",ifBreak$3(softline$3,""),ifBreak$3(closeTagForBreak,closeTagForNoBreak)])),!isVoid?group$6(concat$7([hasNonWhitespaceChildren?indent$4(printChildren(path,options,print)):"",ifBreak$3(hasChildren?hardline$6:"",""),concat$7(["</",n.tag,">"])])):"",nextNode&&nextNode.type==="ElementNode"?hardline$6:""]);}case"BlockStatement":{var pp=path.getParentNode(1);var isElseIf=pp&&pp.inverse&&pp.inverse.body.length===1&&pp.inverse.body[0]===n&&pp.inverse.body[0].path.parts[0]==="if";var hasElseIf=n.inverse&&n.inverse.body.length===1&&n.inverse.body[0].type==="BlockStatement"&&n.inverse.body[0].path.parts[0]==="if";var indentElse=hasElseIf?function(a){return a;}:indent$4;var inverseElseStatement=(n.inverseStrip.open?"{{~":"{{")+"else"+(n.inverseStrip.close?"~}}":"}}");if(n.inverse){return concat$7([isElseIf?concat$7([n.openStrip.open?"{{~else ":"{{else ",printPathParams(path,print),n.openStrip.close?"~}}":"}}"]):printOpenBlock(path,print,n.openStrip),indent$4(concat$7([hardline$6,path.call(print,"program")])),n.inverse&&!hasElseIf?concat$7([hardline$6,inverseElseStatement]):"",n.inverse?indentElse(concat$7([hardline$6,path.call(print,"inverse")])):"",isElseIf?"":concat$7([hardline$6,printCloseBlock(path,print,n.closeStrip)])]);}else if(isElseIf){return concat$7([concat$7([n.openStrip.open?"{{~else":"{{else ",printPathParams(path,print),n.openStrip.close?"~}}":"}}"]),indent$4(concat$7([hardline$6,path.call(print,"program")]))]);}var _hasNonWhitespaceChildren=n.program.body.some(function(n){return!isWhitespaceNode$1(n);});return concat$7([printOpenBlock(path,print,n.openStrip),group$6(concat$7([indent$4(concat$7([softline$3,path.call(print,"program")])),_hasNonWhitespaceChildren?hardline$6:softline$3,printCloseBlock(path,print,n.closeStrip)]))]);}case"ElementModifierStatement":{return group$6(concat$7(["{{",printPathParams(path,print),softline$3,"}}"]));}case"MustacheStatement":{var isEscaped=n.escaped===false;var _n$strip=n.strip,openStrip=_n$strip.open,closeStrip=_n$strip.close;var opening=(isEscaped?"{{{":"{{")+(openStrip?"~":"");var closing=(closeStrip?"~":"")+(isEscaped?"}}}":"}}");var leading=isParentOfSomeType$1(path,["AttrNode","ConcatStatement","ElementNode"])?[opening,indent$4(softline$3)]:[opening];return group$6(concat$7([].concat(leading,[printPathParams(path,print),softline$3,closing])));}case"SubExpression":{var params=printParams(path,print);var printedParams=params.length>0?indent$4(concat$7([line$4,group$6(join$4(line$4,params))])):"";return group$6(concat$7(["(",printPath(path,print),printedParams,softline$3,")"]));}case"AttrNode":{var isText=n.value.type==="TextNode";var isEmptyText=isText&&n.value.chars==="";// If the text is empty and the value\'s loc start and end columns are the\n// same, there is no value for this AttrNode and it should be printed\n// without the `=""`. Example: `<img data-test>` -> `<img data-test>`\nvar isEmptyValue=isEmptyText&&n.value.loc.start.column===n.value.loc.end.column;if(isEmptyValue){return concat$7([n.name]);}var value=path.call(print,"value");var quotedValue=isText?printStringLiteral(value.parts.join(),options):value;return concat$7([n.name,"=",quotedValue]);}case"ConcatStatement":{return concat$7([\'"\',concat$7(path.map(function(partPath){return print(partPath);},"parts").filter(function(a){return a!=="";})),\'"\']);}case"Hash":{return concat$7([join$4(line$4,path.map(print,"pairs"))]);}case"HashPair":{return concat$7([n.key,"=",path.call(print,"value")]);}case"TextNode":{var maxLineBreaksToPreserve=2;var isFirstElement=!getPreviousNode$1(path);var isLastElement=!getNextNode$1(path);var isWhitespaceOnly=!/\\S/.test(n.chars);var lineBreaksCount=countNewLines(n.chars);var hasBlockParent=path.getParentNode(0).type==="Block";var hasElementParent=path.getParentNode(0).type==="ElementNode";var hasTemplateParent=path.getParentNode(0).type==="Template";var leadingLineBreaksCount=countLeadingNewLines(n.chars);var trailingLineBreaksCount=countTrailingNewLines(n.chars);if((isFirstElement||isLastElement)&&isWhitespaceOnly&&(hasBlockParent||hasElementParent||hasTemplateParent)){return"";}if(isWhitespaceOnly&&lineBreaksCount){leadingLineBreaksCount=Math.min(lineBreaksCount,maxLineBreaksToPreserve);trailingLineBreaksCount=0;}else{if(isNextNodeOfSomeType$1(path,["BlockStatement","ElementNode"])){trailingLineBreaksCount=Math.max(trailingLineBreaksCount,1);}if(isPreviousNodeOfSomeType$1(path,["ElementNode"])||isPreviousNodeOfSomeType$1(path,["BlockStatement"])){leadingLineBreaksCount=Math.max(leadingLineBreaksCount,1);}}var leadingSpace="";var trailingSpace="";// preserve a space inside of an attribute node where whitespace present,\n// when next to mustache statement.\nvar inAttrNode=path.stack.includes("attributes");if(inAttrNode){var parentNode=path.getParentNode(0);var isConcat=parentNode.type==="ConcatStatement";if(isConcat){var parts=parentNode.parts;var partIndex=parts.indexOf(n);if(partIndex>0){var partType=parts[partIndex-1].type;var isMustache=partType==="MustacheStatement";if(isMustache){leadingSpace=" ";}}if(partIndex<parts.length-1){var _partType=parts[partIndex+1].type;var _isMustache=_partType==="MustacheStatement";if(_isMustache){trailingSpace=" ";}}}}else{if(trailingLineBreaksCount===0&&isNextNodeOfSomeType$1(path,["MustacheStatement"])){trailingSpace=" ";}if(leadingLineBreaksCount===0&&isPreviousNodeOfSomeType$1(path,["MustacheStatement"])){leadingSpace=" ";}if(isFirstElement){leadingLineBreaksCount=0;leadingSpace="";}if(isLastElement){trailingLineBreaksCount=0;trailingSpace="";}}return concat$7([].concat((0,_toConsumableArray3.default)(generateHardlines(leadingLineBreaksCount,maxLineBreaksToPreserve)),[n.chars.replace(/^[\\s ]+/g,leadingSpace).replace(/[\\s ]+$/,trailingSpace)],(0,_toConsumableArray3.default)(generateHardlines(trailingLineBreaksCount,maxLineBreaksToPreserve))).filter(Boolean));}case"MustacheCommentStatement":{var dashes=n.value.includes("}}")?"--":"";return concat$7(["{{!",dashes,n.value,dashes,"}}"]);}case"PathExpression":{return n.original;}case"BooleanLiteral":{return String(n.value);}case"CommentStatement":{return concat$7(["\x3c!--",n.value,"--\x3e"]);}case"StringLiteral":{return printStringLiteral(n.value,options);}case"NumberLiteral":{return String(n.value);}case"UndefinedLiteral":{return"undefined";}case"NullLiteral":{return"null";}/* istanbul ignore next */default:throw new Error("unknown glimmer type: "+JSON.stringify(n.type));}}function printChildren(path,options,print){return concat$7(path.map(function(childPath,childIndex){var childNode=path.getValue();var isFirstNode=childIndex===0;var isLastNode=childIndex===path.getParentNode(0).children.length-1;var isLastNodeInMultiNodeList=isLastNode&&!isFirstNode;var isWhitespace=isWhitespaceNode$1(childNode);if(isWhitespace&&isLastNodeInMultiNodeList){return print(childPath,options,print);}else if(isFirstNode){return concat$7([softline$3,print(childPath,options,print)]);}return print(childPath,options,print);},"children"));}/**\n   * Prints a string literal with the correct surrounding quotes based on\n   * `options.singleQuote` and the number of escaped quotes contained in\n   * the string literal. This function is the glimmer equivalent of `printString`\n   * in `common/util`, but has differences because of the way escaped characters\n   * are treated in hbs string literals.\n   * @param {string} stringLiteral - the string literal value\n   * @param {object} options - the prettier options object\n   */function printStringLiteral(stringLiteral,options){var double={quote:\'"\',regex:/"/g};var single={quote:"\'",regex:/\'/g};var preferred=options.singleQuote?single:double;var alternate=preferred===single?double:single;var shouldUseAlternateQuote=false;// If `stringLiteral` contains at least one of the quote preferred for\n// enclosing the string, we might want to enclose with the alternate quote\n// instead, to minimize the number of escaped quotes.\nif(stringLiteral.includes(preferred.quote)||stringLiteral.includes(alternate.quote)){var numPreferredQuotes=(stringLiteral.match(preferred.regex)||[]).length;var numAlternateQuotes=(stringLiteral.match(alternate.regex)||[]).length;shouldUseAlternateQuote=numPreferredQuotes>numAlternateQuotes;}var enclosingQuote=shouldUseAlternateQuote?alternate:preferred;var escapedStringLiteral=stringLiteral.replace(enclosingQuote.regex,"\\\\".concat(enclosingQuote.quote));return concat$7([enclosingQuote.quote,escapedStringLiteral,enclosingQuote.quote]);}function printPath(path,print){return path.call(print,"path");}function printParams(path,print){var node=path.getValue();var parts=[];if(node.params.length>0){parts=parts.concat(path.map(print,"params"));}if(node.hash&&node.hash.pairs.length>0){parts.push(path.call(print,"hash"));}return parts;}function printPathParams(path,print){var printedPath=printPath(path,print);var printedParams=printParams(path,print);var parts=[printedPath].concat((0,_toConsumableArray3.default)(printedParams));return indent$4(group$6(join$4(line$4,parts)));}function printBlockParams(path){var block=path.getValue();if(!block.program||!block.program.blockParams.length){return"";}return concat$7([" as |",block.program.blockParams.join(" "),"|"]);}function printOpenBlock(path,print){var _ref26=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref26$open=_ref26.open,isOpenStrip=_ref26$open===void 0?false:_ref26$open,_ref26$close=_ref26.close,isCloseStrip=_ref26$close===void 0?false:_ref26$close;return group$6(concat$7([isOpenStrip?"{{~#":"{{#",printPathParams(path,print),printBlockParams(path),softline$3,isCloseStrip?"~}}":"}}"]));}function printCloseBlock(path,print){var _ref27=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref27$open=_ref27.open,isOpenStrip=_ref27$open===void 0?false:_ref27$open,_ref27$close=_ref27.close,isCloseStrip=_ref27$close===void 0?false:_ref27$close;return concat$7([isOpenStrip?"{{~/":"{{/",path.call(print,"path"),isCloseStrip?"~}}":"}}"]);}function countNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";return string.split("\\n").length-1;}function countLeadingNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";var newLines=(string.match(/^([^\\S\\r\\n]*[\\r\\n])+/g)||[])[0]||"";return countNewLines(newLines);}function countTrailingNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";var newLines=(string.match(/([\\r\\n][^\\S\\r\\n]*)+$/g)||[])[0]||"";return countNewLines(newLines);}function generateHardlines(){var number=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var max=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return new Array(Math.min(number,max)).fill(hardline$6);}/* istanbul ignore next\n     https://github.com/glimmerjs/glimmer-vm/blob/master/packages/%40glimmer/compiler/lib/location.ts#L5-L29\n  */function locationToOffset(source,line,column){var seenLines=0;var seenChars=0;// eslint-disable-next-line no-constant-condition\nwhile(true){if(seenChars===source.length){return null;}var nextLine=source.indexOf("\\n",seenChars);if(nextLine===-1){nextLine=source.length;}if(seenLines===line){if(seenChars+column>nextLine){return null;}return seenChars+column;}else if(nextLine===-1){return null;}seenLines+=1;seenChars=nextLine+1;}}var printerGlimmer={print:print,massageAstNode:clean$2};var name$6="Handlebars";var type$5="markup";var group$7="HTML";var aliases=["hbs","htmlbars"];var extensions$5=[".handlebars",".hbs"];var tmScope$5="text.html.handlebars";var aceMode$5="handlebars";var languageId$5=155;var Handlebars={name:name$6,type:type$5,group:group$7,aliases:aliases,extensions:extensions$5,tmScope:tmScope$5,aceMode:aceMode$5,languageId:languageId$5};var Handlebars$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$6,type:type$5,group:group$7,aliases:aliases,extensions:extensions$5,tmScope:tmScope$5,aceMode:aceMode$5,languageId:languageId$5,\'default\':Handlebars});var require$$0$4=getCjsExportFromNamespace(Handlebars$1);var languages$2=[createLanguage(require$$0$4,function(){return{since:null,// unreleased\nparsers:["glimmer"],vscodeLanguageIds:["handlebars"]};})];var printers$2={glimmer:printerGlimmer};var languageHandlebars={languages:languages$2,printers:printers$2};var clean$3=function clean(ast,newNode){delete newNode.sourceSpan;delete newNode.startSourceSpan;delete newNode.endSourceSpan;delete newNode.nameSpan;delete newNode.valueSpan;if(ast.type==="text"||ast.type==="comment"){return null;}// may be formatted by multiparser\nif(ast.type==="yaml"||ast.type==="toml"){return null;}if(ast.type==="attribute"){delete newNode.value;}if(ast.type==="docType"){delete newNode.value;}};var json={"CSS_DISPLAY_TAGS":{"area":"none","base":"none","basefont":"none","datalist":"none","head":"none","link":"none","meta":"none","noembed":"none","noframes":"none","param":"none","rp":"none","script":"block","source":"block","style":"none","template":"inline","track":"block","title":"none","html":"block","body":"block","address":"block","blockquote":"block","center":"block","div":"block","figure":"block","figcaption":"block","footer":"block","form":"block","header":"block","hr":"block","legend":"block","listing":"block","main":"block","p":"block","plaintext":"block","pre":"block","xmp":"block","slot":"contents","ruby":"ruby","rt":"ruby-text","article":"block","aside":"block","h1":"block","h2":"block","h3":"block","h4":"block","h5":"block","h6":"block","hgroup":"block","nav":"block","section":"block","dir":"block","dd":"block","dl":"block","dt":"block","ol":"block","ul":"block","li":"list-item","table":"table","caption":"table-caption","colgroup":"table-column-group","col":"table-column","thead":"table-header-group","tbody":"table-row-group","tfoot":"table-footer-group","tr":"table-row","td":"table-cell","th":"table-cell","fieldset":"block","button":"inline-block","video":"inline-block","audio":"inline-block"},"CSS_DISPLAY_DEFAULT":"inline","CSS_WHITE_SPACE_TAGS":{"listing":"pre","plaintext":"pre","pre":"pre","xmp":"pre","nobr":"nowrap","table":"initial","textarea":"pre-wrap"},"CSS_WHITE_SPACE_DEFAULT":"normal"};var index=["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"];var htmlTagNames=/*#__PURE__*/Object.freeze({__proto__:null,\'default\':index});var a=["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"];var abbr=["title"];var applet=["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"];var area=["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"];var audio=["autoplay","controls","crossorigin","loop","muted","preload","src"];var base=["href","target"];var basefont=["color","face","size"];var bdo=["dir"];var blockquote=["cite"];var body=["alink","background","bgcolor","link","text","vlink"];var br=["clear"];var button=["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"];var canvas=["height","width"];var caption=["align"];var col=["align","char","charoff","span","valign","width"];var colgroup=["align","char","charoff","span","valign","width"];var data=["value"];var del=["cite","datetime"];var details=["open"];var dfn=["title"];var dialog=["open"];var dir=["compact"];var div=["align"];var dl=["compact"];var embed$1=["height","src","type","width"];var fieldset=["disabled","form","name"];var font=["color","face","size"];var form=["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"];var frame=["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"];var frameset=["cols","rows"];var h1=["align"];var h2=["align"];var h3=["align"];var h4=["align"];var h5=["align"];var h6=["align"];var head=["profile"];var hr=["align","noshade","size","width"];var html=["manifest","version"];var iframe=["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"];var img=["align","alt","border","crossorigin","decoding","height","hspace","ismap","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"];var input=["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"];var ins=["cite","datetime"];var isindex=["prompt"];var label=["accesskey","for","form"];var legend=["accesskey","align"];var li=["type","value"];var link$3=["as","charset","color","crossorigin","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"];var map=["name"];var menu=["compact"];var meta=["charset","content","http-equiv","name","scheme"];var meter=["high","low","max","min","optimum","value"];var object=["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"];var ol=["compact","reversed","start","type"];var optgroup=["disabled","label"];var option=["disabled","label","selected","value"];var output=["for","form","name"];var p=["align"];var param=["name","type","value","valuetype"];var pre=["width"];var progress=["max","value"];var q=["cite"];var script=["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"];var select=["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"];var slot=["name"];var source$1=["media","sizes","src","srcset","type"];var style=["media","nonce","title","type"];var table=["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"];var tbody=["align","char","charoff","valign"];var td=["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"];var textarea=["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"];var tfoot=["align","char","charoff","valign"];var th=["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"];var thead=["align","char","charoff","valign"];var time=["datetime"];var tr=["align","bgcolor","char","charoff","valign"];var track=["default","kind","label","src","srclang"];var ul=["compact","type"];var video=["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"];var index$1={"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:a,abbr:abbr,applet:applet,area:area,audio:audio,base:base,basefont:basefont,bdo:bdo,blockquote:blockquote,body:body,br:br,button:button,canvas:canvas,caption:caption,col:col,colgroup:colgroup,data:data,del:del,details:details,dfn:dfn,dialog:dialog,dir:dir,div:div,dl:dl,embed:embed$1,fieldset:fieldset,font:font,form:form,frame:frame,frameset:frameset,h1:h1,h2:h2,h3:h3,h4:h4,h5:h5,h6:h6,head:head,hr:hr,html:html,iframe:iframe,img:img,input:input,ins:ins,isindex:isindex,label:label,legend:legend,li:li,link:link$3,map:map,menu:menu,meta:meta,meter:meter,object:object,ol:ol,optgroup:optgroup,option:option,output:output,p:p,param:param,pre:pre,progress:progress,q:q,script:script,select:select,slot:slot,source:source$1,style:style,table:table,tbody:tbody,td:td,textarea:textarea,tfoot:tfoot,th:th,thead:thead,time:time,tr:tr,track:track,ul:ul,video:video};var htmlElementAttributes=/*#__PURE__*/Object.freeze({__proto__:null,a:a,abbr:abbr,applet:applet,area:area,audio:audio,base:base,basefont:basefont,bdo:bdo,blockquote:blockquote,body:body,br:br,button:button,canvas:canvas,caption:caption,col:col,colgroup:colgroup,data:data,del:del,details:details,dfn:dfn,dialog:dialog,dir:dir,div:div,dl:dl,embed:embed$1,fieldset:fieldset,font:font,form:form,frame:frame,frameset:frameset,h1:h1,h2:h2,h3:h3,h4:h4,h5:h5,h6:h6,head:head,hr:hr,html:html,iframe:iframe,img:img,input:input,ins:ins,isindex:isindex,label:label,legend:legend,li:li,link:link$3,map:map,menu:menu,meta:meta,meter:meter,object:object,ol:ol,optgroup:optgroup,option:option,output:output,p:p,param:param,pre:pre,progress:progress,q:q,script:script,select:select,slot:slot,source:source$1,style:style,table:table,tbody:tbody,td:td,textarea:textarea,tfoot:tfoot,th:th,thead:thead,time:time,tr:tr,track:track,ul:ul,video:video,\'default\':index$1});var htmlTagNames$1=getCjsExportFromNamespace(htmlTagNames);var htmlElementAttributes$1=getCjsExportFromNamespace(htmlElementAttributes);var CSS_DISPLAY_TAGS=json.CSS_DISPLAY_TAGS,CSS_DISPLAY_DEFAULT=json.CSS_DISPLAY_DEFAULT,CSS_WHITE_SPACE_TAGS=json.CSS_WHITE_SPACE_TAGS,CSS_WHITE_SPACE_DEFAULT=json.CSS_WHITE_SPACE_DEFAULT;var HTML_TAGS=arrayToMap(htmlTagNames$1);var HTML_ELEMENT_ATTRIBUTES=mapObject(htmlElementAttributes$1,arrayToMap);function arrayToMap(array){var map=Object.create(null);var _iterator34=_createForOfIteratorHelper(array),_step34;try{for(_iterator34.s();!(_step34=_iterator34.n()).done;){var value=_step34.value;map[value]=true;}}catch(err){_iterator34.e(err);}finally{_iterator34.f();}return map;}function mapObject(object,fn){var newObject=Object.create(null);for(var _i40=0,_Object$keys22=Object.keys(object);_i40<_Object$keys22.length;_i40++){var _key19=_Object$keys22[_i40];newObject[_key19]=fn(object[_key19],_key19);}return newObject;}function shouldPreserveContent(node,options){if(!node.endSourceSpan){return false;}if(node.type==="element"&&node.fullName==="template"&&node.attrMap.lang&&node.attrMap.lang!=="html"){return true;}// unterminated node in ie conditional comment\n// e.g. \x3c!--[if lt IE 9]><html><![endif]--\x3e\nif(node.type==="ieConditionalComment"&&node.lastChild&&!node.lastChild.isSelfClosing&&!node.lastChild.endSourceSpan){return true;}// incomplete html in ie conditional comment\n// e.g. \x3c!--[if lt IE 9]></div><![endif]--\x3e\nif(node.type==="ieConditionalComment"&&!node.complete){return true;}// top-level elements (excluding <template>, <style> and <script>) in Vue SFC are considered custom block\n// custom blocks can be written in other languages so we should preserve them to not break the code\nif(options.parser==="vue"&&node.type==="element"&&node.parent.type==="root"&&!["template","style","script",// vue parser can be used for vue dom template as well, so we should still format top-level <html>\n"html"].includes(node.fullName)){return true;}// TODO: handle non-text children in <pre>\nif(isPreLikeNode(node)&&node.children.some(function(child){return child.type!=="text"&&child.type!=="interpolation";})){return true;}return false;}function hasPrettierIgnore$2(node){if(node.type==="attribute"){return false;}if(!node.parent){return false;}if(typeof node.index!=="number"||node.index===0){return false;}var prevNode=node.parent.children[node.index-1];return isPrettierIgnore(prevNode);}function isPrettierIgnore(node){return node.type==="comment"&&node.value.trim()==="prettier-ignore";}function getPrettierIgnoreAttributeCommentData(value){var match=value.trim().match(/^prettier-ignore-attribute(?:\\s+([^]+))?$/);if(!match){return false;}if(!match[1]){return true;}return match[1].split(/\\s+/);}/** there\'s no opening/closing tag or it\'s considered not breakable */function isTextLikeNode(node){return node.type==="text"||node.type==="comment";}function isScriptLikeTag(node){return node.type==="element"&&(node.fullName==="script"||node.fullName==="style"||node.fullName==="svg:style"||isUnknownNamespace(node)&&(node.name==="script"||node.name==="style"));}function isFrontMatterNode(node){return node.type==="yaml"||node.type==="toml";}function canHaveInterpolation(node){return node.children&&!isScriptLikeTag(node);}function isWhitespaceSensitiveNode(node){return isScriptLikeTag(node)||node.type==="interpolation"||isIndentationSensitiveNode(node);}function isIndentationSensitiveNode(node){return getNodeCssStyleWhiteSpace(node).startsWith("pre");}function isLeadingSpaceSensitiveNode(node){var isLeadingSpaceSensitive=_isLeadingSpaceSensitiveNode();if(isLeadingSpaceSensitive&&!node.prev&&node.parent&&node.parent.tagDefinition&&node.parent.tagDefinition.ignoreFirstLf){return node.type==="interpolation";}return isLeadingSpaceSensitive;function _isLeadingSpaceSensitiveNode(){if(isFrontMatterNode(node)){return false;}if((node.type==="text"||node.type==="interpolation")&&node.prev&&(node.prev.type==="text"||node.prev.type==="interpolation")){return true;}if(!node.parent||node.parent.cssDisplay==="none"){return false;}if(isPreLikeNode(node.parent)){return true;}if(!node.prev&&(node.parent.type==="root"||isPreLikeNode(node)&&node.parent||isScriptLikeTag(node.parent)||!isFirstChildLeadingSpaceSensitiveCssDisplay(node.parent.cssDisplay))){return false;}if(node.prev&&!isNextLeadingSpaceSensitiveCssDisplay(node.prev.cssDisplay)){return false;}return true;}}function isTrailingSpaceSensitiveNode(node){if(isFrontMatterNode(node)){return false;}if((node.type==="text"||node.type==="interpolation")&&node.next&&(node.next.type==="text"||node.next.type==="interpolation")){return true;}if(!node.parent||node.parent.cssDisplay==="none"){return false;}if(isPreLikeNode(node.parent)){return true;}if(!node.next&&(node.parent.type==="root"||isPreLikeNode(node)&&node.parent||isScriptLikeTag(node.parent)||!isLastChildTrailingSpaceSensitiveCssDisplay(node.parent.cssDisplay))){return false;}if(node.next&&!isPrevTrailingSpaceSensitiveCssDisplay(node.next.cssDisplay)){return false;}return true;}function isDanglingSpaceSensitiveNode(node){return isDanglingSpaceSensitiveCssDisplay(node.cssDisplay)&&!isScriptLikeTag(node);}function forceNextEmptyLine(node){return isFrontMatterNode(node)||node.next&&node.sourceSpan.end.line+1<node.next.sourceSpan.start.line;}/** firstChild leadingSpaces and lastChild trailingSpaces */function forceBreakContent(node){return forceBreakChildren(node)||node.type==="element"&&node.children.length!==0&&(["body","script","style"].includes(node.name)||node.children.some(function(child){return hasNonTextChild(child);}))||node.firstChild&&node.firstChild===node.lastChild&&hasLeadingLineBreak(node.firstChild)&&(!node.lastChild.isTrailingSpaceSensitive||hasTrailingLineBreak(node.lastChild));}/** spaces between children */function forceBreakChildren(node){return node.type==="element"&&node.children.length!==0&&(["html","head","ul","ol","select"].includes(node.name)||node.cssDisplay.startsWith("table")&&node.cssDisplay!=="table-cell");}function preferHardlineAsLeadingSpaces(node){return preferHardlineAsSurroundingSpaces(node)||node.prev&&preferHardlineAsTrailingSpaces(node.prev)||hasSurroundingLineBreak(node);}function preferHardlineAsTrailingSpaces(node){return preferHardlineAsSurroundingSpaces(node)||node.type==="element"&&node.fullName==="br"||hasSurroundingLineBreak(node);}function hasSurroundingLineBreak(node){return hasLeadingLineBreak(node)&&hasTrailingLineBreak(node);}function hasLeadingLineBreak(node){return node.hasLeadingSpaces&&(node.prev?node.prev.sourceSpan.end.line<node.sourceSpan.start.line:node.parent.type==="root"||node.parent.startSourceSpan.end.line<node.sourceSpan.start.line);}function hasTrailingLineBreak(node){return node.hasTrailingSpaces&&(node.next?node.next.sourceSpan.start.line>node.sourceSpan.end.line:node.parent.type==="root"||node.parent.endSourceSpan&&node.parent.endSourceSpan.start.line>node.sourceSpan.end.line);}function preferHardlineAsSurroundingSpaces(node){switch(node.type){case"ieConditionalComment":case"comment":case"directive":return true;case"element":return["script","select"].includes(node.name);}return false;}function getLastDescendant(node){return node.lastChild?getLastDescendant(node.lastChild):node;}function hasNonTextChild(node){return node.children&&node.children.some(function(child){return child.type!=="text";});}function inferScriptParser(node){if(node.name==="script"&&!node.attrMap.src){if(!node.attrMap.lang&&!node.attrMap.type||node.attrMap.type==="module"||node.attrMap.type==="text/javascript"||node.attrMap.type==="text/babel"||node.attrMap.type==="application/javascript"||node.attrMap.lang==="jsx"){return"babel";}if(node.attrMap.type==="application/x-typescript"||node.attrMap.lang==="ts"||node.attrMap.lang==="tsx"){return"typescript";}if(node.attrMap.type==="text/markdown"){return"markdown";}if(node.attrMap.type.endsWith("json")||node.attrMap.type.endsWith("importmap")){return"json";}if(node.attrMap.type==="text/x-handlebars-template"){return"glimmer";}}if(node.name==="style"){if(!node.attrMap.lang||node.attrMap.lang==="postcss"||node.attrMap.lang==="css"){return"css";}if(node.attrMap.lang==="scss"){return"scss";}if(node.attrMap.lang==="less"){return"less";}}return null;}function isBlockLikeCssDisplay(cssDisplay){return cssDisplay==="block"||cssDisplay==="list-item"||cssDisplay.startsWith("table");}function isFirstChildLeadingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isLastChildTrailingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isPrevTrailingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay);}function isNextLeadingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay);}function isDanglingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isPreLikeNode(node){return getNodeCssStyleWhiteSpace(node).startsWith("pre");}function countParents(path){var predicate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return true;};var counter=0;for(var i=path.stack.length-1;i>=0;i--){var value=path.stack[i];if(value&&(0,_typeof3.default)(value)==="object"&&!Array.isArray(value)&&predicate(value)){counter++;}}return counter;}function hasParent(node,fn){var current=node;while(current){if(fn(current)){return true;}current=current.parent;}return false;}function getNodeCssStyleDisplay(node,options){if(node.prev&&node.prev.type==="comment"){// \x3c!-- display: block --\x3e\nvar match=node.prev.value.match(/^\\s*display:\\s*([a-z]+)\\s*$/);if(match){return match[1];}}var isInSvgForeignObject=false;if(node.type==="element"&&node.namespace==="svg"){if(hasParent(node,function(parent){return parent.fullName==="svg:foreignObject";})){isInSvgForeignObject=true;}else{return node.name==="svg"?"inline-block":"block";}}switch(options.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return node.type==="element"&&(!node.namespace||isInSvgForeignObject||isUnknownNamespace(node))&&CSS_DISPLAY_TAGS[node.name]||CSS_DISPLAY_DEFAULT;}}function isUnknownNamespace(node){return node.type==="element"&&!node.hasExplicitNamespace&&!["html","svg"].includes(node.namespace);}function getNodeCssStyleWhiteSpace(node){return node.type==="element"&&(!node.namespace||isUnknownNamespace(node))&&CSS_WHITE_SPACE_TAGS[node.name]||CSS_WHITE_SPACE_DEFAULT;}function getMinIndentation(text){var minIndentation=Infinity;var _iterator35=_createForOfIteratorHelper(text.split("\\n")),_step35;try{for(_iterator35.s();!(_step35=_iterator35.n()).done;){var lineText=_step35.value;if(lineText.length===0){continue;}if(/\\S/.test(lineText[0])){return 0;}var indentation=lineText.match(/^\\s*/)[0].length;if(lineText.length===indentation){continue;}if(indentation<minIndentation){minIndentation=indentation;}}}catch(err){_iterator35.e(err);}finally{_iterator35.f();}return minIndentation===Infinity?0:minIndentation;}function dedentString(text){var minIndent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:getMinIndentation(text);return minIndent===0?text:text.split("\\n").map(function(lineText){return lineText.slice(minIndent);}).join("\\n");}function normalizeParts(parts){var newParts=[];var restParts=parts.slice();while(restParts.length!==0){var part=restParts.shift();if(!part){continue;}if(part.type==="concat"){restParts.unshift.apply(restParts,(0,_toConsumableArray3.default)(part.parts));continue;}if(newParts.length!==0&&typeof newParts[newParts.length-1]==="string"&&typeof part==="string"){newParts.push(newParts.pop()+part);continue;}newParts.push(part);}return newParts;}function identity(x){return x;}function shouldNotPrintClosingTag(node,options){return!node.isSelfClosing&&!node.endSourceSpan&&(hasPrettierIgnore$2(node)||shouldPreserveContent(node.parent,options));}function countChars(text,char){var counter=0;for(var i=0;i<text.length;i++){if(text[i]===char){counter++;}}return counter;}function unescapeQuoteEntities(text){return text.replace(/&apos;/g,"\'").replace(/&quot;/g,\'"\');}var utils$4={HTML_ELEMENT_ATTRIBUTES:HTML_ELEMENT_ATTRIBUTES,HTML_TAGS:HTML_TAGS,canHaveInterpolation:canHaveInterpolation,countChars:countChars,countParents:countParents,dedentString:dedentString,forceBreakChildren:forceBreakChildren,forceBreakContent:forceBreakContent,forceNextEmptyLine:forceNextEmptyLine,getLastDescendant:getLastDescendant,getNodeCssStyleDisplay:getNodeCssStyleDisplay,getNodeCssStyleWhiteSpace:getNodeCssStyleWhiteSpace,getPrettierIgnoreAttributeCommentData:getPrettierIgnoreAttributeCommentData,hasPrettierIgnore:hasPrettierIgnore$2,identity:identity,inferScriptParser:inferScriptParser,isDanglingSpaceSensitiveNode:isDanglingSpaceSensitiveNode,isFrontMatterNode:isFrontMatterNode,isIndentationSensitiveNode:isIndentationSensitiveNode,isLeadingSpaceSensitiveNode:isLeadingSpaceSensitiveNode,isPreLikeNode:isPreLikeNode,isScriptLikeTag:isScriptLikeTag,isTextLikeNode:isTextLikeNode,isTrailingSpaceSensitiveNode:isTrailingSpaceSensitiveNode,isWhitespaceSensitiveNode:isWhitespaceSensitiveNode,isUnknownNamespace:isUnknownNamespace,normalizeParts:normalizeParts,preferHardlineAsLeadingSpaces:preferHardlineAsLeadingSpaces,preferHardlineAsTrailingSpaces:preferHardlineAsTrailingSpaces,shouldNotPrintClosingTag:shouldNotPrintClosingTag,shouldPreserveContent:shouldPreserveContent,unescapeQuoteEntities:unescapeQuoteEntities};var canHaveInterpolation$1=utils$4.canHaveInterpolation,getNodeCssStyleDisplay$1=utils$4.getNodeCssStyleDisplay,isDanglingSpaceSensitiveNode$1=utils$4.isDanglingSpaceSensitiveNode,isIndentationSensitiveNode$1=utils$4.isIndentationSensitiveNode,isLeadingSpaceSensitiveNode$1=utils$4.isLeadingSpaceSensitiveNode,isTrailingSpaceSensitiveNode$1=utils$4.isTrailingSpaceSensitiveNode,isWhitespaceSensitiveNode$1=utils$4.isWhitespaceSensitiveNode;var PREPROCESS_PIPELINE=[removeIgnorableFirstLf,mergeIeConditonalStartEndCommentIntoElementOpeningTag,mergeCdataIntoText,extractInterpolation,extractWhitespaces,addCssDisplay,addIsSelfClosing,addHasHtmComponentClosingTag,addIsSpaceSensitive,mergeSimpleElementIntoText];function preprocess(ast,options){var _iterator36=_createForOfIteratorHelper(PREPROCESS_PIPELINE),_step36;try{for(_iterator36.s();!(_step36=_iterator36.n()).done;){var fn=_step36.value;ast=fn(ast,options);}}catch(err){_iterator36.e(err);}finally{_iterator36.f();}return ast;}function removeIgnorableFirstLf(ast/*, options */){return ast.map(function(node){if(node.type==="element"&&node.tagDefinition.ignoreFirstLf&&node.children.length!==0&&node.children[0].type==="text"&&node.children[0].value[0]==="\\n"){var _node$children=(0,_toArray2.default)(node.children),text=_node$children[0],rest=_node$children.slice(1);return node.clone({children:text.value.length===1?rest:[text.clone({value:text.value.slice(1)})].concat((0,_toConsumableArray3.default)(rest))});}return node;});}function mergeIeConditonalStartEndCommentIntoElementOpeningTag(ast/*, options */){/**\n     *     \x3c!--[if ...]>\x3c!--\x3e<target>\x3c!--<![endif]--\x3e\n     */var isTarget=function isTarget(node){return node.type==="element"&&node.prev&&node.prev.type==="ieConditionalStartComment"&&node.prev.sourceSpan.end.offset===node.startSourceSpan.start.offset&&node.firstChild&&node.firstChild.type==="ieConditionalEndComment"&&node.firstChild.sourceSpan.start.offset===node.startSourceSpan.end.offset;};return ast.map(function(node){if(node.children){var isTargetResults=node.children.map(isTarget);if(isTargetResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(isTargetResults[i+1]){// ieConditionalStartComment\ncontinue;}if(isTargetResults[i]){var ieConditionalStartComment=child.prev;var ieConditionalEndComment=child.firstChild;var ParseSourceSpan=child.sourceSpan.constructor;var startSourceSpan=new ParseSourceSpan(ieConditionalStartComment.sourceSpan.start,ieConditionalEndComment.sourceSpan.end);var sourceSpan=new ParseSourceSpan(startSourceSpan.start,child.sourceSpan.end);newChildren.push(child.clone({condition:ieConditionalStartComment.condition,sourceSpan:sourceSpan,startSourceSpan:startSourceSpan,children:child.children.slice(1)}));continue;}newChildren.push(child);}return node.clone({children:newChildren});}}return node;});}function mergeNodeIntoText(ast,shouldMerge,getValue){return ast.map(function(node){if(node.children){var shouldMergeResults=node.children.map(shouldMerge);if(shouldMergeResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(child.type!=="text"&&!shouldMergeResults[i]){newChildren.push(child);continue;}var newChild=child.type==="text"?child:child.clone({type:"text",value:getValue(child)});if(newChildren.length===0||newChildren[newChildren.length-1].type!=="text"){newChildren.push(newChild);continue;}var lastChild=newChildren.pop();var ParseSourceSpan=lastChild.sourceSpan.constructor;newChildren.push(lastChild.clone({value:lastChild.value+newChild.value,sourceSpan:new ParseSourceSpan(lastChild.sourceSpan.start,newChild.sourceSpan.end)}));}return node.clone({children:newChildren});}}return node;});}function mergeCdataIntoText(ast/*, options */){return mergeNodeIntoText(ast,function(node){return node.type==="cdata";},function(node){return"<![CDATA[".concat(node.value,"]]>");});}function mergeSimpleElementIntoText(ast/*, options */){var isSimpleElement=function isSimpleElement(node){return node.type==="element"&&node.attrs.length===0&&node.children.length===1&&node.firstChild.type==="text"&&// \\xA0: non-breaking whitespace\n!/[^\\S\\xA0]/.test(node.children[0].value)&&!node.firstChild.hasLeadingSpaces&&!node.firstChild.hasTrailingSpaces&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces&&node.isTrailingSpaceSensitive&&!node.hasTrailingSpaces&&node.prev&&node.prev.type==="text"&&node.next&&node.next.type==="text";};return ast.map(function(node){if(node.children){var isSimpleElementResults=node.children.map(isSimpleElement);if(isSimpleElementResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(isSimpleElementResults[i]){var lastChild=newChildren.pop();var nextChild=node.children[++i];var ParseSourceSpan=node.sourceSpan.constructor;var isTrailingSpaceSensitive=nextChild.isTrailingSpaceSensitive,hasTrailingSpaces=nextChild.hasTrailingSpaces;newChildren.push(lastChild.clone({value:lastChild.value+"<".concat(child.rawName,">")+child.firstChild.value+"</".concat(child.rawName,">")+nextChild.value,sourceSpan:new ParseSourceSpan(lastChild.sourceSpan.start,nextChild.sourceSpan.end),isTrailingSpaceSensitive:isTrailingSpaceSensitive,hasTrailingSpaces:hasTrailingSpaces}));}else{newChildren.push(child);}}return node.clone({children:newChildren});}}return node;});}function extractInterpolation(ast,options){if(options.parser==="html"){return ast;}var interpolationRegex=/\\{\\{([\\s\\S]+?)\\}\\}/g;return ast.map(function(node){if(!canHaveInterpolation$1(node)){return node;}var newChildren=[];var _iterator37=_createForOfIteratorHelper(node.children),_step37;try{for(_iterator37.s();!(_step37=_iterator37.n()).done;){var child=_step37.value;if(child.type!=="text"){newChildren.push(child);continue;}var ParseSourceSpan=child.sourceSpan.constructor;var startSourceSpan=child.sourceSpan.start;var endSourceSpan=null;var components=child.value.split(interpolationRegex);for(var i=0;i<components.length;i++,startSourceSpan=endSourceSpan){var value=components[i];if(i%2===0){endSourceSpan=startSourceSpan.moveBy(value.length);if(value.length!==0){newChildren.push({type:"text",value:value,sourceSpan:new ParseSourceSpan(startSourceSpan,endSourceSpan)});}continue;}endSourceSpan=startSourceSpan.moveBy(value.length+4);// `{{` + `}}`\nnewChildren.push({type:"interpolation",sourceSpan:new ParseSourceSpan(startSourceSpan,endSourceSpan),children:value.length===0?[]:[{type:"text",value:value,sourceSpan:new ParseSourceSpan(startSourceSpan.moveBy(2),endSourceSpan.moveBy(-2))}]});}}}catch(err){_iterator37.e(err);}finally{_iterator37.f();}return node.clone({children:newChildren});});}/**\n   * - add `hasLeadingSpaces` field\n   * - add `hasTrailingSpaces` field\n   * - add `hasDanglingSpaces` field for parent nodes\n   * - add `isWhitespaceSensitive`, `isIndentationSensitive` field for text nodes\n   * - remove insensitive whitespaces\n   */function extractWhitespaces(ast/*, options*/){var TYPE_WHITESPACE="whitespace";return ast.map(function(node){if(!node.children){return node;}if(node.children.length===0||node.children.length===1&&node.children[0].type==="text"&&node.children[0].value.trim().length===0){return node.clone({children:[],hasDanglingSpaces:node.children.length!==0});}var isWhitespaceSensitive=isWhitespaceSensitiveNode$1(node);var isIndentationSensitive=isIndentationSensitiveNode$1(node);return node.clone({isWhitespaceSensitive:isWhitespaceSensitive,isIndentationSensitive:isIndentationSensitive,children:node.children// extract whitespace nodes\n.reduce(function(newChildren,child){if(child.type!=="text"||isWhitespaceSensitive){return newChildren.concat(child);}var localChildren=[];var _child$value$match=child.value.match(/^(\\s*)([\\s\\S]*?)(\\s*)$/),_child$value$match2=(0,_slicedToArray2.default)(_child$value$match,4),leadingSpaces=_child$value$match2[1],text=_child$value$match2[2],trailingSpaces=_child$value$match2[3];if(leadingSpaces){localChildren.push({type:TYPE_WHITESPACE});}var ParseSourceSpan=child.sourceSpan.constructor;if(text){localChildren.push({type:"text",value:text,sourceSpan:new ParseSourceSpan(child.sourceSpan.start.moveBy(leadingSpaces.length),child.sourceSpan.end.moveBy(-trailingSpaces.length))});}if(trailingSpaces){localChildren.push({type:TYPE_WHITESPACE});}return newChildren.concat(localChildren);},[])// set hasLeadingSpaces/hasTrailingSpaces and filter whitespace nodes\n.reduce(function(newChildren,child,i,children){if(child.type===TYPE_WHITESPACE){return newChildren;}var hasLeadingSpaces=i!==0&&children[i-1].type===TYPE_WHITESPACE;var hasTrailingSpaces=i!==children.length-1&&children[i+1].type===TYPE_WHITESPACE;return newChildren.concat(Object.assign({},child,{hasLeadingSpaces:hasLeadingSpaces,hasTrailingSpaces:hasTrailingSpaces}));},[])});});}function addIsSelfClosing(ast/*, options */){return ast.map(function(node){return Object.assign(node,{isSelfClosing:!node.children||node.type==="element"&&(node.tagDefinition.isVoid||// self-closing\nnode.startSourceSpan===node.endSourceSpan)});});}function addHasHtmComponentClosingTag(ast,options){return ast.map(function(node){return node.type!=="element"?node:Object.assign(node,{hasHtmComponentClosingTag:node.endSourceSpan&&/^<\\s*\\/\\s*\\/\\s*>$/.test(options.originalText.slice(node.endSourceSpan.start.offset,node.endSourceSpan.end.offset))});});}function addCssDisplay(ast,options){return ast.map(function(node){return Object.assign(node,{cssDisplay:getNodeCssStyleDisplay$1(node,options)});});}/**\n   * - add `isLeadingSpaceSensitive` field\n   * - add `isTrailingSpaceSensitive` field\n   * - add `isDanglingSpaceSensitive` field for parent nodes\n   */function addIsSpaceSensitive(ast/*, options */){return ast.map(function(node){if(!node.children){return node;}if(node.children.length===0){return node.clone({isDanglingSpaceSensitive:isDanglingSpaceSensitiveNode$1(node)});}return node.clone({children:node.children.map(function(child){return Object.assign({},child,{isLeadingSpaceSensitive:isLeadingSpaceSensitiveNode$1(child),isTrailingSpaceSensitive:isTrailingSpaceSensitiveNode$1(child)});}).map(function(child,index,children){return Object.assign({},child,{isLeadingSpaceSensitive:index===0?child.isLeadingSpaceSensitive:children[index-1].isTrailingSpaceSensitive&&child.isLeadingSpaceSensitive,isTrailingSpaceSensitive:index===children.length-1?child.isTrailingSpaceSensitive:children[index+1].isLeadingSpaceSensitive&&child.isTrailingSpaceSensitive});})});});}var preprocess_1=preprocess;function hasPragma$3(text){return /^\\s*\x3c!--\\s*@(format|prettier)\\s*--\x3e/.test(text);}function insertPragma$5(text){return"\x3c!-- @format --\x3e\\n\\n"+text.replace(/^\\s*\\n/,"");}var pragma$3={hasPragma:hasPragma$3,insertPragma:insertPragma$5};var _document$builders6=document.builders,concat$8=_document$builders6.concat,group$8=_document$builders6.group;/**\n   *     v-for="... in ..."\n   *     v-for="... of ..."\n   *     v-for="(..., ...) in ..."\n   *     v-for="(..., ...) of ..."\n   */function printVueFor(value,textToDoc){var _parseVueFor=parseVueFor(value),left=_parseVueFor.left,operator=_parseVueFor.operator,right=_parseVueFor.right;return concat$8([group$8(textToDoc("function _(".concat(left,") {}"),{parser:"babel",__isVueForBindingLeft:true}))," ",operator," ",textToDoc(right,{parser:"__js_expression"})]);}// modified from https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/parser/index.js#L370-L387\nfunction parseVueFor(value){var forAliasRE=/([^]*?)\\s+(in|of)\\s+([^]*)/;var forIteratorRE=/,([^,}\\]]*)(?:,([^,}\\]]*))?$/;var stripParensRE=/^\\(|\\)$/g;var inMatch=value.match(forAliasRE);if(!inMatch){return;}var res={};res.for=inMatch[3].trim();var alias=inMatch[1].trim().replace(stripParensRE,"");var iteratorMatch=alias.match(forIteratorRE);if(iteratorMatch){res.alias=alias.replace(forIteratorRE,"");res.iterator1=iteratorMatch[1].trim();if(iteratorMatch[2]){res.iterator2=iteratorMatch[2].trim();}}else{res.alias=alias;}return{left:"".concat([res.alias,res.iterator1,res.iterator2].filter(Boolean).join(",")),operator:inMatch[2],right:res.for};}function printVueSlotScope(value,textToDoc){return textToDoc("function _(".concat(value,") {}"),{parser:"babel",__isVueSlotScope:true});}function isVueEventBindingExpression(eventBindingValue){// https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/codegen/events.js#L3-L4\n// arrow function or anonymous function\nvar fnExpRE=/^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;// simple member expression chain (a, a.b, a[\'b\'], a["b"], a[0], a[b])\nvar simplePathRE=/^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[\'[^\']*?\']|\\["[^"]*?"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;// https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/helpers.js#L104\nvar value=eventBindingValue.trim();return fnExpRE.test(value)||simplePathRE.test(value);}var syntaxVue={isVueEventBindingExpression:isVueEventBindingExpression,printVueFor:printVueFor,printVueSlotScope:printVueSlotScope};var integerRegex=/^\\d+$/;function deepUnique(array){return array.sort().filter(function(element,index){return JSON.stringify(element)!==JSON.stringify(array[index-1]);});}var parse$2=function parse$2(string){return deepUnique(string.split(\',\').map(function(part){var result={};part.trim().split(/\\s+/).forEach(function(element,index){if(index===0){result.url=element;return;}var value=element.slice(0,element.length-1);var postfix=element[element.length-1];var integerValue=parseInt(value,10);var floatValue=parseFloat(value);if(postfix===\'w\'&&integerRegex.test(value)){result.width=integerValue;}else if(postfix===\'h\'&&integerRegex.test(value)){result.height=integerValue;}else if(postfix===\'x\'&&!Number.isNaN(floatValue)){result.density=floatValue;}else{throw new Error("Invalid srcset descriptor: ".concat(element));}});return result;}));};var stringify=function stringify(array){return(0,_toConsumableArray3.default)(new Set(array.map(function(element){if(!element.url){throw new Error(\'URL is required\');}var result=[element.url];if(element.width){result.push("".concat(element.width,"w"));}if(element.height){result.push("".concat(element.height,"h"));}if(element.density){result.push("".concat(element.density,"x"));}return result.join(\' \');}))).join(\', \');};var srcset={parse:parse$2,stringify:stringify};var _document$builders7=document.builders,concat$9=_document$builders7.concat,ifBreak$4=_document$builders7.ifBreak,join$5=_document$builders7.join,line$5=_document$builders7.line;var parseSrcset=srcset.parse;function printImgSrcset(value){var srcset=parseSrcset(value);var hasW=srcset.some(function(src){return src.width;});var hasH=srcset.some(function(src){return src.height;});var hasX=srcset.some(function(src){return src.density;});if(hasW+hasH+hasX>1){throw new Error("Mixed descriptor in srcset is not supported");}var key=hasW?"width":hasH?"height":"density";var unit=hasW?"w":hasH?"h":"x";var getMax=function getMax(values){return Math.max.apply(Math,(0,_toConsumableArray3.default)(values));};var urls=srcset.map(function(src){return src.url;});var maxUrlLength=getMax(urls.map(function(url){return url.length;}));var descriptors=srcset.map(function(src){return src[key];}).map(function(descriptor){return descriptor?descriptor.toString():"";});var descriptorLeftLengths=descriptors.map(function(descriptor){var index=descriptor.indexOf(".");return index===-1?descriptor.length:index;});var maxDescriptorLeftLength=getMax(descriptorLeftLengths);return join$5(concat$9([",",line$5]),urls.map(function(url,index){var parts=[url];var descriptor=descriptors[index];if(descriptor){var urlPadding=maxUrlLength-url.length+1;var descriptorPadding=maxDescriptorLeftLength-descriptorLeftLengths[index];var alignment=" ".repeat(urlPadding+descriptorPadding);parts.push(ifBreak$4(alignment," "),descriptor+unit);}return concat$9(parts);}));}function printClassNames(value){return value.trim().split(/\\s+/).join(" ");}var syntaxAttribute={printImgSrcset:printImgSrcset,printClassNames:printClassNames};var builders=document.builders,_document$utils=document.utils,stripTrailingHardline$1=_document$utils.stripTrailingHardline,mapDoc$2=_document$utils.mapDoc;var breakParent$2=builders.breakParent,dedentToRoot$1=builders.dedentToRoot,fill$3=builders.fill,group$9=builders.group,hardline$7=builders.hardline,ifBreak$5=builders.ifBreak,indent$5=builders.indent,join$6=builders.join,line$6=builders.line,literalline$2=builders.literalline,markAsRoot$2=builders.markAsRoot,softline$4=builders.softline;var countChars$1=utils$4.countChars,countParents$1=utils$4.countParents,dedentString$1=utils$4.dedentString,forceBreakChildren$1=utils$4.forceBreakChildren,forceBreakContent$1=utils$4.forceBreakContent,forceNextEmptyLine$1=utils$4.forceNextEmptyLine,getLastDescendant$1=utils$4.getLastDescendant,getPrettierIgnoreAttributeCommentData$1=utils$4.getPrettierIgnoreAttributeCommentData,hasPrettierIgnore$3=utils$4.hasPrettierIgnore,inferScriptParser$1=utils$4.inferScriptParser,isScriptLikeTag$1=utils$4.isScriptLikeTag,isTextLikeNode$1=utils$4.isTextLikeNode,normalizeParts$1=utils$4.normalizeParts,preferHardlineAsLeadingSpaces$1=utils$4.preferHardlineAsLeadingSpaces,shouldNotPrintClosingTag$1=utils$4.shouldNotPrintClosingTag,shouldPreserveContent$1=utils$4.shouldPreserveContent,unescapeQuoteEntities$1=utils$4.unescapeQuoteEntities;var replaceEndOfLineWith$1=util$1.replaceEndOfLineWith;var insertPragma$6=pragma$3.insertPragma;var printVueFor$1=syntaxVue.printVueFor,printVueSlotScope$1=syntaxVue.printVueSlotScope,isVueEventBindingExpression$1=syntaxVue.isVueEventBindingExpression;var printImgSrcset$1=syntaxAttribute.printImgSrcset,printClassNames$1=syntaxAttribute.printClassNames;function concat$a(parts){var newParts=normalizeParts$1(parts);return newParts.length===0?"":newParts.length===1?newParts[0]:builders.concat(newParts);}function embed$2(path,print,textToDoc,options){var node=path.getValue();switch(node.type){case"text":{if(isScriptLikeTag$1(node.parent)){var _parser=inferScriptParser$1(node.parent);if(_parser){var value=_parser==="markdown"?dedentString$1(node.value.replace(/^[^\\S\\n]*?\\n/,"")):node.value;return builders.concat([concat$a([breakParent$2,printOpeningTagPrefix(node,options),stripTrailingHardline$1(textToDoc(value,{parser:_parser})),printClosingTagSuffix(node,options)])]);}}else if(node.parent.type==="interpolation"){return concat$a([indent$5(concat$a([line$6,textToDoc(node.value,Object.assign({__isInHtmlInterpolation:true},options.parser==="angular"?{parser:"__ng_interpolation",trailingComma:"none"}:options.parser==="vue"?{parser:"__vue_expression"}:{parser:"__js_expression"}))])),node.parent.next&&needsToBorrowPrevClosingTagEndMarker(node.parent.next)?" ":line$6]);}break;}case"attribute":{if(!node.value){break;}// lit-html: html`<my-element obj=${obj}></my-element>`\nif(/^PRETTIER_HTML_PLACEHOLDER_\\d+_\\d+_IN_JS$/.test(options.originalText.slice(node.valueSpan.start.offset,node.valueSpan.end.offset))){return concat$a([node.rawName,"=",node.value]);}// lwc: html`<my-element data-for={value}></my-element>`\nif(options.parser==="lwc"){var interpolationRegex=/^\\{[\\s\\S]*\\}$/;if(interpolationRegex.test(options.originalText.slice(node.valueSpan.start.offset,node.valueSpan.end.offset))){return concat$a([node.rawName,"=",node.value]);}}var embeddedAttributeValueDoc=printEmbeddedAttributeValue(node,function(code,opts){return(// strictly prefer single quote to avoid unnecessary html entity escape\ntextToDoc(code,Object.assign({__isInHtmlAttribute:true},opts)));},options);if(embeddedAttributeValueDoc){return concat$a([node.rawName,\'="\',group$9(mapDoc$2(embeddedAttributeValueDoc,function(doc){return typeof doc==="string"?doc.replace(/"/g,"&quot;"):doc;})),\'"\']);}break;}case"yaml":return markAsRoot$2(concat$a(["---",hardline$7,node.value.trim().length===0?"":textToDoc(node.value,{parser:"yaml"}),"---"]));}}function genericPrint$2(path,options,print){var node=path.getValue();switch(node.type){case"root":if(options.__onHtmlRoot){options.__onHtmlRoot(node);}// use original concat to not break stripTrailingHardline\nreturn builders.concat([group$9(printChildren$1(path,options,print)),hardline$7]);case"element":case"ieConditionalComment":{/**\n           * do not break:\n           *\n           *     <div>{{\n           *         ~\n           *       interpolation\n           *     }}</div>\n           *            ~\n           *\n           * exception: break if the opening tag breaks\n           *\n           *     <div\n           *       long\n           *           ~\n           *       >{{\n           *         interpolation\n           *       }}</div\n           *              ~\n           *     >\n           */var shouldHugContent=node.children.length===1&&node.firstChild.type==="interpolation"&&node.firstChild.isLeadingSpaceSensitive&&!node.firstChild.hasLeadingSpaces&&node.lastChild.isTrailingSpaceSensitive&&!node.lastChild.hasTrailingSpaces;var attrGroupId=Symbol("element-attr-group-id");return concat$a([group$9(concat$a([group$9(printOpeningTag(path,options,print),{id:attrGroupId}),node.children.length===0?node.hasDanglingSpaces&&node.isDanglingSpaceSensitive?line$6:"":concat$a([forceBreakContent$1(node)?breakParent$2:"",function(childrenDoc){return shouldHugContent?ifBreak$5(indent$5(childrenDoc),childrenDoc,{groupId:attrGroupId}):isScriptLikeTag$1(node)&&node.parent.type==="root"&&options.parser==="vue"&&!options.vueIndentScriptAndStyle?childrenDoc:indent$5(childrenDoc);}(concat$a([shouldHugContent?ifBreak$5(softline$4,"",{groupId:attrGroupId}):node.firstChild.hasLeadingSpaces&&node.firstChild.isLeadingSpaceSensitive?line$6:node.firstChild.type==="text"&&node.isWhitespaceSensitive&&node.isIndentationSensitive?dedentToRoot$1(softline$4):softline$4,printChildren$1(path,options,print)])),(node.next?needsToBorrowPrevClosingTagEndMarker(node.next):needsToBorrowLastChildClosingTagEndMarker(node.parent))?node.lastChild.hasTrailingSpaces&&node.lastChild.isTrailingSpaceSensitive?" ":"":shouldHugContent?ifBreak$5(softline$4,"",{groupId:attrGroupId}):node.lastChild.hasTrailingSpaces&&node.lastChild.isTrailingSpaceSensitive?line$6:(node.lastChild.type==="comment"||node.lastChild.type==="text"&&node.isWhitespaceSensitive&&node.isIndentationSensitive)&&new RegExp("\\\\n\\\\s{".concat(options.tabWidth*countParents$1(path,function(n){return n.parent&&n.parent.type!=="root";}),"}$")).test(node.lastChild.value)?/**\n           *     <div>\n           *       <pre>\n           *         something\n           *       </pre>\n           *            ~\n           *     </div>\n           */"":softline$4])])),printClosingTag(node,options)]);}case"ieConditionalStartComment":case"ieConditionalEndComment":return concat$a([printOpeningTagStart(node),printClosingTagEnd(node)]);case"interpolation":return concat$a([printOpeningTagStart(node,options),concat$a(path.map(print,"children")),printClosingTagEnd(node,options)]);case"text":{if(node.parent.type==="interpolation"){// replace the trailing literalline with hardline for better readability\nvar trailingNewlineRegex=/\\n[^\\S\\n]*?$/;var hasTrailingNewline=trailingNewlineRegex.test(node.value);var value=hasTrailingNewline?node.value.replace(trailingNewlineRegex,""):node.value;return concat$a([concat$a(replaceEndOfLineWith$1(value,literalline$2)),hasTrailingNewline?hardline$7:""]);}return fill$3(normalizeParts$1([].concat(printOpeningTagPrefix(node,options),getTextValueParts(node),printClosingTagSuffix(node,options))));}case"docType":return concat$a([group$9(concat$a([printOpeningTagStart(node,options)," ",node.value.replace(/^html\\b/i,"html").replace(/\\s+/g," ")])),printClosingTagEnd(node,options)]);case"comment":{return concat$a([printOpeningTagPrefix(node,options),concat$a(replaceEndOfLineWith$1(options.originalText.slice(options.locStart(node),options.locEnd(node)),literalline$2)),printClosingTagSuffix(node,options)]);}case"attribute":{if(node.value===null){return node.rawName;}var _value3=unescapeQuoteEntities$1(node.value);var singleQuoteCount=countChars$1(_value3,"\'");var doubleQuoteCount=countChars$1(_value3,\'"\');var quote=singleQuoteCount<doubleQuoteCount?"\'":\'"\';return concat$a([node.rawName,concat$a(["=",quote,concat$a(replaceEndOfLineWith$1(quote===\'"\'?_value3.replace(/"/g,"&quot;"):_value3.replace(/\'/g,"&apos;"),literalline$2)),quote])]);}case"yaml":case"toml":return concat$a(replaceEndOfLineWith$1(node.raw,literalline$2));default:throw new Error("Unexpected node type ".concat(node.type));}}function printChildren$1(path,options,print){var node=path.getValue();if(forceBreakChildren$1(node)){return concat$a([breakParent$2,concat$a(path.map(function(childPath){var childNode=childPath.getValue();var prevBetweenLine=!childNode.prev?"":printBetweenLine(childNode.prev,childNode);return concat$a([!prevBetweenLine?"":concat$a([prevBetweenLine,forceNextEmptyLine$1(childNode.prev)?hardline$7:""]),printChild(childPath)]);},"children"))]);}var groupIds=node.children.map(function(){return Symbol("");});return concat$a(path.map(function(childPath,childIndex){var childNode=childPath.getValue();if(isTextLikeNode$1(childNode)){if(childNode.prev&&isTextLikeNode$1(childNode.prev)){var _prevBetweenLine=printBetweenLine(childNode.prev,childNode);if(_prevBetweenLine){if(forceNextEmptyLine$1(childNode.prev)){return concat$a([hardline$7,hardline$7,printChild(childPath)]);}return concat$a([_prevBetweenLine,printChild(childPath)]);}}return printChild(childPath);}var prevParts=[];var leadingParts=[];var trailingParts=[];var nextParts=[];var prevBetweenLine=childNode.prev?printBetweenLine(childNode.prev,childNode):"";var nextBetweenLine=childNode.next?printBetweenLine(childNode,childNode.next):"";if(prevBetweenLine){if(forceNextEmptyLine$1(childNode.prev)){prevParts.push(hardline$7,hardline$7);}else if(prevBetweenLine===hardline$7){prevParts.push(hardline$7);}else{if(isTextLikeNode$1(childNode.prev)){leadingParts.push(prevBetweenLine);}else{leadingParts.push(ifBreak$5("",softline$4,{groupId:groupIds[childIndex-1]}));}}}if(nextBetweenLine){if(forceNextEmptyLine$1(childNode)){if(isTextLikeNode$1(childNode.next)){nextParts.push(hardline$7,hardline$7);}}else if(nextBetweenLine===hardline$7){if(isTextLikeNode$1(childNode.next)){nextParts.push(hardline$7);}}else{trailingParts.push(nextBetweenLine);}}return concat$a([].concat(prevParts,group$9(concat$a([concat$a(leadingParts),group$9(concat$a([printChild(childPath),concat$a(trailingParts)]),{id:groupIds[childIndex]})])),nextParts));},"children"));function printChild(childPath){var child=childPath.getValue();if(hasPrettierIgnore$3(child)){return concat$a([].concat(printOpeningTagPrefix(child,options),replaceEndOfLineWith$1(options.originalText.slice(options.locStart(child)+(child.prev&&needsToBorrowNextOpeningTagStartMarker(child.prev)?printOpeningTagStartMarker(child).length:0),options.locEnd(child)-(child.next&&needsToBorrowPrevClosingTagEndMarker(child.next)?printClosingTagEndMarker(child,options).length:0)),literalline$2),printClosingTagSuffix(child,options)));}if(shouldPreserveContent$1(child,options)){return concat$a([].concat(printOpeningTagPrefix(child,options),group$9(printOpeningTag(childPath,options,print)),replaceEndOfLineWith$1(options.originalText.slice(child.startSourceSpan.end.offset+(child.firstChild&&needsToBorrowParentOpeningTagEndMarker(child.firstChild)?-printOpeningTagEndMarker(child).length:0),child.endSourceSpan.start.offset+(child.lastChild&&needsToBorrowParentClosingTagStartMarker(child.lastChild)?printClosingTagStartMarker(child,options).length:needsToBorrowLastChildClosingTagEndMarker(child)?-printClosingTagEndMarker(child.lastChild,options).length:0)),literalline$2),printClosingTag(child,options),printClosingTagSuffix(child,options)));}return print(childPath);}function printBetweenLine(prevNode,nextNode){return isTextLikeNode$1(prevNode)&&isTextLikeNode$1(nextNode)?prevNode.isTrailingSpaceSensitive?prevNode.hasTrailingSpaces?preferHardlineAsLeadingSpaces$1(nextNode)?hardline$7:line$6:"":preferHardlineAsLeadingSpaces$1(nextNode)?hardline$7:softline$4:needsToBorrowNextOpeningTagStartMarker(prevNode)&&(hasPrettierIgnore$3(nextNode)||/**\n       *     123<a\n       *          ~\n       *       ><b>\n       */nextNode.firstChild||/**\n       *     123\x3c!--\n       *            ~\n       *     --\x3e\n       */nextNode.isSelfClosing||/**\n       *     123<span\n       *             ~\n       *       attr\n       */nextNode.type==="element"&&nextNode.attrs.length!==0)||/**\n       *     <img\n       *       src="long"\n       *                 ~\n       *     />123\n       */prevNode.type==="element"&&prevNode.isSelfClosing&&needsToBorrowPrevClosingTagEndMarker(nextNode)?"":!nextNode.isLeadingSpaceSensitive||preferHardlineAsLeadingSpaces$1(nextNode)||/**\n       *       Want to write us a letter? Use our<a\n       *         ><b><a>mailing address</a></b></a\n       *                                          ~\n       *       >.\n       */needsToBorrowPrevClosingTagEndMarker(nextNode)&&prevNode.lastChild&&needsToBorrowParentClosingTagStartMarker(prevNode.lastChild)&&prevNode.lastChild.lastChild&&needsToBorrowParentClosingTagStartMarker(prevNode.lastChild.lastChild)?hardline$7:nextNode.hasLeadingSpaces?line$6:softline$4;}}function printOpeningTag(path,options,print){var node=path.getValue();var forceNotToBreakAttrContent=node.type==="element"&&node.fullName==="script"&&node.attrs.length===1&&node.attrs[0].fullName==="src"&&node.children.length===0;return concat$a([printOpeningTagStart(node,options),!node.attrs||node.attrs.length===0?node.isSelfClosing?/**\n     *     <br />\n     *        ^\n     */" ":"":concat$a([indent$5(concat$a([forceNotToBreakAttrContent?" ":line$6,join$6(line$6,function(ignoreAttributeData){var hasPrettierIgnoreAttribute=typeof ignoreAttributeData==="boolean"?function(){return ignoreAttributeData;}:Array.isArray(ignoreAttributeData)?function(attr){return ignoreAttributeData.includes(attr.rawName);}:function(){return false;};return path.map(function(attrPath){var attr=attrPath.getValue();return hasPrettierIgnoreAttribute(attr)?concat$a(replaceEndOfLineWith$1(options.originalText.slice(options.locStart(attr),options.locEnd(attr)),literalline$2)):print(attrPath);},"attrs");}(node.prev&&node.prev.type==="comment"&&getPrettierIgnoreAttributeCommentData$1(node.prev.value)))])),/**\n     *     123<a\n     *       attr\n     *           ~\n     *       >456\n     */node.firstChild&&needsToBorrowParentOpeningTagEndMarker(node.firstChild)||/**\n     *     <span\n     *       >123<meta\n     *                ~\n     *     /></span>\n     */node.isSelfClosing&&needsToBorrowLastChildClosingTagEndMarker(node.parent)?node.isSelfClosing?" ":"":node.isSelfClosing?forceNotToBreakAttrContent?" ":line$6:forceNotToBreakAttrContent?"":softline$4]),node.isSelfClosing?"":printOpeningTagEnd(node)]);}function printOpeningTagStart(node,options){return node.prev&&needsToBorrowNextOpeningTagStartMarker(node.prev)?"":concat$a([printOpeningTagPrefix(node,options),printOpeningTagStartMarker(node)]);}function printOpeningTagEnd(node){return node.firstChild&&needsToBorrowParentOpeningTagEndMarker(node.firstChild)?"":printOpeningTagEndMarker(node);}function printClosingTag(node,options){return concat$a([node.isSelfClosing?"":printClosingTagStart(node,options),printClosingTagEnd(node,options)]);}function printClosingTagStart(node,options){return node.lastChild&&needsToBorrowParentClosingTagStartMarker(node.lastChild)?"":concat$a([printClosingTagPrefix(node,options),printClosingTagStartMarker(node,options)]);}function printClosingTagEnd(node,options){return(node.next?needsToBorrowPrevClosingTagEndMarker(node.next):needsToBorrowLastChildClosingTagEndMarker(node.parent))?"":concat$a([printClosingTagEndMarker(node,options),printClosingTagSuffix(node,options)]);}function needsToBorrowNextOpeningTagStartMarker(node){/**\n     *     123<p\n     *        ^^\n     *     >\n     */return node.next&&!isTextLikeNode$1(node.next)&&isTextLikeNode$1(node)&&node.isTrailingSpaceSensitive&&!node.hasTrailingSpaces;}function needsToBorrowParentOpeningTagEndMarker(node){/**\n     *     <p\n     *       >123\n     *       ^\n     *\n     *     <p\n     *       ><a\n     *       ^\n     */return!node.prev&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces;}function needsToBorrowPrevClosingTagEndMarker(node){/**\n     *     <p></p\n     *     >123\n     *     ^\n     *\n     *     <p></p\n     *     ><a\n     *     ^\n     */return node.prev&&!isTextLikeNode$1(node.prev)&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces;}function needsToBorrowLastChildClosingTagEndMarker(node){/**\n     *     <p\n     *       ><a></a\n     *       ></p\n     *       ^\n     *     >\n     */return node.lastChild&&node.lastChild.isTrailingSpaceSensitive&&!node.lastChild.hasTrailingSpaces&&!isTextLikeNode$1(getLastDescendant$1(node.lastChild));}function needsToBorrowParentClosingTagStartMarker(node){/**\n     *     <p>\n     *       123</p\n     *          ^^^\n     *     >\n     *\n     *         123</b\n     *       ></a\n     *        ^^^\n     *     >\n     */return!node.next&&!node.hasTrailingSpaces&&node.isTrailingSpaceSensitive&&isTextLikeNode$1(getLastDescendant$1(node));}function printOpeningTagPrefix(node,options){return needsToBorrowParentOpeningTagEndMarker(node)?printOpeningTagEndMarker(node.parent):needsToBorrowPrevClosingTagEndMarker(node)?printClosingTagEndMarker(node.prev,options):"";}function printClosingTagPrefix(node,options){return needsToBorrowLastChildClosingTagEndMarker(node)?printClosingTagEndMarker(node.lastChild,options):"";}function printClosingTagSuffix(node,options){return needsToBorrowParentClosingTagStartMarker(node)?printClosingTagStartMarker(node.parent,options):needsToBorrowNextOpeningTagStartMarker(node)?printOpeningTagStartMarker(node.next):"";}function printOpeningTagStartMarker(node){switch(node.type){case"ieConditionalComment":case"ieConditionalStartComment":return"\x3c!--[if ".concat(node.condition);case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(node.condition){return"\x3c!--[if ".concat(node.condition,"]>\x3c!--\x3e<").concat(node.rawName);}// fall through\ndefault:return"<".concat(node.rawName);}}function printOpeningTagEndMarker(node){assert(!node.isSelfClosing);switch(node.type){case"ieConditionalComment":return"]>";case"element":if(node.condition){return">\x3c!--<![endif]--\x3e";}// fall through\ndefault:return">";}}function printClosingTagStartMarker(node,options){assert(!node.isSelfClosing);if(shouldNotPrintClosingTag$1(node,options)){return"";}switch(node.type){case"ieConditionalComment":return"<!";case"element":if(node.hasHtmComponentClosingTag){return"<//";}// fall through\ndefault:return"</".concat(node.rawName);}}function printClosingTagEndMarker(node,options){if(shouldNotPrintClosingTag$1(node,options)){return"";}switch(node.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(node.isSelfClosing){return"/>";}// fall through\ndefault:return">";}}function getTextValueParts(node){var value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:node.value;return node.parent.isWhitespaceSensitive?node.parent.isIndentationSensitive?replaceEndOfLineWith$1(value,literalline$2):replaceEndOfLineWith$1(dedentString$1(value.replace(/^\\s*?\\n|\\n\\s*?$/g,"")),hardline$7):// https://infra.spec.whatwg.org/#ascii-whitespace\njoin$6(line$6,value.split(/[\\t\\n\\f\\r ]+/)).parts;}function printEmbeddedAttributeValue(node,originalTextToDoc,options){var isKeyMatched=function isKeyMatched(patterns){return new RegExp(patterns.join("|")).test(node.fullName);};var getValue=function getValue(){return unescapeQuoteEntities$1(node.value);};var shouldHug=false;var __onHtmlBindingRoot=function __onHtmlBindingRoot(root,options){var rootNode=root.type==="NGRoot"?root.node.type==="NGMicrosyntax"&&root.node.body.length===1&&root.node.body[0].type==="NGMicrosyntaxExpression"?root.node.body[0].expression:root.node:root.type==="JsExpressionRoot"?root.node:root;if(rootNode&&(rootNode.type==="ObjectExpression"||rootNode.type==="ArrayExpression"||options.parser==="__vue_expression"&&(rootNode.type==="TemplateLiteral"||rootNode.type==="StringLiteral"))){shouldHug=true;}};var printHug=function printHug(doc){return group$9(doc);};var printExpand=function printExpand(doc){var canHaveTrailingWhitespace=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return group$9(concat$a([indent$5(concat$a([softline$4,doc])),canHaveTrailingWhitespace?softline$4:""]));};var printMaybeHug=function printMaybeHug(doc){return shouldHug?printHug(doc):printExpand(doc);};var textToDoc=function textToDoc(code,opts){return originalTextToDoc(code,Object.assign({__onHtmlBindingRoot:__onHtmlBindingRoot},opts));};if(node.fullName==="srcset"&&(node.parent.fullName==="img"||node.parent.fullName==="source")){return printExpand(printImgSrcset$1(getValue()));}if(node.fullName==="class"&&!options.parentParser){var value=getValue();if(!value.includes("{{")){return printClassNames$1(value);}}if(node.fullName==="style"&&!options.parentParser){var _value4=getValue();if(!_value4.includes("{{")){return printExpand(textToDoc(_value4,{parser:"css",__isHTMLStyleAttribute:true}));}}if(options.parser==="vue"){if(node.fullName==="v-for"){return printVueFor$1(getValue(),textToDoc);}if(node.fullName==="slot-scope"){return printVueSlotScope$1(getValue(),textToDoc);}/**\n       *     @click="jsStatement"\n       *     @click="jsExpression"\n       *     v-on:click="jsStatement"\n       *     v-on:click="jsExpression"\n       */var vueEventBindingPatterns=["^@","^v-on:"];/**\n       *     :class="vueExpression"\n       *     v-bind:id="vueExpression"\n       */var vueExpressionBindingPatterns=["^:","^v-bind:"];/**\n       *     v-if="jsExpression"\n       */var jsExpressionBindingPatterns=["^v-"];if(isKeyMatched(vueEventBindingPatterns)){var _value5=getValue();return printMaybeHug(isVueEventBindingExpression$1(_value5)?textToDoc(_value5,{parser:"__js_expression"}):stripTrailingHardline$1(textToDoc(_value5,{parser:"__vue_event_binding"})));}if(isKeyMatched(vueExpressionBindingPatterns)){return printMaybeHug(textToDoc(getValue(),{parser:"__vue_expression"}));}if(isKeyMatched(jsExpressionBindingPatterns)){return printMaybeHug(textToDoc(getValue(),{parser:"__js_expression"}));}}if(options.parser==="angular"){var ngTextToDoc=function ngTextToDoc(code,opts){return(// angular does not allow trailing comma\ntextToDoc(code,Object.assign({},opts,{trailingComma:"none"})));};/**\n       *     *directive="angularDirective"\n       */var ngDirectiveBindingPatterns=["^\\\\*"];/**\n       *     (click)="angularStatement"\n       *     on-click="angularStatement"\n       */var ngStatementBindingPatterns=["^\\\\(.+\\\\)$","^on-"];/**\n       *     [target]="angularExpression"\n       *     bind-target="angularExpression"\n       *     [(target)]="angularExpression"\n       *     bindon-target="angularExpression"\n       */var ngExpressionBindingPatterns=["^\\\\[.+\\\\]$","^bind(on)?-",// Unofficial rudimentary support for some of the most used directives of AngularJS 1.x\n"^ng-(if|show|hide|class|style)$"];/**\n       *     i18n="longDescription"\n       *     i18n-attr="longDescription"\n       */var ngI18nPatterns=["^i18n(-.+)?$"];if(isKeyMatched(ngStatementBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_action"}));}if(isKeyMatched(ngExpressionBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_binding"}));}if(isKeyMatched(ngI18nPatterns)){var _value7=getValue().trim();return printExpand(fill$3(getTextValueParts(node,_value7)),!_value7.includes("@@"));}if(isKeyMatched(ngDirectiveBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_directive"}));}var interpolationRegex=/\\{\\{([\\s\\S]+?)\\}\\}/g;var _value6=getValue();if(interpolationRegex.test(_value6)){var parts=[];_value6.split(interpolationRegex).forEach(function(part,index){if(index%2===0){parts.push(concat$a(replaceEndOfLineWith$1(part,literalline$2)));}else{try{parts.push(group$9(concat$a(["{{",indent$5(concat$a([line$6,ngTextToDoc(part,{parser:"__ng_interpolation",__isInHtmlInterpolation:true// to avoid unexpected `}}`\n})])),line$6,"}}"])));}catch(e){parts.push("{{",concat$a(replaceEndOfLineWith$1(part,literalline$2)),"}}");}}});return group$9(concat$a(parts));}}return null;}var printerHtml={preprocess:preprocess_1,print:genericPrint$2,insertPragma:insertPragma$6,massageAstNode:clean$3,embed:embed$2};var CATEGORY_HTML="HTML";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar options$4={htmlWhitespaceSensitivity:{since:"1.15.0",category:CATEGORY_HTML,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},vueIndentScriptAndStyle:{since:"1.19.0",category:CATEGORY_HTML,type:"boolean",default:false,description:"Indent script and style tags in Vue files."}};var name$7="HTML";var type$6="markup";var tmScope$6="text.html.basic";var aceMode$6="html";var codemirrorMode$3="htmlmixed";var codemirrorMimeType$3="text/html";var color$1="#e34c26";var aliases$1=["xhtml"];var extensions$6=[".html",".htm",".html.hl",".inc",".st",".xht",".xhtml"];var languageId$6=146;var HTML={name:name$7,type:type$6,tmScope:tmScope$6,aceMode:aceMode$6,codemirrorMode:codemirrorMode$3,codemirrorMimeType:codemirrorMimeType$3,color:color$1,aliases:aliases$1,extensions:extensions$6,languageId:languageId$6};var HTML$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$7,type:type$6,tmScope:tmScope$6,aceMode:aceMode$6,codemirrorMode:codemirrorMode$3,codemirrorMimeType:codemirrorMimeType$3,color:color$1,aliases:aliases$1,extensions:extensions$6,languageId:languageId$6,\'default\':HTML});var name$8="Vue";var type$7="markup";var color$2="#2c3e50";var extensions$7=[".vue"];var tmScope$7="text.html.vue";var aceMode$7="html";var languageId$7=391;var Vue={name:name$8,type:type$7,color:color$2,extensions:extensions$7,tmScope:tmScope$7,aceMode:aceMode$7,languageId:languageId$7};var Vue$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$8,type:type$7,color:color$2,extensions:extensions$7,tmScope:tmScope$7,aceMode:aceMode$7,languageId:languageId$7,\'default\':Vue});var require$$0$5=getCjsExportFromNamespace(HTML$1);var require$$1$1=getCjsExportFromNamespace(Vue$1);var languages$3=[createLanguage(require$$0$5,function(){return{name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]};}),createLanguage(require$$0$5,function(data){return{since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:data.extensions.concat([".mjml"// MJML is considered XML in Linguist but it should be formatted as HTML\n])};}),createLanguage(require$$0$5,function(){return{name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]};}),createLanguage(require$$1$1,function(){return{since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]};})];var printers$3={html:printerHtml};var languageHtml={languages:languages$3,printers:printers$3,options:options$4};var addLeadingComment$3=utilShared.addLeadingComment,addTrailingComment$3=utilShared.addTrailingComment,addDanglingComment$3=utilShared.addDanglingComment,getNextNonSpaceNonCommentCharacterIndex$2=utilShared.getNextNonSpaceNonCommentCharacterIndex;function handleOwnLineComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;return handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleMemberExpressionComments(enclosingNode,followingNode,comment)||handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment)||handleClassComments(enclosingNode,precedingNode,followingNode,comment)||handleImportSpecifierComments(enclosingNode,comment)||handleForComments(enclosingNode,precedingNode,comment)||handleUnionTypeComments(precedingNode,enclosingNode,followingNode,comment)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleImportDeclarationComments(text,enclosingNode,precedingNode,comment,options)||handleAssignmentPatternComments(enclosingNode,comment)||handleMethodNameComments(text,enclosingNode,precedingNode,comment,options)||handleLabeledStatementComments(enclosingNode,comment);}function handleEndOfLineComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;return handleClosureTypeCastComments(followingNode,comment)||handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleConditionalExpressionComments(enclosingNode,precedingNode,followingNode,comment,text,options)||handleImportSpecifierComments(enclosingNode,comment)||handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment)||handleClassComments(enclosingNode,precedingNode,followingNode,comment)||handleLabeledStatementComments(enclosingNode,comment)||handleCallExpressionComments(precedingNode,enclosingNode,comment)||handlePropertyComments(enclosingNode,comment)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleTypeAliasComments(enclosingNode,followingNode,comment)||handleVariableDeclaratorComments(enclosingNode,followingNode,comment);}function handleRemainingComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;if(handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleObjectPropertyAssignment(enclosingNode,precedingNode,comment)||handleCommentInEmptyParens(text,enclosingNode,comment,options)||handleMethodNameComments(text,enclosingNode,precedingNode,comment,options)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleCommentAfterArrowParams(text,enclosingNode,comment,options)||handleFunctionNameComments(text,enclosingNode,precedingNode,comment,options)||handleTSMappedTypeComments(text,enclosingNode,precedingNode,followingNode,comment)||handleBreakAndContinueStatementComments(enclosingNode,comment)||handleTSFunctionTrailingComments(text,enclosingNode,followingNode,comment,options)){return true;}return false;}function addBlockStatementFirstComment(node,comment){var body=node.body.filter(function(n){return n.type!=="EmptyStatement";});if(body.length===0){addDanglingComment$3(node,comment);}else{addLeadingComment$3(body[0],comment);}}function addBlockOrNotComment(node,comment){if(node.type==="BlockStatement"){addBlockStatementFirstComment(node,comment);}else{addLeadingComment$3(node,comment);}}function handleClosureTypeCastComments(followingNode,comment){if(followingNode&&isTypeCastComment(comment)){addLeadingComment$3(followingNode,comment);return true;}return false;}// There are often comments before the else clause of if statements like\n//\n//   if (1) { ... }\n//   // comment\n//   else { ... }\n//\n// They are being attached as leading comments of the BlockExpression which\n// is not well printed. What we want is to instead move the comment inside\n// of the block and make it leadingComment of the first element of the block\n// or dangling comment of the block if there is nothing inside\n//\n//   if (1) { ... }\n//   else {\n//     // comment\n//     ...\n//   }\nfunction handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options){if(!enclosingNode||enclosingNode.type!=="IfStatement"||!followingNode){return false;}// We unfortunately have no way using the AST or location of nodes to know\n// if the comment is positioned before the condition parenthesis:\n//   if (a /* comment */) {}\n// The only workaround I found is to look at the next character to see if\n// it is a ).\nvar nextCharacter=util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd);if(nextCharacter===")"){addTrailingComment$3(precedingNode,comment);return true;}// Comments before `else`:\n// - treat as trailing comments of the consequent, if it\'s a BlockStatement\n// - treat as a dangling comment otherwise\nif(precedingNode===enclosingNode.consequent&&followingNode===enclosingNode.alternate){if(precedingNode.type==="BlockStatement"){addTrailingComment$3(precedingNode,comment);}else{addDanglingComment$3(enclosingNode,comment);}return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}if(followingNode.type==="IfStatement"){addBlockOrNotComment(followingNode.consequent,comment);return true;}// For comments positioned after the condition parenthesis in an if statement\n// before the consequent without brackets on, such as\n// if (a) /* comment */ true,\n// we look at the next character to see if the following node\n// is the consequent for the if statement\nif(enclosingNode.consequent===followingNode){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options){if(!enclosingNode||enclosingNode.type!=="WhileStatement"||!followingNode){return false;}// We unfortunately have no way using the AST or location of nodes to know\n// if the comment is positioned before the condition parenthesis:\n//   while (a /* comment */) {}\n// The only workaround I found is to look at the next character to see if\n// it is a ).\nvar nextCharacter=util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd);if(nextCharacter===")"){addTrailingComment$3(precedingNode,comment);return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}return false;}// Same as IfStatement but for TryStatement\nfunction handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment){if(!enclosingNode||enclosingNode.type!=="TryStatement"&&enclosingNode.type!=="CatchClause"||!followingNode){return false;}if(enclosingNode.type==="CatchClause"&&precedingNode){addTrailingComment$3(precedingNode,comment);return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}if(followingNode.type==="TryStatement"){addBlockOrNotComment(followingNode.finalizer,comment);return true;}if(followingNode.type==="CatchClause"){addBlockOrNotComment(followingNode.body,comment);return true;}return false;}function handleMemberExpressionComments(enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="MemberExpression"||enclosingNode.type==="OptionalMemberExpression")&&followingNode&&followingNode.type==="Identifier"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleConditionalExpressionComments(enclosingNode,precedingNode,followingNode,comment,text,options){var isSameLineAsPrecedingNode=precedingNode&&!util$1.hasNewlineInRange(text,options.locEnd(precedingNode),options.locStart(comment));if((!precedingNode||!isSameLineAsPrecedingNode)&&enclosingNode&&enclosingNode.type==="ConditionalExpression"&&followingNode){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleObjectPropertyAssignment(enclosingNode,precedingNode,comment){if(enclosingNode&&(enclosingNode.type==="ObjectProperty"||enclosingNode.type==="Property")&&enclosingNode.shorthand&&enclosingNode.key===precedingNode&&enclosingNode.value.type==="AssignmentPattern"){addTrailingComment$3(enclosingNode.value.left,comment);return true;}return false;}function handleClassComments(enclosingNode,precedingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="ClassDeclaration"||enclosingNode.type==="ClassExpression")&&enclosingNode.decorators&&enclosingNode.decorators.length>0&&!(followingNode&&followingNode.type==="Decorator")){if(!enclosingNode.decorators||enclosingNode.decorators.length===0){addLeadingComment$3(enclosingNode,comment);}else{addTrailingComment$3(enclosingNode.decorators[enclosingNode.decorators.length-1],comment);}return true;}return false;}function handleMethodNameComments(text,enclosingNode,precedingNode,comment,options){// This is only needed for estree parsers (flow, typescript) to attach\n// after a method name:\n// obj = { fn /*comment*/() {} };\nif(enclosingNode&&precedingNode&&(// "MethodDefinition" is handled in getCommentChildNodes\nenclosingNode.type==="Property"||enclosingNode.type==="TSDeclareMethod"||enclosingNode.type==="TSAbstractMethodDefinition")&&precedingNode.type==="Identifier"&&enclosingNode.key===precedingNode&&// special Property case: { key: /*comment*/(value) };\n// comment should be attached to value instead of key\nutil$1.getNextNonSpaceNonCommentCharacter(text,precedingNode,options.locEnd)!==":"){addTrailingComment$3(precedingNode,comment);return true;}// Print comments between decorators and class methods as a trailing comment\n// on the decorator node instead of the method node\nif(precedingNode&&enclosingNode&&precedingNode.type==="Decorator"&&(enclosingNode.type==="ClassMethod"||enclosingNode.type==="ClassProperty"||enclosingNode.type==="TSAbstractClassProperty"||enclosingNode.type==="TSAbstractMethodDefinition"||enclosingNode.type==="TSDeclareMethod"||enclosingNode.type==="MethodDefinition")){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleFunctionNameComments(text,enclosingNode,precedingNode,comment,options){if(util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)!=="("){return false;}if(precedingNode&&enclosingNode&&(enclosingNode.type==="FunctionDeclaration"||enclosingNode.type==="FunctionExpression"||enclosingNode.type==="ClassMethod"||enclosingNode.type==="MethodDefinition"||enclosingNode.type==="ObjectMethod")){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleCommentAfterArrowParams(text,enclosingNode,comment,options){if(!(enclosingNode&&enclosingNode.type==="ArrowFunctionExpression")){return false;}var index=getNextNonSpaceNonCommentCharacterIndex$2(text,comment,options.locEnd);if(text.slice(index,index+2)==="=>"){addDanglingComment$3(enclosingNode,comment);return true;}return false;}function handleCommentInEmptyParens(text,enclosingNode,comment,options){if(util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)!==")"){return false;}// Only add dangling comments to fix the case when no params are present,\n// i.e. a function without any argument.\nif(enclosingNode&&(isRealFunctionLikeNode(enclosingNode)&&// `params` vs `parameters` - see https://github.com/babel/babel/issues/9231\n(enclosingNode.params||enclosingNode.parameters).length===0||(enclosingNode.type==="CallExpression"||enclosingNode.type==="OptionalCallExpression"||enclosingNode.type==="NewExpression")&&enclosingNode.arguments.length===0)){addDanglingComment$3(enclosingNode,comment);return true;}if(enclosingNode&&enclosingNode.type==="MethodDefinition"&&enclosingNode.value.params.length===0){addDanglingComment$3(enclosingNode.value,comment);return true;}return false;}function handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options){// Flow function type definitions\nif(precedingNode&&precedingNode.type==="FunctionTypeParam"&&enclosingNode&&enclosingNode.type==="FunctionTypeAnnotation"&&followingNode&&followingNode.type!=="FunctionTypeParam"){addTrailingComment$3(precedingNode,comment);return true;}// Real functions and TypeScript function type definitions\nif(precedingNode&&(precedingNode.type==="Identifier"||precedingNode.type==="AssignmentPattern")&&enclosingNode&&isRealFunctionLikeNode(enclosingNode)&&util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)===")"){addTrailingComment$3(precedingNode,comment);return true;}if(enclosingNode&&enclosingNode.type==="FunctionDeclaration"&&followingNode&&followingNode.type==="BlockStatement"){var functionParamRightParenIndex=function(){if((enclosingNode.params||enclosingNode.parameters).length!==0){return util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,options.locEnd(util$1.getLast(enclosingNode.params||enclosingNode.parameters)));}var functionParamLeftParenIndex=util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,options.locEnd(enclosingNode.id));return util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,functionParamLeftParenIndex+1);}();if(options.locStart(comment)>functionParamRightParenIndex){addBlockStatementFirstComment(followingNode,comment);return true;}}return false;}function handleImportSpecifierComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="ImportSpecifier"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleLabeledStatementComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="LabeledStatement"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleBreakAndContinueStatementComments(enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="ContinueStatement"||enclosingNode.type==="BreakStatement")&&!enclosingNode.label){addTrailingComment$3(enclosingNode,comment);return true;}return false;}function handleCallExpressionComments(precedingNode,enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="CallExpression"||enclosingNode.type==="OptionalCallExpression")&&precedingNode&&enclosingNode.callee===precedingNode&&enclosingNode.arguments.length>0){addLeadingComment$3(enclosingNode.arguments[0],comment);return true;}return false;}function handleUnionTypeComments(precedingNode,enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="UnionTypeAnnotation"||enclosingNode.type==="TSUnionType")){if(util$1.isNodeIgnoreComment(comment)){followingNode.prettierIgnore=true;comment.unignore=true;}if(precedingNode){addTrailingComment$3(precedingNode,comment);return true;}return false;}if(followingNode&&(followingNode.type==="UnionTypeAnnotation"||followingNode.type==="TSUnionType")&&util$1.isNodeIgnoreComment(comment)){followingNode.types[0].prettierIgnore=true;comment.unignore=true;}return false;}function handlePropertyComments(enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="Property"||enclosingNode.type==="ObjectProperty")){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleOnlyComments(enclosingNode,ast,comment,isLastComment){// With Flow the enclosingNode is undefined so use the AST instead.\nif(ast&&ast.body&&ast.body.length===0){if(isLastComment){addDanglingComment$3(ast,comment);}else{addLeadingComment$3(ast,comment);}return true;}else if(enclosingNode&&enclosingNode.type==="Program"&&enclosingNode.body.length===0&&enclosingNode.directives&&enclosingNode.directives.length===0){if(isLastComment){addDanglingComment$3(enclosingNode,comment);}else{addLeadingComment$3(enclosingNode,comment);}return true;}return false;}function handleForComments(enclosingNode,precedingNode,comment){if(enclosingNode&&(enclosingNode.type==="ForInStatement"||enclosingNode.type==="ForOfStatement")){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleImportDeclarationComments(text,enclosingNode,precedingNode,comment,options){if(precedingNode&&precedingNode.type==="ImportSpecifier"&&enclosingNode&&enclosingNode.type==="ImportDeclaration"&&util$1.hasNewline(text,options.locEnd(comment))){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleAssignmentPatternComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="AssignmentPattern"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleTypeAliasComments(enclosingNode,followingNode,comment){if(enclosingNode&&enclosingNode.type==="TypeAlias"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleVariableDeclaratorComments(enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="VariableDeclarator"||enclosingNode.type==="AssignmentExpression")&&followingNode&&(followingNode.type==="ObjectExpression"||followingNode.type==="ArrayExpression"||followingNode.type==="TemplateLiteral"||followingNode.type==="TaggedTemplateExpression"||isBlockComment(comment))){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleTSFunctionTrailingComments(text,enclosingNode,followingNode,comment,options){if(!followingNode&&enclosingNode&&(enclosingNode.type==="TSMethodSignature"||enclosingNode.type==="TSDeclareFunction"||enclosingNode.type==="TSAbstractMethodDefinition")&&util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)===";"){addTrailingComment$3(enclosingNode,comment);return true;}return false;}function handleTSMappedTypeComments(text,enclosingNode,precedingNode,followingNode,comment){if(!enclosingNode||enclosingNode.type!=="TSMappedType"){return false;}if(followingNode&&followingNode.type==="TSTypeParameter"&&followingNode.name){addLeadingComment$3(followingNode.name,comment);return true;}if(precedingNode&&precedingNode.type==="TSTypeParameter"&&precedingNode.constraint){addTrailingComment$3(precedingNode.constraint,comment);return true;}return false;}function isBlockComment(comment){return comment.type==="Block"||comment.type==="CommentBlock";}function hasLeadingComment(node){var fn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return true;};if(node.leadingComments){return node.leadingComments.some(fn);}if(node.comments){return node.comments.some(function(comment){return comment.leading&&fn(comment);});}return false;}function isRealFunctionLikeNode(node){return node.type==="ArrowFunctionExpression"||node.type==="FunctionExpression"||node.type==="FunctionDeclaration"||node.type==="ObjectMethod"||node.type==="ClassMethod"||node.type==="TSDeclareFunction"||node.type==="TSCallSignatureDeclaration"||node.type==="TSConstructSignatureDeclaration"||node.type==="TSConstructSignatureDeclaration"||node.type==="TSMethodSignature"||node.type==="TSConstructorType"||node.type==="TSFunctionType"||node.type==="TSDeclareMethod";}function getGapRegex(enclosingNode){if(enclosingNode&&enclosingNode.type!=="BinaryExpression"&&enclosingNode.type!=="LogicalExpression"){// Support degenerate single-element unions and intersections.\n// E.g.: `type A = /* 1 */ & B`\nreturn /^[\\s(&|]*$/;}}function getCommentChildNodes(node,options){// Prevent attaching comments to FunctionExpression in this case:\n//     class Foo {\n//       bar() // comment\n//       {\n//         baz();\n//       }\n//     }\nif((options.parser==="typescript"||options.parser==="flow")&&node.type==="MethodDefinition"&&node.value&&node.value.type==="FunctionExpression"&&node.value.params.length===0&&!node.value.returnType&&(!node.value.typeParameters||node.value.typeParameters.length===0)&&node.value.body){return[].concat((0,_toConsumableArray3.default)(node.decorators||[]),[node.key,node.value.body]);}}function isTypeCastComment(comment){return isBlockComment(comment)&&comment.value[0]==="*"&&// TypeScript expects the type to be enclosed in curly brackets, however\n// Closure Compiler accepts types in parens and even without any delimiters at all.\n// That\'s why we just search for "@type".\n/@type\\b/.test(comment.value);}var comments$1={handleOwnLineComment:handleOwnLineComment,handleEndOfLineComment:handleEndOfLineComment,handleRemainingComment:handleRemainingComment,hasLeadingComment:hasLeadingComment,isBlockComment:isBlockComment,isTypeCastComment:isTypeCastComment,getGapRegex:getGapRegex,getCommentChildNodes:getCommentChildNodes};var isBlockComment$1=comments$1.isBlockComment,hasLeadingComment$1=comments$1.hasLeadingComment;var _document$builders8=document.builders,indent$6=_document$builders8.indent,join$7=_document$builders8.join,line$7=_document$builders8.line,hardline$8=_document$builders8.hardline,softline$5=_document$builders8.softline,literalline$3=_document$builders8.literalline,concat$b=_document$builders8.concat,group$a=_document$builders8.group,dedentToRoot$2=_document$builders8.dedentToRoot,_document$utils2=document.utils,mapDoc$3=_document$utils2.mapDoc,stripTrailingHardline$2=_document$utils2.stripTrailingHardline;function embed$3(path,print,textToDoc,options){var node=path.getValue();var parent=path.getParentNode();var parentParent=path.getParentNode(1);switch(node.type){case"TemplateLiteral":{var isCss=[isStyledJsx,isStyledComponents,isCssProp,isAngularComponentStyles].some(function(isIt){return isIt(path);});if(isCss){// Get full template literal with expressions replaced by placeholders\nvar rawQuasis=node.quasis.map(function(q){return q.value.raw;});var placeholderID=0;var text=rawQuasis.reduce(function(prevVal,currVal,idx){return idx===0?currVal:prevVal+"@prettier-placeholder-"+placeholderID++ +"-id"+currVal;},"");var _doc4=textToDoc(text,{parser:"scss"});return transformCssDoc(_doc4,path,print);}/*\n           * react-relay and graphql-tag\n           * graphql`...`\n           * graphql.experimental`...`\n           * gql`...`\n           *\n           * This intentionally excludes Relay Classic tags, as Prettier does not\n           * support Relay Classic formatting.\n           */if(isGraphQL(path)){var expressionDocs=node.expressions?path.map(print,"expressions"):[];var numQuasis=node.quasis.length;if(numQuasis===1&&node.quasis[0].value.raw.trim()===""){return"``";}var parts=[];for(var i=0;i<numQuasis;i++){var templateElement=node.quasis[i];var isFirst=i===0;var isLast=i===numQuasis-1;var _text=templateElement.value.cooked;// Bail out if any of the quasis have an invalid escape sequence\n// (which would make the `cooked` value be `null` or `undefined`)\nif(typeof _text!=="string"){return null;}var lines=_text.split("\\n");var numLines=lines.length;var expressionDoc=expressionDocs[i];var startsWithBlankLine=numLines>2&&lines[0].trim()===""&&lines[1].trim()==="";var endsWithBlankLine=numLines>2&&lines[numLines-1].trim()===""&&lines[numLines-2].trim()==="";var commentsAndWhitespaceOnly=lines.every(function(line){return /^\\s*(?:#[^\\r\\n]*)?$/.test(line);});// Bail out if an interpolation occurs within a comment.\nif(!isLast&&/#[^\\r\\n]*$/.test(lines[numLines-1])){return null;}var _doc5=null;if(commentsAndWhitespaceOnly){_doc5=printGraphqlComments(lines);}else{_doc5=stripTrailingHardline$2(textToDoc(_text,{parser:"graphql"}));}if(_doc5){_doc5=escapeTemplateCharacters(_doc5,false);if(!isFirst&&startsWithBlankLine){parts.push("");}parts.push(_doc5);if(!isLast&&endsWithBlankLine){parts.push("");}}else if(!isFirst&&!isLast&&startsWithBlankLine){parts.push("");}if(expressionDoc){parts.push(concat$b(["${",expressionDoc,"}"]));}}return concat$b(["`",indent$6(concat$b([hardline$8,join$7(hardline$8,parts)])),hardline$8,"`"]);}var htmlParser=isHtml(path)?"html":isAngularComponentTemplate(path)?"angular":undefined;if(htmlParser){return printHtmlTemplateLiteral(path,print,textToDoc,htmlParser,options);}break;}case"TemplateElement":{/**\n           * md`...`\n           * markdown`...`\n           */if(parentParent&&parentParent.type==="TaggedTemplateExpression"&&parent.quasis.length===1&&parentParent.tag.type==="Identifier"&&(parentParent.tag.name==="md"||parentParent.tag.name==="markdown")){var _text2=parent.quasis[0].value.raw.replace(/((?:\\\\\\\\)*)\\\\`/g,function(_,backslashes){return"\\\\".repeat(backslashes.length/2)+"`";});var indentation=getIndentation(_text2);var hasIndent=indentation!=="";return concat$b([hasIndent?indent$6(concat$b([softline$5,printMarkdown(_text2.replace(new RegExp("^".concat(indentation),"gm"),""))])):concat$b([literalline$3,dedentToRoot$2(printMarkdown(_text2))]),softline$5]);}break;}}function printMarkdown(text){var doc=textToDoc(text,{parser:"markdown",__inJsTemplate:true});return stripTrailingHardline$2(escapeTemplateCharacters(doc,true));}}function getIndentation(str){var firstMatchedIndent=str.match(/^([^\\S\\n]*)\\S/m);return firstMatchedIndent===null?"":firstMatchedIndent[1];}function uncook(cookedValue){return cookedValue.replace(/([\\\\`]|\\$\\{)/g,"\\\\$1");}function escapeTemplateCharacters(doc,raw){return mapDoc$3(doc,function(currentDoc){if(!currentDoc.parts){return currentDoc;}var parts=[];currentDoc.parts.forEach(function(part){if(typeof part==="string"){parts.push(raw?part.replace(/(\\\\*)`/g,"$1$1\\\\`"):uncook(part));}else{parts.push(part);}});return Object.assign({},currentDoc,{parts:parts});});}function transformCssDoc(quasisDoc,path,print){var parentNode=path.getValue();var isEmpty=parentNode.quasis.length===1&&!parentNode.quasis[0].value.raw.trim();if(isEmpty){return"``";}var expressionDocs=parentNode.expressions?path.map(print,"expressions"):[];var newDoc=replacePlaceholders(quasisDoc,expressionDocs);/* istanbul ignore if */if(!newDoc){throw new Error("Couldn\'t insert all the expressions");}return concat$b(["`",indent$6(concat$b([hardline$8,stripTrailingHardline$2(newDoc)])),softline$5,"`"]);}// Search all the placeholders in the quasisDoc tree\n// and replace them with the expression docs one by one\n// returns a new doc with all the placeholders replaced,\n// or null if it couldn\'t replace any expression\nfunction replacePlaceholders(quasisDoc,expressionDocs){if(!expressionDocs||!expressionDocs.length){return quasisDoc;}var expressions=expressionDocs.slice();var replaceCounter=0;var newDoc=mapDoc$3(quasisDoc,function(doc){if(!doc||!doc.parts||!doc.parts.length){return doc;}var parts=doc.parts;var atIndex=parts.indexOf("@");var placeholderIndex=atIndex+1;if(atIndex>-1&&typeof parts[placeholderIndex]==="string"&&parts[placeholderIndex].startsWith("prettier-placeholder")){// If placeholder is split, join it\nvar at=parts[atIndex];var placeholder=parts[placeholderIndex];var rest=parts.slice(placeholderIndex+1);parts=parts.slice(0,atIndex).concat([at+placeholder]).concat(rest);}var atPlaceholderIndex=parts.findIndex(function(part){return typeof part==="string"&&part.startsWith("@prettier-placeholder");});if(atPlaceholderIndex>-1){var _placeholder=parts[atPlaceholderIndex];var _rest=parts.slice(atPlaceholderIndex+1);var placeholderMatch=_placeholder.match(/@prettier-placeholder-(.+)-id([\\s\\S]*)/);var placeholderID=placeholderMatch[1];// When the expression has a suffix appended, like:\n// animation: linear ${time}s ease-out;\nvar suffix=placeholderMatch[2];var expression=expressions[placeholderID];replaceCounter++;parts=parts.slice(0,atPlaceholderIndex).concat(["${",expression,"}"+suffix]).concat(_rest);}return Object.assign({},doc,{parts:parts});});return expressions.length===replaceCounter?newDoc:null;}function printGraphqlComments(lines){var parts=[];var seenComment=false;lines.map(function(textLine){return textLine.trim();}).forEach(function(textLine,i,array){// Lines are either whitespace only, or a comment (with potential whitespace\n// around it). Drop whitespace-only lines.\nif(textLine===""){return;}if(array[i-1]===""&&seenComment){// If a non-first comment is preceded by a blank (whitespace only) line,\n// add in a blank line.\nparts.push(concat$b([hardline$8,textLine]));}else{parts.push(textLine);}seenComment=true;});// If `lines` was whitespace only, return `null`.\nreturn parts.length===0?null:join$7(hardline$8,parts);}/**\n   * Template literal in these contexts:\n   * <style jsx>{`div{color:red}`}</style>\n   * css``\n   * css.global``\n   * css.resolve``\n   */function isStyledJsx(path){var node=path.getValue();var parent=path.getParentNode();var parentParent=path.getParentNode(1);return parentParent&&node.quasis&&parent.type==="JSXExpressionContainer"&&parentParent.type==="JSXElement"&&parentParent.openingElement.name.name==="style"&&parentParent.openingElement.attributes.some(function(attribute){return attribute.name.name==="jsx";})||parent&&parent.type==="TaggedTemplateExpression"&&parent.tag.type==="Identifier"&&parent.tag.name==="css"||parent&&parent.type==="TaggedTemplateExpression"&&parent.tag.type==="MemberExpression"&&parent.tag.object.name==="css"&&(parent.tag.property.name==="global"||parent.tag.property.name==="resolve");}/**\n   * Angular Components can have:\n   * - Inline HTML template\n   * - Inline CSS styles\n   *\n   * ...which are both within template literals somewhere\n   * inside of the Component decorator factory.\n   *\n   * E.g.\n   * @Component({\n   *  template: `<div>...</div>`,\n   *  styles: [`h1 { color: blue; }`]\n   * })\n   */function isAngularComponentStyles(path){return path.match.apply(path,[function(node){return node.type==="TemplateLiteral";},function(node,name){return node.type==="ArrayExpression"&&name==="elements";},function(node,name){return(node.type==="Property"||node.type==="ObjectProperty")&&node.key.type==="Identifier"&&node.key.name==="styles"&&name==="value";}].concat(angularComponentObjectExpressionPredicates));}function isAngularComponentTemplate(path){return path.match.apply(path,[function(node){return node.type==="TemplateLiteral";},function(node,name){return(node.type==="Property"||node.type==="ObjectProperty")&&node.key.type==="Identifier"&&node.key.name==="template"&&name==="value";}].concat(angularComponentObjectExpressionPredicates));}var angularComponentObjectExpressionPredicates=[function(node,name){return node.type==="ObjectExpression"&&name==="properties";},function(node,name){return node.type==="CallExpression"&&node.callee.type==="Identifier"&&node.callee.name==="Component"&&name==="arguments";},function(node,name){return node.type==="Decorator"&&name==="expression";}];/**\n   * styled-components template literals\n   */function isStyledComponents(path){var parent=path.getParentNode();if(!parent||parent.type!=="TaggedTemplateExpression"){return false;}var tag=parent.tag;switch(tag.type){case"MemberExpression":return(// styled.foo``\nisStyledIdentifier(tag.object)||// Component.extend``\nisStyledExtend(tag));case"CallExpression":return(// styled(Component)``\nisStyledIdentifier(tag.callee)||tag.callee.type==="MemberExpression"&&(tag.callee.object.type==="MemberExpression"&&(// styled.foo.attrs({})``\nisStyledIdentifier(tag.callee.object.object)||// Component.extend.attrs({})``\nisStyledExtend(tag.callee.object))||// styled(Component).attrs({})``\ntag.callee.object.type==="CallExpression"&&isStyledIdentifier(tag.callee.object.callee)));case"Identifier":// css``\nreturn tag.name==="css";default:return false;}}/**\n   * JSX element with CSS prop\n   */function isCssProp(path){var parent=path.getParentNode();var parentParent=path.getParentNode(1);return parentParent&&parent.type==="JSXExpressionContainer"&&parentParent.type==="JSXAttribute"&&parentParent.name.type==="JSXIdentifier"&&parentParent.name.name==="css";}function isStyledIdentifier(node){return node.type==="Identifier"&&node.name==="styled";}function isStyledExtend(node){return /^[A-Z]/.test(node.object.name)&&node.property.name==="extend";}/*\n   * react-relay and graphql-tag\n   * graphql`...`\n   * graphql.experimental`...`\n   * gql`...`\n   * GraphQL comment block\n   *\n   * This intentionally excludes Relay Classic tags, as Prettier does not\n   * support Relay Classic formatting.\n   */function isGraphQL(path){var node=path.getValue();var parent=path.getParentNode();return hasLanguageComment(node,"GraphQL")||parent&&(parent.type==="TaggedTemplateExpression"&&(parent.tag.type==="MemberExpression"&&parent.tag.object.name==="graphql"&&parent.tag.property.name==="experimental"||parent.tag.type==="Identifier"&&(parent.tag.name==="gql"||parent.tag.name==="graphql"))||parent.type==="CallExpression"&&parent.callee.type==="Identifier"&&parent.callee.name==="graphql");}function hasLanguageComment(node,languageName){// This checks for a leading comment that is exactly `/* GraphQL */`\n// In order to be in line with other implementations of this comment tag\n// we will not trim the comment value and we will expect exactly one space on\n// either side of the GraphQL string\n// Also see ./clean.js\nreturn hasLeadingComment$1(node,function(comment){return isBlockComment$1(comment)&&comment.value===" ".concat(languageName," ");});}/**\n   *     - html`...`\n   *     - HTML comment block\n   */function isHtml(path){return hasLanguageComment(path.getValue(),"HTML")||path.match(function(node){return node.type==="TemplateLiteral";},function(node,name){return node.type==="TaggedTemplateExpression"&&node.tag.type==="Identifier"&&node.tag.name==="html"&&name==="quasi";});}// The counter is needed to distinguish nested embeds.\nvar htmlTemplateLiteralCounter=0;function printHtmlTemplateLiteral(path,print,textToDoc,parser,options){var node=path.getValue();var counter=htmlTemplateLiteralCounter;htmlTemplateLiteralCounter=htmlTemplateLiteralCounter+1>>>0;var composePlaceholder=function composePlaceholder(index){return"PRETTIER_HTML_PLACEHOLDER_".concat(index,"_").concat(counter,"_IN_JS");};var text=node.quasis.map(function(quasi,index,quasis){return index===quasis.length-1?quasi.value.cooked:quasi.value.cooked+composePlaceholder(index);}).join("");var expressionDocs=path.map(print,"expressions");if(expressionDocs.length===0&&text.trim().length===0){return"``";}var placeholderRegex=new RegExp(composePlaceholder("(\\\\d+)"),"g");var topLevelCount=0;var contentDoc=mapDoc$3(stripTrailingHardline$2(textToDoc(text,{parser:parser,__onHtmlRoot:function __onHtmlRoot(root){topLevelCount=root.children.length;}})),function(doc){if(typeof doc!=="string"){return doc;}var parts=[];var components=doc.split(placeholderRegex);for(var i=0;i<components.length;i++){var component=components[i];if(i%2===0){if(component){component=uncook(component);if(options.embeddedInHtml){component=component.replace(/<\\/(script)\\b/gi,"<\\\\/$1");}parts.push(component);}continue;}var placeholderIndex=+component;parts.push(concat$b(["${",group$a(expressionDocs[placeholderIndex]),"}"]));}return concat$b(parts);});var leadingWhitespace=/^\\s/.test(text)?" ":"";var trailingWhitespace=/\\s$/.test(text)?" ":"";var linebreak=options.htmlWhitespaceSensitivity==="ignore"?hardline$8:leadingWhitespace&&trailingWhitespace?line$7:null;if(linebreak){return group$a(concat$b(["`",indent$6(concat$b([linebreak,group$a(contentDoc)])),linebreak,"`"]));}return group$a(concat$b(["`",leadingWhitespace,topLevelCount>1?indent$6(group$a(contentDoc)):group$a(contentDoc),trailingWhitespace,"`"]));}var embed_1$1=embed$3;function clean$4(ast,newObj,parent){["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","flags","errors"].forEach(function(name){delete newObj[name];});if(ast.loc&&ast.loc.source===null){delete newObj.loc.source;}if(ast.type==="BigIntLiteral"){newObj.value=newObj.value.toLowerCase();}// We remove extra `;` and add them when needed\nif(ast.type==="EmptyStatement"){return null;}// We move text around, including whitespaces and add {" "}\nif(ast.type==="JSXText"){return null;}if(ast.type==="JSXExpressionContainer"&&ast.expression.type==="Literal"&&ast.expression.value===" "){return null;}// (TypeScript) Ignore `static` in `constructor(static p) {}`\n// and `export` in `constructor(export p) {}`\nif(ast.type==="TSParameterProperty"&&ast.accessibility===null&&!ast.readonly){return{type:"Identifier",name:ast.parameter.name,typeAnnotation:newObj.parameter.typeAnnotation,decorators:newObj.decorators};}// (TypeScript) ignore empty `specifiers` array\nif(ast.type==="TSNamespaceExportDeclaration"&&ast.specifiers&&ast.specifiers.length===0){delete newObj.specifiers;}// We convert <div></div> to <div />\nif(ast.type==="JSXOpeningElement"){delete newObj.selfClosing;}if(ast.type==="JSXElement"){delete newObj.closingElement;}// We change {\'key\': value} into {key: value}\nif((ast.type==="Property"||ast.type==="ObjectProperty"||ast.type==="MethodDefinition"||ast.type==="ClassProperty"||ast.type==="TSPropertySignature"||ast.type==="ObjectTypeProperty")&&(0,_typeof3.default)(ast.key)==="object"&&ast.key&&(ast.key.type==="Literal"||ast.key.type==="StringLiteral"||ast.key.type==="Identifier")){delete newObj.key;}if(ast.type==="OptionalMemberExpression"&&ast.optional===false){newObj.type="MemberExpression";delete newObj.optional;}// Remove raw and cooked values from TemplateElement when it\'s CSS\n// styled-jsx\nif(ast.type==="JSXElement"&&ast.openingElement.name.name==="style"&&ast.openingElement.attributes.some(function(attr){return attr.name.name==="jsx";})){var templateLiterals=newObj.children.filter(function(child){return child.type==="JSXExpressionContainer"&&child.expression.type==="TemplateLiteral";}).map(function(container){return container.expression;});var quasis=templateLiterals.reduce(function(quasis,templateLiteral){return quasis.concat(templateLiteral.quasis);},[]);quasis.forEach(function(q){return delete q.value;});}// CSS template literals in css prop\nif(ast.type==="JSXAttribute"&&ast.name.name==="css"&&ast.value.type==="JSXExpressionContainer"&&ast.value.expression.type==="TemplateLiteral"){newObj.value.expression.quasis.forEach(function(q){return delete q.value;});}// Angular Components: Inline HTML template and Inline CSS styles\nvar expression=ast.expression||ast.callee;if(ast.type==="Decorator"&&expression.type==="CallExpression"&&expression.callee.name==="Component"&&expression.arguments.length===1){var astProps=ast.expression.arguments[0].properties;newObj.expression.arguments[0].properties.forEach(function(prop,index){var templateLiteral=null;switch(astProps[index].key.name){case"styles":if(prop.value.type==="ArrayExpression"){templateLiteral=prop.value.elements[0];}break;case"template":if(prop.value.type==="TemplateLiteral"){templateLiteral=prop.value;}break;}if(templateLiteral){templateLiteral.quasis.forEach(function(q){return delete q.value;});}});}// styled-components, graphql, markdown\nif(ast.type==="TaggedTemplateExpression"&&(ast.tag.type==="MemberExpression"||ast.tag.type==="Identifier"&&(ast.tag.name==="gql"||ast.tag.name==="graphql"||ast.tag.name==="css"||ast.tag.name==="md"||ast.tag.name==="markdown"||ast.tag.name==="html")||ast.tag.type==="CallExpression")){newObj.quasi.quasis.forEach(function(quasi){return delete quasi.value;});}if(ast.type==="TemplateLiteral"){// This checks for a leading comment that is exactly `/* GraphQL */`\n// In order to be in line with other implementations of this comment tag\n// we will not trim the comment value and we will expect exactly one space on\n// either side of the GraphQL string\n// Also see ./embed.js\nvar _hasLanguageComment=ast.leadingComments&&ast.leadingComments.some(function(comment){return comment.type==="CommentBlock"&&["GraphQL","HTML"].some(function(languageName){return comment.value===" ".concat(languageName," ");});});if(_hasLanguageComment||parent.type==="CallExpression"&&parent.callee.name==="graphql"){newObj.quasis.forEach(function(quasi){return delete quasi.value;});}}}var clean_1$1=clean$4;var getLast$2=util$1.getLast,hasNewline$4=util$1.hasNewline,hasNewlineInRange$2=util$1.hasNewlineInRange,hasIgnoreComment$3=util$1.hasIgnoreComment,hasNodeIgnoreComment$1=util$1.hasNodeIgnoreComment,skipWhitespace$2=util$1.skipWhitespace;var isIdentifierName=utils$1.keyword.isIdentifierNameES5;// We match any whitespace except line terminators because\n// Flow annotation comments cannot be split across lines. For example:\n//\n// (this /*\n// : any */).foo = 5;\n//\n// is not picked up by Flow (see https://github.com/facebook/flow/issues/7050), so\n// removing the newline would create a type annotation that the user did not intend\n// to create.\nvar NON_LINE_TERMINATING_WHITE_SPACE="(?:(?=.)\\\\s)";var FLOW_SHORTHAND_ANNOTATION=new RegExp("^".concat(NON_LINE_TERMINATING_WHITE_SPACE,"*:"));var FLOW_ANNOTATION=new RegExp("^".concat(NON_LINE_TERMINATING_WHITE_SPACE,"*::"));function hasFlowShorthandAnnotationComment(node){// https://flow.org/en/docs/types/comments/\n// Syntax example: const r = new (window.Request /*: Class<Request> */)("");\nreturn node.extra&&node.extra.parenthesized&&node.trailingComments&&node.trailingComments[0].value.match(FLOW_SHORTHAND_ANNOTATION);}function hasFlowAnnotationComment(comments){return comments&&comments[0].value.match(FLOW_ANNOTATION);}function hasNode(node,fn){if(!node||(0,_typeof3.default)(node)!=="object"){return false;}if(Array.isArray(node)){return node.some(function(value){return hasNode(value,fn);});}var result=fn(node);return typeof result==="boolean"?result:Object.keys(node).some(function(key){return hasNode(node[key],fn);});}function hasNakedLeftSide(node){return node.type==="AssignmentExpression"||node.type==="BinaryExpression"||node.type==="LogicalExpression"||node.type==="NGPipeExpression"||node.type==="ConditionalExpression"||node.type==="CallExpression"||node.type==="OptionalCallExpression"||node.type==="MemberExpression"||node.type==="OptionalMemberExpression"||node.type==="SequenceExpression"||node.type==="TaggedTemplateExpression"||node.type==="BindExpression"||node.type==="UpdateExpression"&&!node.prefix||node.type==="TSAsExpression"||node.type==="TSNonNullExpression";}function getLeftSide(node){if(node.expressions){return node.expressions[0];}return node.left||node.test||node.callee||node.object||node.tag||node.argument||node.expression;}function getLeftSidePathName(path,node){if(node.expressions){return["expressions",0];}if(node.left){return["left"];}if(node.test){return["test"];}if(node.object){return["object"];}if(node.callee){return["callee"];}if(node.tag){return["tag"];}if(node.argument){return["argument"];}if(node.expression){return["expression"];}throw new Error("Unexpected node has no left side",node);}var exportDeclarationTypes=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function isExportDeclaration(node){return node&&exportDeclarationTypes.has(node.type);}function getParentExportDeclaration(path){var parentNode=path.getParentNode();if(path.getName()==="declaration"&&isExportDeclaration(parentNode)){return parentNode;}return null;}function isLiteral(node){return node.type==="BooleanLiteral"||node.type==="DirectiveLiteral"||node.type==="Literal"||node.type==="NullLiteral"||node.type==="NumericLiteral"||node.type==="RegExpLiteral"||node.type==="StringLiteral"||node.type==="TemplateLiteral"||node.type==="TSTypeLiteral"||node.type==="JSXText";}function isNumericLiteral(node){return node.type==="NumericLiteral"||node.type==="Literal"&&typeof node.value==="number";}function isStringLiteral(node){return node.type==="StringLiteral"||node.type==="Literal"&&typeof node.value==="string";}function isObjectType(n){return n.type==="ObjectTypeAnnotation"||n.type==="TSTypeLiteral";}function isFunctionOrArrowExpression(node){return node.type==="FunctionExpression"||node.type==="ArrowFunctionExpression";}function isFunctionOrArrowExpressionWithBody(node){return node.type==="FunctionExpression"||node.type==="ArrowFunctionExpression"&&node.body.type==="BlockStatement";}function isTemplateLiteral(node){return node.type==="TemplateLiteral";}// `inject` is used in AngularJS 1.x, `async` in Angular 2+\n// example: https://docs.angularjs.org/guide/unit-testing#using-beforeall-\nfunction isAngularTestWrapper(node){return(node.type==="CallExpression"||node.type==="OptionalCallExpression")&&node.callee.type==="Identifier"&&(node.callee.name==="async"||node.callee.name==="inject"||node.callee.name==="fakeAsync");}function isJSXNode(node){return node.type==="JSXElement"||node.type==="JSXFragment";}function isTheOnlyJSXElementInMarkdown(options,path){if(options.parentParser!=="markdown"&&options.parentParser!=="mdx"){return false;}var node=path.getNode();if(!node.expression||!isJSXNode(node.expression)){return false;}var parent=path.getParentNode();return parent.type==="Program"&&parent.body.length===1;}// Detect an expression node representing `{" "}`\nfunction isJSXWhitespaceExpression(node){return node.type==="JSXExpressionContainer"&&isLiteral(node.expression)&&node.expression.value===" "&&!node.expression.comments;}function isMemberExpressionChain(node){if(node.type!=="MemberExpression"&&node.type!=="OptionalMemberExpression"){return false;}if(node.object.type==="Identifier"){return true;}return isMemberExpressionChain(node.object);}function isGetterOrSetter(node){return node.kind==="get"||node.kind==="set";}function sameLocStart(nodeA,nodeB,options){return options.locStart(nodeA)===options.locStart(nodeB);}// TODO: This is a bad hack and we need a better way to distinguish between\n// arrow functions and otherwise\nfunction isFunctionNotation(node,options){return isGetterOrSetter(node)||sameLocStart(node,node.value,options);}// Hack to differentiate between the following two which have the same ast\n// type T = { method: () => void };\n// type T = { method(): void };\nfunction isObjectTypePropertyAFunction(node,options){return(node.type==="ObjectTypeProperty"||node.type==="ObjectTypeInternalSlot")&&node.value.type==="FunctionTypeAnnotation"&&!node.static&&!isFunctionNotation(node,options);}// Hack to differentiate between the following two which have the same ast\n// declare function f(a): void;\n// var f: (a) => void;\nfunction isTypeAnnotationAFunction(node,options){return(node.type==="TypeAnnotation"||node.type==="TSTypeAnnotation")&&node.typeAnnotation.type==="FunctionTypeAnnotation"&&!node.static&&!sameLocStart(node,node.typeAnnotation,options);}var binaryishNodeTypes=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]);function isBinaryish(node){return binaryishNodeTypes.has(node.type);}function isMemberish(node){return node.type==="MemberExpression"||node.type==="OptionalMemberExpression"||node.type==="BindExpression"&&node.object;}function isSimpleFlowType(node){var flowTypeAnnotations=["AnyTypeAnnotation","NullLiteralTypeAnnotation","GenericTypeAnnotation","ThisTypeAnnotation","NumberTypeAnnotation","VoidTypeAnnotation","EmptyTypeAnnotation","MixedTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","StringTypeAnnotation"];return node&&flowTypeAnnotations.includes(node.type)&&!(node.type==="GenericTypeAnnotation"&&node.typeParameters);}var unitTestRe=/^(skip|[fx]?(it|describe|test))$/;function isSkipOrOnlyBlock(node){return(node.callee.type==="MemberExpression"||node.callee.type==="OptionalMemberExpression")&&node.callee.object.type==="Identifier"&&node.callee.property.type==="Identifier"&&unitTestRe.test(node.callee.object.name)&&(node.callee.property.name==="only"||node.callee.property.name==="skip");}function isUnitTestSetUp(n){var unitTestSetUpRe=/^(before|after)(Each|All)$/;return n.callee.type==="Identifier"&&unitTestSetUpRe.test(n.callee.name)&&n.arguments.length===1;}// eg; `describe("some string", (done) => {})`\nfunction isTestCall(n,parent){if(n.type!=="CallExpression"){return false;}if(n.arguments.length===1){if(isAngularTestWrapper(n)&&parent&&isTestCall(parent)){return isFunctionOrArrowExpression(n.arguments[0]);}if(isUnitTestSetUp(n)){return isAngularTestWrapper(n.arguments[0]);}}else if(n.arguments.length===2||n.arguments.length===3){if((n.callee.type==="Identifier"&&unitTestRe.test(n.callee.name)||isSkipOrOnlyBlock(n))&&(isTemplateLiteral(n.arguments[0])||isStringLiteral(n.arguments[0]))){// it("name", () => { ... }, 2500)\nif(n.arguments[2]&&!isNumericLiteral(n.arguments[2])){return false;}return(n.arguments.length===2?isFunctionOrArrowExpression(n.arguments[1]):isFunctionOrArrowExpressionWithBody(n.arguments[1])&&n.arguments[1].params.length<=1)||isAngularTestWrapper(n.arguments[1]);}}return false;}function hasLeadingComment$2(node){return node.comments&&node.comments.some(function(comment){return comment.leading;});}function hasTrailingComment(node){return node.comments&&node.comments.some(function(comment){return comment.trailing;});}function isCallOrOptionalCallExpression(node){return node.type==="CallExpression"||node.type==="OptionalCallExpression";}function hasDanglingComments(node){return node.comments&&node.comments.some(function(comment){return!comment.leading&&!comment.trailing;});}/** identify if an angular expression seems to have side effects */function hasNgSideEffect(path){return hasNode(path.getValue(),function(node){switch(node.type){case undefined:return false;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return true;}});}function isNgForOf(node,index,parentNode){return node.type==="NGMicrosyntaxKeyedExpression"&&node.key.name==="of"&&index===1&&parentNode.body[0].type==="NGMicrosyntaxLet"&&parentNode.body[0].value===null;}/** @param node {import("estree").TemplateLiteral} */function isSimpleTemplateLiteral(node){if(node.expressions.length===0){return false;}return node.expressions.every(function(expr){// Disallow comments since printDocToString can\'t print them here\nif(expr.comments){return false;}// Allow `x` and `this`\nif(expr.type==="Identifier"||expr.type==="ThisExpression"){return true;}// Allow `a.b.c`, `a.b[c]`, and `this.x.y`\nif(expr.type==="MemberExpression"||expr.type==="OptionalMemberExpression"){var _head=expr;while(_head.type==="MemberExpression"||_head.type==="OptionalMemberExpression"){if(_head.property.type!=="Identifier"&&_head.property.type!=="Literal"&&_head.property.type!=="StringLiteral"&&_head.property.type!=="NumericLiteral"){return false;}_head=_head.object;if(_head.comments){return false;}}if(_head.type==="Identifier"||_head.type==="ThisExpression"){return true;}return false;}return false;});}function getFlowVariance(path){if(!path.variance){return null;}// Babel 7.0 currently uses variance node type, and flow should\n// follow suit soon:\n// https://github.com/babel/babel/issues/4722\nvar variance=path.variance.kind||path.variance;switch(variance){case"plus":return"+";case"minus":return"-";default:/* istanbul ignore next */return variance;}}function classPropMayCauseASIProblems(path){var node=path.getNode();if(node.type!=="ClassProperty"){return false;}var name=node.key&&node.key.name;// this isn\'t actually possible yet with most parsers available today\n// so isn\'t properly tested yet.\nif((name==="static"||name==="get"||name==="set")&&!node.value&&!node.typeAnnotation){return true;}}function classChildNeedsASIProtection(node){if(!node){return;}if(node.static||node.accessibility// TypeScript\n){return false;}if(!node.computed){var _name9=node.key&&node.key.name;if(_name9==="in"||_name9==="instanceof"){return true;}}switch(node.type){case"ClassProperty":case"TSAbstractClassProperty":return node.computed;case"MethodDefinition":// Flow\ncase"TSAbstractMethodDefinition":// TypeScript\ncase"ClassMethod":case"ClassPrivateMethod":{// Babel\nvar isAsync=node.value?node.value.async:node.async;var isGenerator=node.value?node.value.generator:node.generator;if(isAsync||node.kind==="get"||node.kind==="set"){return false;}if(node.computed||isGenerator){return true;}return false;}case"TSIndexSignature":return true;default:/* istanbul ignore next */return false;}}function getTypeScriptMappedTypeModifier(tokenNode,keyword){if(tokenNode==="+"){return"+"+keyword;}else if(tokenNode==="-"){return"-"+keyword;}return keyword;}function hasNewlineBetweenOrAfterDecorators(node,options){return hasNewlineInRange$2(options.originalText,options.locStart(node.decorators[0]),options.locEnd(getLast$2(node.decorators)))||hasNewline$4(options.originalText,options.locEnd(getLast$2(node.decorators)));}// Only space, newline, carriage return, and tab are treated as whitespace\n// inside JSX.\nvar jsxWhitespaceChars=" \\n\\r\\t";var matchJsxWhitespaceRegex=new RegExp("(["+jsxWhitespaceChars+"]+)");var containsNonJsxWhitespaceRegex=new RegExp("[^"+jsxWhitespaceChars+"]");// Meaningful if it contains non-whitespace characters,\n// or it contains whitespace without a new line.\nfunction isMeaningfulJSXText(node){return isLiteral(node)&&(containsNonJsxWhitespaceRegex.test(rawText(node))||!/\\n/.test(rawText(node)));}function hasJsxIgnoreComment(path){var node=path.getValue();var parent=path.getParentNode();if(!parent||!node||!isJSXNode(node)||!isJSXNode(parent)){return false;}// Lookup the previous sibling, ignoring any empty JSXText elements\nvar index=parent.children.indexOf(node);var prevSibling=null;for(var i=index;i>0;i--){var candidate=parent.children[i-1];if(candidate.type==="JSXText"&&!isMeaningfulJSXText(candidate)){continue;}prevSibling=candidate;break;}return prevSibling&&prevSibling.type==="JSXExpressionContainer"&&prevSibling.expression.type==="JSXEmptyExpression"&&prevSibling.expression.comments&&prevSibling.expression.comments.find(function(comment){return comment.value.trim()==="prettier-ignore";});}function isEmptyJSXElement(node){if(node.children.length===0){return true;}if(node.children.length>1){return false;}// if there is one text child and does not contain any meaningful text\n// we can treat the element as empty.\nvar child=node.children[0];return isLiteral(child)&&!isMeaningfulJSXText(child);}function hasPrettierIgnore$4(path){return hasIgnoreComment$3(path)||hasJsxIgnoreComment(path);}function isLastStatement(path){var parent=path.getParentNode();if(!parent){return true;}var node=path.getValue();var body=(parent.body||parent.consequent).filter(function(stmt){return stmt.type!=="EmptyStatement";});return body&&body[body.length-1]===node;}function isFlowAnnotationComment(text,typeAnnotation,options){var start=options.locStart(typeAnnotation);var end=skipWhitespace$2(text,options.locEnd(typeAnnotation));return text.slice(start,start+2)==="/*"&&text.slice(end,end+2)==="*/";}function hasLeadingOwnLineComment(text,node,options){if(isJSXNode(node)){return hasNodeIgnoreComment$1(node);}var res=node.comments&&node.comments.some(function(comment){return comment.leading&&hasNewline$4(text,options.locEnd(comment));});return res;}// This recurses the return argument, looking for the first token\n// (the leftmost leaf node) and, if it (or its parents) has any\n// leadingComments, returns true (so it can be wrapped in parens).\nfunction returnArgumentHasLeadingComment(options,argument){if(hasLeadingOwnLineComment(options.originalText,argument,options)){return true;}if(hasNakedLeftSide(argument)){var leftMost=argument;var newLeftMost;while(newLeftMost=getLeftSide(leftMost)){leftMost=newLeftMost;if(hasLeadingOwnLineComment(options.originalText,leftMost,options)){return true;}}}return false;}function isStringPropSafeToCoerceToIdentifier(node,options){return isStringLiteral(node.key)&&isIdentifierName(node.key.value)&&options.parser!=="json"&&// With `--strictPropertyInitialization`, TS treats properties with quoted names differently than unquoted ones.\n// See https://github.com/microsoft/TypeScript/pull/20075\n!((options.parser==="typescript"||options.parser==="babel-ts")&&node.type==="ClassProperty");}function isJestEachTemplateLiteral(node,parentNode){/**\n     * describe.each`table`(name, fn)\n     * describe.only.each`table`(name, fn)\n     * describe.skip.each`table`(name, fn)\n     * test.each`table`(name, fn)\n     * test.only.each`table`(name, fn)\n     * test.skip.each`table`(name, fn)\n     *\n     * Ref: https://github.com/facebook/jest/pull/6102\n     */var jestEachTriggerRegex=/^[xf]?(describe|it|test)$/;return parentNode.type==="TaggedTemplateExpression"&&parentNode.quasi===node&&parentNode.tag.type==="MemberExpression"&&parentNode.tag.property.type==="Identifier"&&parentNode.tag.property.name==="each"&&(parentNode.tag.object.type==="Identifier"&&jestEachTriggerRegex.test(parentNode.tag.object.name)||parentNode.tag.object.type==="MemberExpression"&&parentNode.tag.object.property.type==="Identifier"&&(parentNode.tag.object.property.name==="only"||parentNode.tag.object.property.name==="skip")&&parentNode.tag.object.object.type==="Identifier"&&jestEachTriggerRegex.test(parentNode.tag.object.object.name));}function templateLiteralHasNewLines(template){return template.quasis.some(function(quasi){return quasi.value.raw.includes("\\n");});}function isTemplateOnItsOwnLine(n,text,options){return(n.type==="TemplateLiteral"&&templateLiteralHasNewLines(n)||n.type==="TaggedTemplateExpression"&&templateLiteralHasNewLines(n.quasi))&&!hasNewline$4(text,options.locStart(n),{backwards:true});}function needsHardlineAfterDanglingComment(node){if(!node.comments){return false;}var lastDanglingComment=getLast$2(node.comments.filter(function(comment){return!comment.leading&&!comment.trailing;}));return lastDanglingComment&&!comments$1.isBlockComment(lastDanglingComment);}// If we have nested conditional expressions, we want to print them in JSX mode\n// if there\'s at least one JSXElement somewhere in the tree.\n//\n// A conditional expression chain like this should be printed in normal mode,\n// because there aren\'t JSXElements anywhere in it:\n//\n// isA ? "A" : isB ? "B" : isC ? "C" : "Unknown";\n//\n// But a conditional expression chain like this should be printed in JSX mode,\n// because there is a JSXElement in the last ConditionalExpression:\n//\n// isA ? "A" : isB ? "B" : isC ? "C" : <span className="warning">Unknown</span>;\n//\n// This type of ConditionalExpression chain is structured like this in the AST:\n//\n// ConditionalExpression {\n//   test: ...,\n//   consequent: ...,\n//   alternate: ConditionalExpression {\n//     test: ...,\n//     consequent: ...,\n//     alternate: ConditionalExpression {\n//       test: ...,\n//       consequent: ...,\n//       alternate: ...,\n//     }\n//   }\n// }\n//\n// We want to traverse over that shape and convert it into a flat structure so\n// that we can find if there\'s a JSXElement somewhere inside.\nfunction getConditionalChainContents(node){// Given this code:\n//\n// // Using a ConditionalExpression as the consequent is uncommon, but should\n// // be handled.\n// A ? B : C ? D : E ? F ? G : H : I\n//\n// which has this AST:\n//\n// ConditionalExpression {\n//   test: Identifier(A),\n//   consequent: Identifier(B),\n//   alternate: ConditionalExpression {\n//     test: Identifier(C),\n//     consequent: Identifier(D),\n//     alternate: ConditionalExpression {\n//       test: Identifier(E),\n//       consequent: ConditionalExpression {\n//         test: Identifier(F),\n//         consequent: Identifier(G),\n//         alternate: Identifier(H),\n//       },\n//       alternate: Identifier(I),\n//     }\n//   }\n// }\n//\n// we should return this Array:\n//\n// [\n//   Identifier(A),\n//   Identifier(B),\n//   Identifier(C),\n//   Identifier(D),\n//   Identifier(E),\n//   Identifier(F),\n//   Identifier(G),\n//   Identifier(H),\n//   Identifier(I)\n// ];\n//\n// This loses the information about whether each node was the test,\n// consequent, or alternate, but we don\'t care about that here- we are only\n// flattening this structure to find if there\'s any JSXElements inside.\nvar nonConditionalExpressions=[];function recurse(node){if(node.type==="ConditionalExpression"){recurse(node.test);recurse(node.consequent);recurse(node.alternate);}else{nonConditionalExpressions.push(node);}}recurse(node);return nonConditionalExpressions;}function conditionalExpressionChainContainsJSX(node){return Boolean(getConditionalChainContents(node).find(isJSXNode));}// Logic to check for args with multiple anonymous functions. For instance,\n// the following call should be split on multiple lines for readability:\n// source.pipe(map((x) => x + x), filter((x) => x % 2 === 0))\nfunction isFunctionCompositionArgs(args){if(args.length<=1){return false;}var count=0;var _iterator38=_createForOfIteratorHelper(args),_step38;try{for(_iterator38.s();!(_step38=_iterator38.n()).done;){var arg=_step38.value;if(isFunctionOrArrowExpression(arg)){count+=1;if(count>1){return true;}}else if(isCallOrOptionalCallExpression(arg)){var _iterator39=_createForOfIteratorHelper(arg.arguments),_step39;try{for(_iterator39.s();!(_step39=_iterator39.n()).done;){var childArg=_step39.value;if(isFunctionOrArrowExpression(childArg)){return true;}}}catch(err){_iterator39.e(err);}finally{_iterator39.f();}}}}catch(err){_iterator38.e(err);}finally{_iterator38.f();}return false;}// Logic to determine if a call is a “long curried function call”.\n// See https://github.com/prettier/prettier/issues/1420.\n//\n// `connect(a, b, c)(d)`\n// In the above call expression, the second call is the parent node and the\n// first call is the current node.\nfunction isLongCurriedCallExpression(path){var node=path.getValue();var parent=path.getParentNode();return isCallOrOptionalCallExpression(node)&&isCallOrOptionalCallExpression(parent)&&parent.callee===node&&node.arguments.length>parent.arguments.length&&parent.arguments.length>0;}/**\n   * @param {import(\'estree\').Node} node\n   * @param {number} depth\n   * @returns {boolean}\n   */function isSimpleCallArgument(node,depth){if(depth>=2){return false;}var isChildSimple=function isChildSimple(child){return isSimpleCallArgument(child,depth+1);};var regexpPattern=node.type==="Literal"&&node.regex&&node.regex.pattern||node.type==="RegExpLiteral"&&node.pattern;if(regexpPattern&&regexpPattern.length>5){return false;}if(node.type==="Literal"||node.type==="BooleanLiteral"||node.type==="NullLiteral"||node.type==="NumericLiteral"||node.type==="StringLiteral"||node.type==="Identifier"||node.type==="ThisExpression"||node.type==="Super"||node.type==="BigIntLiteral"||node.type==="PrivateName"||node.type==="ArgumentPlaceholder"||node.type==="RegExpLiteral"||node.type==="Import"){return true;}if(node.type==="TemplateLiteral"){return node.expressions.every(isChildSimple);}if(node.type==="ObjectExpression"){return node.properties.every(function(p){return!p.computed&&(p.shorthand||p.value&&isChildSimple(p.value));});}if(node.type==="ArrayExpression"){return node.elements.every(function(x){return x==null||isChildSimple(x);});}if(node.type==="CallExpression"||node.type==="OptionalCallExpression"||node.type==="NewExpression"){return isSimpleCallArgument(node.callee,depth)&&node.arguments.every(isChildSimple);}if(node.type==="MemberExpression"||node.type==="OptionalMemberExpression"){return isSimpleCallArgument(node.object,depth)&&isSimpleCallArgument(node.property,depth);}if(node.type==="UnaryExpression"&&(node.operator==="!"||node.operator==="-")){return isSimpleCallArgument(node.argument,depth);}if(node.type==="TSNonNullExpression"){return isSimpleCallArgument(node.expression,depth);}return false;}function rawText(node){return node.extra?node.extra.raw:node.raw;}function identity$1(x){return x;}function isTSXFile(options){return options.filepath&&/\\.tsx$/i.test(options.filepath);}var utils$5={classChildNeedsASIProtection:classChildNeedsASIProtection,classPropMayCauseASIProblems:classPropMayCauseASIProblems,conditionalExpressionChainContainsJSX:conditionalExpressionChainContainsJSX,getFlowVariance:getFlowVariance,getLeftSidePathName:getLeftSidePathName,getParentExportDeclaration:getParentExportDeclaration,getTypeScriptMappedTypeModifier:getTypeScriptMappedTypeModifier,hasDanglingComments:hasDanglingComments,hasFlowAnnotationComment:hasFlowAnnotationComment,hasFlowShorthandAnnotationComment:hasFlowShorthandAnnotationComment,hasLeadingComment:hasLeadingComment$2,hasLeadingOwnLineComment:hasLeadingOwnLineComment,hasNakedLeftSide:hasNakedLeftSide,hasNewlineBetweenOrAfterDecorators:hasNewlineBetweenOrAfterDecorators,hasNgSideEffect:hasNgSideEffect,hasNode:hasNode,hasPrettierIgnore:hasPrettierIgnore$4,hasTrailingComment:hasTrailingComment,identity:identity$1,isBinaryish:isBinaryish,isCallOrOptionalCallExpression:isCallOrOptionalCallExpression,isEmptyJSXElement:isEmptyJSXElement,isExportDeclaration:isExportDeclaration,isFlowAnnotationComment:isFlowAnnotationComment,isFunctionCompositionArgs:isFunctionCompositionArgs,isFunctionNotation:isFunctionNotation,isFunctionOrArrowExpression:isFunctionOrArrowExpression,isGetterOrSetter:isGetterOrSetter,isJestEachTemplateLiteral:isJestEachTemplateLiteral,isJSXNode:isJSXNode,isJSXWhitespaceExpression:isJSXWhitespaceExpression,isLastStatement:isLastStatement,isLiteral:isLiteral,isLongCurriedCallExpression:isLongCurriedCallExpression,isSimpleCallArgument:isSimpleCallArgument,isMeaningfulJSXText:isMeaningfulJSXText,isMemberExpressionChain:isMemberExpressionChain,isMemberish:isMemberish,isNgForOf:isNgForOf,isNumericLiteral:isNumericLiteral,isObjectType:isObjectType,isObjectTypePropertyAFunction:isObjectTypePropertyAFunction,isSimpleFlowType:isSimpleFlowType,isSimpleTemplateLiteral:isSimpleTemplateLiteral,isStringLiteral:isStringLiteral,isStringPropSafeToCoerceToIdentifier:isStringPropSafeToCoerceToIdentifier,isTemplateOnItsOwnLine:isTemplateOnItsOwnLine,isTestCall:isTestCall,isTheOnlyJSXElementInMarkdown:isTheOnlyJSXElementInMarkdown,isTSXFile:isTSXFile,isTypeAnnotationAFunction:isTypeAnnotationAFunction,matchJsxWhitespaceRegex:matchJsxWhitespaceRegex,needsHardlineAfterDanglingComment:needsHardlineAfterDanglingComment,rawText:rawText,returnArgumentHasLeadingComment:returnArgumentHasLeadingComment};var getLeftSidePathName$1=utils$5.getLeftSidePathName,hasFlowShorthandAnnotationComment$1=utils$5.hasFlowShorthandAnnotationComment,hasNakedLeftSide$1=utils$5.hasNakedLeftSide,hasNode$1=utils$5.hasNode;function needsParens(path,options){var parent=path.getParentNode();if(!parent){return false;}var name=path.getName();var node=path.getNode();// If the value of this path is some child of a Node and not a Node\n// itself, then it doesn\'t need parentheses. Only Node objects (in\n// fact, only Expression nodes) need parentheses.\nif(path.getValue()!==node){return false;}// to avoid unexpected `}}` in HTML interpolations\nif(options.__isInHtmlInterpolation&&!options.bracketSpacing&&endsWithRightBracket(node)&&isFollowedByRightBracket(path)){return true;}// Only statements don\'t need parentheses.\nif(isStatement(node)){return false;}if(// Preserve parens if we have a Flow annotation comment, unless we\'re using the Flow\n// parser. The Flow parser turns Flow comments into type annotation nodes in its\n// AST, which we handle separately.\noptions.parser!=="flow"&&hasFlowShorthandAnnotationComment$1(path.getValue())){return true;}// Identifiers never need parentheses.\nif(node.type==="Identifier"){// ...unless those identifiers are embed placeholders. They might be substituted by complex\n// expressions, so the parens around them should not be dropped. Example (JS-in-HTML-in-JS):\n//     let tpl = html`<script> f((${expr}) / 2); <\/script>`;\n// If the inner JS formatter removes the parens, the expression might change its meaning:\n//     f((a + b) / 2)  vs  f(a + b / 2)\nif(node.extra&&node.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\\d+_\\d+_IN_JS$/.test(node.name)){return true;}return false;}if(parent.type==="ParenthesizedExpression"){return false;}// Add parens around the extends clause of a class. It is needed for almost\n// all expressions.\nif((parent.type==="ClassDeclaration"||parent.type==="ClassExpression")&&parent.superClass===node&&(node.type==="ArrowFunctionExpression"||node.type==="AssignmentExpression"||node.type==="AwaitExpression"||node.type==="BinaryExpression"||node.type==="ConditionalExpression"||node.type==="LogicalExpression"||node.type==="NewExpression"||node.type==="ObjectExpression"||node.type==="ParenthesizedExpression"||node.type==="SequenceExpression"||node.type==="TaggedTemplateExpression"||node.type==="UnaryExpression"||node.type==="UpdateExpression"||node.type==="YieldExpression")){return true;}if(parent.type==="ExportDefaultDeclaration"){return(// `export default function` or `export default class` can\'t be followed by\n// anything after. So an expression like `export default (function(){}).toString()`\n// needs to be followed by a parentheses\nshouldWrapFunctionForExportDefault(path,options)||// `export default (foo, bar)` also needs parentheses\nnode.type==="SequenceExpression");}if(parent.type==="Decorator"&&parent.expression===node){var hasCallExpression=false;var hasMemberExpression=false;var current=node;while(current){switch(current.type){case"MemberExpression":hasMemberExpression=true;current=current.object;break;case"CallExpression":if(/** @(x().y) */hasMemberExpression||/** @(x().y()) */hasCallExpression){return true;}hasCallExpression=true;current=current.callee;break;case"Identifier":return false;default:return true;}}return true;}if(parent.type==="ArrowFunctionExpression"&&parent.body===node&&node.type!=="SequenceExpression"&&// these have parens added anyway\nutil$1.startsWithNoLookaheadToken(node,/* forbidFunctionClassAndDoExpr */false)||parent.type==="ExpressionStatement"&&util$1.startsWithNoLookaheadToken(node,/* forbidFunctionClassAndDoExpr */true)){return true;}switch(node.type){case"SpreadElement":case"SpreadProperty":return parent.type==="MemberExpression"&&name==="object"&&parent.object===node;case"UpdateExpression":if(parent.type==="UnaryExpression"){return node.prefix&&(node.operator==="++"&&parent.operator==="+"||node.operator==="--"&&parent.operator==="-");}// else fallthrough\ncase"UnaryExpression":switch(parent.type){case"UnaryExpression":return node.operator===parent.operator&&(node.operator==="+"||node.operator==="-");case"BindExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"TaggedTemplateExpression":return true;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"BinaryExpression":return parent.operator==="**"&&name==="left";case"TSNonNullExpression":return true;default:return false;}case"BinaryExpression":{if(parent.type==="UpdateExpression"){return true;}var isLeftOfAForStatement=function isLeftOfAForStatement(node){var i=0;while(node){var _parent=path.getParentNode(i++);if(!_parent){return false;}if(_parent.type==="ForStatement"&&_parent.init===node){return true;}node=_parent;}return false;};if(node.operator==="in"&&isLeftOfAForStatement(node)){return true;}}// fallthrough\ncase"TSTypeAssertion":case"TSAsExpression":case"LogicalExpression":switch(parent.type){case"ConditionalExpression":return node.type==="TSAsExpression";case"CallExpression":case"NewExpression":case"OptionalCallExpression":return name==="callee";case"ClassExpression":case"ClassDeclaration":return name==="superClass"&&parent.superClass===node;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSAsExpression":case"TSNonNullExpression":case"UpdateExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"AssignmentExpression":return parent.left===node&&(node.type==="TSTypeAssertion"||node.type==="TSAsExpression");case"LogicalExpression":if(node.type==="LogicalExpression"){return parent.operator!==node.operator;}// else fallthrough\ncase"BinaryExpression":{if(!node.operator&&node.type!=="TSTypeAssertion"){return true;}var po=parent.operator;var pp=util$1.getPrecedence(po);var no=node.operator;var np=util$1.getPrecedence(no);if(pp>np){return true;}if(pp===np&&name==="right"){assert.strictEqual(parent.right,node);return true;}if(pp===np&&!util$1.shouldFlatten(po,no)){return true;}if(pp<np&&no==="%"){return po==="+"||po==="-";}// Add parenthesis when working with bitwise operators\n// It\'s not strictly needed but helps with code understanding\nif(util$1.isBitwiseOperator(po)){return true;}return false;}default:return false;}case"SequenceExpression":switch(parent.type){case"ReturnStatement":return false;case"ForStatement":// Although parentheses wouldn\'t hurt around sequence\n// expressions in the head of for loops, traditional style\n// dictates that e.g. i++, j++ should not be wrapped with\n// parentheses.\nreturn false;case"ExpressionStatement":return name!=="expression";case"ArrowFunctionExpression":// We do need parentheses, but SequenceExpressions are handled\n// specially when printing bodies of arrow functions.\nreturn name!=="body";default:// Otherwise err on the side of overparenthesization, adding\n// explicit exceptions above if this proves overzealous.\nreturn true;}case"YieldExpression":if(parent.type==="UnaryExpression"||parent.type==="AwaitExpression"||parent.type==="TSAsExpression"||parent.type==="TSNonNullExpression"){return true;}// else fallthrough\ncase"AwaitExpression":switch(parent.type){case"TaggedTemplateExpression":case"UnaryExpression":case"BinaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"ConditionalExpression":return parent.test===node;default:return false;}case"TSJSDocFunctionType":case"TSConditionalType":if(parent.type==="TSConditionalType"&&node===parent.extendsType){return true;}// fallthrough\ncase"TSFunctionType":case"TSConstructorType":if(parent.type==="TSConditionalType"&&node===parent.checkType){return true;}// fallthrough\ncase"TSUnionType":case"TSIntersectionType":if(parent.type==="TSUnionType"||parent.type==="TSIntersectionType"){return true;}// fallthrough\ncase"TSTypeOperator":case"TSInferType":return parent.type==="TSArrayType"||parent.type==="TSOptionalType"||parent.type==="TSRestType"||parent.type==="TSIndexedAccessType"&&node===parent.objectType||parent.type==="TSTypeOperator"||parent.type==="TSTypeAnnotation"&&/^TSJSDoc/.test(path.getParentNode(1).type);case"ArrayTypeAnnotation":return parent.type==="NullableTypeAnnotation";case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return parent.type==="ArrayTypeAnnotation"||parent.type==="NullableTypeAnnotation"||parent.type==="IntersectionTypeAnnotation"||parent.type==="UnionTypeAnnotation";case"NullableTypeAnnotation":return parent.type==="ArrayTypeAnnotation";case"FunctionTypeAnnotation":{var ancestor=parent.type==="NullableTypeAnnotation"?path.getParentNode(1):parent;return ancestor.type==="UnionTypeAnnotation"||ancestor.type==="IntersectionTypeAnnotation"||ancestor.type==="ArrayTypeAnnotation"||// We should check ancestor\'s parent to know whether the parentheses\n// are really needed, but since ??T doesn\'t make sense this check\n// will almost never be true.\nancestor.type==="NullableTypeAnnotation";}case"StringLiteral":case"NumericLiteral":case"Literal":if(typeof node.value==="string"&&parent.type==="ExpressionStatement"&&(// TypeScript workaround for https://github.com/JamesHenry/typescript-estree/issues/2\n// See corresponding workaround in printer.js case: "Literal"\noptions.parser!=="typescript"&&!parent.directive||options.parser==="typescript"&&options.originalText.charAt(options.locStart(node)-1)==="(")){// To avoid becoming a directive\nvar grandParent=path.getParentNode(1);return grandParent.type==="Program"||grandParent.type==="BlockStatement";}return parent.type==="MemberExpression"&&typeof node.value==="number"&&name==="object"&&parent.object===node;case"AssignmentExpression":{var _grandParent=path.getParentNode(1);if(parent.type==="ArrowFunctionExpression"&&parent.body===node){return true;}else if(parent.type==="ClassProperty"&&parent.key===node&&parent.computed){return false;}else if(parent.type==="TSPropertySignature"&&parent.name===node){return false;}else if(parent.type==="ForStatement"&&(parent.init===node||parent.update===node)){return false;}else if(parent.type==="ExpressionStatement"){return node.left.type==="ObjectPattern";}else if(parent.type==="TSPropertySignature"&&parent.key===node){return false;}else if(parent.type==="AssignmentExpression"){return false;}else if(parent.type==="SequenceExpression"&&_grandParent&&_grandParent.type==="ForStatement"&&(_grandParent.init===parent||_grandParent.update===parent)){return false;}else if(parent.type==="Property"&&parent.value===node){return false;}else if(parent.type==="NGChainedExpression"){return false;}return true;}case"ConditionalExpression":switch(parent.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSNonNullExpression":return true;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"ConditionalExpression":return name==="test"&&parent.test===node;case"MemberExpression":case"OptionalMemberExpression":return name==="object";default:return false;}case"FunctionExpression":switch(parent.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":// Not always necessary, but it\'s clearer to the reader if IIFEs are wrapped in parentheses.\n// Is necessary if it is `expression` of `ExpressionStatement`.\nreturn name==="callee";case"TaggedTemplateExpression":return true;// This is basically a kind of IIFE.\ndefault:return false;}case"ArrowFunctionExpression":switch(parent.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"TSAsExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"BinaryExpression":case"AwaitExpression":case"TSTypeAssertion":return true;case"ConditionalExpression":return name==="test";default:return false;}case"ClassExpression":switch(parent.type){case"NewExpression":return name==="callee"&&parent.callee===node;default:return false;}case"OptionalMemberExpression":case"OptionalCallExpression":if(parent.type==="MemberExpression"&&name==="object"||(parent.type==="CallExpression"||parent.type==="NewExpression")&&name==="callee"){return true;}// fallthrough\ncase"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if((parent.type==="BindExpression"||parent.type==="NewExpression")&&name==="callee"){var _object=node;while(_object){switch(_object.type){case"CallExpression":case"OptionalCallExpression":return true;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":_object=_object.object;break;// tagged templates are basically member expressions from a grammar perspective\n// see https://tc39.github.io/ecma262/#prod-MemberExpression\ncase"TaggedTemplateExpression":_object=_object.tag;break;case"TSNonNullExpression":_object=_object.expression;break;default:return false;}}}return false;case"BindExpression":return(parent.type==="BindExpression"||parent.type==="NewExpression")&&name==="callee"||(parent.type==="MemberExpression"||parent.type==="OptionalMemberExpression")&&name==="object";case"NGPipeExpression":if(parent.type==="NGRoot"||parent.type==="NGMicrosyntaxExpression"||parent.type==="ObjectProperty"||parent.type==="ArrayExpression"||(parent.type==="CallExpression"||parent.type==="OptionalCallExpression")&&parent.arguments[name]===node||parent.type==="NGPipeExpression"&&name==="right"||parent.type==="MemberExpression"&&name==="property"||parent.type==="AssignmentExpression"){return false;}return true;case"JSXFragment":case"JSXElement":return name==="callee"||parent.type!=="ArrayExpression"&&parent.type!=="ArrowFunctionExpression"&&parent.type!=="AssignmentExpression"&&parent.type!=="AssignmentPattern"&&parent.type!=="BinaryExpression"&&parent.type!=="CallExpression"&&parent.type!=="NewExpression"&&parent.type!=="ConditionalExpression"&&parent.type!=="ExpressionStatement"&&parent.type!=="JsExpressionRoot"&&parent.type!=="JSXAttribute"&&parent.type!=="JSXElement"&&parent.type!=="JSXExpressionContainer"&&parent.type!=="JSXFragment"&&parent.type!=="LogicalExpression"&&parent.type!=="ObjectProperty"&&parent.type!=="OptionalCallExpression"&&parent.type!=="Property"&&parent.type!=="ReturnStatement"&&parent.type!=="ThrowStatement"&&parent.type!=="TypeCastExpression"&&parent.type!=="VariableDeclarator"&&parent.type!=="YieldExpression";case"TypeAnnotation":return name==="returnType"&&parent.type==="ArrowFunctionExpression"&&includesFunctionTypeInObjectType(node);}return false;}function isStatement(node){return node.type==="BlockStatement"||node.type==="BreakStatement"||node.type==="ClassBody"||node.type==="ClassDeclaration"||node.type==="ClassMethod"||node.type==="ClassProperty"||node.type==="ClassPrivateProperty"||node.type==="ContinueStatement"||node.type==="DebuggerStatement"||node.type==="DeclareClass"||node.type==="DeclareExportAllDeclaration"||node.type==="DeclareExportDeclaration"||node.type==="DeclareFunction"||node.type==="DeclareInterface"||node.type==="DeclareModule"||node.type==="DeclareModuleExports"||node.type==="DeclareVariable"||node.type==="DoWhileStatement"||node.type==="EnumDeclaration"||node.type==="ExportAllDeclaration"||node.type==="ExportDefaultDeclaration"||node.type==="ExportNamedDeclaration"||node.type==="ExpressionStatement"||node.type==="ForInStatement"||node.type==="ForOfStatement"||node.type==="ForStatement"||node.type==="FunctionDeclaration"||node.type==="IfStatement"||node.type==="ImportDeclaration"||node.type==="InterfaceDeclaration"||node.type==="LabeledStatement"||node.type==="MethodDefinition"||node.type==="ReturnStatement"||node.type==="SwitchStatement"||node.type==="ThrowStatement"||node.type==="TryStatement"||node.type==="TSDeclareFunction"||node.type==="TSEnumDeclaration"||node.type==="TSImportEqualsDeclaration"||node.type==="TSInterfaceDeclaration"||node.type==="TSModuleDeclaration"||node.type==="TSNamespaceExportDeclaration"||node.type==="TypeAlias"||node.type==="VariableDeclaration"||node.type==="WhileStatement"||node.type==="WithStatement";}function includesFunctionTypeInObjectType(node){return hasNode$1(node,function(n1){return n1.type==="ObjectTypeAnnotation"&&hasNode$1(n1,function(n2){return n2.type==="FunctionTypeAnnotation"||undefined;})||undefined;});}function endsWithRightBracket(node){switch(node.type){case"ObjectExpression":return true;default:return false;}}function isFollowedByRightBracket(path){var node=path.getValue();var parent=path.getParentNode();var name=path.getName();switch(parent.type){case"NGPipeExpression":if(typeof name==="number"&&parent.arguments[name]===node&&parent.arguments.length-1===name){return path.callParent(isFollowedByRightBracket);}break;case"ObjectProperty":if(name==="value"){var parentParent=path.getParentNode(1);return parentParent.properties[parentParent.properties.length-1]===parent;}break;case"BinaryExpression":case"LogicalExpression":if(name==="right"){return path.callParent(isFollowedByRightBracket);}break;case"ConditionalExpression":if(name==="alternate"){return path.callParent(isFollowedByRightBracket);}break;case"UnaryExpression":if(parent.prefix){return path.callParent(isFollowedByRightBracket);}break;}return false;}function shouldWrapFunctionForExportDefault(path,options){var node=path.getValue();var parent=path.getParentNode();if(node.type==="FunctionExpression"||node.type==="ClassExpression"){return parent.type==="ExportDefaultDeclaration"||// in some cases the function is already wrapped\n// (e.g. `export default (function() {})();`)\n// in this case we don\'t need to add extra parens\n!needsParens(path,options);}if(!hasNakedLeftSide$1(node)||parent.type!=="ExportDefaultDeclaration"&&needsParens(path,options)){return false;}return path.call.apply(path,[function(childPath){return shouldWrapFunctionForExportDefault(childPath,options);}].concat((0,_toConsumableArray3.default)(getLeftSidePathName$1(path,node))));}var needsParens_1=needsParens;var _document$builders9=document.builders,concat$c=_document$builders9.concat,join$8=_document$builders9.join,line$8=_document$builders9.line;function printHtmlBinding(path,options,print){var node=path.getValue();if(options.__onHtmlBindingRoot&&path.getName()===null){options.__onHtmlBindingRoot(node,options);}if(node.type!=="File"){return;}if(options.__isVueForBindingLeft){return path.call(function(functionDeclarationPath){var _functionDeclarationP=functionDeclarationPath.getValue(),params=_functionDeclarationP.params;return concat$c([params.length>1?"(":"",join$8(concat$c([",",line$8]),functionDeclarationPath.map(print,"params")),params.length>1?")":""]);},"program","body",0);}if(options.__isVueSlotScope){return path.call(function(functionDeclarationPath){return join$8(concat$c([",",line$8]),functionDeclarationPath.map(print,"params"));},"program","body",0);}}// based on https://github.com/prettier/prettier/blob/master/src/language-html/syntax-vue.js isVueEventBindingExpression()\nfunction isVueEventBindingExpression$2(node){switch(node.type){case"MemberExpression":switch(node.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return isVueEventBindingExpression$2(node.object);}return false;case"Identifier":return true;default:return false;}}var htmlBinding={isVueEventBindingExpression:isVueEventBindingExpression$2,printHtmlBinding:printHtmlBinding};function preprocess$1(ast,options){switch(options.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":return Object.assign({},ast,{type:options.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:ast,comments:[],rootMarker:options.rootMarker});default:return ast;}}var preprocess_1$1=preprocess$1;var shouldFlatten$1=util$1.shouldFlatten,getNextNonSpaceNonCommentCharacter$1=util$1.getNextNonSpaceNonCommentCharacter,hasNewline$5=util$1.hasNewline,hasNewlineInRange$3=util$1.hasNewlineInRange,getLast$3=util$1.getLast,getStringWidth$3=util$1.getStringWidth,printString$2=util$1.printString,printNumber$2=util$1.printNumber,hasIgnoreComment$4=util$1.hasIgnoreComment,hasNodeIgnoreComment$2=util$1.hasNodeIgnoreComment,getPenultimate$1=util$1.getPenultimate,startsWithNoLookaheadToken$1=util$1.startsWithNoLookaheadToken,getIndentSize$2=util$1.getIndentSize,getPreferredQuote$1=util$1.getPreferredQuote;var isNextLineEmpty$4=utilShared.isNextLineEmpty,isNextLineEmptyAfterIndex$2=utilShared.isNextLineEmptyAfterIndex,getNextNonSpaceNonCommentCharacterIndex$3=utilShared.getNextNonSpaceNonCommentCharacterIndex;var insertPragma$7=pragma.insertPragma;var printHtmlBinding$1=htmlBinding.printHtmlBinding,isVueEventBindingExpression$3=htmlBinding.isVueEventBindingExpression;var classChildNeedsASIProtection$1=utils$5.classChildNeedsASIProtection,classPropMayCauseASIProblems$1=utils$5.classPropMayCauseASIProblems,conditionalExpressionChainContainsJSX$1=utils$5.conditionalExpressionChainContainsJSX,getFlowVariance$1=utils$5.getFlowVariance,getLeftSidePathName$2=utils$5.getLeftSidePathName,getParentExportDeclaration$1=utils$5.getParentExportDeclaration,getTypeScriptMappedTypeModifier$1=utils$5.getTypeScriptMappedTypeModifier,hasDanglingComments$1=utils$5.hasDanglingComments,hasFlowAnnotationComment$1=utils$5.hasFlowAnnotationComment,hasFlowShorthandAnnotationComment$2=utils$5.hasFlowShorthandAnnotationComment,hasLeadingComment$3=utils$5.hasLeadingComment,hasLeadingOwnLineComment$1=utils$5.hasLeadingOwnLineComment,hasNakedLeftSide$2=utils$5.hasNakedLeftSide,hasNewlineBetweenOrAfterDecorators$1=utils$5.hasNewlineBetweenOrAfterDecorators,hasNgSideEffect$1=utils$5.hasNgSideEffect,hasPrettierIgnore$5=utils$5.hasPrettierIgnore,hasTrailingComment$1=utils$5.hasTrailingComment,identity$2=utils$5.identity,isBinaryish$1=utils$5.isBinaryish,isCallOrOptionalCallExpression$1=utils$5.isCallOrOptionalCallExpression,isEmptyJSXElement$1=utils$5.isEmptyJSXElement,isExportDeclaration$1=utils$5.isExportDeclaration,isFlowAnnotationComment$1=utils$5.isFlowAnnotationComment,isFunctionCompositionArgs$1=utils$5.isFunctionCompositionArgs,isFunctionNotation$1=utils$5.isFunctionNotation,isFunctionOrArrowExpression$1=utils$5.isFunctionOrArrowExpression,isGetterOrSetter$1=utils$5.isGetterOrSetter,isJestEachTemplateLiteral$1=utils$5.isJestEachTemplateLiteral,isJSXNode$1=utils$5.isJSXNode,isJSXWhitespaceExpression$1=utils$5.isJSXWhitespaceExpression,isLastStatement$1=utils$5.isLastStatement,isLiteral$1=utils$5.isLiteral,isLongCurriedCallExpression$1=utils$5.isLongCurriedCallExpression,isMeaningfulJSXText$1=utils$5.isMeaningfulJSXText,isMemberExpressionChain$1=utils$5.isMemberExpressionChain,isMemberish$1=utils$5.isMemberish,isNgForOf$1=utils$5.isNgForOf,isNumericLiteral$1=utils$5.isNumericLiteral,isObjectType$1=utils$5.isObjectType,isObjectTypePropertyAFunction$1=utils$5.isObjectTypePropertyAFunction,isSimpleCallArgument$1=utils$5.isSimpleCallArgument,isSimpleFlowType$1=utils$5.isSimpleFlowType,isSimpleTemplateLiteral$1=utils$5.isSimpleTemplateLiteral,isStringLiteral$1=utils$5.isStringLiteral,isStringPropSafeToCoerceToIdentifier$1=utils$5.isStringPropSafeToCoerceToIdentifier,isTemplateOnItsOwnLine$1=utils$5.isTemplateOnItsOwnLine,isTestCall$1=utils$5.isTestCall,isTheOnlyJSXElementInMarkdown$1=utils$5.isTheOnlyJSXElementInMarkdown,isTSXFile$1=utils$5.isTSXFile,isTypeAnnotationAFunction$1=utils$5.isTypeAnnotationAFunction,matchJsxWhitespaceRegex$1=utils$5.matchJsxWhitespaceRegex,needsHardlineAfterDanglingComment$1=utils$5.needsHardlineAfterDanglingComment,rawText$1=utils$5.rawText,returnArgumentHasLeadingComment$1=utils$5.returnArgumentHasLeadingComment;var needsQuoteProps=new WeakMap();var _document$builders10=document.builders,concat$d=_document$builders10.concat,join$9=_document$builders10.join,line$9=_document$builders10.line,hardline$9=_document$builders10.hardline,softline$6=_document$builders10.softline,literalline$4=_document$builders10.literalline,group$b=_document$builders10.group,indent$7=_document$builders10.indent,align$1=_document$builders10.align,conditionalGroup$1=_document$builders10.conditionalGroup,fill$4=_document$builders10.fill,ifBreak$6=_document$builders10.ifBreak,breakParent$3=_document$builders10.breakParent,lineSuffixBoundary$1=_document$builders10.lineSuffixBoundary,addAlignmentToDoc$2=_document$builders10.addAlignmentToDoc,dedent$2=_document$builders10.dedent,_document$utils3=document.utils,willBreak$1=_document$utils3.willBreak,isLineNext$1=_document$utils3.isLineNext,isEmpty$1=_document$utils3.isEmpty,removeLines$2=_document$utils3.removeLines,printDocToString$2=document.printer.printDocToString;var uid=0;function shouldPrintComma$1(options,level){level=level||"es5";switch(options.trailingComma){case"all":if(level==="all"){return true;}// fallthrough\ncase"es5":if(level==="es5"){return true;}// fallthrough\ncase"none":default:return false;}}function genericPrint$3(path,options,printPath,args){var node=path.getValue();var needsParens=false;var linesWithoutParens=printPathNoParens(path,options,printPath,args);if(!node||isEmpty$1(linesWithoutParens)){return linesWithoutParens;}var parentExportDecl=getParentExportDeclaration$1(path);var decorators=[];if(node.type==="ClassMethod"||node.type==="ClassPrivateMethod"||node.type==="ClassProperty"||node.type==="TSAbstractClassProperty"||node.type==="ClassPrivateProperty"||node.type==="MethodDefinition"||node.type==="TSAbstractMethodDefinition"||node.type==="TSDeclareMethod");else if(node.decorators&&node.decorators.length>0&&// If the parent node is an export declaration and the decorator\n// was written before the export, the export will be responsible\n// for printing the decorators.\n!(parentExportDecl&&options.locStart(parentExportDecl,{ignoreDecorators:true})>options.locStart(node.decorators[0]))){var shouldBreak=node.type==="ClassExpression"||node.type==="ClassDeclaration"||hasNewlineBetweenOrAfterDecorators$1(node,options);var separator=shouldBreak?hardline$9:line$9;path.each(function(decoratorPath){var decorator=decoratorPath.getValue();if(decorator.expression){decorator=decorator.expression;}else{decorator=decorator.callee;}decorators.push(printPath(decoratorPath),separator);},"decorators");if(parentExportDecl){decorators.unshift(hardline$9);}}else if(isExportDeclaration$1(node)&&node.declaration&&node.declaration.decorators&&node.declaration.decorators.length>0&&// Only print decorators here if they were written before the export,\n// otherwise they are printed by the node.declaration\noptions.locStart(node,{ignoreDecorators:true})>options.locStart(node.declaration.decorators[0])){// Export declarations are responsible for printing any decorators\n// that logically apply to node.declaration.\npath.each(function(decoratorPath){var decorator=decoratorPath.getValue();var prefix=decorator.type==="Decorator"?"":"@";decorators.push(prefix,printPath(decoratorPath),hardline$9);},"declaration","decorators");}else{// Nodes with decorators can\'t have parentheses, so we can avoid\n// computing pathNeedsParens() except in this case.\nneedsParens=needsParens_1(path,options);}var parts=[];if(needsParens){parts.unshift("(");}parts.push(linesWithoutParens);if(needsParens){var _node=path.getValue();if(hasFlowShorthandAnnotationComment$2(_node)){parts.push(" /*");parts.push(_node.trailingComments[0].value.trimStart());parts.push("*/");_node.trailingComments[0].printed=true;}parts.push(")");}if(decorators.length>0){return group$b(concat$d(decorators.concat(parts)));}return concat$d(parts);}function printDecorators(path,options,print){var node=path.getValue();return group$b(concat$d([join$9(line$9,path.map(print,"decorators")),hasNewlineBetweenOrAfterDecorators$1(node,options)?hardline$9:line$9]));}/**\n   * The following is the shared logic for\n   * ternary operators, namely ConditionalExpression\n   * and TSConditionalType\n   * @typedef {Object} OperatorOptions\n   * @property {() => Array<string | Doc>} beforeParts - Parts to print before the `?`.\n   * @property {(breakClosingParen: boolean) => Array<string | Doc>} afterParts - Parts to print after the conditional expression.\n   * @property {boolean} shouldCheckJsx - Whether to check for and print in JSX mode.\n   * @property {string} conditionalNodeType - The type of the conditional expression node, ie "ConditionalExpression" or "TSConditionalType".\n   * @property {string} consequentNodePropertyName - The property at which the consequent node can be found on the main node, eg "consequent".\n   * @property {string} alternateNodePropertyName - The property at which the alternate node can be found on the main node, eg "alternate".\n   * @property {string[]} testNodePropertyNames - The properties at which the test nodes can be found on the main node, eg "test".\n   * @param {FastPath} path - The path to the ConditionalExpression/TSConditionalType node.\n   * @param {Options} options - Prettier options\n   * @param {Function} print - Print function to call recursively\n   * @param {OperatorOptions} operatorOptions\n   * @returns Doc\n   */function printTernaryOperator(path,options,print,operatorOptions){var node=path.getValue();var consequentNode=node[operatorOptions.consequentNodePropertyName];var alternateNode=node[operatorOptions.alternateNodePropertyName];var parts=[];// We print a ConditionalExpression in either "JSX mode" or "normal mode".\n// See tests/jsx/conditional-expression.js for more info.\nvar jsxMode=false;var parent=path.getParentNode();var isParentTest=parent.type===operatorOptions.conditionalNodeType&&operatorOptions.testNodePropertyNames.some(function(prop){return parent[prop]===node;});var forceNoIndent=parent.type===operatorOptions.conditionalNodeType&&!isParentTest;// Find the outermost non-ConditionalExpression parent, and the outermost\n// ConditionalExpression parent. We\'ll use these to determine if we should\n// print in JSX mode.\nvar currentParent;var previousParent;var i=0;do{previousParent=currentParent||node;currentParent=path.getParentNode(i);i++;}while(currentParent&&currentParent.type===operatorOptions.conditionalNodeType&&operatorOptions.testNodePropertyNames.every(function(prop){return currentParent[prop]!==previousParent;}));var firstNonConditionalParent=currentParent||parent;var lastConditionalParent=previousParent;if(operatorOptions.shouldCheckJsx&&(isJSXNode$1(node[operatorOptions.testNodePropertyNames[0]])||isJSXNode$1(consequentNode)||isJSXNode$1(alternateNode)||conditionalExpressionChainContainsJSX$1(lastConditionalParent))){jsxMode=true;forceNoIndent=true;// Even though they don\'t need parens, we wrap (almost) everything in\n// parens when using ?: within JSX, because the parens are analogous to\n// curly braces in an if statement.\nvar _wrap=function _wrap(doc){return concat$d([ifBreak$6("(",""),indent$7(concat$d([softline$6,doc])),softline$6,ifBreak$6(")","")]);};// The only things we don\'t wrap are:\n// * Nested conditional expressions in alternates\n// * null\n// * undefined\nvar isNil=function isNil(node){return node.type==="NullLiteral"||node.type==="Literal"&&node.value===null||node.type==="Identifier"&&node.name==="undefined";};parts.push(" ? ",isNil(consequentNode)?path.call(print,operatorOptions.consequentNodePropertyName):_wrap(path.call(print,operatorOptions.consequentNodePropertyName))," : ",alternateNode.type===operatorOptions.conditionalNodeType||isNil(alternateNode)?path.call(print,operatorOptions.alternateNodePropertyName):_wrap(path.call(print,operatorOptions.alternateNodePropertyName)));}else{// normal mode\nvar part=concat$d([line$9,"? ",consequentNode.type===operatorOptions.conditionalNodeType?ifBreak$6("","("):"",align$1(2,path.call(print,operatorOptions.consequentNodePropertyName)),consequentNode.type===operatorOptions.conditionalNodeType?ifBreak$6("",")"):"",line$9,": ",alternateNode.type===operatorOptions.conditionalNodeType?path.call(print,operatorOptions.alternateNodePropertyName):align$1(2,path.call(print,operatorOptions.alternateNodePropertyName))]);parts.push(parent.type!==operatorOptions.conditionalNodeType||parent[operatorOptions.alternateNodePropertyName]===node||isParentTest?part:options.useTabs?dedent$2(indent$7(part)):align$1(Math.max(0,options.tabWidth-2),part));}// We want a whole chain of ConditionalExpressions to all\n// break if any of them break. That means we should only group around the\n// outer-most ConditionalExpression.\nvar maybeGroup=function maybeGroup(doc){return parent===firstNonConditionalParent?group$b(doc):doc;};// Break the closing paren to keep the chain right after it:\n// (a\n//   ? b\n//   : c\n// ).call()\nvar breakClosingParen=!jsxMode&&(parent.type==="MemberExpression"||parent.type==="OptionalMemberExpression"||parent.type==="NGPipeExpression"&&parent.left===node)&&!parent.computed;var result=maybeGroup(concat$d([].concat(function(testDoc){return(/**\n     *     a\n     *       ? b\n     *       : multiline\n     *         test\n     *         node\n     *       ^^ align(2)\n     *       ? d\n     *       : e\n     */parent.type===operatorOptions.conditionalNodeType&&parent[operatorOptions.alternateNodePropertyName]===node?align$1(2,testDoc):testDoc);}(concat$d(operatorOptions.beforeParts())),forceNoIndent?concat$d(parts):indent$7(concat$d(parts)),operatorOptions.afterParts(breakClosingParen))));return isParentTest?group$b(concat$d([indent$7(concat$d([softline$6,result])),softline$6])):result;}function printPathNoParens(path,options,print,args){var n=path.getValue();var semi=options.semi?";":"";if(!n){return"";}if(typeof n==="string"){return n;}var htmlBinding=printHtmlBinding$1(path,options,print);if(htmlBinding){return htmlBinding;}var parts=[];switch(n.type){case"JsExpressionRoot":return path.call(print,"node");case"JsonRoot":return concat$d([path.call(print,"node"),hardline$9]);case"File":// Print @babel/parser\'s InterpreterDirective here so that\n// leading comments on the `Program` node get printed after the hashbang.\nif(n.program&&n.program.interpreter){parts.push(path.call(function(programPath){return programPath.call(print,"interpreter");},"program"));}parts.push(path.call(print,"program"));return concat$d(parts);case"Program":// Babel 6\nif(n.directives){path.each(function(childPath){parts.push(print(childPath),semi,hardline$9);if(isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){parts.push(hardline$9);}},"directives");}parts.push(path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body"));parts.push(comments.printDanglingComments(path,options,/* sameIndent */true));// Only force a trailing newline if there were any contents.\nif(!n.body.every(function(_ref28){var type=_ref28.type;return type==="EmptyStatement";})||n.comments){parts.push(hardline$9);}return concat$d(parts);// Babel extension.\ncase"EmptyStatement":return"";case"ExpressionStatement":// Detect Flow-parsed directives\nif(n.directive){return concat$d([nodeStr(n.expression,options,true),semi]);}if(options.parser==="__vue_event_binding"){var parent=path.getParentNode();if(parent.type==="Program"&&parent.body.length===1&&parent.body[0]===n){return concat$d([path.call(print,"expression"),isVueEventBindingExpression$3(n.expression)?";":""]);}}// Do not append semicolon after the only JSX element in a program\nreturn concat$d([path.call(print,"expression"),isTheOnlyJSXElementInMarkdown$1(options,path)?"":semi]);// Babel non-standard node. Used for Closure-style type casts. See postprocess.js.\ncase"ParenthesizedExpression":{var shouldHug=!n.expression.comments;if(shouldHug){return concat$d(["(",path.call(print,"expression"),")"]);}return group$b(concat$d(["(",indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,")"]));}case"AssignmentExpression":return printAssignment(n.left,path.call(print,"left"),concat$d([" ",n.operator]),n.right,path.call(print,"right"),options);case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":{var _parent2=path.getParentNode();var parentParent=path.getParentNode(1);var isInsideParenthesis=n!==_parent2.body&&(_parent2.type==="IfStatement"||_parent2.type==="WhileStatement"||_parent2.type==="SwitchStatement"||_parent2.type==="DoWhileStatement");var _parts3=printBinaryishExpressions(path,print,options,/* isNested */false,isInsideParenthesis);//   if (\n//     this.hasPlugin("dynamicImports") && this.lookahead().type === tt.parenLeft\n//   ) {\n//\n// looks super weird, we want to break the children if the parent breaks\n//\n//   if (\n//     this.hasPlugin("dynamicImports") &&\n//     this.lookahead().type === tt.parenLeft\n//   ) {\nif(isInsideParenthesis){return concat$d(_parts3);}// Break between the parens in\n// unaries or in a member or specific call expression, i.e.\n//\n//   (\n//     a &&\n//     b &&\n//     c\n//   ).call()\nif((_parent2.type==="CallExpression"||_parent2.type==="OptionalCallExpression")&&_parent2.callee===n||_parent2.type==="UnaryExpression"||(_parent2.type==="MemberExpression"||_parent2.type==="OptionalMemberExpression")&&!_parent2.computed){return group$b(concat$d([indent$7(concat$d([softline$6,concat$d(_parts3)])),softline$6]));}// Avoid indenting sub-expressions in some cases where the first sub-expression is already\n// indented accordingly. We should indent sub-expressions where the first case isn\'t indented.\nvar shouldNotIndent=_parent2.type==="ReturnStatement"||_parent2.type==="ThrowStatement"||_parent2.type==="JSXExpressionContainer"&&parentParent.type==="JSXAttribute"||n.operator!=="|"&&_parent2.type==="JsExpressionRoot"||n.type!=="NGPipeExpression"&&(_parent2.type==="NGRoot"&&options.parser==="__ng_binding"||_parent2.type==="NGMicrosyntaxExpression"&&parentParent.type==="NGMicrosyntax"&&parentParent.body.length===1)||n===_parent2.body&&_parent2.type==="ArrowFunctionExpression"||n!==_parent2.body&&_parent2.type==="ForStatement"||_parent2.type==="ConditionalExpression"&&parentParent.type!=="ReturnStatement"&&parentParent.type!=="ThrowStatement"&&parentParent.type!=="CallExpression"&&parentParent.type!=="OptionalCallExpression"||_parent2.type==="TemplateLiteral";var shouldIndentIfInlining=_parent2.type==="AssignmentExpression"||_parent2.type==="VariableDeclarator"||_parent2.type==="ClassProperty"||_parent2.type==="TSAbstractClassProperty"||_parent2.type==="ClassPrivateProperty"||_parent2.type==="ObjectProperty"||_parent2.type==="Property";var samePrecedenceSubExpression=isBinaryish$1(n.left)&&shouldFlatten$1(n.operator,n.left.operator);if(shouldNotIndent||shouldInlineLogicalExpression(n)&&!samePrecedenceSubExpression||!shouldInlineLogicalExpression(n)&&shouldIndentIfInlining){return group$b(concat$d(_parts3));}if(_parts3.length===0){return"";}// If the right part is a JSX node, we include it in a separate group to\n// prevent it breaking the whole chain, so we can print the expression like:\n//\n//   foo && bar && (\n//     <Foo>\n//       <Bar />\n//     </Foo>\n//   )\nvar hasJSX=isJSXNode$1(n.right);var rest=concat$d(hasJSX?_parts3.slice(1,-1):_parts3.slice(1));var groupId=Symbol("logicalChain-"+ ++uid);var chain=group$b(concat$d([// Don\'t include the initial expression in the indentation\n// level. The first item is guaranteed to be the first\n// left-most expression.\n_parts3.length>0?_parts3[0]:"",indent$7(rest)]),{id:groupId});if(!hasJSX){return chain;}var jsxPart=getLast$3(_parts3);return group$b(concat$d([chain,ifBreak$6(indent$7(jsxPart),jsxPart,{groupId:groupId})]));}case"AssignmentPattern":return concat$d([path.call(print,"left")," = ",path.call(print,"right")]);case"TSTypeAssertion":{var shouldBreakAfterCast=!(n.expression.type==="ArrayExpression"||n.expression.type==="ObjectExpression");var castGroup=group$b(concat$d(["<",indent$7(concat$d([softline$6,path.call(print,"typeAnnotation")])),softline$6,">"]));var exprContents=concat$d([ifBreak$6("("),indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,ifBreak$6(")")]);if(shouldBreakAfterCast){return conditionalGroup$1([concat$d([castGroup,path.call(print,"expression")]),concat$d([castGroup,group$b(exprContents,{shouldBreak:true})]),concat$d([castGroup,path.call(print,"expression")])]);}return group$b(concat$d([castGroup,path.call(print,"expression")]));}case"OptionalMemberExpression":case"MemberExpression":{var _parent3=path.getParentNode();var firstNonMemberParent;var i=0;do{firstNonMemberParent=path.getParentNode(i);i++;}while(firstNonMemberParent&&(firstNonMemberParent.type==="MemberExpression"||firstNonMemberParent.type==="OptionalMemberExpression"||firstNonMemberParent.type==="TSNonNullExpression"));var shouldInline=firstNonMemberParent&&(firstNonMemberParent.type==="NewExpression"||firstNonMemberParent.type==="BindExpression"||firstNonMemberParent.type==="VariableDeclarator"&&firstNonMemberParent.id.type!=="Identifier"||firstNonMemberParent.type==="AssignmentExpression"&&firstNonMemberParent.left.type!=="Identifier")||n.computed||n.object.type==="Identifier"&&n.property.type==="Identifier"&&_parent3.type!=="MemberExpression"&&_parent3.type!=="OptionalMemberExpression";return concat$d([path.call(print,"object"),shouldInline?printMemberLookup(path,options,print):group$b(indent$7(concat$d([softline$6,printMemberLookup(path,options,print)])))]);}case"MetaProperty":return concat$d([path.call(print,"meta"),".",path.call(print,"property")]);case"BindExpression":if(n.object){parts.push(path.call(print,"object"));}parts.push(group$b(indent$7(concat$d([softline$6,printBindExpressionCallee(path,options,print)]))));return concat$d(parts);case"Identifier":{return concat$d([n.name,printOptionalToken(path),printTypeAnnotation(path,options,print)]);}case"V8IntrinsicIdentifier":return concat$d(["%",n.name]);case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":case"ObjectTypeSpreadProperty":return concat$d(["...",path.call(print,"argument"),printTypeAnnotation(path,options,print)]);case"FunctionDeclaration":case"FunctionExpression":parts.push(printFunctionDeclaration(path,print,options));if(!n.body){parts.push(semi);}return concat$d(parts);case"ArrowFunctionExpression":{if(n.async){parts.push("async ");}if(shouldPrintParamsWithoutParens(path,options)){parts.push(path.call(print,"params",0));}else{parts.push(group$b(concat$d([printFunctionParams(path,print,options,/* expandLast */args&&(args.expandLastArg||args.expandFirstArg),/* printTypeParams */true),printReturnType(path,print,options)])));}var dangling=comments.printDanglingComments(path,options,/* sameIndent */true,function(comment){var nextCharacter=getNextNonSpaceNonCommentCharacterIndex$3(options.originalText,comment,options.locEnd);return options.originalText.slice(nextCharacter,nextCharacter+2)==="=>";});if(dangling){parts.push(" ",dangling);}parts.push(" =>");var _body=path.call(function(bodyPath){return print(bodyPath,args);},"body");// We want to always keep these types of nodes on the same line\n// as the arrow.\nif(!hasLeadingOwnLineComment$1(options.originalText,n.body,options)&&(n.body.type==="ArrayExpression"||n.body.type==="ObjectExpression"||n.body.type==="BlockStatement"||isJSXNode$1(n.body)||isTemplateOnItsOwnLine$1(n.body,options.originalText,options)||n.body.type==="ArrowFunctionExpression"||n.body.type==="DoExpression")){return group$b(concat$d([concat$d(parts)," ",_body]));}// We handle sequence expressions as the body of arrows specially,\n// so that the required parentheses end up on their own lines.\nif(n.body.type==="SequenceExpression"){return group$b(concat$d([concat$d(parts),group$b(concat$d([" (",indent$7(concat$d([softline$6,_body])),softline$6,")"]))]));}// if the arrow function is expanded as last argument, we are adding a\n// level of indentation and need to add a softline to align the closing )\n// with the opening (, or if it\'s inside a JSXExpression (e.g. an attribute)\n// we should align the expression\'s closing } with the line with the opening {.\nvar shouldAddSoftLine=(args&&args.expandLastArg||path.getParentNode().type==="JSXExpressionContainer")&&!(n.comments&&n.comments.length);var printTrailingComma=args&&args.expandLastArg&&shouldPrintComma$1(options,"all");// In order to avoid confusion between\n// a => a ? a : a\n// a <= a ? a : a\nvar shouldAddParens=n.body.type==="ConditionalExpression"&&!startsWithNoLookaheadToken$1(n.body,/* forbidFunctionAndClass */false);return group$b(concat$d([concat$d(parts),group$b(concat$d([indent$7(concat$d([line$9,shouldAddParens?ifBreak$6("","("):"",_body,shouldAddParens?ifBreak$6("",")"):""])),shouldAddSoftLine?concat$d([ifBreak$6(printTrailingComma?",":""),softline$6]):""]))]));}case"YieldExpression":parts.push("yield");if(n.delegate){parts.push("*");}if(n.argument){parts.push(" ",path.call(print,"argument"));}return concat$d(parts);case"AwaitExpression":{parts.push("await ",path.call(print,"argument"));var _parent4=path.getParentNode();if((_parent4.type==="CallExpression"||_parent4.type==="OptionalCallExpression")&&_parent4.callee===n||(_parent4.type==="MemberExpression"||_parent4.type==="OptionalMemberExpression")&&_parent4.object===n){return group$b(concat$d([indent$7(concat$d([softline$6,concat$d(parts)])),softline$6]));}return concat$d(parts);}case"ImportSpecifier":if(n.importKind){parts.push(path.call(print,"importKind")," ");}parts.push(path.call(print,"imported"));if(n.local&&n.local.name!==n.imported.name){parts.push(" as ",path.call(print,"local"));}return concat$d(parts);case"ExportSpecifier":parts.push(path.call(print,"local"));if(n.exported&&n.exported.name!==n.local.name){parts.push(" as ",path.call(print,"exported"));}return concat$d(parts);case"ImportNamespaceSpecifier":parts.push("* as ");parts.push(path.call(print,"local"));return concat$d(parts);case"ImportDefaultSpecifier":return path.call(print,"local");case"TSExportAssignment":return concat$d(["export = ",path.call(print,"expression"),semi]);case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return printExportDeclaration(path,options,print);case"ExportAllDeclaration":parts.push("export ");if(n.exportKind==="type"){parts.push("type ");}parts.push("* ");if(n.exported){parts.push("as ",path.call(print,"exported")," ");}parts.push("from ",path.call(print,"source"),semi);return concat$d(parts);case"ExportNamespaceSpecifier":case"ExportDefaultSpecifier":return path.call(print,"exported");case"ImportDeclaration":{parts.push("import ");if(n.importKind&&n.importKind!=="value"){parts.push(n.importKind+" ");}var standalones=[];var grouped=[];if(n.specifiers&&n.specifiers.length>0){path.each(function(specifierPath){var value=specifierPath.getValue();if(value.type==="ImportDefaultSpecifier"||value.type==="ImportNamespaceSpecifier"){standalones.push(print(specifierPath));}else{grouped.push(print(specifierPath));}},"specifiers");if(standalones.length>0){parts.push(join$9(", ",standalones));}if(standalones.length>0&&grouped.length>0){parts.push(", ");}if(grouped.length===1&&standalones.length===0&&n.specifiers&&!n.specifiers.some(function(node){return node.comments;})){parts.push(concat$d(["{",options.bracketSpacing?" ":"",concat$d(grouped),options.bracketSpacing?" ":"","}"]));}else if(grouped.length>=1){parts.push(group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,join$9(concat$d([",",line$9]),grouped)])),ifBreak$6(shouldPrintComma$1(options)?",":""),options.bracketSpacing?line$9:softline$6,"}"])));}parts.push(" from ");}else if(n.importKind&&n.importKind==="type"||// import {} from \'x\'\n/{\\s*}/.test(options.originalText.slice(options.locStart(n),options.locStart(n.source)))){parts.push("{} from ");}parts.push(path.call(print,"source"),semi);return concat$d(parts);}case"Import":return"import";case"TSModuleBlock":case"BlockStatement":{var naked=path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body");var hasContent=n.body.find(function(node){return node.type!=="EmptyStatement";});var hasDirectives=n.directives&&n.directives.length>0;var _parent5=path.getParentNode();var _parentParent=path.getParentNode(1);if(!hasContent&&!hasDirectives&&!hasDanglingComments$1(n)&&(_parent5.type==="ArrowFunctionExpression"||_parent5.type==="FunctionExpression"||_parent5.type==="FunctionDeclaration"||_parent5.type==="ObjectMethod"||_parent5.type==="ClassMethod"||_parent5.type==="ClassPrivateMethod"||_parent5.type==="ForStatement"||_parent5.type==="WhileStatement"||_parent5.type==="DoWhileStatement"||_parent5.type==="DoExpression"||_parent5.type==="CatchClause"&&!_parentParent.finalizer||_parent5.type==="TSModuleDeclaration")){return"{}";}parts.push("{");// Babel 6\nif(hasDirectives){path.each(function(childPath){parts.push(indent$7(concat$d([hardline$9,print(childPath),semi])));if(isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){parts.push(hardline$9);}},"directives");}if(hasContent){parts.push(indent$7(concat$d([hardline$9,naked])));}parts.push(comments.printDanglingComments(path,options));parts.push(hardline$9,"}");return concat$d(parts);}case"ReturnStatement":return concat$d(["return",printReturnAndThrowArgument(path,options,print)]);case"NewExpression":case"OptionalCallExpression":case"CallExpression":{var isNew=n.type==="NewExpression";var optional=printOptionalToken(path);if(// We want to keep CommonJS- and AMD-style require calls, and AMD-style\n// define calls, as a unit.\n// e.g. `define(["some/lib", (lib) => {`\n!isNew&&n.callee.type==="Identifier"&&(n.callee.name==="require"||n.callee.name==="define")||// Template literals as single arguments\nn.arguments.length===1&&isTemplateOnItsOwnLine$1(n.arguments[0],options.originalText,options)||// Keep test declarations on a single line\n// e.g. `it(\'long name\', () => {`\n!isNew&&isTestCall$1(n,path.getParentNode())){return concat$d([isNew?"new ":"",path.call(print,"callee"),optional,printFunctionTypeParameters(path,options,print),concat$d(["(",join$9(", ",path.map(print,"arguments")),")"])]);}// Inline Flow annotation comments following Identifiers in Call nodes need to\n// stay with the Identifier. For example:\n//\n// foo /*:: <SomeGeneric> */(bar);\n//\n// Here, we ensure that such comments stay between the Identifier and the Callee.\nvar isIdentifierWithFlowAnnotation=n.callee.type==="Identifier"&&hasFlowAnnotationComment$1(n.callee.trailingComments);if(isIdentifierWithFlowAnnotation){n.callee.trailingComments[0].printed=true;}// We detect calls on member lookups and possibly print them in a\n// special chain format. See `printMemberChain` for more info.\nif(!isNew&&isMemberish$1(n.callee)&&!path.call(function(path){return needsParens_1(path,options);},"callee")){return printMemberChain(path,options,print);}var contents=concat$d([isNew?"new ":"",path.call(print,"callee"),optional,isIdentifierWithFlowAnnotation?"/*:: ".concat(n.callee.trailingComments[0].value.slice(2).trim()," */"):"",printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)]);// We group here when the callee is itself a call expression.\n// See `isLongCurriedCallExpression` for more info.\nif(isCallOrOptionalCallExpression$1(n.callee)){return group$b(contents);}return contents;}case"TSInterfaceDeclaration":if(n.declare){parts.push("declare ");}parts.push(n.abstract?"abstract ":"",printTypeScriptModifiers(path,options,print),"interface ",path.call(print,"id"),n.typeParameters?path.call(print,"typeParameters"):""," ");if(n.extends&&n.extends.length){parts.push(group$b(indent$7(concat$d([softline$6,"extends ",(n.extends.length===1?identity$2:indent$7)(join$9(concat$d([",",line$9]),path.map(print,"extends")))," "]))));}parts.push(path.call(print,"body"));return concat$d(parts);case"ObjectTypeInternalSlot":return concat$d([n.static?"static ":"","[[",path.call(print,"id"),"]]",printOptionalToken(path),n.method?"":": ",path.call(print,"value")]);case"ObjectExpression":case"ObjectPattern":case"ObjectTypeAnnotation":case"TSInterfaceBody":case"TSTypeLiteral":{var propertiesField;if(n.type==="TSTypeLiteral"){propertiesField="members";}else if(n.type==="TSInterfaceBody"){propertiesField="body";}else{propertiesField="properties";}var isTypeAnnotation=n.type==="ObjectTypeAnnotation";var fields=[];if(isTypeAnnotation){fields.push("indexers","callProperties","internalSlots");}fields.push(propertiesField);var firstProperty=fields.map(function(field){return n[field][0];}).sort(function(a,b){return options.locStart(a)-options.locStart(b);})[0];var _parent6=path.getParentNode(0);var isFlowInterfaceLikeBody=isTypeAnnotation&&_parent6&&(_parent6.type==="InterfaceDeclaration"||_parent6.type==="DeclareInterface"||_parent6.type==="DeclareClass")&&path.getName()==="body";var shouldBreak=n.type==="TSInterfaceBody"||isFlowInterfaceLikeBody||n.type==="ObjectPattern"&&_parent6.type!=="FunctionDeclaration"&&_parent6.type!=="FunctionExpression"&&_parent6.type!=="ArrowFunctionExpression"&&_parent6.type!=="ObjectMethod"&&_parent6.type!=="ClassMethod"&&_parent6.type!=="ClassPrivateMethod"&&_parent6.type!=="AssignmentPattern"&&_parent6.type!=="CatchClause"&&n.properties.some(function(property){return property.value&&(property.value.type==="ObjectPattern"||property.value.type==="ArrayPattern");})||n.type!=="ObjectPattern"&&firstProperty&&hasNewlineInRange$3(options.originalText,options.locStart(n),options.locStart(firstProperty));var separator=isFlowInterfaceLikeBody?";":n.type==="TSInterfaceBody"||n.type==="TSTypeLiteral"?ifBreak$6(semi,";"):",";var leftBrace=n.exact?"{|":"{";var rightBrace=n.exact?"|}":"}";// Unfortunately, things are grouped together in the ast can be\n// interleaved in the source code. So we need to reorder them before\n// printing them.\nvar propsAndLoc=[];fields.forEach(function(field){path.each(function(childPath){var node=childPath.getValue();propsAndLoc.push({node:node,printed:print(childPath),loc:options.locStart(node)});},field);});var separatorParts=[];var props=propsAndLoc.sort(function(a,b){return a.loc-b.loc;}).map(function(prop){var result=concat$d(separatorParts.concat(group$b(prop.printed)));separatorParts=[separator,line$9];if((prop.node.type==="TSPropertySignature"||prop.node.type==="TSMethodSignature"||prop.node.type==="TSConstructSignatureDeclaration")&&hasNodeIgnoreComment$2(prop.node)){separatorParts.shift();}if(isNextLineEmpty$4(options.originalText,prop.node,options.locEnd)){separatorParts.push(hardline$9);}return result;});if(n.inexact){var printed;if(hasDanglingComments$1(n)){var hasLineComments=!n.comments.every(comments$1.isBlockComment);var printedDanglingComments=comments.printDanglingComments(path,options,/* sameIndent */true);printed=concat$d([printedDanglingComments,hasLineComments||hasNewline$5(options.originalText,options.locEnd(n.comments[n.comments.length-1]))?hardline$9:line$9,"..."]);}else{printed="...";}props.push(concat$d(separatorParts.concat(printed)));}var lastElem=getLast$3(n[propertiesField]);var canHaveTrailingSeparator=!(n.inexact||lastElem&&(lastElem.type==="RestElement"||hasNodeIgnoreComment$2(lastElem)));var content;if(props.length===0){if(!hasDanglingComments$1(n)){return concat$d([leftBrace,rightBrace,printTypeAnnotation(path,options,print)]);}content=group$b(concat$d([leftBrace,comments.printDanglingComments(path,options),softline$6,rightBrace,printOptionalToken(path),printTypeAnnotation(path,options,print)]));}else{content=concat$d([leftBrace,indent$7(concat$d([options.bracketSpacing?line$9:softline$6,concat$d(props)])),ifBreak$6(canHaveTrailingSeparator&&(separator!==","||shouldPrintComma$1(options))?separator:""),concat$d([options.bracketSpacing?line$9:softline$6,rightBrace]),printOptionalToken(path),printTypeAnnotation(path,options,print)]);}// If we inline the object as first argument of the parent, we don\'t want\n// to create another group so that the object breaks before the return\n// type\nif(path.match(function(node){return node.type==="ObjectPattern"&&!node.decorators;},function(node,name,number){return shouldHugArguments(node)&&(name==="params"||name==="parameters")&&number===0;})||path.match(shouldHugType,function(node,name){return name==="typeAnnotation";},function(node,name){return name==="typeAnnotation";},function(node,name,number){return shouldHugArguments(node)&&(name==="params"||name==="parameters")&&number===0;})){return content;}return group$b(content,{shouldBreak:shouldBreak});}// Babel 6\ncase"ObjectProperty":// Non-standard AST node type.\ncase"Property":if(n.method||n.kind==="get"||n.kind==="set"){return printMethod(path,options,print);}if(n.shorthand){parts.push(path.call(print,"value"));}else{parts.push(printAssignment(n.key,printPropertyKey(path,options,print),":",n.value,path.call(print,"value"),options));}return concat$d(parts);// Babel 6\ncase"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":case"TSAbstractMethodDefinition":case"TSDeclareMethod":if(n.decorators&&n.decorators.length!==0){parts.push(printDecorators(path,options,print));}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.static){parts.push("static ");}if(n.type==="TSAbstractMethodDefinition"||n.abstract){parts.push("abstract ");}parts.push(printMethod(path,options,print));return concat$d(parts);case"ObjectMethod":return printMethod(path,options,print);case"Decorator":return concat$d(["@",path.call(print,"expression"),path.call(print,"callee")]);case"ArrayExpression":case"ArrayPattern":if(n.elements.length===0){if(!hasDanglingComments$1(n)){parts.push("[]");}else{parts.push(group$b(concat$d(["[",comments.printDanglingComments(path,options),softline$6,"]"])));}}else{var _lastElem=getLast$3(n.elements);var canHaveTrailingComma=!(_lastElem&&_lastElem.type==="RestElement");// JavaScript allows you to have empty elements in an array which\n// changes its length based on the number of commas. The algorithm\n// is that if the last argument is null, we need to force insert\n// a comma to ensure JavaScript recognizes it.\n//   [,].length === 1\n//   [1,].length === 1\n//   [1,,].length === 2\n//\n// Note that getLast returns null if the array is empty, but\n// we already check for an empty array just above so we are safe\nvar needsForcedTrailingComma=canHaveTrailingComma&&_lastElem===null;var _shouldBreak=n.elements.length>1&&n.elements.every(function(element,i,elements){var elementType=element&&element.type;if(elementType!=="ArrayExpression"&&elementType!=="ObjectExpression"){return false;}var nextElement=elements[i+1];if(nextElement&&elementType!==nextElement.type){return false;}var itemsKey=elementType==="ArrayExpression"?"elements":"properties";return element[itemsKey]&&element[itemsKey].length>1;});parts.push(group$b(concat$d(["[",indent$7(concat$d([softline$6,printArrayItems(path,options,"elements",print)])),needsForcedTrailingComma?",":"",ifBreak$6(canHaveTrailingComma&&!needsForcedTrailingComma&&shouldPrintComma$1(options)?",":""),comments.printDanglingComments(path,options,/* sameIndent */true),softline$6,"]"]),{shouldBreak:_shouldBreak}));}parts.push(printOptionalToken(path),printTypeAnnotation(path,options,print));return concat$d(parts);case"SequenceExpression":{var _parent7=path.getParentNode(0);if(_parent7.type==="ExpressionStatement"||_parent7.type==="ForStatement"){// For ExpressionStatements and for-loop heads, which are among\n// the few places a SequenceExpression appears unparenthesized, we want\n// to indent expressions after the first.\nvar _parts4=[];path.each(function(p){if(p.getName()===0){_parts4.push(print(p));}else{_parts4.push(",",indent$7(concat$d([line$9,print(p)])));}},"expressions");return group$b(concat$d(_parts4));}return group$b(concat$d([join$9(concat$d([",",line$9]),path.map(print,"expressions"))]));}case"ThisExpression":return"this";case"Super":return"super";case"NullLiteral":// Babel 6 Literal split\nreturn"null";case"RegExpLiteral":// Babel 6 Literal split\nreturn printRegex(n);case"NumericLiteral":// Babel 6 Literal split\nreturn printNumber$2(n.extra.raw);case"BigIntLiteral":// babel: n.extra.raw, typescript: n.raw, flow: n.bigint\nreturn(n.bigint||(n.extra?n.extra.raw:n.raw)).toLowerCase();case"BooleanLiteral":// Babel 6 Literal split\ncase"StringLiteral":// Babel 6 Literal split\ncase"Literal":{if(n.regex){return printRegex(n.regex);}if(typeof n.value==="number"){return printNumber$2(n.raw);}if(typeof n.value!=="string"){return""+n.value;}// TypeScript workaround for https://github.com/JamesHenry/typescript-estree/issues/2\n// See corresponding workaround in needs-parens.js\nvar grandParent=path.getParentNode(1);var isTypeScriptDirective=options.parser==="typescript"&&typeof n.value==="string"&&grandParent&&(grandParent.type==="Program"||grandParent.type==="BlockStatement");return nodeStr(n,options,isTypeScriptDirective);}case"Directive":return path.call(print,"value");// Babel 6\ncase"DirectiveLiteral":return nodeStr(n,options);case"UnaryExpression":parts.push(n.operator);if(/[a-z]$/.test(n.operator)){parts.push(" ");}if(n.argument.comments&&n.argument.comments.length>0){parts.push(group$b(concat$d(["(",indent$7(concat$d([softline$6,path.call(print,"argument")])),softline$6,")"])));}else{parts.push(path.call(print,"argument"));}return concat$d(parts);case"UpdateExpression":parts.push(path.call(print,"argument"),n.operator);if(n.prefix){parts.reverse();}return concat$d(parts);case"ConditionalExpression":return printTernaryOperator(path,options,print,{beforeParts:function beforeParts(){return[path.call(print,"test")];},afterParts:function afterParts(breakClosingParen){return[breakClosingParen?softline$6:""];},shouldCheckJsx:true,conditionalNodeType:"ConditionalExpression",consequentNodePropertyName:"consequent",alternateNodePropertyName:"alternate",testNodePropertyNames:["test"]});case"VariableDeclaration":{var _printed2=path.map(function(childPath){return print(childPath);},"declarations");// We generally want to terminate all variable declarations with a\n// semicolon, except when they in the () part of for loops.\nvar parentNode=path.getParentNode();var isParentForLoop=parentNode.type==="ForStatement"||parentNode.type==="ForInStatement"||parentNode.type==="ForOfStatement";var hasValue=n.declarations.some(function(decl){return decl.init;});var firstVariable;if(_printed2.length===1&&!n.declarations[0].comments){firstVariable=_printed2[0];}else if(_printed2.length>0){// Indent first var to comply with eslint one-var rule\nfirstVariable=indent$7(_printed2[0]);}parts=[n.declare?"declare ":"",n.kind,firstVariable?concat$d([" ",firstVariable]):"",indent$7(concat$d(_printed2.slice(1).map(function(p){return concat$d([",",hasValue&&!isParentForLoop?hardline$9:line$9,p]);})))];if(!(isParentForLoop&&parentNode.body!==n)){parts.push(semi);}return group$b(concat$d(parts));}case"TSTypeAliasDeclaration":{if(n.declare){parts.push("declare ");}var _printed3=printAssignmentRight(n.id,n.typeAnnotation,n.typeAnnotation&&path.call(print,"typeAnnotation"),options);parts.push("type ",path.call(print,"id"),path.call(print,"typeParameters")," =",_printed3,semi);return group$b(concat$d(parts));}case"VariableDeclarator":return printAssignment(n.id,path.call(print,"id")," =",n.init,n.init&&path.call(print,"init"),options);case"WithStatement":return group$b(concat$d(["with (",path.call(print,"object"),")",adjustClause(n.body,path.call(print,"body"))]));case"IfStatement":{var con=adjustClause(n.consequent,path.call(print,"consequent"));var opening=group$b(concat$d(["if (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",con]));parts.push(opening);if(n.alternate){var commentOnOwnLine=hasTrailingComment$1(n.consequent)&&n.consequent.comments.some(function(comment){return comment.trailing&&!comments$1.isBlockComment(comment);})||needsHardlineAfterDanglingComment$1(n);var elseOnSameLine=n.consequent.type==="BlockStatement"&&!commentOnOwnLine;parts.push(elseOnSameLine?" ":hardline$9);if(hasDanglingComments$1(n)){parts.push(comments.printDanglingComments(path,options,true),commentOnOwnLine?hardline$9:" ");}parts.push("else",group$b(adjustClause(n.alternate,path.call(print,"alternate"),n.alternate.type==="IfStatement")));}return concat$d(parts);}case"ForStatement":{var _body2=adjustClause(n.body,path.call(print,"body"));// We want to keep dangling comments above the loop to stay consistent.\n// Any comment positioned between the for statement and the parentheses\n// is going to be printed before the statement.\nvar _dangling=comments.printDanglingComments(path,options,/* sameLine */true);var printedComments=_dangling?concat$d([_dangling,softline$6]):"";if(!n.init&&!n.test&&!n.update){return concat$d([printedComments,group$b(concat$d(["for (;;)",_body2]))]);}return concat$d([printedComments,group$b(concat$d(["for (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"init"),";",line$9,path.call(print,"test"),";",line$9,path.call(print,"update")])),softline$6])),")",_body2]))]);}case"WhileStatement":return group$b(concat$d(["while (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",adjustClause(n.body,path.call(print,"body"))]));case"ForInStatement":// Note: esprima can\'t actually parse "for each (".\nreturn group$b(concat$d([n.each?"for each (":"for (",path.call(print,"left")," in ",path.call(print,"right"),")",adjustClause(n.body,path.call(print,"body"))]));case"ForOfStatement":return group$b(concat$d(["for",n.await?" await":""," (",path.call(print,"left")," of ",path.call(print,"right"),")",adjustClause(n.body,path.call(print,"body"))]));case"DoWhileStatement":{var clause=adjustClause(n.body,path.call(print,"body"));var doBody=group$b(concat$d(["do",clause]));parts=[doBody];if(n.body.type==="BlockStatement"){parts.push(" ");}else{parts.push(hardline$9);}parts.push("while (");parts.push(group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",semi);return concat$d(parts);}case"DoExpression":return concat$d(["do ",path.call(print,"body")]);case"BreakStatement":parts.push("break");if(n.label){parts.push(" ",path.call(print,"label"));}parts.push(semi);return concat$d(parts);case"ContinueStatement":parts.push("continue");if(n.label){parts.push(" ",path.call(print,"label"));}parts.push(semi);return concat$d(parts);case"LabeledStatement":if(n.body.type==="EmptyStatement"){return concat$d([path.call(print,"label"),":;"]);}return concat$d([path.call(print,"label"),": ",path.call(print,"body")]);case"TryStatement":return concat$d(["try ",path.call(print,"block"),n.handler?concat$d([" ",path.call(print,"handler")]):"",n.finalizer?concat$d([" finally ",path.call(print,"finalizer")]):""]);case"CatchClause":if(n.param){var _hasComments=n.param.comments&&n.param.comments.some(function(comment){return!comments$1.isBlockComment(comment)||comment.leading&&hasNewline$5(options.originalText,options.locEnd(comment))||comment.trailing&&hasNewline$5(options.originalText,options.locStart(comment),{backwards:true});});var _param=path.call(print,"param");return concat$d(["catch ",_hasComments?concat$d(["(",indent$7(concat$d([softline$6,_param])),softline$6,") "]):concat$d(["(",_param,") "]),path.call(print,"body")]);}return concat$d(["catch ",path.call(print,"body")]);case"ThrowStatement":return concat$d(["throw",printReturnAndThrowArgument(path,options,print)]);// Note: ignoring n.lexical because it has no printing consequences.\ncase"SwitchStatement":return concat$d([group$b(concat$d(["switch (",indent$7(concat$d([softline$6,path.call(print,"discriminant")])),softline$6,")"]))," {",n.cases.length>0?indent$7(concat$d([hardline$9,join$9(hardline$9,path.map(function(casePath){var caseNode=casePath.getValue();return concat$d([casePath.call(print),n.cases.indexOf(caseNode)!==n.cases.length-1&&isNextLineEmpty$4(options.originalText,caseNode,options.locEnd)?hardline$9:""]);},"cases"))])):"",hardline$9,"}"]);case"SwitchCase":{if(n.test){parts.push("case ",path.call(print,"test"),":");}else{parts.push("default:");}var consequent=n.consequent.filter(function(node){return node.type!=="EmptyStatement";});if(consequent.length>0){var cons=path.call(function(consequentPath){return printStatementSequence(consequentPath,options,print);},"consequent");parts.push(consequent.length===1&&consequent[0].type==="BlockStatement"?concat$d([" ",cons]):indent$7(concat$d([hardline$9,cons])));}return concat$d(parts);}// JSX extensions below.\ncase"DebuggerStatement":return concat$d(["debugger",semi]);case"JSXAttribute":parts.push(path.call(print,"name"));if(n.value){var res;if(isStringLiteral$1(n.value)){var raw=rawText$1(n.value);// Unescape all quotes so we get an accurate preferred quote\nvar final=raw.replace(/&apos;/g,"\'").replace(/&quot;/g,\'"\');var quote=getPreferredQuote$1(final,options.jsxSingleQuote?"\'":\'"\');var _escape=quote==="\'"?"&apos;":"&quot;";final=final.slice(1,-1).replace(new RegExp(quote,"g"),_escape);res=concat$d([quote,final,quote]);}else{res=path.call(print,"value");}parts.push("=",res);}return concat$d(parts);case"JSXIdentifier":return""+n.name;case"JSXNamespacedName":return join$9(":",[path.call(print,"namespace"),path.call(print,"name")]);case"JSXMemberExpression":return join$9(".",[path.call(print,"object"),path.call(print,"property")]);case"TSQualifiedName":return join$9(".",[path.call(print,"left"),path.call(print,"right")]);case"JSXSpreadAttribute":case"JSXSpreadChild":{return concat$d(["{",path.call(function(p){var printed=concat$d(["...",print(p)]);var n=p.getValue();if(!n.comments||!n.comments.length){return printed;}return concat$d([indent$7(concat$d([softline$6,comments.printComments(p,function(){return printed;},options)])),softline$6]);},n.type==="JSXSpreadAttribute"?"argument":"expression"),"}"]);}case"JSXExpressionContainer":{var _parent8=path.getParentNode(0);var _hasComments2=n.expression.comments&&n.expression.comments.length>0;var _shouldInline=n.expression.type==="JSXEmptyExpression"||!_hasComments2&&(n.expression.type==="ArrayExpression"||n.expression.type==="ObjectExpression"||n.expression.type==="ArrowFunctionExpression"||n.expression.type==="CallExpression"||n.expression.type==="OptionalCallExpression"||n.expression.type==="FunctionExpression"||n.expression.type==="TemplateLiteral"||n.expression.type==="TaggedTemplateExpression"||n.expression.type==="DoExpression"||isJSXNode$1(_parent8)&&(n.expression.type==="ConditionalExpression"||isBinaryish$1(n.expression)));if(_shouldInline){return group$b(concat$d(["{",path.call(print,"expression"),lineSuffixBoundary$1,"}"]));}return group$b(concat$d(["{",indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,lineSuffixBoundary$1,"}"]));}case"JSXFragment":case"JSXElement":{var elem=comments.printComments(path,function(){return printJSXElement(path,options,print);},options);return maybeWrapJSXElementInParens(path,elem,options);}case"JSXOpeningElement":{var _n=path.getValue();var nameHasComments=_n.name&&_n.name.comments&&_n.name.comments.length>0||_n.typeParameters&&_n.typeParameters.comments&&_n.typeParameters.comments.length>0;// Don\'t break self-closing elements with no attributes and no comments\nif(_n.selfClosing&&!_n.attributes.length&&!nameHasComments){return concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters")," />"]);}// don\'t break up opening elements with a single long text attribute\nif(_n.attributes&&_n.attributes.length===1&&_n.attributes[0].value&&isStringLiteral$1(_n.attributes[0].value)&&!_n.attributes[0].value.value.includes("\\n")&&// We should break for the following cases:\n// <div\n//   // comment\n//   attr="value"\n// >\n// <div\n//   attr="value"\n//   // comment\n// >\n!nameHasComments&&(!_n.attributes[0].comments||!_n.attributes[0].comments.length)){return group$b(concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters")," ",concat$d(path.map(print,"attributes")),_n.selfClosing?" />":">"]));}var lastAttrHasTrailingComments=_n.attributes.length&&hasTrailingComment$1(getLast$3(_n.attributes));var bracketSameLine=// Simple tags (no attributes and no comment in tag name) should be\n// kept unbroken regardless of `jsxBracketSameLine`\n!_n.attributes.length&&!nameHasComments||options.jsxBracketSameLine&&(// We should print the bracket in a new line for the following cases:\n// <div\n//   // comment\n// >\n// <div\n//   attr // comment\n// >\n!nameHasComments||_n.attributes.length)&&!lastAttrHasTrailingComments;// We should print the opening element expanded if any prop value is a\n// string literal with newlines\nvar _shouldBreak2=_n.attributes&&_n.attributes.some(function(attr){return attr.value&&isStringLiteral$1(attr.value)&&attr.value.value.includes("\\n");});return group$b(concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters"),concat$d([indent$7(concat$d(path.map(function(attr){return concat$d([line$9,print(attr)]);},"attributes"))),_n.selfClosing?line$9:bracketSameLine?">":softline$6]),_n.selfClosing?"/>":bracketSameLine?"":">"]),{shouldBreak:_shouldBreak2});}case"JSXClosingElement":return concat$d(["</",path.call(print,"name"),">"]);case"JSXOpeningFragment":case"JSXClosingFragment":{var hasComment=n.comments&&n.comments.length;var hasOwnLineComment=hasComment&&!n.comments.every(comments$1.isBlockComment);var isOpeningFragment=n.type==="JSXOpeningFragment";return concat$d([isOpeningFragment?"<":"</",indent$7(concat$d([hasOwnLineComment?hardline$9:hasComment&&!isOpeningFragment?" ":"",comments.printDanglingComments(path,options,true)])),hasOwnLineComment?hardline$9:"",">"]);}case"JSXText":/* istanbul ignore next */throw new Error("JSXTest should be handled by JSXElement");case"JSXEmptyExpression":{var requiresHardline=n.comments&&!n.comments.every(comments$1.isBlockComment);return concat$d([comments.printDanglingComments(path,options,/* sameIndent */!requiresHardline),requiresHardline?hardline$9:""]);}case"ClassBody":if(!n.comments&&n.body.length===0){return"{}";}return concat$d(["{",n.body.length>0?indent$7(concat$d([hardline$9,path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body")])):comments.printDanglingComments(path,options),hardline$9,"}"]);case"ClassProperty":case"TSAbstractClassProperty":case"ClassPrivateProperty":{if(n.decorators&&n.decorators.length!==0){parts.push(printDecorators(path,options,print));}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.declare){parts.push("declare ");}if(n.static){parts.push("static ");}if(n.type==="TSAbstractClassProperty"||n.abstract){parts.push("abstract ");}if(n.readonly){parts.push("readonly ");}var variance=getFlowVariance$1(n);if(variance){parts.push(variance);}parts.push(printPropertyKey(path,options,print),printOptionalToken(path),printTypeAnnotation(path,options,print));if(n.value){parts.push(" =",printAssignmentRight(n.key,n.value,path.call(print,"value"),options));}parts.push(semi);return group$b(concat$d(parts));}case"ClassDeclaration":case"ClassExpression":if(n.declare){parts.push("declare ");}parts.push(concat$d(printClass(path,options,print)));return concat$d(parts);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":// Babel AST\nparts.push(path.call(print,"expression"));if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}return concat$d(parts);case"TemplateElement":return join$9(literalline$4,n.value.raw.split(/\\r?\\n/g));case"TemplateLiteral":{var expressions=path.map(print,"expressions");var _parentNode7=path.getParentNode();if(isJestEachTemplateLiteral$1(n,_parentNode7)){var _printed4=printJestEachTemplateLiteral(n,expressions,options);if(_printed4){return _printed4;}}var isSimple=isSimpleTemplateLiteral$1(n);if(isSimple){expressions=expressions.map(function(doc){return printDocToString$2(doc,Object.assign({},options,{printWidth:Infinity})).formatted;});}parts.push(lineSuffixBoundary$1,"`");path.each(function(childPath){var i=childPath.getName();parts.push(print(childPath));if(i<expressions.length){// For a template literal of the following form:\n//   `someQuery {\n//     ${call({\n//       a,\n//       b,\n//     })}\n//   }`\n// the expression is on its own line (there is a \\n in the previous\n// quasi literal), therefore we want to indent the JavaScript\n// expression inside at the beginning of ${ instead of the beginning\n// of the `.\nvar tabWidth=options.tabWidth;var quasi=childPath.getValue();var indentSize=getIndentSize$2(quasi.value.raw,tabWidth);var _printed5=expressions[i];if(!isSimple){// Breaks at the template element boundaries (${ and }) are preferred to breaking\n// in the middle of a MemberExpression\nif(n.expressions[i].comments&&n.expressions[i].comments.length||n.expressions[i].type==="MemberExpression"||n.expressions[i].type==="OptionalMemberExpression"||n.expressions[i].type==="ConditionalExpression"||n.expressions[i].type==="SequenceExpression"||n.expressions[i].type==="TSAsExpression"||isBinaryish$1(n.expressions[i])){_printed5=concat$d([indent$7(concat$d([softline$6,_printed5])),softline$6]);}}var aligned=indentSize===0&&quasi.value.raw.endsWith("\\n")?align$1(-Infinity,_printed5):addAlignmentToDoc$2(_printed5,indentSize,tabWidth);parts.push(group$b(concat$d(["${",aligned,lineSuffixBoundary$1,"}"])));}},"quasis");parts.push("`");return concat$d(parts);}// These types are unprintable because they serve as abstract\n// supertypes for other (printable) types.\ncase"TaggedTemplateExpression":return concat$d([path.call(print,"tag"),path.call(print,"typeParameters"),path.call(print,"quasi")]);case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":// Flow\ncase"Type":/* istanbul ignore next */throw new Error("unprintable type: "+JSON.stringify(n.type));// Type Annotations for Facebook Flow, typically stripped out or\n// transformed away before printing.\ncase"TypeAnnotation":case"TSTypeAnnotation":if(n.typeAnnotation){return path.call(print,"typeAnnotation");}/* istanbul ignore next */return"";case"TSTupleType":case"TupleTypeAnnotation":{var typesField=n.type==="TSTupleType"?"elementTypes":"types";var hasRest=n[typesField].length>0&&getLast$3(n[typesField]).type==="TSRestType";return group$b(concat$d(["[",indent$7(concat$d([softline$6,printArrayItems(path,options,typesField,print)])),ifBreak$6(shouldPrintComma$1(options,"all")&&!hasRest?",":""),comments.printDanglingComments(path,options,/* sameIndent */true),softline$6,"]"]));}case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"AnyTypeAnnotation":return"any";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return concat$d([path.call(print,"elementType"),"[]"]);case"BooleanTypeAnnotation":return"boolean";case"BooleanLiteralTypeAnnotation":return""+n.value;case"DeclareClass":return printFlowDeclaration(path,printClass(path,options,print));case"TSDeclareFunction":// For TypeScript the TSDeclareFunction node shares the AST\n// structure with FunctionDeclaration\nreturn concat$d([n.declare?"declare ":"",printFunctionDeclaration(path,print,options),semi]);case"DeclareFunction":return printFlowDeclaration(path,["function ",path.call(print,"id"),n.predicate?" ":"",path.call(print,"predicate"),semi]);case"DeclareModule":return printFlowDeclaration(path,["module ",path.call(print,"id")," ",path.call(print,"body")]);case"DeclareModuleExports":return printFlowDeclaration(path,["module.exports",": ",path.call(print,"typeAnnotation"),semi]);case"DeclareVariable":return printFlowDeclaration(path,["var ",path.call(print,"id"),semi]);case"DeclareExportAllDeclaration":return concat$d(["declare export * from ",path.call(print,"source")]);case"DeclareExportDeclaration":return concat$d(["declare ",printExportDeclaration(path,options,print)]);case"DeclareOpaqueType":case"OpaqueType":{parts.push("opaque type ",path.call(print,"id"),path.call(print,"typeParameters"));if(n.supertype){parts.push(": ",path.call(print,"supertype"));}if(n.impltype){parts.push(" = ",path.call(print,"impltype"));}parts.push(semi);if(n.type==="DeclareOpaqueType"){return printFlowDeclaration(path,parts);}return concat$d(parts);}case"EnumDeclaration":return concat$d(["enum ",path.call(print,"id")," ",path.call(print,"body")]);case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":{if(n.type==="EnumSymbolBody"||n.explicitType){var _type=null;switch(n.type){case"EnumBooleanBody":_type="boolean";break;case"EnumNumberBody":_type="number";break;case"EnumStringBody":_type="string";break;case"EnumSymbolBody":_type="symbol";break;}parts.push("of ",_type," ");}if(n.members.length===0){parts.push(group$b(concat$d(["{",comments.printDanglingComments(path,options),softline$6,"}"])));}else{parts.push(group$b(concat$d(["{",indent$7(concat$d([hardline$9,printArrayItems(path,options,"members",print),shouldPrintComma$1(options)?",":""])),comments.printDanglingComments(path,options,/* sameIndent */true),hardline$9,"}"])));}return concat$d(parts);}case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return concat$d([path.call(print,"id")," = ",(0,_typeof3.default)(n.init)==="object"?path.call(print,"init"):String(n.init)]);case"EnumDefaultedMember":return path.call(print,"id");case"FunctionTypeAnnotation":case"TSFunctionType":{// FunctionTypeAnnotation is ambiguous:\n// declare function foo(a: B): void; OR\n// var A: (a: B) => void;\nvar _parent9=path.getParentNode(0);var _parentParent2=path.getParentNode(1);var parentParentParent=path.getParentNode(2);var isArrowFunctionTypeAnnotation=n.type==="TSFunctionType"||!((_parent9.type==="ObjectTypeProperty"||_parent9.type==="ObjectTypeInternalSlot")&&!getFlowVariance$1(_parent9)&&!_parent9.optional&&options.locStart(_parent9)===options.locStart(n)||_parent9.type==="ObjectTypeCallProperty"||parentParentParent&&parentParentParent.type==="DeclareFunction");var needsColon=isArrowFunctionTypeAnnotation&&(_parent9.type==="TypeAnnotation"||_parent9.type==="TSTypeAnnotation");// Sadly we can\'t put it inside of FastPath::needsColon because we are\n// printing ":" as part of the expression and it would put parenthesis\n// around :(\nvar _needsParens=needsColon&&isArrowFunctionTypeAnnotation&&(_parent9.type==="TypeAnnotation"||_parent9.type==="TSTypeAnnotation")&&_parentParent2.type==="ArrowFunctionExpression";if(isObjectTypePropertyAFunction$1(_parent9,options)){isArrowFunctionTypeAnnotation=true;needsColon=true;}if(_needsParens){parts.push("(");}parts.push(printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true));// The returnType is not wrapped in a TypeAnnotation, so the colon\n// needs to be added separately.\nif(n.returnType||n.predicate||n.typeAnnotation){parts.push(isArrowFunctionTypeAnnotation?" => ":": ",path.call(print,"returnType"),path.call(print,"predicate"),path.call(print,"typeAnnotation"));}if(_needsParens){parts.push(")");}return group$b(concat$d(parts));}case"TSRestType":return concat$d(["...",path.call(print,"typeAnnotation")]);case"TSOptionalType":return concat$d([path.call(print,"typeAnnotation"),"?"]);case"FunctionTypeParam":return concat$d([path.call(print,"name"),printOptionalToken(path),n.name?": ":"",path.call(print,"typeAnnotation")]);case"GenericTypeAnnotation":return concat$d([path.call(print,"id"),path.call(print,"typeParameters")]);case"DeclareInterface":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":{if(n.type==="DeclareInterface"||n.declare){parts.push("declare ");}parts.push("interface");if(n.type==="DeclareInterface"||n.type==="InterfaceDeclaration"){parts.push(" ",path.call(print,"id"),path.call(print,"typeParameters"));}if(n.extends.length>0){parts.push(group$b(indent$7(concat$d([line$9,"extends ",(n.extends.length===1?identity$2:indent$7)(join$9(concat$d([",",line$9]),path.map(print,"extends")))]))));}parts.push(" ",path.call(print,"body"));return group$b(concat$d(parts));}case"ClassImplements":case"InterfaceExtends":return concat$d([path.call(print,"id"),path.call(print,"typeParameters")]);case"TSClassImplements":return concat$d([path.call(print,"expression"),path.call(print,"typeParameters")]);case"TSIntersectionType":case"IntersectionTypeAnnotation":{var types=path.map(print,"types");var result=[];var wasIndented=false;for(var _i41=0;_i41<types.length;++_i41){if(_i41===0){result.push(types[_i41]);}else if(isObjectType$1(n.types[_i41-1])&&isObjectType$1(n.types[_i41])){// If both are objects, don\'t indent\nresult.push(concat$d([" & ",wasIndented?indent$7(types[_i41]):types[_i41]]));}else if(!isObjectType$1(n.types[_i41-1])&&!isObjectType$1(n.types[_i41])){// If no object is involved, go to the next line if it breaks\nresult.push(indent$7(concat$d([" &",line$9,types[_i41]])));}else{// If you go from object to non-object or vis-versa, then inline it\nif(_i41>1){wasIndented=true;}result.push(" & ",_i41>1?indent$7(types[_i41]):types[_i41]);}}return group$b(concat$d(result));}case"TSUnionType":case"UnionTypeAnnotation":{// single-line variation\n// A | B | C\n// multi-line variation\n// | A\n// | B\n// | C\nvar _parent10=path.getParentNode();// If there\'s a leading comment, the parent is doing the indentation\nvar shouldIndent=_parent10.type!=="TypeParameterInstantiation"&&_parent10.type!=="TSTypeParameterInstantiation"&&_parent10.type!=="GenericTypeAnnotation"&&_parent10.type!=="TSTypeReference"&&_parent10.type!=="TSTypeAssertion"&&_parent10.type!=="TupleTypeAnnotation"&&_parent10.type!=="TSTupleType"&&!(_parent10.type==="FunctionTypeParam"&&!_parent10.name)&&!((_parent10.type==="TypeAlias"||_parent10.type==="VariableDeclarator"||_parent10.type==="TSTypeAliasDeclaration")&&hasLeadingOwnLineComment$1(options.originalText,n,options));// {\n//   a: string\n// } | null | void\n// should be inlined and not be printed in the multi-line variant\nvar _shouldHug=shouldHugType(n);// We want to align the children but without its comment, so it looks like\n// | child1\n// // comment\n// | child2\nvar _printed6=path.map(function(typePath){var printedType=typePath.call(print);if(!_shouldHug){printedType=align$1(2,printedType);}return comments.printComments(typePath,function(){return printedType;},options);},"types");if(_shouldHug){return join$9(" | ",_printed6);}var shouldAddStartLine=shouldIndent&&!hasLeadingOwnLineComment$1(options.originalText,n,options);var _code4=concat$d([ifBreak$6(concat$d([shouldAddStartLine?line$9:"","| "])),join$9(concat$d([line$9,"| "]),_printed6)]);if(needsParens_1(path,options)){return group$b(concat$d([indent$7(_code4),softline$6]));}if(_parent10.type==="TupleTypeAnnotation"&&_parent10.types.length>1||_parent10.type==="TSTupleType"&&_parent10.elementTypes.length>1){return group$b(concat$d([indent$7(concat$d([ifBreak$6(concat$d(["(",softline$6])),_code4])),softline$6,ifBreak$6(")")]));}return group$b(shouldIndent?indent$7(_code4):_code4);}case"NullableTypeAnnotation":return concat$d(["?",path.call(print,"typeAnnotation")]);case"TSNullKeyword":case"NullLiteralTypeAnnotation":return"null";case"ThisTypeAnnotation":return"this";case"NumberTypeAnnotation":return"number";case"SymbolTypeAnnotation":return"symbol";case"ObjectTypeCallProperty":if(n.static){parts.push("static ");}parts.push(path.call(print,"value"));return concat$d(parts);case"ObjectTypeIndexer":{var _variance=getFlowVariance$1(n);return concat$d([_variance||"","[",path.call(print,"id"),n.id?": ":"",path.call(print,"key"),"]: ",path.call(print,"value")]);}case"ObjectTypeProperty":{var _variance2=getFlowVariance$1(n);var modifier="";if(n.proto){modifier="proto ";}else if(n.static){modifier="static ";}return concat$d([modifier,isGetterOrSetter$1(n)?n.kind+" ":"",_variance2||"",printPropertyKey(path,options,print),printOptionalToken(path),isFunctionNotation$1(n,options)?"":": ",path.call(print,"value")]);}case"QualifiedTypeIdentifier":return concat$d([path.call(print,"qualification"),".",path.call(print,"id")]);case"StringLiteralTypeAnnotation":return nodeStr(n,options);case"NumberLiteralTypeAnnotation":assert.strictEqual((0,_typeof3.default)(n.value),"number");if(n.extra!=null){return printNumber$2(n.extra.raw);}return printNumber$2(n.raw);case"StringTypeAnnotation":return"string";case"DeclareTypeAlias":case"TypeAlias":{if(n.type==="DeclareTypeAlias"||n.declare){parts.push("declare ");}var _printed7=printAssignmentRight(n.id,n.right,path.call(print,"right"),options);parts.push("type ",path.call(print,"id"),path.call(print,"typeParameters")," =",_printed7,semi);return group$b(concat$d(parts));}case"TypeCastExpression":{return concat$d(["(",path.call(print,"expression"),printTypeAnnotation(path,options,print),")"]);}case"TypeParameterDeclaration":case"TypeParameterInstantiation":{var value=path.getValue();var commentStart=value.range?options.originalText.slice(0,value.range[0]).lastIndexOf("/*"):-1;// As noted in the TypeCastExpression comments above, we\'re able to use a normal whitespace regex here\n// because we know for sure that this is a type definition.\nvar commentSyntax=commentStart>=0&&options.originalText.slice(commentStart).match(/^\\/\\*\\s*::/);if(commentSyntax){return concat$d(["/*:: ",printTypeParameters(path,options,print,"params")," */"]);}return printTypeParameters(path,options,print,"params");}case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return printTypeParameters(path,options,print,"params");case"TSTypeParameter":case"TypeParameter":{var _parent11=path.getParentNode();if(_parent11.type==="TSMappedType"){parts.push("[",path.call(print,"name"));if(n.constraint){parts.push(" in ",path.call(print,"constraint"));}parts.push("]");return concat$d(parts);}var _variance3=getFlowVariance$1(n);if(_variance3){parts.push(_variance3);}parts.push(path.call(print,"name"));if(n.bound){parts.push(": ");parts.push(path.call(print,"bound"));}if(n.constraint){parts.push(" extends ",path.call(print,"constraint"));}if(n.default){parts.push(" = ",path.call(print,"default"));}// Keep comma if the file extension is .tsx and\n// has one type parameter that isn\'t extend with any types.\n// Because, otherwise formatted result will be invalid as tsx.\nvar _grandParent2=path.getNode(2);if(_parent11.params&&_parent11.params.length===1&&isTSXFile$1(options)&&!n.constraint&&_grandParent2.type==="ArrowFunctionExpression"){parts.push(",");}return concat$d(parts);}case"TypeofTypeAnnotation":return concat$d(["typeof ",path.call(print,"argument")]);case"VoidTypeAnnotation":return"void";case"InferredPredicate":return"%checks";// Unhandled types below. If encountered, nodes of these types should\n// be either left alone or desugared into AST types that are fully\n// supported by the pretty-printer.\ncase"DeclaredPredicate":return concat$d(["%checks(",path.call(print,"value"),")"]);case"TSAbstractKeyword":return"abstract";case"TSAnyKeyword":return"any";case"TSAsyncKeyword":return"async";case"TSBooleanKeyword":return"boolean";case"TSBigIntKeyword":return"bigint";case"TSConstKeyword":return"const";case"TSDeclareKeyword":return"declare";case"TSExportKeyword":return"export";case"TSNeverKeyword":return"never";case"TSNumberKeyword":return"number";case"TSObjectKeyword":return"object";case"TSProtectedKeyword":return"protected";case"TSPrivateKeyword":return"private";case"TSPublicKeyword":return"public";case"TSReadonlyKeyword":return"readonly";case"TSSymbolKeyword":return"symbol";case"TSStaticKeyword":return"static";case"TSStringKeyword":return"string";case"TSUndefinedKeyword":return"undefined";case"TSUnknownKeyword":return"unknown";case"TSVoidKeyword":return"void";case"TSAsExpression":return concat$d([path.call(print,"expression")," as ",path.call(print,"typeAnnotation")]);case"TSArrayType":return concat$d([path.call(print,"elementType"),"[]"]);case"TSPropertySignature":{if(n.export){parts.push("export ");}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.static){parts.push("static ");}if(n.readonly){parts.push("readonly ");}parts.push(printPropertyKey(path,options,print),printOptionalToken(path));if(n.typeAnnotation){parts.push(": ");parts.push(path.call(print,"typeAnnotation"));}// This isn\'t valid semantically, but it\'s in the AST so we can print it.\nif(n.initializer){parts.push(" = ",path.call(print,"initializer"));}return concat$d(parts);}case"TSParameterProperty":if(n.accessibility){parts.push(n.accessibility+" ");}if(n.export){parts.push("export ");}if(n.static){parts.push("static ");}if(n.readonly){parts.push("readonly ");}parts.push(path.call(print,"parameter"));return concat$d(parts);case"TSTypeReference":return concat$d([path.call(print,"typeName"),printTypeParameters(path,options,print,"typeParameters")]);case"TSTypeQuery":return concat$d(["typeof ",path.call(print,"exprName")]);case"TSIndexSignature":{var _parent12=path.getParentNode();// The typescript parser accepts multiple parameters here. If you\'re\n// using them, it makes sense to have a trailing comma. But if you\n// aren\'t, this is more like a computed property name than an array.\n// So we leave off the trailing comma when there\'s just one parameter.\nvar trailingComma=n.parameters.length>1?ifBreak$6(shouldPrintComma$1(options)?",":""):"";var parametersGroup=group$b(concat$d([indent$7(concat$d([softline$6,join$9(concat$d([", ",softline$6]),path.map(print,"parameters"))])),trailingComma,softline$6]));return concat$d([n.export?"export ":"",n.accessibility?concat$d([n.accessibility," "]):"",n.static?"static ":"",n.readonly?"readonly ":"","[",n.parameters?parametersGroup:"",n.typeAnnotation?"]: ":"]",n.typeAnnotation?path.call(print,"typeAnnotation"):"",_parent12.type==="ClassBody"?semi:""]);}case"TSTypePredicate":return concat$d([n.asserts?"asserts ":"",path.call(print,"parameterName"),n.typeAnnotation?concat$d([" is ",path.call(print,"typeAnnotation")]):""]);case"TSNonNullExpression":return concat$d([path.call(print,"expression"),"!"]);case"TSThisType":return"this";case"TSImportType":return concat$d([!n.isTypeOf?"":"typeof ","import(",path.call(print,n.parameter?"parameter":"argument"),")",!n.qualifier?"":concat$d([".",path.call(print,"qualifier")]),printTypeParameters(path,options,print,"typeParameters")]);case"TSLiteralType":return path.call(print,"literal");case"TSIndexedAccessType":return concat$d([path.call(print,"objectType"),"[",path.call(print,"indexType"),"]"]);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":{if(n.type!=="TSCallSignatureDeclaration"){parts.push("new ");}parts.push(group$b(printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true)));if(n.returnType||n.typeAnnotation){var isType=n.type==="TSConstructorType";parts.push(isType?" => ":": ",path.call(print,"returnType"),path.call(print,"typeAnnotation"));}return concat$d(parts);}case"TSTypeOperator":return concat$d([n.operator," ",path.call(print,"typeAnnotation")]);case"TSMappedType":{var _shouldBreak3=hasNewlineInRange$3(options.originalText,options.locStart(n),options.locEnd(n));return group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,n.readonly?concat$d([getTypeScriptMappedTypeModifier$1(n.readonly,"readonly")," "]):"",printTypeScriptModifiers(path,options,print),path.call(print,"typeParameter"),n.optional?getTypeScriptMappedTypeModifier$1(n.optional,"?"):"",n.typeAnnotation?": ":"",path.call(print,"typeAnnotation"),ifBreak$6(semi,"")])),comments.printDanglingComments(path,options,/* sameIndent */true),options.bracketSpacing?line$9:softline$6,"}"]),{shouldBreak:_shouldBreak3});}case"TSMethodSignature":parts.push(n.accessibility?concat$d([n.accessibility," "]):"",n.export?"export ":"",n.static?"static ":"",n.readonly?"readonly ":"",n.computed?"[":"",path.call(print,"key"),n.computed?"]":"",printOptionalToken(path),printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true));if(n.returnType||n.typeAnnotation){parts.push(": ",path.call(print,"returnType"),path.call(print,"typeAnnotation"));}return group$b(concat$d(parts));case"TSNamespaceExportDeclaration":parts.push("export as namespace ",path.call(print,"id"));if(options.semi){parts.push(";");}return group$b(concat$d(parts));case"TSEnumDeclaration":if(n.declare){parts.push("declare ");}if(n.modifiers){parts.push(printTypeScriptModifiers(path,options,print));}if(n.const){parts.push("const ");}parts.push("enum ",path.call(print,"id")," ");if(n.members.length===0){parts.push(group$b(concat$d(["{",comments.printDanglingComments(path,options),softline$6,"}"])));}else{parts.push(group$b(concat$d(["{",indent$7(concat$d([hardline$9,printArrayItems(path,options,"members",print),shouldPrintComma$1(options,"es5")?",":""])),comments.printDanglingComments(path,options,/* sameIndent */true),hardline$9,"}"])));}return concat$d(parts);case"TSEnumMember":parts.push(path.call(print,"id"));if(n.initializer){parts.push(" = ",path.call(print,"initializer"));}return concat$d(parts);case"TSImportEqualsDeclaration":if(n.isExport){parts.push("export ");}parts.push("import ",path.call(print,"id")," = ",path.call(print,"moduleReference"));if(options.semi){parts.push(";");}return group$b(concat$d(parts));case"TSExternalModuleReference":return concat$d(["require(",path.call(print,"expression"),")"]);case"TSModuleDeclaration":{var _parent13=path.getParentNode();var isExternalModule=isLiteral$1(n.id);var parentIsDeclaration=_parent13.type==="TSModuleDeclaration";var bodyIsDeclaration=n.body&&n.body.type==="TSModuleDeclaration";if(parentIsDeclaration){parts.push(".");}else{if(n.declare){parts.push("declare ");}parts.push(printTypeScriptModifiers(path,options,print));var textBetweenNodeAndItsId=options.originalText.slice(options.locStart(n),options.locStart(n.id));// Global declaration looks like this:\n// (declare)? global { ... }\nvar isGlobalDeclaration=n.id.type==="Identifier"&&n.id.name==="global"&&!/namespace|module/.test(textBetweenNodeAndItsId);if(!isGlobalDeclaration){parts.push(isExternalModule||/(^|\\s)module(\\s|$)/.test(textBetweenNodeAndItsId)?"module ":"namespace ");}}parts.push(path.call(print,"id"));if(bodyIsDeclaration){parts.push(path.call(print,"body"));}else if(n.body){parts.push(" ",group$b(path.call(print,"body")));}else{parts.push(semi);}return concat$d(parts);}case"PrivateName":return concat$d(["#",path.call(print,"id")]);// TODO: Temporary auto-generated node type. To remove when typescript-estree has proper support for private fields.\ncase"TSPrivateIdentifier":return n.escapedText;case"TSConditionalType":return printTernaryOperator(path,options,print,{beforeParts:function beforeParts(){return[path.call(print,"checkType")," ","extends"," ",path.call(print,"extendsType")];},afterParts:function afterParts(){return[];},shouldCheckJsx:false,conditionalNodeType:"TSConditionalType",consequentNodePropertyName:"trueType",alternateNodePropertyName:"falseType",testNodePropertyNames:["checkType","extendsType"]});case"TSInferType":return concat$d(["infer"," ",path.call(print,"typeParameter")]);case"InterpreterDirective":parts.push("#!",n.value,hardline$9);if(isNextLineEmpty$4(options.originalText,n,options.locEnd)){parts.push(hardline$9);}return concat$d(parts);case"NGRoot":return concat$d([].concat(path.call(print,"node"),!n.node.comments||n.node.comments.length===0?[]:concat$d([" //",n.node.comments[0].value.trimEnd()])));case"NGChainedExpression":return group$b(join$9(concat$d([";",line$9]),path.map(function(childPath){return hasNgSideEffect$1(childPath)?print(childPath):concat$d(["(",print(childPath),")"]);},"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return concat$d([n.prefix,": ",n.value.trim()]);case"NGMicrosyntax":return concat$d(path.map(function(childPath,index){return concat$d([index===0?"":isNgForOf$1(childPath.getValue(),index,n)?" ":concat$d([";",line$9]),print(childPath)]);},"body"));case"NGMicrosyntaxKey":return /^[a-z_$][a-z0-9_$]*(-[a-z_$][a-z0-9_$])*$/i.test(n.name)?n.name:JSON.stringify(n.name);case"NGMicrosyntaxExpression":return concat$d([path.call(print,"expression"),n.alias===null?"":concat$d([" as ",path.call(print,"alias")])]);case"NGMicrosyntaxKeyedExpression":{var _index4=path.getName();var _parentNode8=path.getParentNode();var shouldNotPrintColon=isNgForOf$1(n,_index4,_parentNode8)||(_index4===1&&(n.key.name==="then"||n.key.name==="else")||_index4===2&&n.key.name==="else"&&_parentNode8.body[_index4-1].type==="NGMicrosyntaxKeyedExpression"&&_parentNode8.body[_index4-1].key.name==="then")&&_parentNode8.body[0].type==="NGMicrosyntaxExpression";return concat$d([path.call(print,"key"),shouldNotPrintColon?" ":": ",path.call(print,"expression")]);}case"NGMicrosyntaxLet":return concat$d(["let ",path.call(print,"key"),n.value===null?"":concat$d([" = ",path.call(print,"value")])]);case"NGMicrosyntaxAs":return concat$d([path.call(print,"key")," as ",path.call(print,"alias")]);case"ArgumentPlaceholder":return"?";// These are not valid TypeScript. Printing them just for the sake of error recovery.\ncase"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return concat$d(["?",path.call(print,"typeAnnotation")]);case"TSJSDocNonNullableType":return concat$d(["!",path.call(print,"typeAnnotation")]);case"TSJSDocFunctionType":return concat$d(["function(",// The parameters could be here, but typescript-estree doesn\'t convert them anyway (throws an error).\n"): ",path.call(print,"typeAnnotation")]);default:/* istanbul ignore next */throw new Error("unknown type: "+JSON.stringify(n.type));}}function printStatementSequence(path,options,print){var printed=[];var bodyNode=path.getNode();var isClass=bodyNode.type==="ClassBody";path.map(function(stmtPath,i){var stmt=stmtPath.getValue();// Just in case the AST has been modified to contain falsy\n// "statements," it\'s safer simply to skip them.\n/* istanbul ignore if */if(!stmt){return;}// Skip printing EmptyStatement nodes to avoid leaving stray\n// semicolons lying around.\nif(stmt.type==="EmptyStatement"){return;}var stmtPrinted=print(stmtPath);var text=options.originalText;var parts=[];// in no-semi mode, prepend statement with semicolon if it might break ASI\n// don\'t prepend the only JSX element in a program with semicolon\nif(!options.semi&&!isClass&&!isTheOnlyJSXElementInMarkdown$1(options,stmtPath)&&stmtNeedsASIProtection(stmtPath,options)){if(stmt.comments&&stmt.comments.some(function(comment){return comment.leading;})){parts.push(print(stmtPath,{needsSemi:true}));}else{parts.push(";",stmtPrinted);}}else{parts.push(stmtPrinted);}if(!options.semi&&isClass){if(classPropMayCauseASIProblems$1(stmtPath)){parts.push(";");}else if(stmt.type==="ClassProperty"){var nextChild=bodyNode.body[i+1];if(classChildNeedsASIProtection$1(nextChild)){parts.push(";");}}}if(isNextLineEmpty$4(text,stmt,options.locEnd)&&!isLastStatement$1(stmtPath)){parts.push(hardline$9);}printed.push(concat$d(parts));});return join$9(hardline$9,printed);}function printPropertyKey(path,options,print){var node=path.getNode();if(node.computed){return concat$d(["[",path.call(print,"key"),"]"]);}var parent=path.getParentNode();var key=node.key;if(node.type==="ClassPrivateProperty"&&// flow has `Identifier` key, and babel has `PrivateName` key\nkey.type==="Identifier"){return concat$d(["#",path.call(print,"key")]);}if(options.quoteProps==="consistent"&&!needsQuoteProps.has(parent)){var objectHasStringProp=(parent.properties||parent.body||parent.members).some(function(prop){return!prop.computed&&prop.key&&isStringLiteral$1(prop.key)&&!isStringPropSafeToCoerceToIdentifier$1(prop,options);});needsQuoteProps.set(parent,objectHasStringProp);}if(key.type==="Identifier"&&(options.parser==="json"||options.quoteProps==="consistent"&&needsQuoteProps.get(parent))){// a -> "a"\nvar prop=printString$2(JSON.stringify(key.name),options);return path.call(function(keyPath){return comments.printComments(keyPath,function(){return prop;},options);},"key");}if(isStringPropSafeToCoerceToIdentifier$1(node,options)&&(options.quoteProps==="as-needed"||options.quoteProps==="consistent"&&!needsQuoteProps.get(parent))){// \'a\' -> a\nreturn path.call(function(keyPath){return comments.printComments(keyPath,function(){return key.value;},options);},"key");}return path.call(print,"key");}function printMethod(path,options,print){var node=path.getNode();var kind=node.kind;var value=node.value||node;var parts=[];if(!kind||kind==="init"||kind==="method"||kind==="constructor"){if(value.async){parts.push("async ");}if(value.generator){parts.push("*");}}else{assert.ok(kind==="get"||kind==="set");parts.push(kind," ");}parts.push(printPropertyKey(path,options,print),node.optional||node.key.optional?"?":"",node===value?printMethodInternal(path,options,print):path.call(function(path){return printMethodInternal(path,options,print);},"value"));return concat$d(parts);}function printMethodInternal(path,options,print){var parts=[printFunctionTypeParameters(path,options,print),group$b(concat$d([printFunctionParams(path,print,options),printReturnType(path,print,options)]))];if(path.getNode().body){parts.push(" ",path.call(print,"body"));}else{parts.push(options.semi?";":"");}return concat$d(parts);}function couldGroupArg(arg){return arg.type==="ObjectExpression"&&(arg.properties.length>0||arg.comments)||arg.type==="ArrayExpression"&&(arg.elements.length>0||arg.comments)||arg.type==="TSTypeAssertion"&&couldGroupArg(arg.expression)||arg.type==="TSAsExpression"&&couldGroupArg(arg.expression)||arg.type==="FunctionExpression"||arg.type==="ArrowFunctionExpression"&&(// we want to avoid breaking inside composite return types but not simple keywords\n// https://github.com/prettier/prettier/issues/4070\n// export class Thing implements OtherThing {\n//   do: (type: Type) => Provider<Prop> = memoize(\n//     (type: ObjectType): Provider<Opts> => {}\n//   );\n// }\n// https://github.com/prettier/prettier/issues/6099\n// app.get("/", (req, res): void => {\n//   res.send("Hello World!");\n// });\n!arg.returnType||!arg.returnType.typeAnnotation||arg.returnType.typeAnnotation.type!=="TSTypeReference")&&(arg.body.type==="BlockStatement"||arg.body.type==="ArrowFunctionExpression"||arg.body.type==="ObjectExpression"||arg.body.type==="ArrayExpression"||arg.body.type==="CallExpression"||arg.body.type==="OptionalCallExpression"||arg.body.type==="ConditionalExpression"||isJSXNode$1(arg.body));}function shouldGroupLastArg(args){var lastArg=getLast$3(args);var penultimateArg=getPenultimate$1(args);return!hasLeadingComment$3(lastArg)&&!hasTrailingComment$1(lastArg)&&couldGroupArg(lastArg)&&(// If the last two arguments are of the same type,\n// disable last element expansion.\n!penultimateArg||penultimateArg.type!==lastArg.type);}function shouldGroupFirstArg(args){if(args.length!==2){return false;}var _args2=(0,_slicedToArray2.default)(args,2),firstArg=_args2[0],secondArg=_args2[1];return(!firstArg.comments||!firstArg.comments.length)&&(firstArg.type==="FunctionExpression"||firstArg.type==="ArrowFunctionExpression"&&firstArg.body.type==="BlockStatement")&&secondArg.type!=="FunctionExpression"&&secondArg.type!=="ArrowFunctionExpression"&&secondArg.type!=="ConditionalExpression"&&!couldGroupArg(secondArg);}function printJestEachTemplateLiteral(node,expressions,options){/**\n     * a    | b    | expected\n     * ${1} | ${1} | ${2}\n     * ${1} | ${2} | ${3}\n     * ${2} | ${1} | ${3}\n     */var headerNames=node.quasis[0].value.raw.trim().split(/\\s*\\|\\s*/);if(headerNames.length>1||headerNames.some(function(headerName){return headerName.length!==0;})){var _ret5=function(){var parts=[];var stringifiedExpressions=expressions.map(function(doc){return"${"+printDocToString$2(doc,Object.assign({},options,{printWidth:Infinity,endOfLine:"lf"})).formatted+"}";});var tableBody=[{hasLineBreak:false,cells:[]}];for(var i=1;i<node.quasis.length;i++){var row=tableBody[tableBody.length-1];var correspondingExpression=stringifiedExpressions[i-1];row.cells.push(correspondingExpression);if(correspondingExpression.includes("\\n")){row.hasLineBreak=true;}if(node.quasis[i].value.raw.includes("\\n")){tableBody.push({hasLineBreak:false,cells:[]});}}var maxColumnCount=Math.max.apply(Math,[headerNames.length].concat((0,_toConsumableArray3.default)(tableBody.map(function(row){return row.cells.length;}))));var maxColumnWidths=Array.from({length:maxColumnCount}).fill(0);var table=[{cells:headerNames}].concat((0,_toConsumableArray3.default)(tableBody.filter(function(row){return row.cells.length!==0;})));var _iterator40=_createForOfIteratorHelper(table.filter(function(row){return!row.hasLineBreak;})),_step40;try{for(_iterator40.s();!(_step40=_iterator40.n()).done;){var cells=_step40.value.cells;cells.forEach(function(cell,index){maxColumnWidths[index]=Math.max(maxColumnWidths[index],getStringWidth$3(cell));});}}catch(err){_iterator40.e(err);}finally{_iterator40.f();}parts.push(lineSuffixBoundary$1,"`",indent$7(concat$d([hardline$9,join$9(hardline$9,table.map(function(row){return join$9(" | ",row.cells.map(function(cell,index){return row.hasLineBreak?cell:cell+" ".repeat(maxColumnWidths[index]-getStringWidth$3(cell));}));}))])),hardline$9,"`");return{v:concat$d(parts)};}();if((0,_typeof3.default)(_ret5)==="object")return _ret5.v;}}function printArgumentsList(path,options,print){var node=path.getValue();var args=node.arguments;if(args.length===0){return concat$d(["(",comments.printDanglingComments(path,options,/* sameIndent */true),")"]);}// useEffect(() => { ... }, [foo, bar, baz])\nif(args.length===2&&args[0].type==="ArrowFunctionExpression"&&args[0].params.length===0&&args[0].body.type==="BlockStatement"&&args[1].type==="ArrayExpression"&&!args.find(function(arg){return arg.comments;})){return concat$d(["(",path.call(print,"arguments",0),", ",path.call(print,"arguments",1),")"]);}// func(\n//   ({\n//     a,\n//     b\n//   }) => {}\n// );\nfunction shouldBreakForArrowFunctionInArguments(arg,argPath){if(!arg||arg.type!=="ArrowFunctionExpression"||!arg.body||arg.body.type!=="BlockStatement"||!arg.params||arg.params.length<1){return false;}var shouldBreak=false;argPath.each(function(paramPath){var printed=concat$d([print(paramPath)]);shouldBreak=shouldBreak||willBreak$1(printed);},"params");return shouldBreak;}var anyArgEmptyLine=false;var shouldBreakForArrowFunction=false;var hasEmptyLineFollowingFirstArg=false;var lastArgIndex=args.length-1;var printedArguments=path.map(function(argPath,index){var arg=argPath.getNode();var parts=[print(argPath)];if(index===lastArgIndex);else if(isNextLineEmpty$4(options.originalText,arg,options.locEnd)){if(index===0){hasEmptyLineFollowingFirstArg=true;}anyArgEmptyLine=true;parts.push(",",hardline$9,hardline$9);}else{parts.push(",",line$9);}shouldBreakForArrowFunction=shouldBreakForArrowFunctionInArguments(arg,argPath);return concat$d(parts);},"arguments");var maybeTrailingComma=// Dynamic imports cannot have trailing commas\n!(node.callee&&node.callee.type==="Import")&&shouldPrintComma$1(options,"all")?",":"";function allArgsBrokenOut(){return group$b(concat$d(["(",indent$7(concat$d([line$9,concat$d(printedArguments)])),maybeTrailingComma,line$9,")"]),{shouldBreak:true});}if(path.getParentNode().type!=="Decorator"&&isFunctionCompositionArgs$1(args)){return allArgsBrokenOut();}var shouldGroupFirst=shouldGroupFirstArg(args);var shouldGroupLast=shouldGroupLastArg(args);if(shouldGroupFirst||shouldGroupLast){var shouldBreak=(shouldGroupFirst?printedArguments.slice(1).some(willBreak$1):printedArguments.slice(0,-1).some(willBreak$1))||anyArgEmptyLine||shouldBreakForArrowFunction;// We want to print the last argument with a special flag\nvar printedExpanded;var i=0;path.each(function(argPath){if(shouldGroupFirst&&i===0){printedExpanded=[concat$d([argPath.call(function(p){return print(p,{expandFirstArg:true});}),printedArguments.length>1?",":"",hasEmptyLineFollowingFirstArg?hardline$9:line$9,hasEmptyLineFollowingFirstArg?hardline$9:""])].concat(printedArguments.slice(1));}if(shouldGroupLast&&i===args.length-1){printedExpanded=printedArguments.slice(0,-1).concat(argPath.call(function(p){return print(p,{expandLastArg:true});}));}i++;},"arguments");var somePrintedArgumentsWillBreak=printedArguments.some(willBreak$1);var simpleConcat=concat$d(["(",concat$d(printedExpanded),")"]);return concat$d([somePrintedArgumentsWillBreak?breakParent$3:"",conditionalGroup$1([!somePrintedArgumentsWillBreak&&!node.typeArguments&&!node.typeParameters?simpleConcat:ifBreak$6(allArgsBrokenOut(),simpleConcat),shouldGroupFirst?concat$d(["(",group$b(printedExpanded[0],{shouldBreak:true}),concat$d(printedExpanded.slice(1)),")"]):concat$d(["(",concat$d(printedArguments.slice(0,-1)),group$b(getLast$3(printedExpanded),{shouldBreak:true}),")"]),allArgsBrokenOut()],{shouldBreak:shouldBreak})]);}var contents=concat$d(["(",indent$7(concat$d([softline$6,concat$d(printedArguments)])),ifBreak$6(maybeTrailingComma),softline$6,")"]);if(isLongCurriedCallExpression$1(path)){// By not wrapping the arguments in a group, the printer prioritizes\n// breaking up these arguments rather than the args of the parent call.\nreturn contents;}return group$b(contents,{shouldBreak:printedArguments.some(willBreak$1)||anyArgEmptyLine});}function printTypeAnnotation(path,options,print){var node=path.getValue();if(!node.typeAnnotation){return"";}var parentNode=path.getParentNode();var isDefinite=node.definite||parentNode&&parentNode.type==="VariableDeclarator"&&parentNode.definite;var isFunctionDeclarationIdentifier=parentNode.type==="DeclareFunction"&&parentNode.id===node;if(isFlowAnnotationComment$1(options.originalText,node.typeAnnotation,options)){return concat$d([" /*: ",path.call(print,"typeAnnotation")," */"]);}return concat$d([isFunctionDeclarationIdentifier?"":isDefinite?"!: ":": ",path.call(print,"typeAnnotation")]);}function printFunctionTypeParameters(path,options,print){var fun=path.getValue();if(fun.typeArguments){return path.call(print,"typeArguments");}if(fun.typeParameters){return path.call(print,"typeParameters");}return"";}function printFunctionParams(path,print,options,expandArg,printTypeParams){var fun=path.getValue();var parent=path.getParentNode();var paramsField=fun.parameters?"parameters":"params";var isParametersInTestCall=isTestCall$1(parent);var shouldHugParameters=shouldHugArguments(fun);var shouldExpandParameters=expandArg&&!(fun[paramsField]&&fun[paramsField].some(function(n){return n.comments;}));var typeParams=printTypeParams?printFunctionTypeParameters(path,options,print):"";var printed=[];if(fun[paramsField]){var lastArgIndex=fun[paramsField].length-1;printed=path.map(function(childPath,index){var parts=[];var param=childPath.getValue();parts.push(print(childPath));if(index===lastArgIndex){if(fun.rest){parts.push(",",line$9);}}else if(isParametersInTestCall||shouldHugParameters||shouldExpandParameters){parts.push(", ");}else if(isNextLineEmpty$4(options.originalText,param,options.locEnd)){parts.push(",",hardline$9,hardline$9);}else{parts.push(",",line$9);}return concat$d(parts);},paramsField);}if(fun.rest){printed.push(concat$d(["...",path.call(print,"rest")]));}if(printed.length===0){return concat$d([typeParams,"(",comments.printDanglingComments(path,options,/* sameIndent */true,function(comment){return getNextNonSpaceNonCommentCharacter$1(options.originalText,comment,options.locEnd)===")";}),")"]);}var lastParam=getLast$3(fun[paramsField]);// If the parent is a call with the first/last argument expansion and this is the\n// params of the first/last argument, we don\'t want the arguments to break and instead\n// want the whole expression to be on a new line.\n//\n// Good:                 Bad:\n//   verylongcall(         verylongcall((\n//     (a, b) => {           a,\n//     }                     b,\n//   })                    ) => {\n//                         })\nif(shouldExpandParameters){return group$b(concat$d([removeLines$2(typeParams),"(",concat$d(printed.map(removeLines$2)),")"]));}// Single object destructuring should hug\n//\n// function({\n//   a,\n//   b,\n//   c\n// }) {}\nvar hasNotParameterDecorator=fun[paramsField].every(function(param){return!param.decorators;});if(shouldHugParameters&&hasNotParameterDecorator){return concat$d([typeParams,"(",concat$d(printed),")"]);}// don\'t break in specs, eg; `it("should maintain parens around done even when long", (done) => {})`\nif(isParametersInTestCall){return concat$d([typeParams,"(",concat$d(printed),")"]);}var isFlowShorthandWithOneArg=(isObjectTypePropertyAFunction$1(parent,options)||isTypeAnnotationAFunction$1(parent,options)||parent.type==="TypeAlias"||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType"||parent.type==="IntersectionTypeAnnotation"||parent.type==="FunctionTypeAnnotation"&&parent.returnType===fun)&&fun[paramsField].length===1&&fun[paramsField][0].name===null&&fun[paramsField][0].typeAnnotation&&fun.typeParameters===null&&isSimpleFlowType$1(fun[paramsField][0].typeAnnotation)&&!fun.rest;if(isFlowShorthandWithOneArg){if(options.arrowParens==="always"){return concat$d(["(",concat$d(printed),")"]);}return concat$d(printed);}var canHaveTrailingComma=!(lastParam&&lastParam.type==="RestElement")&&!fun.rest;return concat$d([typeParams,"(",indent$7(concat$d([softline$6,concat$d(printed)])),ifBreak$6(canHaveTrailingComma&&shouldPrintComma$1(options,"all")?",":""),softline$6,")"]);}function shouldPrintParamsWithoutParens(path,options){if(options.arrowParens==="always"){return false;}if(options.arrowParens==="avoid"){var node=path.getValue();return canPrintParamsWithoutParens(node);}// Fallback default; should be unreachable\nreturn false;}function canPrintParamsWithoutParens(node){return node.params.length===1&&!node.rest&&!node.typeParameters&&!hasDanglingComments$1(node)&&node.params[0].type==="Identifier"&&!node.params[0].typeAnnotation&&!node.params[0].comments&&!node.params[0].optional&&!node.predicate&&!node.returnType;}function printFunctionDeclaration(path,print,options){var n=path.getValue();var parts=[];if(n.async){parts.push("async ");}if(n.generator){parts.push("function* ");}else{parts.push("function ");}if(n.id){parts.push(path.call(print,"id"));}parts.push(printFunctionTypeParameters(path,options,print),group$b(concat$d([printFunctionParams(path,print,options),printReturnType(path,print,options)])),n.body?" ":"",path.call(print,"body"));return concat$d(parts);}function printReturnType(path,print,options){var n=path.getValue();var returnType=path.call(print,"returnType");if(n.returnType&&isFlowAnnotationComment$1(options.originalText,n.returnType,options)){return concat$d([" /*: ",returnType," */"]);}var parts=[returnType];// prepend colon to TypeScript type annotation\nif(n.returnType&&n.returnType.typeAnnotation){parts.unshift(": ");}if(n.predicate){// The return type will already add the colon, but otherwise we\n// need to do it ourselves\nparts.push(n.returnType?" ":": ",path.call(print,"predicate"));}return concat$d(parts);}function printExportDeclaration(path,options,print){var decl=path.getValue();var semi=options.semi?";":"";var parts=["export "];var isDefault=decl.default||decl.type==="ExportDefaultDeclaration";if(isDefault){parts.push("default ");}parts.push(comments.printDanglingComments(path,options,/* sameIndent */true));if(needsHardlineAfterDanglingComment$1(decl)){parts.push(hardline$9);}if(decl.declaration){parts.push(path.call(print,"declaration"));if(isDefault&&decl.declaration.type!=="ClassDeclaration"&&decl.declaration.type!=="FunctionDeclaration"&&decl.declaration.type!=="TSInterfaceDeclaration"&&decl.declaration.type!=="DeclareClass"&&decl.declaration.type!=="DeclareFunction"&&decl.declaration.type!=="TSDeclareFunction"){parts.push(semi);}}else{if(decl.specifiers&&decl.specifiers.length>0){var specifiers=[];var defaultSpecifiers=[];var namespaceSpecifiers=[];path.each(function(specifierPath){var specifierType=path.getValue().type;if(specifierType==="ExportSpecifier"){specifiers.push(print(specifierPath));}else if(specifierType==="ExportDefaultSpecifier"){defaultSpecifiers.push(print(specifierPath));}else if(specifierType==="ExportNamespaceSpecifier"){namespaceSpecifiers.push(concat$d(["* as ",print(specifierPath)]));}},"specifiers");var isNamespaceFollowed=namespaceSpecifiers.length!==0&&specifiers.length!==0;var isDefaultFollowed=defaultSpecifiers.length!==0&&(namespaceSpecifiers.length!==0||specifiers.length!==0);var canBreak=specifiers.length>1||defaultSpecifiers.length>0||decl.specifiers&&decl.specifiers.some(function(node){return node.comments;});var printed="";if(specifiers.length!==0){if(canBreak){printed=group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,join$9(concat$d([",",line$9]),specifiers)])),ifBreak$6(shouldPrintComma$1(options)?",":""),options.bracketSpacing?line$9:softline$6,"}"]));}else{printed=concat$d(["{",options.bracketSpacing?" ":"",concat$d(specifiers),options.bracketSpacing?" ":"","}"]);}}parts.push(decl.exportKind==="type"?"type ":"",concat$d(defaultSpecifiers),concat$d([isDefaultFollowed?", ":""]),concat$d(namespaceSpecifiers),concat$d([isNamespaceFollowed?", ":""]),printed);}else{parts.push("{}");}if(decl.source){parts.push(" from ",path.call(print,"source"));}parts.push(semi);}return concat$d(parts);}function printFlowDeclaration(path,parts){var parentExportDecl=getParentExportDeclaration$1(path);if(parentExportDecl){assert.strictEqual(parentExportDecl.type,"DeclareExportDeclaration");}else{// If the parent node has type DeclareExportDeclaration, then it\n// will be responsible for printing the "declare" token. Otherwise\n// it needs to be printed with this non-exported declaration node.\nparts.unshift("declare ");}return concat$d(parts);}function printTypeScriptModifiers(path,options,print){var n=path.getValue();if(!n.modifiers||!n.modifiers.length){return"";}return concat$d([join$9(" ",path.map(print,"modifiers"))," "]);}function printTypeParameters(path,options,print,paramsKey){var n=path.getValue();if(!n[paramsKey]){return"";}// for TypeParameterDeclaration typeParameters is a single node\nif(!Array.isArray(n[paramsKey])){return path.call(print,paramsKey);}var grandparent=path.getNode(2);var greatGrandParent=path.getNode(3);var greatGreatGrandParent=path.getNode(4);var isParameterInTestCall=grandparent!=null&&isTestCall$1(grandparent);var shouldInline=isParameterInTestCall||n[paramsKey].length===0||n[paramsKey].length===1&&(shouldHugType(n[paramsKey][0])||n[paramsKey][0].type==="GenericTypeAnnotation"&&shouldHugType(n[paramsKey][0].id)||n[paramsKey][0].type==="TSTypeReference"&&shouldHugType(n[paramsKey][0].typeName)||n[paramsKey][0].type==="NullableTypeAnnotation"||// See https://github.com/prettier/prettier/pull/6467 for the context.\ngreatGreatGrandParent&&greatGreatGrandParent.type==="VariableDeclarator"&&grandparent.type==="TSTypeAnnotation"&&greatGrandParent.type!=="ArrowFunctionExpression"&&n[paramsKey][0].type!=="TSUnionType"&&n[paramsKey][0].type!=="UnionTypeAnnotation"&&n[paramsKey][0].type!=="TSIntersectionType"&&n[paramsKey][0].type!=="IntersectionTypeAnnotation"&&n[paramsKey][0].type!=="TSConditionalType"&&n[paramsKey][0].type!=="TSMappedType"&&n[paramsKey][0].type!=="TSTypeOperator"&&n[paramsKey][0].type!=="TSIndexedAccessType"&&n[paramsKey][0].type!=="TSArrayType");function printDanglingCommentsForInline(n){if(!hasDanglingComments$1(n)){return"";}var hasOnlyBlockComments=n.comments.every(comments$1.isBlockComment);var printed=comments.printDanglingComments(path,options,/* sameIndent */hasOnlyBlockComments);if(hasOnlyBlockComments){return printed;}return concat$d([printed,hardline$9]);}if(shouldInline){return concat$d(["<",join$9(", ",path.map(print,paramsKey)),printDanglingCommentsForInline(n),">"]);}return group$b(concat$d(["<",indent$7(concat$d([softline$6,join$9(concat$d([",",line$9]),path.map(print,paramsKey))])),ifBreak$6(options.parser!=="typescript"&&options.parser!=="babel-ts"&&shouldPrintComma$1(options,"all")?",":""),softline$6,">"]));}function printClass(path,options,print){var n=path.getValue();var parts=[];if(n.abstract){parts.push("abstract ");}parts.push("class");if(n.id){parts.push(" ",path.call(print,"id"));}parts.push(path.call(print,"typeParameters"));var partsGroup=[];if(n.superClass){var printed=concat$d(["extends ",path.call(print,"superClass"),path.call(print,"superTypeParameters")]);// Keep old behaviour of extends in same line\n// If there is only on extends and there are not comments\nif((!n.implements||n.implements.length===0)&&(!n.superClass.comments||n.superClass.comments.length===0)){parts.push(concat$d([" ",path.call(function(superClass){return comments.printComments(superClass,function(){return printed;},options);},"superClass")]));}else{partsGroup.push(group$b(concat$d([line$9,path.call(function(superClass){return comments.printComments(superClass,function(){return printed;},options);},"superClass")])));}}else if(n.extends&&n.extends.length>0){parts.push(" extends ",join$9(", ",path.map(print,"extends")));}if(n.mixins&&n.mixins.length>0){partsGroup.push(line$9,"mixins ",group$b(indent$7(join$9(concat$d([",",line$9]),path.map(print,"mixins")))));}if(n.implements&&n.implements.length>0){partsGroup.push(line$9,"implements",group$b(indent$7(concat$d([line$9,join$9(concat$d([",",line$9]),path.map(print,"implements"))]))));}if(partsGroup.length>0){parts.push(group$b(indent$7(concat$d(partsGroup))));}if(n.body&&n.body.comments&&hasLeadingOwnLineComment$1(options.originalText,n.body,options)){parts.push(hardline$9);}else{parts.push(" ");}parts.push(path.call(print,"body"));return parts;}function printOptionalToken(path){var node=path.getValue();if(!node.optional||// It\'s an optional computed method parsed by typescript-estree.\n// "?" is printed in `printMethod`.\nnode.type==="Identifier"&&node===path.getParentNode().key){return"";}if(node.type==="OptionalCallExpression"||node.type==="OptionalMemberExpression"&&node.computed){return"?.";}return"?";}function printMemberLookup(path,options,print){var property=path.call(print,"property");var n=path.getValue();var optional=printOptionalToken(path);if(!n.computed){return concat$d([optional,".",property]);}if(!n.property||isNumericLiteral$1(n.property)){return concat$d([optional,"[",property,"]"]);}return group$b(concat$d([optional,"[",indent$7(concat$d([softline$6,property])),softline$6,"]"]));}function printBindExpressionCallee(path,options,print){return concat$d(["::",path.call(print,"callee")]);}// We detect calls on member expressions specially to format a\n// common pattern better. The pattern we are looking for is this:\n//\n// arr\n//   .map(x => x + 1)\n//   .filter(x => x > 10)\n//   .some(x => x % 2)\n//\n// The way it is structured in the AST is via a nested sequence of\n// MemberExpression and CallExpression. We need to traverse the AST\n// and make groups out of it to print it in the desired way.\nfunction printMemberChain(path,options,print){// The first phase is to linearize the AST by traversing it down.\n//\n//   a().b()\n// has the following AST structure:\n//   CallExpression(MemberExpression(CallExpression(Identifier)))\n// and we transform it into\n//   [Identifier, CallExpression, MemberExpression, CallExpression]\nvar printedNodes=[];// Here we try to retain one typed empty line after each call expression or\n// the first group whether it is in parentheses or not\nfunction shouldInsertEmptyLineAfter(node){var originalText=options.originalText;var nextCharIndex=getNextNonSpaceNonCommentCharacterIndex$3(originalText,node,options.locEnd);var nextChar=originalText.charAt(nextCharIndex);// if it is cut off by a parenthesis, we only account for one typed empty\n// line after that parenthesis\nif(nextChar===")"){return isNextLineEmptyAfterIndex$2(originalText,nextCharIndex+1,options.locEnd);}return isNextLineEmpty$4(originalText,node,options.locEnd);}function rec(path){var node=path.getValue();if((node.type==="CallExpression"||node.type==="OptionalCallExpression")&&(isMemberish$1(node.callee)||node.callee.type==="CallExpression"||node.callee.type==="OptionalCallExpression")){printedNodes.unshift({node:node,printed:concat$d([comments.printComments(path,function(){return concat$d([printOptionalToken(path),printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)]);},options),shouldInsertEmptyLineAfter(node)?hardline$9:""])});path.call(function(callee){return rec(callee);},"callee");}else if(isMemberish$1(node)){printedNodes.unshift({node:node,needsParens:needsParens_1(path,options),printed:comments.printComments(path,function(){return node.type==="OptionalMemberExpression"||node.type==="MemberExpression"?printMemberLookup(path,options,print):printBindExpressionCallee(path,options,print);},options)});path.call(function(object){return rec(object);},"object");}else if(node.type==="TSNonNullExpression"){printedNodes.unshift({node:node,printed:comments.printComments(path,function(){return"!";},options)});path.call(function(expression){return rec(expression);},"expression");}else{printedNodes.unshift({node:node,printed:path.call(print)});}}// Note: the comments of the root node have already been printed, so we\n// need to extract this first call without printing them as they would\n// if handled inside of the recursive call.\nvar node=path.getValue();printedNodes.unshift({node:node,printed:concat$d([printOptionalToken(path),printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)])});path.call(function(callee){return rec(callee);},"callee");// Once we have a linear list of printed nodes, we want to create groups out\n// of it.\n//\n//   a().b.c().d().e\n// will be grouped as\n//   [\n//     [Identifier, CallExpression],\n//     [MemberExpression, MemberExpression, CallExpression],\n//     [MemberExpression, CallExpression],\n//     [MemberExpression],\n//   ]\n// so that we can print it as\n//   a()\n//     .b.c()\n//     .d()\n//     .e\n// The first group is the first node followed by\n//   - as many CallExpression as possible\n//       < fn()()() >.something()\n//   - as many array accessors as possible\n//       < fn()[0][1][2] >.something()\n//   - then, as many MemberExpression as possible but the last one\n//       < this.items >.something()\nvar groups=[];var currentGroup=[printedNodes[0]];var i=1;for(;i<printedNodes.length;++i){if(printedNodes[i].node.type==="TSNonNullExpression"||printedNodes[i].node.type==="OptionalCallExpression"||printedNodes[i].node.type==="CallExpression"||(printedNodes[i].node.type==="MemberExpression"||printedNodes[i].node.type==="OptionalMemberExpression")&&printedNodes[i].node.computed&&isNumericLiteral$1(printedNodes[i].node.property)){currentGroup.push(printedNodes[i]);}else{break;}}if(printedNodes[0].node.type!=="CallExpression"&&printedNodes[0].node.type!=="OptionalCallExpression"){for(;i+1<printedNodes.length;++i){if(isMemberish$1(printedNodes[i].node)&&isMemberish$1(printedNodes[i+1].node)){currentGroup.push(printedNodes[i]);}else{break;}}}groups.push(currentGroup);currentGroup=[];// Then, each following group is a sequence of MemberExpression followed by\n// a sequence of CallExpression. To compute it, we keep adding things to the\n// group until we has seen a CallExpression in the past and reach a\n// MemberExpression\nvar hasSeenCallExpression=false;for(;i<printedNodes.length;++i){if(hasSeenCallExpression&&isMemberish$1(printedNodes[i].node)){// [0] should be appended at the end of the group instead of the\n// beginning of the next one\nif(printedNodes[i].node.computed&&isNumericLiteral$1(printedNodes[i].node.property)){currentGroup.push(printedNodes[i]);continue;}groups.push(currentGroup);currentGroup=[];hasSeenCallExpression=false;}if(printedNodes[i].node.type==="CallExpression"||printedNodes[i].node.type==="OptionalCallExpression"){hasSeenCallExpression=true;}currentGroup.push(printedNodes[i]);if(printedNodes[i].node.comments&&printedNodes[i].node.comments.some(function(comment){return comment.trailing;})){groups.push(currentGroup);currentGroup=[];hasSeenCallExpression=false;}}if(currentGroup.length>0){groups.push(currentGroup);}// There are cases like Object.keys(), Observable.of(), _.values() where\n// they are the subject of all the chained calls and therefore should\n// be kept on the same line:\n//\n//   Object.keys(items)\n//     .filter(x => x)\n//     .map(x => x)\n//\n// In order to detect those cases, we use an heuristic: if the first\n// node is an identifier with the name starting with a capital\n// letter or just a sequence of _$. The rationale is that they are\n// likely to be factories.\nfunction isFactory(name){return /^[A-Z]|^[_$]+$/.test(name);}// In case the Identifier is shorter than tab width, we can keep the\n// first call in a single line, if it\'s an ExpressionStatement.\n//\n//   d3.scaleLinear()\n//     .domain([0, 100])\n//     .range([0, width]);\n//\nfunction isShort(name){return name.length<=options.tabWidth;}function shouldNotWrap(groups){var parent=path.getParentNode();var isExpression=parent&&parent.type==="ExpressionStatement";var hasComputed=groups[1].length&&groups[1][0].node.computed;if(groups[0].length===1){var firstNode=groups[0][0].node;return firstNode.type==="ThisExpression"||firstNode.type==="Identifier"&&(isFactory(firstNode.name)||isExpression&&isShort(firstNode.name)||hasComputed);}var lastNode=getLast$3(groups[0]).node;return(lastNode.type==="MemberExpression"||lastNode.type==="OptionalMemberExpression")&&lastNode.property.type==="Identifier"&&(isFactory(lastNode.property.name)||hasComputed);}var shouldMerge=groups.length>=2&&!groups[1][0].node.comments&&shouldNotWrap(groups);function printGroup(printedGroup){var printed=printedGroup.map(function(tuple){return tuple.printed;});// Checks if the last node (i.e. the parent node) needs parens and print\n// accordingly\nif(printedGroup.length>0&&printedGroup[printedGroup.length-1].needsParens){return concat$d(["("].concat((0,_toConsumableArray3.default)(printed),[")"]));}return concat$d(printed);}function printIndentedGroup(groups){if(groups.length===0){return"";}return indent$7(group$b(concat$d([hardline$9,join$9(hardline$9,groups.map(printGroup))])));}var printedGroups=groups.map(printGroup);var oneLine=concat$d(printedGroups);var cutoff=shouldMerge?3:2;var flatGroups=groups.reduce(function(res,group){return res.concat(group);},[]);var hasComment=flatGroups.slice(1,-1).some(function(node){return hasLeadingComment$3(node.node);})||flatGroups.slice(0,-1).some(function(node){return hasTrailingComment$1(node.node);})||groups[cutoff]&&hasLeadingComment$3(groups[cutoff][0].node);// If we only have a single `.`, we shouldn\'t do anything fancy and just\n// render everything concatenated together.\nif(groups.length<=cutoff&&!hasComment){if(isLongCurriedCallExpression$1(path)){return oneLine;}return group$b(oneLine);}// Find out the last node in the first group and check if it has an\n// empty line after\nvar lastNodeBeforeIndent=getLast$3(shouldMerge?groups.slice(1,2)[0]:groups[0]).node;var shouldHaveEmptyLineBeforeIndent=lastNodeBeforeIndent.type!=="CallExpression"&&lastNodeBeforeIndent.type!=="OptionalCallExpression"&&shouldInsertEmptyLineAfter(lastNodeBeforeIndent);var expanded=concat$d([printGroup(groups[0]),shouldMerge?concat$d(groups.slice(1,2).map(printGroup)):"",shouldHaveEmptyLineBeforeIndent?hardline$9:"",printIndentedGroup(groups.slice(shouldMerge?2:1))]);var callExpressions=printedNodes.map(function(_ref29){var node=_ref29.node;return node;}).filter(isCallOrOptionalCallExpression$1);// We don\'t want to print in one line if the chain has:\n//  * A comment.\n//  * Non-trivial arguments.\n//  * Any group but the last one has a hard line.\n// If the last group is a function it\'s okay to inline if it fits.\nif(hasComment||callExpressions.length>2&&callExpressions.some(function(expr){return!expr.arguments.every(function(arg){return isSimpleCallArgument$1(arg,0);});})||printedGroups.slice(0,-1).some(willBreak$1)||/**\n     *     scopes.filter(scope => scope.value !== \'\').map((scope, i) => {\n     *       // multi line content\n     *     })\n     */function(lastGroupDoc,lastGroupNode){return isCallOrOptionalCallExpression$1(lastGroupNode)&&willBreak$1(lastGroupDoc);}(getLast$3(printedGroups),getLast$3(getLast$3(groups)).node)&&callExpressions.slice(0,-1).some(function(n){return n.arguments.some(isFunctionOrArrowExpression$1);})){return group$b(expanded);}return concat$d([// We only need to check `oneLine` because if `expanded` is chosen\n// that means that the parent group has already been broken\n// naturally\nwillBreak$1(oneLine)||shouldHaveEmptyLineBeforeIndent?breakParent$3:"",conditionalGroup$1([oneLine,expanded])]);}function separatorNoWhitespace(isFacebookTranslationTag,child,childNode,nextNode){if(isFacebookTranslationTag){return"";}if(childNode.type==="JSXElement"&&!childNode.closingElement||nextNode&&nextNode.type==="JSXElement"&&!nextNode.closingElement){return child.length===1?softline$6:hardline$9;}return softline$6;}function separatorWithWhitespace(isFacebookTranslationTag,child,childNode,nextNode){if(isFacebookTranslationTag){return hardline$9;}if(child.length===1){return childNode.type==="JSXElement"&&!childNode.closingElement||nextNode&&nextNode.type==="JSXElement"&&!nextNode.closingElement?hardline$9:softline$6;}return hardline$9;}// JSX Children are strange, mostly for two reasons:\n// 1. JSX reads newlines into string values, instead of skipping them like JS\n// 2. up to one whitespace between elements within a line is significant,\n//    but not between lines.\n//\n// Leading, trailing, and lone whitespace all need to\n// turn themselves into the rather ugly `{\' \'}` when breaking.\n//\n// We print JSX using the `fill` doc primitive.\n// This requires that we give it an array of alternating\n// content and whitespace elements.\n// To ensure this we add dummy `""` content elements as needed.\nfunction printJSXChildren(path,options,print,jsxWhitespace,isFacebookTranslationTag){var n=path.getValue();var children=[];// using `map` instead of `each` because it provides `i`\npath.map(function(childPath,i){var child=childPath.getValue();if(isLiteral$1(child)){var text=rawText$1(child);// Contains a non-whitespace character\nif(isMeaningfulJSXText$1(child)){var words=text.split(matchJsxWhitespaceRegex$1);// Starts with whitespace\nif(words[0]===""){children.push("");words.shift();if(/\\n/.test(words[0])){var next=n.children[i+1];children.push(separatorWithWhitespace(isFacebookTranslationTag,words[1],child,next));}else{children.push(jsxWhitespace);}words.shift();}var endWhitespace;// Ends with whitespace\nif(getLast$3(words)===""){words.pop();endWhitespace=words.pop();}// This was whitespace only without a new line.\nif(words.length===0){return;}words.forEach(function(word,i){if(i%2===1){children.push(line$9);}else{children.push(word);}});if(endWhitespace!==undefined){if(/\\n/.test(endWhitespace)){var _next=n.children[i+1];children.push(separatorWithWhitespace(isFacebookTranslationTag,getLast$3(children),child,_next));}else{children.push(jsxWhitespace);}}else{var _next2=n.children[i+1];children.push(separatorNoWhitespace(isFacebookTranslationTag,getLast$3(children),child,_next2));}}else if(/\\n/.test(text)){// Keep (up to one) blank line between tags/expressions/text.\n// Note: We don\'t keep blank lines between text elements.\nif(text.match(/\\n/g).length>1){children.push("");children.push(hardline$9);}}else{children.push("");children.push(jsxWhitespace);}}else{var printedChild=print(childPath);children.push(printedChild);var _next3=n.children[i+1];var directlyFollowedByMeaningfulText=_next3&&isMeaningfulJSXText$1(_next3);if(directlyFollowedByMeaningfulText){var firstWord=rawText$1(_next3).trim().split(matchJsxWhitespaceRegex$1)[0];children.push(separatorNoWhitespace(isFacebookTranslationTag,firstWord,child,_next3));}else{children.push(hardline$9);}}},"children");return children;}// JSX expands children from the inside-out, instead of the outside-in.\n// This is both to break children before attributes,\n// and to ensure that when children break, their parents do as well.\n//\n// Any element that is written without any newlines and fits on a single line\n// is left that way.\n// Not only that, any user-written-line containing multiple JSX siblings\n// should also be kept on one line if possible,\n// so each user-written-line is wrapped in its own group.\n//\n// Elements that contain newlines or don\'t fit on a single line (recursively)\n// are fully-split, using hardline and shouldBreak: true.\n//\n// To support that case properly, all leading and trailing spaces\n// are stripped from the list of children, and replaced with a single hardline.\nfunction printJSXElement(path,options,print){var n=path.getValue();if(n.type==="JSXElement"&&isEmptyJSXElement$1(n)){return concat$d([path.call(print,"openingElement"),path.call(print,"closingElement")]);}var openingLines=n.type==="JSXElement"?path.call(print,"openingElement"):path.call(print,"openingFragment");var closingLines=n.type==="JSXElement"?path.call(print,"closingElement"):path.call(print,"closingFragment");if(n.children.length===1&&n.children[0].type==="JSXExpressionContainer"&&(n.children[0].expression.type==="TemplateLiteral"||n.children[0].expression.type==="TaggedTemplateExpression")){return concat$d([openingLines,concat$d(path.map(print,"children")),closingLines]);}// Convert `{" "}` to text nodes containing a space.\n// This makes it easy to turn them into `jsxWhitespace` which\n// can then print as either a space or `{" "}` when breaking.\nn.children=n.children.map(function(child){if(isJSXWhitespaceExpression$1(child)){return{type:"JSXText",value:" ",raw:" "};}return child;});var containsTag=n.children.filter(isJSXNode$1).length>0;var containsMultipleExpressions=n.children.filter(function(child){return child.type==="JSXExpressionContainer";}).length>1;var containsMultipleAttributes=n.type==="JSXElement"&&n.openingElement.attributes.length>1;// Record any breaks. Should never go from true to false, only false to true.\nvar forcedBreak=willBreak$1(openingLines)||containsTag||containsMultipleAttributes||containsMultipleExpressions;var isMdxBlock=path.getParentNode().rootMarker==="mdx";var rawJsxWhitespace=options.singleQuote?"{\' \'}":\'{" "}\';var jsxWhitespace=isMdxBlock?concat$d([" "]):ifBreak$6(concat$d([rawJsxWhitespace,softline$6])," ");var isFacebookTranslationTag=n.openingElement&&n.openingElement.name&&n.openingElement.name.name==="fbt";var children=printJSXChildren(path,options,print,jsxWhitespace,isFacebookTranslationTag);var containsText=n.children.some(function(child){return isMeaningfulJSXText$1(child);});// We can end up we multiple whitespace elements with empty string\n// content between them.\n// We need to remove empty whitespace and softlines before JSX whitespace\n// to get the correct output.\nfor(var i=children.length-2;i>=0;i--){var isPairOfEmptyStrings=children[i]===""&&children[i+1]==="";var isPairOfHardlines=children[i]===hardline$9&&children[i+1]===""&&children[i+2]===hardline$9;var isLineFollowedByJSXWhitespace=(children[i]===softline$6||children[i]===hardline$9)&&children[i+1]===""&&children[i+2]===jsxWhitespace;var isJSXWhitespaceFollowedByLine=children[i]===jsxWhitespace&&children[i+1]===""&&(children[i+2]===softline$6||children[i+2]===hardline$9);var isDoubleJSXWhitespace=children[i]===jsxWhitespace&&children[i+1]===""&&children[i+2]===jsxWhitespace;var isPairOfHardOrSoftLines=children[i]===softline$6&&children[i+1]===""&&children[i+2]===hardline$9||children[i]===hardline$9&&children[i+1]===""&&children[i+2]===softline$6;if(isPairOfHardlines&&containsText||isPairOfEmptyStrings||isLineFollowedByJSXWhitespace||isDoubleJSXWhitespace||isPairOfHardOrSoftLines){children.splice(i,2);}else if(isJSXWhitespaceFollowedByLine){children.splice(i+1,2);}}// Trim trailing lines (or empty strings)\nwhile(children.length&&(isLineNext$1(getLast$3(children))||isEmpty$1(getLast$3(children)))){children.pop();}// Trim leading lines (or empty strings)\nwhile(children.length&&(isLineNext$1(children[0])||isEmpty$1(children[0]))&&(isLineNext$1(children[1])||isEmpty$1(children[1]))){children.shift();children.shift();}// Tweak how we format children if outputting this element over multiple lines.\n// Also detect whether we will force this element to output over multiple lines.\nvar multilineChildren=[];children.forEach(function(child,i){// There are a number of situations where we need to ensure we display\n// whitespace as `{" "}` when outputting this element over multiple lines.\nif(child===jsxWhitespace){if(i===1&&children[i-1]===""){if(children.length===2){// Solitary whitespace\nmultilineChildren.push(rawJsxWhitespace);return;}// Leading whitespace\nmultilineChildren.push(concat$d([rawJsxWhitespace,hardline$9]));return;}else if(i===children.length-1){// Trailing whitespace\nmultilineChildren.push(rawJsxWhitespace);return;}else if(children[i-1]===""&&children[i-2]===hardline$9){// Whitespace after line break\nmultilineChildren.push(rawJsxWhitespace);return;}}multilineChildren.push(child);if(willBreak$1(child)){forcedBreak=true;}});// If there is text we use `fill` to fit as much onto each line as possible.\n// When there is no text (just tags and expressions) we use `group`\n// to output each on a separate line.\nvar content=containsText?fill$4(multilineChildren):group$b(concat$d(multilineChildren),{shouldBreak:true});if(isMdxBlock){return content;}var multiLineElem=group$b(concat$d([openingLines,indent$7(concat$d([hardline$9,content])),hardline$9,closingLines]));if(forcedBreak){return multiLineElem;}return conditionalGroup$1([group$b(concat$d([openingLines,concat$d(children),closingLines])),multiLineElem]);}function maybeWrapJSXElementInParens(path,elem,options){var parent=path.getParentNode();if(!parent){return elem;}var NO_WRAP_PARENTS={ArrayExpression:true,JSXAttribute:true,JSXElement:true,JSXExpressionContainer:true,JSXFragment:true,ExpressionStatement:true,CallExpression:true,OptionalCallExpression:true,ConditionalExpression:true,JsExpressionRoot:true};if(NO_WRAP_PARENTS[parent.type]){return elem;}var shouldBreak=path.match(undefined,function(node){return node.type==="ArrowFunctionExpression";},isCallOrOptionalCallExpression$1,function(node){return node.type==="JSXExpressionContainer";});var needsParens=needsParens_1(path,options);return group$b(concat$d([needsParens?"":ifBreak$6("("),indent$7(concat$d([softline$6,elem])),softline$6,needsParens?"":ifBreak$6(")")]),{shouldBreak:shouldBreak});}function shouldInlineLogicalExpression(node){if(node.type!=="LogicalExpression"){return false;}if(node.right.type==="ObjectExpression"&&node.right.properties.length!==0){return true;}if(node.right.type==="ArrayExpression"&&node.right.elements.length!==0){return true;}if(isJSXNode$1(node.right)){return true;}return false;}// For binary expressions to be consistent, we need to group\n// subsequent operators with the same precedence level under a single\n// group. Otherwise they will be nested such that some of them break\n// onto new lines but not all. Operators with the same precedence\n// level should either all break or not. Because we group them by\n// precedence level and the AST is structured based on precedence\n// level, things are naturally broken up correctly, i.e. `&&` is\n// broken before `+`.\nfunction printBinaryishExpressions(path,print,options,isNested,isInsideParenthesis){var parts=[];var node=path.getValue();// We treat BinaryExpression and LogicalExpression nodes the same.\nif(isBinaryish$1(node)){// Put all operators with the same precedence level in the same\n// group. The reason we only need to do this with the `left`\n// expression is because given an expression like `1 + 2 - 3`, it\n// is always parsed like `((1 + 2) - 3)`, meaning the `left` side\n// is where the rest of the expression will exist. Binary\n// expressions on the right side mean they have a difference\n// precedence level and should be treated as a separate group, so\n// print them normally. (This doesn\'t hold for the `**` operator,\n// which is unique in that it is right-associative.)\nif(shouldFlatten$1(node.operator,node.left.operator)){// Flatten them out by recursively calling this function.\nparts=parts.concat(path.call(function(left){return printBinaryishExpressions(left,print,options,/* isNested */true,isInsideParenthesis);},"left"));}else{parts.push(path.call(print,"left"));}var shouldInline=shouldInlineLogicalExpression(node);var lineBeforeOperator=(node.operator==="|>"||node.type==="NGPipeExpression"||node.operator==="|"&&options.parser==="__vue_expression")&&!hasLeadingOwnLineComment$1(options.originalText,node.right,options);var operator=node.type==="NGPipeExpression"?"|":node.operator;var rightSuffix=node.type==="NGPipeExpression"&&node.arguments.length!==0?group$b(indent$7(concat$d([softline$6,": ",join$9(concat$d([softline$6,":",ifBreak$6(" ")]),path.map(print,"arguments").map(function(arg){return align$1(2,group$b(arg));}))]))):"";var right=shouldInline?concat$d([operator," ",path.call(print,"right"),rightSuffix]):concat$d([lineBeforeOperator?softline$6:"",operator,lineBeforeOperator?" ":line$9,path.call(print,"right"),rightSuffix]);// If there\'s only a single binary expression, we want to create a group\n// in order to avoid having a small right part like -1 be on its own line.\nvar parent=path.getParentNode();var shouldGroup=!(isInsideParenthesis&&node.type==="LogicalExpression")&&parent.type!==node.type&&node.left.type!==node.type&&node.right.type!==node.type;parts.push(" ",shouldGroup?group$b(right):right);// The root comments are already printed, but we need to manually print\n// the other ones since we don\'t call the normal print on BinaryExpression,\n// only for the left and right parts\nif(isNested&&node.comments){parts=comments.printComments(path,function(){return concat$d(parts);},options);}}else{// Our stopping case. Simply print the node normally.\nparts.push(path.call(print));}return parts;}function printAssignmentRight(leftNode,rightNode,printedRight,options){if(hasLeadingOwnLineComment$1(options.originalText,rightNode,options)){return indent$7(concat$d([line$9,printedRight]));}var canBreak=isBinaryish$1(rightNode)&&!shouldInlineLogicalExpression(rightNode)||rightNode.type==="ConditionalExpression"&&isBinaryish$1(rightNode.test)&&!shouldInlineLogicalExpression(rightNode.test)||rightNode.type==="StringLiteralTypeAnnotation"||rightNode.type==="ClassExpression"&&rightNode.decorators&&rightNode.decorators.length||(leftNode.type==="Identifier"||isStringLiteral$1(leftNode)||leftNode.type==="MemberExpression")&&(isStringLiteral$1(rightNode)||isMemberExpressionChain$1(rightNode))&&// do not put values on a separate line from the key in json\noptions.parser!=="json"&&options.parser!=="json5"||rightNode.type==="SequenceExpression";if(canBreak){return group$b(indent$7(concat$d([line$9,printedRight])));}return concat$d([" ",printedRight]);}function printAssignment(leftNode,printedLeft,operator,rightNode,printedRight,options){if(!rightNode){return printedLeft;}var printed=printAssignmentRight(leftNode,rightNode,printedRight,options);return group$b(concat$d([printedLeft,operator,printed]));}function adjustClause(node,clause,forceSpace){if(node.type==="EmptyStatement"){return";";}if(node.type==="BlockStatement"||forceSpace){return concat$d([" ",clause]);}return indent$7(concat$d([line$9,clause]));}function nodeStr(node,options,isFlowOrTypeScriptDirectiveLiteral){var raw=rawText$1(node);var isDirectiveLiteral=isFlowOrTypeScriptDirectiveLiteral||node.type==="DirectiveLiteral";return printString$2(raw,options,isDirectiveLiteral);}function printRegex(node){var flags=node.flags.split("").sort().join("");return"/".concat(node.pattern,"/").concat(flags);}function exprNeedsASIProtection(path,options){var node=path.getValue();var maybeASIProblem=needsParens_1(path,options)||node.type==="ParenthesizedExpression"||node.type==="TypeCastExpression"||node.type==="ArrowFunctionExpression"&&!shouldPrintParamsWithoutParens(path,options)||node.type==="ArrayExpression"||node.type==="ArrayPattern"||node.type==="UnaryExpression"&&node.prefix&&(node.operator==="+"||node.operator==="-")||node.type==="TemplateLiteral"||node.type==="TemplateElement"||isJSXNode$1(node)||node.type==="BindExpression"&&!node.object||node.type==="RegExpLiteral"||node.type==="Literal"&&node.pattern||node.type==="Literal"&&node.regex;if(maybeASIProblem){return true;}if(!hasNakedLeftSide$2(node)){return false;}return path.call.apply(path,[function(childPath){return exprNeedsASIProtection(childPath,options);}].concat((0,_toConsumableArray3.default)(getLeftSidePathName$2(path,node))));}function stmtNeedsASIProtection(path,options){var node=path.getNode();if(node.type!=="ExpressionStatement"){return false;}return path.call(function(childPath){return exprNeedsASIProtection(childPath,options);},"expression");}function shouldHugType(node){if(isSimpleFlowType$1(node)||isObjectType$1(node)){return true;}if(node.type==="UnionTypeAnnotation"||node.type==="TSUnionType"){var voidCount=node.types.filter(function(n){return n.type==="VoidTypeAnnotation"||n.type==="TSVoidKeyword"||n.type==="NullLiteralTypeAnnotation"||n.type==="TSNullKeyword";}).length;var hasObject=node.types.some(function(n){return n.type==="ObjectTypeAnnotation"||n.type==="TSTypeLiteral"||// This is a bit aggressive but captures Array<{x}>\nn.type==="GenericTypeAnnotation"||n.type==="TSTypeReference";});if(node.types.length-1===voidCount&&hasObject){return true;}}return false;}function shouldHugArguments(fun){if(!fun||fun.rest){return false;}var params=fun.params||fun.parameters;if(!params||params.length!==1){return false;}var param=params[0];return!param.comments&&(param.type==="ObjectPattern"||param.type==="ArrayPattern"||param.type==="Identifier"&&param.typeAnnotation&&(param.typeAnnotation.type==="TypeAnnotation"||param.typeAnnotation.type==="TSTypeAnnotation")&&isObjectType$1(param.typeAnnotation.typeAnnotation)||param.type==="FunctionTypeParam"&&isObjectType$1(param.typeAnnotation)||param.type==="AssignmentPattern"&&(param.left.type==="ObjectPattern"||param.left.type==="ArrayPattern")&&(param.right.type==="Identifier"||param.right.type==="ObjectExpression"&&param.right.properties.length===0||param.right.type==="ArrayExpression"&&param.right.elements.length===0));}function printArrayItems(path,options,printPath,print){var printedElements=[];var separatorParts=[];path.each(function(childPath){printedElements.push(concat$d(separatorParts));printedElements.push(group$b(print(childPath)));separatorParts=[",",line$9];if(childPath.getValue()&&isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){separatorParts.push(softline$6);}},printPath);return concat$d(printedElements);}function printReturnAndThrowArgument(path,options,print){var node=path.getValue();var semi=options.semi?";":"";var parts=[];if(node.argument){if(returnArgumentHasLeadingComment$1(options,node.argument)){parts.push(concat$d([" (",indent$7(concat$d([hardline$9,path.call(print,"argument")])),hardline$9,")"]));}else if(isBinaryish$1(node.argument)||node.argument.type==="SequenceExpression"){parts.push(group$b(concat$d([ifBreak$6(" ("," "),indent$7(concat$d([softline$6,path.call(print,"argument")])),softline$6,ifBreak$6(")")])));}else{parts.push(" ",path.call(print,"argument"));}}var lastComment=Array.isArray(node.comments)&&node.comments[node.comments.length-1];var isLastCommentLine=lastComment&&(lastComment.type==="CommentLine"||lastComment.type==="Line");if(isLastCommentLine){parts.push(semi);}if(hasDanglingComments$1(node)){parts.push(" ",comments.printDanglingComments(path,options,/* sameIndent */true));}if(!isLastCommentLine){parts.push(semi);}return concat$d(parts);}function willPrintOwnComments(path/*, options */){var node=path.getValue();var parent=path.getParentNode();return(node&&(isJSXNode$1(node)||hasFlowShorthandAnnotationComment$2(node)||parent&&(parent.type==="CallExpression"||parent.type==="OptionalCallExpression")&&(hasFlowAnnotationComment$1(node.leadingComments)||hasFlowAnnotationComment$1(node.trailingComments)))||parent&&(parent.type==="JSXSpreadAttribute"||parent.type==="JSXSpreadChild"||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType"||(parent.type==="ClassDeclaration"||parent.type==="ClassExpression")&&parent.superClass===node))&&(!hasIgnoreComment$4(path)||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType");}function canAttachComment$1(node){return node.type&&node.type!=="CommentBlock"&&node.type!=="CommentLine"&&node.type!=="Line"&&node.type!=="Block"&&node.type!=="EmptyStatement"&&node.type!=="TemplateElement"&&node.type!=="Import";}function printComment$2(commentPath,options){var comment=commentPath.getValue();switch(comment.type){case"CommentBlock":case"Block":{if(isIndentableBlockComment(comment)){var printed=printIndentableBlockComment(comment);// We need to prevent an edge case of a previous trailing comment\n// printed as a `lineSuffix` which causes the comments to be\n// interleaved. See https://github.com/prettier/prettier/issues/4412\nif(comment.trailing&&!hasNewline$5(options.originalText,options.locStart(comment),{backwards:true})){return concat$d([hardline$9,printed]);}return printed;}var commentEnd=options.locEnd(comment);var isInsideFlowComment=options.originalText.slice(commentEnd-3,commentEnd)==="*-/";return"/*"+comment.value+(isInsideFlowComment?"*-/":"*/");}case"CommentLine":case"Line":// Print shebangs with the proper comment characters\nif(options.originalText.slice(options.locStart(comment)).startsWith("#!")){return"#!"+comment.value.trimEnd();}return"//"+comment.value.trimEnd();default:throw new Error("Not a comment: "+JSON.stringify(comment));}}function isIndentableBlockComment(comment){// If the comment has multiple lines and every line starts with a star\n// we can fix the indentation of each line. The stars in the `/*` and\n// `*/` delimiters are not included in the comment value, so add them\n// back first.\nvar lines="*".concat(comment.value,"*").split("\\n");return lines.length>1&&lines.every(function(line){return line.trim()[0]==="*";});}function printIndentableBlockComment(comment){var lines=comment.value.split("\\n");return concat$d(["/*",join$9(hardline$9,lines.map(function(line,index){return index===0?line.trimEnd():" "+(index<lines.length-1?line.trim():line.trimStart());})),"*/"]);}var printerEstree={preprocess:preprocess_1$1,print:genericPrint$3,embed:embed_1$1,insertPragma:insertPragma$7,massageAstNode:clean_1$1,hasPrettierIgnore:hasPrettierIgnore$5,willPrintOwnComments:willPrintOwnComments,canAttachComment:canAttachComment$1,printComment:printComment$2,isBlockComment:comments$1.isBlockComment,handleComments:{ownLine:comments$1.handleOwnLineComment,endOfLine:comments$1.handleEndOfLineComment,remaining:comments$1.handleRemainingComment},getGapRegex:comments$1.getGapRegex,getCommentChildNodes:comments$1.getCommentChildNodes};var _document$builders11=document.builders,concat$e=_document$builders11.concat,hardline$a=_document$builders11.hardline,indent$8=_document$builders11.indent,join$a=_document$builders11.join;function genericPrint$4(path,options,print){var node=path.getValue();switch(node.type){case"JsonRoot":return concat$e([path.call(print,"node"),hardline$a]);case"ArrayExpression":return node.elements.length===0?"[]":concat$e(["[",indent$8(concat$e([hardline$a,join$a(concat$e([",",hardline$a]),path.map(print,"elements"))])),hardline$a,"]"]);case"ObjectExpression":return node.properties.length===0?"{}":concat$e(["{",indent$8(concat$e([hardline$a,join$a(concat$e([",",hardline$a]),path.map(print,"properties"))])),hardline$a,"}"]);case"ObjectProperty":return concat$e([path.call(print,"key"),": ",path.call(print,"value")]);case"UnaryExpression":return concat$e([node.operator==="+"?"":node.operator,path.call(print,"argument")]);case"NullLiteral":return"null";case"BooleanLiteral":return node.value?"true":"false";case"StringLiteral":case"NumericLiteral":return JSON.stringify(node.value);case"Identifier":return JSON.stringify(node.name);default:/* istanbul ignore next */throw new Error("unknown type: "+JSON.stringify(node.type));}}function clean$5(node,newNode/*, parent*/){delete newNode.start;delete newNode.end;delete newNode.extra;delete newNode.loc;delete newNode.comments;delete newNode.errors;if(node.type==="Identifier"){return{type:"StringLiteral",value:node.name};}if(node.type==="UnaryExpression"&&node.operator==="+"){return newNode.argument;}}var printerEstreeJson={preprocess:preprocess_1$1,print:genericPrint$4,massageAstNode:clean$5};var CATEGORY_JAVASCRIPT="JavaScript";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar options$5={arrowParens:{since:"1.9.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSpacing:commonOptions.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:false,description:"Put > on the last line instead of at a new line."},semi:{since:"1.0.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:true,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:commonOptions.singleQuote,jsxSingleQuote:{since:"1.15.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:false,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:[{since:"0.0.0",value:false},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]}};var name$9="JavaScript";var type$8="programming";var tmScope$8="source.js";var aceMode$8="javascript";var codemirrorMode$4="javascript";var codemirrorMimeType$4="text/javascript";var color$3="#f1e05a";var aliases$2=["js","node"];var extensions$8=[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".jsb",".jscad",".jsfl",".jsm",".jss",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"];var filenames=["Jakefile"];var interpreters=["chakra","d8","gjs","js","node","qjs","rhino","v8","v8-shell"];var languageId$8=183;var JavaScript={name:name$9,type:type$8,tmScope:tmScope$8,aceMode:aceMode$8,codemirrorMode:codemirrorMode$4,codemirrorMimeType:codemirrorMimeType$4,color:color$3,aliases:aliases$2,extensions:extensions$8,filenames:filenames,interpreters:interpreters,languageId:languageId$8};var JavaScript$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$9,type:type$8,tmScope:tmScope$8,aceMode:aceMode$8,codemirrorMode:codemirrorMode$4,codemirrorMimeType:codemirrorMimeType$4,color:color$3,aliases:aliases$2,extensions:extensions$8,filenames:filenames,interpreters:interpreters,languageId:languageId$8,\'default\':JavaScript});var name$a="JSX";var type$9="programming";var group$c="JavaScript";var extensions$9=[".jsx"];var tmScope$9="source.js.jsx";var aceMode$9="javascript";var codemirrorMode$5="jsx";var codemirrorMimeType$5="text/jsx";var languageId$9=178;var JSX={name:name$a,type:type$9,group:group$c,extensions:extensions$9,tmScope:tmScope$9,aceMode:aceMode$9,codemirrorMode:codemirrorMode$5,codemirrorMimeType:codemirrorMimeType$5,languageId:languageId$9};var JSX$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$a,type:type$9,group:group$c,extensions:extensions$9,tmScope:tmScope$9,aceMode:aceMode$9,codemirrorMode:codemirrorMode$5,codemirrorMimeType:codemirrorMimeType$5,languageId:languageId$9,\'default\':JSX});var name$b="TypeScript";var type$a="programming";var color$4="#2b7489";var aliases$3=["ts"];var interpreters$1=["deno","ts-node"];var extensions$a=[".ts"];var tmScope$a="source.ts";var aceMode$a="typescript";var codemirrorMode$6="javascript";var codemirrorMimeType$6="application/typescript";var languageId$a=378;var TypeScript={name:name$b,type:type$a,color:color$4,aliases:aliases$3,interpreters:interpreters$1,extensions:extensions$a,tmScope:tmScope$a,aceMode:aceMode$a,codemirrorMode:codemirrorMode$6,codemirrorMimeType:codemirrorMimeType$6,languageId:languageId$a};var TypeScript$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$b,type:type$a,color:color$4,aliases:aliases$3,interpreters:interpreters$1,extensions:extensions$a,tmScope:tmScope$a,aceMode:aceMode$a,codemirrorMode:codemirrorMode$6,codemirrorMimeType:codemirrorMimeType$6,languageId:languageId$a,\'default\':TypeScript});var name$c="TSX";var type$b="programming";var group$d="TypeScript";var extensions$b=[".tsx"];var tmScope$b="source.tsx";var aceMode$b="javascript";var codemirrorMode$7="jsx";var codemirrorMimeType$7="text/jsx";var languageId$b=94901924;var TSX={name:name$c,type:type$b,group:group$d,extensions:extensions$b,tmScope:tmScope$b,aceMode:aceMode$b,codemirrorMode:codemirrorMode$7,codemirrorMimeType:codemirrorMimeType$7,languageId:languageId$b};var TSX$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$c,type:type$b,group:group$d,extensions:extensions$b,tmScope:tmScope$b,aceMode:aceMode$b,codemirrorMode:codemirrorMode$7,codemirrorMimeType:codemirrorMimeType$7,languageId:languageId$b,\'default\':TSX});var name$d="JSON";var type$c="data";var tmScope$c="source.json";var aceMode$c="json";var codemirrorMode$8="javascript";var codemirrorMimeType$8="application/json";var searchable=false;var extensions$c=[".json",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"];var filenames$1=[".arcconfig",".htmlhintrc",".tern-config",".tern-project",".watchmanconfig","composer.lock","mcmod.info"];var languageId$c=174;var _JSON={name:name$d,type:type$c,tmScope:tmScope$c,aceMode:aceMode$c,codemirrorMode:codemirrorMode$8,codemirrorMimeType:codemirrorMimeType$8,searchable:searchable,extensions:extensions$c,filenames:filenames$1,languageId:languageId$c};var _JSON$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$d,type:type$c,tmScope:tmScope$c,aceMode:aceMode$c,codemirrorMode:codemirrorMode$8,codemirrorMimeType:codemirrorMimeType$8,searchable:searchable,extensions:extensions$c,filenames:filenames$1,languageId:languageId$c,\'default\':_JSON});var name$e="JSON with Comments";var type$d="data";var group$e="JSON";var tmScope$d="source.js";var aceMode$d="javascript";var codemirrorMode$9="javascript";var codemirrorMimeType$9="text/javascript";var aliases$4=["jsonc"];var extensions$d=[".jsonc",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"];var filenames$2=[".babelrc",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","jsconfig.json","language-configuration.json","tsconfig.json"];var languageId$d=423;var JSON_with_Comments={name:name$e,type:type$d,group:group$e,tmScope:tmScope$d,aceMode:aceMode$d,codemirrorMode:codemirrorMode$9,codemirrorMimeType:codemirrorMimeType$9,aliases:aliases$4,extensions:extensions$d,filenames:filenames$2,languageId:languageId$d};var JSON_with_Comments$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$e,type:type$d,group:group$e,tmScope:tmScope$d,aceMode:aceMode$d,codemirrorMode:codemirrorMode$9,codemirrorMimeType:codemirrorMimeType$9,aliases:aliases$4,extensions:extensions$d,filenames:filenames$2,languageId:languageId$d,\'default\':JSON_with_Comments});var name$f="JSON5";var type$e="data";var extensions$e=[".json5"];var tmScope$e="source.js";var aceMode$e="javascript";var codemirrorMode$a="javascript";var codemirrorMimeType$a="application/json";var languageId$e=175;var JSON5={name:name$f,type:type$e,extensions:extensions$e,tmScope:tmScope$e,aceMode:aceMode$e,codemirrorMode:codemirrorMode$a,codemirrorMimeType:codemirrorMimeType$a,languageId:languageId$e};var JSON5$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$f,type:type$e,extensions:extensions$e,tmScope:tmScope$e,aceMode:aceMode$e,codemirrorMode:codemirrorMode$a,codemirrorMimeType:codemirrorMimeType$a,languageId:languageId$e,\'default\':JSON5});var require$$0$6=getCjsExportFromNamespace(JavaScript$1);var require$$1$2=getCjsExportFromNamespace(JSX$1);var require$$2$1=getCjsExportFromNamespace(TypeScript$1);var require$$3$1=getCjsExportFromNamespace(TSX$1);var require$$4=getCjsExportFromNamespace(_JSON$1);var require$$5=getCjsExportFromNamespace(JSON_with_Comments$1);var require$$6=getCjsExportFromNamespace(JSON5$1);var languages$4=[createLanguage(require$$0$6,function(data){return{since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascript","mongo"],interpreters:data.interpreters.concat(["nodejs"])};}),createLanguage(require$$0$6,function(){return{name:"Flow",since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]};}),createLanguage(require$$1$2,function(){return{since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascriptreact"]};}),createLanguage(require$$2$1,function(){return{since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]};}),createLanguage(require$$3$1,function(){return{since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]};}),createLanguage(require$$4,function(){return{name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[],// .json file defaults to json instead of json-stringify\nfilenames:["package.json","package-lock.json","composer.json"]};}),createLanguage(require$$4,function(data){return{since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],filenames:data.filenames.concat([".prettierrc"])};}),createLanguage(require$$5,function(data){return{since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:data.filenames.concat([".eslintrc"])};}),createLanguage(require$$6,function(){return{since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]};})];var printers$4={estree:printerEstree,"estree-json":printerEstreeJson};var languageJs={languages:languages$4,options:options$5,printers:printers$4};var json$1={"cjkPattern":"[\\\\u02ea-\\\\u02eb\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u3000-\\\\u303f\\\\u3041-\\\\u3096\\\\u3099-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312f\\\\u3131-\\\\u318e\\\\u3190-\\\\u3191\\\\u3196-\\\\u31ba\\\\u31c0-\\\\u31e3\\\\u31f0-\\\\u321e\\\\u322a-\\\\u3247\\\\u3260-\\\\u327e\\\\u328a-\\\\u32b0\\\\u32c0-\\\\u32cb\\\\u32d0-\\\\u3370\\\\u337b-\\\\u337f\\\\u33e0-\\\\u33fe\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fef\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufe10-\\\\ufe1f\\\\ufe30-\\\\ufe6f\\\\uff00-\\\\uffef]|[\\\\ud840-\\\\ud868\\\\ud86a-\\\\ud86c\\\\ud86f-\\\\ud872\\\\ud874-\\\\ud879][\\\\udc00-\\\\udfff]|\\\\ud82c[\\\\udc00-\\\\udd1e\\\\udd50-\\\\udd52\\\\udd64-\\\\udd67]|\\\\ud83c[\\\\ude00\\\\ude50-\\\\ude51]|\\\\ud869[\\\\udc00-\\\\uded6\\\\udf00-\\\\udfff]|\\\\ud86d[\\\\udc00-\\\\udf34\\\\udf40-\\\\udfff]|\\\\ud86e[\\\\udc00-\\\\udc1d\\\\udc20-\\\\udfff]|\\\\ud873[\\\\udc00-\\\\udea1\\\\udeb0-\\\\udfff]|\\\\ud87a[\\\\udc00-\\\\udfe0]|\\\\ud87e[\\\\udc00-\\\\ude1d]","kPattern":"[\\\\u1100-\\\\u11ff\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3013-\\\\u301f\\\\u302e-\\\\u3030\\\\u3037\\\\u30fb\\\\u3131-\\\\u318e\\\\u3200-\\\\u321e\\\\u3260-\\\\u327e\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\ufe45-\\\\ufe46\\\\uff61-\\\\uff65\\\\uffa0-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]","punctuationPattern":"[\\\\u0021-\\\\u002f\\\\u003a-\\\\u0040\\\\u005b-\\\\u0060\\\\u007b-\\\\u007e\\\\u00a1\\\\u00a7\\\\u00ab\\\\u00b6-\\\\u00b7\\\\u00bb\\\\u00bf\\\\u037e\\\\u0387\\\\u055a-\\\\u055f\\\\u0589-\\\\u058a\\\\u05be\\\\u05c0\\\\u05c3\\\\u05c6\\\\u05f3-\\\\u05f4\\\\u0609-\\\\u060a\\\\u060c-\\\\u060d\\\\u061b\\\\u061e-\\\\u061f\\\\u066a-\\\\u066d\\\\u06d4\\\\u0700-\\\\u070d\\\\u07f7-\\\\u07f9\\\\u0830-\\\\u083e\\\\u085e\\\\u0964-\\\\u0965\\\\u0970\\\\u09fd\\\\u0a76\\\\u0af0\\\\u0c77\\\\u0c84\\\\u0df4\\\\u0e4f\\\\u0e5a-\\\\u0e5b\\\\u0f04-\\\\u0f12\\\\u0f14\\\\u0f3a-\\\\u0f3d\\\\u0f85\\\\u0fd0-\\\\u0fd4\\\\u0fd9-\\\\u0fda\\\\u104a-\\\\u104f\\\\u10fb\\\\u1360-\\\\u1368\\\\u1400\\\\u166e\\\\u169b-\\\\u169c\\\\u16eb-\\\\u16ed\\\\u1735-\\\\u1736\\\\u17d4-\\\\u17d6\\\\u17d8-\\\\u17da\\\\u1800-\\\\u180a\\\\u1944-\\\\u1945\\\\u1a1e-\\\\u1a1f\\\\u1aa0-\\\\u1aa6\\\\u1aa8-\\\\u1aad\\\\u1b5a-\\\\u1b60\\\\u1bfc-\\\\u1bff\\\\u1c3b-\\\\u1c3f\\\\u1c7e-\\\\u1c7f\\\\u1cc0-\\\\u1cc7\\\\u1cd3\\\\u2010-\\\\u2027\\\\u2030-\\\\u2043\\\\u2045-\\\\u2051\\\\u2053-\\\\u205e\\\\u207d-\\\\u207e\\\\u208d-\\\\u208e\\\\u2308-\\\\u230b\\\\u2329-\\\\u232a\\\\u2768-\\\\u2775\\\\u27c5-\\\\u27c6\\\\u27e6-\\\\u27ef\\\\u2983-\\\\u2998\\\\u29d8-\\\\u29db\\\\u29fc-\\\\u29fd\\\\u2cf9-\\\\u2cfc\\\\u2cfe-\\\\u2cff\\\\u2d70\\\\u2e00-\\\\u2e2e\\\\u2e30-\\\\u2e4f\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3014-\\\\u301f\\\\u3030\\\\u303d\\\\u30a0\\\\u30fb\\\\ua4fe-\\\\ua4ff\\\\ua60d-\\\\ua60f\\\\ua673\\\\ua67e\\\\ua6f2-\\\\ua6f7\\\\ua874-\\\\ua877\\\\ua8ce-\\\\ua8cf\\\\ua8f8-\\\\ua8fa\\\\ua8fc\\\\ua92e-\\\\ua92f\\\\ua95f\\\\ua9c1-\\\\ua9cd\\\\ua9de-\\\\ua9df\\\\uaa5c-\\\\uaa5f\\\\uaade-\\\\uaadf\\\\uaaf0-\\\\uaaf1\\\\uabeb\\\\ufd3e-\\\\ufd3f\\\\ufe10-\\\\ufe19\\\\ufe30-\\\\ufe52\\\\ufe54-\\\\ufe61\\\\ufe63\\\\ufe68\\\\ufe6a-\\\\ufe6b\\\\uff01-\\\\uff03\\\\uff05-\\\\uff0a\\\\uff0c-\\\\uff0f\\\\uff1a-\\\\uff1b\\\\uff1f-\\\\uff20\\\\uff3b-\\\\uff3d\\\\uff3f\\\\uff5b\\\\uff5d\\\\uff5f-\\\\uff65]|\\\\ud800[\\\\udd00-\\\\udd02\\\\udf9f\\\\udfd0]|\\\\ud801[\\\\udd6f]|\\\\ud802[\\\\udc57\\\\udd1f\\\\udd3f\\\\ude50-\\\\ude58\\\\ude7f\\\\udef0-\\\\udef6\\\\udf39-\\\\udf3f\\\\udf99-\\\\udf9c]|\\\\ud803[\\\\udf55-\\\\udf59]|\\\\ud804[\\\\udc47-\\\\udc4d\\\\udcbb-\\\\udcbc\\\\udcbe-\\\\udcc1\\\\udd40-\\\\udd43\\\\udd74-\\\\udd75\\\\uddc5-\\\\uddc8\\\\uddcd\\\\udddb\\\\udddd-\\\\udddf\\\\ude38-\\\\ude3d\\\\udea9]|\\\\ud805[\\\\udc4b-\\\\udc4f\\\\udc5b\\\\udc5d\\\\udcc6\\\\uddc1-\\\\uddd7\\\\ude41-\\\\ude43\\\\ude60-\\\\ude6c\\\\udf3c-\\\\udf3e]|\\\\ud806[\\\\udc3b\\\\udde2\\\\ude3f-\\\\ude46\\\\ude9a-\\\\ude9c\\\\ude9e-\\\\udea2]|\\\\ud807[\\\\udc41-\\\\udc45\\\\udc70-\\\\udc71\\\\udef7-\\\\udef8\\\\udfff]|\\\\ud809[\\\\udc70-\\\\udc74]|\\\\ud81a[\\\\ude6e-\\\\ude6f\\\\udef5\\\\udf37-\\\\udf3b\\\\udf44]|\\\\ud81b[\\\\ude97-\\\\ude9a\\\\udfe2]|\\\\ud82f[\\\\udc9f]|\\\\ud836[\\\\ude87-\\\\ude8b]|\\\\ud83a[\\\\udd5e-\\\\udd5f]"};var cjkPattern=json$1.cjkPattern,kPattern=json$1.kPattern,punctuationPattern=json$1.punctuationPattern;var getLast$4=util$1.getLast;var INLINE_NODE_TYPES=["liquidNode","inlineCode","emphasis","strong","delete","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"];var INLINE_NODE_WRAPPER_TYPES=INLINE_NODE_TYPES.concat(["tableCell","paragraph","heading"]);var kRegex=new RegExp(kPattern);var punctuationRegex=new RegExp(punctuationPattern);/**\n   * split text into whitespaces and words\n   * @param {string} text\n   * @return {Array<{ type: "whitespace", value: " " | "\\n" | "" } | { type: "word", value: string }>}\n   */function splitText(text,options){var KIND_NON_CJK="non-cjk";var KIND_CJ_LETTER="cj-letter";var KIND_K_LETTER="k-letter";var KIND_CJK_PUNCTUATION="cjk-punctuation";var nodes=[];(options.proseWrap==="preserve"?text:text.replace(new RegExp("(".concat(cjkPattern,")\\n(").concat(cjkPattern,")"),"g"),"$1$2")).split(/([ \\t\\n]+)/).forEach(function(token,index,tokens){// whitespace\nif(index%2===1){nodes.push({type:"whitespace",value:/\\n/.test(token)?"\\n":" "});return;}// word separated by whitespace\nif((index===0||index===tokens.length-1)&&token===""){return;}token.split(new RegExp("(".concat(cjkPattern,")"))).forEach(function(innerToken,innerIndex,innerTokens){if((innerIndex===0||innerIndex===innerTokens.length-1)&&innerToken===""){return;}// non-CJK word\nif(innerIndex%2===0){if(innerToken!==""){appendNode({type:"word",value:innerToken,kind:KIND_NON_CJK,hasLeadingPunctuation:punctuationRegex.test(innerToken[0]),hasTrailingPunctuation:punctuationRegex.test(getLast$4(innerToken))});}return;}// CJK character\nappendNode(punctuationRegex.test(innerToken)?{type:"word",value:innerToken,kind:KIND_CJK_PUNCTUATION,hasLeadingPunctuation:true,hasTrailingPunctuation:true}:{type:"word",value:innerToken,kind:kRegex.test(innerToken)?KIND_K_LETTER:KIND_CJ_LETTER,hasLeadingPunctuation:false,hasTrailingPunctuation:false});});});return nodes;function appendNode(node){var lastNode=getLast$4(nodes);if(lastNode&&lastNode.type==="word"){if(lastNode.kind===KIND_NON_CJK&&node.kind===KIND_CJ_LETTER&&!lastNode.hasTrailingPunctuation||lastNode.kind===KIND_CJ_LETTER&&node.kind===KIND_NON_CJK&&!node.hasLeadingPunctuation){nodes.push({type:"whitespace",value:" "});}else if(!isBetween(KIND_NON_CJK,KIND_CJK_PUNCTUATION)&&// disallow leading/trailing full-width whitespace\n![lastNode.value,node.value].some(function(value){return /\\u3000/.test(value);})){nodes.push({type:"whitespace",value:""});}}nodes.push(node);function isBetween(kind1,kind2){return lastNode.kind===kind1&&node.kind===kind2||lastNode.kind===kind2&&node.kind===kind1;}}}function getOrderedListItemInfo(orderListItem,originalText){var _originalText$slice$m=originalText.slice(orderListItem.position.start.offset,orderListItem.position.end.offset).match(/^\\s*(\\d+)(\\.|\\))(\\s*)/),_originalText$slice$m2=(0,_slicedToArray2.default)(_originalText$slice$m,4),numberText=_originalText$slice$m2[1],marker=_originalText$slice$m2[2],leadingSpaces=_originalText$slice$m2[3];return{numberText:numberText,marker:marker,leadingSpaces:leadingSpaces};}function hasGitDiffFriendlyOrderedList(node,options){if(!node.ordered){return false;}if(node.children.length<2){return false;}var firstNumber=Number(getOrderedListItemInfo(node.children[0],options.originalText).numberText);var secondNumber=Number(getOrderedListItemInfo(node.children[1],options.originalText).numberText);if(firstNumber===0&&node.children.length>2){var thirdNumber=Number(getOrderedListItemInfo(node.children[2],options.originalText).numberText);return secondNumber===1&&thirdNumber===1;}return secondNumber===1;}// workaround for https://github.com/remarkjs/remark/issues/351\n// leading and trailing newlines are stripped by remark\nfunction getFencedCodeBlockValue(node,originalText){var text=originalText.slice(node.position.start.offset,node.position.end.offset);var leadingSpaceCount=text.match(/^\\s*/)[0].length;var replaceRegex=new RegExp("^\\\\s{0,".concat(leadingSpaceCount,"}"));var lineContents=text.split("\\n");var markerStyle=text[leadingSpaceCount];// ` or ~\nvar marker=text.slice(leadingSpaceCount).match(new RegExp("^[".concat(markerStyle,"]+")))[0];// https://spec.commonmark.org/0.28/#example-104: Closing fences may be indented by 0-3 spaces\n// https://spec.commonmark.org/0.28/#example-93: The closing code fence must be at least as long as the opening fence\nvar hasEndMarker=new RegExp("^\\\\s{0,3}".concat(marker)).test(lineContents[lineContents.length-1].slice(getIndent(lineContents.length-1)));return lineContents.slice(1,hasEndMarker?-1:undefined).map(function(x,i){return x.slice(getIndent(i+1)).replace(replaceRegex,"");}).join("\\n");function getIndent(lineIndex){return node.position.indent[lineIndex-1]-1;}}function mapAst(ast,handler){return function preorder(node,index,parentStack){parentStack=parentStack||[];var newNode=Object.assign({},handler(node,index,parentStack));if(newNode.children){newNode.children=newNode.children.map(function(child,index){return preorder(child,index,[newNode].concat(parentStack));});}return newNode;}(ast,null,null);}var utils$6={mapAst:mapAst,splitText:splitText,punctuationPattern:punctuationPattern,getFencedCodeBlockValue:getFencedCodeBlockValue,getOrderedListItemInfo:getOrderedListItemInfo,hasGitDiffFriendlyOrderedList:hasGitDiffFriendlyOrderedList,INLINE_NODE_TYPES:INLINE_NODE_TYPES,INLINE_NODE_WRAPPER_TYPES:INLINE_NODE_WRAPPER_TYPES};var _document$builders12=document.builders,hardline$b=_document$builders12.hardline,literalline$5=_document$builders12.literalline,concat$f=_document$builders12.concat,markAsRoot$3=_document$builders12.markAsRoot,mapDoc$4=document.utils.mapDoc;var getFencedCodeBlockValue$1=utils$6.getFencedCodeBlockValue;function embed$4(path,print,textToDoc,options){var node=path.getValue();if(node.type==="code"&&node.lang!==null){// only look for the first string so as to support [markdown-preview-enhanced](https://shd101wyy.github.io/markdown-preview-enhanced/#/code-chunk)\nvar langMatch=node.lang.match(/^[A-Za-z0-9_-]+/);var lang=langMatch?langMatch[0]:"";var _parser2=getParserName(lang);if(_parser2){var styleUnit=options.__inJsTemplate?"~":"`";var _style7=styleUnit.repeat(Math.max(3,util$1.getMaxContinuousCount(node.value,styleUnit)+1));var _doc6=textToDoc(getFencedCodeBlockValue$1(node,options.originalText),{parser:_parser2});return markAsRoot$3(concat$f([_style7,node.lang,hardline$b,replaceNewlinesWithLiterallines(_doc6),_style7]));}}if(node.type==="yaml"){return markAsRoot$3(concat$f(["---",hardline$b,node.value&&node.value.trim()?replaceNewlinesWithLiterallines(textToDoc(node.value,{parser:"yaml"})):"","---"]));}// MDX\nswitch(node.type){case"importExport":return textToDoc(node.value,{parser:"babel"});case"jsx":return textToDoc("<$>".concat(node.value,"</$>"),{parser:"__js_expression",rootMarker:"mdx"});}return null;function getParserName(lang){var supportInfo=support.getSupportInfo({plugins:options.plugins});var language=supportInfo.languages.find(function(language){return language.name.toLowerCase()===lang||language.aliases&&language.aliases.includes(lang)||language.extensions&&language.extensions.find(function(ext){return ext===".".concat(lang);});});if(language){return language.parsers[0];}return null;}function replaceNewlinesWithLiterallines(doc){return mapDoc$4(doc,function(currentDoc){return typeof currentDoc==="string"&&currentDoc.includes("\\n")?concat$f(currentDoc.split(/(\\n)/g).map(function(v,i){return i%2===0?v:literalline$5;})):currentDoc;});}}var embed_1$2=embed$4;var pragmas=["format","prettier"];function startWithPragma(text){var pragma="@(".concat(pragmas.join("|"),")");var regex=new RegExp(["\x3c!--\\\\s*".concat(pragma,"\\\\s*--\x3e"),"\x3c!--.*\\r?\\n[\\\\s\\\\S]*(^|\\n)[^\\\\S\\n]*".concat(pragma,"[^\\\\S\\n]*($|\\n)[\\\\s\\\\S]*\\n.*--\x3e")].join("|"),"m");var matched=text.match(regex);return matched&&matched.index===0;}var pragma$4={startWithPragma:startWithPragma,hasPragma:function hasPragma(text){return startWithPragma(frontMatter(text).content.trimStart());},insertPragma:function insertPragma(text){var extracted=frontMatter(text);var pragma="\x3c!-- @".concat(pragmas[0]," --\x3e");return extracted.frontMatter?"".concat(extracted.frontMatter.raw,"\\n\\n").concat(pragma,"\\n\\n").concat(extracted.content):"".concat(pragma,"\\n\\n").concat(extracted.content);}};var getOrderedListItemInfo$1=utils$6.getOrderedListItemInfo,mapAst$1=utils$6.mapAst,splitText$1=utils$6.splitText;// 0x0 ~ 0x10ffff\n// eslint-disable-next-line no-control-regex\nvar isSingleCharRegex=/^([\\u0000-\\uffff]|[\\ud800-\\udbff][\\udc00-\\udfff])$/;function preprocess$2(ast,options){ast=restoreUnescapedCharacter(ast,options);ast=mergeContinuousTexts(ast);ast=transformInlineCode(ast);ast=transformIndentedCodeblockAndMarkItsParentList(ast,options);ast=markAlignedList(ast,options);ast=splitTextIntoSentences(ast,options);ast=transformImportExport(ast);ast=mergeContinuousImportExport(ast);return ast;}function transformImportExport(ast){return mapAst$1(ast,function(node){if(node.type!=="import"&&node.type!=="export"){return node;}return Object.assign({},node,{type:"importExport"});});}function transformInlineCode(ast){return mapAst$1(ast,function(node){if(node.type!=="inlineCode"){return node;}return Object.assign({},node,{value:node.value.replace(/\\s+/g," ")});});}function restoreUnescapedCharacter(ast,options){return mapAst$1(ast,function(node){return node.type!=="text"?node:Object.assign({},node,{value:node.value!=="*"&&node.value!=="_"&&node.value!=="$"&&// handle these cases in printer\nisSingleCharRegex.test(node.value)&&node.position.end.offset-node.position.start.offset!==node.value.length?options.originalText.slice(node.position.start.offset,node.position.end.offset):node.value});});}function mergeContinuousImportExport(ast){return mergeChildren(ast,function(prevNode,node){return prevNode.type==="importExport"&&node.type==="importExport";},function(prevNode,node){return{type:"importExport",value:prevNode.value+"\\n\\n"+node.value,position:{start:prevNode.position.start,end:node.position.end}};});}function mergeChildren(ast,shouldMerge,mergeNode){return mapAst$1(ast,function(node){if(!node.children){return node;}var children=node.children.reduce(function(current,child){var lastChild=current[current.length-1];if(lastChild&&shouldMerge(lastChild,child)){current.splice(-1,1,mergeNode(lastChild,child));}else{current.push(child);}return current;},[]);return Object.assign({},node,{children:children});});}function mergeContinuousTexts(ast){return mergeChildren(ast,function(prevNode,node){return prevNode.type==="text"&&node.type==="text";},function(prevNode,node){return{type:"text",value:prevNode.value+node.value,position:{start:prevNode.position.start,end:node.position.end}};});}function splitTextIntoSentences(ast,options){return mapAst$1(ast,function(node,index,_ref30){var _ref31=(0,_slicedToArray2.default)(_ref30,1),parentNode=_ref31[0];if(node.type!=="text"){return node;}var value=node.value;if(parentNode.type==="paragraph"){if(index===0){value=value.trimStart();}if(index===parentNode.children.length-1){value=value.trimEnd();}}return{type:"sentence",position:node.position,children:splitText$1(value,options)};});}function transformIndentedCodeblockAndMarkItsParentList(ast,options){return mapAst$1(ast,function(node,index,parentStack){if(node.type==="code"){// the first char may point to `\\n`, e.g. `\\n\\t\\tbar`, just ignore it\nvar isIndented=/^\\n?( {4,}|\\t)/.test(options.originalText.slice(node.position.start.offset,node.position.end.offset));node.isIndented=isIndented;if(isIndented){for(var i=0;i<parentStack.length;i++){var parent=parentStack[i];// no need to check checked items\nif(parent.hasIndentedCodeblock){break;}if(parent.type==="list"){parent.hasIndentedCodeblock=true;}}}}return node;});}function markAlignedList(ast,options){return mapAst$1(ast,function(node,index,parentStack){if(node.type==="list"&&node.children.length!==0){// if one of its parents is not aligned, it\'s not possible to be aligned in sub-lists\nfor(var i=0;i<parentStack.length;i++){var parent=parentStack[i];if(parent.type==="list"&&!parent.isAligned){node.isAligned=false;return node;}}node.isAligned=isAligned(node);}return node;});function getListItemStart(listItem){return listItem.children.length===0?-1:listItem.children[0].position.start.column-1;}function isAligned(list){if(!list.ordered){/**\n         * - 123\n         * - 123\n         */return true;}var _list$children=(0,_slicedToArray2.default)(list.children,2),firstItem=_list$children[0],secondItem=_list$children[1];var firstInfo=getOrderedListItemInfo$1(firstItem,options.originalText);if(firstInfo.leadingSpaces.length>1){/**\n         * 1.   123\n         *\n         * 1.   123\n         * 1. 123\n         */return true;}var firstStart=getListItemStart(firstItem);if(firstStart===-1){/**\n         * 1.\n         *\n         * 1.\n         * 1.\n         */return false;}if(list.children.length===1){/**\n         * aligned:\n         *\n         * 11. 123\n         *\n         * not aligned:\n         *\n         * 1. 123\n         */return firstStart%options.tabWidth===0;}var secondStart=getListItemStart(secondItem);if(firstStart!==secondStart){/**\n         * 11. 123\n         * 1. 123\n         *\n         * 1. 123\n         * 11. 123\n         */return false;}if(firstStart%options.tabWidth===0){/**\n         * 11. 123\n         * 12. 123\n         */return true;}/**\n       * aligned:\n       *\n       * 11. 123\n       * 1.  123\n       *\n       * not aligned:\n       *\n       * 1. 123\n       * 2. 123\n       */var secondInfo=getOrderedListItemInfo$1(secondItem,options.originalText);return secondInfo.leadingSpaces.length>1;}}var preprocess_1$2=preprocess$2;var _document$builders13=document.builders,breakParent$4=_document$builders13.breakParent,concat$g=_document$builders13.concat,join$b=_document$builders13.join,line$a=_document$builders13.line,literalline$6=_document$builders13.literalline,markAsRoot$4=_document$builders13.markAsRoot,hardline$c=_document$builders13.hardline,softline$7=_document$builders13.softline,ifBreak$7=_document$builders13.ifBreak,fill$5=_document$builders13.fill,align$2=_document$builders13.align,indent$9=_document$builders13.indent,group$f=_document$builders13.group,mapDoc$5=document.utils.mapDoc,printDocToString$3=document.printer.printDocToString;var getFencedCodeBlockValue$2=utils$6.getFencedCodeBlockValue,hasGitDiffFriendlyOrderedList$1=utils$6.hasGitDiffFriendlyOrderedList,splitText$2=utils$6.splitText,punctuationPattern$1=utils$6.punctuationPattern,INLINE_NODE_TYPES$1=utils$6.INLINE_NODE_TYPES,INLINE_NODE_WRAPPER_TYPES$1=utils$6.INLINE_NODE_WRAPPER_TYPES;var replaceEndOfLineWith$2=util$1.replaceEndOfLineWith;var TRAILING_HARDLINE_NODES=["importExport"];var SINGLE_LINE_NODE_TYPES=["heading","tableCell","link"];var SIBLING_NODE_TYPES=["listItem","definition","footnoteDefinition"];function genericPrint$5(path,options,print){var node=path.getValue();if(shouldRemainTheSameContent(path)){return concat$g(splitText$2(options.originalText.slice(node.position.start.offset,node.position.end.offset),options).map(function(node){return node.type==="word"?node.value:node.value===""?"":printLine(path,node.value,options);}));}switch(node.type){case"root":if(node.children.length===0){return"";}return concat$g([normalizeDoc(printRoot(path,options,print)),!TRAILING_HARDLINE_NODES.includes(getLastDescendantNode(node).type)?hardline$c:""]);case"paragraph":return printChildren$2(path,options,print,{postprocessor:fill$5});case"sentence":return printChildren$2(path,options,print);case"word":return node.value.replace(/[*$]/g,"\\\\$&")// escape all `*` and `$` (math)\n.replace(new RegExp(["(^|".concat(punctuationPattern$1,")(_+)"),"(_+)(".concat(punctuationPattern$1,"|$)")].join("|"),"g"),function(_,text1,underscore1,underscore2,text2){return(underscore1?"".concat(text1).concat(underscore1):"".concat(underscore2).concat(text2)).replace(/_/g,"\\\\_");});// escape all `_` except concating with non-punctuation, e.g. `1_2_3` is not considered emphasis\ncase"whitespace":{var parentNode=path.getParentNode();var _index5=parentNode.children.indexOf(node);var nextNode=parentNode.children[_index5+1];var proseWrap=// leading char that may cause different syntax\nnextNode&&/^>|^([-+*]|#{1,6}|[0-9]+[.)])$/.test(nextNode.value)?"never":options.proseWrap;return printLine(path,node.value,{proseWrap:proseWrap});}case"emphasis":{var _parentNode9=path.getParentNode();var _index6=_parentNode9.children.indexOf(node);var prevNode=_parentNode9.children[_index6-1];var _nextNode=_parentNode9.children[_index6+1];var hasPrevOrNextWord=// `1*2*3` is considered emphasis but `1_2_3` is not\nprevNode&&prevNode.type==="sentence"&&prevNode.children.length>0&&util$1.getLast(prevNode.children).type==="word"&&!util$1.getLast(prevNode.children).hasTrailingPunctuation||_nextNode&&_nextNode.type==="sentence"&&_nextNode.children.length>0&&_nextNode.children[0].type==="word"&&!_nextNode.children[0].hasLeadingPunctuation;var _style8=hasPrevOrNextWord||getAncestorNode$2(path,"emphasis")?"*":"_";return concat$g([_style8,printChildren$2(path,options,print),_style8]);}case"strong":return concat$g(["**",printChildren$2(path,options,print),"**"]);case"delete":return concat$g(["~~",printChildren$2(path,options,print),"~~"]);case"inlineCode":{var backtickCount=util$1.getMinNotPresentContinuousCount(node.value,"`");var _style9="`".repeat(backtickCount||1);var gap=backtickCount?" ":"";return concat$g([_style9,gap,node.value,gap,_style9]);}case"link":switch(options.originalText[node.position.start.offset]){case"<":{var mailto="mailto:";var url=// <hello@example.com> is parsed as { url: "mailto:hello@example.com" }\nnode.url.startsWith(mailto)&&options.originalText.slice(node.position.start.offset+1,node.position.start.offset+1+mailto.length)!==mailto?node.url.slice(mailto.length):node.url;return concat$g(["<",url,">"]);}case"[":return concat$g(["[",printChildren$2(path,options,print),"](",printUrl(node.url,")"),printTitle(node.title,options),")"]);default:return options.originalText.slice(node.position.start.offset,node.position.end.offset);}case"image":return concat$g(["![",node.alt||"","](",printUrl(node.url,")"),printTitle(node.title,options),")"]);case"blockquote":return concat$g(["> ",align$2("> ",printChildren$2(path,options,print))]);case"heading":return concat$g(["#".repeat(node.depth)+" ",printChildren$2(path,options,print)]);case"code":{if(node.isIndented){// indented code block\nvar alignment=" ".repeat(4);return align$2(alignment,concat$g([alignment,concat$g(replaceEndOfLineWith$2(node.value,hardline$c))]));}// fenced code block\nvar styleUnit=options.__inJsTemplate?"~":"`";var _style10=styleUnit.repeat(Math.max(3,util$1.getMaxContinuousCount(node.value,styleUnit)+1));return concat$g([_style10,node.lang||"",hardline$c,concat$g(replaceEndOfLineWith$2(getFencedCodeBlockValue$2(node,options.originalText),hardline$c)),hardline$c,_style10]);}case"yaml":case"toml":return options.originalText.slice(node.position.start.offset,node.position.end.offset);case"html":{var _parentNode10=path.getParentNode();var value=_parentNode10.type==="root"&&util$1.getLast(_parentNode10.children)===node?node.value.trimEnd():node.value;var isHtmlComment=/^\x3c!--[\\s\\S]*--\x3e$/.test(value);return concat$g(replaceEndOfLineWith$2(value,isHtmlComment?hardline$c:markAsRoot$4(literalline$6)));}case"list":{var nthSiblingIndex=getNthListSiblingIndex(node,path.getParentNode());var isGitDiffFriendlyOrderedList=hasGitDiffFriendlyOrderedList$1(node,options);return printChildren$2(path,options,print,{processor:function processor(childPath,index){var prefix=getPrefix();var childNode=childPath.getValue();if(childNode.children.length===2&&childNode.children[1].type==="html"&&childNode.children[0].position.start.column!==childNode.children[1].position.start.column){return concat$g([prefix,printListItem(childPath,options,print,prefix)]);}return concat$g([prefix,align$2(" ".repeat(prefix.length),printListItem(childPath,options,print,prefix))]);function getPrefix(){var rawPrefix=node.ordered?(index===0?node.start:isGitDiffFriendlyOrderedList?1:node.start+index)+(nthSiblingIndex%2===0?". ":") "):nthSiblingIndex%2===0?"- ":"* ";return node.isAligned||/* workaround for https://github.com/remarkjs/remark/issues/315 */node.hasIndentedCodeblock?alignListPrefix(rawPrefix,options):rawPrefix;}}});}case"thematicBreak":{var counter=getAncestorCounter$1(path,"list");if(counter===-1){return"---";}var _nthSiblingIndex=getNthListSiblingIndex(path.getParentNode(counter),path.getParentNode(counter+1));return _nthSiblingIndex%2===0?"***":"---";}case"linkReference":return concat$g(["[",printChildren$2(path,options,print),"]",node.referenceType==="full"?concat$g(["[",node.identifier,"]"]):node.referenceType==="collapsed"?"[]":""]);case"imageReference":switch(node.referenceType){case"full":return concat$g(["![",node.alt||"","][",node.identifier,"]"]);default:return concat$g(["![",node.alt,"]",node.referenceType==="collapsed"?"[]":""]);}case"definition":{var lineOrSpace=options.proseWrap==="always"?line$a:" ";return group$f(concat$g([concat$g(["[",node.identifier,"]:"]),indent$9(concat$g([lineOrSpace,printUrl(node.url),node.title===null?"":concat$g([lineOrSpace,printTitle(node.title,options,false)])]))]));}case"footnote":return concat$g(["[^",printChildren$2(path,options,print),"]"]);case"footnoteReference":return concat$g(["[^",node.identifier,"]"]);case"footnoteDefinition":{var _nextNode2=path.getParentNode().children[path.getName()+1];var shouldInlineFootnote=node.children.length===1&&node.children[0].type==="paragraph"&&(options.proseWrap==="never"||options.proseWrap==="preserve"&&node.children[0].position.start.line===node.children[0].position.end.line);return concat$g(["[^",node.identifier,"]: ",shouldInlineFootnote?printChildren$2(path,options,print):group$f(concat$g([align$2(" ".repeat(options.tabWidth),printChildren$2(path,options,print,{processor:function processor(childPath,index){return index===0?group$f(concat$g([softline$7,childPath.call(print)])):childPath.call(print);}})),_nextNode2&&_nextNode2.type==="footnoteDefinition"?softline$7:""]))]);}case"table":return printTable(path,options,print);case"tableCell":return printChildren$2(path,options,print);case"break":return /\\s/.test(options.originalText[node.position.start.offset])?concat$g(["  ",markAsRoot$4(literalline$6)]):concat$g(["\\\\",hardline$c]);case"liquidNode":return concat$g(replaceEndOfLineWith$2(node.value,hardline$c));// MDX\ncase"importExport":case"jsx":return node.value;// fallback to the original text if multiparser failed\ncase"math":return concat$g(["$$",hardline$c,node.value?concat$g([concat$g(replaceEndOfLineWith$2(node.value,hardline$c)),hardline$c]):"","$$"]);case"inlineMath":{// remark-math trims content but we don\'t want to remove whitespaces\n// since it\'s very possible that it\'s recognized as math accidentally\nreturn options.originalText.slice(options.locStart(node),options.locEnd(node));}case"tableRow":// handled in "table"\ncase"listItem":// handled in "list"\ndefault:throw new Error("Unknown markdown type ".concat(JSON.stringify(node.type)));}}function printListItem(path,options,print,listPrefix){var node=path.getValue();var prefix=node.checked===null?"":node.checked?"[x] ":"[ ] ";return concat$g([prefix,printChildren$2(path,options,print,{processor:function processor(childPath,index){if(index===0&&childPath.getValue().type!=="list"){return align$2(" ".repeat(prefix.length),childPath.call(print));}var alignment=" ".repeat(clamp(options.tabWidth-listPrefix.length,0,3)// 4+ will cause indented code block\n);return concat$g([alignment,align$2(alignment,childPath.call(print))]);}})]);}function alignListPrefix(prefix,options){var additionalSpaces=getAdditionalSpaces();return prefix+" ".repeat(additionalSpaces>=4?0:additionalSpaces// 4+ will cause indented code block\n);function getAdditionalSpaces(){var restSpaces=prefix.length%options.tabWidth;return restSpaces===0?0:options.tabWidth-restSpaces;}}function getNthListSiblingIndex(node,parentNode){return getNthSiblingIndex(node,parentNode,function(siblingNode){return siblingNode.ordered===node.ordered;});}function getNthSiblingIndex(node,parentNode,condition){condition=condition||function(){return true;};var index=-1;var _iterator41=_createForOfIteratorHelper(parentNode.children),_step41;try{for(_iterator41.s();!(_step41=_iterator41.n()).done;){var childNode=_step41.value;if(childNode.type===node.type&&condition(childNode)){index++;}else{index=-1;}if(childNode===node){return index;}}}catch(err){_iterator41.e(err);}finally{_iterator41.f();}}function getAncestorCounter$1(path,typeOrTypes){var types=[].concat(typeOrTypes);var counter=-1;var ancestorNode;while(ancestorNode=path.getParentNode(++counter)){if(types.includes(ancestorNode.type)){return counter;}}return-1;}function getAncestorNode$2(path,typeOrTypes){var counter=getAncestorCounter$1(path,typeOrTypes);return counter===-1?null:path.getParentNode(counter);}function printLine(path,value,options){if(options.proseWrap==="preserve"&&value==="\\n"){return hardline$c;}var isBreakable=options.proseWrap==="always"&&!getAncestorNode$2(path,SINGLE_LINE_NODE_TYPES);return value!==""?isBreakable?line$a:" ":isBreakable?softline$7:"";}function printTable(path,options,print){var hardlineWithoutBreakParent=hardline$c.parts[0];var node=path.getValue();var contents=[];// { [rowIndex: number]: { [columnIndex: number]: string } }\npath.map(function(rowPath){var rowContents=[];rowPath.map(function(cellPath){rowContents.push(printDocToString$3(cellPath.call(print),options).formatted);},"children");contents.push(rowContents);},"children");// Get the width of each column\nvar columnMaxWidths=contents.reduce(function(currentWidths,rowContents){return currentWidths.map(function(width,columnIndex){return Math.max(width,util$1.getStringWidth(rowContents[columnIndex]));});},contents[0].map(function(){return 3;})// minimum width = 3 (---, :--, :-:, --:)\n);var alignedTable=join$b(hardlineWithoutBreakParent,[printRow(contents[0]),printSeparator(),join$b(hardlineWithoutBreakParent,contents.slice(1).map(function(rowContents){return printRow(rowContents);}))]);if(options.proseWrap!=="never"){return concat$g([breakParent$4,alignedTable]);}// Only if the --prose-wrap never is set and it exceeds the print width.\nvar compactTable=join$b(hardlineWithoutBreakParent,[printRow(contents[0],/* isCompact */true),printSeparator(/* isCompact */true),join$b(hardlineWithoutBreakParent,contents.slice(1).map(function(rowContents){return printRow(rowContents,/* isCompact */true);}))]);return concat$g([breakParent$4,group$f(ifBreak$7(compactTable,alignedTable))]);function printSeparator(isCompact){return concat$g(["| ",join$b(" | ",columnMaxWidths.map(function(width,index){var spaces=isCompact?3:width;switch(node.align[index]){case"left":return":"+"-".repeat(spaces-1);case"right":return"-".repeat(spaces-1)+":";case"center":return":"+"-".repeat(spaces-2)+":";default:return"-".repeat(spaces);}}))," |"]);}function printRow(rowContents,isCompact){return concat$g(["| ",join$b(" | ",isCompact?rowContents:rowContents.map(function(rowContent,columnIndex){switch(node.align[columnIndex]){case"right":return alignRight(rowContent,columnMaxWidths[columnIndex]);case"center":return alignCenter(rowContent,columnMaxWidths[columnIndex]);default:return alignLeft(rowContent,columnMaxWidths[columnIndex]);}}))," |"]);}function alignLeft(text,width){var spaces=width-util$1.getStringWidth(text);return concat$g([text," ".repeat(spaces)]);}function alignRight(text,width){var spaces=width-util$1.getStringWidth(text);return concat$g([" ".repeat(spaces),text]);}function alignCenter(text,width){var spaces=width-util$1.getStringWidth(text);var left=Math.floor(spaces/2);var right=spaces-left;return concat$g([" ".repeat(left),text," ".repeat(right)]);}}function printRoot(path,options,print){/** @typedef {{ index: number, offset: number }} IgnorePosition */ /** @type {Array<{start: IgnorePosition, end: IgnorePosition}>} */var ignoreRanges=[];/** @type {IgnorePosition | null} */var ignoreStart=null;var _path$getValue=path.getValue(),children=_path$getValue.children;children.forEach(function(childNode,index){switch(isPrettierIgnore$1(childNode)){case"start":if(ignoreStart===null){ignoreStart={index:index,offset:childNode.position.end.offset};}break;case"end":if(ignoreStart!==null){ignoreRanges.push({start:ignoreStart,end:{index:index,offset:childNode.position.start.offset}});ignoreStart=null;}break;}});return printChildren$2(path,options,print,{processor:function processor(childPath,index){if(ignoreRanges.length!==0){var ignoreRange=ignoreRanges[0];if(index===ignoreRange.start.index){return concat$g([children[ignoreRange.start.index].value,options.originalText.slice(ignoreRange.start.offset,ignoreRange.end.offset),children[ignoreRange.end.index].value]);}if(ignoreRange.start.index<index&&index<ignoreRange.end.index){return false;}if(index===ignoreRange.end.index){ignoreRanges.shift();return false;}}return childPath.call(print);}});}function printChildren$2(path,options,print,events){events=events||{};var postprocessor=events.postprocessor||concat$g;var processor=events.processor||function(childPath){return childPath.call(print);};var node=path.getValue();var parts=[];var lastChildNode;path.map(function(childPath,index){var childNode=childPath.getValue();var result=processor(childPath,index);if(result!==false){var _data={parts:parts,prevNode:lastChildNode,parentNode:node,options:options};if(!shouldNotPrePrintHardline(childNode,_data)){parts.push(hardline$c);if(lastChildNode&&TRAILING_HARDLINE_NODES.includes(lastChildNode.type)){if(shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}}else{if(shouldPrePrintDoubleHardline(childNode,_data)||shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}if(shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}}}parts.push(result);lastChildNode=childNode;}},"children");return postprocessor(parts);}function getLastDescendantNode(node){var current=node;while(current.children&&current.children.length!==0){current=current.children[current.children.length-1];}return current;}/** @return {false | \'next\' | \'start\' | \'end\'} */function isPrettierIgnore$1(node){if(node.type!=="html"){return false;}var match=node.value.match(/^\x3c!--\\s*prettier-ignore(?:-(start|end))?\\s*--\x3e$/);return match===null?false:match[1]?match[1]:"next";}function shouldNotPrePrintHardline(node,data){var isFirstNode=data.parts.length===0;var isInlineNode=INLINE_NODE_TYPES$1.includes(node.type);var isInlineHTML=node.type==="html"&&INLINE_NODE_WRAPPER_TYPES$1.includes(data.parentNode.type);return isFirstNode||isInlineNode||isInlineHTML;}function shouldPrePrintDoubleHardline(node,data){var isSequence=(data.prevNode&&data.prevNode.type)===node.type;var isSiblingNode=isSequence&&SIBLING_NODE_TYPES.includes(node.type);var isInTightListItem=data.parentNode.type==="listItem"&&!data.parentNode.loose;var isPrevNodeLooseListItem=data.prevNode&&data.prevNode.type==="listItem"&&data.prevNode.loose;var isPrevNodePrettierIgnore=isPrettierIgnore$1(data.prevNode)==="next";var isBlockHtmlWithoutBlankLineBetweenPrevHtml=node.type==="html"&&data.prevNode&&data.prevNode.type==="html"&&data.prevNode.position.end.line+1===node.position.start.line;var isHtmlDirectAfterListItem=node.type==="html"&&data.parentNode.type==="listItem"&&data.prevNode&&data.prevNode.type==="paragraph"&&data.prevNode.position.end.line+1===node.position.start.line;return isPrevNodeLooseListItem||!(isSiblingNode||isInTightListItem||isPrevNodePrettierIgnore||isBlockHtmlWithoutBlankLineBetweenPrevHtml||isHtmlDirectAfterListItem);}function shouldPrePrintTripleHardline(node,data){var isPrevNodeList=data.prevNode&&data.prevNode.type==="list";var isIndentedCode=node.type==="code"&&node.isIndented;return isPrevNodeList&&isIndentedCode;}function shouldRemainTheSameContent(path){var ancestorNode=getAncestorNode$2(path,["linkReference","imageReference"]);return ancestorNode&&(ancestorNode.type!=="linkReference"||ancestorNode.referenceType!=="full");}function normalizeDoc(doc){return mapDoc$5(doc,function(currentDoc){if(!currentDoc.parts){return currentDoc;}if(currentDoc.type==="concat"&&currentDoc.parts.length===1){return currentDoc.parts[0];}var parts=currentDoc.parts.reduce(function(parts,part){if(part.type==="concat"){parts.push.apply(parts,(0,_toConsumableArray3.default)(part.parts));}else if(part!==""){parts.push(part);}return parts;},[]);return Object.assign({},currentDoc,{parts:normalizeParts$2(parts)});});}function printUrl(url,dangerousCharOrChars){var dangerousChars=[" "].concat(dangerousCharOrChars||[]);return new RegExp(dangerousChars.map(function(x){return"\\\\".concat(x);}).join("|")).test(url)?"<".concat(url,">"):url;}function printTitle(title,options,printSpace){if(printSpace==null){printSpace=true;}if(!title){return"";}if(printSpace){return" "+printTitle(title,options,false);}if(title.includes(\'"\')&&title.includes("\'")&&!title.includes(")")){return"(".concat(title,")");// avoid escaped quotes\n}// faster than using RegExps: https://jsperf.com/performance-of-match-vs-split\nvar singleCount=title.split("\'").length-1;var doubleCount=title.split(\'"\').length-1;var quote=singleCount>doubleCount?\'"\':doubleCount>singleCount?"\'":options.singleQuote?"\'":\'"\';title=title.replace(new RegExp("(".concat(quote,")"),"g"),"\\\\$1");return"".concat(quote).concat(title).concat(quote);}function normalizeParts$2(parts){return parts.reduce(function(current,part){var lastPart=util$1.getLast(current);if(typeof lastPart==="string"&&typeof part==="string"){current.splice(-1,1,lastPart+part);}else{current.push(part);}return current;},[]);}function clamp(value,min,max){return value<min?min:value>max?max:value;}function clean$6(ast,newObj,parent){delete newObj.position;delete newObj.raw;// front-matter\n// for codeblock\nif(ast.type==="code"||ast.type==="yaml"||ast.type==="import"||ast.type==="export"||ast.type==="jsx"){delete newObj.value;}if(ast.type==="list"){delete newObj.isAligned;}// texts can be splitted or merged\nif(ast.type==="text"){return null;}if(ast.type==="inlineCode"){newObj.value=ast.value.replace(/[ \\t\\n]+/g," ");}// for insert pragma\nif(parent&&parent.type==="root"&&parent.children.length>0&&(parent.children[0]===ast||(parent.children[0].type==="yaml"||parent.children[0].type==="toml")&&parent.children[1]===ast)&&ast.type==="html"&&pragma$4.startWithPragma(ast.value)){return null;}}function hasPrettierIgnore$6(path){var index=+path.getName();if(index===0){return false;}var prevNode=path.getParentNode().children[index-1];return isPrettierIgnore$1(prevNode)==="next";}var printerMarkdown={preprocess:preprocess_1$2,print:genericPrint$5,embed:embed_1$2,massageAstNode:clean$6,hasPrettierIgnore:hasPrettierIgnore$6,insertPragma:pragma$4.insertPragma};var options$6={proseWrap:commonOptions.proseWrap,singleQuote:commonOptions.singleQuote};var name$g="Markdown";var type$f="prose";var aliases$5=["pandoc"];var aceMode$f="markdown";var codemirrorMode$b="gfm";var codemirrorMimeType$b="text/x-gfm";var wrap=true;var extensions$f=[".md",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".workbook"];var filenames$3=["contents.lr"];var tmScope$f="source.gfm";var languageId$f=222;var Markdown={name:name$g,type:type$f,aliases:aliases$5,aceMode:aceMode$f,codemirrorMode:codemirrorMode$b,codemirrorMimeType:codemirrorMimeType$b,wrap:wrap,extensions:extensions$f,filenames:filenames$3,tmScope:tmScope$f,languageId:languageId$f};var Markdown$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$g,type:type$f,aliases:aliases$5,aceMode:aceMode$f,codemirrorMode:codemirrorMode$b,codemirrorMimeType:codemirrorMimeType$b,wrap:wrap,extensions:extensions$f,filenames:filenames$3,tmScope:tmScope$f,languageId:languageId$f,\'default\':Markdown});var require$$0$7=getCjsExportFromNamespace(Markdown$1);var languages$5=[createLanguage(require$$0$7,function(data){return{since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:data.filenames.concat(["README"]),extensions:data.extensions.filter(function(extension){return extension!==".mdx";})};}),createLanguage(require$$0$7,function(){return{name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]};})];var printers$5={mdast:printerMarkdown};var languageMarkdown={languages:languages$5,options:options$6,printers:printers$5};function isPragma(text){return /^\\s*@(prettier|format)\\s*$/.test(text);}function hasPragma$4(text){return /^\\s*#[^\\n\\S]*@(prettier|format)\\s*?(\\n|$)/.test(text);}function insertPragma$8(text){return"# @format\\n\\n".concat(text);}var pragma$5={isPragma:isPragma,hasPragma:hasPragma$4,insertPragma:insertPragma$8};var getLast$5=util$1.getLast;function getAncestorCount(path,filter){var counter=0;var pathStackLength=path.stack.length-1;for(var i=0;i<pathStackLength;i++){var value=path.stack[i];if(isNode(value)&&filter(value)){counter++;}}return counter;}/**\n   * @param {any} value\n   * @param {string[]=} types\n   */function isNode(value,types){return value&&typeof value.type==="string"&&(!types||types.includes(value.type));}function mapNode(node,callback,parent){return callback("children"in node?Object.assign({},node,{children:node.children.map(function(childNode){return mapNode(childNode,callback,node);})}):node,parent);}function defineShortcut(x,key,getter){Object.defineProperty(x,key,{get:getter,enumerable:false});}function isNextLineEmpty$5(node,text){var newlineCount=0;var textLength=text.length;for(var i=node.position.end.offset-1;i<textLength;i++){var char=text[i];if(char==="\\n"){newlineCount++;}if(newlineCount===1&&/\\S/.test(char)){return false;}if(newlineCount===2){return true;}}return false;}function isLastDescendantNode(path){var node=path.getValue();switch(node.type){case"tag":case"anchor":case"comment":return false;}var pathStackLength=path.stack.length;for(var i=1;i<pathStackLength;i++){var item=path.stack[i];var parentItem=path.stack[i-1];if(Array.isArray(parentItem)&&typeof item==="number"&&item!==parentItem.length-1){return false;}}return true;}function getLastDescendantNode$1(node){return"children"in node&&node.children.length!==0?getLastDescendantNode$1(getLast$5(node.children)):node;}function isPrettierIgnore$2(comment){return comment.value.trim()==="prettier-ignore";}function hasPrettierIgnore$7(path){var node=path.getValue();if(node.type==="documentBody"){var _document=path.getParentNode();return hasEndComments(_document.head)&&isPrettierIgnore$2(getLast$5(_document.head.endComments));}return hasLeadingComments(node)&&isPrettierIgnore$2(getLast$5(node.leadingComments));}function isEmptyNode(node){return(!node.children||node.children.length===0)&&!hasComments(node);}function hasComments(node){return hasLeadingComments(node)||hasMiddleComments(node)||hasIndicatorComment(node)||hasTrailingComment$2(node)||hasEndComments(node);}function hasLeadingComments(node){return node&&node.leadingComments&&node.leadingComments.length!==0;}function hasMiddleComments(node){return node&&node.middleComments&&node.middleComments.length!==0;}function hasIndicatorComment(node){return node&&node.indicatorComment;}function hasTrailingComment$2(node){return node&&node.trailingComment;}function hasEndComments(node){return node&&node.endComments&&node.endComments.length!==0;}/**\n   * " a   b c   d e   f " -> [" a   b", "c   d", "e   f "]\n   */function splitWithSingleSpace(text){var parts=[];var lastPart=undefined;var _iterator42=_createForOfIteratorHelper(text.split(/( +)/g)),_step42;try{for(_iterator42.s();!(_step42=_iterator42.n()).done;){var part=_step42.value;if(part!==" "){if(lastPart===" "){parts.push(part);}else{parts.push((parts.pop()||"")+part);}}else if(lastPart===undefined){parts.unshift("");}lastPart=part;}}catch(err){_iterator42.e(err);}finally{_iterator42.f();}if(lastPart===" "){parts.push((parts.pop()||"")+" ");}if(parts[0]===""){parts.shift();parts.unshift(" "+(parts.shift()||""));}return parts;}function getFlowScalarLineContents(nodeType,content,options){var rawLineContents=content.split("\\n").map(function(lineContent,index,lineContents){return index===0&&index===lineContents.length-1?lineContent:index!==0&&index!==lineContents.length-1?lineContent.trim():index===0?lineContent.trimEnd():lineContent.trimStart();});if(options.proseWrap==="preserve"){return rawLineContents.map(function(lineContent){return lineContent.length===0?[]:[lineContent];});}return rawLineContents.map(function(lineContent){return lineContent.length===0?[]:splitWithSingleSpace(lineContent);}).reduce(function(reduced,lineContentWords,index){return index!==0&&rawLineContents[index-1].length!==0&&lineContentWords.length!==0&&!(// trailing backslash in quoteDouble should be preserved\nnodeType==="quoteDouble"&&getLast$5(getLast$5(reduced)).endsWith("\\\\"))?reduced.concat([reduced.pop().concat(lineContentWords)]):reduced.concat([lineContentWords]);},[]).map(function(lineContentWords){return options.proseWrap==="never"?[lineContentWords.join(" ")]:lineContentWords;});}function getBlockValueLineContents(node,_ref32){var parentIndent=_ref32.parentIndent,isLastDescendant=_ref32.isLastDescendant,options=_ref32.options;var content=node.position.start.line===node.position.end.line?"":options.originalText.slice(node.position.start.offset,node.position.end.offset)// exclude open line `>` or `|`\n.match(/^[^\\n]*?\\n([\\s\\S]*)$/)[1];var leadingSpaceCount=node.indent===null?function(match){return match?match[1].length:Infinity;}(content.match(/^( *)\\S/m)):node.indent-1+parentIndent;var rawLineContents=content.split("\\n").map(function(lineContent){return lineContent.slice(leadingSpaceCount);});if(options.proseWrap==="preserve"||node.type==="blockLiteral"){return removeUnnecessaryTrailingNewlines(rawLineContents.map(function(lineContent){return lineContent.length===0?[]:[lineContent];}));}return removeUnnecessaryTrailingNewlines(rawLineContents.map(function(lineContent){return lineContent.length===0?[]:splitWithSingleSpace(lineContent);}).reduce(function(reduced,lineContentWords,index){return index!==0&&rawLineContents[index-1].length!==0&&lineContentWords.length!==0&&!/^\\s/.test(lineContentWords[0])&&!/^\\s|\\s$/.test(getLast$5(reduced))?reduced.concat([reduced.pop().concat(lineContentWords)]):reduced.concat([lineContentWords]);},[]).map(function(lineContentWords){return lineContentWords.reduce(function(reduced,word){return(// disallow trailing spaces\nreduced.length!==0&&/\\s$/.test(getLast$5(reduced))?reduced.concat(reduced.pop()+" "+word):reduced.concat(word));},[]);}).map(function(lineContentWords){return options.proseWrap==="never"?[lineContentWords.join(" ")]:lineContentWords;}));function removeUnnecessaryTrailingNewlines(lineContents){if(node.chomping==="keep"){return getLast$5(lineContents).length===0?lineContents.slice(0,-1):lineContents;}var trailingNewlineCount=0;for(var i=lineContents.length-1;i>=0;i--){if(lineContents[i].length===0){trailingNewlineCount++;}else{break;}}return trailingNewlineCount===0?lineContents:trailingNewlineCount>=2&&!isLastDescendant?// next empty line\nlineContents.slice(0,-(trailingNewlineCount-1)):lineContents.slice(0,-trailingNewlineCount);}}var utils$7={getLast:getLast$5,getAncestorCount:getAncestorCount,isNode:isNode,isEmptyNode:isEmptyNode,mapNode:mapNode,defineShortcut:defineShortcut,isNextLineEmpty:isNextLineEmpty$5,isLastDescendantNode:isLastDescendantNode,getBlockValueLineContents:getBlockValueLineContents,getFlowScalarLineContents:getFlowScalarLineContents,getLastDescendantNode:getLastDescendantNode$1,hasPrettierIgnore:hasPrettierIgnore$7,hasLeadingComments:hasLeadingComments,hasMiddleComments:hasMiddleComments,hasIndicatorComment:hasIndicatorComment,hasTrailingComment:hasTrailingComment$2,hasEndComments:hasEndComments};var insertPragma$9=pragma$5.insertPragma,isPragma$1=pragma$5.isPragma;var getAncestorCount$1=utils$7.getAncestorCount,getBlockValueLineContents$1=utils$7.getBlockValueLineContents,getFlowScalarLineContents$1=utils$7.getFlowScalarLineContents,getLast$6=utils$7.getLast,getLastDescendantNode$2=utils$7.getLastDescendantNode,hasLeadingComments$1=utils$7.hasLeadingComments,hasMiddleComments$1=utils$7.hasMiddleComments,hasIndicatorComment$1=utils$7.hasIndicatorComment,hasTrailingComment$3=utils$7.hasTrailingComment,hasEndComments$1=utils$7.hasEndComments,hasPrettierIgnore$8=utils$7.hasPrettierIgnore,isLastDescendantNode$1=utils$7.isLastDescendantNode,isNextLineEmpty$6=utils$7.isNextLineEmpty,isNode$1=utils$7.isNode,isEmptyNode$1=utils$7.isEmptyNode,defineShortcut$1=utils$7.defineShortcut,mapNode$1=utils$7.mapNode;var docBuilders$2=document.builders;var conditionalGroup$2=docBuilders$2.conditionalGroup,breakParent$5=docBuilders$2.breakParent,concat$h=docBuilders$2.concat,dedent$3=docBuilders$2.dedent,dedentToRoot$3=docBuilders$2.dedentToRoot,fill$6=docBuilders$2.fill,group$g=docBuilders$2.group,hardline$d=docBuilders$2.hardline,ifBreak$8=docBuilders$2.ifBreak,join$c=docBuilders$2.join,line$b=docBuilders$2.line,lineSuffix$2=docBuilders$2.lineSuffix,literalline$7=docBuilders$2.literalline,markAsRoot$5=docBuilders$2.markAsRoot,softline$8=docBuilders$2.softline;var replaceEndOfLineWith$3=util$1.replaceEndOfLineWith;function preprocess$3(ast){return mapNode$1(ast,defineShortcuts);}function defineShortcuts(node){switch(node.type){case"document":defineShortcut$1(node,"head",function(){return node.children[0];});defineShortcut$1(node,"body",function(){return node.children[1];});break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":defineShortcut$1(node,"content",function(){return node.children[0];});break;case"mappingItem":case"flowMappingItem":defineShortcut$1(node,"key",function(){return node.children[0];});defineShortcut$1(node,"value",function(){return node.children[1];});break;}return node;}function genericPrint$6(path,options,print){var node=path.getValue();var parentNode=path.getParentNode();var tag=!node.tag?"":path.call(print,"tag");var anchor=!node.anchor?"":path.call(print,"anchor");var nextEmptyLine=isNode$1(node,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!isLastDescendantNode$1(path)?printNextEmptyLine(path,options.originalText):"";return concat$h([node.type!=="mappingValue"&&hasLeadingComments$1(node)?concat$h([join$c(hardline$d,path.map(print,"leadingComments")),hardline$d]):"",tag,tag&&anchor?" ":"",anchor,tag||anchor?isNode$1(node,["sequence","mapping"])&&!hasMiddleComments$1(node)?hardline$d:" ":"",hasMiddleComments$1(node)?concat$h([node.middleComments.length===1?"":hardline$d,join$c(hardline$d,path.map(print,"middleComments")),hardline$d]):"",hasPrettierIgnore$8(path)?concat$h(replaceEndOfLineWith$3(options.originalText.slice(node.position.start.offset,node.position.end.offset),literalline$7)):group$g(_print(node,parentNode,path,options,print)),hasTrailingComment$3(node)&&!isNode$1(node,["document","documentHead"])?lineSuffix$2(concat$h([node.type==="mappingValue"&&!node.content?"":" ",parentNode.type==="mappingKey"&&path.getParentNode(2).type==="mapping"&&isInlineNode(node)?"":breakParent$5,path.call(print,"trailingComment")])):"",nextEmptyLine,hasEndComments$1(node)&&!isNode$1(node,["documentHead","documentBody"])?align$3(node.type==="sequenceItem"?2:0,concat$h([hardline$d,join$c(hardline$d,path.map(print,"endComments"))])):""]);}function _print(node,parentNode,path,options,print){switch(node.type){case"root":return concat$h([join$c(hardline$d,path.map(function(childPath,index){var document=node.children[index];var nextDocument=node.children[index+1];return concat$h([print(childPath),shouldPrintDocumentEndMarker(document,nextDocument)?concat$h([hardline$d,"...",hasTrailingComment$3(document)?concat$h([" ",path.call(print,"trailingComment")]):""]):!nextDocument||hasTrailingComment$3(nextDocument.head)?"":concat$h([hardline$d,"---"])]);},"children")),node.children.length===0||function(lastDescendantNode){return isNode$1(lastDescendantNode,["blockLiteral","blockFolded"])&&lastDescendantNode.chomping==="keep";}(getLastDescendantNode$2(node))?"":hardline$d]);case"document":{var nextDocument=parentNode.children[path.getName()+1];return join$c(hardline$d,[shouldPrintDocumentHeadEndMarker(node,nextDocument,parentNode,options)==="head"?join$c(hardline$d,[node.head.children.length===0&&node.head.endComments.length===0?"":path.call(print,"head"),concat$h(["---",hasTrailingComment$3(node.head)?concat$h([" ",path.call(print,"head","trailingComment")]):""])].filter(Boolean)):"",shouldPrintDocumentBody(node)?path.call(print,"body"):""].filter(Boolean));}case"documentHead":return join$c(hardline$d,[].concat(path.map(print,"children"),path.map(print,"endComments")));case"documentBody":{var children=join$c(hardline$d,path.map(print,"children")).parts;var endComments=join$c(hardline$d,path.map(print,"endComments")).parts;var separator=children.length===0||endComments.length===0?"":function(lastDescendantNode){return isNode$1(lastDescendantNode,["blockFolded","blockLiteral"])?lastDescendantNode.chomping==="keep"?// there\'s already a newline printed at the end of blockValue (chomping=keep, lastDescendant=true)\n"":// an extra newline for better readability\nconcat$h([hardline$d,hardline$d]):hardline$d;}(getLastDescendantNode$2(node));return concat$h([].concat(children,separator,endComments));}case"directive":return concat$h(["%",join$c(" ",[node.name].concat(node.parameters))]);case"comment":return concat$h(["#",node.value]);case"alias":return concat$h(["*",node.value]);case"tag":return options.originalText.slice(node.position.start.offset,node.position.end.offset);case"anchor":return concat$h(["&",node.value]);case"plain":return printFlowScalarContent(node.type,options.originalText.slice(node.position.start.offset,node.position.end.offset),options);case"quoteDouble":case"quoteSingle":{var singleQuote="\'";var doubleQuote=\'"\';var raw=options.originalText.slice(node.position.start.offset+1,node.position.end.offset-1);if(node.type==="quoteSingle"&&raw.includes("\\\\")||node.type==="quoteDouble"&&/\\\\[^"]/.test(raw)){// only quoteDouble can use escape chars\n// and quoteSingle do not need to escape backslashes\nvar originalQuote=node.type==="quoteDouble"?doubleQuote:singleQuote;return concat$h([originalQuote,printFlowScalarContent(node.type,raw,options),originalQuote]);}else if(raw.includes(doubleQuote)){return concat$h([singleQuote,printFlowScalarContent(node.type,node.type==="quoteDouble"?raw// double quote needs to be escaped by backslash in quoteDouble\n.replace(/\\\\"/g,doubleQuote).replace(/\'/g,singleQuote.repeat(2)):raw,options),singleQuote]);}if(raw.includes(singleQuote)){return concat$h([doubleQuote,printFlowScalarContent(node.type,node.type==="quoteSingle"?// single quote needs to be escaped by 2 single quotes in quoteSingle\nraw.replace(/\'\'/g,singleQuote):raw,options),doubleQuote]);}var quote=options.singleQuote?singleQuote:doubleQuote;return concat$h([quote,printFlowScalarContent(node.type,raw,options),quote]);}case"blockFolded":case"blockLiteral":{var parentIndent=getAncestorCount$1(path,function(ancestorNode){return isNode$1(ancestorNode,["sequence","mapping"]);});var isLastDescendant=isLastDescendantNode$1(path);return concat$h([node.type==="blockFolded"?">":"|",node.indent===null?"":node.indent.toString(),node.chomping==="clip"?"":node.chomping==="keep"?"+":"-",hasIndicatorComment$1(node)?concat$h([" ",path.call(print,"indicatorComment")]):"",(node.indent===null?dedent$3:dedentToRoot$3)(align$3(node.indent===null?options.tabWidth:node.indent-1+parentIndent,concat$h(getBlockValueLineContents$1(node,{parentIndent:parentIndent,isLastDescendant:isLastDescendant,options:options}).reduce(function(reduced,lineWords,index,lineContents){return reduced.concat(index===0?hardline$d:"",fill$6(join$c(line$b,lineWords).parts),index!==lineContents.length-1?lineWords.length===0?hardline$d:markAsRoot$5(literalline$7):node.chomping==="keep"&&isLastDescendant?lineWords.length===0?dedentToRoot$3(hardline$d):dedentToRoot$3(literalline$7):"");},[]))))]);}case"sequence":return join$c(hardline$d,path.map(print,"children"));case"sequenceItem":return concat$h(["- ",align$3(2,!node.content?"":path.call(print,"content"))]);case"mappingKey":return!node.content?"":path.call(print,"content");case"mappingValue":return!node.content?"":path.call(print,"content");case"mapping":return join$c(hardline$d,path.map(print,"children"));case"mappingItem":case"flowMappingItem":{var isEmptyMappingKey=isEmptyNode$1(node.key);var isEmptyMappingValue=isEmptyNode$1(node.value);if(isEmptyMappingKey&&isEmptyMappingValue){return concat$h([": "]);}var _key20=path.call(print,"key");var value=path.call(print,"value");if(isEmptyMappingValue){return node.type==="flowMappingItem"&&parentNode.type==="flowMapping"?_key20:node.type==="mappingItem"&&isAbsolutelyPrintedAsSingleLineNode(node.key.content,options)&&!hasTrailingComment$3(node.key.content)&&(!parentNode.tag||parentNode.tag.value!=="tag:yaml.org,2002:set")?concat$h([_key20,needsSpaceInFrontOfMappingValue(node)?" ":"",":"]):concat$h(["? ",align$3(2,_key20)]);}if(isEmptyMappingKey){return concat$h([": ",align$3(2,value)]);}var groupId=Symbol("mappingKey");var forceExplicitKey=hasLeadingComments$1(node.value)||!isInlineNode(node.key.content);return forceExplicitKey?concat$h(["? ",align$3(2,_key20),hardline$d,join$c("",path.map(print,"value","leadingComments").map(function(comment){return concat$h([comment,hardline$d]);})),": ",align$3(2,value)]):// force singleline\nisSingleLineNode(node.key.content)&&!hasLeadingComments$1(node.key.content)&&!hasMiddleComments$1(node.key.content)&&!hasTrailingComment$3(node.key.content)&&!hasEndComments$1(node.key)&&!hasLeadingComments$1(node.value.content)&&!hasMiddleComments$1(node.value.content)&&!hasEndComments$1(node.value)&&isAbsolutelyPrintedAsSingleLineNode(node.value.content,options)?concat$h([_key20,needsSpaceInFrontOfMappingValue(node)?" ":"",": ",value]):conditionalGroup$2([concat$h([group$g(concat$h([ifBreak$8("? "),group$g(align$3(2,_key20),{id:groupId})])),ifBreak$8(concat$h([hardline$d,": ",align$3(2,value)]),indent(concat$h([needsSpaceInFrontOfMappingValue(node)?" ":"",":",hasLeadingComments$1(node.value.content)||hasEndComments$1(node.value)&&node.value.content&&!isNode$1(node.value.content,["mapping","sequence"])||parentNode.type==="mapping"&&hasTrailingComment$3(node.key.content)&&isInlineNode(node.value.content)||isNode$1(node.value.content,["mapping","sequence"])&&node.value.content.tag===null&&node.value.content.anchor===null?hardline$d:!node.value.content?"":line$b,value])),{groupId:groupId})])]);}case"flowMapping":case"flowSequence":{var openMarker=node.type==="flowMapping"?"{":"[";var closeMarker=node.type==="flowMapping"?"}":"]";var bracketSpacing=node.type==="flowMapping"&&node.children.length!==0&&options.bracketSpacing?line$b:softline$8;var isLastItemEmptyMappingItem=node.children.length!==0&&function(lastItem){return lastItem.type==="flowMappingItem"&&isEmptyNode$1(lastItem.key)&&isEmptyNode$1(lastItem.value);}(getLast$6(node.children));return concat$h([openMarker,indent(concat$h([bracketSpacing,concat$h(path.map(function(childPath,index){return concat$h([print(childPath),index===node.children.length-1?"":concat$h([",",line$b,node.children[index].position.start.line!==node.children[index+1].position.start.line?printNextEmptyLine(childPath,options.originalText):""])]);},"children")),ifBreak$8(",","")])),isLastItemEmptyMappingItem?"":bracketSpacing,closeMarker]);}case"flowSequenceItem":return path.call(print,"content");// istanbul ignore next\ndefault:throw new Error("Unexpected node type ".concat(node.type));}function indent(doc){return docBuilders$2.align(" ".repeat(options.tabWidth),doc);}}function align$3(n,doc){return typeof n==="number"&&n>0?docBuilders$2.align(" ".repeat(n),doc):docBuilders$2.align(n,doc);}function isInlineNode(node){if(!node){return true;}switch(node.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return true;default:return false;}}function isSingleLineNode(node){if(!node){return true;}switch(node.type){case"plain":case"quoteDouble":case"quoteSingle":return node.position.start.line===node.position.end.line;case"alias":return true;default:return false;}}function shouldPrintDocumentBody(document){return document.body.children.length!==0||hasEndComments$1(document.body);}function shouldPrintDocumentEndMarker(document,nextDocument){return(/**\n       *... # trailingComment\n       */hasTrailingComment$3(document)||nextDocument&&(/**\n       * ...\n       * %DIRECTIVE\n       * ---\n       */nextDocument.head.children.length!==0||/**\n       * ...\n       * # endComment\n       * ---\n       */hasEndComments$1(nextDocument.head)));}function shouldPrintDocumentHeadEndMarker(document,nextDocument,root,options){if(/**\n     * ---\n     * preserve the first document head end marker\n     */root.children[0]===document&&/---(\\s|$)/.test(options.originalText.slice(options.locStart(document),options.locStart(document)+4))||/**\n     * %DIRECTIVE\n     * ---\n     */document.head.children.length!==0||/**\n     * # end comment\n     * ---\n     */hasEndComments$1(document.head)||/**\n     * --- # trailing comment\n     */hasTrailingComment$3(document.head)){return"head";}if(shouldPrintDocumentEndMarker(document,nextDocument)){return false;}return nextDocument?"root":false;}function isAbsolutelyPrintedAsSingleLineNode(node,options){if(!node){return true;}switch(node.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return true;default:return false;}if(options.proseWrap==="preserve"){return node.position.start.line===node.position.end.line;}if(// backslash-newline\n/\\\\$/m.test(options.originalText.slice(node.position.start.offset,node.position.end.offset))){return false;}switch(options.proseWrap){case"never":return!node.value.includes("\\n");case"always":return!/[\\n ]/.test(node.value);// istanbul ignore next\ndefault:return false;}}function needsSpaceInFrontOfMappingValue(node){return node.key.content&&node.key.content.type==="alias";}function printNextEmptyLine(path,originalText){var node=path.getValue();var root=path.stack[0];root.isNextEmptyLinePrintedChecklist=root.isNextEmptyLinePrintedChecklist||[];if(!root.isNextEmptyLinePrintedChecklist[node.position.end.line]){if(isNextLineEmpty$6(node,originalText)){root.isNextEmptyLinePrintedChecklist[node.position.end.line]=true;return softline$8;}}return"";}function printFlowScalarContent(nodeType,content,options){var lineContents=getFlowScalarLineContents$1(nodeType,content,options);return join$c(hardline$d,lineContents.map(function(lineContentWords){return fill$6(join$c(line$b,lineContentWords).parts);}));}function clean$7(node,newNode/*, parent */){if(isNode$1(newNode)){delete newNode.position;switch(newNode.type){case"comment":// insert pragma\nif(isPragma$1(newNode.value)){return null;}break;case"quoteDouble":case"quoteSingle":newNode.type="quote";break;}}}var printerYaml={preprocess:preprocess$3,print:genericPrint$6,massageAstNode:clean$7,insertPragma:insertPragma$9};var options$7={bracketSpacing:commonOptions.bracketSpacing,singleQuote:commonOptions.singleQuote,proseWrap:commonOptions.proseWrap};var name$h="YAML";var type$g="data";var tmScope$g="source.yaml";var aliases$6=["yml"];var extensions$g=[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"];var filenames$4=[".clang-format",".clang-tidy",".gemrc","glide.lock","yarn.lock"];var aceMode$g="yaml";var codemirrorMode$c="yaml";var codemirrorMimeType$c="text/x-yaml";var languageId$g=407;var YAML={name:name$h,type:type$g,tmScope:tmScope$g,aliases:aliases$6,extensions:extensions$g,filenames:filenames$4,aceMode:aceMode$g,codemirrorMode:codemirrorMode$c,codemirrorMimeType:codemirrorMimeType$c,languageId:languageId$g};var YAML$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$h,type:type$g,tmScope:tmScope$g,aliases:aliases$6,extensions:extensions$g,filenames:filenames$4,aceMode:aceMode$g,codemirrorMode:codemirrorMode$c,codemirrorMimeType:codemirrorMimeType$c,languageId:languageId$g,\'default\':YAML});var require$$0$8=getCjsExportFromNamespace(YAML$1);var languages$6=[createLanguage(require$$0$8,function(data){return{since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml"],// yarn.lock is not YAML: https://github.com/yarnpkg/yarn/issues/5629\nfilenames:data.filenames.filter(function(filename){return filename!=="yarn.lock";})};})];var languageYaml={languages:languages$6,printers:{yaml:printerYaml},options:options$7};var version$2=require$$0.version;var getSupportInfo$2=support.getSupportInfo;var internalPlugins=[languageCss,languageGraphql,languageHandlebars,languageHtml,languageJs,languageMarkdown,languageYaml];function withPlugins(fn){var optsArgIdx=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return function(){for(var _len13=arguments.length,args=new Array(_len13),_key21=0;_key21<_len13;_key21++){args[_key21]=arguments[_key21];}var opts=args[optsArgIdx]||{};var plugins=opts.plugins||[];args[optsArgIdx]=Object.assign({},opts,{plugins:[].concat(internalPlugins,(0,_toConsumableArray3.default)(Array.isArray(plugins)?plugins:Object.values(plugins)))});return fn.apply(void 0,args);};}var formatWithCursor=withPlugins(core.formatWithCursor);var standalone={formatWithCursor:formatWithCursor,format:function format(text,opts){return formatWithCursor(text,opts).formatted;},check:function check(text,opts){var _formatWithCursor=formatWithCursor(text,opts),formatted=_formatWithCursor.formatted;return formatted===text;},doc:document,getSupportInfo:withPlugins(getSupportInfo$2,0),version:version$2,util:utilShared,__debug:{parse:withPlugins(core.parse),formatAST:withPlugins(core.formatAST),formatDoc:withPlugins(core.formatDoc),printToDoc:withPlugins(core.printToDoc),printDocToString:withPlugins(core.printDocToString)}};var standalone$1=standalone;return standalone$1;});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/prettier/standalone.js?')}}]);