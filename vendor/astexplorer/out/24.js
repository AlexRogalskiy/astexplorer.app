(window.webpackJsonp=window.webpackJsonp||[]).push([[24,56],{"./node_modules/@babel/runtime/helpers/construct.js":function(module,exports,__webpack_require__){eval('var setPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeReflectConstruct = __webpack_require__("./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/construct.js?')},"./node_modules/@babel/runtime/helpers/isNativeFunction.js":function(module,exports){eval('function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf("[native code]") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/isNativeFunction.js?')},"./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":function(module,exports){eval('function _isNativeReflectConstruct() {\n  if (typeof Reflect === "undefined" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === "function") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js?')},"./node_modules/@babel/runtime/helpers/toArray.js":function(module,exports,__webpack_require__){eval('var arrayWithHoles = __webpack_require__("./node_modules/@babel/runtime/helpers/arrayWithHoles.js");\n\nvar iterableToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/iterableToArray.js");\n\nvar unsupportedIterableToArray = __webpack_require__("./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");\n\nvar nonIterableRest = __webpack_require__("./node_modules/@babel/runtime/helpers/nonIterableRest.js");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/toArray.js?')},"./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":function(module,exports,__webpack_require__){eval('var getPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js");\n\nvar setPrototypeOf = __webpack_require__("./node_modules/@babel/runtime/helpers/setPrototypeOf.js");\n\nvar isNativeFunction = __webpack_require__("./node_modules/@babel/runtime/helpers/isNativeFunction.js");\n\nvar construct = __webpack_require__("./node_modules/@babel/runtime/helpers/construct.js");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === "function" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== "function") {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n\n    if (typeof _cache !== "undefined") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js?')},"./node_modules/ansi-regex/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;\n};\n\n\n//# sourceURL=webpack:///./node_modules/ansi-regex/index.js?")},"./node_modules/assert/assert.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {\n\nvar objectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(\"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/assert/assert.js?")},"./node_modules/babel-code-frame/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (rawLines, lineNumber, colNumber) {\n  var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  colNumber = Math.max(colNumber, 0);\n\n  var highlighted = opts.highlightCode && _chalk2.default.supportsColor || opts.forceColor;\n  var chalk = _chalk2.default;\n  if (opts.forceColor) {\n    chalk = new _chalk2.default.constructor({ enabled: true });\n  }\n  var maybeHighlight = function maybeHighlight(chalkFn, string) {\n    return highlighted ? chalkFn(string) : string;\n  };\n  var defs = getDefs(chalk);\n  if (highlighted) rawLines = highlight(defs, rawLines);\n\n  var linesAbove = opts.linesAbove || 2;\n  var linesBelow = opts.linesBelow || 3;\n\n  var lines = rawLines.split(NEWLINE);\n  var start = Math.max(lineNumber - (linesAbove + 1), 0);\n  var end = Math.min(lines.length, lineNumber + linesBelow);\n\n  if (!lineNumber && !colNumber) {\n    start = 0;\n    end = lines.length;\n  }\n\n  var numberMaxWidth = String(end).length;\n\n  var frame = lines.slice(start, end).map(function (line, index) {\n    var number = start + 1 + index;\n    var paddedNumber = (" " + number).slice(-numberMaxWidth);\n    var gutter = " " + paddedNumber + " | ";\n    if (number === lineNumber) {\n      var markerLine = "";\n      if (colNumber) {\n        var markerSpacing = line.slice(0, colNumber - 1).replace(/[^\\t]/g, " ");\n        markerLine = ["\\n ", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, " ")), markerSpacing, maybeHighlight(defs.marker, "^")].join("");\n      }\n      return [maybeHighlight(defs.marker, ">"), maybeHighlight(defs.gutter, gutter), line, markerLine].join("");\n    } else {\n      return " " + maybeHighlight(defs.gutter, gutter) + line;\n    }\n  }).join("\\n");\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n};\n\nvar _jsTokens = __webpack_require__("./node_modules/js-tokens/index.js");\n\nvar _jsTokens2 = _interopRequireDefault(_jsTokens);\n\nvar _esutils = __webpack_require__("./node_modules/esutils/lib/utils.js");\n\nvar _esutils2 = _interopRequireDefault(_esutils);\n\nvar _chalk = __webpack_require__("./node_modules/babel-code-frame/node_modules/chalk/index.js");\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsx_tag: chalk.yellow,\n    punctuator: chalk.yellow,\n\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold,\n    gutter: chalk.grey,\n    marker: chalk.red.bold\n  };\n}\n\nvar NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nvar JSX_TAG = /^[a-z][\\w-]*$/i;\n\nvar BRACKET = /^[()\\[\\]{}]$/;\n\nfunction getTokenType(match) {\n  var _match$slice = match.slice(-2),\n      offset = _match$slice[0],\n      text = _match$slice[1];\n\n  var token = (0, _jsTokens.matchToToken)(match);\n\n  if (token.type === "name") {\n    if (_esutils2.default.keyword.isReservedWordES6(token.value)) {\n      return "keyword";\n    }\n\n    if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.substr(offset - 2, 2) == "</")) {\n      return "jsx_tag";\n    }\n\n    if (token.value[0] !== token.value[0].toLowerCase()) {\n      return "capitalized";\n    }\n  }\n\n  if (token.type === "punctuator" && BRACKET.test(token.value)) {\n    return "bracket";\n  }\n\n  return token.type;\n}\n\nfunction highlight(defs, text) {\n  return text.replace(_jsTokens2.default, function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var type = getTokenType(args);\n    var colorize = defs[type];\n    if (colorize) {\n      return args[0].split(NEWLINE).map(function (str) {\n        return colorize(str);\n      }).join("\\n");\n    } else {\n      return args[0];\n    }\n  });\n}\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-code-frame/lib/index.js?')},"./node_modules/babel-code-frame/node_modules/ansi-styles/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/babel-code-frame/node_modules/ansi-styles/index.js?")},"./node_modules/babel-code-frame/node_modules/chalk/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\nvar escapeStringRegexp = __webpack_require__(\"./node_modules/escape-string-regexp/index.js\");\nvar ansiStyles = __webpack_require__(\"./node_modules/babel-code-frame/node_modules/ansi-styles/index.js\");\nvar stripAnsi = __webpack_require__(\"./node_modules/strip-ansi/index.js\");\nvar hasAnsi = __webpack_require__(\"./node_modules/has-ansi/index.js\");\nvar supportsColor = __webpack_require__(\"./node_modules/babel-code-frame/node_modules/supports-color/index.js\");\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/babel-code-frame/node_modules/chalk/index.js?")},"./node_modules/babel-code-frame/node_modules/supports-color/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/babel-code-frame/node_modules/supports-color/index.js?")},"./node_modules/babel-core/index.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("./node_modules/babel-core/lib/api/node.js");\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/index.js?')},"./node_modules/babel-core/lib/api/node.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.transformFromAst = exports.transform = exports.analyse = exports.Pipeline = exports.OptionManager = exports.traverse = exports.types = exports.messages = exports.util = exports.version = exports.resolvePreset = exports.resolvePlugin = exports.template = exports.buildExternalHelpers = exports.options = exports.File = undefined;\n\nvar _file = __webpack_require__("./node_modules/babel-core/lib/transformation/file/index.js");\n\nObject.defineProperty(exports, "File", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_file).default;\n  }\n});\n\nvar _config = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/config.js");\n\nObject.defineProperty(exports, "options", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_config).default;\n  }\n});\n\nvar _buildExternalHelpers = __webpack_require__("./node_modules/babel-core/lib/tools/build-external-helpers.js");\n\nObject.defineProperty(exports, "buildExternalHelpers", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_buildExternalHelpers).default;\n  }\n});\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nObject.defineProperty(exports, "template", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_babelTemplate).default;\n  }\n});\n\nvar _resolvePlugin = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-plugin.js");\n\nObject.defineProperty(exports, "resolvePlugin", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_resolvePlugin).default;\n  }\n});\n\nvar _resolvePreset = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-preset.js");\n\nObject.defineProperty(exports, "resolvePreset", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_resolvePreset).default;\n  }\n});\n\nvar _package = __webpack_require__("./node_modules/babel-core/package.json");\n\nObject.defineProperty(exports, "version", {\n  enumerable: true,\n  get: function get() {\n    return _package.version;\n  }\n});\nexports.Plugin = Plugin;\nexports.transformFile = transformFile;\nexports.transformFileSync = transformFileSync;\n\nvar _fs = __webpack_require__("./node_modules/node-libs-browser/mock/empty.js");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _util = __webpack_require__("./node_modules/babel-core/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _optionManager = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/option-manager.js");\n\nvar _optionManager2 = _interopRequireDefault(_optionManager);\n\nvar _pipeline = __webpack_require__("./node_modules/babel-core/lib/transformation/pipeline.js");\n\nvar _pipeline2 = _interopRequireDefault(_pipeline);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.util = util;\nexports.messages = messages;\nexports.types = t;\nexports.traverse = _babelTraverse2.default;\nexports.OptionManager = _optionManager2.default;\nfunction Plugin(alias) {\n  throw new Error("The (" + alias + ") Babel 5 plugin is being run with Babel 6.");\n}\n\nexports.Pipeline = _pipeline2.default;\n\n\nvar pipeline = new _pipeline2.default();\nvar analyse = exports.analyse = pipeline.analyse.bind(pipeline);\nvar transform = exports.transform = pipeline.transform.bind(pipeline);\nvar transformFromAst = exports.transformFromAst = pipeline.transformFromAst.bind(pipeline);\n\nfunction transformFile(filename, opts, callback) {\n  if (typeof opts === "function") {\n    callback = opts;\n    opts = {};\n  }\n\n  opts.filename = filename;\n\n  _fs2.default.readFile(filename, function (err, code) {\n    var result = void 0;\n\n    if (!err) {\n      try {\n        result = transform(code, opts);\n      } catch (_err) {\n        err = _err;\n      }\n    }\n\n    if (err) {\n      callback(err);\n    } else {\n      callback(null, result);\n    }\n  });\n}\n\nfunction transformFileSync(filename) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  opts.filename = filename;\n  return transform(_fs2.default.readFileSync(filename, "utf8"), opts);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/api/node.js?')},"./node_modules/babel-core/lib/helpers/get-possible-plugin-names.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.default = getPossiblePluginNames;\nfunction getPossiblePluginNames(pluginName) {\n  return ["babel-plugin-" + pluginName, pluginName];\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/get-possible-plugin-names.js?')},"./node_modules/babel-core/lib/helpers/get-possible-preset-names.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.default = getPossiblePresetNames;\nfunction getPossiblePresetNames(presetName) {\n  var possibleNames = ["babel-preset-" + presetName, presetName];\n\n  var matches = presetName.match(/^(@[^/]+)\\/(.+)$/);\n  if (matches) {\n    var orgName = matches[1],\n        presetPath = matches[2];\n\n    possibleNames.push(orgName + "/babel-preset-" + presetPath);\n  }\n\n  return possibleNames;\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/get-possible-preset-names.js?')},"./node_modules/babel-core/lib/helpers/merge.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (dest, src) {\n  if (!dest || !src) return;\n\n  return (0, _mergeWith2.default)(dest, src, function (a, b) {\n    if (b && Array.isArray(a)) {\n      var newArray = b.slice(0);\n\n      for (var _iterator = a, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var item = _ref;\n\n        if (newArray.indexOf(item) < 0) {\n          newArray.push(item);\n        }\n      }\n\n      return newArray;\n    }\n  });\n};\n\nvar _mergeWith = __webpack_require__("./node_modules/lodash/mergeWith.js");\n\nvar _mergeWith2 = _interopRequireDefault(_mergeWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/merge.js?')},"./node_modules/babel-core/lib/helpers/normalize-ast.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (ast, comments, tokens) {\n  if (ast) {\n    if (ast.type === "Program") {\n      return t.file(ast, comments || [], tokens || []);\n    } else if (ast.type === "File") {\n      return ast;\n    }\n  }\n\n  throw new Error("Not a valid ast?");\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/normalize-ast.js?')},"./node_modules/babel-core/lib/helpers/resolve-from-possible-names.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.default = resolveFromPossibleNames;\n\nvar _resolve = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve.js");\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction resolveFromPossibleNames(possibleNames, dirname) {\n  return possibleNames.reduce(function (accum, curr) {\n    return accum || (0, _resolve2.default)(curr, dirname);\n  }, null);\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/resolve-from-possible-names.js?')},"./node_modules/babel-core/lib/helpers/resolve-plugin.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\nexports.default = resolvePlugin;\n\nvar _resolveFromPossibleNames = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-from-possible-names.js");\n\nvar _resolveFromPossibleNames2 = _interopRequireDefault(_resolveFromPossibleNames);\n\nvar _getPossiblePluginNames = __webpack_require__("./node_modules/babel-core/lib/helpers/get-possible-plugin-names.js");\n\nvar _getPossiblePluginNames2 = _interopRequireDefault(_getPossiblePluginNames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction resolvePlugin(pluginName) {\n  var dirname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.cwd();\n\n  return (0, _resolveFromPossibleNames2.default)((0, _getPossiblePluginNames2.default)(pluginName), dirname);\n}\nmodule.exports = exports["default"];\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/resolve-plugin.js?')},"./node_modules/babel-core/lib/helpers/resolve-preset.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\nexports.default = resolvePreset;\n\nvar _resolveFromPossibleNames = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-from-possible-names.js");\n\nvar _resolveFromPossibleNames2 = _interopRequireDefault(_resolveFromPossibleNames);\n\nvar _getPossiblePresetNames = __webpack_require__("./node_modules/babel-core/lib/helpers/get-possible-preset-names.js");\n\nvar _getPossiblePresetNames2 = _interopRequireDefault(_getPossiblePresetNames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction resolvePreset(presetName) {\n  var dirname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.cwd();\n\n  return (0, _resolveFromPossibleNames2.default)((0, _getPossiblePresetNames2.default)(presetName), dirname);\n}\nmodule.exports = exports["default"];\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/resolve-preset.js?')},"./node_modules/babel-core/lib/helpers/resolve.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.default = function (loc) {\n  var relative = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process.cwd();\n\n  if ((typeof _module2.default === "undefined" ? "undefined" : (0, _typeof3.default)(_module2.default)) === "object") return null;\n\n  var relativeMod = relativeModules[relative];\n\n  if (!relativeMod) {\n    relativeMod = new _module2.default();\n\n    var filename = _path2.default.join(relative, ".babelrc");\n    relativeMod.id = filename;\n    relativeMod.filename = filename;\n\n    relativeMod.paths = _module2.default._nodeModulePaths(relative);\n    relativeModules[relative] = relativeMod;\n  }\n\n  try {\n    return _module2.default._resolveFilename(loc, relativeMod);\n  } catch (err) {\n    return null;\n  }\n};\n\nvar _module = __webpack_require__("./node_modules/node-libs-browser/mock/empty.js");\n\nvar _module2 = _interopRequireDefault(_module);\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar relativeModules = {};\n\nmodule.exports = exports["default"];\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/helpers/resolve.js?')},"./node_modules/babel-core/lib/store.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _map = __webpack_require__("./node_modules/babel-runtime/core-js/map.js");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Store = function (_Map) {\n  (0, _inherits3.default)(Store, _Map);\n\n  function Store() {\n    (0, _classCallCheck3.default)(this, Store);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Map.call(this));\n\n    _this.dynamicData = {};\n    return _this;\n  }\n\n  Store.prototype.setDynamic = function setDynamic(key, fn) {\n    this.dynamicData[key] = fn;\n  };\n\n  Store.prototype.get = function get(key) {\n    if (this.has(key)) {\n      return _Map.prototype.get.call(this, key);\n    } else {\n      if (Object.prototype.hasOwnProperty.call(this.dynamicData, key)) {\n        var val = this.dynamicData[key]();\n        this.set(key, val);\n        return val;\n      }\n    }\n  };\n\n  return Store;\n}(_map2.default);\n\nexports.default = Store;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/store.js?')},"./node_modules/babel-core/lib/tools/build-external-helpers.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (whitelist) {\n  var outputType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "global";\n\n  var namespace = t.identifier("babelHelpers");\n\n  var builder = function builder(body) {\n    return buildHelpers(body, namespace, whitelist);\n  };\n\n  var tree = void 0;\n\n  var build = {\n    global: buildGlobal,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(namespace, builder);\n  } else {\n    throw new Error(messages.get("unsupportedOutputType", outputType));\n  }\n\n  return (0, _babelGenerator2.default)(tree).code;\n};\n\nvar _babelHelpers = __webpack_require__("./node_modules/babel-helpers/lib/index.js");\n\nvar helpers = _interopRequireWildcard(_babelHelpers);\n\nvar _babelGenerator = __webpack_require__("./node_modules/babel-generator/lib/index.js");\n\nvar _babelGenerator2 = _interopRequireDefault(_babelGenerator);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar buildUmdWrapper = (0, _babelTemplate2.default)("\\n  (function (root, factory) {\\n    if (typeof define === \\"function\\" && define.amd) {\\n      define(AMD_ARGUMENTS, factory);\\n    } else if (typeof exports === \\"object\\") {\\n      factory(COMMON_ARGUMENTS);\\n    } else {\\n      factory(BROWSER_ARGUMENTS);\\n    }\\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\\n    FACTORY_BODY\\n  });\\n");\n\nfunction buildGlobal(namespace, builder) {\n  var body = [];\n  var container = t.functionExpression(null, [t.identifier("global")], t.blockStatement(body));\n  var tree = t.program([t.expressionStatement(t.callExpression(container, [helpers.get("selfGlobal")]))]);\n\n  body.push(t.variableDeclaration("var", [t.variableDeclarator(namespace, t.assignmentExpression("=", t.memberExpression(t.identifier("global"), namespace), t.objectExpression([])))]));\n\n  builder(body);\n\n  return tree;\n}\n\nfunction buildUmd(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration("var", [t.variableDeclarator(namespace, t.identifier("global"))]));\n\n  builder(body);\n\n  return t.program([buildUmdWrapper({\n    FACTORY_PARAMETERS: t.identifier("global"),\n    BROWSER_ARGUMENTS: t.assignmentExpression("=", t.memberExpression(t.identifier("root"), namespace), t.objectExpression([])),\n    COMMON_ARGUMENTS: t.identifier("exports"),\n    AMD_ARGUMENTS: t.arrayExpression([t.stringLiteral("exports")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: t.identifier("this")\n  })]);\n}\n\nfunction buildVar(namespace, builder) {\n  var body = [];\n  body.push(t.variableDeclaration("var", [t.variableDeclarator(namespace, t.objectExpression([]))]));\n  builder(body);\n  body.push(t.expressionStatement(namespace));\n  return t.program(body);\n}\n\nfunction buildHelpers(body, namespace, whitelist) {\n  helpers.list.forEach(function (name) {\n    if (whitelist && whitelist.indexOf(name) < 0) return;\n\n    var key = t.identifier(name);\n    body.push(t.expressionStatement(t.assignmentExpression("=", t.memberExpression(namespace, key), helpers.get(name))));\n  });\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/tools/build-external-helpers.js?')},"./node_modules/babel-core/lib/transformation/file sync recursive":function(module,exports){eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = "./node_modules/babel-core/lib/transformation/file sync recursive";\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file_sync?')},"./node_modules/babel-core/lib/transformation/file/index.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\nexports.File = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _assign = __webpack_require__("./node_modules/babel-runtime/core-js/object/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _babelHelpers = __webpack_require__("./node_modules/babel-helpers/lib/index.js");\n\nvar _babelHelpers2 = _interopRequireDefault(_babelHelpers);\n\nvar _metadata = __webpack_require__("./node_modules/babel-core/lib/transformation/file/metadata.js");\n\nvar metadataVisitor = _interopRequireWildcard(_metadata);\n\nvar _convertSourceMap = __webpack_require__("./node_modules/babel-core/node_modules/convert-source-map/index.js");\n\nvar _convertSourceMap2 = _interopRequireDefault(_convertSourceMap);\n\nvar _optionManager = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/option-manager.js");\n\nvar _optionManager2 = _interopRequireDefault(_optionManager);\n\nvar _pluginPass = __webpack_require__("./node_modules/babel-core/lib/transformation/plugin-pass.js");\n\nvar _pluginPass2 = _interopRequireDefault(_pluginPass);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _babelGenerator = __webpack_require__("./node_modules/babel-generator/lib/index.js");\n\nvar _babelGenerator2 = _interopRequireDefault(_babelGenerator);\n\nvar _babelCodeFrame = __webpack_require__("./node_modules/babel-code-frame/lib/index.js");\n\nvar _babelCodeFrame2 = _interopRequireDefault(_babelCodeFrame);\n\nvar _defaults = __webpack_require__("./node_modules/lodash/defaults.js");\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _logger = __webpack_require__("./node_modules/babel-core/lib/transformation/file/logger.js");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _store = __webpack_require__("./node_modules/babel-core/lib/store.js");\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _babylon = __webpack_require__("./node_modules/babylon/lib/index.js");\n\nvar _util = __webpack_require__("./node_modules/babel-core/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _mergeMap = __webpack_require__("./node_modules/babel-core/lib/transformation/file/merge-map.js");\n\nvar _mergeMap2 = _interopRequireDefault(_mergeMap);\n\nvar _resolve = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve.js");\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _blockHoist = __webpack_require__("./node_modules/babel-core/lib/transformation/internal-plugins/block-hoist.js");\n\nvar _blockHoist2 = _interopRequireDefault(_blockHoist);\n\nvar _shadowFunctions = __webpack_require__("./node_modules/babel-core/lib/transformation/internal-plugins/shadow-functions.js");\n\nvar _shadowFunctions2 = _interopRequireDefault(_shadowFunctions);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar shebangRegex = /^#!.*/;\n\nvar INTERNAL_PLUGINS = [[_blockHoist2.default], [_shadowFunctions2.default]];\n\nvar errorVisitor = {\n  enter: function enter(path, state) {\n    var loc = path.node.loc;\n    if (loc) {\n      state.loc = loc;\n      path.stop();\n    }\n  }\n};\n\nvar File = function (_Store) {\n  (0, _inherits3.default)(File, _Store);\n\n  function File() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var pipeline = arguments[1];\n    (0, _classCallCheck3.default)(this, File);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Store.call(this));\n\n    _this.pipeline = pipeline;\n\n    _this.log = new _logger2.default(_this, opts.filename || "unknown");\n    _this.opts = _this.initOptions(opts);\n\n    _this.parserOpts = {\n      sourceType: _this.opts.sourceType,\n      sourceFileName: _this.opts.filename,\n      plugins: []\n    };\n\n    _this.pluginVisitors = [];\n    _this.pluginPasses = [];\n\n    _this.buildPluginsForOptions(_this.opts);\n\n    if (_this.opts.passPerPreset) {\n      _this.perPresetOpts = [];\n      _this.opts.presets.forEach(function (presetOpts) {\n        var perPresetOpts = (0, _assign2.default)((0, _create2.default)(_this.opts), presetOpts);\n        _this.perPresetOpts.push(perPresetOpts);\n        _this.buildPluginsForOptions(perPresetOpts);\n      });\n    }\n\n    _this.metadata = {\n      usedHelpers: [],\n      marked: [],\n      modules: {\n        imports: [],\n        exports: {\n          exported: [],\n          specifiers: []\n        }\n      }\n    };\n\n    _this.dynamicImportTypes = {};\n    _this.dynamicImportIds = {};\n    _this.dynamicImports = [];\n    _this.declarations = {};\n    _this.usedHelpers = {};\n\n    _this.path = null;\n    _this.ast = {};\n\n    _this.code = "";\n    _this.shebang = "";\n\n    _this.hub = new _babelTraverse.Hub(_this);\n    return _this;\n  }\n\n  File.prototype.getMetadata = function getMetadata() {\n    var has = false;\n    for (var _iterator = this.ast.program.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var node = _ref;\n\n      if (t.isModuleDeclaration(node)) {\n        has = true;\n        break;\n      }\n    }\n    if (has) {\n      this.path.traverse(metadataVisitor, this);\n    }\n  };\n\n  File.prototype.initOptions = function initOptions(opts) {\n    opts = new _optionManager2.default(this.log, this.pipeline).init(opts);\n\n    if (opts.inputSourceMap) {\n      opts.sourceMaps = true;\n    }\n\n    if (opts.moduleId) {\n      opts.moduleIds = true;\n    }\n\n    opts.basename = _path2.default.basename(opts.filename, _path2.default.extname(opts.filename));\n\n    opts.ignore = util.arrayify(opts.ignore, util.regexify);\n\n    if (opts.only) opts.only = util.arrayify(opts.only, util.regexify);\n\n    (0, _defaults2.default)(opts, {\n      moduleRoot: opts.sourceRoot\n    });\n\n    (0, _defaults2.default)(opts, {\n      sourceRoot: opts.moduleRoot\n    });\n\n    (0, _defaults2.default)(opts, {\n      filenameRelative: opts.filename\n    });\n\n    var basenameRelative = _path2.default.basename(opts.filenameRelative);\n\n    (0, _defaults2.default)(opts, {\n      sourceFileName: basenameRelative,\n      sourceMapTarget: basenameRelative\n    });\n\n    return opts;\n  };\n\n  File.prototype.buildPluginsForOptions = function buildPluginsForOptions(opts) {\n    if (!Array.isArray(opts.plugins)) {\n      return;\n    }\n\n    var plugins = opts.plugins.concat(INTERNAL_PLUGINS);\n    var currentPluginVisitors = [];\n    var currentPluginPasses = [];\n\n    for (var _iterator2 = plugins, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var ref = _ref2;\n      var plugin = ref[0],\n          pluginOpts = ref[1];\n\n\n      currentPluginVisitors.push(plugin.visitor);\n      currentPluginPasses.push(new _pluginPass2.default(this, plugin, pluginOpts));\n\n      if (plugin.manipulateOptions) {\n        plugin.manipulateOptions(opts, this.parserOpts, this);\n      }\n    }\n\n    this.pluginVisitors.push(currentPluginVisitors);\n    this.pluginPasses.push(currentPluginPasses);\n  };\n\n  File.prototype.getModuleName = function getModuleName() {\n    var opts = this.opts;\n    if (!opts.moduleIds) {\n      return null;\n    }\n\n    if (opts.moduleId != null && !opts.getModuleId) {\n      return opts.moduleId;\n    }\n\n    var filenameRelative = opts.filenameRelative;\n    var moduleName = "";\n\n    if (opts.moduleRoot != null) {\n      moduleName = opts.moduleRoot + "/";\n    }\n\n    if (!opts.filenameRelative) {\n      return moduleName + opts.filename.replace(/^\\//, "");\n    }\n\n    if (opts.sourceRoot != null) {\n      var sourceRootRegEx = new RegExp("^" + opts.sourceRoot + "\\/?");\n      filenameRelative = filenameRelative.replace(sourceRootRegEx, "");\n    }\n\n    filenameRelative = filenameRelative.replace(/\\.(\\w*?)$/, "");\n\n    moduleName += filenameRelative;\n\n    moduleName = moduleName.replace(/\\\\/g, "/");\n\n    if (opts.getModuleId) {\n      return opts.getModuleId(moduleName) || moduleName;\n    } else {\n      return moduleName;\n    }\n  };\n\n  File.prototype.resolveModuleSource = function resolveModuleSource(source) {\n    var resolveModuleSource = this.opts.resolveModuleSource;\n    if (resolveModuleSource) source = resolveModuleSource(source, this.opts.filename);\n    return source;\n  };\n\n  File.prototype.addImport = function addImport(source, imported) {\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : imported;\n\n    var alias = source + ":" + imported;\n    var id = this.dynamicImportIds[alias];\n\n    if (!id) {\n      source = this.resolveModuleSource(source);\n      id = this.dynamicImportIds[alias] = this.scope.generateUidIdentifier(name);\n\n      var specifiers = [];\n\n      if (imported === "*") {\n        specifiers.push(t.importNamespaceSpecifier(id));\n      } else if (imported === "default") {\n        specifiers.push(t.importDefaultSpecifier(id));\n      } else {\n        specifiers.push(t.importSpecifier(id, t.identifier(imported)));\n      }\n\n      var declar = t.importDeclaration(specifiers, t.stringLiteral(source));\n      declar._blockHoist = 3;\n\n      this.path.unshiftContainer("body", declar);\n    }\n\n    return id;\n  };\n\n  File.prototype.addHelper = function addHelper(name) {\n    var declar = this.declarations[name];\n    if (declar) return declar;\n\n    if (!this.usedHelpers[name]) {\n      this.metadata.usedHelpers.push(name);\n      this.usedHelpers[name] = true;\n    }\n\n    var generator = this.get("helperGenerator");\n    var runtime = this.get("helpersNamespace");\n    if (generator) {\n      var res = generator(name);\n      if (res) return res;\n    } else if (runtime) {\n      return t.memberExpression(runtime, t.identifier(name));\n    }\n\n    var ref = (0, _babelHelpers2.default)(name);\n    var uid = this.declarations[name] = this.scope.generateUidIdentifier(name);\n\n    if (t.isFunctionExpression(ref) && !ref.id) {\n      ref.body._compact = true;\n      ref._generated = true;\n      ref.id = uid;\n      ref.type = "FunctionDeclaration";\n      this.path.unshiftContainer("body", ref);\n    } else {\n      ref._compact = true;\n      this.scope.push({\n        id: uid,\n        init: ref,\n        unique: true\n      });\n    }\n\n    return uid;\n  };\n\n  File.prototype.addTemplateObject = function addTemplateObject(helperName, strings, raw) {\n    var stringIds = raw.elements.map(function (string) {\n      return string.value;\n    });\n    var name = helperName + "_" + raw.elements.length + "_" + stringIds.join(",");\n\n    var declar = this.declarations[name];\n    if (declar) return declar;\n\n    var uid = this.declarations[name] = this.scope.generateUidIdentifier("templateObject");\n\n    var helperId = this.addHelper(helperName);\n    var init = t.callExpression(helperId, [strings, raw]);\n    init._compact = true;\n    this.scope.push({\n      id: uid,\n      init: init,\n      _blockHoist: 1.9 });\n    return uid;\n  };\n\n  File.prototype.buildCodeFrameError = function buildCodeFrameError(node, msg) {\n    var Error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : SyntaxError;\n\n    var loc = node && (node.loc || node._loc);\n\n    var err = new Error(msg);\n\n    if (loc) {\n      err.loc = loc.start;\n    } else {\n      (0, _babelTraverse2.default)(node, errorVisitor, this.scope, err);\n\n      err.message += " (This is an error on an internal node. Probably an internal error";\n\n      if (err.loc) {\n        err.message += ". Location has been estimated.";\n      }\n\n      err.message += ")";\n    }\n\n    return err;\n  };\n\n  File.prototype.mergeSourceMap = function mergeSourceMap(map) {\n    var inputMap = this.opts.inputSourceMap;\n\n    if (inputMap && map) {\n      return (0, _mergeMap2.default)(inputMap, map);\n    } else {\n      return map;\n    }\n  };\n\n  File.prototype.parse = function parse(code) {\n    var parseCode = _babylon.parse;\n    var parserOpts = this.opts.parserOpts;\n\n    if (parserOpts) {\n      parserOpts = (0, _assign2.default)({}, this.parserOpts, parserOpts);\n\n      if (parserOpts.parser) {\n        if (typeof parserOpts.parser === "string") {\n          var dirname = _path2.default.dirname(this.opts.filename) || process.cwd();\n          var parser = (0, _resolve2.default)(parserOpts.parser, dirname);\n          if (parser) {\n            parseCode = __webpack_require__("./node_modules/babel-core/lib/transformation/file sync recursive")(parser).parse;\n          } else {\n            throw new Error("Couldn\'t find parser " + parserOpts.parser + " with \\"parse\\" method " + ("relative to directory " + dirname));\n          }\n        } else {\n          parseCode = parserOpts.parser;\n        }\n\n        parserOpts.parser = {\n          parse: function parse(source) {\n            return (0, _babylon.parse)(source, parserOpts);\n          }\n        };\n      }\n    }\n\n    this.log.debug("Parse start");\n    var ast = parseCode(code, parserOpts || this.parserOpts);\n    this.log.debug("Parse stop");\n    return ast;\n  };\n\n  File.prototype._addAst = function _addAst(ast) {\n    this.path = _babelTraverse.NodePath.get({\n      hub: this.hub,\n      parentPath: null,\n      parent: ast,\n      container: ast,\n      key: "program"\n    }).setContext();\n    this.scope = this.path.scope;\n    this.ast = ast;\n    this.getMetadata();\n  };\n\n  File.prototype.addAst = function addAst(ast) {\n    this.log.debug("Start set AST");\n    this._addAst(ast);\n    this.log.debug("End set AST");\n  };\n\n  File.prototype.transform = function transform() {\n    for (var i = 0; i < this.pluginPasses.length; i++) {\n      var pluginPasses = this.pluginPasses[i];\n      this.call("pre", pluginPasses);\n      this.log.debug("Start transform traverse");\n\n      var visitor = _babelTraverse2.default.visitors.merge(this.pluginVisitors[i], pluginPasses, this.opts.wrapPluginVisitorMethod);\n      (0, _babelTraverse2.default)(this.ast, visitor, this.scope);\n\n      this.log.debug("End transform traverse");\n      this.call("post", pluginPasses);\n    }\n\n    return this.generate();\n  };\n\n  File.prototype.wrap = function wrap(code, callback) {\n    code = code + "";\n\n    try {\n      if (this.shouldIgnore()) {\n        return this.makeResult({ code: code, ignored: true });\n      } else {\n        return callback();\n      }\n    } catch (err) {\n      if (err._babel) {\n        throw err;\n      } else {\n        err._babel = true;\n      }\n\n      var message = err.message = this.opts.filename + ": " + err.message;\n\n      var loc = err.loc;\n      if (loc) {\n        err.codeFrame = (0, _babelCodeFrame2.default)(code, loc.line, loc.column + 1, this.opts);\n        message += "\\n" + err.codeFrame;\n      }\n\n      if (process.browser) {\n        err.message = message;\n      }\n\n      if (err.stack) {\n        var newStack = err.stack.replace(err.message, message);\n        err.stack = newStack;\n      }\n\n      throw err;\n    }\n  };\n\n  File.prototype.addCode = function addCode(code) {\n    code = (code || "") + "";\n    code = this.parseInputSourceMap(code);\n    this.code = code;\n  };\n\n  File.prototype.parseCode = function parseCode() {\n    this.parseShebang();\n    var ast = this.parse(this.code);\n    this.addAst(ast);\n  };\n\n  File.prototype.shouldIgnore = function shouldIgnore() {\n    var opts = this.opts;\n    return util.shouldIgnore(opts.filename, opts.ignore, opts.only);\n  };\n\n  File.prototype.call = function call(key, pluginPasses) {\n    for (var _iterator3 = pluginPasses, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var pass = _ref3;\n\n      var plugin = pass.plugin;\n      var fn = plugin[key];\n      if (fn) fn.call(pass, this);\n    }\n  };\n\n  File.prototype.parseInputSourceMap = function parseInputSourceMap(code) {\n    var opts = this.opts;\n\n    if (opts.inputSourceMap !== false) {\n      var inputMap = _convertSourceMap2.default.fromSource(code);\n      if (inputMap) {\n        opts.inputSourceMap = inputMap.toObject();\n        code = _convertSourceMap2.default.removeComments(code);\n      }\n    }\n\n    return code;\n  };\n\n  File.prototype.parseShebang = function parseShebang() {\n    var shebangMatch = shebangRegex.exec(this.code);\n    if (shebangMatch) {\n      this.shebang = shebangMatch[0];\n      this.code = this.code.replace(shebangRegex, "");\n    }\n  };\n\n  File.prototype.makeResult = function makeResult(_ref4) {\n    var code = _ref4.code,\n        map = _ref4.map,\n        ast = _ref4.ast,\n        ignored = _ref4.ignored;\n\n    var result = {\n      metadata: null,\n      options: this.opts,\n      ignored: !!ignored,\n      code: null,\n      ast: null,\n      map: map || null\n    };\n\n    if (this.opts.code) {\n      result.code = code;\n    }\n\n    if (this.opts.ast) {\n      result.ast = ast;\n    }\n\n    if (this.opts.metadata) {\n      result.metadata = this.metadata;\n    }\n\n    return result;\n  };\n\n  File.prototype.generate = function generate() {\n    var opts = this.opts;\n    var ast = this.ast;\n\n    var result = { ast: ast };\n    if (!opts.code) return this.makeResult(result);\n\n    var gen = _babelGenerator2.default;\n    if (opts.generatorOpts.generator) {\n      gen = opts.generatorOpts.generator;\n\n      if (typeof gen === "string") {\n        var dirname = _path2.default.dirname(this.opts.filename) || process.cwd();\n        var generator = (0, _resolve2.default)(gen, dirname);\n        if (generator) {\n          gen = __webpack_require__("./node_modules/babel-core/lib/transformation/file sync recursive")(generator).print;\n        } else {\n          throw new Error("Couldn\'t find generator " + gen + " with \\"print\\" method relative " + ("to directory " + dirname));\n        }\n      }\n    }\n\n    this.log.debug("Generation start");\n\n    var _result = gen(ast, opts.generatorOpts ? (0, _assign2.default)(opts, opts.generatorOpts) : opts, this.code);\n    result.code = _result.code;\n    result.map = _result.map;\n\n    this.log.debug("Generation end");\n\n    if (this.shebang) {\n      result.code = this.shebang + "\\n" + result.code;\n    }\n\n    if (result.map) {\n      result.map = this.mergeSourceMap(result.map);\n    }\n\n    if (opts.sourceMaps === "inline" || opts.sourceMaps === "both") {\n      result.code += "\\n" + _convertSourceMap2.default.fromObject(result.map).toComment();\n    }\n\n    if (opts.sourceMaps === "inline") {\n      result.map = null;\n    }\n\n    return this.makeResult(result);\n  };\n\n  return File;\n}(_store2.default);\n\nexports.default = File;\nexports.File = File;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/index.js?')},"./node_modules/babel-core/lib/transformation/file/logger.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _node = __webpack_require__("./node_modules/debug/node.js");\n\nvar _node2 = _interopRequireDefault(_node);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar verboseDebug = (0, _node2.default)("babel:verbose");\nvar generalDebug = (0, _node2.default)("babel");\n\nvar seenDeprecatedMessages = [];\n\nvar Logger = function () {\n  function Logger(file, filename) {\n    (0, _classCallCheck3.default)(this, Logger);\n\n    this.filename = filename;\n    this.file = file;\n  }\n\n  Logger.prototype._buildMessage = function _buildMessage(msg) {\n    var parts = "[BABEL] " + this.filename;\n    if (msg) parts += ": " + msg;\n    return parts;\n  };\n\n  Logger.prototype.warn = function warn(msg) {\n    console.warn(this._buildMessage(msg));\n  };\n\n  Logger.prototype.error = function error(msg) {\n    var Constructor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Error;\n\n    throw new Constructor(this._buildMessage(msg));\n  };\n\n  Logger.prototype.deprecate = function deprecate(msg) {\n    if (this.file.opts && this.file.opts.suppressDeprecationMessages) return;\n\n    msg = this._buildMessage(msg);\n\n    if (seenDeprecatedMessages.indexOf(msg) >= 0) return;\n\n    seenDeprecatedMessages.push(msg);\n\n    console.error(msg);\n  };\n\n  Logger.prototype.verbose = function verbose(msg) {\n    if (verboseDebug.enabled) verboseDebug(this._buildMessage(msg));\n  };\n\n  Logger.prototype.debug = function debug(msg) {\n    if (generalDebug.enabled) generalDebug(this._buildMessage(msg));\n  };\n\n  Logger.prototype.deopt = function deopt(node, msg) {\n    this.debug(msg);\n  };\n\n  return Logger;\n}();\n\nexports.default = Logger;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/logger.js?')},"./node_modules/babel-core/lib/transformation/file/merge-map.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__("./node_modules/babel-runtime/core-js/array/from.js");\n\nvar _from2 = _interopRequireDefault(_from);\n\nvar _extends2 = __webpack_require__("./node_modules/babel-runtime/helpers/extends.js");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _map = __webpack_require__("./node_modules/babel-runtime/core-js/map.js");\n\nvar _map2 = _interopRequireDefault(_map);\n\nexports.default = mergeSourceMap;\n\nvar _sourceMap = __webpack_require__("./node_modules/babel-core/node_modules/source-map/source-map.js");\n\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction mergeSourceMap(inputMap, map) {\n  var input = buildMappingData(inputMap);\n  var output = buildMappingData(map);\n\n  var mergedGenerator = new _sourceMap2.default.SourceMapGenerator();\n  for (var _iterator = input.sources, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref2;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref2 = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref2 = _i.value;\n    }\n\n    var _ref4 = _ref2;\n    var _source = _ref4.source;\n\n    if (typeof _source.content === "string") {\n      mergedGenerator.setSourceContent(_source.path, _source.content);\n    }\n  }\n\n  if (output.sources.length === 1) {\n    var defaultSource = output.sources[0];\n    var insertedMappings = new _map2.default();\n\n    eachInputGeneratedRange(input, function (generated, original, source) {\n      eachOverlappingGeneratedOutputRange(defaultSource, generated, function (item) {\n        var key = makeMappingKey(item);\n        if (insertedMappings.has(key)) return;\n        insertedMappings.set(key, item);\n\n        mergedGenerator.addMapping({\n          source: source.path,\n          original: {\n            line: original.line,\n            column: original.columnStart\n          },\n          generated: {\n            line: item.line,\n            column: item.columnStart\n          },\n          name: original.name\n        });\n      });\n    });\n\n    for (var _iterator2 = insertedMappings.values(), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var item = _ref3;\n\n      if (item.columnEnd === Infinity) {\n        continue;\n      }\n\n      var clearItem = {\n        line: item.line,\n        columnStart: item.columnEnd\n      };\n\n      var key = makeMappingKey(clearItem);\n      if (insertedMappings.has(key)) {\n        continue;\n      }\n\n      mergedGenerator.addMapping({\n        generated: {\n          line: clearItem.line,\n          column: clearItem.columnStart\n        }\n      });\n    }\n  }\n\n  var result = mergedGenerator.toJSON();\n\n  if (typeof input.sourceRoot === "string") {\n    result.sourceRoot = input.sourceRoot;\n  }\n  return result;\n}\n\nfunction makeMappingKey(item) {\n  return (0, _stringify2.default)([item.line, item.columnStart]);\n}\n\nfunction eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {\n  var overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);\n\n  for (var _iterator3 = overlappingOriginal, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref6;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref6 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref6 = _i3.value;\n    }\n\n    var _ref7 = _ref6;\n    var _generated = _ref7.generated;\n\n    for (var _iterator4 = _generated, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n      var _ref8;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref8 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref8 = _i4.value;\n      }\n\n      var item = _ref8;\n\n      callback(item);\n    }\n  }\n}\n\nfunction filterApplicableOriginalRanges(_ref9, _ref10) {\n  var mappings = _ref9.mappings;\n  var line = _ref10.line,\n      columnStart = _ref10.columnStart,\n      columnEnd = _ref10.columnEnd;\n\n  return filterSortedArray(mappings, function (_ref11) {\n    var outOriginal = _ref11.original;\n\n    if (line > outOriginal.line) return -1;\n    if (line < outOriginal.line) return 1;\n\n    if (columnStart >= outOriginal.columnEnd) return -1;\n    if (columnEnd <= outOriginal.columnStart) return 1;\n\n    return 0;\n  });\n}\n\nfunction eachInputGeneratedRange(map, callback) {\n  for (var _iterator5 = map.sources, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n    var _ref13;\n\n    if (_isArray5) {\n      if (_i5 >= _iterator5.length) break;\n      _ref13 = _iterator5[_i5++];\n    } else {\n      _i5 = _iterator5.next();\n      if (_i5.done) break;\n      _ref13 = _i5.value;\n    }\n\n    var _ref14 = _ref13;\n    var _source2 = _ref14.source,\n        _mappings = _ref14.mappings;\n\n    for (var _iterator6 = _mappings, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n      var _ref16;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref16 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref16 = _i6.value;\n      }\n\n      var _ref17 = _ref16;\n      var _original = _ref17.original,\n          _generated2 = _ref17.generated;\n\n      for (var _iterator7 = _generated2, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n        var _ref18;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref18 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref18 = _i7.value;\n        }\n\n        var item = _ref18;\n\n        callback(item, _original, _source2);\n      }\n    }\n  }\n}\n\nfunction buildMappingData(map) {\n  var consumer = new _sourceMap2.default.SourceMapConsumer((0, _extends3.default)({}, map, {\n    sourceRoot: null\n  }));\n\n  var sources = new _map2.default();\n  var mappings = new _map2.default();\n\n  var last = null;\n\n  consumer.computeColumnSpans();\n\n  consumer.eachMapping(function (m) {\n    if (m.originalLine === null) return;\n\n    var source = sources.get(m.source);\n    if (!source) {\n      source = {\n        path: m.source,\n        content: consumer.sourceContentFor(m.source, true)\n      };\n      sources.set(m.source, source);\n    }\n\n    var sourceData = mappings.get(source);\n    if (!sourceData) {\n      sourceData = {\n        source: source,\n        mappings: []\n      };\n      mappings.set(source, sourceData);\n    }\n\n    var obj = {\n      line: m.originalLine,\n      columnStart: m.originalColumn,\n      columnEnd: Infinity,\n      name: m.name\n    };\n\n    if (last && last.source === source && last.mapping.line === m.originalLine) {\n      last.mapping.columnEnd = m.originalColumn;\n    }\n\n    last = {\n      source: source,\n      mapping: obj\n    };\n\n    sourceData.mappings.push({\n      original: obj,\n      generated: consumer.allGeneratedPositionsFor({\n        source: m.source,\n        line: m.originalLine,\n        column: m.originalColumn\n      }).map(function (item) {\n        return {\n          line: item.line,\n          columnStart: item.column,\n\n          columnEnd: item.lastColumn + 1\n        };\n      })\n    });\n  }, null, _sourceMap2.default.SourceMapConsumer.ORIGINAL_ORDER);\n\n  return {\n    file: map.file,\n    sourceRoot: map.sourceRoot,\n    sources: (0, _from2.default)(mappings.values())\n  };\n}\n\nfunction findInsertionLocation(array, callback) {\n  var left = 0;\n  var right = array.length;\n  while (left < right) {\n    var mid = Math.floor((left + right) / 2);\n    var item = array[mid];\n\n    var result = callback(item);\n    if (result === 0) {\n      left = mid;\n      break;\n    }\n    if (result >= 0) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  var i = left;\n  if (i < array.length) {\n    while (i > 0 && callback(array[i]) >= 0) {\n      i--;\n    }\n    return i + 1;\n  }\n\n  return i;\n}\n\nfunction filterSortedArray(array, callback) {\n  var start = findInsertionLocation(array, callback);\n\n  var results = [];\n  for (var i = start; i < array.length && callback(array[i]) === 0; i++) {\n    results.push(array[i]);\n  }\n\n  return results;\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/merge-map.js?')},"./node_modules/babel-core/lib/transformation/file/metadata.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ImportDeclaration = exports.ModuleDeclaration = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.ExportDeclaration = ExportDeclaration;\nexports.Scope = Scope;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ModuleDeclaration = exports.ModuleDeclaration = {\n  enter: function enter(path, file) {\n    var node = path.node;\n\n    if (node.source) {\n      node.source.value = file.resolveModuleSource(node.source.value);\n    }\n  }\n};\n\nvar ImportDeclaration = exports.ImportDeclaration = {\n  exit: function exit(path, file) {\n    var node = path.node;\n\n\n    var specifiers = [];\n    var imported = [];\n    file.metadata.modules.imports.push({\n      source: node.source.value,\n      imported: imported,\n      specifiers: specifiers\n    });\n\n    for (var _iterator = path.get("specifiers"), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var specifier = _ref;\n\n      var local = specifier.node.local.name;\n\n      if (specifier.isImportDefaultSpecifier()) {\n        imported.push("default");\n        specifiers.push({\n          kind: "named",\n          imported: "default",\n          local: local\n        });\n      }\n\n      if (specifier.isImportSpecifier()) {\n        var importedName = specifier.node.imported.name;\n        imported.push(importedName);\n        specifiers.push({\n          kind: "named",\n          imported: importedName,\n          local: local\n        });\n      }\n\n      if (specifier.isImportNamespaceSpecifier()) {\n        imported.push("*");\n        specifiers.push({\n          kind: "namespace",\n          local: local\n        });\n      }\n    }\n  }\n};\n\nfunction ExportDeclaration(path, file) {\n  var node = path.node;\n\n\n  var source = node.source ? node.source.value : null;\n  var exports = file.metadata.modules.exports;\n\n  var declar = path.get("declaration");\n  if (declar.isStatement()) {\n    var bindings = declar.getBindingIdentifiers();\n\n    for (var name in bindings) {\n      exports.exported.push(name);\n      exports.specifiers.push({\n        kind: "local",\n        local: name,\n        exported: path.isExportDefaultDeclaration() ? "default" : name\n      });\n    }\n  }\n\n  if (path.isExportNamedDeclaration() && node.specifiers) {\n    for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var specifier = _ref2;\n\n      var exported = specifier.exported.name;\n      exports.exported.push(exported);\n\n      if (t.isExportDefaultSpecifier(specifier)) {\n        exports.specifiers.push({\n          kind: "external",\n          local: exported,\n          exported: exported,\n          source: source\n        });\n      }\n\n      if (t.isExportNamespaceSpecifier(specifier)) {\n        exports.specifiers.push({\n          kind: "external-namespace",\n          exported: exported,\n          source: source\n        });\n      }\n\n      var local = specifier.local;\n      if (!local) continue;\n\n      if (source) {\n        exports.specifiers.push({\n          kind: "external",\n          local: local.name,\n          exported: exported,\n          source: source\n        });\n      }\n\n      if (!source) {\n        exports.specifiers.push({\n          kind: "local",\n          local: local.name,\n          exported: exported\n        });\n      }\n    }\n  }\n\n  if (path.isExportAllDeclaration()) {\n    exports.specifiers.push({\n      kind: "external-all",\n      source: source\n    });\n  }\n}\n\nfunction Scope(path) {\n  path.skip();\n}\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/metadata.js?')},"./node_modules/babel-core/lib/transformation/file/options sync recursive":function(module,exports){eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = "./node_modules/babel-core/lib/transformation/file/options sync recursive";\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options_sync?')},"./node_modules/babel-core/lib/transformation/file/options/build-config-chain.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__("./node_modules/babel-runtime/core-js/object/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = buildConfigChain;\n\nvar _resolve = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve.js");\n\nvar _resolve2 = _interopRequireDefault(_resolve);\n\nvar _json = __webpack_require__("./node_modules/babel-core/node_modules/json5/lib/json5.js");\n\nvar _json2 = _interopRequireDefault(_json);\n\nvar _pathIsAbsolute = __webpack_require__("./node_modules/path-is-absolute/index.js");\n\nvar _pathIsAbsolute2 = _interopRequireDefault(_pathIsAbsolute);\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = __webpack_require__("./node_modules/node-libs-browser/mock/empty.js");\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar existsCache = {};\nvar jsonCache = {};\n\nvar BABELIGNORE_FILENAME = ".babelignore";\nvar BABELRC_FILENAME = ".babelrc";\nvar PACKAGE_FILENAME = "package.json";\n\nfunction exists(filename) {\n  var cached = existsCache[filename];\n  if (cached == null) {\n    return existsCache[filename] = _fs2.default.existsSync(filename);\n  } else {\n    return cached;\n  }\n}\n\nfunction buildConfigChain() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var log = arguments[1];\n\n  var filename = opts.filename;\n  var builder = new ConfigChainBuilder(log);\n\n  if (opts.babelrc !== false) {\n    builder.findConfigs(filename);\n  }\n\n  builder.mergeConfig({\n    options: opts,\n    alias: "base",\n    dirname: filename && _path2.default.dirname(filename)\n  });\n\n  return builder.configs;\n}\n\nvar ConfigChainBuilder = function () {\n  function ConfigChainBuilder(log) {\n    (0, _classCallCheck3.default)(this, ConfigChainBuilder);\n\n    this.resolvedConfigs = [];\n    this.configs = [];\n    this.log = log;\n  }\n\n  ConfigChainBuilder.prototype.findConfigs = function findConfigs(loc) {\n    if (!loc) return;\n\n    if (!(0, _pathIsAbsolute2.default)(loc)) {\n      loc = _path2.default.join(process.cwd(), loc);\n    }\n\n    var foundConfig = false;\n    var foundIgnore = false;\n\n    while (loc !== (loc = _path2.default.dirname(loc))) {\n      if (!foundConfig) {\n        var configLoc = _path2.default.join(loc, BABELRC_FILENAME);\n        if (exists(configLoc)) {\n          this.addConfig(configLoc);\n          foundConfig = true;\n        }\n\n        var pkgLoc = _path2.default.join(loc, PACKAGE_FILENAME);\n        if (!foundConfig && exists(pkgLoc)) {\n          foundConfig = this.addConfig(pkgLoc, "babel", JSON);\n        }\n      }\n\n      if (!foundIgnore) {\n        var ignoreLoc = _path2.default.join(loc, BABELIGNORE_FILENAME);\n        if (exists(ignoreLoc)) {\n          this.addIgnoreConfig(ignoreLoc);\n          foundIgnore = true;\n        }\n      }\n\n      if (foundIgnore && foundConfig) return;\n    }\n  };\n\n  ConfigChainBuilder.prototype.addIgnoreConfig = function addIgnoreConfig(loc) {\n    var file = _fs2.default.readFileSync(loc, "utf8");\n    var lines = file.split("\\n");\n\n    lines = lines.map(function (line) {\n      return line.replace(/#(.*?)$/, "").trim();\n    }).filter(function (line) {\n      return !!line;\n    });\n\n    if (lines.length) {\n      this.mergeConfig({\n        options: { ignore: lines },\n        alias: loc,\n        dirname: _path2.default.dirname(loc)\n      });\n    }\n  };\n\n  ConfigChainBuilder.prototype.addConfig = function addConfig(loc, key) {\n    var json = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _json2.default;\n\n    if (this.resolvedConfigs.indexOf(loc) >= 0) {\n      return false;\n    }\n\n    this.resolvedConfigs.push(loc);\n\n    var content = _fs2.default.readFileSync(loc, "utf8");\n    var options = void 0;\n\n    try {\n      options = jsonCache[content] = jsonCache[content] || json.parse(content);\n      if (key) options = options[key];\n    } catch (err) {\n      err.message = loc + ": Error while parsing JSON - " + err.message;\n      throw err;\n    }\n\n    this.mergeConfig({\n      options: options,\n      alias: loc,\n      dirname: _path2.default.dirname(loc)\n    });\n\n    return !!options;\n  };\n\n  ConfigChainBuilder.prototype.mergeConfig = function mergeConfig(_ref) {\n    var options = _ref.options,\n        alias = _ref.alias,\n        loc = _ref.loc,\n        dirname = _ref.dirname;\n\n    if (!options) {\n      return false;\n    }\n\n    options = (0, _assign2.default)({}, options);\n\n    dirname = dirname || process.cwd();\n    loc = loc || alias;\n\n    if (options.extends) {\n      var extendsLoc = (0, _resolve2.default)(options.extends, dirname);\n      if (extendsLoc) {\n        this.addConfig(extendsLoc);\n      } else {\n        if (this.log) this.log.error("Couldn\'t resolve extends clause of " + options.extends + " in " + alias);\n      }\n      delete options.extends;\n    }\n\n    this.configs.push({\n      options: options,\n      alias: alias,\n      loc: loc,\n      dirname: dirname\n    });\n\n    var envOpts = void 0;\n    var envKey = process.env.BABEL_ENV || "production" || "development";\n    if (options.env) {\n      envOpts = options.env[envKey];\n      delete options.env;\n    }\n\n    this.mergeConfig({\n      options: envOpts,\n      alias: alias + ".env." + envKey,\n      dirname: dirname\n    });\n  };\n\n  return ConfigChainBuilder;\n}();\n\nmodule.exports = exports["default"];\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/build-config-chain.js?')},"./node_modules/babel-core/lib/transformation/file/options/config.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = {\n  filename: {\n    type: "filename",\n    description: "filename to use when reading from stdin - this will be used in source-maps, errors etc",\n    default: "unknown",\n    shorthand: "f"\n  },\n\n  filenameRelative: {\n    hidden: true,\n    type: "string"\n  },\n\n  inputSourceMap: {\n    hidden: true\n  },\n\n  env: {\n    hidden: true,\n    default: {}\n  },\n\n  mode: {\n    description: "",\n    hidden: true\n  },\n\n  retainLines: {\n    type: "boolean",\n    default: false,\n    description: "retain line numbers - will result in really ugly code"\n  },\n\n  highlightCode: {\n    description: "enable/disable ANSI syntax highlighting of code frames (on by default)",\n    type: "boolean",\n    default: true\n  },\n\n  suppressDeprecationMessages: {\n    type: "boolean",\n    default: false,\n    hidden: true\n  },\n\n  presets: {\n    type: "list",\n    description: "",\n    default: []\n  },\n\n  plugins: {\n    type: "list",\n    default: [],\n    description: ""\n  },\n\n  ignore: {\n    type: "list",\n    description: "list of glob paths to **not** compile",\n    default: []\n  },\n\n  only: {\n    type: "list",\n    description: "list of glob paths to **only** compile"\n  },\n\n  code: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  metadata: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  ast: {\n    hidden: true,\n    default: true,\n    type: "boolean"\n  },\n\n  extends: {\n    type: "string",\n    hidden: true\n  },\n\n  comments: {\n    type: "boolean",\n    default: true,\n    description: "write comments to generated output (true by default)"\n  },\n\n  shouldPrintComment: {\n    hidden: true,\n    description: "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored"\n  },\n\n  wrapPluginVisitorMethod: {\n    hidden: true,\n    description: "optional callback to wrap all visitor methods"\n  },\n\n  compact: {\n    type: "booleanString",\n    default: "auto",\n    description: "do not include superfluous whitespace characters and line terminators [true|false|auto]"\n  },\n\n  minified: {\n    type: "boolean",\n    default: false,\n    description: "save as much bytes when printing [true|false]"\n  },\n\n  sourceMap: {\n    alias: "sourceMaps",\n    hidden: true\n  },\n\n  sourceMaps: {\n    type: "booleanString",\n    description: "[true|false|inline]",\n    default: false,\n    shorthand: "s"\n  },\n\n  sourceMapTarget: {\n    type: "string",\n    description: "set `file` on returned source map"\n  },\n\n  sourceFileName: {\n    type: "string",\n    description: "set `sources[0]` on returned source map"\n  },\n\n  sourceRoot: {\n    type: "filename",\n    description: "the root from which all sources are relative"\n  },\n\n  babelrc: {\n    description: "Whether or not to look up .babelrc and .babelignore files",\n    type: "boolean",\n    default: true\n  },\n\n  sourceType: {\n    description: "",\n    default: "module"\n  },\n\n  auxiliaryCommentBefore: {\n    type: "string",\n    description: "print a comment before any injected non-user code"\n  },\n\n  auxiliaryCommentAfter: {\n    type: "string",\n    description: "print a comment after any injected non-user code"\n  },\n\n  resolveModuleSource: {\n    hidden: true\n  },\n\n  getModuleId: {\n    hidden: true\n  },\n\n  moduleRoot: {\n    type: "filename",\n    description: "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions"\n  },\n\n  moduleIds: {\n    type: "boolean",\n    default: false,\n    shorthand: "M",\n    description: "insert an explicit id for modules"\n  },\n\n  moduleId: {\n    description: "specify a custom name for module ids",\n    type: "string"\n  },\n\n  passPerPreset: {\n    description: "Whether to spawn a traversal pass per a preset. By default all presets are merged.",\n    type: "boolean",\n    default: false,\n    hidden: true\n  },\n\n  parserOpts: {\n    description: "Options to pass into the parser, or to change parsers (parserOpts.parser)",\n    default: false\n  },\n\n  generatorOpts: {\n    description: "Options to pass into the generator, or to change generators (generatorOpts.generator)",\n    default: false\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/config.js?')},"./node_modules/babel-core/lib/transformation/file/options/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.config = undefined;\nexports.normaliseOptions = normaliseOptions;\n\nvar _parsers = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/parsers.js");\n\nvar parsers = _interopRequireWildcard(_parsers);\n\nvar _config = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/config.js");\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.config = _config2.default;\nfunction normaliseOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  for (var key in options) {\n    var val = options[key];\n    if (val == null) continue;\n\n    var opt = _config2.default[key];\n    if (opt && opt.alias) opt = _config2.default[opt.alias];\n    if (!opt) continue;\n\n    var parser = parsers[opt.type];\n    if (parser) val = parser(val);\n\n    options[key] = val;\n  }\n\n  return options;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/index.js?')},"./node_modules/babel-core/lib/transformation/file/options/option-manager.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nexports.__esModule = true;\n\nvar _objectWithoutProperties2 = __webpack_require__("./node_modules/babel-runtime/helpers/objectWithoutProperties.js");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _assign = __webpack_require__("./node_modules/babel-runtime/core-js/object/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _node = __webpack_require__("./node_modules/babel-core/lib/api/node.js");\n\nvar context = _interopRequireWildcard(_node);\n\nvar _plugin2 = __webpack_require__("./node_modules/babel-core/lib/transformation/plugin.js");\n\nvar _plugin3 = _interopRequireDefault(_plugin2);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _index = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/index.js");\n\nvar _resolvePlugin = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-plugin.js");\n\nvar _resolvePlugin2 = _interopRequireDefault(_resolvePlugin);\n\nvar _resolvePreset = __webpack_require__("./node_modules/babel-core/lib/helpers/resolve-preset.js");\n\nvar _resolvePreset2 = _interopRequireDefault(_resolvePreset);\n\nvar _cloneDeepWith = __webpack_require__("./node_modules/lodash/cloneDeepWith.js");\n\nvar _cloneDeepWith2 = _interopRequireDefault(_cloneDeepWith);\n\nvar _clone = __webpack_require__("./node_modules/lodash/clone.js");\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _merge = __webpack_require__("./node_modules/babel-core/lib/helpers/merge.js");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _config2 = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/config.js");\n\nvar _config3 = _interopRequireDefault(_config2);\n\nvar _removed = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/removed.js");\n\nvar _removed2 = _interopRequireDefault(_removed);\n\nvar _buildConfigChain = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/build-config-chain.js");\n\nvar _buildConfigChain2 = _interopRequireDefault(_buildConfigChain);\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _path2 = _interopRequireDefault(_path);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OptionManager = function () {\n  function OptionManager(log) {\n    (0, _classCallCheck3.default)(this, OptionManager);\n\n    this.resolvedConfigs = [];\n    this.options = OptionManager.createBareOptions();\n    this.log = log;\n  }\n\n  OptionManager.memoisePluginContainer = function memoisePluginContainer(fn, loc, i, alias) {\n    for (var _iterator = OptionManager.memoisedPlugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var cache = _ref;\n\n      if (cache.container === fn) return cache.plugin;\n    }\n\n    var obj = void 0;\n\n    if (typeof fn === "function") {\n      obj = fn(context);\n    } else {\n      obj = fn;\n    }\n\n    if ((typeof obj === "undefined" ? "undefined" : (0, _typeof3.default)(obj)) === "object") {\n      var _plugin = new _plugin3.default(obj, alias);\n      OptionManager.memoisedPlugins.push({\n        container: fn,\n        plugin: _plugin\n      });\n      return _plugin;\n    } else {\n      throw new TypeError(messages.get("pluginNotObject", loc, i, typeof obj === "undefined" ? "undefined" : (0, _typeof3.default)(obj)) + loc + i);\n    }\n  };\n\n  OptionManager.createBareOptions = function createBareOptions() {\n    var opts = {};\n\n    for (var _key in _config3.default) {\n      var opt = _config3.default[_key];\n      opts[_key] = (0, _clone2.default)(opt.default);\n    }\n\n    return opts;\n  };\n\n  OptionManager.normalisePlugin = function normalisePlugin(plugin, loc, i, alias) {\n    plugin = plugin.__esModule ? plugin.default : plugin;\n\n    if (!(plugin instanceof _plugin3.default)) {\n      if (typeof plugin === "function" || (typeof plugin === "undefined" ? "undefined" : (0, _typeof3.default)(plugin)) === "object") {\n        plugin = OptionManager.memoisePluginContainer(plugin, loc, i, alias);\n      } else {\n        throw new TypeError(messages.get("pluginNotFunction", loc, i, typeof plugin === "undefined" ? "undefined" : (0, _typeof3.default)(plugin)));\n      }\n    }\n\n    plugin.init(loc, i);\n\n    return plugin;\n  };\n\n  OptionManager.normalisePlugins = function normalisePlugins(loc, dirname, plugins) {\n    return plugins.map(function (val, i) {\n      var plugin = void 0,\n          options = void 0;\n\n      if (!val) {\n        throw new TypeError("Falsy value found in plugins");\n      }\n\n      if (Array.isArray(val)) {\n        plugin = val[0];\n        options = val[1];\n      } else {\n        plugin = val;\n      }\n\n      var alias = typeof plugin === "string" ? plugin : loc + "$" + i;\n\n      if (typeof plugin === "string") {\n        var pluginLoc = (0, _resolvePlugin2.default)(plugin, dirname);\n        if (pluginLoc) {\n          plugin = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options sync recursive")(pluginLoc);\n        } else {\n          throw new ReferenceError(messages.get("pluginUnknown", plugin, loc, i, dirname));\n        }\n      }\n\n      plugin = OptionManager.normalisePlugin(plugin, loc, i, alias);\n\n      return [plugin, options];\n    });\n  };\n\n  OptionManager.prototype.mergeOptions = function mergeOptions(_ref2) {\n    var _this = this;\n\n    var rawOpts = _ref2.options,\n        extendingOpts = _ref2.extending,\n        alias = _ref2.alias,\n        loc = _ref2.loc,\n        dirname = _ref2.dirname;\n\n    alias = alias || "foreign";\n    if (!rawOpts) return;\n\n    if ((typeof rawOpts === "undefined" ? "undefined" : (0, _typeof3.default)(rawOpts)) !== "object" || Array.isArray(rawOpts)) {\n      this.log.error("Invalid options type for " + alias, TypeError);\n    }\n\n    var opts = (0, _cloneDeepWith2.default)(rawOpts, function (val) {\n      if (val instanceof _plugin3.default) {\n        return val;\n      }\n    });\n\n    dirname = dirname || process.cwd();\n    loc = loc || alias;\n\n    for (var _key2 in opts) {\n      var option = _config3.default[_key2];\n\n      if (!option && this.log) {\n        if (_removed2.default[_key2]) {\n          this.log.error("Using removed Babel 5 option: " + alias + "." + _key2 + " - " + _removed2.default[_key2].message, ReferenceError);\n        } else {\n          var unknownOptErr = "Unknown option: " + alias + "." + _key2 + ". Check out http://babeljs.io/docs/usage/options/ for more information about options.";\n          var presetConfigErr = "A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\\n\\nInvalid:\\n  `{ presets: [{option: value}] }`\\nValid:\\n  `{ presets: [[\'presetName\', {option: value}]] }`\\n\\nFor more detailed information on preset configuration, please see https://babeljs.io/docs/en/plugins#pluginpresets-options.";\n\n\n          this.log.error(unknownOptErr + "\\n\\n" + presetConfigErr, ReferenceError);\n        }\n      }\n    }\n\n    (0, _index.normaliseOptions)(opts);\n\n    if (opts.plugins) {\n      opts.plugins = OptionManager.normalisePlugins(loc, dirname, opts.plugins);\n    }\n\n    if (opts.presets) {\n      if (opts.passPerPreset) {\n        opts.presets = this.resolvePresets(opts.presets, dirname, function (preset, presetLoc) {\n          _this.mergeOptions({\n            options: preset,\n            extending: preset,\n            alias: presetLoc,\n            loc: presetLoc,\n            dirname: dirname\n          });\n        });\n      } else {\n        this.mergePresets(opts.presets, dirname);\n        delete opts.presets;\n      }\n    }\n\n    if (rawOpts === extendingOpts) {\n      (0, _assign2.default)(extendingOpts, opts);\n    } else {\n      (0, _merge2.default)(extendingOpts || this.options, opts);\n    }\n  };\n\n  OptionManager.prototype.mergePresets = function mergePresets(presets, dirname) {\n    var _this2 = this;\n\n    this.resolvePresets(presets, dirname, function (presetOpts, presetLoc) {\n      _this2.mergeOptions({\n        options: presetOpts,\n        alias: presetLoc,\n        loc: presetLoc,\n        dirname: _path2.default.dirname(presetLoc || "")\n      });\n    });\n  };\n\n  OptionManager.prototype.resolvePresets = function resolvePresets(presets, dirname, onResolve) {\n    return presets.map(function (val) {\n      var options = void 0;\n      if (Array.isArray(val)) {\n        if (val.length > 2) {\n          throw new Error("Unexpected extra options " + (0, _stringify2.default)(val.slice(2)) + " passed to preset.");\n        }\n\n        var _val = val;\n        val = _val[0];\n        options = _val[1];\n      }\n\n      var presetLoc = void 0;\n      try {\n        if (typeof val === "string") {\n          presetLoc = (0, _resolvePreset2.default)(val, dirname);\n\n          if (!presetLoc) {\n            throw new Error("Couldn\'t find preset " + (0, _stringify2.default)(val) + " relative to directory " + (0, _stringify2.default)(dirname));\n          }\n\n          val = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options sync recursive")(presetLoc);\n        }\n\n        if ((typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val)) === "object" && val.__esModule) {\n          if (val.default) {\n            val = val.default;\n          } else {\n            var _val2 = val,\n                __esModule = _val2.__esModule,\n                rest = (0, _objectWithoutProperties3.default)(_val2, ["__esModule"]);\n\n            val = rest;\n          }\n        }\n\n        if ((typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val)) === "object" && val.buildPreset) val = val.buildPreset;\n\n        if (typeof val !== "function" && options !== undefined) {\n          throw new Error("Options " + (0, _stringify2.default)(options) + " passed to " + (presetLoc || "a preset") + " which does not accept options.");\n        }\n\n        if (typeof val === "function") val = val(context, options, { dirname: dirname });\n\n        if ((typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val)) !== "object") {\n          throw new Error("Unsupported preset format: " + val + ".");\n        }\n\n        onResolve && onResolve(val, presetLoc);\n      } catch (e) {\n        if (presetLoc) {\n          e.message += " (While processing preset: " + (0, _stringify2.default)(presetLoc) + ")";\n        }\n        throw e;\n      }\n      return val;\n    });\n  };\n\n  OptionManager.prototype.normaliseOptions = function normaliseOptions() {\n    var opts = this.options;\n\n    for (var _key3 in _config3.default) {\n      var option = _config3.default[_key3];\n      var val = opts[_key3];\n\n      if (!val && option.optional) continue;\n\n      if (option.alias) {\n        opts[option.alias] = opts[option.alias] || val;\n      } else {\n        opts[_key3] = val;\n      }\n    }\n  };\n\n  OptionManager.prototype.init = function init() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    for (var _iterator2 = (0, _buildConfigChain2.default)(opts, this.log), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var _config = _ref3;\n\n      this.mergeOptions(_config);\n    }\n\n    this.normaliseOptions(opts);\n\n    return this.options;\n  };\n\n  return OptionManager;\n}();\n\nexports.default = OptionManager;\n\n\nOptionManager.memoisedPlugins = [];\nmodule.exports = exports["default"];\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/process/browser.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/option-manager.js?')},"./node_modules/babel-core/lib/transformation/file/options/parsers.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.filename = undefined;\nexports.boolean = boolean;\nexports.booleanString = booleanString;\nexports.list = list;\n\nvar _slash = __webpack_require__("./node_modules/slash/index.js");\n\nvar _slash2 = _interopRequireDefault(_slash);\n\nvar _util = __webpack_require__("./node_modules/babel-core/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar filename = exports.filename = _slash2.default;\n\nfunction boolean(val) {\n  return !!val;\n}\n\nfunction booleanString(val) {\n  return util.booleanify(val);\n}\n\nfunction list(val) {\n  return util.list(val);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/parsers.js?')},"./node_modules/babel-core/lib/transformation/file/options/removed.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = {\n  "auxiliaryComment": {\n    "message": "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"\n  },\n  "blacklist": {\n    "message": "Put the specific transforms you want in the `plugins` option"\n  },\n  "breakConfig": {\n    "message": "This is not a necessary option in Babel 6"\n  },\n  "experimental": {\n    "message": "Put the specific transforms you want in the `plugins` option"\n  },\n  "externalHelpers": {\n    "message": "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/"\n  },\n  "extra": {\n    "message": ""\n  },\n  "jsxPragma": {\n    "message": "use the `pragma` option in the `react-jsx` plugin . Check out http://babeljs.io/docs/plugins/transform-react-jsx/"\n  },\n\n  "loose": {\n    "message": "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option."\n  },\n  "metadataUsedHelpers": {\n    "message": "Not required anymore as this is enabled by default"\n  },\n  "modules": {\n    "message": "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules"\n  },\n  "nonStandard": {\n    "message": "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/"\n  },\n  "optional": {\n    "message": "Put the specific transforms you want in the `plugins` option"\n  },\n  "sourceMapName": {\n    "message": "Use the `sourceMapTarget` option"\n  },\n  "stage": {\n    "message": "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"\n  },\n  "whitelist": {\n    "message": "Put the specific transforms you want in the `plugins` option"\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/file/options/removed.js?')},"./node_modules/babel-core/lib/transformation/internal-plugins/block-hoist.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _plugin = __webpack_require__("./node_modules/babel-core/lib/transformation/plugin.js");\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _sortBy = __webpack_require__("./node_modules/lodash/sortBy.js");\n\nvar _sortBy2 = _interopRequireDefault(_sortBy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = new _plugin2.default({\n\n  name: "internal.blockHoist",\n\n  visitor: {\n    Block: {\n      exit: function exit(_ref) {\n        var node = _ref.node;\n\n        var hasChange = false;\n        for (var i = 0; i < node.body.length; i++) {\n          var bodyNode = node.body[i];\n          if (bodyNode && bodyNode._blockHoist != null) {\n            hasChange = true;\n            break;\n          }\n        }\n        if (!hasChange) return;\n\n        node.body = (0, _sortBy2.default)(node.body, function (bodyNode) {\n          var priority = bodyNode && bodyNode._blockHoist;\n          if (priority == null) priority = 1;\n          if (priority === true) priority = 2;\n\n          return -1 * priority;\n        });\n      }\n    }\n  }\n});\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/internal-plugins/block-hoist.js?')},"./node_modules/babel-core/lib/transformation/internal-plugins/shadow-functions.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _plugin = __webpack_require__("./node_modules/babel-core/lib/transformation/plugin.js");\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SUPER_THIS_BOUND = (0, _symbol2.default)("super this bound");\n\nvar superVisitor = {\n  CallExpression: function CallExpression(path) {\n    if (!path.get("callee").isSuper()) return;\n\n    var node = path.node;\n\n    if (node[SUPER_THIS_BOUND]) return;\n    node[SUPER_THIS_BOUND] = true;\n\n    path.replaceWith(t.assignmentExpression("=", this.id, node));\n  }\n};\n\nexports.default = new _plugin2.default({\n  name: "internal.shadowFunctions",\n\n  visitor: {\n    ThisExpression: function ThisExpression(path) {\n      remap(path, "this");\n    },\n    ReferencedIdentifier: function ReferencedIdentifier(path) {\n      if (path.node.name === "arguments") {\n        remap(path, "arguments");\n      }\n    }\n  }\n});\n\n\nfunction shouldShadow(path, shadowPath) {\n  if (path.is("_forceShadow")) {\n    return true;\n  } else {\n    return shadowPath;\n  }\n}\n\nfunction remap(path, key) {\n  var shadowPath = path.inShadow(key);\n  if (!shouldShadow(path, shadowPath)) return;\n\n  var shadowFunction = path.node._shadowedFunctionLiteral;\n\n  var currentFunction = void 0;\n  var passedShadowFunction = false;\n\n  var fnPath = path.find(function (innerPath) {\n    if (innerPath.parentPath && innerPath.parentPath.isClassProperty() && innerPath.key === "value") {\n      return true;\n    }\n    if (path === innerPath) return false;\n    if (innerPath.isProgram() || innerPath.isFunction()) {\n      currentFunction = currentFunction || innerPath;\n    }\n\n    if (innerPath.isProgram()) {\n      passedShadowFunction = true;\n\n      return true;\n    } else if (innerPath.isFunction() && !innerPath.isArrowFunctionExpression()) {\n      if (shadowFunction) {\n        if (innerPath === shadowFunction || innerPath.node === shadowFunction.node) return true;\n      } else {\n        if (!innerPath.is("shadow")) return true;\n      }\n\n      passedShadowFunction = true;\n      return false;\n    }\n\n    return false;\n  });\n\n  if (shadowFunction && fnPath.isProgram() && !shadowFunction.isProgram()) {\n    fnPath = path.findParent(function (p) {\n      return p.isProgram() || p.isFunction();\n    });\n  }\n\n  if (fnPath === currentFunction) return;\n\n  if (!passedShadowFunction) return;\n\n  var cached = fnPath.getData(key);\n  if (!cached) {\n    var id = path.scope.generateUidIdentifier(key);\n\n    fnPath.setData(key, id);\n    cached = id;\n\n    var classPath = fnPath.findParent(function (p) {\n      return p.isClass();\n    });\n    var hasSuperClass = !!(classPath && classPath.node && classPath.node.superClass);\n\n    if (key === "this" && fnPath.isMethod({ kind: "constructor" }) && hasSuperClass) {\n      fnPath.scope.push({ id: id });\n\n      fnPath.traverse(superVisitor, { id: id });\n    } else {\n      var init = key === "this" ? t.thisExpression() : t.identifier(key);\n\n      if (shadowFunction) init._shadowedFunctionLiteral = shadowFunction;\n\n      fnPath.scope.push({ id: id, init: init });\n    }\n  }\n\n  var node = t.cloneDeep(cached);\n  node.loc = path.node.loc;\n\n  return path.replaceWith(node);\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/internal-plugins/shadow-functions.js?')},"./node_modules/babel-core/lib/transformation/pipeline.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _normalizeAst = __webpack_require__("./node_modules/babel-core/lib/helpers/normalize-ast.js");\n\nvar _normalizeAst2 = _interopRequireDefault(_normalizeAst);\n\nvar _plugin = __webpack_require__("./node_modules/babel-core/lib/transformation/plugin.js");\n\nvar _plugin2 = _interopRequireDefault(_plugin);\n\nvar _file = __webpack_require__("./node_modules/babel-core/lib/transformation/file/index.js");\n\nvar _file2 = _interopRequireDefault(_file);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Pipeline = function () {\n  function Pipeline() {\n    (0, _classCallCheck3.default)(this, Pipeline);\n  }\n\n  Pipeline.prototype.lint = function lint(code) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    opts.code = false;\n    opts.mode = "lint";\n    return this.transform(code, opts);\n  };\n\n  Pipeline.prototype.pretransform = function pretransform(code, opts) {\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.parseCode(code);\n      return file;\n    });\n  };\n\n  Pipeline.prototype.transform = function transform(code, opts) {\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.parseCode(code);\n      return file.transform();\n    });\n  };\n\n  Pipeline.prototype.analyse = function analyse(code) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var visitor = arguments[2];\n\n    opts.code = false;\n    if (visitor) {\n      opts.plugins = opts.plugins || [];\n      opts.plugins.push(new _plugin2.default({ visitor: visitor }));\n    }\n    return this.transform(code, opts).metadata;\n  };\n\n  Pipeline.prototype.transformFromAst = function transformFromAst(ast, code, opts) {\n    ast = (0, _normalizeAst2.default)(ast);\n\n    var file = new _file2.default(opts, this);\n    return file.wrap(code, function () {\n      file.addCode(code);\n      file.addAst(ast);\n      return file.transform();\n    });\n  };\n\n  return Pipeline;\n}();\n\nexports.default = Pipeline;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/pipeline.js?')},"./node_modules/babel-core/lib/transformation/plugin-pass.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _store = __webpack_require__("./node_modules/babel-core/lib/store.js");\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _file5 = __webpack_require__("./node_modules/babel-core/lib/transformation/file/index.js");\n\nvar _file6 = _interopRequireDefault(_file5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PluginPass = function (_Store) {\n  (0, _inherits3.default)(PluginPass, _Store);\n\n  function PluginPass(file, plugin) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _classCallCheck3.default)(this, PluginPass);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Store.call(this));\n\n    _this.plugin = plugin;\n    _this.key = plugin.key;\n    _this.file = file;\n    _this.opts = options;\n    return _this;\n  }\n\n  PluginPass.prototype.addHelper = function addHelper() {\n    var _file;\n\n    return (_file = this.file).addHelper.apply(_file, arguments);\n  };\n\n  PluginPass.prototype.addImport = function addImport() {\n    var _file2;\n\n    return (_file2 = this.file).addImport.apply(_file2, arguments);\n  };\n\n  PluginPass.prototype.getModuleName = function getModuleName() {\n    var _file3;\n\n    return (_file3 = this.file).getModuleName.apply(_file3, arguments);\n  };\n\n  PluginPass.prototype.buildCodeFrameError = function buildCodeFrameError() {\n    var _file4;\n\n    return (_file4 = this.file).buildCodeFrameError.apply(_file4, arguments);\n  };\n\n  return PluginPass;\n}(_store2.default);\n\nexports.default = PluginPass;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/plugin-pass.js?')},"./node_modules/babel-core/lib/transformation/plugin.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _optionManager = __webpack_require__("./node_modules/babel-core/lib/transformation/file/options/option-manager.js");\n\nvar _optionManager2 = _interopRequireDefault(_optionManager);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _store = __webpack_require__("./node_modules/babel-core/lib/store.js");\n\nvar _store2 = _interopRequireDefault(_store);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _assign = __webpack_require__("./node_modules/lodash/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _clone = __webpack_require__("./node_modules/lodash/clone.js");\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GLOBAL_VISITOR_PROPS = ["enter", "exit"];\n\nvar Plugin = function (_Store) {\n  (0, _inherits3.default)(Plugin, _Store);\n\n  function Plugin(plugin, key) {\n    (0, _classCallCheck3.default)(this, Plugin);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Store.call(this));\n\n    _this.initialized = false;\n    _this.raw = (0, _assign2.default)({}, plugin);\n    _this.key = _this.take("name") || key;\n\n    _this.manipulateOptions = _this.take("manipulateOptions");\n    _this.post = _this.take("post");\n    _this.pre = _this.take("pre");\n    _this.visitor = _this.normaliseVisitor((0, _clone2.default)(_this.take("visitor")) || {});\n    return _this;\n  }\n\n  Plugin.prototype.take = function take(key) {\n    var val = this.raw[key];\n    delete this.raw[key];\n    return val;\n  };\n\n  Plugin.prototype.chain = function chain(target, key) {\n    if (!target[key]) return this[key];\n    if (!this[key]) return target[key];\n\n    var fns = [target[key], this[key]];\n\n    return function () {\n      var val = void 0;\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      for (var _iterator = fns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var fn = _ref;\n\n        if (fn) {\n          var ret = fn.apply(this, args);\n          if (ret != null) val = ret;\n        }\n      }\n      return val;\n    };\n  };\n\n  Plugin.prototype.maybeInherit = function maybeInherit(loc) {\n    var inherits = this.take("inherits");\n    if (!inherits) return;\n\n    inherits = _optionManager2.default.normalisePlugin(inherits, loc, "inherits");\n\n    this.manipulateOptions = this.chain(inherits, "manipulateOptions");\n    this.post = this.chain(inherits, "post");\n    this.pre = this.chain(inherits, "pre");\n    this.visitor = _babelTraverse2.default.visitors.merge([inherits.visitor, this.visitor]);\n  };\n\n  Plugin.prototype.init = function init(loc, i) {\n    if (this.initialized) return;\n    this.initialized = true;\n\n    this.maybeInherit(loc);\n\n    for (var key in this.raw) {\n      throw new Error(messages.get("pluginInvalidProperty", loc, i, key));\n    }\n  };\n\n  Plugin.prototype.normaliseVisitor = function normaliseVisitor(visitor) {\n    for (var _iterator2 = GLOBAL_VISITOR_PROPS, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var key = _ref2;\n\n      if (visitor[key]) {\n        throw new Error("Plugins aren\'t allowed to specify catch-all enter/exit handlers. " + "Please target individual nodes.");\n      }\n    }\n\n    _babelTraverse2.default.explode(visitor);\n    return visitor;\n  };\n\n  return Plugin;\n}(_store2.default);\n\nexports.default = Plugin;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/transformation/plugin.js?')},"./node_modules/babel-core/lib/util.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.inspect = exports.inherits = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _util = __webpack_require__("./node_modules/util/util.js");\n\nObject.defineProperty(exports, "inherits", {\n  enumerable: true,\n  get: function get() {\n    return _util.inherits;\n  }\n});\nObject.defineProperty(exports, "inspect", {\n  enumerable: true,\n  get: function get() {\n    return _util.inspect;\n  }\n});\nexports.canCompile = canCompile;\nexports.list = list;\nexports.regexify = regexify;\nexports.arrayify = arrayify;\nexports.booleanify = booleanify;\nexports.shouldIgnore = shouldIgnore;\n\nvar _escapeRegExp = __webpack_require__("./node_modules/lodash/escapeRegExp.js");\n\nvar _escapeRegExp2 = _interopRequireDefault(_escapeRegExp);\n\nvar _startsWith = __webpack_require__("./node_modules/lodash/startsWith.js");\n\nvar _startsWith2 = _interopRequireDefault(_startsWith);\n\nvar _minimatch = __webpack_require__("./node_modules/minimatch/minimatch.js");\n\nvar _minimatch2 = _interopRequireDefault(_minimatch);\n\nvar _includes = __webpack_require__("./node_modules/lodash/includes.js");\n\nvar _includes2 = _interopRequireDefault(_includes);\n\nvar _isRegExp = __webpack_require__("./node_modules/lodash/isRegExp.js");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _slash = __webpack_require__("./node_modules/slash/index.js");\n\nvar _slash2 = _interopRequireDefault(_slash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction canCompile(filename, altExts) {\n  var exts = altExts || canCompile.EXTENSIONS;\n  var ext = _path2.default.extname(filename);\n  return (0, _includes2.default)(exts, ext);\n}\n\ncanCompile.EXTENSIONS = [".js", ".jsx", ".es6", ".es"];\n\nfunction list(val) {\n  if (!val) {\n    return [];\n  } else if (Array.isArray(val)) {\n    return val;\n  } else if (typeof val === "string") {\n    return val.split(",");\n  } else {\n    return [val];\n  }\n}\n\nfunction regexify(val) {\n  if (!val) {\n    return new RegExp(/.^/);\n  }\n\n  if (Array.isArray(val)) {\n    val = new RegExp(val.map(_escapeRegExp2.default).join("|"), "i");\n  }\n\n  if (typeof val === "string") {\n    val = (0, _slash2.default)(val);\n\n    if ((0, _startsWith2.default)(val, "./") || (0, _startsWith2.default)(val, "*/")) val = val.slice(2);\n    if ((0, _startsWith2.default)(val, "**/")) val = val.slice(3);\n\n    var regex = _minimatch2.default.makeRe(val, { nocase: true });\n    return new RegExp(regex.source.slice(1, -1), "i");\n  }\n\n  if ((0, _isRegExp2.default)(val)) {\n    return val;\n  }\n\n  throw new TypeError("illegal type for regexify");\n}\n\nfunction arrayify(val, mapFn) {\n  if (!val) return [];\n  if (typeof val === "boolean") return arrayify([val], mapFn);\n  if (typeof val === "string") return arrayify(list(val), mapFn);\n\n  if (Array.isArray(val)) {\n    if (mapFn) val = val.map(mapFn);\n    return val;\n  }\n\n  return [val];\n}\n\nfunction booleanify(val) {\n  if (val === "true" || val == 1) {\n    return true;\n  }\n\n  if (val === "false" || val == 0 || !val) {\n    return false;\n  }\n\n  return val;\n}\n\nfunction shouldIgnore(filename) {\n  var ignore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var only = arguments[2];\n\n  filename = filename.replace(/\\\\/g, "/");\n\n  if (only) {\n    for (var _iterator = only, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pattern = _ref;\n\n      if (_shouldIgnore(pattern, filename)) return false;\n    }\n    return true;\n  } else if (ignore.length) {\n    for (var _iterator2 = ignore, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _pattern = _ref2;\n\n      if (_shouldIgnore(_pattern, filename)) return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _shouldIgnore(pattern, filename) {\n  if (typeof pattern === "function") {\n    return pattern(filename);\n  } else {\n    return pattern.test(filename);\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-core/lib/util.js?')},"./node_modules/babel-core/node_modules/convert-source-map/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar fs = __webpack_require__(\"./node_modules/node-libs-browser/mock/empty.js\");\nvar path = __webpack_require__(\"./node_modules/path-browserify/index.js\");\nvar SafeBuffer = __webpack_require__(\"./node_modules/babel-core/node_modules/safe-buffer/index.js\");\n\nObject.defineProperty(exports, 'commentRegex', {\n  get: function getCommentRegex () {\n    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n  }\n});\n\nObject.defineProperty(exports, 'mapFileCommentRegex', {\n  get: function getMapFileCommentRegex () {\n    // Matches sourceMappingURL in either // or /* comment styles.\n    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n  }\n});\n\n\nfunction decodeBase64(base64) {\n  return SafeBuffer.Buffer.from(base64, 'base64').toString();\n}\n\nfunction stripComment(sm) {\n  return sm.split(',').pop();\n}\n\nfunction readFromFileMap(sm, dir) {\n  // NOTE: this will only work on the server since it attempts to read the map file\n\n  var r = exports.mapFileCommentRegex.exec(sm);\n\n  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n  var filename = r[1] || r[2];\n  var filepath = path.resolve(dir, filename);\n\n  try {\n    return fs.readFileSync(filepath, 'utf8');\n  } catch (e) {\n    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n  }\n}\n\nfunction Converter (sm, opts) {\n  opts = opts || {};\n\n  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n  if (opts.hasComment) sm = stripComment(sm);\n  if (opts.isEncoded) sm = decodeBase64(sm);\n  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n  this.sourcemap = sm;\n}\n\nConverter.prototype.toJSON = function (space) {\n  return JSON.stringify(this.sourcemap, null, space);\n};\n\nConverter.prototype.toBase64 = function () {\n  var json = this.toJSON();\n  return SafeBuffer.Buffer.from(json, 'utf8').toString('base64');\n};\n\nConverter.prototype.toComment = function (options) {\n  var base64 = this.toBase64();\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n// returns copy instead of original\nConverter.prototype.toObject = function () {\n  return JSON.parse(this.toJSON());\n};\n\nConverter.prototype.addProperty = function (key, value) {\n  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n  return this.setProperty(key, value);\n};\n\nConverter.prototype.setProperty = function (key, value) {\n  this.sourcemap[key] = value;\n  return this;\n};\n\nConverter.prototype.getProperty = function (key) {\n  return this.sourcemap[key];\n};\n\nexports.fromObject = function (obj) {\n  return new Converter(obj);\n};\n\nexports.fromJSON = function (json) {\n  return new Converter(json, { isJSON: true });\n};\n\nexports.fromBase64 = function (base64) {\n  return new Converter(base64, { isEncoded: true });\n};\n\nexports.fromComment = function (comment) {\n  comment = comment\n    .replace(/^\\/\\*/g, '//')\n    .replace(/\\*\\/$/g, '');\n\n  return new Converter(comment, { isEncoded: true, hasComment: true });\n};\n\nexports.fromMapFileComment = function (comment, dir) {\n  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromSource = function (content) {\n  var m = content.match(exports.commentRegex);\n  return m ? exports.fromComment(m.pop()) : null;\n};\n\n// Finds last sourcemap comment in file or returns null if none was found\nexports.fromMapFileSource = function (content, dir) {\n  var m = content.match(exports.mapFileCommentRegex);\n  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n};\n\nexports.removeComments = function (src) {\n  return src.replace(exports.commentRegex, '');\n};\n\nexports.removeMapFileComments = function (src) {\n  return src.replace(exports.mapFileCommentRegex, '');\n};\n\nexports.generateMapFileComment = function (file, options) {\n  var data = 'sourceMappingURL=' + file;\n  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/convert-source-map/index.js?")},"./node_modules/babel-core/node_modules/json5/lib/json5.js":function(module,exports,__webpack_require__){eval("// json5.js\n// Modern JSON. See README.md for details.\n//\n// This file is based directly off of Douglas Crockford's json_parse.js:\n// https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\nvar JSON5 = ( true ? exports : undefined);\n\nJSON5.parse = (function () {\n    \"use strict\";\n\n// This is a function that can parse a JSON5 text, producing a JavaScript\n// data structure. It is a simple, recursive descent parser. It does not use\n// eval or regular expressions, so it can be used as a model for implementing\n// a JSON5 parser in other languages.\n\n// We are defining the function inside of another function to avoid creating\n// global variables.\n\n    var at,           // The index of the current character\n        lineNumber,   // The current line number\n        columnNumber, // The current column number\n        ch,           // The current character\n        escapee = {\n            \"'\":  \"'\",\n            '\"':  '\"',\n            '\\\\': '\\\\',\n            '/':  '/',\n            '\\n': '',       // Replace escaped newlines in strings w/ empty string\n            b:    '\\b',\n            f:    '\\f',\n            n:    '\\n',\n            r:    '\\r',\n            t:    '\\t'\n        },\n        ws = [\n            ' ',\n            '\\t',\n            '\\r',\n            '\\n',\n            '\\v',\n            '\\f',\n            '\\xA0',\n            '\\uFEFF'\n        ],\n        text,\n\n        renderChar = function (chr) {\n            return chr === '' ? 'EOF' : \"'\" + chr + \"'\";\n        },\n\n        error = function (m) {\n\n// Call error when something is wrong.\n\n            var error = new SyntaxError();\n            // beginning of message suffix to agree with that provided by Gecko - see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n            error.message = m + \" at line \" + lineNumber + \" column \" + columnNumber + \" of the JSON5 data. Still to read: \" + JSON.stringify(text.substring(at - 1, at + 19));\n            error.at = at;\n            // These two property names have been chosen to agree with the ones in Gecko, the only popular\n            // environment which seems to supply this info on JSON.parse\n            error.lineNumber = lineNumber;\n            error.columnNumber = columnNumber;\n            throw error;\n        },\n\n        next = function (c) {\n\n// If a c parameter is provided, verify that it matches the current character.\n\n            if (c && c !== ch) {\n                error(\"Expected \" + renderChar(c) + \" instead of \" + renderChar(ch));\n            }\n\n// Get the next character. When there are no more characters,\n// return the empty string.\n\n            ch = text.charAt(at);\n            at++;\n            columnNumber++;\n            if (ch === '\\n' || ch === '\\r' && peek() !== '\\n') {\n                lineNumber++;\n                columnNumber = 0;\n            }\n            return ch;\n        },\n\n        peek = function () {\n\n// Get the next character without consuming it or\n// assigning it to the ch varaible.\n\n            return text.charAt(at);\n        },\n\n        identifier = function () {\n\n// Parse an identifier. Normally, reserved words are disallowed here, but we\n// only use this for unquoted object keys, where reserved words are allowed,\n// so we don't check for those here. References:\n// - http://es5.github.com/#x7.6\n// - https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables\n// - http://docstore.mik.ua/orelly/webprog/jscript/ch02_07.htm\n// TODO Identifiers can have Unicode \"letters\" in them; add support for those.\n\n            var key = ch;\n\n            // Identifiers must start with a letter, _ or $.\n            if ((ch !== '_' && ch !== '$') &&\n                    (ch < 'a' || ch > 'z') &&\n                    (ch < 'A' || ch > 'Z')) {\n                error(\"Bad identifier as unquoted key\");\n            }\n\n            // Subsequent characters can contain digits.\n            while (next() && (\n                    ch === '_' || ch === '$' ||\n                    (ch >= 'a' && ch <= 'z') ||\n                    (ch >= 'A' && ch <= 'Z') ||\n                    (ch >= '0' && ch <= '9'))) {\n                key += ch;\n            }\n\n            return key;\n        },\n\n        number = function () {\n\n// Parse a number value.\n\n            var number,\n                sign = '',\n                string = '',\n                base = 10;\n\n            if (ch === '-' || ch === '+') {\n                sign = ch;\n                next(ch);\n            }\n\n            // support for Infinity (could tweak to allow other words):\n            if (ch === 'I') {\n                number = word();\n                if (typeof number !== 'number' || isNaN(number)) {\n                    error('Unexpected word for number');\n                }\n                return (sign === '-') ? -number : number;\n            }\n\n            // support for NaN\n            if (ch === 'N' ) {\n              number = word();\n              if (!isNaN(number)) {\n                error('expected word to be NaN');\n              }\n              // ignore sign as -NaN also is NaN\n              return number;\n            }\n\n            if (ch === '0') {\n                string += ch;\n                next();\n                if (ch === 'x' || ch === 'X') {\n                    string += ch;\n                    next();\n                    base = 16;\n                } else if (ch >= '0' && ch <= '9') {\n                    error('Octal literal');\n                }\n            }\n\n            switch (base) {\n            case 10:\n                while (ch >= '0' && ch <= '9' ) {\n                    string += ch;\n                    next();\n                }\n                if (ch === '.') {\n                    string += '.';\n                    while (next() && ch >= '0' && ch <= '9') {\n                        string += ch;\n                    }\n                }\n                if (ch === 'e' || ch === 'E') {\n                    string += ch;\n                    next();\n                    if (ch === '-' || ch === '+') {\n                        string += ch;\n                        next();\n                    }\n                    while (ch >= '0' && ch <= '9') {\n                        string += ch;\n                        next();\n                    }\n                }\n                break;\n            case 16:\n                while (ch >= '0' && ch <= '9' || ch >= 'A' && ch <= 'F' || ch >= 'a' && ch <= 'f') {\n                    string += ch;\n                    next();\n                }\n                break;\n            }\n\n            if(sign === '-') {\n                number = -string;\n            } else {\n                number = +string;\n            }\n\n            if (!isFinite(number)) {\n                error(\"Bad number\");\n            } else {\n                return number;\n            }\n        },\n\n        string = function () {\n\n// Parse a string value.\n\n            var hex,\n                i,\n                string = '',\n                delim,      // double quote or single quote\n                uffff;\n\n// When parsing for string values, we must look for ' or \" and \\ characters.\n\n            if (ch === '\"' || ch === \"'\") {\n                delim = ch;\n                while (next()) {\n                    if (ch === delim) {\n                        next();\n                        return string;\n                    } else if (ch === '\\\\') {\n                        next();\n                        if (ch === 'u') {\n                            uffff = 0;\n                            for (i = 0; i < 4; i += 1) {\n                                hex = parseInt(next(), 16);\n                                if (!isFinite(hex)) {\n                                    break;\n                                }\n                                uffff = uffff * 16 + hex;\n                            }\n                            string += String.fromCharCode(uffff);\n                        } else if (ch === '\\r') {\n                            if (peek() === '\\n') {\n                                next();\n                            }\n                        } else if (typeof escapee[ch] === 'string') {\n                            string += escapee[ch];\n                        } else {\n                            break;\n                        }\n                    } else if (ch === '\\n') {\n                        // unescaped newlines are invalid; see:\n                        // https://github.com/aseemk/json5/issues/24\n                        // TODO this feels special-cased; are there other\n                        // invalid unescaped chars?\n                        break;\n                    } else {\n                        string += ch;\n                    }\n                }\n            }\n            error(\"Bad string\");\n        },\n\n        inlineComment = function () {\n\n// Skip an inline comment, assuming this is one. The current character should\n// be the second / character in the // pair that begins this inline comment.\n// To finish the inline comment, we look for a newline or the end of the text.\n\n            if (ch !== '/') {\n                error(\"Not an inline comment\");\n            }\n\n            do {\n                next();\n                if (ch === '\\n' || ch === '\\r') {\n                    next();\n                    return;\n                }\n            } while (ch);\n        },\n\n        blockComment = function () {\n\n// Skip a block comment, assuming this is one. The current character should be\n// the * character in the /* pair that begins this block comment.\n// To finish the block comment, we look for an ending */ pair of characters,\n// but we also watch for the end of text before the comment is terminated.\n\n            if (ch !== '*') {\n                error(\"Not a block comment\");\n            }\n\n            do {\n                next();\n                while (ch === '*') {\n                    next('*');\n                    if (ch === '/') {\n                        next('/');\n                        return;\n                    }\n                }\n            } while (ch);\n\n            error(\"Unterminated block comment\");\n        },\n\n        comment = function () {\n\n// Skip a comment, whether inline or block-level, assuming this is one.\n// Comments always begin with a / character.\n\n            if (ch !== '/') {\n                error(\"Not a comment\");\n            }\n\n            next('/');\n\n            if (ch === '/') {\n                inlineComment();\n            } else if (ch === '*') {\n                blockComment();\n            } else {\n                error(\"Unrecognized comment\");\n            }\n        },\n\n        white = function () {\n\n// Skip whitespace and comments.\n// Note that we're detecting comments by only a single / character.\n// This works since regular expressions are not valid JSON(5), but this will\n// break if there are other valid values that begin with a / character!\n\n            while (ch) {\n                if (ch === '/') {\n                    comment();\n                } else if (ws.indexOf(ch) >= 0) {\n                    next();\n                } else {\n                    return;\n                }\n            }\n        },\n\n        word = function () {\n\n// true, false, or null.\n\n            switch (ch) {\n            case 't':\n                next('t');\n                next('r');\n                next('u');\n                next('e');\n                return true;\n            case 'f':\n                next('f');\n                next('a');\n                next('l');\n                next('s');\n                next('e');\n                return false;\n            case 'n':\n                next('n');\n                next('u');\n                next('l');\n                next('l');\n                return null;\n            case 'I':\n                next('I');\n                next('n');\n                next('f');\n                next('i');\n                next('n');\n                next('i');\n                next('t');\n                next('y');\n                return Infinity;\n            case 'N':\n              next( 'N' );\n              next( 'a' );\n              next( 'N' );\n              return NaN;\n            }\n            error(\"Unexpected \" + renderChar(ch));\n        },\n\n        value,  // Place holder for the value function.\n\n        array = function () {\n\n// Parse an array value.\n\n            var array = [];\n\n            if (ch === '[') {\n                next('[');\n                white();\n                while (ch) {\n                    if (ch === ']') {\n                        next(']');\n                        return array;   // Potentially empty array\n                    }\n                    // ES5 allows omitting elements in arrays, e.g. [,] and\n                    // [,null]. We don't allow this in JSON5.\n                    if (ch === ',') {\n                        error(\"Missing array element\");\n                    } else {\n                        array.push(value());\n                    }\n                    white();\n                    // If there's no comma after this value, this needs to\n                    // be the end of the array.\n                    if (ch !== ',') {\n                        next(']');\n                        return array;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error(\"Bad array\");\n        },\n\n        object = function () {\n\n// Parse an object value.\n\n            var key,\n                object = {};\n\n            if (ch === '{') {\n                next('{');\n                white();\n                while (ch) {\n                    if (ch === '}') {\n                        next('}');\n                        return object;   // Potentially empty object\n                    }\n\n                    // Keys can be unquoted. If they are, they need to be\n                    // valid JS identifiers.\n                    if (ch === '\"' || ch === \"'\") {\n                        key = string();\n                    } else {\n                        key = identifier();\n                    }\n\n                    white();\n                    next(':');\n                    object[key] = value();\n                    white();\n                    // If there's no comma after this pair, this needs to be\n                    // the end of the object.\n                    if (ch !== ',') {\n                        next('}');\n                        return object;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error(\"Bad object\");\n        };\n\n    value = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n        white();\n        switch (ch) {\n        case '{':\n            return object();\n        case '[':\n            return array();\n        case '\"':\n        case \"'\":\n            return string();\n        case '-':\n        case '+':\n        case '.':\n            return number();\n        default:\n            return ch >= '0' && ch <= '9' ? number() : word();\n        }\n    };\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\n    return function (source, reviver) {\n        var result;\n\n        text = String(source);\n        at = 0;\n        lineNumber = 1;\n        columnNumber = 1;\n        ch = ' ';\n        result = value();\n        white();\n        if (ch) {\n            error(\"Syntax error\");\n        }\n\n// If there is a reviver function, we recursively walk the new structure,\n// passing each name/value pair to the reviver function for possible\n// transformation, starting with a temporary root object that holds the result\n// in an empty key. If there is not a reviver function, we simply return the\n// result.\n\n        return typeof reviver === 'function' ? (function walk(holder, key) {\n            var k, v, value = holder[key];\n            if (value && typeof value === 'object') {\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = walk(value, k);\n                        if (v !== undefined) {\n                            value[k] = v;\n                        } else {\n                            delete value[k];\n                        }\n                    }\n                }\n            }\n            return reviver.call(holder, key, value);\n        }({'': result}, '')) : result;\n    };\n}());\n\n// JSON5 stringify will not quote keys where appropriate\nJSON5.stringify = function (obj, replacer, space) {\n    if (replacer && (typeof(replacer) !== \"function\" && !isArray(replacer))) {\n        throw new Error('Replacer must be a function or an array');\n    }\n    var getReplacedValueOrUndefined = function(holder, key, isTopLevel) {\n        var value = holder[key];\n\n        // Replace the value with its toJSON value first, if possible\n        if (value && value.toJSON && typeof value.toJSON === \"function\") {\n            value = value.toJSON();\n        }\n\n        // If the user-supplied replacer if a function, call it. If it's an array, check objects' string keys for\n        // presence in the array (removing the key/value pair from the resulting JSON if the key is missing).\n        if (typeof(replacer) === \"function\") {\n            return replacer.call(holder, key, value);\n        } else if(replacer) {\n            if (isTopLevel || isArray(holder) || replacer.indexOf(key) >= 0) {\n                return value;\n            } else {\n                return undefined;\n            }\n        } else {\n            return value;\n        }\n    };\n\n    function isWordChar(c) {\n        return (c >= 'a' && c <= 'z') ||\n            (c >= 'A' && c <= 'Z') ||\n            (c >= '0' && c <= '9') ||\n            c === '_' || c === '$';\n    }\n\n    function isWordStart(c) {\n        return (c >= 'a' && c <= 'z') ||\n            (c >= 'A' && c <= 'Z') ||\n            c === '_' || c === '$';\n    }\n\n    function isWord(key) {\n        if (typeof key !== 'string') {\n            return false;\n        }\n        if (!isWordStart(key[0])) {\n            return false;\n        }\n        var i = 1, length = key.length;\n        while (i < length) {\n            if (!isWordChar(key[i])) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    }\n\n    // export for use in tests\n    JSON5.isWord = isWord;\n\n    // polyfills\n    function isArray(obj) {\n        if (Array.isArray) {\n            return Array.isArray(obj);\n        } else {\n            return Object.prototype.toString.call(obj) === '[object Array]';\n        }\n    }\n\n    function isDate(obj) {\n        return Object.prototype.toString.call(obj) === '[object Date]';\n    }\n\n    var objStack = [];\n    function checkForCircular(obj) {\n        for (var i = 0; i < objStack.length; i++) {\n            if (objStack[i] === obj) {\n                throw new TypeError(\"Converting circular structure to JSON\");\n            }\n        }\n    }\n\n    function makeIndent(str, num, noNewLine) {\n        if (!str) {\n            return \"\";\n        }\n        // indentation no more than 10 chars\n        if (str.length > 10) {\n            str = str.substring(0, 10);\n        }\n\n        var indent = noNewLine ? \"\" : \"\\n\";\n        for (var i = 0; i < num; i++) {\n            indent += str;\n        }\n\n        return indent;\n    }\n\n    var indentStr;\n    if (space) {\n        if (typeof space === \"string\") {\n            indentStr = space;\n        } else if (typeof space === \"number\" && space >= 0) {\n            indentStr = makeIndent(\" \", space, true);\n        } else {\n            // ignore space parameter\n        }\n    }\n\n    // Copied from Crokford's implementation of JSON\n    // See https://github.com/douglascrockford/JSON-js/blob/e39db4b7e6249f04a195e7dd0840e610cc9e941e/json2.js#L195\n    // Begin\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        meta = { // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    };\n    function escapeString(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string' ?\n                c :\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n    // End\n\n    function internalStringify(holder, key, isTopLevel) {\n        var buffer, res;\n\n        // Replace the value, if necessary\n        var obj_part = getReplacedValueOrUndefined(holder, key, isTopLevel);\n\n        if (obj_part && !isDate(obj_part)) {\n            // unbox objects\n            // don't unbox dates, since will turn it into number\n            obj_part = obj_part.valueOf();\n        }\n        switch(typeof obj_part) {\n            case \"boolean\":\n                return obj_part.toString();\n\n            case \"number\":\n                if (isNaN(obj_part) || !isFinite(obj_part)) {\n                    return \"null\";\n                }\n                return obj_part.toString();\n\n            case \"string\":\n                return escapeString(obj_part.toString());\n\n            case \"object\":\n                if (obj_part === null) {\n                    return \"null\";\n                } else if (isArray(obj_part)) {\n                    checkForCircular(obj_part);\n                    buffer = \"[\";\n                    objStack.push(obj_part);\n\n                    for (var i = 0; i < obj_part.length; i++) {\n                        res = internalStringify(obj_part, i, false);\n                        buffer += makeIndent(indentStr, objStack.length);\n                        if (res === null || typeof res === \"undefined\") {\n                            buffer += \"null\";\n                        } else {\n                            buffer += res;\n                        }\n                        if (i < obj_part.length-1) {\n                            buffer += \",\";\n                        } else if (indentStr) {\n                            buffer += \"\\n\";\n                        }\n                    }\n                    objStack.pop();\n                    if (obj_part.length) {\n                        buffer += makeIndent(indentStr, objStack.length, true)\n                    }\n                    buffer += \"]\";\n                } else {\n                    checkForCircular(obj_part);\n                    buffer = \"{\";\n                    var nonEmpty = false;\n                    objStack.push(obj_part);\n                    for (var prop in obj_part) {\n                        if (obj_part.hasOwnProperty(prop)) {\n                            var value = internalStringify(obj_part, prop, false);\n                            isTopLevel = false;\n                            if (typeof value !== \"undefined\" && value !== null) {\n                                buffer += makeIndent(indentStr, objStack.length);\n                                nonEmpty = true;\n                                key = isWord(prop) ? prop : escapeString(prop);\n                                buffer += key + \":\" + (indentStr ? ' ' : '') + value + \",\";\n                            }\n                        }\n                    }\n                    objStack.pop();\n                    if (nonEmpty) {\n                        buffer = buffer.substring(0, buffer.length-1) + makeIndent(indentStr, objStack.length) + \"}\";\n                    } else {\n                        buffer = '{}';\n                    }\n                }\n                return buffer;\n            default:\n                // functions and undefined should be ignored\n                return undefined;\n        }\n    }\n\n    // special case...when undefined is used inside of\n    // a compound object/array, return null.\n    // but when top-level, return undefined\n    var topLevelHolder = {\"\":obj};\n    if (obj === undefined) {\n        return getReplacedValueOrUndefined(topLevelHolder, '', true);\n    }\n    return internalStringify(topLevelHolder, '', true);\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/json5/lib/json5.js?")},"./node_modules/babel-core/node_modules/safe-buffer/index.js":function(module,exports,__webpack_require__){eval("/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(\"./node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/safe-buffer/index.js?")},"./node_modules/babel-core/node_modules/source-map/lib/array-set.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/util.js\");\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/array-set.js?")},"./node_modules/babel-core/node_modules/source-map/lib/base64-vlq.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/base64.js");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = "";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error("Expected more digits in base 64 VLQ value.");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/base64-vlq.js?')},"./node_modules/babel-core/node_modules/source-map/lib/base64.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/base64.js?")},"./node_modules/babel-core/node_modules/source-map/lib/binary-search.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/binary-search.js?")},"./node_modules/babel-core/node_modules/source-map/lib/mapping-list.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/util.js");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/mapping-list.js?')},"./node_modules/babel-core/node_modules/source-map/lib/quick-sort.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/quick-sort.js?")},"./node_modules/babel-core/node_modules/source-map/lib/source-map-consumer.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/util.js\");\nvar binarySearch = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/binary-search.js\");\nvar ArraySet = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/array-set.js\").ArraySet;\nvar base64VLQ = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/base64-vlq.js\");\nvar quickSort = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/quick-sort.js\").quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/source-map-consumer.js?")},"./node_modules/babel-core/node_modules/source-map/lib/source-map-generator.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/base64-vlq.js\");\nvar util = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/util.js\");\nvar ArraySet = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/array-set.js\").ArraySet;\nvar MappingList = __webpack_require__(\"./node_modules/babel-core/node_modules/source-map/lib/mapping-list.js\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/source-map-generator.js?")},"./node_modules/babel-core/node_modules/source-map/lib/source-node.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;\nvar util = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/util.js");\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = "$$$isSourceNode$$$";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source\'s filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || "";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of "remainingLines"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from "lastMapping" to "mapping":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with "lastMapping"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between "lastGeneratedColumn" and\n          // "mapping.generatedColumn" with "lastMapping"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with "lastMapping"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(""));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === "string") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === "string") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source\'s line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== \'\') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === \'string\') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(\'\'.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = "";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: "",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/source-node.js?')},"./node_modules/babel-core/node_modules/source-map/lib/util.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/lib/util.js?")},"./node_modules/babel-core/node_modules/source-map/source-map.js":function(module,exports,__webpack_require__){eval('/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;\nexports.SourceMapConsumer = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/source-map-consumer.js").SourceMapConsumer;\nexports.SourceNode = __webpack_require__("./node_modules/babel-core/node_modules/source-map/lib/source-node.js").SourceNode;\n\n\n//# sourceURL=webpack:///./node_modules/babel-core/node_modules/source-map/source-map.js?')},"./node_modules/babel-core/package.json":function(module){eval('module.exports = JSON.parse("{\\"name\\":\\"babel-core\\",\\"version\\":\\"6.26.3\\",\\"description\\":\\"Babel compiler core.\\",\\"author\\":\\"Sebastian McKenzie <sebmck@gmail.com>\\",\\"homepage\\":\\"https://babeljs.io/\\",\\"license\\":\\"MIT\\",\\"repository\\":\\"https://github.com/babel/babel/tree/master/packages/babel-core\\",\\"keywords\\":[\\"6to5\\",\\"babel\\",\\"classes\\",\\"const\\",\\"es6\\",\\"harmony\\",\\"let\\",\\"modules\\",\\"transpile\\",\\"transpiler\\",\\"var\\",\\"babel-core\\",\\"compiler\\"],\\"scripts\\":{\\"bench\\":\\"make bench\\",\\"test\\":\\"make test\\"},\\"dependencies\\":{\\"babel-code-frame\\":\\"^6.26.0\\",\\"babel-generator\\":\\"^6.26.0\\",\\"babel-helpers\\":\\"^6.24.1\\",\\"babel-messages\\":\\"^6.23.0\\",\\"babel-register\\":\\"^6.26.0\\",\\"babel-runtime\\":\\"^6.26.0\\",\\"babel-template\\":\\"^6.26.0\\",\\"babel-traverse\\":\\"^6.26.0\\",\\"babel-types\\":\\"^6.26.0\\",\\"babylon\\":\\"^6.18.0\\",\\"convert-source-map\\":\\"^1.5.1\\",\\"debug\\":\\"^2.6.9\\",\\"json5\\":\\"^0.5.1\\",\\"lodash\\":\\"^4.17.4\\",\\"minimatch\\":\\"^3.0.4\\",\\"path-is-absolute\\":\\"^1.0.1\\",\\"private\\":\\"^0.1.8\\",\\"slash\\":\\"^1.0.0\\",\\"source-map\\":\\"^0.5.7\\"},\\"devDependencies\\":{\\"babel-helper-fixtures\\":\\"^6.26.2\\",\\"babel-helper-transform-fixture-test-runner\\":\\"^6.26.2\\",\\"babel-polyfill\\":\\"^6.26.0\\"}}");\n\n//# sourceURL=webpack:///./node_modules/babel-core/package.json?')},"./node_modules/babel-generator/lib/buffer.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _trimRight = __webpack_require__("./node_modules/trim-right/index.js");\n\nvar _trimRight2 = _interopRequireDefault(_trimRight);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SPACES_RE = /^[ \\t]+$/;\n\nvar Buffer = function () {\n  function Buffer(map) {\n    (0, _classCallCheck3.default)(this, Buffer);\n    this._map = null;\n    this._buf = [];\n    this._last = "";\n    this._queue = [];\n    this._position = {\n      line: 1,\n      column: 0\n    };\n    this._sourcePosition = {\n      identifierName: null,\n      line: null,\n      column: null,\n      filename: null\n    };\n\n    this._map = map;\n  }\n\n  Buffer.prototype.get = function get() {\n    this._flush();\n\n    var map = this._map;\n    var result = {\n      code: (0, _trimRight2.default)(this._buf.join("")),\n      map: null,\n      rawMappings: map && map.getRawMappings()\n    };\n\n    if (map) {\n      Object.defineProperty(result, "map", {\n        configurable: true,\n        enumerable: true,\n        get: function get() {\n          return this.map = map.get();\n        },\n        set: function set(value) {\n          Object.defineProperty(this, "map", { value: value, writable: true });\n        }\n      });\n    }\n\n    return result;\n  };\n\n  Buffer.prototype.append = function append(str) {\n    this._flush();\n    var _sourcePosition = this._sourcePosition,\n        line = _sourcePosition.line,\n        column = _sourcePosition.column,\n        filename = _sourcePosition.filename,\n        identifierName = _sourcePosition.identifierName;\n\n    this._append(str, line, column, identifierName, filename);\n  };\n\n  Buffer.prototype.queue = function queue(str) {\n    if (str === "\\n") while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {\n      this._queue.shift();\n    }var _sourcePosition2 = this._sourcePosition,\n        line = _sourcePosition2.line,\n        column = _sourcePosition2.column,\n        filename = _sourcePosition2.filename,\n        identifierName = _sourcePosition2.identifierName;\n\n    this._queue.unshift([str, line, column, identifierName, filename]);\n  };\n\n  Buffer.prototype._flush = function _flush() {\n    var item = void 0;\n    while (item = this._queue.pop()) {\n      this._append.apply(this, item);\n    }\n  };\n\n  Buffer.prototype._append = function _append(str, line, column, identifierName, filename) {\n    if (this._map && str[0] !== "\\n") {\n      this._map.mark(this._position.line, this._position.column, line, column, identifierName, filename);\n    }\n\n    this._buf.push(str);\n    this._last = str[str.length - 1];\n\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === "\\n") {\n        this._position.line++;\n        this._position.column = 0;\n      } else {\n        this._position.column++;\n      }\n    }\n  };\n\n  Buffer.prototype.removeTrailingNewline = function removeTrailingNewline() {\n    if (this._queue.length > 0 && this._queue[0][0] === "\\n") this._queue.shift();\n  };\n\n  Buffer.prototype.removeLastSemicolon = function removeLastSemicolon() {\n    if (this._queue.length > 0 && this._queue[0][0] === ";") this._queue.shift();\n  };\n\n  Buffer.prototype.endsWith = function endsWith(suffix) {\n    if (suffix.length === 1) {\n      var last = void 0;\n      if (this._queue.length > 0) {\n        var str = this._queue[0][0];\n        last = str[str.length - 1];\n      } else {\n        last = this._last;\n      }\n\n      return last === suffix;\n    }\n\n    var end = this._last + this._queue.reduce(function (acc, item) {\n      return item[0] + acc;\n    }, "");\n    if (suffix.length <= end.length) {\n      return end.slice(-suffix.length) === suffix;\n    }\n\n    return false;\n  };\n\n  Buffer.prototype.hasContent = function hasContent() {\n    return this._queue.length > 0 || !!this._last;\n  };\n\n  Buffer.prototype.source = function source(prop, loc) {\n    if (prop && !loc) return;\n\n    var pos = loc ? loc[prop] : null;\n\n    this._sourcePosition.identifierName = loc && loc.identifierName || null;\n    this._sourcePosition.line = pos ? pos.line : null;\n    this._sourcePosition.column = pos ? pos.column : null;\n    this._sourcePosition.filename = loc && loc.filename || null;\n  };\n\n  Buffer.prototype.withSource = function withSource(prop, loc, cb) {\n    if (!this._map) return cb();\n\n    var originalLine = this._sourcePosition.line;\n    var originalColumn = this._sourcePosition.column;\n    var originalFilename = this._sourcePosition.filename;\n    var originalIdentifierName = this._sourcePosition.identifierName;\n\n    this.source(prop, loc);\n\n    cb();\n\n    this._sourcePosition.line = originalLine;\n    this._sourcePosition.column = originalColumn;\n    this._sourcePosition.filename = originalFilename;\n    this._sourcePosition.identifierName = originalIdentifierName;\n  };\n\n  Buffer.prototype.getCurrentColumn = function getCurrentColumn() {\n    var extra = this._queue.reduce(function (acc, item) {\n      return item[0] + acc;\n    }, "");\n    var lastIndex = extra.lastIndexOf("\\n");\n\n    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;\n  };\n\n  Buffer.prototype.getCurrentLine = function getCurrentLine() {\n    var extra = this._queue.reduce(function (acc, item) {\n      return item[0] + acc;\n    }, "");\n\n    var count = 0;\n    for (var i = 0; i < extra.length; i++) {\n      if (extra[i] === "\\n") count++;\n    }\n\n    return this._position.line + count;\n  };\n\n  return Buffer;\n}();\n\nexports.default = Buffer;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/buffer.js?')},"./node_modules/babel-generator/lib/generators/base.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.File = File;\nexports.Program = Program;\nexports.BlockStatement = BlockStatement;\nexports.Noop = Noop;\nexports.Directive = Directive;\n\nvar _types = __webpack_require__("./node_modules/babel-generator/lib/generators/types.js");\n\nObject.defineProperty(exports, "DirectiveLiteral", {\n  enumerable: true,\n  get: function get() {\n    return _types.StringLiteral;\n  }\n});\nfunction File(node) {\n  this.print(node.program, node);\n}\n\nfunction Program(node) {\n  this.printInnerComments(node, false);\n\n  this.printSequence(node.directives, node);\n  if (node.directives && node.directives.length) this.newline();\n\n  this.printSequence(node.body, node);\n}\n\nfunction BlockStatement(node) {\n  this.token("{");\n  this.printInnerComments(node);\n\n  var hasDirectives = node.directives && node.directives.length;\n\n  if (node.body.length || hasDirectives) {\n    this.newline();\n\n    this.printSequence(node.directives, node, { indent: true });\n    if (hasDirectives) this.newline();\n\n    this.printSequence(node.body, node, { indent: true });\n    this.removeTrailingNewline();\n\n    this.source("end", node.loc);\n\n    if (!this.endsWith("\\n")) this.newline();\n\n    this.rightBrace();\n  } else {\n    this.source("end", node.loc);\n    this.token("}");\n  }\n}\n\nfunction Noop() {}\n\nfunction Directive(node) {\n  this.print(node.value, node);\n  this.semicolon();\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/base.js?')},"./node_modules/babel-generator/lib/generators/classes.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ClassDeclaration = ClassDeclaration;\nexports.ClassBody = ClassBody;\nexports.ClassProperty = ClassProperty;\nexports.ClassMethod = ClassMethod;\nfunction ClassDeclaration(node) {\n  this.printJoin(node.decorators, node);\n  this.word("class");\n\n  if (node.id) {\n    this.space();\n    this.print(node.id, node);\n  }\n\n  this.print(node.typeParameters, node);\n\n  if (node.superClass) {\n    this.space();\n    this.word("extends");\n    this.space();\n    this.print(node.superClass, node);\n    this.print(node.superTypeParameters, node);\n  }\n\n  if (node.implements) {\n    this.space();\n    this.word("implements");\n    this.space();\n    this.printList(node.implements, node);\n  }\n\n  this.space();\n  this.print(node.body, node);\n}\n\nexports.ClassExpression = ClassDeclaration;\nfunction ClassBody(node) {\n  this.token("{");\n  this.printInnerComments(node);\n  if (node.body.length === 0) {\n    this.token("}");\n  } else {\n    this.newline();\n\n    this.indent();\n    this.printSequence(node.body, node);\n    this.dedent();\n\n    if (!this.endsWith("\\n")) this.newline();\n\n    this.rightBrace();\n  }\n}\n\nfunction ClassProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.static) {\n    this.word("static");\n    this.space();\n  }\n  if (node.computed) {\n    this.token("[");\n    this.print(node.key, node);\n    this.token("]");\n  } else {\n    this._variance(node);\n    this.print(node.key, node);\n  }\n  this.print(node.typeAnnotation, node);\n  if (node.value) {\n    this.space();\n    this.token("=");\n    this.space();\n    this.print(node.value, node);\n  }\n  this.semicolon();\n}\n\nfunction ClassMethod(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.static) {\n    this.word("static");\n    this.space();\n  }\n\n  if (node.kind === "constructorCall") {\n    this.word("call");\n    this.space();\n  }\n\n  this._method(node);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/classes.js?')},"./node_modules/babel-generator/lib/generators/expressions.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.LogicalExpression = exports.BinaryExpression = exports.AwaitExpression = exports.YieldExpression = undefined;\nexports.UnaryExpression = UnaryExpression;\nexports.DoExpression = DoExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ThisExpression = ThisExpression;\nexports.Super = Super;\nexports.Decorator = Decorator;\nexports.CallExpression = CallExpression;\nexports.Import = Import;\nexports.EmptyStatement = EmptyStatement;\nexports.ExpressionStatement = ExpressionStatement;\nexports.AssignmentPattern = AssignmentPattern;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BindExpression = BindExpression;\nexports.MemberExpression = MemberExpression;\nexports.MetaProperty = MetaProperty;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _node = __webpack_require__("./node_modules/babel-generator/lib/node/index.js");\n\nvar n = _interopRequireWildcard(_node);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction UnaryExpression(node) {\n  if (node.operator === "void" || node.operator === "delete" || node.operator === "typeof") {\n    this.word(node.operator);\n    this.space();\n  } else {\n    this.token(node.operator);\n  }\n\n  this.print(node.argument, node);\n}\n\nfunction DoExpression(node) {\n  this.word("do");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction ParenthesizedExpression(node) {\n  this.token("(");\n  this.print(node.expression, node);\n  this.token(")");\n}\n\nfunction UpdateExpression(node) {\n  if (node.prefix) {\n    this.token(node.operator);\n    this.print(node.argument, node);\n  } else {\n    this.print(node.argument, node);\n    this.token(node.operator);\n  }\n}\n\nfunction ConditionalExpression(node) {\n  this.print(node.test, node);\n  this.space();\n  this.token("?");\n  this.space();\n  this.print(node.consequent, node);\n  this.space();\n  this.token(":");\n  this.space();\n  this.print(node.alternate, node);\n}\n\nfunction NewExpression(node, parent) {\n  this.word("new");\n  this.space();\n  this.print(node.callee, node);\n  if (node.arguments.length === 0 && this.format.minified && !t.isCallExpression(parent, { callee: node }) && !t.isMemberExpression(parent) && !t.isNewExpression(parent)) return;\n\n  this.token("(");\n  this.printList(node.arguments, node);\n  this.token(")");\n}\n\nfunction SequenceExpression(node) {\n  this.printList(node.expressions, node);\n}\n\nfunction ThisExpression() {\n  this.word("this");\n}\n\nfunction Super() {\n  this.word("super");\n}\n\nfunction Decorator(node) {\n  this.token("@");\n  this.print(node.expression, node);\n  this.newline();\n}\n\nfunction commaSeparatorNewline() {\n  this.token(",");\n  this.newline();\n\n  if (!this.endsWith("\\n")) this.space();\n}\n\nfunction CallExpression(node) {\n  this.print(node.callee, node);\n\n  this.token("(");\n\n  var isPrettyCall = node._prettyCall;\n\n  var separator = void 0;\n  if (isPrettyCall) {\n    separator = commaSeparatorNewline;\n    this.newline();\n    this.indent();\n  }\n\n  this.printList(node.arguments, node, { separator: separator });\n\n  if (isPrettyCall) {\n    this.newline();\n    this.dedent();\n  }\n\n  this.token(")");\n}\n\nfunction Import() {\n  this.word("import");\n}\n\nfunction buildYieldAwait(keyword) {\n  return function (node) {\n    this.word(keyword);\n\n    if (node.delegate) {\n      this.token("*");\n    }\n\n    if (node.argument) {\n      this.space();\n      var terminatorState = this.startTerminatorless();\n      this.print(node.argument, node);\n      this.endTerminatorless(terminatorState);\n    }\n  };\n}\n\nvar YieldExpression = exports.YieldExpression = buildYieldAwait("yield");\nvar AwaitExpression = exports.AwaitExpression = buildYieldAwait("await");\n\nfunction EmptyStatement() {\n  this.semicolon(true);\n}\n\nfunction ExpressionStatement(node) {\n  this.print(node.expression, node);\n  this.semicolon();\n}\n\nfunction AssignmentPattern(node) {\n  this.print(node.left, node);\n  if (node.left.optional) this.token("?");\n  this.print(node.left.typeAnnotation, node);\n  this.space();\n  this.token("=");\n  this.space();\n  this.print(node.right, node);\n}\n\nfunction AssignmentExpression(node, parent) {\n  var parens = this.inForStatementInitCounter && node.operator === "in" && !n.needsParens(node, parent);\n\n  if (parens) {\n    this.token("(");\n  }\n\n  this.print(node.left, node);\n\n  this.space();\n  if (node.operator === "in" || node.operator === "instanceof") {\n    this.word(node.operator);\n  } else {\n    this.token(node.operator);\n  }\n  this.space();\n\n  this.print(node.right, node);\n\n  if (parens) {\n    this.token(")");\n  }\n}\n\nfunction BindExpression(node) {\n  this.print(node.object, node);\n  this.token("::");\n  this.print(node.callee, node);\n}\n\nexports.BinaryExpression = AssignmentExpression;\nexports.LogicalExpression = AssignmentExpression;\nfunction MemberExpression(node) {\n  this.print(node.object, node);\n\n  if (!node.computed && t.isMemberExpression(node.property)) {\n    throw new TypeError("Got a MemberExpression for MemberExpression property");\n  }\n\n  var computed = node.computed;\n  if (t.isLiteral(node.property) && typeof node.property.value === "number") {\n    computed = true;\n  }\n\n  if (computed) {\n    this.token("[");\n    this.print(node.property, node);\n    this.token("]");\n  } else {\n    this.token(".");\n    this.print(node.property, node);\n  }\n}\n\nfunction MetaProperty(node) {\n  this.print(node.meta, node);\n  this.token(".");\n  this.print(node.property, node);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/expressions.js?')},"./node_modules/babel-generator/lib/generators/flow.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.TypeParameterDeclaration = exports.StringLiteralTypeAnnotation = exports.NumericLiteralTypeAnnotation = exports.GenericTypeAnnotation = exports.ClassImplements = undefined;\nexports.AnyTypeAnnotation = AnyTypeAnnotation;\nexports.ArrayTypeAnnotation = ArrayTypeAnnotation;\nexports.BooleanTypeAnnotation = BooleanTypeAnnotation;\nexports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\nexports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\nexports.DeclareClass = DeclareClass;\nexports.DeclareFunction = DeclareFunction;\nexports.DeclareInterface = DeclareInterface;\nexports.DeclareModule = DeclareModule;\nexports.DeclareModuleExports = DeclareModuleExports;\nexports.DeclareTypeAlias = DeclareTypeAlias;\nexports.DeclareOpaqueType = DeclareOpaqueType;\nexports.DeclareVariable = DeclareVariable;\nexports.DeclareExportDeclaration = DeclareExportDeclaration;\nexports.ExistentialTypeParam = ExistentialTypeParam;\nexports.FunctionTypeAnnotation = FunctionTypeAnnotation;\nexports.FunctionTypeParam = FunctionTypeParam;\nexports.InterfaceExtends = InterfaceExtends;\nexports._interfaceish = _interfaceish;\nexports._variance = _variance;\nexports.InterfaceDeclaration = InterfaceDeclaration;\nexports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\nexports.MixedTypeAnnotation = MixedTypeAnnotation;\nexports.EmptyTypeAnnotation = EmptyTypeAnnotation;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\n\nvar _types = __webpack_require__("./node_modules/babel-generator/lib/generators/types.js");\n\nObject.defineProperty(exports, "NumericLiteralTypeAnnotation", {\n  enumerable: true,\n  get: function get() {\n    return _types.NumericLiteral;\n  }\n});\nObject.defineProperty(exports, "StringLiteralTypeAnnotation", {\n  enumerable: true,\n  get: function get() {\n    return _types.StringLiteral;\n  }\n});\nexports.NumberTypeAnnotation = NumberTypeAnnotation;\nexports.StringTypeAnnotation = StringTypeAnnotation;\nexports.ThisTypeAnnotation = ThisTypeAnnotation;\nexports.TupleTypeAnnotation = TupleTypeAnnotation;\nexports.TypeofTypeAnnotation = TypeofTypeAnnotation;\nexports.TypeAlias = TypeAlias;\nexports.OpaqueType = OpaqueType;\nexports.TypeAnnotation = TypeAnnotation;\nexports.TypeParameter = TypeParameter;\nexports.TypeParameterInstantiation = TypeParameterInstantiation;\nexports.ObjectTypeAnnotation = ObjectTypeAnnotation;\nexports.ObjectTypeCallProperty = ObjectTypeCallProperty;\nexports.ObjectTypeIndexer = ObjectTypeIndexer;\nexports.ObjectTypeProperty = ObjectTypeProperty;\nexports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\nexports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\nexports.UnionTypeAnnotation = UnionTypeAnnotation;\nexports.TypeCastExpression = TypeCastExpression;\nexports.VoidTypeAnnotation = VoidTypeAnnotation;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction AnyTypeAnnotation() {\n  this.word("any");\n}\n\nfunction ArrayTypeAnnotation(node) {\n  this.print(node.elementType, node);\n  this.token("[");\n  this.token("]");\n}\n\nfunction BooleanTypeAnnotation() {\n  this.word("boolean");\n}\n\nfunction BooleanLiteralTypeAnnotation(node) {\n  this.word(node.value ? "true" : "false");\n}\n\nfunction NullLiteralTypeAnnotation() {\n  this.word("null");\n}\n\nfunction DeclareClass(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word("declare");\n    this.space();\n  }\n  this.word("class");\n  this.space();\n  this._interfaceish(node);\n}\n\nfunction DeclareFunction(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word("declare");\n    this.space();\n  }\n  this.word("function");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareInterface(node) {\n  this.word("declare");\n  this.space();\n  this.InterfaceDeclaration(node);\n}\n\nfunction DeclareModule(node) {\n  this.word("declare");\n  this.space();\n  this.word("module");\n  this.space();\n  this.print(node.id, node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction DeclareModuleExports(node) {\n  this.word("declare");\n  this.space();\n  this.word("module");\n  this.token(".");\n  this.word("exports");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction DeclareTypeAlias(node) {\n  this.word("declare");\n  this.space();\n  this.TypeAlias(node);\n}\n\nfunction DeclareOpaqueType(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word("declare");\n    this.space();\n  }\n  this.OpaqueType(node);\n}\n\nfunction DeclareVariable(node, parent) {\n  if (!t.isDeclareExportDeclaration(parent)) {\n    this.word("declare");\n    this.space();\n  }\n  this.word("var");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  this.semicolon();\n}\n\nfunction DeclareExportDeclaration(node) {\n  this.word("declare");\n  this.space();\n  this.word("export");\n  this.space();\n  if (node.default) {\n    this.word("default");\n    this.space();\n  }\n\n  FlowExportDeclaration.apply(this, arguments);\n}\n\nfunction FlowExportDeclaration(node) {\n  if (node.declaration) {\n    var declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    this.token("{");\n    if (node.specifiers.length) {\n      this.space();\n      this.printList(node.specifiers, node);\n      this.space();\n    }\n    this.token("}");\n\n    if (node.source) {\n      this.space();\n      this.word("from");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ExistentialTypeParam() {\n  this.token("*");\n}\n\nfunction FunctionTypeAnnotation(node, parent) {\n  this.print(node.typeParameters, node);\n  this.token("(");\n  this.printList(node.params, node);\n\n  if (node.rest) {\n    if (node.params.length) {\n      this.token(",");\n      this.space();\n    }\n    this.token("...");\n    this.print(node.rest, node);\n  }\n\n  this.token(")");\n\n  if (parent.type === "ObjectTypeCallProperty" || parent.type === "DeclareFunction") {\n    this.token(":");\n  } else {\n    this.space();\n    this.token("=>");\n  }\n\n  this.space();\n  this.print(node.returnType, node);\n}\n\nfunction FunctionTypeParam(node) {\n  this.print(node.name, node);\n  if (node.optional) this.token("?");\n  this.token(":");\n  this.space();\n  this.print(node.typeAnnotation, node);\n}\n\nfunction InterfaceExtends(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n}\n\nexports.ClassImplements = InterfaceExtends;\nexports.GenericTypeAnnotation = InterfaceExtends;\nfunction _interfaceish(node) {\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  if (node.extends.length) {\n    this.space();\n    this.word("extends");\n    this.space();\n    this.printList(node.extends, node);\n  }\n  if (node.mixins && node.mixins.length) {\n    this.space();\n    this.word("mixins");\n    this.space();\n    this.printList(node.mixins, node);\n  }\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction _variance(node) {\n  if (node.variance === "plus") {\n    this.token("+");\n  } else if (node.variance === "minus") {\n    this.token("-");\n  }\n}\n\nfunction InterfaceDeclaration(node) {\n  this.word("interface");\n  this.space();\n  this._interfaceish(node);\n}\n\nfunction andSeparator() {\n  this.space();\n  this.token("&");\n  this.space();\n}\n\nfunction IntersectionTypeAnnotation(node) {\n  this.printJoin(node.types, node, { separator: andSeparator });\n}\n\nfunction MixedTypeAnnotation() {\n  this.word("mixed");\n}\n\nfunction EmptyTypeAnnotation() {\n  this.word("empty");\n}\n\nfunction NullableTypeAnnotation(node) {\n  this.token("?");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction NumberTypeAnnotation() {\n  this.word("number");\n}\n\nfunction StringTypeAnnotation() {\n  this.word("string");\n}\n\nfunction ThisTypeAnnotation() {\n  this.word("this");\n}\n\nfunction TupleTypeAnnotation(node) {\n  this.token("[");\n  this.printList(node.types, node);\n  this.token("]");\n}\n\nfunction TypeofTypeAnnotation(node) {\n  this.word("typeof");\n  this.space();\n  this.print(node.argument, node);\n}\n\nfunction TypeAlias(node) {\n  this.word("type");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  this.space();\n  this.token("=");\n  this.space();\n  this.print(node.right, node);\n  this.semicolon();\n}\nfunction OpaqueType(node) {\n  this.word("opaque");\n  this.space();\n  this.word("type");\n  this.space();\n  this.print(node.id, node);\n  this.print(node.typeParameters, node);\n  if (node.supertype) {\n    this.token(":");\n    this.space();\n    this.print(node.supertype, node);\n  }\n  if (node.impltype) {\n    this.space();\n    this.token("=");\n    this.space();\n    this.print(node.impltype, node);\n  }\n  this.semicolon();\n}\n\nfunction TypeAnnotation(node) {\n  this.token(":");\n  this.space();\n  if (node.optional) this.token("?");\n  this.print(node.typeAnnotation, node);\n}\n\nfunction TypeParameter(node) {\n  this._variance(node);\n\n  this.word(node.name);\n\n  if (node.bound) {\n    this.print(node.bound, node);\n  }\n\n  if (node.default) {\n    this.space();\n    this.token("=");\n    this.space();\n    this.print(node.default, node);\n  }\n}\n\nfunction TypeParameterInstantiation(node) {\n  this.token("<");\n  this.printList(node.params, node, {});\n  this.token(">");\n}\n\nexports.TypeParameterDeclaration = TypeParameterInstantiation;\nfunction ObjectTypeAnnotation(node) {\n  var _this = this;\n\n  if (node.exact) {\n    this.token("{|");\n  } else {\n    this.token("{");\n  }\n\n  var props = node.properties.concat(node.callProperties, node.indexers);\n\n  if (props.length) {\n    this.space();\n\n    this.printJoin(props, node, {\n      addNewlines: function addNewlines(leading) {\n        if (leading && !props[0]) return 1;\n      },\n\n      indent: true,\n      statement: true,\n      iterator: function iterator() {\n        if (props.length !== 1) {\n          if (_this.format.flowCommaSeparator) {\n            _this.token(",");\n          } else {\n            _this.semicolon();\n          }\n          _this.space();\n        }\n      }\n    });\n\n    this.space();\n  }\n\n  if (node.exact) {\n    this.token("|}");\n  } else {\n    this.token("}");\n  }\n}\n\nfunction ObjectTypeCallProperty(node) {\n  if (node.static) {\n    this.word("static");\n    this.space();\n  }\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeIndexer(node) {\n  if (node.static) {\n    this.word("static");\n    this.space();\n  }\n  this._variance(node);\n  this.token("[");\n  this.print(node.id, node);\n  this.token(":");\n  this.space();\n  this.print(node.key, node);\n  this.token("]");\n  this.token(":");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeProperty(node) {\n  if (node.static) {\n    this.word("static");\n    this.space();\n  }\n  this._variance(node);\n  this.print(node.key, node);\n  if (node.optional) this.token("?");\n  this.token(":");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ObjectTypeSpreadProperty(node) {\n  this.token("...");\n  this.print(node.argument, node);\n}\n\nfunction QualifiedTypeIdentifier(node) {\n  this.print(node.qualification, node);\n  this.token(".");\n  this.print(node.id, node);\n}\n\nfunction orSeparator() {\n  this.space();\n  this.token("|");\n  this.space();\n}\n\nfunction UnionTypeAnnotation(node) {\n  this.printJoin(node.types, node, { separator: orSeparator });\n}\n\nfunction TypeCastExpression(node) {\n  this.token("(");\n  this.print(node.expression, node);\n  this.print(node.typeAnnotation, node);\n  this.token(")");\n}\n\nfunction VoidTypeAnnotation() {\n  this.word("void");\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/flow.js?')},"./node_modules/babel-generator/lib/generators/jsx.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.JSXAttribute = JSXAttribute;\nexports.JSXIdentifier = JSXIdentifier;\nexports.JSXNamespacedName = JSXNamespacedName;\nexports.JSXMemberExpression = JSXMemberExpression;\nexports.JSXSpreadAttribute = JSXSpreadAttribute;\nexports.JSXExpressionContainer = JSXExpressionContainer;\nexports.JSXSpreadChild = JSXSpreadChild;\nexports.JSXText = JSXText;\nexports.JSXElement = JSXElement;\nexports.JSXOpeningElement = JSXOpeningElement;\nexports.JSXClosingElement = JSXClosingElement;\nexports.JSXEmptyExpression = JSXEmptyExpression;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction JSXAttribute(node) {\n  this.print(node.name, node);\n  if (node.value) {\n    this.token("=");\n    this.print(node.value, node);\n  }\n}\n\nfunction JSXIdentifier(node) {\n  this.word(node.name);\n}\n\nfunction JSXNamespacedName(node) {\n  this.print(node.namespace, node);\n  this.token(":");\n  this.print(node.name, node);\n}\n\nfunction JSXMemberExpression(node) {\n  this.print(node.object, node);\n  this.token(".");\n  this.print(node.property, node);\n}\n\nfunction JSXSpreadAttribute(node) {\n  this.token("{");\n  this.token("...");\n  this.print(node.argument, node);\n  this.token("}");\n}\n\nfunction JSXExpressionContainer(node) {\n  this.token("{");\n  this.print(node.expression, node);\n  this.token("}");\n}\n\nfunction JSXSpreadChild(node) {\n  this.token("{");\n  this.token("...");\n  this.print(node.expression, node);\n  this.token("}");\n}\n\nfunction JSXText(node) {\n  this.token(node.value);\n}\n\nfunction JSXElement(node) {\n  var open = node.openingElement;\n  this.print(open, node);\n  if (open.selfClosing) return;\n\n  this.indent();\n  for (var _iterator = node.children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var child = _ref;\n\n    this.print(child, node);\n  }\n  this.dedent();\n\n  this.print(node.closingElement, node);\n}\n\nfunction spaceSeparator() {\n  this.space();\n}\n\nfunction JSXOpeningElement(node) {\n  this.token("<");\n  this.print(node.name, node);\n  if (node.attributes.length > 0) {\n    this.space();\n    this.printJoin(node.attributes, node, { separator: spaceSeparator });\n  }\n  if (node.selfClosing) {\n    this.space();\n    this.token("/>");\n  } else {\n    this.token(">");\n  }\n}\n\nfunction JSXClosingElement(node) {\n  this.token("</");\n  this.print(node.name, node);\n  this.token(">");\n}\n\nfunction JSXEmptyExpression() {}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/jsx.js?')},"./node_modules/babel-generator/lib/generators/methods.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.FunctionDeclaration = undefined;\nexports._params = _params;\nexports._method = _method;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _params(node) {\n  var _this = this;\n\n  this.print(node.typeParameters, node);\n  this.token("(");\n  this.printList(node.params, node, {\n    iterator: function iterator(node) {\n      if (node.optional) _this.token("?");\n      _this.print(node.typeAnnotation, node);\n    }\n  });\n  this.token(")");\n\n  if (node.returnType) {\n    this.print(node.returnType, node);\n  }\n}\n\nfunction _method(node) {\n  var kind = node.kind;\n  var key = node.key;\n\n  if (kind === "method" || kind === "init") {\n    if (node.generator) {\n      this.token("*");\n    }\n  }\n\n  if (kind === "get" || kind === "set") {\n    this.word(kind);\n    this.space();\n  }\n\n  if (node.async) {\n    this.word("async");\n    this.space();\n  }\n\n  if (node.computed) {\n    this.token("[");\n    this.print(key, node);\n    this.token("]");\n  } else {\n    this.print(key, node);\n  }\n\n  this._params(node);\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction FunctionExpression(node) {\n  if (node.async) {\n    this.word("async");\n    this.space();\n  }\n  this.word("function");\n  if (node.generator) this.token("*");\n\n  if (node.id) {\n    this.space();\n    this.print(node.id, node);\n  } else {\n    this.space();\n  }\n\n  this._params(node);\n  this.space();\n  this.print(node.body, node);\n}\n\nexports.FunctionDeclaration = FunctionExpression;\nfunction ArrowFunctionExpression(node) {\n  if (node.async) {\n    this.word("async");\n    this.space();\n  }\n\n  var firstParam = node.params[0];\n\n  if (node.params.length === 1 && t.isIdentifier(firstParam) && !hasTypes(node, firstParam)) {\n    this.print(firstParam, node);\n  } else {\n    this._params(node);\n  }\n\n  this.space();\n  this.token("=>");\n  this.space();\n\n  this.print(node.body, node);\n}\n\nfunction hasTypes(node, param) {\n  return node.typeParameters || node.returnType || param.typeAnnotation || param.optional || param.trailingComments;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/methods.js?')},"./node_modules/babel-generator/lib/generators/modules.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ImportSpecifier = ImportSpecifier;\nexports.ImportDefaultSpecifier = ImportDefaultSpecifier;\nexports.ExportDefaultSpecifier = ExportDefaultSpecifier;\nexports.ExportSpecifier = ExportSpecifier;\nexports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\nexports.ExportAllDeclaration = ExportAllDeclaration;\nexports.ExportNamedDeclaration = ExportNamedDeclaration;\nexports.ExportDefaultDeclaration = ExportDefaultDeclaration;\nexports.ImportDeclaration = ImportDeclaration;\nexports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction ImportSpecifier(node) {\n  if (node.importKind === "type" || node.importKind === "typeof") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  this.print(node.imported, node);\n  if (node.local && node.local.name !== node.imported.name) {\n    this.space();\n    this.word("as");\n    this.space();\n    this.print(node.local, node);\n  }\n}\n\nfunction ImportDefaultSpecifier(node) {\n  this.print(node.local, node);\n}\n\nfunction ExportDefaultSpecifier(node) {\n  this.print(node.exported, node);\n}\n\nfunction ExportSpecifier(node) {\n  this.print(node.local, node);\n  if (node.exported && node.local.name !== node.exported.name) {\n    this.space();\n    this.word("as");\n    this.space();\n    this.print(node.exported, node);\n  }\n}\n\nfunction ExportNamespaceSpecifier(node) {\n  this.token("*");\n  this.space();\n  this.word("as");\n  this.space();\n  this.print(node.exported, node);\n}\n\nfunction ExportAllDeclaration(node) {\n  this.word("export");\n  this.space();\n  this.token("*");\n  this.space();\n  this.word("from");\n  this.space();\n  this.print(node.source, node);\n  this.semicolon();\n}\n\nfunction ExportNamedDeclaration() {\n  this.word("export");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDefaultDeclaration() {\n  this.word("export");\n  this.space();\n  this.word("default");\n  this.space();\n  ExportDeclaration.apply(this, arguments);\n}\n\nfunction ExportDeclaration(node) {\n  if (node.declaration) {\n    var declar = node.declaration;\n    this.print(declar, node);\n    if (!t.isStatement(declar)) this.semicolon();\n  } else {\n    if (node.exportKind === "type") {\n      this.word("type");\n      this.space();\n    }\n\n    var specifiers = node.specifiers.slice(0);\n\n    var hasSpecial = false;\n    while (true) {\n      var first = specifiers[0];\n      if (t.isExportDefaultSpecifier(first) || t.isExportNamespaceSpecifier(first)) {\n        hasSpecial = true;\n        this.print(specifiers.shift(), node);\n        if (specifiers.length) {\n          this.token(",");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length || !specifiers.length && !hasSpecial) {\n      this.token("{");\n      if (specifiers.length) {\n        this.space();\n        this.printList(specifiers, node);\n        this.space();\n      }\n      this.token("}");\n    }\n\n    if (node.source) {\n      this.space();\n      this.word("from");\n      this.space();\n      this.print(node.source, node);\n    }\n\n    this.semicolon();\n  }\n}\n\nfunction ImportDeclaration(node) {\n  this.word("import");\n  this.space();\n\n  if (node.importKind === "type" || node.importKind === "typeof") {\n    this.word(node.importKind);\n    this.space();\n  }\n\n  var specifiers = node.specifiers.slice(0);\n  if (specifiers && specifiers.length) {\n    while (true) {\n      var first = specifiers[0];\n      if (t.isImportDefaultSpecifier(first) || t.isImportNamespaceSpecifier(first)) {\n        this.print(specifiers.shift(), node);\n        if (specifiers.length) {\n          this.token(",");\n          this.space();\n        }\n      } else {\n        break;\n      }\n    }\n\n    if (specifiers.length) {\n      this.token("{");\n      this.space();\n      this.printList(specifiers, node);\n      this.space();\n      this.token("}");\n    }\n\n    this.space();\n    this.word("from");\n    this.space();\n  }\n\n  this.print(node.source, node);\n  this.semicolon();\n}\n\nfunction ImportNamespaceSpecifier(node) {\n  this.token("*");\n  this.space();\n  this.word("as");\n  this.space();\n  this.print(node.local, node);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/modules.js?')},"./node_modules/babel-generator/lib/generators/statements.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ThrowStatement = exports.BreakStatement = exports.ReturnStatement = exports.ContinueStatement = exports.ForAwaitStatement = exports.ForOfStatement = exports.ForInStatement = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.WithStatement = WithStatement;\nexports.IfStatement = IfStatement;\nexports.ForStatement = ForStatement;\nexports.WhileStatement = WhileStatement;\nexports.DoWhileStatement = DoWhileStatement;\nexports.LabeledStatement = LabeledStatement;\nexports.TryStatement = TryStatement;\nexports.CatchClause = CatchClause;\nexports.SwitchStatement = SwitchStatement;\nexports.SwitchCase = SwitchCase;\nexports.DebuggerStatement = DebuggerStatement;\nexports.VariableDeclaration = VariableDeclaration;\nexports.VariableDeclarator = VariableDeclarator;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction WithStatement(node) {\n  this.word("with");\n  this.space();\n  this.token("(");\n  this.print(node.object, node);\n  this.token(")");\n  this.printBlock(node);\n}\n\nfunction IfStatement(node) {\n  this.word("if");\n  this.space();\n  this.token("(");\n  this.print(node.test, node);\n  this.token(")");\n  this.space();\n\n  var needsBlock = node.alternate && t.isIfStatement(getLastStatement(node.consequent));\n  if (needsBlock) {\n    this.token("{");\n    this.newline();\n    this.indent();\n  }\n\n  this.printAndIndentOnComments(node.consequent, node);\n\n  if (needsBlock) {\n    this.dedent();\n    this.newline();\n    this.token("}");\n  }\n\n  if (node.alternate) {\n    if (this.endsWith("}")) this.space();\n    this.word("else");\n    this.space();\n    this.printAndIndentOnComments(node.alternate, node);\n  }\n}\n\nfunction getLastStatement(statement) {\n  if (!t.isStatement(statement.body)) return statement;\n  return getLastStatement(statement.body);\n}\n\nfunction ForStatement(node) {\n  this.word("for");\n  this.space();\n  this.token("(");\n\n  this.inForStatementInitCounter++;\n  this.print(node.init, node);\n  this.inForStatementInitCounter--;\n  this.token(";");\n\n  if (node.test) {\n    this.space();\n    this.print(node.test, node);\n  }\n  this.token(";");\n\n  if (node.update) {\n    this.space();\n    this.print(node.update, node);\n  }\n\n  this.token(")");\n  this.printBlock(node);\n}\n\nfunction WhileStatement(node) {\n  this.word("while");\n  this.space();\n  this.token("(");\n  this.print(node.test, node);\n  this.token(")");\n  this.printBlock(node);\n}\n\nvar buildForXStatement = function buildForXStatement(op) {\n  return function (node) {\n    this.word("for");\n    this.space();\n    if (op === "await") {\n      this.word("await");\n      this.space();\n    }\n    this.token("(");\n\n    this.print(node.left, node);\n    this.space();\n    this.word(op === "await" ? "of" : op);\n    this.space();\n    this.print(node.right, node);\n    this.token(")");\n    this.printBlock(node);\n  };\n};\n\nvar ForInStatement = exports.ForInStatement = buildForXStatement("in");\nvar ForOfStatement = exports.ForOfStatement = buildForXStatement("of");\nvar ForAwaitStatement = exports.ForAwaitStatement = buildForXStatement("await");\n\nfunction DoWhileStatement(node) {\n  this.word("do");\n  this.space();\n  this.print(node.body, node);\n  this.space();\n  this.word("while");\n  this.space();\n  this.token("(");\n  this.print(node.test, node);\n  this.token(")");\n  this.semicolon();\n}\n\nfunction buildLabelStatement(prefix) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "label";\n\n  return function (node) {\n    this.word(prefix);\n\n    var label = node[key];\n    if (label) {\n      this.space();\n\n      var terminatorState = this.startTerminatorless();\n      this.print(label, node);\n      this.endTerminatorless(terminatorState);\n    }\n\n    this.semicolon();\n  };\n}\n\nvar ContinueStatement = exports.ContinueStatement = buildLabelStatement("continue");\nvar ReturnStatement = exports.ReturnStatement = buildLabelStatement("return", "argument");\nvar BreakStatement = exports.BreakStatement = buildLabelStatement("break");\nvar ThrowStatement = exports.ThrowStatement = buildLabelStatement("throw", "argument");\n\nfunction LabeledStatement(node) {\n  this.print(node.label, node);\n  this.token(":");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction TryStatement(node) {\n  this.word("try");\n  this.space();\n  this.print(node.block, node);\n  this.space();\n\n  if (node.handlers) {\n    this.print(node.handlers[0], node);\n  } else {\n    this.print(node.handler, node);\n  }\n\n  if (node.finalizer) {\n    this.space();\n    this.word("finally");\n    this.space();\n    this.print(node.finalizer, node);\n  }\n}\n\nfunction CatchClause(node) {\n  this.word("catch");\n  this.space();\n  this.token("(");\n  this.print(node.param, node);\n  this.token(")");\n  this.space();\n  this.print(node.body, node);\n}\n\nfunction SwitchStatement(node) {\n  this.word("switch");\n  this.space();\n  this.token("(");\n  this.print(node.discriminant, node);\n  this.token(")");\n  this.space();\n  this.token("{");\n\n  this.printSequence(node.cases, node, {\n    indent: true,\n    addNewlines: function addNewlines(leading, cas) {\n      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;\n    }\n  });\n\n  this.token("}");\n}\n\nfunction SwitchCase(node) {\n  if (node.test) {\n    this.word("case");\n    this.space();\n    this.print(node.test, node);\n    this.token(":");\n  } else {\n    this.word("default");\n    this.token(":");\n  }\n\n  if (node.consequent.length) {\n    this.newline();\n    this.printSequence(node.consequent, node, { indent: true });\n  }\n}\n\nfunction DebuggerStatement() {\n  this.word("debugger");\n  this.semicolon();\n}\n\nfunction variableDeclarationIdent() {\n  this.token(",");\n  this.newline();\n  if (this.endsWith("\\n")) for (var i = 0; i < 4; i++) {\n    this.space(true);\n  }\n}\n\nfunction constDeclarationIdent() {\n  this.token(",");\n  this.newline();\n  if (this.endsWith("\\n")) for (var i = 0; i < 6; i++) {\n    this.space(true);\n  }\n}\n\nfunction VariableDeclaration(node, parent) {\n  this.word(node.kind);\n  this.space();\n\n  var hasInits = false;\n\n  if (!t.isFor(parent)) {\n    for (var _iterator = node.declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var declar = _ref;\n\n      if (declar.init) {\n        hasInits = true;\n      }\n    }\n  }\n\n  var separator = void 0;\n  if (hasInits) {\n    separator = node.kind === "const" ? constDeclarationIdent : variableDeclarationIdent;\n  }\n\n  this.printList(node.declarations, node, { separator: separator });\n\n  if (t.isFor(parent)) {\n    if (parent.left === node || parent.init === node) return;\n  }\n\n  this.semicolon();\n}\n\nfunction VariableDeclarator(node) {\n  this.print(node.id, node);\n  this.print(node.id.typeAnnotation, node);\n  if (node.init) {\n    this.space();\n    this.token("=");\n    this.space();\n    this.print(node.init, node);\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/statements.js?')},"./node_modules/babel-generator/lib/generators/template-literals.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateElement = TemplateElement;\nexports.TemplateLiteral = TemplateLiteral;\nfunction TaggedTemplateExpression(node) {\n  this.print(node.tag, node);\n  this.print(node.quasi, node);\n}\n\nfunction TemplateElement(node, parent) {\n  var isFirst = parent.quasis[0] === node;\n  var isLast = parent.quasis[parent.quasis.length - 1] === node;\n\n  var value = (isFirst ? "`" : "}") + node.value.raw + (isLast ? "`" : "${");\n\n  this.token(value);\n}\n\nfunction TemplateLiteral(node) {\n  var quasis = node.quasis;\n\n  for (var i = 0; i < quasis.length; i++) {\n    this.print(quasis[i], node);\n\n    if (i + 1 < quasis.length) {\n      this.print(node.expressions[i], node);\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/template-literals.js?')},"./node_modules/babel-generator/lib/generators/types.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ArrayPattern = exports.ObjectPattern = exports.RestProperty = exports.SpreadProperty = exports.SpreadElement = undefined;\nexports.Identifier = Identifier;\nexports.RestElement = RestElement;\nexports.ObjectExpression = ObjectExpression;\nexports.ObjectMethod = ObjectMethod;\nexports.ObjectProperty = ObjectProperty;\nexports.ArrayExpression = ArrayExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.StringLiteral = StringLiteral;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _jsesc = __webpack_require__("./node_modules/babel-generator/node_modules/jsesc/jsesc.js");\n\nvar _jsesc2 = _interopRequireDefault(_jsesc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction Identifier(node) {\n  if (node.variance) {\n    if (node.variance === "plus") {\n      this.token("+");\n    } else if (node.variance === "minus") {\n      this.token("-");\n    }\n  }\n\n  this.word(node.name);\n}\n\nfunction RestElement(node) {\n  this.token("...");\n  this.print(node.argument, node);\n}\n\nexports.SpreadElement = RestElement;\nexports.SpreadProperty = RestElement;\nexports.RestProperty = RestElement;\nfunction ObjectExpression(node) {\n  var props = node.properties;\n\n  this.token("{");\n  this.printInnerComments(node);\n\n  if (props.length) {\n    this.space();\n    this.printList(props, node, { indent: true, statement: true });\n    this.space();\n  }\n\n  this.token("}");\n}\n\nexports.ObjectPattern = ObjectExpression;\nfunction ObjectMethod(node) {\n  this.printJoin(node.decorators, node);\n  this._method(node);\n}\n\nfunction ObjectProperty(node) {\n  this.printJoin(node.decorators, node);\n\n  if (node.computed) {\n    this.token("[");\n    this.print(node.key, node);\n    this.token("]");\n  } else {\n    if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {\n      this.print(node.value, node);\n      return;\n    }\n\n    this.print(node.key, node);\n\n    if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {\n      return;\n    }\n  }\n\n  this.token(":");\n  this.space();\n  this.print(node.value, node);\n}\n\nfunction ArrayExpression(node) {\n  var elems = node.elements;\n  var len = elems.length;\n\n  this.token("[");\n  this.printInnerComments(node);\n\n  for (var i = 0; i < elems.length; i++) {\n    var elem = elems[i];\n    if (elem) {\n      if (i > 0) this.space();\n      this.print(elem, node);\n      if (i < len - 1) this.token(",");\n    } else {\n      this.token(",");\n    }\n  }\n\n  this.token("]");\n}\n\nexports.ArrayPattern = ArrayExpression;\nfunction RegExpLiteral(node) {\n  this.word("/" + node.pattern + "/" + node.flags);\n}\n\nfunction BooleanLiteral(node) {\n  this.word(node.value ? "true" : "false");\n}\n\nfunction NullLiteral() {\n  this.word("null");\n}\n\nfunction NumericLiteral(node) {\n  var raw = this.getPossibleRaw(node);\n  var value = node.value + "";\n  if (raw == null) {\n    this.number(value);\n  } else if (this.format.minified) {\n    this.number(raw.length < value.length ? raw : value);\n  } else {\n    this.number(raw);\n  }\n}\n\nfunction StringLiteral(node, parent) {\n  var raw = this.getPossibleRaw(node);\n  if (!this.format.minified && raw != null) {\n    this.token(raw);\n    return;\n  }\n\n  var opts = {\n    quotes: t.isJSX(parent) ? "double" : this.format.quotes,\n    wrap: true\n  };\n  if (this.format.jsonCompatibleStrings) {\n    opts.json = true;\n  }\n  var val = (0, _jsesc2.default)(node.value, opts);\n\n  return this.token(val);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/generators/types.js?')},"./node_modules/babel-generator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.CodeGenerator = undefined;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.default = function (ast, opts, code) {\n  var gen = new Generator(ast, opts, code);\n  return gen.generate();\n};\n\nvar _detectIndent = __webpack_require__("./node_modules/babel-generator/node_modules/detect-indent/index.js");\n\nvar _detectIndent2 = _interopRequireDefault(_detectIndent);\n\nvar _sourceMap = __webpack_require__("./node_modules/babel-generator/lib/source-map.js");\n\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _printer = __webpack_require__("./node_modules/babel-generator/lib/printer.js");\n\nvar _printer2 = _interopRequireDefault(_printer);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Generator = function (_Printer) {\n  (0, _inherits3.default)(Generator, _Printer);\n\n  function Generator(ast) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var code = arguments[2];\n    (0, _classCallCheck3.default)(this, Generator);\n\n    var tokens = ast.tokens || [];\n    var format = normalizeOptions(code, opts, tokens);\n    var map = opts.sourceMaps ? new _sourceMap2.default(opts, code) : null;\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Printer.call(this, format, map, tokens));\n\n    _this.ast = ast;\n    return _this;\n  }\n\n  Generator.prototype.generate = function generate() {\n    return _Printer.prototype.generate.call(this, this.ast);\n  };\n\n  return Generator;\n}(_printer2.default);\n\nfunction normalizeOptions(code, opts, tokens) {\n  var style = "  ";\n  if (code && typeof code === "string") {\n    var indent = (0, _detectIndent2.default)(code).indent;\n    if (indent && indent !== " ") style = indent;\n  }\n\n  var format = {\n    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,\n    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,\n    shouldPrintComment: opts.shouldPrintComment,\n    retainLines: opts.retainLines,\n    retainFunctionParens: opts.retainFunctionParens,\n    comments: opts.comments == null || opts.comments,\n    compact: opts.compact,\n    minified: opts.minified,\n    concise: opts.concise,\n    quotes: opts.quotes || findCommonStringDelimiter(code, tokens),\n    jsonCompatibleStrings: opts.jsonCompatibleStrings,\n    indent: {\n      adjustMultilineComment: true,\n      style: style,\n      base: 0\n    },\n    flowCommaSeparator: opts.flowCommaSeparator\n  };\n\n  if (format.minified) {\n    format.compact = true;\n\n    format.shouldPrintComment = format.shouldPrintComment || function () {\n      return format.comments;\n    };\n  } else {\n    format.shouldPrintComment = format.shouldPrintComment || function (value) {\n      return format.comments || value.indexOf("@license") >= 0 || value.indexOf("@preserve") >= 0;\n    };\n  }\n\n  if (format.compact === "auto") {\n    format.compact = code.length > 500000;\n\n    if (format.compact) {\n      console.error("[BABEL] " + messages.get("codeGeneratorDeopt", opts.filename, "500KB"));\n    }\n  }\n\n  if (format.compact) {\n    format.indent.adjustMultilineComment = false;\n  }\n\n  return format;\n}\n\nfunction findCommonStringDelimiter(code, tokens) {\n  var DEFAULT_STRING_DELIMITER = "double";\n  if (!code) {\n    return DEFAULT_STRING_DELIMITER;\n  }\n\n  var occurrences = {\n    single: 0,\n    double: 0\n  };\n\n  var checked = 0;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n    if (token.type.label !== "string") continue;\n\n    var raw = code.slice(token.start, token.end);\n    if (raw[0] === "\'") {\n      occurrences.single++;\n    } else {\n      occurrences.double++;\n    }\n\n    checked++;\n    if (checked >= 3) break;\n  }\n  if (occurrences.single > occurrences.double) {\n    return "single";\n  } else {\n    return "double";\n  }\n}\n\nvar CodeGenerator = exports.CodeGenerator = function () {\n  function CodeGenerator(ast, opts, code) {\n    (0, _classCallCheck3.default)(this, CodeGenerator);\n\n    this._generator = new Generator(ast, opts, code);\n  }\n\n  CodeGenerator.prototype.generate = function generate() {\n    return this._generator.generate();\n  };\n\n  return CodeGenerator;\n}();\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/index.js?')},"./node_modules/babel-generator/lib/node/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.needsWhitespace = needsWhitespace;\nexports.needsWhitespaceBefore = needsWhitespaceBefore;\nexports.needsWhitespaceAfter = needsWhitespaceAfter;\nexports.needsParens = needsParens;\n\nvar _whitespace = __webpack_require__("./node_modules/babel-generator/lib/node/whitespace.js");\n\nvar _whitespace2 = _interopRequireDefault(_whitespace);\n\nvar _parentheses = __webpack_require__("./node_modules/babel-generator/lib/node/parentheses.js");\n\nvar parens = _interopRequireWildcard(_parentheses);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction expandAliases(obj) {\n  var newObj = {};\n\n  function add(type, func) {\n    var fn = newObj[type];\n    newObj[type] = fn ? function (node, parent, stack) {\n      var result = fn(node, parent, stack);\n\n      return result == null ? func(node, parent, stack) : result;\n    } : func;\n  }\n\n  for (var _iterator = (0, _keys2.default)(obj), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var type = _ref;\n\n\n    var aliases = t.FLIPPED_ALIAS_KEYS[type];\n    if (aliases) {\n      for (var _iterator2 = aliases, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var alias = _ref2;\n\n        add(alias, obj[type]);\n      }\n    } else {\n      add(type, obj[type]);\n    }\n  }\n\n  return newObj;\n}\n\nvar expandedParens = expandAliases(parens);\nvar expandedWhitespaceNodes = expandAliases(_whitespace2.default.nodes);\nvar expandedWhitespaceList = expandAliases(_whitespace2.default.list);\n\nfunction find(obj, node, parent, printStack) {\n  var fn = obj[node.type];\n  return fn ? fn(node, parent, printStack) : null;\n}\n\nfunction isOrHasCallExpression(node) {\n  if (t.isCallExpression(node)) {\n    return true;\n  }\n\n  if (t.isMemberExpression(node)) {\n    return isOrHasCallExpression(node.object) || !node.computed && isOrHasCallExpression(node.property);\n  } else {\n    return false;\n  }\n}\n\nfunction needsWhitespace(node, parent, type) {\n  if (!node) return 0;\n\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  var linesInfo = find(expandedWhitespaceNodes, node, parent);\n\n  if (!linesInfo) {\n    var items = find(expandedWhitespaceList, node, parent);\n    if (items) {\n      for (var i = 0; i < items.length; i++) {\n        linesInfo = needsWhitespace(items[i], node, type);\n        if (linesInfo) break;\n      }\n    }\n  }\n\n  return linesInfo && linesInfo[type] || 0;\n}\n\nfunction needsWhitespaceBefore(node, parent) {\n  return needsWhitespace(node, parent, "before");\n}\n\nfunction needsWhitespaceAfter(node, parent) {\n  return needsWhitespace(node, parent, "after");\n}\n\nfunction needsParens(node, parent, printStack) {\n  if (!parent) return false;\n\n  if (t.isNewExpression(parent) && parent.callee === node) {\n    if (isOrHasCallExpression(node)) return true;\n  }\n\n  return find(expandedParens, node, parent, printStack);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/node/index.js?')},"./node_modules/babel-generator/lib/node/parentheses.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.AwaitExpression = exports.FunctionTypeAnnotation = undefined;\nexports.NullableTypeAnnotation = NullableTypeAnnotation;\nexports.UpdateExpression = UpdateExpression;\nexports.ObjectExpression = ObjectExpression;\nexports.DoExpression = DoExpression;\nexports.Binary = Binary;\nexports.BinaryExpression = BinaryExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.YieldExpression = YieldExpression;\nexports.ClassExpression = ClassExpression;\nexports.UnaryLike = UnaryLike;\nexports.FunctionExpression = FunctionExpression;\nexports.ArrowFunctionExpression = ArrowFunctionExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.AssignmentExpression = AssignmentExpression;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar PRECEDENCE = {\n  "||": 0,\n  "&&": 1,\n  "|": 2,\n  "^": 3,\n  "&": 4,\n  "==": 5,\n  "===": 5,\n  "!=": 5,\n  "!==": 5,\n  "<": 6,\n  ">": 6,\n  "<=": 6,\n  ">=": 6,\n  in: 6,\n  instanceof: 6,\n  ">>": 7,\n  "<<": 7,\n  ">>>": 7,\n  "+": 8,\n  "-": 8,\n  "*": 9,\n  "/": 9,\n  "%": 9,\n  "**": 10\n};\n\nfunction NullableTypeAnnotation(node, parent) {\n  return t.isArrayTypeAnnotation(parent);\n}\n\nexports.FunctionTypeAnnotation = NullableTypeAnnotation;\nfunction UpdateExpression(node, parent) {\n  return t.isMemberExpression(parent) && parent.object === node;\n}\n\nfunction ObjectExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerArrow: true });\n}\n\nfunction DoExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack);\n}\n\nfunction Binary(node, parent) {\n  if ((t.isCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isUnaryLike(parent) || t.isMemberExpression(parent) && parent.object === node || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  if (t.isBinary(parent)) {\n    var parentOp = parent.operator;\n    var parentPos = PRECEDENCE[parentOp];\n\n    var nodeOp = node.operator;\n    var nodePos = PRECEDENCE[nodeOp];\n\n    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction BinaryExpression(node, parent) {\n  return node.operator === "in" && (t.isVariableDeclarator(parent) || t.isFor(parent));\n}\n\nfunction SequenceExpression(node, parent) {\n\n  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction YieldExpression(node, parent) {\n  return t.isBinary(parent) || t.isUnaryLike(parent) || t.isCallExpression(parent) || t.isMemberExpression(parent) || t.isNewExpression(parent) || t.isConditionalExpression(parent) && node === parent.test;\n}\n\nexports.AwaitExpression = YieldExpression;\nfunction ClassExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction UnaryLike(node, parent) {\n  return t.isMemberExpression(parent, { object: node }) || t.isCallExpression(parent, { callee: node }) || t.isNewExpression(parent, { callee: node });\n}\n\nfunction FunctionExpression(node, parent, printStack) {\n  return isFirstInStatement(printStack, { considerDefaultExports: true });\n}\n\nfunction ArrowFunctionExpression(node, parent) {\n  if (t.isExportDeclaration(parent) || t.isBinaryExpression(parent) || t.isLogicalExpression(parent) || t.isUnaryExpression(parent) || t.isTaggedTemplateExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction ConditionalExpression(node, parent) {\n  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, { test: node }) || t.isAwaitExpression(parent)) {\n    return true;\n  }\n\n  return UnaryLike(node, parent);\n}\n\nfunction AssignmentExpression(node) {\n  if (t.isObjectPattern(node.left)) {\n    return true;\n  } else {\n    return ConditionalExpression.apply(undefined, arguments);\n  }\n}\n\nfunction isFirstInStatement(printStack) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$considerArrow = _ref.considerArrow,\n      considerArrow = _ref$considerArrow === undefined ? false : _ref$considerArrow,\n      _ref$considerDefaultE = _ref.considerDefaultExports,\n      considerDefaultExports = _ref$considerDefaultE === undefined ? false : _ref$considerDefaultE;\n\n  var i = printStack.length - 1;\n  var node = printStack[i];\n  i--;\n  var parent = printStack[i];\n  while (i > 0) {\n    if (t.isExpressionStatement(parent, { expression: node }) || t.isTaggedTemplateExpression(parent) || considerDefaultExports && t.isExportDefaultDeclaration(parent, { declaration: node }) || considerArrow && t.isArrowFunctionExpression(parent, { body: node })) {\n      return true;\n    }\n\n    if (t.isCallExpression(parent, { callee: node }) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isMemberExpression(parent, { object: node }) || t.isConditional(parent, { test: node }) || t.isBinary(parent, { left: node }) || t.isAssignmentExpression(parent, { left: node })) {\n      node = parent;\n      i--;\n      parent = printStack[i];\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/node/parentheses.js?')},"./node_modules/babel-generator/lib/node/whitespace.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _map = __webpack_require__("./node_modules/lodash/map.js");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction crawl(node) {\n  var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (t.isMemberExpression(node)) {\n    crawl(node.object, state);\n    if (node.computed) crawl(node.property, state);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    crawl(node.left, state);\n    crawl(node.right, state);\n  } else if (t.isCallExpression(node)) {\n    state.hasCall = true;\n    crawl(node.callee, state);\n  } else if (t.isFunction(node)) {\n    state.hasFunction = true;\n  } else if (t.isIdentifier(node)) {\n    state.hasHelper = state.hasHelper || isHelper(node.callee);\n  }\n\n  return state;\n}\n\nfunction isHelper(node) {\n  if (t.isMemberExpression(node)) {\n    return isHelper(node.object) || isHelper(node.property);\n  } else if (t.isIdentifier(node)) {\n    return node.name === "require" || node.name[0] === "_";\n  } else if (t.isCallExpression(node)) {\n    return isHelper(node.callee);\n  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {\n    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);\n  } else {\n    return false;\n  }\n}\n\nfunction isType(node) {\n  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);\n}\n\nexports.nodes = {\n  AssignmentExpression: function AssignmentExpression(node) {\n    var state = crawl(node.right);\n    if (state.hasCall && state.hasHelper || state.hasFunction) {\n      return {\n        before: state.hasFunction,\n        after: true\n      };\n    }\n  },\n  SwitchCase: function SwitchCase(node, parent) {\n    return {\n      before: node.consequent.length || parent.cases[0] === node\n    };\n  },\n  LogicalExpression: function LogicalExpression(node) {\n    if (t.isFunction(node.left) || t.isFunction(node.right)) {\n      return {\n        after: true\n      };\n    }\n  },\n  Literal: function Literal(node) {\n    if (node.value === "use strict") {\n      return {\n        after: true\n      };\n    }\n  },\n  CallExpression: function CallExpression(node) {\n    if (t.isFunction(node.callee) || isHelper(node)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  },\n  VariableDeclaration: function VariableDeclaration(node) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n\n      var enabled = isHelper(declar.id) && !isType(declar.init);\n      if (!enabled) {\n        var state = crawl(declar.init);\n        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;\n      }\n\n      if (enabled) {\n        return {\n          before: true,\n          after: true\n        };\n      }\n    }\n  },\n  IfStatement: function IfStatement(node) {\n    if (t.isBlockStatement(node.consequent)) {\n      return {\n        before: true,\n        after: true\n      };\n    }\n  }\n};\n\nexports.nodes.ObjectProperty = exports.nodes.ObjectTypeProperty = exports.nodes.ObjectMethod = exports.nodes.SpreadProperty = function (node, parent) {\n  if (parent.properties[0] === node) {\n    return {\n      before: true\n    };\n  }\n};\n\nexports.list = {\n  VariableDeclaration: function VariableDeclaration(node) {\n    return (0, _map2.default)(node.declarations, "init");\n  },\n  ArrayExpression: function ArrayExpression(node) {\n    return node.elements;\n  },\n  ObjectExpression: function ObjectExpression(node) {\n    return node.properties;\n  }\n};\n\n[["Function", true], ["Class", true], ["Loop", true], ["LabeledStatement", true], ["SwitchStatement", true], ["TryStatement", true]].forEach(function (_ref) {\n  var type = _ref[0],\n      amounts = _ref[1];\n\n  if (typeof amounts === "boolean") {\n    amounts = { after: amounts, before: amounts };\n  }\n  [type].concat(t.FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {\n    exports.nodes[type] = function () {\n      return amounts;\n    };\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/node/whitespace.js?')},"./node_modules/babel-generator/lib/printer.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__("./node_modules/babel-runtime/core-js/object/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _weakSet = __webpack_require__("./node_modules/babel-runtime/core-js/weak-set.js");\n\nvar _weakSet2 = _interopRequireDefault(_weakSet);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _find = __webpack_require__("./node_modules/lodash/find.js");\n\nvar _find2 = _interopRequireDefault(_find);\n\nvar _findLast = __webpack_require__("./node_modules/lodash/findLast.js");\n\nvar _findLast2 = _interopRequireDefault(_findLast);\n\nvar _isInteger = __webpack_require__("./node_modules/lodash/isInteger.js");\n\nvar _isInteger2 = _interopRequireDefault(_isInteger);\n\nvar _repeat = __webpack_require__("./node_modules/lodash/repeat.js");\n\nvar _repeat2 = _interopRequireDefault(_repeat);\n\nvar _buffer = __webpack_require__("./node_modules/babel-generator/lib/buffer.js");\n\nvar _buffer2 = _interopRequireDefault(_buffer);\n\nvar _node = __webpack_require__("./node_modules/babel-generator/lib/node/index.js");\n\nvar n = _interopRequireWildcard(_node);\n\nvar _whitespace = __webpack_require__("./node_modules/babel-generator/lib/whitespace.js");\n\nvar _whitespace2 = _interopRequireDefault(_whitespace);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SCIENTIFIC_NOTATION = /e/i;\nvar ZERO_DECIMAL_INTEGER = /\\.0+$/;\nvar NON_DECIMAL_LITERAL = /^0[box]/;\n\nvar Printer = function () {\n  function Printer(format, map, tokens) {\n    (0, _classCallCheck3.default)(this, Printer);\n    this.inForStatementInitCounter = 0;\n    this._printStack = [];\n    this._indent = 0;\n    this._insideAux = false;\n    this._printedCommentStarts = {};\n    this._parenPushNewlineState = null;\n    this._printAuxAfterOnNextUserNode = false;\n    this._printedComments = new _weakSet2.default();\n    this._endsWithInteger = false;\n    this._endsWithWord = false;\n\n    this.format = format || {};\n    this._buf = new _buffer2.default(map);\n    this._whitespace = tokens.length > 0 ? new _whitespace2.default(tokens) : null;\n  }\n\n  Printer.prototype.generate = function generate(ast) {\n    this.print(ast);\n    this._maybeAddAuxComment();\n\n    return this._buf.get();\n  };\n\n  Printer.prototype.indent = function indent() {\n    if (this.format.compact || this.format.concise) return;\n\n    this._indent++;\n  };\n\n  Printer.prototype.dedent = function dedent() {\n    if (this.format.compact || this.format.concise) return;\n\n    this._indent--;\n  };\n\n  Printer.prototype.semicolon = function semicolon() {\n    var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    this._maybeAddAuxComment();\n    this._append(";", !force);\n  };\n\n  Printer.prototype.rightBrace = function rightBrace() {\n    if (this.format.minified) {\n      this._buf.removeLastSemicolon();\n    }\n    this.token("}");\n  };\n\n  Printer.prototype.space = function space() {\n    var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (this.format.compact) return;\n\n    if (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\\n") || force) {\n      this._space();\n    }\n  };\n\n  Printer.prototype.word = function word(str) {\n    if (this._endsWithWord) this._space();\n\n    this._maybeAddAuxComment();\n    this._append(str);\n\n    this._endsWithWord = true;\n  };\n\n  Printer.prototype.number = function number(str) {\n    this.word(str);\n\n    this._endsWithInteger = (0, _isInteger2.default)(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== ".";\n  };\n\n  Printer.prototype.token = function token(str) {\n    if (str === "--" && this.endsWith("!") || str[0] === "+" && this.endsWith("+") || str[0] === "-" && this.endsWith("-") || str[0] === "." && this._endsWithInteger) {\n      this._space();\n    }\n\n    this._maybeAddAuxComment();\n    this._append(str);\n  };\n\n  Printer.prototype.newline = function newline(i) {\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    if (this.endsWith("\\n\\n")) return;\n\n    if (typeof i !== "number") i = 1;\n\n    i = Math.min(2, i);\n    if (this.endsWith("{\\n") || this.endsWith(":\\n")) i--;\n    if (i <= 0) return;\n\n    for (var j = 0; j < i; j++) {\n      this._newline();\n    }\n  };\n\n  Printer.prototype.endsWith = function endsWith(str) {\n    return this._buf.endsWith(str);\n  };\n\n  Printer.prototype.removeTrailingNewline = function removeTrailingNewline() {\n    this._buf.removeTrailingNewline();\n  };\n\n  Printer.prototype.source = function source(prop, loc) {\n    this._catchUp(prop, loc);\n\n    this._buf.source(prop, loc);\n  };\n\n  Printer.prototype.withSource = function withSource(prop, loc, cb) {\n    this._catchUp(prop, loc);\n\n    this._buf.withSource(prop, loc, cb);\n  };\n\n  Printer.prototype._space = function _space() {\n    this._append(" ", true);\n  };\n\n  Printer.prototype._newline = function _newline() {\n    this._append("\\n", true);\n  };\n\n  Printer.prototype._append = function _append(str) {\n    var queue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    this._maybeAddParen(str);\n    this._maybeIndent(str);\n\n    if (queue) this._buf.queue(str);else this._buf.append(str);\n\n    this._endsWithWord = false;\n    this._endsWithInteger = false;\n  };\n\n  Printer.prototype._maybeIndent = function _maybeIndent(str) {\n    if (this._indent && this.endsWith("\\n") && str[0] !== "\\n") {\n      this._buf.queue(this._getIndent());\n    }\n  };\n\n  Printer.prototype._maybeAddParen = function _maybeAddParen(str) {\n    var parenPushNewlineState = this._parenPushNewlineState;\n    if (!parenPushNewlineState) return;\n    this._parenPushNewlineState = null;\n\n    var i = void 0;\n    for (i = 0; i < str.length && str[i] === " "; i++) {\n      continue;\n    }if (i === str.length) return;\n\n    var cha = str[i];\n    if (cha === "\\n" || cha === "/") {\n      this.token("(");\n      this.indent();\n      parenPushNewlineState.printed = true;\n    }\n  };\n\n  Printer.prototype._catchUp = function _catchUp(prop, loc) {\n    if (!this.format.retainLines) return;\n\n    var pos = loc ? loc[prop] : null;\n    if (pos && pos.line !== null) {\n      var count = pos.line - this._buf.getCurrentLine();\n\n      for (var i = 0; i < count; i++) {\n        this._newline();\n      }\n    }\n  };\n\n  Printer.prototype._getIndent = function _getIndent() {\n    return (0, _repeat2.default)(this.format.indent.style, this._indent);\n  };\n\n  Printer.prototype.startTerminatorless = function startTerminatorless() {\n    return this._parenPushNewlineState = {\n      printed: false\n    };\n  };\n\n  Printer.prototype.endTerminatorless = function endTerminatorless(state) {\n    if (state.printed) {\n      this.dedent();\n      this.newline();\n      this.token(")");\n    }\n  };\n\n  Printer.prototype.print = function print(node, parent) {\n    var _this = this;\n\n    if (!node) return;\n\n    var oldConcise = this.format.concise;\n    if (node._compact) {\n      this.format.concise = true;\n    }\n\n    var printMethod = this[node.type];\n    if (!printMethod) {\n      throw new ReferenceError("unknown node of type " + (0, _stringify2.default)(node.type) + " with constructor " + (0, _stringify2.default)(node && node.constructor.name));\n    }\n\n    this._printStack.push(node);\n\n    var oldInAux = this._insideAux;\n    this._insideAux = !node.loc;\n    this._maybeAddAuxComment(this._insideAux && !oldInAux);\n\n    var needsParens = n.needsParens(node, parent, this._printStack);\n    if (this.format.retainFunctionParens && node.type === "FunctionExpression" && node.extra && node.extra.parenthesized) {\n      needsParens = true;\n    }\n    if (needsParens) this.token("(");\n\n    this._printLeadingComments(node, parent);\n\n    var loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;\n    this.withSource("start", loc, function () {\n      _this[node.type](node, parent);\n    });\n\n    this._printTrailingComments(node, parent);\n\n    if (needsParens) this.token(")");\n\n    this._printStack.pop();\n\n    this.format.concise = oldConcise;\n    this._insideAux = oldInAux;\n  };\n\n  Printer.prototype._maybeAddAuxComment = function _maybeAddAuxComment(enteredPositionlessNode) {\n    if (enteredPositionlessNode) this._printAuxBeforeComment();\n    if (!this._insideAux) this._printAuxAfterComment();\n  };\n\n  Printer.prototype._printAuxBeforeComment = function _printAuxBeforeComment() {\n    if (this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = true;\n\n    var comment = this.format.auxiliaryCommentBefore;\n    if (comment) {\n      this._printComment({\n        type: "CommentBlock",\n        value: comment\n      });\n    }\n  };\n\n  Printer.prototype._printAuxAfterComment = function _printAuxAfterComment() {\n    if (!this._printAuxAfterOnNextUserNode) return;\n    this._printAuxAfterOnNextUserNode = false;\n\n    var comment = this.format.auxiliaryCommentAfter;\n    if (comment) {\n      this._printComment({\n        type: "CommentBlock",\n        value: comment\n      });\n    }\n  };\n\n  Printer.prototype.getPossibleRaw = function getPossibleRaw(node) {\n    var extra = node.extra;\n    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {\n      return extra.raw;\n    }\n  };\n\n  Printer.prototype.printJoin = function printJoin(nodes, parent) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!nodes || !nodes.length) return;\n\n    if (opts.indent) this.indent();\n\n    var newlineOpts = {\n      addNewlines: opts.addNewlines\n    };\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      if (!node) continue;\n\n      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);\n\n      this.print(node, parent);\n\n      if (opts.iterator) {\n        opts.iterator(node, i);\n      }\n\n      if (opts.separator && i < nodes.length - 1) {\n        opts.separator.call(this);\n      }\n\n      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);\n    }\n\n    if (opts.indent) this.dedent();\n  };\n\n  Printer.prototype.printAndIndentOnComments = function printAndIndentOnComments(node, parent) {\n    var indent = !!node.leadingComments;\n    if (indent) this.indent();\n    this.print(node, parent);\n    if (indent) this.dedent();\n  };\n\n  Printer.prototype.printBlock = function printBlock(parent) {\n    var node = parent.body;\n\n    if (!t.isEmptyStatement(node)) {\n      this.space();\n    }\n\n    this.print(node, parent);\n  };\n\n  Printer.prototype._printTrailingComments = function _printTrailingComments(node, parent) {\n    this._printComments(this._getComments(false, node, parent));\n  };\n\n  Printer.prototype._printLeadingComments = function _printLeadingComments(node, parent) {\n    this._printComments(this._getComments(true, node, parent));\n  };\n\n  Printer.prototype.printInnerComments = function printInnerComments(node) {\n    var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!node.innerComments) return;\n    if (indent) this.indent();\n    this._printComments(node.innerComments);\n    if (indent) this.dedent();\n  };\n\n  Printer.prototype.printSequence = function printSequence(nodes, parent) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    opts.statement = true;\n    return this.printJoin(nodes, parent, opts);\n  };\n\n  Printer.prototype.printList = function printList(items, parent) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (opts.separator == null) {\n      opts.separator = commaSeparator;\n    }\n\n    return this.printJoin(items, parent, opts);\n  };\n\n  Printer.prototype._printNewline = function _printNewline(leading, node, parent, opts) {\n    var _this2 = this;\n\n    if (this.format.retainLines || this.format.compact) return;\n\n    if (this.format.concise) {\n      this.space();\n      return;\n    }\n\n    var lines = 0;\n\n    if (node.start != null && !node._ignoreUserWhitespace && this._whitespace) {\n      if (leading) {\n        var _comments = node.leadingComments;\n        var _comment = _comments && (0, _find2.default)(_comments, function (comment) {\n          return !!comment.loc && _this2.format.shouldPrintComment(comment.value);\n        });\n\n        lines = this._whitespace.getNewlinesBefore(_comment || node);\n      } else {\n        var _comments2 = node.trailingComments;\n        var _comment2 = _comments2 && (0, _findLast2.default)(_comments2, function (comment) {\n          return !!comment.loc && _this2.format.shouldPrintComment(comment.value);\n        });\n\n        lines = this._whitespace.getNewlinesAfter(_comment2 || node);\n      }\n    } else {\n      if (!leading) lines++;\n      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;\n\n      var needs = n.needsWhitespaceAfter;\n      if (leading) needs = n.needsWhitespaceBefore;\n      if (needs(node, parent)) lines++;\n\n      if (!this._buf.hasContent()) lines = 0;\n    }\n\n    this.newline(lines);\n  };\n\n  Printer.prototype._getComments = function _getComments(leading, node) {\n    return node && (leading ? node.leadingComments : node.trailingComments) || [];\n  };\n\n  Printer.prototype._printComment = function _printComment(comment) {\n    var _this3 = this;\n\n    if (!this.format.shouldPrintComment(comment.value)) return;\n\n    if (comment.ignore) return;\n\n    if (this._printedComments.has(comment)) return;\n    this._printedComments.add(comment);\n\n    if (comment.start != null) {\n      if (this._printedCommentStarts[comment.start]) return;\n      this._printedCommentStarts[comment.start] = true;\n    }\n\n    this.newline(this._whitespace ? this._whitespace.getNewlinesBefore(comment) : 0);\n\n    if (!this.endsWith("[") && !this.endsWith("{")) this.space();\n\n    var val = comment.type === "CommentLine" ? "//" + comment.value + "\\n" : "/*" + comment.value + "*/";\n\n    if (comment.type === "CommentBlock" && this.format.indent.adjustMultilineComment) {\n      var offset = comment.loc && comment.loc.start.column;\n      if (offset) {\n        var newlineRegex = new RegExp("\\\\n\\\\s{1," + offset + "}", "g");\n        val = val.replace(newlineRegex, "\\n");\n      }\n\n      var indentSize = Math.max(this._getIndent().length, this._buf.getCurrentColumn());\n      val = val.replace(/\\n(?!$)/g, "\\n" + (0, _repeat2.default)(" ", indentSize));\n    }\n\n    this.withSource("start", comment.loc, function () {\n      _this3._append(val);\n    });\n\n    this.newline((this._whitespace ? this._whitespace.getNewlinesAfter(comment) : 0) + (comment.type === "CommentLine" ? -1 : 0));\n  };\n\n  Printer.prototype._printComments = function _printComments(comments) {\n    if (!comments || !comments.length) return;\n\n    for (var _iterator = comments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _comment3 = _ref;\n\n      this._printComment(_comment3);\n    }\n  };\n\n  return Printer;\n}();\n\nexports.default = Printer;\n\n\nfunction commaSeparator() {\n  this.token(",");\n  this.space();\n}\n\nvar _arr = [__webpack_require__("./node_modules/babel-generator/lib/generators/template-literals.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/expressions.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/statements.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/classes.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/methods.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/modules.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/types.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/flow.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/base.js"), __webpack_require__("./node_modules/babel-generator/lib/generators/jsx.js")];\nfor (var _i2 = 0; _i2 < _arr.length; _i2++) {\n  var generator = _arr[_i2];\n  (0, _assign2.default)(Printer.prototype, generator);\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/printer.js?')},"./node_modules/babel-generator/lib/source-map.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _sourceMap = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/source-map.js");\n\nvar _sourceMap2 = _interopRequireDefault(_sourceMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SourceMap = function () {\n  function SourceMap(opts, code) {\n    (0, _classCallCheck3.default)(this, SourceMap);\n\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  SourceMap.prototype.get = function get() {\n    if (!this._cachedMap) {\n      var map = this._cachedMap = new _sourceMap2.default.SourceMapGenerator({\n        file: this._opts.sourceMapTarget,\n        sourceRoot: this._opts.sourceRoot\n      });\n\n      var code = this._code;\n      if (typeof code === "string") {\n        map.setSourceContent(this._opts.sourceFileName, code);\n      } else if ((typeof code === "undefined" ? "undefined" : (0, _typeof3.default)(code)) === "object") {\n        (0, _keys2.default)(code).forEach(function (sourceFileName) {\n          map.setSourceContent(sourceFileName, code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(map.addMapping, map);\n    }\n\n    return this._cachedMap.toJSON();\n  };\n\n  SourceMap.prototype.getRawMappings = function getRawMappings() {\n    return this._rawMappings.slice();\n  };\n\n  SourceMap.prototype.mark = function mark(generatedLine, generatedColumn, line, column, identifierName, filename) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : filename || this._opts.sourceFileName,\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  };\n\n  return SourceMap;\n}();\n\nexports.default = SourceMap;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/source-map.js?')},"./node_modules/babel-generator/lib/whitespace.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Whitespace = function () {\n  function Whitespace(tokens) {\n    (0, _classCallCheck3.default)(this, Whitespace);\n\n    this.tokens = tokens;\n    this.used = {};\n  }\n\n  Whitespace.prototype.getNewlinesBefore = function getNewlinesBefore(node) {\n    var startToken = void 0;\n    var endToken = void 0;\n    var tokens = this.tokens;\n\n    var index = this._findToken(function (token) {\n      return token.start - node.start;\n    }, 0, tokens.length);\n    if (index >= 0) {\n      while (index && node.start === tokens[index - 1].start) {\n        --index;\n      }startToken = tokens[index - 1];\n      endToken = tokens[index];\n    }\n\n    return this._getNewlinesBetween(startToken, endToken);\n  };\n\n  Whitespace.prototype.getNewlinesAfter = function getNewlinesAfter(node) {\n    var startToken = void 0;\n    var endToken = void 0;\n    var tokens = this.tokens;\n\n    var index = this._findToken(function (token) {\n      return token.end - node.end;\n    }, 0, tokens.length);\n    if (index >= 0) {\n      while (index && node.end === tokens[index - 1].end) {\n        --index;\n      }startToken = tokens[index];\n      endToken = tokens[index + 1];\n      if (endToken && endToken.type.label === ",") endToken = tokens[index + 2];\n    }\n\n    if (endToken && endToken.type.label === "eof") {\n      return 1;\n    } else {\n      return this._getNewlinesBetween(startToken, endToken);\n    }\n  };\n\n  Whitespace.prototype._getNewlinesBetween = function _getNewlinesBetween(startToken, endToken) {\n    if (!endToken || !endToken.loc) return 0;\n\n    var start = startToken ? startToken.loc.end.line : 1;\n    var end = endToken.loc.start.line;\n    var lines = 0;\n\n    for (var line = start; line < end; line++) {\n      if (typeof this.used[line] === "undefined") {\n        this.used[line] = true;\n        lines++;\n      }\n    }\n\n    return lines;\n  };\n\n  Whitespace.prototype._findToken = function _findToken(test, start, end) {\n    if (start >= end) return -1;\n    var middle = start + end >>> 1;\n    var match = test(this.tokens[middle]);\n    if (match < 0) {\n      return this._findToken(test, middle + 1, end);\n    } else if (match > 0) {\n      return this._findToken(test, start, middle);\n    } else if (match === 0) {\n      return middle;\n    }\n    return -1;\n  };\n\n  return Whitespace;\n}();\n\nexports.default = Whitespace;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-generator/lib/whitespace.js?')},"./node_modules/babel-generator/node_modules/detect-indent/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* eslint-disable guard-for-in */\n\nvar repeating = __webpack_require__(\"./node_modules/babel-generator/node_modules/repeating/index.js\");\n\n// detect either spaces or tabs but not both to properly handle tabs\n// for indentation and spaces for alignment\nvar INDENT_RE = /^(?:( )+|\\t+)/;\n\nfunction getMostUsed(indents) {\n\tvar result = 0;\n\tvar maxUsed = 0;\n\tvar maxWeight = 0;\n\n\tfor (var n in indents) {\n\t\tvar indent = indents[n];\n\t\tvar u = indent[0];\n\t\tvar w = indent[1];\n\n\t\tif (u > maxUsed || u === maxUsed && w > maxWeight) {\n\t\t\tmaxUsed = u;\n\t\t\tmaxWeight = w;\n\t\t\tresult = Number(n);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// used to see if tabs or spaces are the most used\n\tvar tabs = 0;\n\tvar spaces = 0;\n\n\t// remember the size of previous line's indentation\n\tvar prev = 0;\n\n\t// remember how many indents/unindents as occurred for a given size\n\t// and how much lines follow a given indentation\n\t//\n\t// indents = {\n\t//    3: [1, 0],\n\t//    4: [1, 5],\n\t//    5: [1, 0],\n\t//   12: [1, 0],\n\t// }\n\tvar indents = {};\n\n\t// pointer to the array of last used indent\n\tvar current;\n\n\t// whether the last action was an indent (opposed to an unindent)\n\tvar isIndent;\n\n\tstr.split(/\\n/g).forEach(function (line) {\n\t\tif (!line) {\n\t\t\t// ignore empty lines\n\t\t\treturn;\n\t\t}\n\n\t\tvar indent;\n\t\tvar matches = line.match(INDENT_RE);\n\n\t\tif (!matches) {\n\t\t\tindent = 0;\n\t\t} else {\n\t\t\tindent = matches[0].length;\n\n\t\t\tif (matches[1]) {\n\t\t\t\tspaces++;\n\t\t\t} else {\n\t\t\t\ttabs++;\n\t\t\t}\n\t\t}\n\n\t\tvar diff = indent - prev;\n\t\tprev = indent;\n\n\t\tif (diff) {\n\t\t\t// an indent or unindent has been detected\n\n\t\t\tisIndent = diff > 0;\n\n\t\t\tcurrent = indents[isIndent ? diff : -diff];\n\n\t\t\tif (current) {\n\t\t\t\tcurrent[0]++;\n\t\t\t} else {\n\t\t\t\tcurrent = indents[diff] = [1, 0];\n\t\t\t}\n\t\t} else if (current) {\n\t\t\t// if the last action was an indent, increment the weight\n\t\t\tcurrent[1] += Number(isIndent);\n\t\t}\n\t});\n\n\tvar amount = getMostUsed(indents);\n\n\tvar type;\n\tvar actual;\n\tif (!amount) {\n\t\ttype = null;\n\t\tactual = '';\n\t} else if (spaces >= tabs) {\n\t\ttype = 'space';\n\t\tactual = repeating(' ', amount);\n\t} else {\n\t\ttype = 'tab';\n\t\tactual = repeating('\\t', amount);\n\t}\n\n\treturn {\n\t\tamount: amount,\n\t\ttype: type,\n\t\tindent: actual\n\t};\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/detect-indent/index.js?")},"./node_modules/babel-generator/node_modules/jsesc/jsesc.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/jsesc v1.3.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports =  true && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule =  true && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar forOwn = function(object, callback) {\n\t\tvar key;\n\t\tfor (key in object) {\n\t\t\tif (hasOwnProperty.call(object, key)) {\n\t\t\t\tcallback(key, object[key]);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar extend = function(destination, source) {\n\t\tif (!source) {\n\t\t\treturn destination;\n\t\t}\n\t\tforOwn(source, function(key, value) {\n\t\t\tdestination[key] = value;\n\t\t});\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index]);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isObject = function(value) {\n\t\t// This is a very simple check, but it’s good enough for what we need.\n\t\treturn toString.call(value) == '[object Object]';\n\t};\n\tvar isString = function(value) {\n\t\treturn typeof value == 'string' ||\n\t\t\ttoString.call(value) == '[object String]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\tvar isFunction = function(value) {\n\t\t// In a perfect world, the `typeof` check would be sufficient. However,\n\t\t// in Chrome 1–12, `typeof /x/ == 'object'`, and in IE 6–8\n\t\t// `typeof alert == 'object'` and similar for other host objects.\n\t\treturn typeof value == 'function' ||\n\t\t\ttoString.call(value) == '[object Function]';\n\t};\n\tvar isMap = function(value) {\n\t\treturn toString.call(value) == '[object Map]';\n\t};\n\tvar isSet = function(value) {\n\t\treturn toString.call(value) == '[object Set]';\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\tvar singleEscapes = {\n\t\t'\"': '\\\\\"',\n\t\t'\\'': '\\\\\\'',\n\t\t'\\\\': '\\\\\\\\',\n\t\t'\\b': '\\\\b',\n\t\t'\\f': '\\\\f',\n\t\t'\\n': '\\\\n',\n\t\t'\\r': '\\\\r',\n\t\t'\\t': '\\\\t'\n\t\t// `\\v` is omitted intentionally, because in IE < 9, '\\v' == 'v'.\n\t\t// '\\v': '\\\\x0B'\n\t};\n\tvar regexSingleEscape = /[\"'\\\\\\b\\f\\n\\r\\t]/;\n\n\tvar regexDigit = /[0-9]/;\n\tvar regexWhitelist = /[ !#-&\\(-\\[\\]-~]/;\n\n\tvar jsesc = function(argument, options) {\n\t\t// Handle options\n\t\tvar defaults = {\n\t\t\t'escapeEverything': false,\n\t\t\t'escapeEtago': false,\n\t\t\t'quotes': 'single',\n\t\t\t'wrap': false,\n\t\t\t'es6': false,\n\t\t\t'json': false,\n\t\t\t'compact': true,\n\t\t\t'lowercaseHex': false,\n\t\t\t'numbers': 'decimal',\n\t\t\t'indent': '\\t',\n\t\t\t'__indent__': '',\n\t\t\t'__inline1__': false,\n\t\t\t'__inline2__': false\n\t\t};\n\t\tvar json = options && options.json;\n\t\tif (json) {\n\t\t\tdefaults.quotes = 'double';\n\t\t\tdefaults.wrap = true;\n\t\t}\n\t\toptions = extend(defaults, options);\n\t\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\t\toptions.quotes = 'single';\n\t\t}\n\t\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\t\tvar compact = options.compact;\n\t\tvar indent = options.indent;\n\t\tvar lowercaseHex = options.lowercaseHex;\n\t\tvar oldIndent = '';\n\t\tvar inline1 = options.__inline1__;\n\t\tvar inline2 = options.__inline2__;\n\t\tvar newLine = compact ? '' : '\\n';\n\t\tvar result;\n\t\tvar isEmpty = true;\n\t\tvar useBinNumbers = options.numbers == 'binary';\n\t\tvar useOctNumbers = options.numbers == 'octal';\n\t\tvar useDecNumbers = options.numbers == 'decimal';\n\t\tvar useHexNumbers = options.numbers == 'hexadecimal';\n\n\t\tif (json && argument && isFunction(argument.toJSON)) {\n\t\t\targument = argument.toJSON();\n\t\t}\n\n\t\tif (!isString(argument)) {\n\t\t\tif (isMap(argument)) {\n\t\t\t\tif (argument.size == 0) {\n\t\t\t\t\treturn 'new Map()';\n\t\t\t\t}\n\t\t\t\tif (!compact) {\n\t\t\t\t\toptions.__inline1__ = true;\n\t\t\t\t}\n\t\t\t\treturn 'new Map(' + jsesc(Array.from(argument), options) + ')';\n\t\t\t}\n\t\t\tif (isSet(argument)) {\n\t\t\t\tif (argument.size == 0) {\n\t\t\t\t\treturn 'new Set()';\n\t\t\t\t}\n\t\t\t\treturn 'new Set(' + jsesc(Array.from(argument), options) + ')';\n\t\t\t}\n\t\t\tif (isArray(argument)) {\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\tif (inline1) {\n\t\t\t\t\toptions.__inline1__ = false;\n\t\t\t\t\toptions.__inline2__ = true;\n\t\t\t\t} else {\n\t\t\t\t\toldIndent = options.__indent__;\n\t\t\t\t\tindent += oldIndent;\n\t\t\t\t\toptions.__indent__ = indent;\n\t\t\t\t}\n\t\t\t\tforEach(argument, function(value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tif (inline2) {\n\t\t\t\t\t\toptions.__inline2__ = false;\n\t\t\t\t\t}\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact || inline2 ? '' : indent) +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '[]';\n\t\t\t\t}\n\t\t\t\tif (inline2) {\n\t\t\t\t\treturn '[' + result.join(', ') + ']';\n\t\t\t\t}\n\t\t\t\treturn '[' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + ']';\n\t\t\t} else if (isNumber(argument)) {\n\t\t\t\tif (json) {\n\t\t\t\t\t// Some number values (e.g. `Infinity`) cannot be represented in JSON.\n\t\t\t\t\treturn JSON.stringify(argument);\n\t\t\t\t}\n\t\t\t\tif (useDecNumbers) {\n\t\t\t\t\treturn String(argument);\n\t\t\t\t}\n\t\t\t\tif (useHexNumbers) {\n\t\t\t\t\tvar tmp = argument.toString(16);\n\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\ttmp = tmp.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\treturn '0x' + tmp;\n\t\t\t\t}\n\t\t\t\tif (useBinNumbers) {\n\t\t\t\t\treturn '0b' + argument.toString(2);\n\t\t\t\t}\n\t\t\t\tif (useOctNumbers) {\n\t\t\t\t\treturn '0o' + argument.toString(8);\n\t\t\t\t}\n\t\t\t} else if (!isObject(argument)) {\n\t\t\t\tif (json) {\n\t\t\t\t\t// For some values (e.g. `undefined`, `function` objects),\n\t\t\t\t\t// `JSON.stringify(value)` returns `undefined` (which isn’t valid\n\t\t\t\t\t// JSON) instead of `'null'`.\n\t\t\t\t\treturn JSON.stringify(argument) || 'null';\n\t\t\t\t}\n\t\t\t\treturn String(argument);\n\t\t\t} else { // it’s an object\n\t\t\t\tresult = [];\n\t\t\t\toptions.wrap = true;\n\t\t\t\toldIndent = options.__indent__;\n\t\t\t\tindent += oldIndent;\n\t\t\t\toptions.__indent__ = indent;\n\t\t\t\tforOwn(argument, function(key, value) {\n\t\t\t\t\tisEmpty = false;\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\t(compact ? '' : indent) +\n\t\t\t\t\t\tjsesc(key, options) + ':' +\n\t\t\t\t\t\t(compact ? '' : ' ') +\n\t\t\t\t\t\tjsesc(value, options)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tif (isEmpty) {\n\t\t\t\t\treturn '{}';\n\t\t\t\t}\n\t\t\t\treturn '{' + newLine + result.join(',' + newLine) + newLine +\n\t\t\t\t\t(compact ? '' : oldIndent) + '}';\n\t\t\t}\n\t\t}\n\n\t\tvar string = argument;\n\t\t// Loop over each code unit in the string and escape it\n\t\tvar index = -1;\n\t\tvar length = string.length;\n\t\tvar first;\n\t\tvar second;\n\t\tvar codePoint;\n\t\tresult = '';\n\t\twhile (++index < length) {\n\t\t\tvar character = string.charAt(index);\n\t\t\tif (options.es6) {\n\t\t\t\tfirst = string.charCodeAt(index);\n\t\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\t\tlength > index + 1 // there is a next code unit\n\t\t\t\t) {\n\t\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\t\tcodePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t\t\tvar hexadecimal = codePoint.toString(16);\n\t\t\t\t\t\tif (!lowercaseHex) {\n\t\t\t\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult += '\\\\u{' + hexadecimal + '}';\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options.escapeEverything) {\n\t\t\t\tif (regexWhitelist.test(character)) {\n\t\t\t\t\t// It’s a printable ASCII character that is not `\"`, `'` or `\\`,\n\t\t\t\t\t// so don’t escape it.\n\t\t\t\t\tresult += character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\"') {\n\t\t\t\t\tresult += quote == character ? '\\\\\"' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (character == '\\'') {\n\t\t\t\t\tresult += quote == character ? '\\\\\\'' : character;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tcharacter == '\\0' &&\n\t\t\t\t!json &&\n\t\t\t\t!regexDigit.test(string.charAt(index + 1))\n\t\t\t) {\n\t\t\t\tresult += '\\\\0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (regexSingleEscape.test(character)) {\n\t\t\t\t// no need for a `hasOwnProperty` check here\n\t\t\t\tresult += singleEscapes[character];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar charCode = character.charCodeAt(0);\n\t\t\tvar hexadecimal = charCode.toString(16);\n\t\t\tif (!lowercaseHex) {\n\t\t\t\thexadecimal = hexadecimal.toUpperCase();\n\t\t\t}\n\t\t\tvar longhand = hexadecimal.length > 2 || json;\n\t\t\tvar escaped = '\\\\' + (longhand ? 'u' : 'x') +\n\t\t\t\t('0000' + hexadecimal).slice(longhand ? -4 : -2);\n\t\t\tresult += escaped;\n\t\t\tcontinue;\n\t\t}\n\t\tif (options.wrap) {\n\t\t\tresult = quote + result + quote;\n\t\t}\n\t\tif (options.escapeEtago) {\n\t\t\t// https://mathiasbynens.be/notes/etago\n\t\t\treturn result.replace(/<\\/(script|style)/gi, '<\\\\/$1');\n\t\t}\n\t\treturn result;\n\t};\n\n\tjsesc.version = '1.3.0';\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn jsesc;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse {}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/jsesc/jsesc.js?")},"./node_modules/babel-generator/node_modules/repeating/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar isFinite = __webpack_require__(\"./node_modules/is-finite/index.js\");\n\nmodule.exports = function (str, n) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected `input` to be a string');\n\t}\n\n\tif (n < 0 || !isFinite(n)) {\n\t\tthrow new TypeError('Expected `count` to be a positive finite number');\n\t}\n\n\tvar ret = '';\n\n\tdo {\n\t\tif (n & 1) {\n\t\t\tret += str;\n\t\t}\n\n\t\tstr += str;\n\t} while ((n >>= 1));\n\n\treturn ret;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/repeating/index.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/array-set.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/util.js\");\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/array-set.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/base64-vlq.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/base64.js");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = "";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error("Expected more digits in base 64 VLQ value.");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/base64-vlq.js?')},"./node_modules/babel-generator/node_modules/source-map/lib/base64.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/base64.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/binary-search.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/binary-search.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/mapping-list.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/util.js");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/mapping-list.js?')},"./node_modules/babel-generator/node_modules/source-map/lib/quick-sort.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/quick-sort.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/source-map-consumer.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/util.js\");\nvar binarySearch = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/binary-search.js\");\nvar ArraySet = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/array-set.js\").ArraySet;\nvar base64VLQ = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/base64-vlq.js\");\nvar quickSort = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/quick-sort.js\").quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/source-map-consumer.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/source-map-generator.js":function(module,exports,__webpack_require__){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/base64-vlq.js\");\nvar util = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/util.js\");\nvar ArraySet = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/array-set.js\").ArraySet;\nvar MappingList = __webpack_require__(\"./node_modules/babel-generator/node_modules/source-map/lib/mapping-list.js\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/source-map-generator.js?")},"./node_modules/babel-generator/node_modules/source-map/lib/source-node.js":function(module,exports,__webpack_require__){eval('/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;\nvar util = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/util.js");\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = "$$$isSourceNode$$$";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source\'s filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || "";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of "remainingLines"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from "lastMapping" to "mapping":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with "lastMapping"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between "lastGeneratedColumn" and\n          // "mapping.generatedColumn" with "lastMapping"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with "lastMapping"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(""));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === "string") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === "string") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source\'s line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== \'\') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === \'string\') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(\'\'.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = "";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: "",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/source-node.js?')},"./node_modules/babel-generator/node_modules/source-map/lib/util.js":function(module,exports){eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/lib/util.js?")},"./node_modules/babel-generator/node_modules/source-map/source-map.js":function(module,exports,__webpack_require__){eval('/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/source-map-generator.js").SourceMapGenerator;\nexports.SourceMapConsumer = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/source-map-consumer.js").SourceMapConsumer;\nexports.SourceNode = __webpack_require__("./node_modules/babel-generator/node_modules/source-map/lib/source-node.js").SourceNode;\n\n\n//# sourceURL=webpack:///./node_modules/babel-generator/node_modules/source-map/source-map.js?')},"./node_modules/babel-helper-bindify-decorators/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = bindifyDecorators;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction bindifyDecorators(decorators) {\n  for (var _iterator = decorators, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var decoratorPath = _ref;\n\n    var decorator = decoratorPath.node;\n    var expression = decorator.expression;\n    if (!t.isMemberExpression(expression)) continue;\n\n    var temp = decoratorPath.scope.maybeGenerateMemoised(expression.object);\n    var ref = void 0;\n\n    var nodes = [];\n\n    if (temp) {\n      ref = temp;\n      nodes.push(t.assignmentExpression("=", temp, expression.object));\n    } else {\n      ref = expression.object;\n    }\n\n    nodes.push(t.callExpression(t.memberExpression(t.memberExpression(ref, expression.property, expression.computed), t.identifier("bind")), [ref]));\n\n    if (nodes.length === 1) {\n      decorator.expression = nodes[0];\n    } else {\n      decorator.expression = t.sequenceExpression(nodes);\n    }\n  }\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-bindify-decorators/lib/index.js?')},"./node_modules/babel-helper-builder-binary-assignment-operator-visitor/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (opts) {\n  var visitor = {};\n\n  function isAssignment(node) {\n    return node && node.operator === opts.operator + "=";\n  }\n\n  function buildAssignment(left, right) {\n    return t.assignmentExpression("=", left, right);\n  }\n\n  visitor.ExpressionStatement = function (path, file) {\n    if (path.isCompletionRecord()) return;\n\n    var expr = path.node.expression;\n    if (!isAssignment(expr)) return;\n\n    var nodes = [];\n    var exploded = (0, _babelHelperExplodeAssignableExpression2.default)(expr.left, nodes, file, path.scope, true);\n\n    nodes.push(t.expressionStatement(buildAssignment(exploded.ref, opts.build(exploded.uid, expr.right))));\n\n    path.replaceWithMultiple(nodes);\n  };\n\n  visitor.AssignmentExpression = function (path, file) {\n    var node = path.node,\n        scope = path.scope;\n\n    if (!isAssignment(node)) return;\n\n    var nodes = [];\n    var exploded = (0, _babelHelperExplodeAssignableExpression2.default)(node.left, nodes, file, scope);\n    nodes.push(buildAssignment(exploded.ref, opts.build(exploded.uid, node.right)));\n    path.replaceWithMultiple(nodes);\n  };\n\n  visitor.BinaryExpression = function (path) {\n    var node = path.node;\n\n    if (node.operator === opts.operator) {\n      path.replaceWith(opts.build(node.left, node.right));\n    }\n  };\n\n  return visitor;\n};\n\nvar _babelHelperExplodeAssignableExpression = __webpack_require__("./node_modules/babel-helper-explode-assignable-expression/lib/index.js");\n\nvar _babelHelperExplodeAssignableExpression2 = _interopRequireDefault(_babelHelperExplodeAssignableExpression);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-builder-binary-assignment-operator-visitor/lib/index.js?')},"./node_modules/babel-helper-call-delegate/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (path) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : path.scope;\n  var node = path.node;\n\n  var container = t.functionExpression(null, [], node.body, node.generator, node.async);\n\n  var callee = container;\n  var args = [];\n\n  (0, _babelHelperHoistVariables2.default)(path, function (id) {\n    return scope.push({ id: id });\n  });\n\n  var state = {\n    foundThis: false,\n    foundArguments: false\n  };\n\n  path.traverse(visitor, state);\n\n  if (state.foundArguments) {\n    callee = t.memberExpression(container, t.identifier("apply"));\n    args = [];\n\n    if (state.foundThis) {\n      args.push(t.thisExpression());\n    }\n\n    if (state.foundArguments) {\n      if (!state.foundThis) args.push(t.nullLiteral());\n      args.push(t.identifier("arguments"));\n    }\n  }\n\n  var call = t.callExpression(callee, args);\n  if (node.generator) call = t.yieldExpression(call, true);\n\n  return t.returnStatement(call);\n};\n\nvar _babelHelperHoistVariables = __webpack_require__("./node_modules/babel-helper-hoist-variables/lib/index.js");\n\nvar _babelHelperHoistVariables2 = _interopRequireDefault(_babelHelperHoistVariables);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar visitor = {\n  enter: function enter(path, state) {\n    if (path.isThisExpression()) {\n      state.foundThis = true;\n    }\n\n    if (path.isReferencedIdentifier({ name: "arguments" })) {\n      state.foundArguments = true;\n    }\n  },\n  Function: function Function(path) {\n    path.skip();\n  }\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-call-delegate/lib/index.js?')},"./node_modules/babel-helper-define-map/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.push = push;\nexports.hasComputed = hasComputed;\nexports.toComputedObjectFromClass = toComputedObjectFromClass;\nexports.toClassObject = toClassObject;\nexports.toDefineObject = toDefineObject;\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nvar _has = __webpack_require__("./node_modules/lodash/has.js");\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toKind(node) {\n  if (t.isClassMethod(node) || t.isObjectMethod(node)) {\n    if (node.kind === "get" || node.kind === "set") {\n      return node.kind;\n    }\n  }\n\n  return "value";\n}\n\nfunction push(mutatorMap, node, kind, file, scope) {\n  var alias = t.toKeyAlias(node);\n\n  var map = {};\n  if ((0, _has2.default)(mutatorMap, alias)) map = mutatorMap[alias];\n  mutatorMap[alias] = map;\n\n  map._inherits = map._inherits || [];\n  map._inherits.push(node);\n\n  map._key = node.key;\n\n  if (node.computed) {\n    map._computed = true;\n  }\n\n  if (node.decorators) {\n    var decorators = map.decorators = map.decorators || t.arrayExpression([]);\n    decorators.elements = decorators.elements.concat(node.decorators.map(function (dec) {\n      return dec.expression;\n    }).reverse());\n  }\n\n  if (map.value || map.initializer) {\n    throw file.buildCodeFrameError(node, "Key conflict with sibling node");\n  }\n\n  var key = void 0,\n      value = void 0;\n\n  if (t.isObjectProperty(node) || t.isObjectMethod(node) || t.isClassMethod(node)) {\n    key = t.toComputedKey(node, node.key);\n  }\n\n  if (t.isObjectProperty(node) || t.isClassProperty(node)) {\n    value = node.value;\n  } else if (t.isObjectMethod(node) || t.isClassMethod(node)) {\n    value = t.functionExpression(null, node.params, node.body, node.generator, node.async);\n    value.returnType = node.returnType;\n  }\n\n  var inheritedKind = toKind(node);\n  if (!kind || inheritedKind !== "value") {\n    kind = inheritedKind;\n  }\n\n  if (scope && t.isStringLiteral(key) && (kind === "value" || kind === "initializer") && t.isFunctionExpression(value)) {\n    value = (0, _babelHelperFunctionName2.default)({ id: key, node: value, scope: scope });\n  }\n\n  if (value) {\n    t.inheritsComments(value, node);\n    map[kind] = value;\n  }\n\n  return map;\n}\n\nfunction hasComputed(mutatorMap) {\n  for (var key in mutatorMap) {\n    if (mutatorMap[key]._computed) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction toComputedObjectFromClass(obj) {\n  var objExpr = t.arrayExpression([]);\n\n  for (var i = 0; i < obj.properties.length; i++) {\n    var prop = obj.properties[i];\n    var val = prop.value;\n    val.properties.unshift(t.objectProperty(t.identifier("key"), t.toComputedKey(prop)));\n    objExpr.elements.push(val);\n  }\n\n  return objExpr;\n}\n\nfunction toClassObject(mutatorMap) {\n  var objExpr = t.objectExpression([]);\n\n  (0, _keys2.default)(mutatorMap).forEach(function (mutatorMapKey) {\n    var map = mutatorMap[mutatorMapKey];\n    var mapNode = t.objectExpression([]);\n\n    var propNode = t.objectProperty(map._key, mapNode, map._computed);\n\n    (0, _keys2.default)(map).forEach(function (key) {\n      var node = map[key];\n      if (key[0] === "_") return;\n\n      var inheritNode = node;\n      if (t.isClassMethod(node) || t.isClassProperty(node)) node = node.value;\n\n      var prop = t.objectProperty(t.identifier(key), node);\n      t.inheritsComments(prop, inheritNode);\n      t.removeComments(inheritNode);\n\n      mapNode.properties.push(prop);\n    });\n\n    objExpr.properties.push(propNode);\n  });\n\n  return objExpr;\n}\n\nfunction toDefineObject(mutatorMap) {\n  (0, _keys2.default)(mutatorMap).forEach(function (key) {\n    var map = mutatorMap[key];\n    if (map.value) map.writable = t.booleanLiteral(true);\n    map.configurable = t.booleanLiteral(true);\n    map.enumerable = t.booleanLiteral(true);\n  });\n\n  return toClassObject(mutatorMap);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-helper-define-map/lib/index.js?')},"./node_modules/babel-helper-explode-assignable-expression/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (node, nodes, file, scope, allowedSingleIdent) {\n  var obj = void 0;\n  if (t.isIdentifier(node) && allowedSingleIdent) {\n    obj = node;\n  } else {\n    obj = getObjRef(node, nodes, file, scope);\n  }\n\n  var ref = void 0,\n      uid = void 0;\n\n  if (t.isIdentifier(node)) {\n    ref = node;\n    uid = obj;\n  } else {\n    var prop = getPropRef(node, nodes, file, scope);\n    var computed = node.computed || t.isLiteral(prop);\n    uid = ref = t.memberExpression(obj, prop, computed);\n  }\n\n  return {\n    uid: uid,\n    ref: ref\n  };\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction getObjRef(node, nodes, file, scope) {\n  var ref = void 0;\n  if (t.isSuper(node)) {\n    return node;\n  } else if (t.isIdentifier(node)) {\n    if (scope.hasBinding(node.name)) {\n      return node;\n    } else {\n      ref = node;\n    }\n  } else if (t.isMemberExpression(node)) {\n    ref = node.object;\n\n    if (t.isSuper(ref) || t.isIdentifier(ref) && scope.hasBinding(ref.name)) {\n      return ref;\n    }\n  } else {\n    throw new Error("We can\'t explode this node type " + node.type);\n  }\n\n  var temp = scope.generateUidIdentifierBasedOnNode(ref);\n  nodes.push(t.variableDeclaration("var", [t.variableDeclarator(temp, ref)]));\n  return temp;\n}\n\nfunction getPropRef(node, nodes, file, scope) {\n  var prop = node.property;\n  var key = t.toComputedKey(node, prop);\n  if (t.isLiteral(key) && t.isPureish(key)) return key;\n\n  var temp = scope.generateUidIdentifierBasedOnNode(prop);\n  nodes.push(t.variableDeclaration("var", [t.variableDeclarator(temp, prop)]));\n  return temp;\n}\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-explode-assignable-expression/lib/index.js?')},"./node_modules/babel-helper-explode-class/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (classPath) {\n  classPath.assertClass();\n\n  var memoisedExpressions = [];\n\n  function maybeMemoise(path) {\n    if (!path.node || path.isPure()) return;\n\n    var uid = classPath.scope.generateDeclaredUidIdentifier();\n    memoisedExpressions.push(t.assignmentExpression("=", uid, path.node));\n    path.replaceWith(uid);\n  }\n\n  function memoiseDecorators(paths) {\n    if (!Array.isArray(paths) || !paths.length) return;\n\n    paths = paths.reverse();\n\n    (0, _babelHelperBindifyDecorators2.default)(paths);\n\n    for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var path = _ref;\n\n      maybeMemoise(path);\n    }\n  }\n\n  maybeMemoise(classPath.get("superClass"));\n  memoiseDecorators(classPath.get("decorators"), true);\n\n  var methods = classPath.get("body.body");\n  for (var _iterator2 = methods, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var methodPath = _ref2;\n\n    if (methodPath.is("computed")) {\n      maybeMemoise(methodPath.get("key"));\n    }\n\n    if (methodPath.has("decorators")) {\n      memoiseDecorators(classPath.get("decorators"));\n    }\n  }\n\n  if (memoisedExpressions) {\n    classPath.insertBefore(memoisedExpressions.map(function (expr) {\n      return t.expressionStatement(expr);\n    }));\n  }\n};\n\nvar _babelHelperBindifyDecorators = __webpack_require__("./node_modules/babel-helper-bindify-decorators/lib/index.js");\n\nvar _babelHelperBindifyDecorators2 = _interopRequireDefault(_babelHelperBindifyDecorators);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-explode-class/lib/index.js?')},"./node_modules/babel-helper-function-name/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var node = _ref.node,\n      parent = _ref.parent,\n      scope = _ref.scope,\n      id = _ref.id;\n\n  if (node.id) return;\n\n  if ((t.isObjectProperty(parent) || t.isObjectMethod(parent, { kind: "method" })) && (!parent.computed || t.isLiteral(parent.key))) {\n    id = parent.key;\n  } else if (t.isVariableDeclarator(parent)) {\n    id = parent.id;\n\n    if (t.isIdentifier(id)) {\n      var binding = scope.parent.getBinding(id.name);\n      if (binding && binding.constant && scope.getBinding(id.name) === binding) {\n        node.id = id;\n        node.id[t.NOT_LOCAL_BINDING] = true;\n        return;\n      }\n    }\n  } else if (t.isAssignmentExpression(parent)) {\n    id = parent.left;\n  } else if (!id) {\n    return;\n  }\n\n  var name = void 0;\n  if (id && t.isLiteral(id)) {\n    name = id.value;\n  } else if (id && t.isIdentifier(id)) {\n    name = id.name;\n  } else {\n    return;\n  }\n\n  name = t.toBindingIdentifierName(name);\n  id = t.identifier(name);\n\n  id[t.NOT_LOCAL_BINDING] = true;\n\n  var state = visit(node, name, scope);\n  return wrap(state, node, id, scope) || node;\n};\n\nvar _babelHelperGetFunctionArity = __webpack_require__("./node_modules/babel-helper-get-function-arity/lib/index.js");\n\nvar _babelHelperGetFunctionArity2 = _interopRequireDefault(_babelHelperGetFunctionArity);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildPropertyMethodAssignmentWrapper = (0, _babelTemplate2.default)("\\n  (function (FUNCTION_KEY) {\\n    function FUNCTION_ID() {\\n      return FUNCTION_KEY.apply(this, arguments);\\n    }\\n\\n    FUNCTION_ID.toString = function () {\\n      return FUNCTION_KEY.toString();\\n    }\\n\\n    return FUNCTION_ID;\\n  })(FUNCTION)\\n");\n\nvar buildGeneratorPropertyMethodAssignmentWrapper = (0, _babelTemplate2.default)("\\n  (function (FUNCTION_KEY) {\\n    function* FUNCTION_ID() {\\n      return yield* FUNCTION_KEY.apply(this, arguments);\\n    }\\n\\n    FUNCTION_ID.toString = function () {\\n      return FUNCTION_KEY.toString();\\n    };\\n\\n    return FUNCTION_ID;\\n  })(FUNCTION)\\n");\n\nvar visitor = {\n  "ReferencedIdentifier|BindingIdentifier": function ReferencedIdentifierBindingIdentifier(path, state) {\n    if (path.node.name !== state.name) return;\n\n    var localDeclar = path.scope.getBindingIdentifier(state.name);\n    if (localDeclar !== state.outerDeclar) return;\n\n    state.selfReference = true;\n    path.stop();\n  }\n};\n\nfunction wrap(state, method, id, scope) {\n  if (state.selfReference) {\n    if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {\n      scope.rename(id.name);\n    } else {\n      if (!t.isFunction(method)) return;\n\n      var build = buildPropertyMethodAssignmentWrapper;\n      if (method.generator) build = buildGeneratorPropertyMethodAssignmentWrapper;\n      var _template = build({\n        FUNCTION: method,\n        FUNCTION_ID: id,\n        FUNCTION_KEY: scope.generateUidIdentifier(id.name)\n      }).expression;\n      _template.callee._skipModulesRemap = true;\n\n      var params = _template.callee.body.body[0].params;\n      for (var i = 0, len = (0, _babelHelperGetFunctionArity2.default)(method); i < len; i++) {\n        params.push(scope.generateUidIdentifier("x"));\n      }\n\n      return _template;\n    }\n  }\n\n  method.id = id;\n  scope.getProgramParent().references[id.name] = true;\n}\n\nfunction visit(node, name, scope) {\n  var state = {\n    selfAssignment: false,\n    selfReference: false,\n    outerDeclar: scope.getBindingIdentifier(name),\n    references: [],\n    name: name\n  };\n\n  var binding = scope.getOwnBinding(name);\n\n  if (binding) {\n    if (binding.kind === "param") {\n      state.selfReference = true;\n    } else {}\n  } else if (state.outerDeclar || scope.hasGlobal(name)) {\n    scope.traverse(node, visitor, state);\n  }\n\n  return state;\n}\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-function-name/lib/index.js?')},"./node_modules/babel-helper-get-function-arity/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (node) {\n  var params = node.params;\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    if (t.isAssignmentPattern(param) || t.isRestElement(param)) {\n      return i;\n    }\n  }\n  return params.length;\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-get-function-arity/lib/index.js?')},"./node_modules/babel-helper-hoist-variables/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (path, emit) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "var";\n\n  path.traverse(visitor, { kind: kind, emit: emit });\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar visitor = {\n  Scope: function Scope(path, state) {\n    if (state.kind === "let") path.skip();\n  },\n  Function: function Function(path) {\n    path.skip();\n  },\n  VariableDeclaration: function VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n\n    var nodes = [];\n\n    var declarations = path.get("declarations");\n    var firstId = void 0;\n\n    for (var _iterator = declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var declar = _ref;\n\n      firstId = declar.node.id;\n\n      if (declar.node.init) {\n        nodes.push(t.expressionStatement(t.assignmentExpression("=", declar.node.id, declar.node.init)));\n      }\n\n      for (var name in declar.getBindingIdentifiers()) {\n        state.emit(t.identifier(name), name);\n      }\n    }\n\n    if (path.parentPath.isFor({ left: path.node })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-hoist-variables/lib/index.js?')},"./node_modules/babel-helper-optimise-call-expression/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (callee, thisNode, args) {\n  if (args.length === 1 && t.isSpreadElement(args[0]) && t.isIdentifier(args[0].argument, { name: "arguments" })) {\n    return t.callExpression(t.memberExpression(callee, t.identifier("apply")), [thisNode, args[0].argument]);\n  } else {\n    return t.callExpression(t.memberExpression(callee, t.identifier("call")), [thisNode].concat(args));\n  }\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-optimise-call-expression/lib/index.js?')},"./node_modules/babel-helper-regex/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.is = is;\nexports.pullFlag = pullFlag;\n\nvar _pull = __webpack_require__("./node_modules/lodash/pull.js");\n\nvar _pull2 = _interopRequireDefault(_pull);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction is(node, flag) {\n  return t.isRegExpLiteral(node) && node.flags.indexOf(flag) >= 0;\n}\n\nfunction pullFlag(node, flag) {\n  var flags = node.flags.split("");\n  if (node.flags.indexOf(flag) < 0) return;\n  (0, _pull2.default)(flags, flag);\n  node.flags = flags.join("");\n}\n\n//# sourceURL=webpack:///./node_modules/babel-helper-regex/lib/index.js?')},"./node_modules/babel-helper-remap-async-to-generator/lib/for-await.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (path, helpers) {\n  var node = path.node,\n      scope = path.scope,\n      parent = path.parent;\n\n\n  var stepKey = scope.generateUidIdentifier("step");\n  var stepValue = scope.generateUidIdentifier("value");\n  var left = node.left;\n  var declar = void 0;\n\n  if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n    declar = t.expressionStatement(t.assignmentExpression("=", left, stepValue));\n  } else if (t.isVariableDeclaration(left)) {\n    declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, stepValue)]);\n  }\n\n  var template = buildForAwait();\n\n  (0, _babelTraverse2.default)(template, forAwaitVisitor, null, {\n    ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier("didIteratorError"),\n    ITERATOR_COMPLETION: scope.generateUidIdentifier("iteratorNormalCompletion"),\n    ITERATOR_ERROR_KEY: scope.generateUidIdentifier("iteratorError"),\n    ITERATOR_KEY: scope.generateUidIdentifier("iterator"),\n    GET_ITERATOR: helpers.getAsyncIterator,\n    OBJECT: node.right,\n    STEP_VALUE: stepValue,\n    STEP_KEY: stepKey,\n    AWAIT: helpers.wrapAwait\n  });\n\n  template = template.body.body;\n\n  var isLabeledParent = t.isLabeledStatement(parent);\n  var tryBody = template[3].block.body;\n  var loop = tryBody[0];\n\n  if (isLabeledParent) {\n    tryBody[0] = t.labeledStatement(parent.label, loop);\n  }\n\n  return {\n    replaceParent: isLabeledParent,\n    node: template,\n    declar: declar,\n    loop: loop\n  };\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar buildForAwait = (0, _babelTemplate2.default)("\\n  function* wrapper() {\\n    var ITERATOR_COMPLETION = true;\\n    var ITERATOR_HAD_ERROR_KEY = false;\\n    var ITERATOR_ERROR_KEY = undefined;\\n    try {\\n      for (\\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\\n        (\\n          STEP_KEY = yield AWAIT(ITERATOR_KEY.next()),\\n          ITERATOR_COMPLETION = STEP_KEY.done,\\n          STEP_VALUE = yield AWAIT(STEP_KEY.value),\\n          !ITERATOR_COMPLETION\\n        );\\n        ITERATOR_COMPLETION = true) {\\n      }\\n    } catch (err) {\\n      ITERATOR_HAD_ERROR_KEY = true;\\n      ITERATOR_ERROR_KEY = err;\\n    } finally {\\n      try {\\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\\n          yield AWAIT(ITERATOR_KEY.return());\\n        }\\n      } finally {\\n        if (ITERATOR_HAD_ERROR_KEY) {\\n          throw ITERATOR_ERROR_KEY;\\n        }\\n      }\\n    }\\n  }\\n");\n\nvar forAwaitVisitor = {\n  noScope: true,\n\n  Identifier: function Identifier(path, replacements) {\n    if (path.node.name in replacements) {\n      path.replaceInline(replacements[path.node.name]);\n    }\n  },\n  CallExpression: function CallExpression(path, replacements) {\n    var callee = path.node.callee;\n\n    if (t.isIdentifier(callee) && callee.name === "AWAIT" && !replacements.AWAIT) {\n      path.replaceWith(path.node.arguments[0]);\n    }\n  }\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-remap-async-to-generator/lib/for-await.js?')},"./node_modules/babel-helper-remap-async-to-generator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (path, file, helpers) {\n  if (!helpers) {\n    helpers = { wrapAsync: file };\n    file = null;\n  }\n  path.traverse(awaitVisitor, {\n    file: file,\n    wrapAwait: helpers.wrapAwait\n  });\n\n  if (path.isClassMethod() || path.isObjectMethod()) {\n    classOrObjectMethod(path, helpers.wrapAsync);\n  } else {\n    plainFunction(path, helpers.wrapAsync);\n  }\n};\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _forAwait = __webpack_require__("./node_modules/babel-helper-remap-async-to-generator/lib/for-await.js");\n\nvar _forAwait2 = _interopRequireDefault(_forAwait);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildWrapper = (0, _babelTemplate2.default)("\\n  (() => {\\n    var REF = FUNCTION;\\n    return function NAME(PARAMS) {\\n      return REF.apply(this, arguments);\\n    };\\n  })\\n");\n\nvar namedBuildWrapper = (0, _babelTemplate2.default)("\\n  (() => {\\n    var REF = FUNCTION;\\n    function NAME(PARAMS) {\\n      return REF.apply(this, arguments);\\n    }\\n    return NAME;\\n  })\\n");\n\nvar awaitVisitor = {\n  Function: function Function(path) {\n    if (path.isArrowFunctionExpression() && !path.node.async) {\n      path.arrowFunctionToShadowed();\n      return;\n    }\n    path.skip();\n  },\n  AwaitExpression: function AwaitExpression(_ref, _ref2) {\n    var node = _ref.node;\n    var wrapAwait = _ref2.wrapAwait;\n\n    node.type = "YieldExpression";\n    if (wrapAwait) {\n      node.argument = t.callExpression(wrapAwait, [node.argument]);\n    }\n  },\n  ForAwaitStatement: function ForAwaitStatement(path, _ref3) {\n    var file = _ref3.file,\n        wrapAwait = _ref3.wrapAwait;\n    var node = path.node;\n\n\n    var build = (0, _forAwait2.default)(path, {\n      getAsyncIterator: file.addHelper("asyncIterator"),\n      wrapAwait: wrapAwait\n    });\n\n    var declar = build.declar,\n        loop = build.loop;\n\n    var block = loop.body;\n\n    path.ensureBlock();\n\n    if (declar) {\n      block.body.push(declar);\n    }\n\n    block.body = block.body.concat(node.body.body);\n\n    t.inherits(loop, node);\n    t.inherits(loop.body, node.body);\n\n    if (build.replaceParent) {\n      path.parentPath.replaceWithMultiple(build.node);\n      path.remove();\n    } else {\n      path.replaceWithMultiple(build.node);\n    }\n  }\n};\n\nfunction classOrObjectMethod(path, callId) {\n  var node = path.node;\n  var body = node.body;\n\n  node.async = false;\n\n  var container = t.functionExpression(null, [], t.blockStatement(body.body), true);\n  container.shadow = true;\n  body.body = [t.returnStatement(t.callExpression(t.callExpression(callId, [container]), []))];\n\n  node.generator = false;\n}\n\nfunction plainFunction(path, callId) {\n  var node = path.node;\n  var isDeclaration = path.isFunctionDeclaration();\n  var asyncFnId = node.id;\n  var wrapper = buildWrapper;\n\n  if (path.isArrowFunctionExpression()) {\n    path.arrowFunctionToShadowed();\n  } else if (!isDeclaration && asyncFnId) {\n    wrapper = namedBuildWrapper;\n  }\n\n  node.async = false;\n  node.generator = true;\n\n  node.id = null;\n\n  if (isDeclaration) {\n    node.type = "FunctionExpression";\n  }\n\n  var built = t.callExpression(callId, [node]);\n  var container = wrapper({\n    NAME: asyncFnId,\n    REF: path.scope.generateUidIdentifier("ref"),\n    FUNCTION: built,\n    PARAMS: node.params.reduce(function (acc, param) {\n      acc.done = acc.done || t.isAssignmentPattern(param) || t.isRestElement(param);\n\n      if (!acc.done) {\n        acc.params.push(path.scope.generateUidIdentifier("x"));\n      }\n\n      return acc;\n    }, {\n      params: [],\n      done: false\n    }).params\n  }).expression;\n\n  if (isDeclaration) {\n    var declar = t.variableDeclaration("let", [t.variableDeclarator(t.identifier(asyncFnId.name), t.callExpression(container, []))]);\n    declar._blockHoist = true;\n\n    path.replaceWith(declar);\n  } else {\n    var retFunction = container.body.body[1].argument;\n    if (!asyncFnId) {\n      (0, _babelHelperFunctionName2.default)({\n        node: retFunction,\n        parent: path.parent,\n        scope: path.scope\n      });\n    }\n\n    if (!retFunction || retFunction.id || node.params.length) {\n      path.replaceWith(t.callExpression(container, []));\n    } else {\n      path.replaceWith(built);\n    }\n  }\n}\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-remap-async-to-generator/lib/index.js?')},"./node_modules/babel-helper-replace-supers/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _babelHelperOptimiseCallExpression = __webpack_require__("./node_modules/babel-helper-optimise-call-expression/lib/index.js");\n\nvar _babelHelperOptimiseCallExpression2 = _interopRequireDefault(_babelHelperOptimiseCallExpression);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HARDCORE_THIS_REF = (0, _symbol2.default)();\n\nfunction isIllegalBareSuper(node, parent) {\n  if (!t.isSuper(node)) return false;\n  if (t.isMemberExpression(parent, { computed: false })) return false;\n  if (t.isCallExpression(parent, { callee: node })) return false;\n  return true;\n}\n\nfunction isMemberExpressionSuper(node) {\n  return t.isMemberExpression(node) && t.isSuper(node.object);\n}\n\nfunction getPrototypeOfExpression(objectRef, isStatic) {\n  var targetRef = isStatic ? objectRef : t.memberExpression(objectRef, t.identifier("prototype"));\n\n  return t.logicalExpression("||", t.memberExpression(targetRef, t.identifier("__proto__")), t.callExpression(t.memberExpression(t.identifier("Object"), t.identifier("getPrototypeOf")), [targetRef]));\n}\n\nvar visitor = {\n  Function: function Function(path) {\n    if (!path.inShadow("this")) {\n      path.skip();\n    }\n  },\n  ReturnStatement: function ReturnStatement(path, state) {\n    if (!path.inShadow("this")) {\n      state.returns.push(path);\n    }\n  },\n  ThisExpression: function ThisExpression(path, state) {\n    if (!path.node[HARDCORE_THIS_REF]) {\n      state.thises.push(path);\n    }\n  },\n  enter: function enter(path, state) {\n    var callback = state.specHandle;\n    if (state.isLoose) callback = state.looseHandle;\n\n    var isBareSuper = path.isCallExpression() && path.get("callee").isSuper();\n\n    var result = callback.call(state, path);\n\n    if (result) {\n      state.hasSuper = true;\n    }\n\n    if (isBareSuper) {\n      state.bareSupers.push(path);\n    }\n\n    if (result === true) {\n      path.requeue();\n    }\n\n    if (result !== true && result) {\n      if (Array.isArray(result)) {\n        path.replaceWithMultiple(result);\n      } else {\n        path.replaceWith(result);\n      }\n    }\n  }\n};\n\nvar ReplaceSupers = function () {\n  function ReplaceSupers(opts) {\n    var inClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    (0, _classCallCheck3.default)(this, ReplaceSupers);\n\n    this.forceSuperMemoisation = opts.forceSuperMemoisation;\n    this.methodPath = opts.methodPath;\n    this.methodNode = opts.methodNode;\n    this.superRef = opts.superRef;\n    this.isStatic = opts.isStatic;\n    this.hasSuper = false;\n    this.inClass = inClass;\n    this.isLoose = opts.isLoose;\n    this.scope = this.methodPath.scope;\n    this.file = opts.file;\n    this.opts = opts;\n\n    this.bareSupers = [];\n    this.returns = [];\n    this.thises = [];\n  }\n\n  ReplaceSupers.prototype.getObjectRef = function getObjectRef() {\n    return this.opts.objectRef || this.opts.getObjectRef();\n  };\n\n  ReplaceSupers.prototype.setSuperProperty = function setSuperProperty(property, value, isComputed) {\n    return t.callExpression(this.file.addHelper("set"), [getPrototypeOfExpression(this.getObjectRef(), this.isStatic), isComputed ? property : t.stringLiteral(property.name), value, t.thisExpression()]);\n  };\n\n  ReplaceSupers.prototype.getSuperProperty = function getSuperProperty(property, isComputed) {\n    return t.callExpression(this.file.addHelper("get"), [getPrototypeOfExpression(this.getObjectRef(), this.isStatic), isComputed ? property : t.stringLiteral(property.name), t.thisExpression()]);\n  };\n\n  ReplaceSupers.prototype.replace = function replace() {\n    this.methodPath.traverse(visitor, this);\n  };\n\n  ReplaceSupers.prototype.getLooseSuperProperty = function getLooseSuperProperty(id, parent) {\n    var methodNode = this.methodNode;\n    var superRef = this.superRef || t.identifier("Function");\n\n    if (parent.property === id) {\n      return;\n    } else if (t.isCallExpression(parent, { callee: id })) {\n      return;\n    } else if (t.isMemberExpression(parent) && !methodNode.static) {\n      return t.memberExpression(superRef, t.identifier("prototype"));\n    } else {\n      return superRef;\n    }\n  };\n\n  ReplaceSupers.prototype.looseHandle = function looseHandle(path) {\n    var node = path.node;\n    if (path.isSuper()) {\n      return this.getLooseSuperProperty(node, path.parent);\n    } else if (path.isCallExpression()) {\n      var callee = node.callee;\n      if (!t.isMemberExpression(callee)) return;\n      if (!t.isSuper(callee.object)) return;\n\n      t.appendToMemberExpression(callee, t.identifier("call"));\n      node.arguments.unshift(t.thisExpression());\n      return true;\n    }\n  };\n\n  ReplaceSupers.prototype.specHandleAssignmentExpression = function specHandleAssignmentExpression(ref, path, node) {\n    if (node.operator === "=") {\n      return this.setSuperProperty(node.left.property, node.right, node.left.computed);\n    } else {\n      ref = ref || path.scope.generateUidIdentifier("ref");\n      return [t.variableDeclaration("var", [t.variableDeclarator(ref, node.left)]), t.expressionStatement(t.assignmentExpression("=", node.left, t.binaryExpression(node.operator[0], ref, node.right)))];\n    }\n  };\n\n  ReplaceSupers.prototype.specHandle = function specHandle(path) {\n    var property = void 0;\n    var computed = void 0;\n    var args = void 0;\n\n    var parent = path.parent;\n    var node = path.node;\n\n    if (isIllegalBareSuper(node, parent)) {\n      throw path.buildCodeFrameError(messages.get("classesIllegalBareSuper"));\n    }\n\n    if (t.isCallExpression(node)) {\n      var callee = node.callee;\n      if (t.isSuper(callee)) {\n        return;\n      } else if (isMemberExpressionSuper(callee)) {\n        property = callee.property;\n        computed = callee.computed;\n        args = node.arguments;\n      }\n    } else if (t.isMemberExpression(node) && t.isSuper(node.object)) {\n      property = node.property;\n      computed = node.computed;\n    } else if (t.isUpdateExpression(node) && isMemberExpressionSuper(node.argument)) {\n      var binary = t.binaryExpression(node.operator[0], node.argument, t.numericLiteral(1));\n      if (node.prefix) {\n        return this.specHandleAssignmentExpression(null, path, binary);\n      } else {\n        var ref = path.scope.generateUidIdentifier("ref");\n        return this.specHandleAssignmentExpression(ref, path, binary).concat(t.expressionStatement(ref));\n      }\n    } else if (t.isAssignmentExpression(node) && isMemberExpressionSuper(node.left)) {\n      return this.specHandleAssignmentExpression(null, path, node);\n    }\n\n    if (!property) return;\n\n    var superProperty = this.getSuperProperty(property, computed);\n\n    if (args) {\n      return this.optimiseCall(superProperty, args);\n    } else {\n      return superProperty;\n    }\n  };\n\n  ReplaceSupers.prototype.optimiseCall = function optimiseCall(callee, args) {\n    var thisNode = t.thisExpression();\n    thisNode[HARDCORE_THIS_REF] = true;\n    return (0, _babelHelperOptimiseCallExpression2.default)(callee, thisNode, args);\n  };\n\n  return ReplaceSupers;\n}();\n\nexports.default = ReplaceSupers;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helper-replace-supers/lib/index.js?')},"./node_modules/babel-helpers/lib/helpers.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar helpers = {};\nexports.default = helpers;\n\n\nhelpers.typeof = (0, _babelTemplate2.default)("\\n  (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\")\\n    ? function (obj) { return typeof obj; }\\n    : function (obj) {\\n        return obj && typeof Symbol === \\"function\\" && obj.constructor === Symbol && obj !== Symbol.prototype\\n          ? \\"symbol\\"\\n          : typeof obj;\\n      };\\n");\n\nhelpers.jsx = (0, _babelTemplate2.default)("\\n  (function () {\\n    var REACT_ELEMENT_TYPE = (typeof Symbol === \\"function\\" && Symbol.for && Symbol.for(\\"react.element\\")) || 0xeac7;\\n\\n    return function createRawReactElement (type, props, key, children) {\\n      var defaultProps = type && type.defaultProps;\\n      var childrenLength = arguments.length - 3;\\n\\n      if (!props && childrenLength !== 0) {\\n        // If we\'re going to assign props.children, we create a new object now\\n        // to avoid mutating defaultProps.\\n        props = {};\\n      }\\n      if (props && defaultProps) {\\n        for (var propName in defaultProps) {\\n          if (props[propName] === void 0) {\\n            props[propName] = defaultProps[propName];\\n          }\\n        }\\n      } else if (!props) {\\n        props = defaultProps || {};\\n      }\\n\\n      if (childrenLength === 1) {\\n        props.children = children;\\n      } else if (childrenLength > 1) {\\n        var childArray = Array(childrenLength);\\n        for (var i = 0; i < childrenLength; i++) {\\n          childArray[i] = arguments[i + 3];\\n        }\\n        props.children = childArray;\\n      }\\n\\n      return {\\n        $$typeof: REACT_ELEMENT_TYPE,\\n        type: type,\\n        key: key === undefined ? null : \'\' + key,\\n        ref: null,\\n        props: props,\\n        _owner: null,\\n      };\\n    };\\n\\n  })()\\n");\n\nhelpers.asyncIterator = (0, _babelTemplate2.default)("\\n  (function (iterable) {\\n    if (typeof Symbol === \\"function\\") {\\n      if (Symbol.asyncIterator) {\\n        var method = iterable[Symbol.asyncIterator];\\n        if (method != null) return method.call(iterable);\\n      }\\n      if (Symbol.iterator) {\\n        return iterable[Symbol.iterator]();\\n      }\\n    }\\n    throw new TypeError(\\"Object is not async iterable\\");\\n  })\\n");\n\nhelpers.asyncGenerator = (0, _babelTemplate2.default)("\\n  (function () {\\n    function AwaitValue(value) {\\n      this.value = value;\\n    }\\n\\n    function AsyncGenerator(gen) {\\n      var front, back;\\n\\n      function send(key, arg) {\\n        return new Promise(function (resolve, reject) {\\n          var request = {\\n            key: key,\\n            arg: arg,\\n            resolve: resolve,\\n            reject: reject,\\n            next: null\\n          };\\n\\n          if (back) {\\n            back = back.next = request;\\n          } else {\\n            front = back = request;\\n            resume(key, arg);\\n          }\\n        });\\n      }\\n\\n      function resume(key, arg) {\\n        try {\\n          var result = gen[key](arg)\\n          var value = result.value;\\n          if (value instanceof AwaitValue) {\\n            Promise.resolve(value.value).then(\\n              function (arg) { resume(\\"next\\", arg); },\\n              function (arg) { resume(\\"throw\\", arg); });\\n          } else {\\n            settle(result.done ? \\"return\\" : \\"normal\\", result.value);\\n          }\\n        } catch (err) {\\n          settle(\\"throw\\", err);\\n        }\\n      }\\n\\n      function settle(type, value) {\\n        switch (type) {\\n          case \\"return\\":\\n            front.resolve({ value: value, done: true });\\n            break;\\n          case \\"throw\\":\\n            front.reject(value);\\n            break;\\n          default:\\n            front.resolve({ value: value, done: false });\\n            break;\\n        }\\n\\n        front = front.next;\\n        if (front) {\\n          resume(front.key, front.arg);\\n        } else {\\n          back = null;\\n        }\\n      }\\n\\n      this._invoke = send;\\n\\n      // Hide \\"return\\" method if generator return is not supported\\n      if (typeof gen.return !== \\"function\\") {\\n        this.return = undefined;\\n      }\\n    }\\n\\n    if (typeof Symbol === \\"function\\" && Symbol.asyncIterator) {\\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\\n    }\\n\\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke(\\"next\\", arg); };\\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke(\\"throw\\", arg); };\\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke(\\"return\\", arg); };\\n\\n    return {\\n      wrap: function (fn) {\\n        return function () {\\n          return new AsyncGenerator(fn.apply(this, arguments));\\n        };\\n      },\\n      await: function (value) {\\n        return new AwaitValue(value);\\n      }\\n    };\\n\\n  })()\\n");\n\nhelpers.asyncGeneratorDelegate = (0, _babelTemplate2.default)("\\n  (function (inner, awaitWrap) {\\n    var iter = {}, waiting = false;\\n\\n    function pump(key, value) {\\n      waiting = true;\\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\\n      return { done: false, value: awaitWrap(value) };\\n    };\\n\\n    if (typeof Symbol === \\"function\\" && Symbol.iterator) {\\n      iter[Symbol.iterator] = function () { return this; };\\n    }\\n\\n    iter.next = function (value) {\\n      if (waiting) {\\n        waiting = false;\\n        return value;\\n      }\\n      return pump(\\"next\\", value);\\n    };\\n\\n    if (typeof inner.throw === \\"function\\") {\\n      iter.throw = function (value) {\\n        if (waiting) {\\n          waiting = false;\\n          throw value;\\n        }\\n        return pump(\\"throw\\", value);\\n      };\\n    }\\n\\n    if (typeof inner.return === \\"function\\") {\\n      iter.return = function (value) {\\n        return pump(\\"return\\", value);\\n      };\\n    }\\n\\n    return iter;\\n  })\\n");\n\nhelpers.asyncToGenerator = (0, _babelTemplate2.default)("\\n  (function (fn) {\\n    return function () {\\n      var gen = fn.apply(this, arguments);\\n      return new Promise(function (resolve, reject) {\\n        function step(key, arg) {\\n          try {\\n            var info = gen[key](arg);\\n            var value = info.value;\\n          } catch (error) {\\n            reject(error);\\n            return;\\n          }\\n\\n          if (info.done) {\\n            resolve(value);\\n          } else {\\n            return Promise.resolve(value).then(function (value) {\\n              step(\\"next\\", value);\\n            }, function (err) {\\n              step(\\"throw\\", err);\\n            });\\n          }\\n        }\\n\\n        return step(\\"next\\");\\n      });\\n    };\\n  })\\n");\n\nhelpers.classCallCheck = (0, _babelTemplate2.default)("\\n  (function (instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\"Cannot call a class as a function\\");\\n    }\\n  });\\n");\n\nhelpers.createClass = (0, _babelTemplate2.default)("\\n  (function() {\\n    function defineProperties(target, props) {\\n      for (var i = 0; i < props.length; i ++) {\\n        var descriptor = props[i];\\n        descriptor.enumerable = descriptor.enumerable || false;\\n        descriptor.configurable = true;\\n        if (\\"value\\" in descriptor) descriptor.writable = true;\\n        Object.defineProperty(target, descriptor.key, descriptor);\\n      }\\n    }\\n\\n    return function (Constructor, protoProps, staticProps) {\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n      if (staticProps) defineProperties(Constructor, staticProps);\\n      return Constructor;\\n    };\\n  })()\\n");\n\nhelpers.defineEnumerableProperties = (0, _babelTemplate2.default)("\\n  (function (obj, descs) {\\n    for (var key in descs) {\\n      var desc = descs[key];\\n      desc.configurable = desc.enumerable = true;\\n      if (\\"value\\" in desc) desc.writable = true;\\n      Object.defineProperty(obj, key, desc);\\n    }\\n    return obj;\\n  })\\n");\n\nhelpers.defaults = (0, _babelTemplate2.default)("\\n  (function (obj, defaults) {\\n    var keys = Object.getOwnPropertyNames(defaults);\\n    for (var i = 0; i < keys.length; i++) {\\n      var key = keys[i];\\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\\n      if (value && value.configurable && obj[key] === undefined) {\\n        Object.defineProperty(obj, key, value);\\n      }\\n    }\\n    return obj;\\n  })\\n");\n\nhelpers.defineProperty = (0, _babelTemplate2.default)("\\n  (function (obj, key, value) {\\n    // Shortcircuit the slow defineProperty path when possible.\\n    // We are trying to avoid issues where setters defined on the\\n    // prototype cause side effects under the fast path of simple\\n    // assignment. By checking for existence of the property with\\n    // the in operator, we can optimize most of this overhead away.\\n    if (key in obj) {\\n      Object.defineProperty(obj, key, {\\n        value: value,\\n        enumerable: true,\\n        configurable: true,\\n        writable: true\\n      });\\n    } else {\\n      obj[key] = value;\\n    }\\n    return obj;\\n  });\\n");\n\nhelpers.extends = (0, _babelTemplate2.default)("\\n  Object.assign || (function (target) {\\n    for (var i = 1; i < arguments.length; i++) {\\n      var source = arguments[i];\\n      for (var key in source) {\\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\\n          target[key] = source[key];\\n        }\\n      }\\n    }\\n    return target;\\n  })\\n");\n\nhelpers.get = (0, _babelTemplate2.default)("\\n  (function get(object, property, receiver) {\\n    if (object === null) object = Function.prototype;\\n\\n    var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n    if (desc === undefined) {\\n      var parent = Object.getPrototypeOf(object);\\n\\n      if (parent === null) {\\n        return undefined;\\n      } else {\\n        return get(parent, property, receiver);\\n      }\\n    } else if (\\"value\\" in desc) {\\n      return desc.value;\\n    } else {\\n      var getter = desc.get;\\n\\n      if (getter === undefined) {\\n        return undefined;\\n      }\\n\\n      return getter.call(receiver);\\n    }\\n  });\\n");\n\nhelpers.inherits = (0, _babelTemplate2.default)("\\n  (function (subClass, superClass) {\\n    if (typeof superClass !== \\"function\\" && superClass !== null) {\\n      throw new TypeError(\\"Super expression must either be null or a function, not \\" + typeof superClass);\\n    }\\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\\n      constructor: {\\n        value: subClass,\\n        enumerable: false,\\n        writable: true,\\n        configurable: true\\n      }\\n    });\\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n  })\\n");\n\nhelpers.instanceof = (0, _babelTemplate2.default)("\\n  (function (left, right) {\\n    if (right != null && typeof Symbol !== \\"undefined\\" && right[Symbol.hasInstance]) {\\n      return right[Symbol.hasInstance](left);\\n    } else {\\n      return left instanceof right;\\n    }\\n  });\\n");\n\nhelpers.interopRequireDefault = (0, _babelTemplate2.default)("\\n  (function (obj) {\\n    return obj && obj.__esModule ? obj : { default: obj };\\n  })\\n");\n\nhelpers.interopRequireWildcard = (0, _babelTemplate2.default)("\\n  (function (obj) {\\n    if (obj && obj.__esModule) {\\n      return obj;\\n    } else {\\n      var newObj = {};\\n      if (obj != null) {\\n        for (var key in obj) {\\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\\n        }\\n      }\\n      newObj.default = obj;\\n      return newObj;\\n    }\\n  })\\n");\n\nhelpers.newArrowCheck = (0, _babelTemplate2.default)("\\n  (function (innerThis, boundThis) {\\n    if (innerThis !== boundThis) {\\n      throw new TypeError(\\"Cannot instantiate an arrow function\\");\\n    }\\n  });\\n");\n\nhelpers.objectDestructuringEmpty = (0, _babelTemplate2.default)("\\n  (function (obj) {\\n    if (obj == null) throw new TypeError(\\"Cannot destructure undefined\\");\\n  });\\n");\n\nhelpers.objectWithoutProperties = (0, _babelTemplate2.default)("\\n  (function (obj, keys) {\\n    var target = {};\\n    for (var i in obj) {\\n      if (keys.indexOf(i) >= 0) continue;\\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\\n      target[i] = obj[i];\\n    }\\n    return target;\\n  })\\n");\n\nhelpers.possibleConstructorReturn = (0, _babelTemplate2.default)("\\n  (function (self, call) {\\n    if (!self) {\\n      throw new ReferenceError(\\"this hasn\'t been initialised - super() hasn\'t been called\\");\\n    }\\n    return call && (typeof call === \\"object\\" || typeof call === \\"function\\") ? call : self;\\n  });\\n");\n\nhelpers.selfGlobal = (0, _babelTemplate2.default)("\\n  typeof global === \\"undefined\\" ? self : global\\n");\n\nhelpers.set = (0, _babelTemplate2.default)("\\n  (function set(object, property, value, receiver) {\\n    var desc = Object.getOwnPropertyDescriptor(object, property);\\n\\n    if (desc === undefined) {\\n      var parent = Object.getPrototypeOf(object);\\n\\n      if (parent !== null) {\\n        set(parent, property, value, receiver);\\n      }\\n    } else if (\\"value\\" in desc && desc.writable) {\\n      desc.value = value;\\n    } else {\\n      var setter = desc.set;\\n\\n      if (setter !== undefined) {\\n        setter.call(receiver, value);\\n      }\\n    }\\n\\n    return value;\\n  });\\n");\n\nhelpers.slicedToArray = (0, _babelTemplate2.default)("\\n  (function () {\\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\\n    // array iterator case.\\n    function sliceIterator(arr, i) {\\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\\n      // iterators etc. variable names have been minimised to reduce the size of this massive\\n      // helper. sometimes spec compliancy is annoying :(\\n      //\\n      // _n = _iteratorNormalCompletion\\n      // _d = _didIteratorError\\n      // _e = _iteratorError\\n      // _i = _iterator\\n      // _s = _step\\n\\n      var _arr = [];\\n      var _n = true;\\n      var _d = false;\\n      var _e = undefined;\\n      try {\\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n          _arr.push(_s.value);\\n          if (i && _arr.length === i) break;\\n        }\\n      } catch (err) {\\n        _d = true;\\n        _e = err;\\n      } finally {\\n        try {\\n          if (!_n && _i[\\"return\\"]) _i[\\"return\\"]();\\n        } finally {\\n          if (_d) throw _e;\\n        }\\n      }\\n      return _arr;\\n    }\\n\\n    return function (arr, i) {\\n      if (Array.isArray(arr)) {\\n        return arr;\\n      } else if (Symbol.iterator in Object(arr)) {\\n        return sliceIterator(arr, i);\\n      } else {\\n        throw new TypeError(\\"Invalid attempt to destructure non-iterable instance\\");\\n      }\\n    };\\n  })();\\n");\n\nhelpers.slicedToArrayLoose = (0, _babelTemplate2.default)("\\n  (function (arr, i) {\\n    if (Array.isArray(arr)) {\\n      return arr;\\n    } else if (Symbol.iterator in Object(arr)) {\\n      var _arr = [];\\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\\n        _arr.push(_step.value);\\n        if (i && _arr.length === i) break;\\n      }\\n      return _arr;\\n    } else {\\n      throw new TypeError(\\"Invalid attempt to destructure non-iterable instance\\");\\n    }\\n  });\\n");\n\nhelpers.taggedTemplateLiteral = (0, _babelTemplate2.default)("\\n  (function (strings, raw) {\\n    return Object.freeze(Object.defineProperties(strings, {\\n        raw: { value: Object.freeze(raw) }\\n    }));\\n  });\\n");\n\nhelpers.taggedTemplateLiteralLoose = (0, _babelTemplate2.default)("\\n  (function (strings, raw) {\\n    strings.raw = raw;\\n    return strings;\\n  });\\n");\n\nhelpers.temporalRef = (0, _babelTemplate2.default)("\\n  (function (val, name, undef) {\\n    if (val === undef) {\\n      throw new ReferenceError(name + \\" is not defined - temporal dead zone\\");\\n    } else {\\n      return val;\\n    }\\n  })\\n");\n\nhelpers.temporalUndefined = (0, _babelTemplate2.default)("\\n  ({})\\n");\n\nhelpers.toArray = (0, _babelTemplate2.default)("\\n  (function (arr) {\\n    return Array.isArray(arr) ? arr : Array.from(arr);\\n  });\\n");\n\nhelpers.toConsumableArray = (0, _babelTemplate2.default)("\\n  (function (arr) {\\n    if (Array.isArray(arr)) {\\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\\n      return arr2;\\n    } else {\\n      return Array.from(arr);\\n    }\\n  });\\n");\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-helpers/lib/helpers.js?')},"./node_modules/babel-helpers/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.list = undefined;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.get = get;\n\nvar _helpers = __webpack_require__("./node_modules/babel-helpers/lib/helpers.js");\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction get(name) {\n  var fn = _helpers2.default[name];\n  if (!fn) throw new ReferenceError("Unknown helper " + name);\n\n  return fn().expression;\n}\n\nvar list = exports.list = (0, _keys2.default)(_helpers2.default).map(function (name) {\n  return name.replace(/^_/, "");\n}).filter(function (name) {\n  return name !== "__esModule";\n});\n\nexports.default = get;\n\n//# sourceURL=webpack:///./node_modules/babel-helpers/lib/index.js?')},"./node_modules/babel-messages/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.MESSAGES = undefined;\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.get = get;\nexports.parseArgs = parseArgs;\n\nvar _util = __webpack_require__("./node_modules/util/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MESSAGES = exports.MESSAGES = {\n  tailCallReassignmentDeopt: "Function reference has been reassigned, so it will probably be dereferenced, therefore we can\'t optimise this with confidence",\n  classesIllegalBareSuper: "Illegal use of bare super",\n  classesIllegalSuperCall: "Direct super call is illegal in non-constructor, use super.$1() instead",\n  scopeDuplicateDeclaration: "Duplicate declaration $1",\n  settersNoRest: "Setters aren\'t allowed to have a rest",\n  noAssignmentsInForHead: "No assignments allowed in for-in/of head",\n  expectedMemberExpressionOrIdentifier: "Expected type MemberExpression or Identifier",\n  invalidParentForThisNode: "We don\'t know how to handle this node within the current parent - please open an issue",\n  readOnly: "$1 is read-only",\n  unknownForHead: "Unknown node type $1 in ForStatement",\n  didYouMean: "Did you mean $1?",\n  codeGeneratorDeopt: "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",\n  missingTemplatesDirectory: "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",\n  unsupportedOutputType: "Unsupported output type $1",\n  illegalMethodName: "Illegal method name $1",\n  lostTrackNodePath: "We lost track of this node\'s position, likely because the AST was directly manipulated",\n\n  modulesIllegalExportName: "Illegal export $1",\n  modulesDuplicateDeclarations: "Duplicate module declarations with the same source but in different scopes",\n\n  undeclaredVariable: "Reference to undeclared variable $1",\n  undeclaredVariableType: "Referencing a type alias outside of a type annotation",\n  undeclaredVariableSuggestion: "Reference to undeclared variable $1 - did you mean $2?",\n\n  traverseNeedsParent: "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",\n  traverseVerifyRootFunction: "You passed `traverse()` a function when it expected a visitor object, are you sure you didn\'t mean `{ enter: Function }`?",\n  traverseVerifyVisitorProperty: "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",\n  traverseVerifyNodeType: "You gave us a visitor for the node type $1 but it\'s not a valid type",\n\n  pluginNotObject: "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",\n  pluginNotFunction: "Plugin $2 specified in $1 was expected to return a function but returned $3",\n  pluginUnknown: "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",\n  pluginInvalidProperty: "Plugin $2 specified in $1 provided an invalid property of $3"\n};\n\nfunction get(key) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var msg = MESSAGES[key];\n  if (!msg) throw new ReferenceError("Unknown message " + (0, _stringify2.default)(key));\n\n  args = parseArgs(args);\n\n  return msg.replace(/\\$(\\d+)/g, function (str, i) {\n    return args[i - 1];\n  });\n}\n\nfunction parseArgs(args) {\n  return args.map(function (val) {\n    if (val != null && val.inspect) {\n      return val.inspect();\n    } else {\n      try {\n        return (0, _stringify2.default)(val) || val + "";\n      } catch (e) {\n        return util.inspect(val);\n      }\n    }\n  });\n}\n\n//# sourceURL=webpack:///./node_modules/babel-messages/lib/index.js?')},"./node_modules/babel-plugin-check-es2015-constants/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var messages = _ref.messages;\n\n  return {\n    visitor: {\n      Scope: function Scope(_ref2) {\n        var scope = _ref2.scope;\n\n        for (var name in scope.bindings) {\n          var binding = scope.bindings[name];\n          if (binding.kind !== "const" && binding.kind !== "module") continue;\n\n          for (var _iterator = binding.constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n            var _ref3;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref3 = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref3 = _i.value;\n            }\n\n            var violation = _ref3;\n\n            throw violation.buildCodeFrameError(messages.get("readOnly", name));\n          }\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-check-es2015-constants/lib/index.js?')},"./node_modules/babel-plugin-syntax-async-functions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("asyncFunctions");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-async-functions/lib/index.js?')},"./node_modules/babel-plugin-syntax-async-generators/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("asyncGenerators");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-async-generators/lib/index.js?')},"./node_modules/babel-plugin-syntax-class-constructor-call/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("classConstructorCall");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-class-constructor-call/lib/index.js?')},"./node_modules/babel-plugin-syntax-class-properties/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("classProperties");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-class-properties/lib/index.js?')},"./node_modules/babel-plugin-syntax-decorators/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("decorators");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-decorators/lib/index.js?')},"./node_modules/babel-plugin-syntax-do-expressions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("doExpressions");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-do-expressions/lib/index.js?')},"./node_modules/babel-plugin-syntax-dynamic-import/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("dynamicImport");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-dynamic-import/lib/index.js?')},"./node_modules/babel-plugin-syntax-exponentiation-operator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("exponentiationOperator");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-exponentiation-operator/lib/index.js?')},"./node_modules/babel-plugin-syntax-export-extensions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("exportExtensions");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-export-extensions/lib/index.js?')},"./node_modules/babel-plugin-syntax-flow/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("flow");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-flow/lib/index.js?')},"./node_modules/babel-plugin-syntax-function-bind/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("functionBind");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-function-bind/lib/index.js?')},"./node_modules/babel-plugin-syntax-object-rest-spread/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("objectRestSpread");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-object-rest-spread/lib/index.js?')},"./node_modules/babel-plugin-syntax-trailing-function-commas/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    manipulateOptions: function manipulateOptions(opts, parserOpts) {\n      parserOpts.plugins.push("trailingFunctionCommas");\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-syntax-trailing-function-commas/lib/index.js?')},"./node_modules/babel-plugin-transform-async-generator-functions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var yieldStarVisitor = {\n    Function: function Function(path) {\n      path.skip();\n    },\n    YieldExpression: function YieldExpression(_ref2, state) {\n      var node = _ref2.node;\n\n      if (!node.delegate) return;\n      var callee = state.addHelper("asyncGeneratorDelegate");\n      node.argument = t.callExpression(callee, [t.callExpression(state.addHelper("asyncIterator"), [node.argument]), t.memberExpression(state.addHelper("asyncGenerator"), t.identifier("await"))]);\n    }\n  };\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-async-generators/lib/index.js"),\n    visitor: {\n      Function: function Function(path, state) {\n        if (!path.node.async || !path.node.generator) return;\n\n        path.traverse(yieldStarVisitor, state);\n\n        (0, _babelHelperRemapAsyncToGenerator2.default)(path, state.file, {\n          wrapAsync: t.memberExpression(state.addHelper("asyncGenerator"), t.identifier("wrap")),\n          wrapAwait: t.memberExpression(state.addHelper("asyncGenerator"), t.identifier("await"))\n        });\n      }\n    }\n  };\n};\n\nvar _babelHelperRemapAsyncToGenerator = __webpack_require__("./node_modules/babel-helper-remap-async-to-generator/lib/index.js");\n\nvar _babelHelperRemapAsyncToGenerator2 = _interopRequireDefault(_babelHelperRemapAsyncToGenerator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-async-generator-functions/lib/index.js?')},"./node_modules/babel-plugin-transform-async-to-generator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-async-functions/lib/index.js"),\n\n    visitor: {\n      Function: function Function(path, state) {\n        if (!path.node.async || path.node.generator) return;\n\n        (0, _babelHelperRemapAsyncToGenerator2.default)(path, state.file, {\n          wrapAsync: state.addHelper("asyncToGenerator")\n        });\n      }\n    }\n  };\n};\n\nvar _babelHelperRemapAsyncToGenerator = __webpack_require__("./node_modules/babel-helper-remap-async-to-generator/lib/index.js");\n\nvar _babelHelperRemapAsyncToGenerator2 = _interopRequireDefault(_babelHelperRemapAsyncToGenerator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-async-to-generator/lib/index.js?')},"./node_modules/babel-plugin-transform-class-constructor-call/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var ALREADY_VISITED = (0, _symbol2.default)();\n\n  function findConstructorCall(path) {\n    var methods = path.get("body.body");\n\n    for (var _iterator = methods, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var method = _ref2;\n\n      if (method.node.kind === "constructorCall") {\n        return method;\n      }\n    }\n\n    return null;\n  }\n\n  function handleClassWithCall(constructorCall, classPath) {\n    var _classPath = classPath,\n        node = _classPath.node;\n\n    var ref = node.id || classPath.scope.generateUidIdentifier("class");\n\n    if (classPath.parentPath.isExportDefaultDeclaration()) {\n      classPath = classPath.parentPath;\n      classPath.insertAfter(t.exportDefaultDeclaration(ref));\n    }\n\n    classPath.replaceWithMultiple(buildWrapper({\n      CLASS_REF: classPath.scope.generateUidIdentifier(ref.name),\n      CALL_REF: classPath.scope.generateUidIdentifier(ref.name + "Call"),\n      CALL: t.functionExpression(null, constructorCall.node.params, constructorCall.node.body),\n      CLASS: t.toExpression(node),\n      WRAPPER_REF: ref\n    }));\n\n    constructorCall.remove();\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-class-constructor-call/lib/index.js"),\n\n    visitor: {\n      Class: function Class(path) {\n        if (path.node[ALREADY_VISITED]) return;\n        path.node[ALREADY_VISITED] = true;\n\n        var constructorCall = findConstructorCall(path);\n\n        if (constructorCall) {\n          handleClassWithCall(constructorCall, path);\n        } else {\n          return;\n        }\n      }\n    }\n  };\n};\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildWrapper = (0, _babelTemplate2.default)("\\n  let CLASS_REF = CLASS;\\n  var CALL_REF = CALL;\\n  var WRAPPER_REF = function (...args) {\\n    if (this instanceof WRAPPER_REF) {\\n      return Reflect.construct(CLASS_REF, args);\\n    } else {\\n      return CALL_REF.apply(this, args);\\n    }\\n  };\\n  WRAPPER_REF.__proto__ = CLASS_REF;\\n  WRAPPER_REF;\\n");\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-class-constructor-call/lib/index.js?')},"./node_modules/babel-plugin-transform-class-properties/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var findBareSupers = {\n    Super: function Super(path) {\n      if (path.parentPath.isCallExpression({ callee: path.node })) {\n        this.push(path.parentPath);\n      }\n    }\n  };\n\n  var referenceVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path) {\n      if (this.scope.hasOwnBinding(path.node.name)) {\n        this.collision = true;\n        path.skip();\n      }\n    }\n  };\n\n  var buildObjectDefineProperty = (0, _babelTemplate2.default)("\\n    Object.defineProperty(REF, KEY, {\\n      // configurable is false by default\\n      enumerable: true,\\n      writable: true,\\n      value: VALUE\\n    });\\n  ");\n\n  var buildClassPropertySpec = function buildClassPropertySpec(ref, _ref2) {\n    var key = _ref2.key,\n        value = _ref2.value,\n        computed = _ref2.computed;\n    return buildObjectDefineProperty({\n      REF: ref,\n      KEY: t.isIdentifier(key) && !computed ? t.stringLiteral(key.name) : key,\n      VALUE: value ? value : t.identifier("undefined")\n    });\n  };\n\n  var buildClassPropertyNonSpec = function buildClassPropertyNonSpec(ref, _ref3) {\n    var key = _ref3.key,\n        value = _ref3.value,\n        computed = _ref3.computed;\n    return t.expressionStatement(t.assignmentExpression("=", t.memberExpression(ref, key, computed || t.isLiteral(key)), value));\n  };\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-class-properties/lib/index.js"),\n\n    visitor: {\n      Class: function Class(path, state) {\n        var buildClassProperty = state.opts.spec ? buildClassPropertySpec : buildClassPropertyNonSpec;\n        var isDerived = !!path.node.superClass;\n        var constructor = void 0;\n        var props = [];\n        var body = path.get("body");\n\n        for (var _iterator = body.get("body"), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref4;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref4 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref4 = _i.value;\n          }\n\n          var _path = _ref4;\n\n          if (_path.isClassProperty()) {\n            props.push(_path);\n          } else if (_path.isClassMethod({ kind: "constructor" })) {\n            constructor = _path;\n          }\n        }\n\n        if (!props.length) return;\n\n        var nodes = [];\n        var ref = void 0;\n\n        if (path.isClassExpression() || !path.node.id) {\n          (0, _babelHelperFunctionName2.default)(path);\n          ref = path.scope.generateUidIdentifier("class");\n        } else {\n          ref = path.node.id;\n        }\n\n        var instanceBody = [];\n\n        for (var _iterator2 = props, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref5;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref5 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref5 = _i2.value;\n          }\n\n          var _prop = _ref5;\n\n          var propNode = _prop.node;\n          if (propNode.decorators && propNode.decorators.length > 0) continue;\n\n          if (!state.opts.spec && !propNode.value) continue;\n\n          var isStatic = propNode.static;\n\n          if (isStatic) {\n            nodes.push(buildClassProperty(ref, propNode));\n          } else {\n            if (!propNode.value) continue;\n            instanceBody.push(buildClassProperty(t.thisExpression(), propNode));\n          }\n        }\n\n        if (instanceBody.length) {\n          if (!constructor) {\n            var newConstructor = t.classMethod("constructor", t.identifier("constructor"), [], t.blockStatement([]));\n            if (isDerived) {\n              newConstructor.params = [t.restElement(t.identifier("args"))];\n              newConstructor.body.body.push(t.returnStatement(t.callExpression(t.super(), [t.spreadElement(t.identifier("args"))])));\n            }\n\n            var _body$unshiftContaine = body.unshiftContainer("body", newConstructor);\n\n            constructor = _body$unshiftContaine[0];\n          }\n\n          var collisionState = {\n            collision: false,\n            scope: constructor.scope\n          };\n\n          for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref6;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref6 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref6 = _i3.value;\n            }\n\n            var prop = _ref6;\n\n            prop.traverse(referenceVisitor, collisionState);\n            if (collisionState.collision) break;\n          }\n\n          if (collisionState.collision) {\n            var initialisePropsRef = path.scope.generateUidIdentifier("initialiseProps");\n\n            nodes.push(t.variableDeclaration("var", [t.variableDeclarator(initialisePropsRef, t.functionExpression(null, [], t.blockStatement(instanceBody)))]));\n\n            instanceBody = [t.expressionStatement(t.callExpression(t.memberExpression(initialisePropsRef, t.identifier("call")), [t.thisExpression()]))];\n          }\n\n          if (isDerived) {\n            var bareSupers = [];\n            constructor.traverse(findBareSupers, bareSupers);\n            for (var _iterator4 = bareSupers, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n              var _ref7;\n\n              if (_isArray4) {\n                if (_i4 >= _iterator4.length) break;\n                _ref7 = _iterator4[_i4++];\n              } else {\n                _i4 = _iterator4.next();\n                if (_i4.done) break;\n                _ref7 = _i4.value;\n              }\n\n              var bareSuper = _ref7;\n\n              bareSuper.insertAfter(instanceBody);\n            }\n          } else {\n            constructor.get("body").unshiftContainer("body", instanceBody);\n          }\n        }\n\n        for (var _iterator5 = props, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n          var _ref8;\n\n          if (_isArray5) {\n            if (_i5 >= _iterator5.length) break;\n            _ref8 = _iterator5[_i5++];\n          } else {\n            _i5 = _iterator5.next();\n            if (_i5.done) break;\n            _ref8 = _i5.value;\n          }\n\n          var _prop2 = _ref8;\n\n          _prop2.remove();\n        }\n\n        if (!nodes.length) return;\n\n        if (path.isClassExpression()) {\n          path.scope.push({ id: ref });\n          path.replaceWith(t.assignmentExpression("=", ref, path.node));\n        } else {\n          if (!path.node.id) {\n            path.node.id = ref;\n          }\n\n          if (path.parentPath.isExportDeclaration()) {\n            path = path.parentPath;\n          }\n        }\n\n        path.insertAfter(nodes);\n      },\n      ArrowFunctionExpression: function ArrowFunctionExpression(path) {\n        var classExp = path.get("body");\n        if (!classExp.isClassExpression()) return;\n\n        var body = classExp.get("body");\n        var members = body.get("body");\n        if (members.some(function (member) {\n          return member.isClassProperty();\n        })) {\n          path.ensureBlock();\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-class-properties/lib/index.js?')},"./node_modules/babel-plugin-transform-decorators/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function cleanDecorators(decorators) {\n    return decorators.reverse().map(function (dec) {\n      return dec.expression;\n    });\n  }\n\n  function transformClass(path, ref, state) {\n    var nodes = [];\n\n    state;\n\n    var classDecorators = path.node.decorators;\n    if (classDecorators) {\n      path.node.decorators = null;\n      classDecorators = cleanDecorators(classDecorators);\n\n      for (var _iterator = classDecorators, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var decorator = _ref2;\n\n        nodes.push(buildClassDecorator({\n          CLASS_REF: ref,\n          DECORATOR: decorator\n        }));\n      }\n    }\n\n    var map = (0, _create2.default)(null);\n\n    for (var _iterator2 = path.get("body.body"), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var method = _ref3;\n\n      var decorators = method.node.decorators;\n      if (!decorators) continue;\n\n      var _alias = t.toKeyAlias(method.node);\n      map[_alias] = map[_alias] || [];\n      map[_alias].push(method.node);\n\n      method.remove();\n    }\n\n    for (var alias in map) {\n      var items = map[alias];\n\n      items;\n    }\n\n    return nodes;\n  }\n\n  function hasDecorators(path) {\n    if (path.isClass()) {\n      if (path.node.decorators) return true;\n\n      for (var _iterator3 = path.node.body.body, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var method = _ref4;\n\n        if (method.decorators) {\n          return true;\n        }\n      }\n    } else if (path.isObjectExpression()) {\n      for (var _iterator4 = path.node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n        var _ref5;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref5 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref5 = _i4.value;\n        }\n\n        var prop = _ref5;\n\n        if (prop.decorators) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function doError(path) {\n    throw path.buildCodeFrameError("Decorators are not officially supported yet in 6.x pending a proposal update.\\nHowever, if you need to use them you can install the legacy decorators transform with:\\n\\nnpm install babel-plugin-transform-decorators-legacy --save-dev\\n\\nand add the following line to your .babelrc file:\\n\\n{\\n  \\"plugins\\": [\\"transform-decorators-legacy\\"]\\n}\\n\\nThe repo url is: https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy.\\n    ");\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-decorators/lib/index.js"),\n\n    visitor: {\n      ClassExpression: function ClassExpression(path) {\n        if (!hasDecorators(path)) return;\n        doError(path);\n\n        (0, _babelHelperExplodeClass2.default)(path);\n\n        var ref = path.scope.generateDeclaredUidIdentifier("ref");\n        var nodes = [];\n\n        nodes.push(t.assignmentExpression("=", ref, path.node));\n\n        nodes = nodes.concat(transformClass(path, ref, this));\n\n        nodes.push(ref);\n\n        path.replaceWith(t.sequenceExpression(nodes));\n      },\n      ClassDeclaration: function ClassDeclaration(path) {\n        if (!hasDecorators(path)) return;\n        doError(path);\n        (0, _babelHelperExplodeClass2.default)(path);\n\n        var ref = path.node.id;\n        var nodes = [];\n\n        nodes = nodes.concat(transformClass(path, ref, this).map(function (expr) {\n          return t.expressionStatement(expr);\n        }));\n        nodes.push(t.expressionStatement(ref));\n\n        path.insertAfter(nodes);\n      },\n      ObjectExpression: function ObjectExpression(path) {\n        if (!hasDecorators(path)) return;\n        doError(path);\n      }\n    }\n  };\n};\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelHelperExplodeClass = __webpack_require__("./node_modules/babel-helper-explode-class/lib/index.js");\n\nvar _babelHelperExplodeClass2 = _interopRequireDefault(_babelHelperExplodeClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildClassDecorator = (0, _babelTemplate2.default)("\\n  CLASS_REF = DECORATOR(CLASS_REF) || CLASS_REF;\\n");\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-decorators/lib/index.js?')},"./node_modules/babel-plugin-transform-do-expressions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-do-expressions/lib/index.js"),\n\n    visitor: {\n      DoExpression: function DoExpression(path) {\n        var body = path.node.body.body;\n        if (body.length) {\n          path.replaceWithMultiple(body);\n        } else {\n          path.replaceWith(path.scope.buildUndefinedNode());\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-do-expressions/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-arrow-functions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  return {\n    visitor: {\n      ArrowFunctionExpression: function ArrowFunctionExpression(path, state) {\n        if (state.opts.spec) {\n          var node = path.node;\n\n          if (node.shadow) return;\n\n          node.shadow = { this: false };\n          node.type = "FunctionExpression";\n\n          var boundThis = t.thisExpression();\n          boundThis._forceShadow = path;\n\n          path.ensureBlock();\n          path.get("body").unshiftContainer("body", t.expressionStatement(t.callExpression(state.addHelper("newArrowCheck"), [t.thisExpression(), boundThis])));\n\n          path.replaceWith(t.callExpression(t.memberExpression(node, t.identifier("bind")), [t.thisExpression()]));\n        } else {\n          path.arrowFunctionToShadowed();\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-arrow-functions/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-block-scoped-functions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function statementList(key, path) {\n    var paths = path.get(key);\n\n    for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _path = _ref2;\n\n      var func = _path.node;\n      if (!_path.isFunctionDeclaration()) continue;\n\n      var declar = t.variableDeclaration("let", [t.variableDeclarator(func.id, t.toExpression(func))]);\n\n      declar._blockHoist = 2;\n\n      func.id = null;\n\n      _path.replaceWith(declar);\n    }\n  }\n\n  return {\n    visitor: {\n      BlockStatement: function BlockStatement(path) {\n        var node = path.node,\n            parent = path.parent;\n\n        if (t.isFunction(parent, { body: node }) || t.isExportDeclaration(parent)) {\n          return;\n        }\n\n        statementList("body", path);\n      },\n      SwitchCase: function SwitchCase(path) {\n        statementList("consequent", path);\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-block-scoped-functions/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-block-scoping/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = function () {\n  return {\n    visitor: {\n      VariableDeclaration: function VariableDeclaration(path, file) {\n        var node = path.node,\n            parent = path.parent,\n            scope = path.scope;\n\n        if (!isBlockScoped(node)) return;\n        convertBlockScopedToVar(path, null, parent, scope, true);\n\n        if (node._tdzThis) {\n          var nodes = [node];\n\n          for (var i = 0; i < node.declarations.length; i++) {\n            var decl = node.declarations[i];\n            if (decl.init) {\n              var assign = t.assignmentExpression("=", decl.id, decl.init);\n              assign._ignoreBlockScopingTDZ = true;\n              nodes.push(t.expressionStatement(assign));\n            }\n            decl.init = file.addHelper("temporalUndefined");\n          }\n\n          node._blockHoist = 2;\n\n          if (path.isCompletionRecord()) {\n            nodes.push(t.expressionStatement(scope.buildUndefinedNode()));\n          }\n\n          path.replaceWithMultiple(nodes);\n        }\n      },\n      Loop: function Loop(path, file) {\n        var node = path.node,\n            parent = path.parent,\n            scope = path.scope;\n\n        t.ensureBlock(node);\n        var blockScoping = new BlockScoping(path, path.get("body"), parent, scope, file);\n        var replace = blockScoping.run();\n        if (replace) path.replaceWith(replace);\n      },\n      CatchClause: function CatchClause(path, file) {\n        var parent = path.parent,\n            scope = path.scope;\n\n        var blockScoping = new BlockScoping(null, path.get("body"), parent, scope, file);\n        blockScoping.run();\n      },\n      "BlockStatement|SwitchStatement|Program": function BlockStatementSwitchStatementProgram(path, file) {\n        if (!ignoreBlock(path)) {\n          var blockScoping = new BlockScoping(null, path, path.parent, path.scope, file);\n          blockScoping.run();\n        }\n      }\n    }\n  };\n};\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _tdz = __webpack_require__("./node_modules/babel-plugin-transform-es2015-block-scoping/lib/tdz.js");\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _values = __webpack_require__("./node_modules/lodash/values.js");\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _extend = __webpack_require__("./node_modules/lodash/extend.js");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ignoreBlock(path) {\n  return t.isLoop(path.parent) || t.isCatchClause(path.parent);\n}\n\nvar buildRetCheck = (0, _babelTemplate2.default)("\\n  if (typeof RETURN === \\"object\\") return RETURN.v;\\n");\n\nfunction isBlockScoped(node) {\n  if (!t.isVariableDeclaration(node)) return false;\n  if (node[t.BLOCK_SCOPED_SYMBOL]) return true;\n  if (node.kind !== "let" && node.kind !== "const") return false;\n  return true;\n}\n\nfunction convertBlockScopedToVar(path, node, parent, scope) {\n  var moveBindingsToParent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (!node) {\n    node = path.node;\n  }\n\n  if (!t.isFor(parent)) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      declar.init = declar.init || scope.buildUndefinedNode();\n    }\n  }\n\n  node[t.BLOCK_SCOPED_SYMBOL] = true;\n  node.kind = "var";\n\n  if (moveBindingsToParent) {\n    var parentScope = scope.getFunctionParent();\n    var ids = path.getBindingIdentifiers();\n    for (var name in ids) {\n      var binding = scope.getOwnBinding(name);\n      if (binding) binding.kind = "var";\n      scope.moveBindingTo(name, parentScope);\n    }\n  }\n}\n\nfunction isVar(node) {\n  return t.isVariableDeclaration(node, { kind: "var" }) && !isBlockScoped(node);\n}\n\nvar letReferenceBlockVisitor = _babelTraverse2.default.visitors.merge([{\n  Loop: {\n    enter: function enter(path, state) {\n      state.loopDepth++;\n    },\n    exit: function exit(path, state) {\n      state.loopDepth--;\n    }\n  },\n  Function: function Function(path, state) {\n    if (state.loopDepth > 0) {\n      path.traverse(letReferenceFunctionVisitor, state);\n    }\n    return path.skip();\n  }\n}, _tdz.visitor]);\n\nvar letReferenceFunctionVisitor = _babelTraverse2.default.visitors.merge([{\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var ref = state.letReferences[path.node.name];\n\n    if (!ref) return;\n\n    var localBinding = path.scope.getBindingIdentifier(path.node.name);\n    if (localBinding && localBinding !== ref) return;\n\n    state.closurify = true;\n  }\n}, _tdz.visitor]);\n\nvar hoistVarDeclarationsVisitor = {\n  enter: function enter(path, self) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (path.isForStatement()) {\n      if (isVar(node.init, node)) {\n        var nodes = self.pushDeclar(node.init);\n        if (nodes.length === 1) {\n          node.init = nodes[0];\n        } else {\n          node.init = t.sequenceExpression(nodes);\n        }\n      }\n    } else if (path.isFor()) {\n      if (isVar(node.left, node)) {\n        self.pushDeclar(node.left);\n        node.left = node.left.declarations[0].id;\n      }\n    } else if (isVar(node, parent)) {\n      path.replaceWithMultiple(self.pushDeclar(node).map(function (expr) {\n        return t.expressionStatement(expr);\n      }));\n    } else if (path.isFunction()) {\n      return path.skip();\n    }\n  }\n};\n\nvar loopLabelVisitor = {\n  LabeledStatement: function LabeledStatement(_ref, state) {\n    var node = _ref.node;\n\n    state.innerLabels.push(node.label.name);\n  }\n};\n\nvar continuationVisitor = {\n  enter: function enter(path, state) {\n    if (path.isAssignmentExpression() || path.isUpdateExpression()) {\n      var bindings = path.getBindingIdentifiers();\n      for (var name in bindings) {\n        if (state.outsideReferences[name] !== path.scope.getBindingIdentifier(name)) continue;\n        state.reassignments[name] = true;\n      }\n    }\n  }\n};\n\nfunction loopNodeTo(node) {\n  if (t.isBreakStatement(node)) {\n    return "break";\n  } else if (t.isContinueStatement(node)) {\n    return "continue";\n  }\n}\n\nvar loopVisitor = {\n  Loop: function Loop(path, state) {\n    var oldIgnoreLabeless = state.ignoreLabeless;\n    state.ignoreLabeless = true;\n    path.traverse(loopVisitor, state);\n    state.ignoreLabeless = oldIgnoreLabeless;\n    path.skip();\n  },\n  Function: function Function(path) {\n    path.skip();\n  },\n  SwitchCase: function SwitchCase(path, state) {\n    var oldInSwitchCase = state.inSwitchCase;\n    state.inSwitchCase = true;\n    path.traverse(loopVisitor, state);\n    state.inSwitchCase = oldInSwitchCase;\n    path.skip();\n  },\n  "BreakStatement|ContinueStatement|ReturnStatement": function BreakStatementContinueStatementReturnStatement(path, state) {\n    var node = path.node,\n        parent = path.parent,\n        scope = path.scope;\n\n    if (node[this.LOOP_IGNORE]) return;\n\n    var replace = void 0;\n    var loopText = loopNodeTo(node);\n\n    if (loopText) {\n      if (node.label) {\n        if (state.innerLabels.indexOf(node.label.name) >= 0) {\n          return;\n        }\n\n        loopText = loopText + "|" + node.label.name;\n      } else {\n        if (state.ignoreLabeless) return;\n\n        if (state.inSwitchCase) return;\n\n        if (t.isBreakStatement(node) && t.isSwitchCase(parent)) return;\n      }\n\n      state.hasBreakContinue = true;\n      state.map[loopText] = node;\n      replace = t.stringLiteral(loopText);\n    }\n\n    if (path.isReturnStatement()) {\n      state.hasReturn = true;\n      replace = t.objectExpression([t.objectProperty(t.identifier("v"), node.argument || scope.buildUndefinedNode())]);\n    }\n\n    if (replace) {\n      replace = t.returnStatement(replace);\n      replace[this.LOOP_IGNORE] = true;\n      path.skip();\n      path.replaceWith(t.inherits(replace, node));\n    }\n  }\n};\n\nvar BlockScoping = function () {\n  function BlockScoping(loopPath, blockPath, parent, scope, file) {\n    (0, _classCallCheck3.default)(this, BlockScoping);\n\n    this.parent = parent;\n    this.scope = scope;\n    this.file = file;\n\n    this.blockPath = blockPath;\n    this.block = blockPath.node;\n\n    this.outsideLetReferences = (0, _create2.default)(null);\n    this.hasLetReferences = false;\n    this.letReferences = (0, _create2.default)(null);\n    this.body = [];\n\n    if (loopPath) {\n      this.loopParent = loopPath.parent;\n      this.loopLabel = t.isLabeledStatement(this.loopParent) && this.loopParent.label;\n      this.loopPath = loopPath;\n      this.loop = loopPath.node;\n    }\n  }\n\n  BlockScoping.prototype.run = function run() {\n    var block = this.block;\n    if (block._letDone) return;\n    block._letDone = true;\n\n    var needsClosure = this.getLetReferences();\n\n    if (t.isFunction(this.parent) || t.isProgram(this.block)) {\n      this.updateScopeInfo();\n      return;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    if (needsClosure) {\n      this.wrapClosure();\n    } else {\n      this.remap();\n    }\n\n    this.updateScopeInfo(needsClosure);\n\n    if (this.loopLabel && !t.isLabeledStatement(this.loopParent)) {\n      return t.labeledStatement(this.loopLabel, this.loop);\n    }\n  };\n\n  BlockScoping.prototype.updateScopeInfo = function updateScopeInfo(wrappedInClosure) {\n    var scope = this.scope;\n    var parentScope = scope.getFunctionParent();\n    var letRefs = this.letReferences;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n      var binding = scope.getBinding(ref.name);\n      if (!binding) continue;\n      if (binding.kind === "let" || binding.kind === "const") {\n        binding.kind = "var";\n\n        if (wrappedInClosure) {\n          scope.removeBinding(ref.name);\n        } else {\n          scope.moveBindingTo(ref.name, parentScope);\n        }\n      }\n    }\n  };\n\n  BlockScoping.prototype.remap = function remap() {\n    var letRefs = this.letReferences;\n    var scope = this.scope;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n\n      if (scope.parentHasBinding(key) || scope.hasGlobal(key)) {\n        if (scope.hasOwnBinding(key)) scope.rename(ref.name);\n\n        if (this.blockPath.scope.hasOwnBinding(key)) this.blockPath.scope.rename(ref.name);\n      }\n    }\n  };\n\n  BlockScoping.prototype.wrapClosure = function wrapClosure() {\n    if (this.file.opts.throwIfClosureRequired) {\n      throw this.blockPath.buildCodeFrameError("Compiling let/const in this block would add a closure " + "(throwIfClosureRequired).");\n    }\n    var block = this.block;\n\n    var outsideRefs = this.outsideLetReferences;\n\n    if (this.loop) {\n      for (var name in outsideRefs) {\n        var id = outsideRefs[name];\n\n        if (this.scope.hasGlobal(id.name) || this.scope.parentHasBinding(id.name)) {\n          delete outsideRefs[id.name];\n          delete this.letReferences[id.name];\n\n          this.scope.rename(id.name);\n\n          this.letReferences[id.name] = id;\n          outsideRefs[id.name] = id;\n        }\n      }\n    }\n\n    this.has = this.checkLoop();\n\n    this.hoistVarDeclarations();\n\n    var params = (0, _values2.default)(outsideRefs);\n    var args = (0, _values2.default)(outsideRefs);\n\n    var isSwitch = this.blockPath.isSwitchStatement();\n\n    var fn = t.functionExpression(null, params, t.blockStatement(isSwitch ? [block] : block.body));\n    fn.shadow = true;\n\n    this.addContinuations(fn);\n\n    var ref = fn;\n\n    if (this.loop) {\n      ref = this.scope.generateUidIdentifier("loop");\n      this.loopPath.insertBefore(t.variableDeclaration("var", [t.variableDeclarator(ref, fn)]));\n    }\n\n    var call = t.callExpression(ref, args);\n    var ret = this.scope.generateUidIdentifier("ret");\n\n    var hasYield = _babelTraverse2.default.hasType(fn.body, this.scope, "YieldExpression", t.FUNCTION_TYPES);\n    if (hasYield) {\n      fn.generator = true;\n      call = t.yieldExpression(call, true);\n    }\n\n    var hasAsync = _babelTraverse2.default.hasType(fn.body, this.scope, "AwaitExpression", t.FUNCTION_TYPES);\n    if (hasAsync) {\n      fn.async = true;\n      call = t.awaitExpression(call);\n    }\n\n    this.buildClosure(ret, call);\n\n    if (isSwitch) this.blockPath.replaceWithMultiple(this.body);else block.body = this.body;\n  };\n\n  BlockScoping.prototype.buildClosure = function buildClosure(ret, call) {\n    var has = this.has;\n    if (has.hasReturn || has.hasBreakContinue) {\n      this.buildHas(ret, call);\n    } else {\n      this.body.push(t.expressionStatement(call));\n    }\n  };\n\n  BlockScoping.prototype.addContinuations = function addContinuations(fn) {\n    var state = {\n      reassignments: {},\n      outsideReferences: this.outsideLetReferences\n    };\n\n    this.scope.traverse(fn, continuationVisitor, state);\n\n    for (var i = 0; i < fn.params.length; i++) {\n      var param = fn.params[i];\n      if (!state.reassignments[param.name]) continue;\n\n      var newParam = this.scope.generateUidIdentifier(param.name);\n      fn.params[i] = newParam;\n\n      this.scope.rename(param.name, newParam.name, fn);\n\n      fn.body.body.push(t.expressionStatement(t.assignmentExpression("=", param, newParam)));\n    }\n  };\n\n  BlockScoping.prototype.getLetReferences = function getLetReferences() {\n    var _this = this;\n\n    var block = this.block;\n\n    var declarators = [];\n\n    if (this.loop) {\n      var init = this.loop.left || this.loop.init;\n      if (isBlockScoped(init)) {\n        declarators.push(init);\n        (0, _extend2.default)(this.outsideLetReferences, t.getBindingIdentifiers(init));\n      }\n    }\n\n    var addDeclarationsFromChild = function addDeclarationsFromChild(path, node) {\n      node = node || path.node;\n      if (t.isClassDeclaration(node) || t.isFunctionDeclaration(node) || isBlockScoped(node)) {\n        if (isBlockScoped(node)) {\n          convertBlockScopedToVar(path, node, block, _this.scope);\n        }\n        declarators = declarators.concat(node.declarations || node);\n      }\n      if (t.isLabeledStatement(node)) {\n        addDeclarationsFromChild(path.get("body"), node.body);\n      }\n    };\n\n    if (block.body) {\n      for (var i = 0; i < block.body.length; i++) {\n        var declarPath = this.blockPath.get("body")[i];\n        addDeclarationsFromChild(declarPath);\n      }\n    }\n\n    if (block.cases) {\n      for (var _i = 0; _i < block.cases.length; _i++) {\n        var consequents = block.cases[_i].consequent;\n\n        for (var j = 0; j < consequents.length; j++) {\n          var _declarPath = this.blockPath.get("cases")[_i];\n          var declar = consequents[j];\n          addDeclarationsFromChild(_declarPath, declar);\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < declarators.length; _i2++) {\n      var _declar = declarators[_i2];\n\n      var keys = t.getBindingIdentifiers(_declar, false, true);\n      (0, _extend2.default)(this.letReferences, keys);\n      this.hasLetReferences = true;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    var state = {\n      letReferences: this.letReferences,\n      closurify: false,\n      file: this.file,\n      loopDepth: 0\n    };\n\n    var loopOrFunctionParent = this.blockPath.find(function (path) {\n      return path.isLoop() || path.isFunction();\n    });\n    if (loopOrFunctionParent && loopOrFunctionParent.isLoop()) {\n      state.loopDepth++;\n    }\n\n    this.blockPath.traverse(letReferenceBlockVisitor, state);\n\n    return state.closurify;\n  };\n\n  BlockScoping.prototype.checkLoop = function checkLoop() {\n    var state = {\n      hasBreakContinue: false,\n      ignoreLabeless: false,\n      inSwitchCase: false,\n      innerLabels: [],\n      hasReturn: false,\n      isLoop: !!this.loop,\n      map: {},\n      LOOP_IGNORE: (0, _symbol2.default)()\n    };\n\n    this.blockPath.traverse(loopLabelVisitor, state);\n    this.blockPath.traverse(loopVisitor, state);\n\n    return state;\n  };\n\n  BlockScoping.prototype.hoistVarDeclarations = function hoistVarDeclarations() {\n    this.blockPath.traverse(hoistVarDeclarationsVisitor, this);\n  };\n\n  BlockScoping.prototype.pushDeclar = function pushDeclar(node) {\n    var declars = [];\n    var names = t.getBindingIdentifiers(node);\n    for (var name in names) {\n      declars.push(t.variableDeclarator(names[name]));\n    }\n\n    this.body.push(t.variableDeclaration(node.kind, declars));\n\n    var replace = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      if (!declar.init) continue;\n\n      var expr = t.assignmentExpression("=", declar.id, declar.init);\n      replace.push(t.inherits(expr, declar));\n    }\n\n    return replace;\n  };\n\n  BlockScoping.prototype.buildHas = function buildHas(ret, call) {\n    var body = this.body;\n\n    body.push(t.variableDeclaration("var", [t.variableDeclarator(ret, call)]));\n\n    var retCheck = void 0;\n    var has = this.has;\n    var cases = [];\n\n    if (has.hasReturn) {\n      retCheck = buildRetCheck({\n        RETURN: ret\n      });\n    }\n\n    if (has.hasBreakContinue) {\n      for (var key in has.map) {\n        cases.push(t.switchCase(t.stringLiteral(key), [has.map[key]]));\n      }\n\n      if (has.hasReturn) {\n        cases.push(t.switchCase(null, [retCheck]));\n      }\n\n      if (cases.length === 1) {\n        var single = cases[0];\n        body.push(t.ifStatement(t.binaryExpression("===", ret, single.test), single.consequent[0]));\n      } else {\n        if (this.loop) {\n          for (var i = 0; i < cases.length; i++) {\n            var caseConsequent = cases[i].consequent[0];\n            if (t.isBreakStatement(caseConsequent) && !caseConsequent.label) {\n              caseConsequent.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier("loop");\n            }\n          }\n        }\n\n        body.push(t.switchStatement(ret, cases));\n      }\n    } else {\n      if (has.hasReturn) {\n        body.push(retCheck);\n      }\n    }\n  };\n\n  return BlockScoping;\n}();\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-block-scoping/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-block-scoping/lib/tdz.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction getTDZStatus(refPath, bindingPath) {\n  var executionStatus = bindingPath._guessExecutionStatusRelativeTo(refPath);\n\n  if (executionStatus === "before") {\n    return "inside";\n  } else if (executionStatus === "after") {\n    return "outside";\n  } else {\n    return "maybe";\n  }\n}\n\nfunction buildTDZAssert(node, file) {\n  return t.callExpression(file.addHelper("temporalRef"), [node, t.stringLiteral(node.name), file.addHelper("temporalUndefined")]);\n}\n\nfunction isReference(node, scope, state) {\n  var declared = state.letReferences[node.name];\n  if (!declared) return false;\n\n  return scope.getBindingIdentifier(node.name) === declared;\n}\n\nvar visitor = exports.visitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    if (!this.file.opts.tdz) return;\n\n    var node = path.node,\n        parent = path.parent,\n        scope = path.scope;\n\n\n    if (path.parentPath.isFor({ left: node })) return;\n    if (!isReference(node, scope, state)) return;\n\n    var bindingPath = scope.getBinding(node.name).path;\n\n    var status = getTDZStatus(path, bindingPath);\n    if (status === "inside") return;\n\n    if (status === "maybe") {\n      var assert = buildTDZAssert(node, state.file);\n\n      bindingPath.parent._tdzThis = true;\n\n      path.skip();\n\n      if (path.parentPath.isUpdateExpression()) {\n        if (parent._ignoreBlockScopingTDZ) return;\n        path.parentPath.replaceWith(t.sequenceExpression([assert, parent]));\n      } else {\n        path.replaceWith(assert);\n      }\n    } else if (status === "outside") {\n      path.replaceWith(t.throwStatement(t.inherits(t.newExpression(t.identifier("ReferenceError"), [t.stringLiteral(node.name + " is not defined - temporal dead zone")]), node)));\n    }\n  },\n\n\n  AssignmentExpression: {\n    exit: function exit(path, state) {\n      if (!this.file.opts.tdz) return;\n\n      var node = path.node;\n\n      if (node._ignoreBlockScopingTDZ) return;\n\n      var nodes = [];\n      var ids = path.getBindingIdentifiers();\n\n      for (var name in ids) {\n        var id = ids[name];\n\n        if (isReference(id, path.scope, state)) {\n          nodes.push(buildTDZAssert(id, state.file));\n        }\n      }\n\n      if (nodes.length) {\n        node._ignoreBlockScopingTDZ = true;\n        nodes.push(node);\n        path.replaceWithMultiple(nodes.map(t.expressionStatement));\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-block-scoping/lib/tdz.js?')},"./node_modules/babel-plugin-transform-es2015-classes/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var VISITED = (0, _symbol2.default)();\n\n  return {\n    visitor: {\n      ExportDefaultDeclaration: function ExportDefaultDeclaration(path) {\n        if (!path.get("declaration").isClassDeclaration()) return;\n\n        var node = path.node;\n\n        var ref = node.declaration.id || path.scope.generateUidIdentifier("class");\n        node.declaration.id = ref;\n\n        path.replaceWith(node.declaration);\n        path.insertAfter(t.exportDefaultDeclaration(ref));\n      },\n      ClassDeclaration: function ClassDeclaration(path) {\n        var node = path.node;\n\n\n        var ref = node.id || path.scope.generateUidIdentifier("class");\n\n        path.replaceWith(t.variableDeclaration("let", [t.variableDeclarator(ref, t.toExpression(node))]));\n      },\n      ClassExpression: function ClassExpression(path, state) {\n        var node = path.node;\n\n        if (node[VISITED]) return;\n\n        var inferred = (0, _babelHelperFunctionName2.default)(path);\n        if (inferred && inferred !== node) return path.replaceWith(inferred);\n\n        node[VISITED] = true;\n\n        var Constructor = _vanilla2.default;\n        if (state.opts.loose) Constructor = _loose2.default;\n\n        path.replaceWith(new Constructor(path, state.file).run());\n      }\n    }\n  };\n};\n\nvar _loose = __webpack_require__("./node_modules/babel-plugin-transform-es2015-classes/lib/loose.js");\n\nvar _loose2 = _interopRequireDefault(_loose);\n\nvar _vanilla = __webpack_require__("./node_modules/babel-plugin-transform-es2015-classes/lib/vanilla.js");\n\nvar _vanilla2 = _interopRequireDefault(_vanilla);\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-classes/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-classes/lib/loose.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__("./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__("./node_modules/babel-runtime/helpers/inherits.js");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nvar _vanilla = __webpack_require__("./node_modules/babel-plugin-transform-es2015-classes/lib/vanilla.js");\n\nvar _vanilla2 = _interopRequireDefault(_vanilla);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar LooseClassTransformer = function (_VanillaTransformer) {\n  (0, _inherits3.default)(LooseClassTransformer, _VanillaTransformer);\n\n  function LooseClassTransformer() {\n    (0, _classCallCheck3.default)(this, LooseClassTransformer);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _VanillaTransformer.apply(this, arguments));\n\n    _this.isLoose = true;\n    return _this;\n  }\n\n  LooseClassTransformer.prototype._processMethod = function _processMethod(node, scope) {\n    if (!node.decorators) {\n\n      var classRef = this.classRef;\n      if (!node.static) classRef = t.memberExpression(classRef, t.identifier("prototype"));\n      var methodName = t.memberExpression(classRef, node.key, node.computed || t.isLiteral(node.key));\n\n      var func = t.functionExpression(null, node.params, node.body, node.generator, node.async);\n      func.returnType = node.returnType;\n      var key = t.toComputedKey(node, node.key);\n      if (t.isStringLiteral(key)) {\n        func = (0, _babelHelperFunctionName2.default)({\n          node: func,\n          id: key,\n          scope: scope\n        });\n      }\n\n      var expr = t.expressionStatement(t.assignmentExpression("=", methodName, func));\n      t.inheritsComments(expr, node);\n      this.body.push(expr);\n      return true;\n    }\n  };\n\n  return LooseClassTransformer;\n}(_vanilla2.default);\n\nexports.default = LooseClassTransformer;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-classes/lib/loose.js?')},"./node_modules/babel-plugin-transform-es2015-classes/lib/vanilla.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelHelperReplaceSupers = __webpack_require__("./node_modules/babel-helper-replace-supers/lib/index.js");\n\nvar _babelHelperReplaceSupers2 = _interopRequireDefault(_babelHelperReplaceSupers);\n\nvar _babelHelperOptimiseCallExpression = __webpack_require__("./node_modules/babel-helper-optimise-call-expression/lib/index.js");\n\nvar _babelHelperOptimiseCallExpression2 = _interopRequireDefault(_babelHelperOptimiseCallExpression);\n\nvar _babelHelperDefineMap = __webpack_require__("./node_modules/babel-helper-define-map/lib/index.js");\n\nvar defineMap = _interopRequireWildcard(_babelHelperDefineMap);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildDerivedConstructor = (0, _babelTemplate2.default)("\\n  (function () {\\n    super(...arguments);\\n  })\\n");\n\nvar noMethodVisitor = {\n  "FunctionExpression|FunctionDeclaration": function FunctionExpressionFunctionDeclaration(path) {\n    if (!path.is("shadow")) {\n      path.skip();\n    }\n  },\n  Method: function Method(path) {\n    path.skip();\n  }\n};\n\nvar verifyConstructorVisitor = _babelTraverse.visitors.merge([noMethodVisitor, {\n  Super: function Super(path) {\n    if (this.isDerived && !this.hasBareSuper && !path.parentPath.isCallExpression({ callee: path.node })) {\n      throw path.buildCodeFrameError("\'super.*\' is not allowed before super()");\n    }\n  },\n\n\n  CallExpression: {\n    exit: function exit(path) {\n      if (path.get("callee").isSuper()) {\n        this.hasBareSuper = true;\n\n        if (!this.isDerived) {\n          throw path.buildCodeFrameError("super() is only allowed in a derived constructor");\n        }\n      }\n    }\n  },\n\n  ThisExpression: function ThisExpression(path) {\n    if (this.isDerived && !this.hasBareSuper) {\n      if (!path.inShadow("this")) {\n        throw path.buildCodeFrameError("\'this\' is not allowed before super()");\n      }\n    }\n  }\n}]);\n\nvar findThisesVisitor = _babelTraverse.visitors.merge([noMethodVisitor, {\n  ThisExpression: function ThisExpression(path) {\n    this.superThises.push(path);\n  }\n}]);\n\nvar ClassTransformer = function () {\n  function ClassTransformer(path, file) {\n    (0, _classCallCheck3.default)(this, ClassTransformer);\n\n    this.parent = path.parent;\n    this.scope = path.scope;\n    this.node = path.node;\n    this.path = path;\n    this.file = file;\n\n    this.clearDescriptors();\n\n    this.instancePropBody = [];\n    this.instancePropRefs = {};\n    this.staticPropBody = [];\n    this.body = [];\n\n    this.bareSuperAfter = [];\n    this.bareSupers = [];\n\n    this.pushedConstructor = false;\n    this.pushedInherits = false;\n    this.isLoose = false;\n\n    this.superThises = [];\n\n    this.classId = this.node.id;\n\n    this.classRef = this.node.id ? t.identifier(this.node.id.name) : this.scope.generateUidIdentifier("class");\n\n    this.superName = this.node.superClass || t.identifier("Function");\n    this.isDerived = !!this.node.superClass;\n  }\n\n  ClassTransformer.prototype.run = function run() {\n    var _this = this;\n\n    var superName = this.superName;\n    var file = this.file;\n    var body = this.body;\n\n    var constructorBody = this.constructorBody = t.blockStatement([]);\n    this.constructor = this.buildConstructor();\n\n    var closureParams = [];\n    var closureArgs = [];\n\n    if (this.isDerived) {\n      closureArgs.push(superName);\n\n      superName = this.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(superName);\n\n      this.superName = superName;\n    }\n\n    this.buildBody();\n\n    constructorBody.body.unshift(t.expressionStatement(t.callExpression(file.addHelper("classCallCheck"), [t.thisExpression(), this.classRef])));\n\n    body = body.concat(this.staticPropBody.map(function (fn) {\n      return fn(_this.classRef);\n    }));\n\n    if (this.classId) {\n      if (body.length === 1) return t.toExpression(body[0]);\n    }\n\n    body.push(t.returnStatement(this.classRef));\n\n    var container = t.functionExpression(null, closureParams, t.blockStatement(body));\n    container.shadow = true;\n    return t.callExpression(container, closureArgs);\n  };\n\n  ClassTransformer.prototype.buildConstructor = function buildConstructor() {\n    var func = t.functionDeclaration(this.classRef, [], this.constructorBody);\n    t.inherits(func, this.node);\n    return func;\n  };\n\n  ClassTransformer.prototype.pushToMap = function pushToMap(node, enumerable) {\n    var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "value";\n    var scope = arguments[3];\n\n    var mutatorMap = void 0;\n    if (node.static) {\n      this.hasStaticDescriptors = true;\n      mutatorMap = this.staticMutatorMap;\n    } else {\n      this.hasInstanceDescriptors = true;\n      mutatorMap = this.instanceMutatorMap;\n    }\n\n    var map = defineMap.push(mutatorMap, node, kind, this.file, scope);\n\n    if (enumerable) {\n      map.enumerable = t.booleanLiteral(true);\n    }\n\n    return map;\n  };\n\n  ClassTransformer.prototype.constructorMeMaybe = function constructorMeMaybe() {\n    var hasConstructor = false;\n    var paths = this.path.get("body.body");\n    for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var path = _ref;\n\n      hasConstructor = path.equals("kind", "constructor");\n      if (hasConstructor) break;\n    }\n    if (hasConstructor) return;\n\n    var params = void 0,\n        body = void 0;\n\n    if (this.isDerived) {\n      var _constructor = buildDerivedConstructor().expression;\n      params = _constructor.params;\n      body = _constructor.body;\n    } else {\n      params = [];\n      body = t.blockStatement([]);\n    }\n\n    this.path.get("body").unshiftContainer("body", t.classMethod("constructor", t.identifier("constructor"), params, body));\n  };\n\n  ClassTransformer.prototype.buildBody = function buildBody() {\n    this.constructorMeMaybe();\n    this.pushBody();\n    this.verifyConstructor();\n\n    if (this.userConstructor) {\n      var constructorBody = this.constructorBody;\n      constructorBody.body = constructorBody.body.concat(this.userConstructor.body.body);\n      t.inherits(this.constructor, this.userConstructor);\n      t.inherits(constructorBody, this.userConstructor.body);\n    }\n\n    this.pushDescriptors();\n  };\n\n  ClassTransformer.prototype.pushBody = function pushBody() {\n    var classBodyPaths = this.path.get("body.body");\n\n    for (var _iterator2 = classBodyPaths, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var path = _ref2;\n\n      var node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError("Missing class properties transform.");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError("Method has decorators, put the decorator plugin before the classes one.");\n      }\n\n      if (t.isClassMethod(node)) {\n        var isConstructor = node.kind === "constructor";\n\n        if (isConstructor) {\n          path.traverse(verifyConstructorVisitor, this);\n\n          if (!this.hasBareSuper && this.isDerived) {\n            throw path.buildCodeFrameError("missing super() call in constructor");\n          }\n        }\n\n        var replaceSupers = new _babelHelperReplaceSupers2.default({\n          forceSuperMemoisation: isConstructor,\n          methodPath: path,\n          methodNode: node,\n          objectRef: this.classRef,\n          superRef: this.superName,\n          isStatic: node.static,\n          isLoose: this.isLoose,\n          scope: this.scope,\n          file: this.file\n        }, true);\n\n        replaceSupers.replace();\n\n        if (isConstructor) {\n          this.pushConstructor(replaceSupers, node, path);\n        } else {\n          this.pushMethod(node, path);\n        }\n      }\n    }\n  };\n\n  ClassTransformer.prototype.clearDescriptors = function clearDescriptors() {\n    this.hasInstanceDescriptors = false;\n    this.hasStaticDescriptors = false;\n\n    this.instanceMutatorMap = {};\n    this.staticMutatorMap = {};\n  };\n\n  ClassTransformer.prototype.pushDescriptors = function pushDescriptors() {\n    this.pushInherits();\n\n    var body = this.body;\n\n    var instanceProps = void 0;\n    var staticProps = void 0;\n\n    if (this.hasInstanceDescriptors) {\n      instanceProps = defineMap.toClassObject(this.instanceMutatorMap);\n    }\n\n    if (this.hasStaticDescriptors) {\n      staticProps = defineMap.toClassObject(this.staticMutatorMap);\n    }\n\n    if (instanceProps || staticProps) {\n      if (instanceProps) instanceProps = defineMap.toComputedObjectFromClass(instanceProps);\n      if (staticProps) staticProps = defineMap.toComputedObjectFromClass(staticProps);\n\n      var nullNode = t.nullLiteral();\n\n      var args = [this.classRef, nullNode, nullNode, nullNode, nullNode];\n\n      if (instanceProps) args[1] = instanceProps;\n      if (staticProps) args[2] = staticProps;\n\n      if (this.instanceInitializersId) {\n        args[3] = this.instanceInitializersId;\n        body.unshift(this.buildObjectAssignment(this.instanceInitializersId));\n      }\n\n      if (this.staticInitializersId) {\n        args[4] = this.staticInitializersId;\n        body.unshift(this.buildObjectAssignment(this.staticInitializersId));\n      }\n\n      var lastNonNullIndex = 0;\n      for (var i = 0; i < args.length; i++) {\n        if (args[i] !== nullNode) lastNonNullIndex = i;\n      }\n      args = args.slice(0, lastNonNullIndex + 1);\n\n      body.push(t.expressionStatement(t.callExpression(this.file.addHelper("createClass"), args)));\n    }\n\n    this.clearDescriptors();\n  };\n\n  ClassTransformer.prototype.buildObjectAssignment = function buildObjectAssignment(id) {\n    return t.variableDeclaration("var", [t.variableDeclarator(id, t.objectExpression([]))]);\n  };\n\n  ClassTransformer.prototype.wrapSuperCall = function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    var bareSuperNode = bareSuper.node;\n\n    if (this.isLoose) {\n      bareSuperNode.arguments.unshift(t.thisExpression());\n      if (bareSuperNode.arguments.length === 2 && t.isSpreadElement(bareSuperNode.arguments[1]) && t.isIdentifier(bareSuperNode.arguments[1].argument, { name: "arguments" })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = t.memberExpression(superRef, t.identifier("apply"));\n      } else {\n        bareSuperNode.callee = t.memberExpression(superRef, t.identifier("call"));\n      }\n    } else {\n      bareSuperNode = (0, _babelHelperOptimiseCallExpression2.default)(t.logicalExpression("||", t.memberExpression(this.classRef, t.identifier("__proto__")), t.callExpression(t.memberExpression(t.identifier("Object"), t.identifier("getPrototypeOf")), [this.classRef])), t.thisExpression(), bareSuperNode.arguments);\n    }\n\n    var call = t.callExpression(this.file.addHelper("possibleConstructorReturn"), [t.thisExpression(), bareSuperNode]);\n\n    var bareSuperAfter = this.bareSuperAfter.map(function (fn) {\n      return fn(thisRef);\n    });\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n\n      if (this.superThises.length || bareSuperAfter.length) {\n        bareSuper.scope.push({ id: thisRef });\n        call = t.assignmentExpression("=", thisRef, call);\n      }\n\n      if (bareSuperAfter.length) {\n        call = t.toSequenceExpression([call].concat(bareSuperAfter, [thisRef]));\n      }\n\n      bareSuper.parentPath.replaceWith(t.returnStatement(call));\n    } else {\n      bareSuper.replaceWithMultiple([t.variableDeclaration("var", [t.variableDeclarator(thisRef, call)])].concat(bareSuperAfter, [t.expressionStatement(thisRef)]));\n    }\n  };\n\n  ClassTransformer.prototype.verifyConstructor = function verifyConstructor() {\n    var _this2 = this;\n\n    if (!this.isDerived) return;\n\n    var path = this.userConstructorPath;\n    var body = path.get("body");\n\n    path.traverse(findThisesVisitor, this);\n\n    var guaranteedSuperBeforeFinish = !!this.bareSupers.length;\n\n    var superRef = this.superName || t.identifier("Function");\n    var thisRef = path.scope.generateUidIdentifier("this");\n\n    for (var _iterator3 = this.bareSupers, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var bareSuper = _ref3;\n\n      this.wrapSuperCall(bareSuper, superRef, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    for (var _iterator4 = this.superThises, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var thisPath = _ref4;\n\n      thisPath.replaceWith(thisRef);\n    }\n\n    var wrapReturn = function wrapReturn(returnArg) {\n      return t.callExpression(_this2.file.addHelper("possibleConstructorReturn"), [thisRef].concat(returnArg || []));\n    };\n\n    var bodyPaths = body.get("body");\n    if (bodyPaths.length && !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer("body", t.returnStatement(guaranteedSuperBeforeFinish ? thisRef : wrapReturn()));\n    }\n\n    for (var _iterator5 = this.superReturns, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var returnPath = _ref5;\n\n      if (returnPath.node.argument) {\n        var ref = returnPath.scope.generateDeclaredUidIdentifier("ret");\n        returnPath.get("argument").replaceWithMultiple([t.assignmentExpression("=", ref, returnPath.node.argument), wrapReturn(ref)]);\n      } else {\n        returnPath.get("argument").replaceWith(wrapReturn());\n      }\n    }\n  };\n\n  ClassTransformer.prototype.pushMethod = function pushMethod(node, path) {\n    var scope = path ? path.scope : this.scope;\n\n    if (node.kind === "method") {\n      if (this._processMethod(node, scope)) return;\n    }\n\n    this.pushToMap(node, false, null, scope);\n  };\n\n  ClassTransformer.prototype._processMethod = function _processMethod() {\n    return false;\n  };\n\n  ClassTransformer.prototype.pushConstructor = function pushConstructor(replaceSupers, method, path) {\n    this.bareSupers = replaceSupers.bareSupers;\n    this.superReturns = replaceSupers.returns;\n\n    if (path.scope.hasOwnBinding(this.classRef.name)) {\n      path.scope.rename(this.classRef.name);\n    }\n\n    var construct = this.constructor;\n\n    this.userConstructorPath = path;\n    this.userConstructor = method;\n    this.hasConstructor = true;\n\n    t.inheritsComments(construct, method);\n\n    construct._ignoreUserWhitespace = true;\n    construct.params = method.params;\n\n    t.inherits(construct.body, method.body);\n    construct.body.directives = method.body.directives;\n\n    this._pushConstructor();\n  };\n\n  ClassTransformer.prototype._pushConstructor = function _pushConstructor() {\n    if (this.pushedConstructor) return;\n    this.pushedConstructor = true;\n\n    if (this.hasInstanceDescriptors || this.hasStaticDescriptors) {\n      this.pushDescriptors();\n    }\n\n    this.body.push(this.constructor);\n\n    this.pushInherits();\n  };\n\n  ClassTransformer.prototype.pushInherits = function pushInherits() {\n    if (!this.isDerived || this.pushedInherits) return;\n\n    this.pushedInherits = true;\n    this.body.unshift(t.expressionStatement(t.callExpression(this.file.addHelper("inherits"), [this.classRef, this.superName])));\n  };\n\n  return ClassTransformer;\n}();\n\nexports.default = ClassTransformer;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-classes/lib/vanilla.js?')},"./node_modules/babel-plugin-transform-es2015-computed-properties/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types,\n      template = _ref.template;\n\n  var buildMutatorMapAssign = template("\\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\\n  ");\n\n  function getValue(prop) {\n    if (t.isObjectProperty(prop)) {\n      return prop.value;\n    } else if (t.isObjectMethod(prop)) {\n      return t.functionExpression(null, prop.params, prop.body, prop.generator, prop.async);\n    }\n  }\n\n  function pushAssign(objId, prop, body) {\n    if (prop.kind === "get" && prop.kind === "set") {\n      pushMutatorDefine(objId, prop, body);\n    } else {\n      body.push(t.expressionStatement(t.assignmentExpression("=", t.memberExpression(objId, prop.key, prop.computed || t.isLiteral(prop.key)), getValue(prop))));\n    }\n  }\n\n  function pushMutatorDefine(_ref2, prop) {\n    var objId = _ref2.objId,\n        body = _ref2.body,\n        getMutatorId = _ref2.getMutatorId,\n        scope = _ref2.scope;\n\n    var key = !prop.computed && t.isIdentifier(prop.key) ? t.stringLiteral(prop.key.name) : prop.key;\n\n    var maybeMemoise = scope.maybeGenerateMemoised(key);\n    if (maybeMemoise) {\n      body.push(t.expressionStatement(t.assignmentExpression("=", maybeMemoise, key)));\n      key = maybeMemoise;\n    }\n\n    body.push.apply(body, buildMutatorMapAssign({\n      MUTATOR_MAP_REF: getMutatorId(),\n      KEY: key,\n      VALUE: getValue(prop),\n      KIND: t.identifier(prop.kind)\n    }));\n  }\n\n  function loose(info) {\n    for (var _iterator = info.computedProps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref3;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref3 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref3 = _i.value;\n      }\n\n      var prop = _ref3;\n\n      if (prop.kind === "get" || prop.kind === "set") {\n        pushMutatorDefine(info, prop);\n      } else {\n        pushAssign(info.objId, prop, info.body);\n      }\n    }\n  }\n\n  function spec(info) {\n    var objId = info.objId,\n        body = info.body,\n        computedProps = info.computedProps,\n        state = info.state;\n\n\n    for (var _iterator2 = computedProps, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref4;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref4 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref4 = _i2.value;\n      }\n\n      var prop = _ref4;\n\n      var key = t.toComputedKey(prop);\n\n      if (prop.kind === "get" || prop.kind === "set") {\n        pushMutatorDefine(info, prop);\n      } else if (t.isStringLiteral(key, { value: "__proto__" })) {\n        pushAssign(objId, prop, body);\n      } else {\n        if (computedProps.length === 1) {\n          return t.callExpression(state.addHelper("defineProperty"), [info.initPropExpression, key, getValue(prop)]);\n        } else {\n          body.push(t.expressionStatement(t.callExpression(state.addHelper("defineProperty"), [objId, key, getValue(prop)])));\n        }\n      }\n    }\n  }\n\n  return {\n    visitor: {\n      ObjectExpression: {\n        exit: function exit(path, state) {\n          var node = path.node,\n              parent = path.parent,\n              scope = path.scope;\n\n          var hasComputed = false;\n          for (var _iterator3 = node.properties, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref5;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref5 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref5 = _i3.value;\n            }\n\n            var prop = _ref5;\n\n            hasComputed = prop.computed === true;\n            if (hasComputed) break;\n          }\n          if (!hasComputed) return;\n\n          var initProps = [];\n          var computedProps = [];\n          var foundComputed = false;\n\n          for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n            var _ref6;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref6 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref6 = _i4.value;\n            }\n\n            var _prop = _ref6;\n\n            if (_prop.computed) {\n              foundComputed = true;\n            }\n\n            if (foundComputed) {\n              computedProps.push(_prop);\n            } else {\n              initProps.push(_prop);\n            }\n          }\n\n          var objId = scope.generateUidIdentifierBasedOnNode(parent);\n          var initPropExpression = t.objectExpression(initProps);\n          var body = [];\n\n          body.push(t.variableDeclaration("var", [t.variableDeclarator(objId, initPropExpression)]));\n\n          var callback = spec;\n          if (state.opts.loose) callback = loose;\n\n          var mutatorRef = void 0;\n\n          var getMutatorId = function getMutatorId() {\n            if (!mutatorRef) {\n              mutatorRef = scope.generateUidIdentifier("mutatorMap");\n\n              body.push(t.variableDeclaration("var", [t.variableDeclarator(mutatorRef, t.objectExpression([]))]));\n            }\n\n            return mutatorRef;\n          };\n\n          var single = callback({\n            scope: scope,\n            objId: objId,\n            body: body,\n            computedProps: computedProps,\n            initPropExpression: initPropExpression,\n            getMutatorId: getMutatorId,\n            state: state\n          });\n\n          if (mutatorRef) {\n            body.push(t.expressionStatement(t.callExpression(state.addHelper("defineEnumerableProperties"), [objId, mutatorRef])));\n          }\n\n          if (single) {\n            path.replaceWith(single);\n          } else {\n            body.push(t.expressionStatement(objId));\n            path.replaceWithMultiple(body);\n          }\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-computed-properties/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-destructuring/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n\n  function variableDeclarationHasPattern(node) {\n    for (var _iterator = node.declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var declar = _ref2;\n\n      if (t.isPattern(declar.id)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function hasRest(pattern) {\n    for (var _iterator2 = pattern.elements, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var elem = _ref3;\n\n      if (t.isRestElement(elem)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  var arrayUnpackVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n      if (state.bindings[path.node.name]) {\n        state.deopt = true;\n        path.stop();\n      }\n    }\n  };\n\n  var DestructuringTransformer = function () {\n    function DestructuringTransformer(opts) {\n      (0, _classCallCheck3.default)(this, DestructuringTransformer);\n\n      this.blockHoist = opts.blockHoist;\n      this.operator = opts.operator;\n      this.arrays = {};\n      this.nodes = opts.nodes || [];\n      this.scope = opts.scope;\n      this.file = opts.file;\n      this.kind = opts.kind;\n    }\n\n    DestructuringTransformer.prototype.buildVariableAssignment = function buildVariableAssignment(id, init) {\n      var op = this.operator;\n      if (t.isMemberExpression(id)) op = "=";\n\n      var node = void 0;\n\n      if (op) {\n        node = t.expressionStatement(t.assignmentExpression(op, id, init));\n      } else {\n        node = t.variableDeclaration(this.kind, [t.variableDeclarator(id, init)]);\n      }\n\n      node._blockHoist = this.blockHoist;\n\n      return node;\n    };\n\n    DestructuringTransformer.prototype.buildVariableDeclaration = function buildVariableDeclaration(id, init) {\n      var declar = t.variableDeclaration("var", [t.variableDeclarator(id, init)]);\n      declar._blockHoist = this.blockHoist;\n      return declar;\n    };\n\n    DestructuringTransformer.prototype.push = function push(id, init) {\n      if (t.isObjectPattern(id)) {\n        this.pushObjectPattern(id, init);\n      } else if (t.isArrayPattern(id)) {\n        this.pushArrayPattern(id, init);\n      } else if (t.isAssignmentPattern(id)) {\n        this.pushAssignmentPattern(id, init);\n      } else {\n        this.nodes.push(this.buildVariableAssignment(id, init));\n      }\n    };\n\n    DestructuringTransformer.prototype.toArray = function toArray(node, count) {\n      if (this.file.opts.loose || t.isIdentifier(node) && this.arrays[node.name]) {\n        return node;\n      } else {\n        return this.scope.toArray(node, count);\n      }\n    };\n\n    DestructuringTransformer.prototype.pushAssignmentPattern = function pushAssignmentPattern(pattern, valueRef) {\n\n      var tempValueRef = this.scope.generateUidIdentifierBasedOnNode(valueRef);\n\n      var declar = t.variableDeclaration("var", [t.variableDeclarator(tempValueRef, valueRef)]);\n      declar._blockHoist = this.blockHoist;\n      this.nodes.push(declar);\n\n      var tempConditional = t.conditionalExpression(t.binaryExpression("===", tempValueRef, t.identifier("undefined")), pattern.right, tempValueRef);\n\n      var left = pattern.left;\n      if (t.isPattern(left)) {\n        var tempValueDefault = t.expressionStatement(t.assignmentExpression("=", tempValueRef, tempConditional));\n        tempValueDefault._blockHoist = this.blockHoist;\n\n        this.nodes.push(tempValueDefault);\n        this.push(left, tempValueRef);\n      } else {\n        this.nodes.push(this.buildVariableAssignment(left, tempConditional));\n      }\n    };\n\n    DestructuringTransformer.prototype.pushObjectRest = function pushObjectRest(pattern, objRef, spreadProp, spreadPropIndex) {\n\n      var keys = [];\n\n      for (var i = 0; i < pattern.properties.length; i++) {\n        var prop = pattern.properties[i];\n\n        if (i >= spreadPropIndex) break;\n\n        if (t.isRestProperty(prop)) continue;\n\n        var key = prop.key;\n        if (t.isIdentifier(key) && !prop.computed) key = t.stringLiteral(prop.key.name);\n        keys.push(key);\n      }\n\n      keys = t.arrayExpression(keys);\n\n      var value = t.callExpression(this.file.addHelper("objectWithoutProperties"), [objRef, keys]);\n      this.nodes.push(this.buildVariableAssignment(spreadProp.argument, value));\n    };\n\n    DestructuringTransformer.prototype.pushObjectProperty = function pushObjectProperty(prop, propRef) {\n      if (t.isLiteral(prop.key)) prop.computed = true;\n\n      var pattern = prop.value;\n      var objRef = t.memberExpression(propRef, prop.key, prop.computed);\n\n      if (t.isPattern(pattern)) {\n        this.push(pattern, objRef);\n      } else {\n        this.nodes.push(this.buildVariableAssignment(pattern, objRef));\n      }\n    };\n\n    DestructuringTransformer.prototype.pushObjectPattern = function pushObjectPattern(pattern, objRef) {\n\n      if (!pattern.properties.length) {\n        this.nodes.push(t.expressionStatement(t.callExpression(this.file.addHelper("objectDestructuringEmpty"), [objRef])));\n      }\n\n      if (pattern.properties.length > 1 && !this.scope.isStatic(objRef)) {\n        var temp = this.scope.generateUidIdentifierBasedOnNode(objRef);\n        this.nodes.push(this.buildVariableDeclaration(temp, objRef));\n        objRef = temp;\n      }\n\n      for (var i = 0; i < pattern.properties.length; i++) {\n        var prop = pattern.properties[i];\n        if (t.isRestProperty(prop)) {\n          this.pushObjectRest(pattern, objRef, prop, i);\n        } else {\n          this.pushObjectProperty(prop, objRef);\n        }\n      }\n    };\n\n    DestructuringTransformer.prototype.canUnpackArrayPattern = function canUnpackArrayPattern(pattern, arr) {\n      if (!t.isArrayExpression(arr)) return false;\n\n      if (pattern.elements.length > arr.elements.length) return;\n      if (pattern.elements.length < arr.elements.length && !hasRest(pattern)) return false;\n\n      for (var _iterator3 = pattern.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref4;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref4 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref4 = _i3.value;\n        }\n\n        var elem = _ref4;\n\n        if (!elem) return false;\n\n        if (t.isMemberExpression(elem)) return false;\n      }\n\n      for (var _iterator4 = arr.elements, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n        var _ref5;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref5 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref5 = _i4.value;\n        }\n\n        var _elem = _ref5;\n\n        if (t.isSpreadElement(_elem)) return false;\n\n        if (t.isCallExpression(_elem)) return false;\n\n        if (t.isMemberExpression(_elem)) return false;\n      }\n\n      var bindings = t.getBindingIdentifiers(pattern);\n      var state = { deopt: false, bindings: bindings };\n      this.scope.traverse(arr, arrayUnpackVisitor, state);\n      return !state.deopt;\n    };\n\n    DestructuringTransformer.prototype.pushUnpackedArrayPattern = function pushUnpackedArrayPattern(pattern, arr) {\n      for (var i = 0; i < pattern.elements.length; i++) {\n        var elem = pattern.elements[i];\n        if (t.isRestElement(elem)) {\n          this.push(elem.argument, t.arrayExpression(arr.elements.slice(i)));\n        } else {\n          this.push(elem, arr.elements[i]);\n        }\n      }\n    };\n\n    DestructuringTransformer.prototype.pushArrayPattern = function pushArrayPattern(pattern, arrayRef) {\n      if (!pattern.elements) return;\n\n      if (this.canUnpackArrayPattern(pattern, arrayRef)) {\n        return this.pushUnpackedArrayPattern(pattern, arrayRef);\n      }\n\n      var count = !hasRest(pattern) && pattern.elements.length;\n\n      var toArray = this.toArray(arrayRef, count);\n\n      if (t.isIdentifier(toArray)) {\n        arrayRef = toArray;\n      } else {\n        arrayRef = this.scope.generateUidIdentifierBasedOnNode(arrayRef);\n        this.arrays[arrayRef.name] = true;\n        this.nodes.push(this.buildVariableDeclaration(arrayRef, toArray));\n      }\n\n      for (var i = 0; i < pattern.elements.length; i++) {\n        var elem = pattern.elements[i];\n\n        if (!elem) continue;\n\n        var elemRef = void 0;\n\n        if (t.isRestElement(elem)) {\n          elemRef = this.toArray(arrayRef);\n          elemRef = t.callExpression(t.memberExpression(elemRef, t.identifier("slice")), [t.numericLiteral(i)]);\n\n          elem = elem.argument;\n        } else {\n          elemRef = t.memberExpression(arrayRef, t.numericLiteral(i), true);\n        }\n\n        this.push(elem, elemRef);\n      }\n    };\n\n    DestructuringTransformer.prototype.init = function init(pattern, ref) {\n\n      if (!t.isArrayExpression(ref) && !t.isMemberExpression(ref)) {\n        var memo = this.scope.maybeGenerateMemoised(ref, true);\n        if (memo) {\n          this.nodes.push(this.buildVariableDeclaration(memo, ref));\n          ref = memo;\n        }\n      }\n\n      this.push(pattern, ref);\n\n      return this.nodes;\n    };\n\n    return DestructuringTransformer;\n  }();\n\n  return {\n    visitor: {\n      ExportNamedDeclaration: function ExportNamedDeclaration(path) {\n        var declaration = path.get("declaration");\n        if (!declaration.isVariableDeclaration()) return;\n        if (!variableDeclarationHasPattern(declaration.node)) return;\n\n        var specifiers = [];\n\n        for (var name in path.getOuterBindingIdentifiers(path)) {\n          var id = t.identifier(name);\n          specifiers.push(t.exportSpecifier(id, id));\n        }\n\n        path.replaceWith(declaration.node);\n        path.insertAfter(t.exportNamedDeclaration(null, specifiers));\n      },\n      ForXStatement: function ForXStatement(path, file) {\n        var node = path.node,\n            scope = path.scope;\n\n        var left = node.left;\n\n        if (t.isPattern(left)) {\n\n          var temp = scope.generateUidIdentifier("ref");\n\n          node.left = t.variableDeclaration("var", [t.variableDeclarator(temp)]);\n\n          path.ensureBlock();\n\n          node.body.body.unshift(t.variableDeclaration("var", [t.variableDeclarator(left, temp)]));\n\n          return;\n        }\n\n        if (!t.isVariableDeclaration(left)) return;\n\n        var pattern = left.declarations[0].id;\n        if (!t.isPattern(pattern)) return;\n\n        var key = scope.generateUidIdentifier("ref");\n        node.left = t.variableDeclaration(left.kind, [t.variableDeclarator(key, null)]);\n\n        var nodes = [];\n\n        var destructuring = new DestructuringTransformer({\n          kind: left.kind,\n          file: file,\n          scope: scope,\n          nodes: nodes\n        });\n\n        destructuring.init(pattern, key);\n\n        path.ensureBlock();\n\n        var block = node.body;\n        block.body = nodes.concat(block.body);\n      },\n      CatchClause: function CatchClause(_ref6, file) {\n        var node = _ref6.node,\n            scope = _ref6.scope;\n\n        var pattern = node.param;\n        if (!t.isPattern(pattern)) return;\n\n        var ref = scope.generateUidIdentifier("ref");\n        node.param = ref;\n\n        var nodes = [];\n\n        var destructuring = new DestructuringTransformer({\n          kind: "let",\n          file: file,\n          scope: scope,\n          nodes: nodes\n        });\n        destructuring.init(pattern, ref);\n\n        node.body.body = nodes.concat(node.body.body);\n      },\n      AssignmentExpression: function AssignmentExpression(path, file) {\n        var node = path.node,\n            scope = path.scope;\n\n        if (!t.isPattern(node.left)) return;\n\n        var nodes = [];\n\n        var destructuring = new DestructuringTransformer({\n          operator: node.operator,\n          file: file,\n          scope: scope,\n          nodes: nodes\n        });\n\n        var ref = void 0;\n        if (path.isCompletionRecord() || !path.parentPath.isExpressionStatement()) {\n          ref = scope.generateUidIdentifierBasedOnNode(node.right, "ref");\n\n          nodes.push(t.variableDeclaration("var", [t.variableDeclarator(ref, node.right)]));\n\n          if (t.isArrayExpression(node.right)) {\n            destructuring.arrays[ref.name] = true;\n          }\n        }\n\n        destructuring.init(node.left, ref || node.right);\n\n        if (ref) {\n          nodes.push(t.expressionStatement(ref));\n        }\n\n        path.replaceWithMultiple(nodes);\n      },\n      VariableDeclaration: function VariableDeclaration(path, file) {\n        var node = path.node,\n            scope = path.scope,\n            parent = path.parent;\n\n        if (t.isForXStatement(parent)) return;\n        if (!parent || !path.container) return;\n        if (!variableDeclarationHasPattern(node)) return;\n\n        var nodes = [];\n        var declar = void 0;\n\n        for (var i = 0; i < node.declarations.length; i++) {\n          declar = node.declarations[i];\n\n          var patternId = declar.init;\n          var pattern = declar.id;\n\n          var destructuring = new DestructuringTransformer({\n            blockHoist: node._blockHoist,\n            nodes: nodes,\n            scope: scope,\n            kind: node.kind,\n            file: file\n          });\n\n          if (t.isPattern(pattern)) {\n            destructuring.init(pattern, patternId);\n\n            if (+i !== node.declarations.length - 1) {\n              t.inherits(nodes[nodes.length - 1], declar);\n            }\n          } else {\n            nodes.push(t.inherits(destructuring.buildVariableAssignment(declar.id, declar.init), declar));\n          }\n        }\n\n        var nodesOut = [];\n        for (var _iterator5 = nodes, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n          var _ref7;\n\n          if (_isArray5) {\n            if (_i5 >= _iterator5.length) break;\n            _ref7 = _iterator5[_i5++];\n          } else {\n            _i5 = _iterator5.next();\n            if (_i5.done) break;\n            _ref7 = _i5.value;\n          }\n\n          var _node = _ref7;\n\n          var tail = nodesOut[nodesOut.length - 1];\n          if (tail && t.isVariableDeclaration(tail) && t.isVariableDeclaration(_node) && tail.kind === _node.kind) {\n            var _tail$declarations;\n\n            (_tail$declarations = tail.declarations).push.apply(_tail$declarations, _node.declarations);\n          } else {\n            nodesOut.push(_node);\n          }\n        }\n\n        for (var _iterator6 = nodesOut, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n          var _ref8;\n\n          if (_isArray6) {\n            if (_i6 >= _iterator6.length) break;\n            _ref8 = _iterator6[_i6++];\n          } else {\n            _i6 = _iterator6.next();\n            if (_i6.done) break;\n            _ref8 = _i6.value;\n          }\n\n          var nodeOut = _ref8;\n\n          if (!nodeOut.declarations) continue;\n          for (var _iterator7 = nodeOut.declarations, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n            var _ref9;\n\n            if (_isArray7) {\n              if (_i7 >= _iterator7.length) break;\n              _ref9 = _iterator7[_i7++];\n            } else {\n              _i7 = _iterator7.next();\n              if (_i7.done) break;\n              _ref9 = _i7.value;\n            }\n\n            var declaration = _ref9;\n            var name = declaration.id.name;\n\n            if (scope.bindings[name]) {\n              scope.bindings[name].kind = nodeOut.kind;\n            }\n          }\n        }\n\n        if (nodesOut.length === 1) {\n          path.replaceWith(nodesOut[0]);\n        } else {\n          path.replaceWithMultiple(nodesOut);\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-destructuring/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-duplicate-keys/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nexports.default = function () {\n  return {\n    visitor: {\n      ObjectExpression: function ObjectExpression(path) {\n        var node = path.node;\n\n        var plainProps = node.properties.filter(function (prop) {\n          return !t.isSpreadProperty(prop) && !prop.computed;\n        });\n\n        var alreadySeenData = (0, _create2.default)(null);\n        var alreadySeenGetters = (0, _create2.default)(null);\n        var alreadySeenSetters = (0, _create2.default)(null);\n\n        for (var _iterator = plainProps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var prop = _ref;\n\n          var name = getName(prop.key);\n          var isDuplicate = false;\n          switch (prop.kind) {\n            case "get":\n              if (alreadySeenData[name] || alreadySeenGetters[name]) {\n                isDuplicate = true;\n              }\n              alreadySeenGetters[name] = true;\n              break;\n            case "set":\n              if (alreadySeenData[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n              alreadySeenSetters[name] = true;\n              break;\n            default:\n              if (alreadySeenData[name] || alreadySeenGetters[name] || alreadySeenSetters[name]) {\n                isDuplicate = true;\n              }\n              alreadySeenData[name] = true;\n          }\n\n          if (isDuplicate) {\n            prop.computed = true;\n            prop.key = t.stringLiteral(name);\n          }\n        }\n      }\n    }\n  };\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getName(key) {\n  if (t.isIdentifier(key)) {\n    return key.name;\n  }\n  return key.value.toString();\n}\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-duplicate-keys/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-for-of/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var messages = _ref.messages,\n      template = _ref.template,\n      t = _ref.types;\n\n  var buildForOfArray = template("\\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\\n  ");\n\n  var buildForOfLoose = template("\\n    for (var LOOP_OBJECT = OBJECT,\\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\\n             INDEX = 0,\\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\\n      var ID;\\n      if (IS_ARRAY) {\\n        if (INDEX >= LOOP_OBJECT.length) break;\\n        ID = LOOP_OBJECT[INDEX++];\\n      } else {\\n        INDEX = LOOP_OBJECT.next();\\n        if (INDEX.done) break;\\n        ID = INDEX.value;\\n      }\\n    }\\n  ");\n\n  var buildForOf = template("\\n    var ITERATOR_COMPLETION = true;\\n    var ITERATOR_HAD_ERROR_KEY = false;\\n    var ITERATOR_ERROR_KEY = undefined;\\n    try {\\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\\n      }\\n    } catch (err) {\\n      ITERATOR_HAD_ERROR_KEY = true;\\n      ITERATOR_ERROR_KEY = err;\\n    } finally {\\n      try {\\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\\n          ITERATOR_KEY.return();\\n        }\\n      } finally {\\n        if (ITERATOR_HAD_ERROR_KEY) {\\n          throw ITERATOR_ERROR_KEY;\\n        }\\n      }\\n    }\\n  ");\n\n\n  function _ForOfStatementArray(path) {\n    var node = path.node,\n        scope = path.scope;\n\n    var nodes = [];\n    var right = node.right;\n\n    if (!t.isIdentifier(right) || !scope.hasBinding(right.name)) {\n      var uid = scope.generateUidIdentifier("arr");\n      nodes.push(t.variableDeclaration("var", [t.variableDeclarator(uid, right)]));\n      right = uid;\n    }\n\n    var iterationKey = scope.generateUidIdentifier("i");\n\n    var loop = buildForOfArray({\n      BODY: node.body,\n      KEY: iterationKey,\n      ARR: right\n    });\n\n    t.inherits(loop, node);\n    t.ensureBlock(loop);\n\n    var iterationValue = t.memberExpression(right, iterationKey, true);\n\n    var left = node.left;\n    if (t.isVariableDeclaration(left)) {\n      left.declarations[0].init = iterationValue;\n      loop.body.body.unshift(left);\n    } else {\n      loop.body.body.unshift(t.expressionStatement(t.assignmentExpression("=", left, iterationValue)));\n    }\n\n    if (path.parentPath.isLabeledStatement()) {\n      loop = t.labeledStatement(path.parentPath.node.label, loop);\n    }\n\n    nodes.push(loop);\n\n    return nodes;\n  }\n\n  return {\n    visitor: {\n      ForOfStatement: function ForOfStatement(path, state) {\n        if (path.get("right").isArrayExpression()) {\n          if (path.parentPath.isLabeledStatement()) {\n            return path.parentPath.replaceWithMultiple(_ForOfStatementArray(path));\n          } else {\n            return path.replaceWithMultiple(_ForOfStatementArray(path));\n          }\n        }\n\n        var callback = spec;\n        if (state.opts.loose) callback = loose;\n\n        var node = path.node;\n\n        var build = callback(path, state);\n        var declar = build.declar;\n        var loop = build.loop;\n        var block = loop.body;\n\n        path.ensureBlock();\n\n        if (declar) {\n          block.body.push(declar);\n        }\n\n        block.body = block.body.concat(node.body.body);\n\n        t.inherits(loop, node);\n        t.inherits(loop.body, node.body);\n\n        if (build.replaceParent) {\n          path.parentPath.replaceWithMultiple(build.node);\n          path.remove();\n        } else {\n          path.replaceWithMultiple(build.node);\n        }\n      }\n    }\n  };\n\n  function loose(path, file) {\n    var node = path.node,\n        scope = path.scope,\n        parent = path.parent;\n    var left = node.left;\n\n    var declar = void 0,\n        id = void 0;\n\n    if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n      id = left;\n    } else if (t.isVariableDeclaration(left)) {\n      id = scope.generateUidIdentifier("ref");\n      declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, id)]);\n    } else {\n      throw file.buildCodeFrameError(left, messages.get("unknownForHead", left.type));\n    }\n\n    var iteratorKey = scope.generateUidIdentifier("iterator");\n    var isArrayKey = scope.generateUidIdentifier("isArray");\n\n    var loop = buildForOfLoose({\n      LOOP_OBJECT: iteratorKey,\n      IS_ARRAY: isArrayKey,\n      OBJECT: node.right,\n      INDEX: scope.generateUidIdentifier("i"),\n      ID: id\n    });\n\n    if (!declar) {\n      loop.body.body.shift();\n    }\n\n    var isLabeledParent = t.isLabeledStatement(parent);\n    var labeled = void 0;\n\n    if (isLabeledParent) {\n      labeled = t.labeledStatement(parent.label, loop);\n    }\n\n    return {\n      replaceParent: isLabeledParent,\n      declar: declar,\n      node: labeled || loop,\n      loop: loop\n    };\n  }\n\n  function spec(path, file) {\n    var node = path.node,\n        scope = path.scope,\n        parent = path.parent;\n\n    var left = node.left;\n    var declar = void 0;\n\n    var stepKey = scope.generateUidIdentifier("step");\n    var stepValue = t.memberExpression(stepKey, t.identifier("value"));\n\n    if (t.isIdentifier(left) || t.isPattern(left) || t.isMemberExpression(left)) {\n      declar = t.expressionStatement(t.assignmentExpression("=", left, stepValue));\n    } else if (t.isVariableDeclaration(left)) {\n      declar = t.variableDeclaration(left.kind, [t.variableDeclarator(left.declarations[0].id, stepValue)]);\n    } else {\n      throw file.buildCodeFrameError(left, messages.get("unknownForHead", left.type));\n    }\n\n    var iteratorKey = scope.generateUidIdentifier("iterator");\n\n    var template = buildForOf({\n      ITERATOR_HAD_ERROR_KEY: scope.generateUidIdentifier("didIteratorError"),\n      ITERATOR_COMPLETION: scope.generateUidIdentifier("iteratorNormalCompletion"),\n      ITERATOR_ERROR_KEY: scope.generateUidIdentifier("iteratorError"),\n      ITERATOR_KEY: iteratorKey,\n      STEP_KEY: stepKey,\n      OBJECT: node.right,\n      BODY: null\n    });\n\n    var isLabeledParent = t.isLabeledStatement(parent);\n\n    var tryBody = template[3].block.body;\n    var loop = tryBody[0];\n\n    if (isLabeledParent) {\n      tryBody[0] = t.labeledStatement(parent.label, loop);\n    }\n\n    return {\n      replaceParent: isLabeledParent,\n      declar: declar,\n      loop: loop,\n      node: template\n    };\n  }\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-for-of/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-function-name/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    visitor: {\n      FunctionExpression: {\n        exit: function exit(path) {\n          if (path.key !== "value" && !path.parentPath.isObjectProperty()) {\n            var replacement = (0, _babelHelperFunctionName2.default)(path);\n            if (replacement) path.replaceWith(replacement);\n          }\n        }\n      },\n\n      ObjectProperty: function ObjectProperty(path) {\n        var value = path.get("value");\n        if (value.isFunction()) {\n          var newNode = (0, _babelHelperFunctionName2.default)(value);\n          if (newNode) value.replaceWith(newNode);\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperFunctionName = __webpack_require__("./node_modules/babel-helper-function-name/lib/index.js");\n\nvar _babelHelperFunctionName2 = _interopRequireDefault(_babelHelperFunctionName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-function-name/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-literals/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    visitor: {\n      NumericLiteral: function NumericLiteral(_ref) {\n        var node = _ref.node;\n\n        if (node.extra && /^0[ob]/i.test(node.extra.raw)) {\n          node.extra = undefined;\n        }\n      },\n      StringLiteral: function StringLiteral(_ref2) {\n        var node = _ref2.node;\n\n        if (node.extra && /\\\\[u]/gi.test(node.extra.raw)) {\n          node.extra = undefined;\n        }\n      }\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-literals/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-modules-amd/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function isValidRequireCall(path) {\n    if (!path.isCallExpression()) return false;\n    if (!path.get("callee").isIdentifier({ name: "require" })) return false;\n    if (path.scope.getBinding("require")) return false;\n\n    var args = path.get("arguments");\n    if (args.length !== 1) return false;\n\n    var arg = args[0];\n    if (!arg.isStringLiteral()) return false;\n\n    return true;\n  }\n\n  var amdVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(_ref2) {\n      var node = _ref2.node,\n          scope = _ref2.scope;\n\n      if (node.name === "exports" && !scope.getBinding("exports")) {\n        this.hasExports = true;\n      }\n\n      if (node.name === "module" && !scope.getBinding("module")) {\n        this.hasModule = true;\n      }\n    },\n    CallExpression: function CallExpression(path) {\n      if (!isValidRequireCall(path)) return;\n      this.bareSources.push(path.node.arguments[0]);\n      path.remove();\n    },\n    VariableDeclarator: function VariableDeclarator(path) {\n      var id = path.get("id");\n      if (!id.isIdentifier()) return;\n\n      var init = path.get("init");\n      if (!isValidRequireCall(init)) return;\n\n      var source = init.node.arguments[0];\n      this.sourceNames[source.value] = true;\n      this.sources.push([id.node, source]);\n\n      path.remove();\n    }\n  };\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-commonjs/lib/index.js"),\n\n    pre: function pre() {\n      this.sources = [];\n      this.sourceNames = (0, _create2.default)(null);\n\n      this.bareSources = [];\n\n      this.hasExports = false;\n      this.hasModule = false;\n    },\n\n\n    visitor: {\n      Program: {\n        exit: function exit(path) {\n          var _this = this;\n\n          if (this.ran) return;\n          this.ran = true;\n\n          path.traverse(amdVisitor, this);\n\n          var params = this.sources.map(function (source) {\n            return source[0];\n          });\n          var sources = this.sources.map(function (source) {\n            return source[1];\n          });\n\n          sources = sources.concat(this.bareSources.filter(function (str) {\n            return !_this.sourceNames[str.value];\n          }));\n\n          var moduleName = this.getModuleName();\n          if (moduleName) moduleName = t.stringLiteral(moduleName);\n\n          if (this.hasExports) {\n            sources.unshift(t.stringLiteral("exports"));\n            params.unshift(t.identifier("exports"));\n          }\n\n          if (this.hasModule) {\n            sources.unshift(t.stringLiteral("module"));\n            params.unshift(t.identifier("module"));\n          }\n\n          var node = path.node;\n\n          var factory = buildFactory({\n            PARAMS: params,\n            BODY: node.body\n          });\n          factory.expression.body.directives = node.directives;\n          node.directives = [];\n\n          node.body = [buildDefine({\n            MODULE_NAME: moduleName,\n            SOURCES: sources,\n            FACTORY: factory\n          })];\n        }\n      }\n    }\n  };\n};\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildDefine = (0, _babelTemplate2.default)("\\n  define(MODULE_NAME, [SOURCES], FACTORY);\\n");\n\nvar buildFactory = (0, _babelTemplate2.default)("\\n  (function (PARAMS) {\\n    BODY;\\n  })\\n");\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-modules-amd/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-modules-commonjs/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function () {\n  var REASSIGN_REMAP_SKIP = (0, _symbol2.default)();\n\n  var reassignmentVisitor = {\n    ReferencedIdentifier: function ReferencedIdentifier(path) {\n      var name = path.node.name;\n      var remap = this.remaps[name];\n      if (!remap) return;\n\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      var replacement = t.cloneDeep(remap);\n\n      replacement.loc = path.node.loc;\n\n      if (path.parentPath.isCallExpression({ callee: path.node })) {\n        path.replaceWith(t.sequenceExpression([t.numericLiteral(0), replacement]));\n      } else if (path.isJSXIdentifier() && t.isMemberExpression(replacement)) {\n        var object = replacement.object,\n            property = replacement.property;\n\n        path.replaceWith(t.JSXMemberExpression(t.JSXIdentifier(object.name), t.JSXIdentifier(property.name)));\n      } else {\n        path.replaceWith(replacement);\n      }\n      this.requeueInParent(path);\n    },\n    AssignmentExpression: function AssignmentExpression(path) {\n      var node = path.node;\n      if (node[REASSIGN_REMAP_SKIP]) return;\n\n      var left = path.get("left");\n      if (left.isIdentifier()) {\n        var name = left.node.name;\n        var exports = this.exports[name];\n        if (!exports) return;\n\n        if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n        node[REASSIGN_REMAP_SKIP] = true;\n\n        for (var _iterator = exports, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var reid = _ref;\n\n          node = buildExportsAssignment(reid, node).expression;\n        }\n\n        path.replaceWith(node);\n        this.requeueInParent(path);\n      } else if (left.isObjectPattern()) {\n        for (var _iterator2 = left.node.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var property = _ref2;\n\n          var _name = property.value.name;\n\n          var _exports = this.exports[_name];\n          if (!_exports) continue;\n\n          if (this.scope.getBinding(_name) !== path.scope.getBinding(_name)) return;\n\n          node[REASSIGN_REMAP_SKIP] = true;\n\n          path.insertAfter(buildExportsAssignment(t.identifier(_name), t.identifier(_name)));\n        }\n      } else if (left.isArrayPattern()) {\n        for (var _iterator3 = left.node.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n          var _ref3;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n          }\n\n          var element = _ref3;\n\n          if (!element) continue;\n          var _name2 = element.name;\n\n          var _exports2 = this.exports[_name2];\n          if (!_exports2) continue;\n\n          if (this.scope.getBinding(_name2) !== path.scope.getBinding(_name2)) return;\n\n          node[REASSIGN_REMAP_SKIP] = true;\n\n          path.insertAfter(buildExportsAssignment(t.identifier(_name2), t.identifier(_name2)));\n        }\n      }\n    },\n    UpdateExpression: function UpdateExpression(path) {\n      var arg = path.get("argument");\n      if (!arg.isIdentifier()) return;\n\n      var name = arg.node.name;\n      var exports = this.exports[name];\n      if (!exports) return;\n\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      var node = t.assignmentExpression(path.node.operator[0] + "=", arg.node, t.numericLiteral(1));\n\n      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord() || path.node.prefix) {\n        path.replaceWith(node);\n        this.requeueInParent(path);\n        return;\n      }\n\n      var nodes = [];\n      nodes.push(node);\n\n      var operator = void 0;\n      if (path.node.operator === "--") {\n        operator = "+";\n      } else {\n        operator = "-";\n      }\n      nodes.push(t.binaryExpression(operator, arg.node, t.numericLiteral(1)));\n\n      path.replaceWithMultiple(t.sequenceExpression(nodes));\n    }\n  };\n\n  return {\n    inherits: _babelPluginTransformStrictMode2.default,\n\n    visitor: {\n      ThisExpression: function ThisExpression(path, state) {\n        if (this.ranCommonJS) return;\n\n        if (state.opts.allowTopLevelThis !== true && !path.findParent(function (path) {\n          return !path.is("shadow") && THIS_BREAK_KEYS.indexOf(path.type) >= 0;\n        })) {\n          path.replaceWith(t.identifier("undefined"));\n        }\n      },\n\n\n      Program: {\n        exit: function exit(path) {\n          this.ranCommonJS = true;\n\n          var strict = !!this.opts.strict;\n          var noInterop = !!this.opts.noInterop;\n\n          var scope = path.scope;\n\n          scope.rename("module");\n          scope.rename("exports");\n          scope.rename("require");\n\n          var hasExports = false;\n          var hasImports = false;\n\n          var body = path.get("body");\n          var imports = (0, _create2.default)(null);\n          var exports = (0, _create2.default)(null);\n\n          var nonHoistedExportNames = (0, _create2.default)(null);\n\n          var topNodes = [];\n          var remaps = (0, _create2.default)(null);\n\n          var requires = (0, _create2.default)(null);\n\n          function addRequire(source, blockHoist) {\n            var cached = requires[source];\n            if (cached) return cached;\n\n            var ref = path.scope.generateUidIdentifier((0, _path2.basename)(source, (0, _path2.extname)(source)));\n\n            var varDecl = t.variableDeclaration("var", [t.variableDeclarator(ref, buildRequire(t.stringLiteral(source)).expression)]);\n\n            if (imports[source]) {\n              varDecl.loc = imports[source].loc;\n            }\n\n            if (typeof blockHoist === "number" && blockHoist > 0) {\n              varDecl._blockHoist = blockHoist;\n            }\n\n            topNodes.push(varDecl);\n\n            return requires[source] = ref;\n          }\n\n          function addTo(obj, key, arr) {\n            var existing = obj[key] || [];\n            obj[key] = existing.concat(arr);\n          }\n\n          for (var _iterator4 = body, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n            var _ref4;\n\n            if (_isArray4) {\n              if (_i4 >= _iterator4.length) break;\n              _ref4 = _iterator4[_i4++];\n            } else {\n              _i4 = _iterator4.next();\n              if (_i4.done) break;\n              _ref4 = _i4.value;\n            }\n\n            var _path = _ref4;\n\n            if (_path.isExportDeclaration()) {\n              hasExports = true;\n\n              var specifiers = [].concat(_path.get("declaration"), _path.get("specifiers"));\n              for (var _iterator6 = specifiers, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n                var _ref6;\n\n                if (_isArray6) {\n                  if (_i6 >= _iterator6.length) break;\n                  _ref6 = _iterator6[_i6++];\n                } else {\n                  _i6 = _iterator6.next();\n                  if (_i6.done) break;\n                  _ref6 = _i6.value;\n                }\n\n                var _specifier2 = _ref6;\n\n                var ids = _specifier2.getBindingIdentifiers();\n                if (ids.__esModule) {\n                  throw _specifier2.buildCodeFrameError("Illegal export \\"__esModule\\"");\n                }\n              }\n            }\n\n            if (_path.isImportDeclaration()) {\n              var _importsEntry$specifi;\n\n              hasImports = true;\n\n              var key = _path.node.source.value;\n              var importsEntry = imports[key] || {\n                specifiers: [],\n                maxBlockHoist: 0,\n                loc: _path.node.loc\n              };\n\n              (_importsEntry$specifi = importsEntry.specifiers).push.apply(_importsEntry$specifi, _path.node.specifiers);\n\n              if (typeof _path.node._blockHoist === "number") {\n                importsEntry.maxBlockHoist = Math.max(_path.node._blockHoist, importsEntry.maxBlockHoist);\n              }\n\n              imports[key] = importsEntry;\n\n              _path.remove();\n            } else if (_path.isExportDefaultDeclaration()) {\n              var declaration = _path.get("declaration");\n              if (declaration.isFunctionDeclaration()) {\n                var id = declaration.node.id;\n                var defNode = t.identifier("default");\n                if (id) {\n                  addTo(exports, id.name, defNode);\n                  topNodes.push(buildExportsAssignment(defNode, id));\n                  _path.replaceWith(declaration.node);\n                } else {\n                  topNodes.push(buildExportsAssignment(defNode, t.toExpression(declaration.node)));\n                  _path.remove();\n                }\n              } else if (declaration.isClassDeclaration()) {\n                var _id = declaration.node.id;\n                var _defNode = t.identifier("default");\n                if (_id) {\n                  addTo(exports, _id.name, _defNode);\n                  _path.replaceWithMultiple([declaration.node, buildExportsAssignment(_defNode, _id)]);\n                } else {\n                  _path.replaceWith(buildExportsAssignment(_defNode, t.toExpression(declaration.node)));\n\n                  _path.parentPath.requeue(_path.get("expression.left"));\n                }\n              } else {\n                _path.replaceWith(buildExportsAssignment(t.identifier("default"), declaration.node));\n\n                _path.parentPath.requeue(_path.get("expression.left"));\n              }\n            } else if (_path.isExportNamedDeclaration()) {\n              var _declaration = _path.get("declaration");\n              if (_declaration.node) {\n                if (_declaration.isFunctionDeclaration()) {\n                  var _id2 = _declaration.node.id;\n                  addTo(exports, _id2.name, _id2);\n                  topNodes.push(buildExportsAssignment(_id2, _id2));\n                  _path.replaceWith(_declaration.node);\n                } else if (_declaration.isClassDeclaration()) {\n                  var _id3 = _declaration.node.id;\n                  addTo(exports, _id3.name, _id3);\n                  _path.replaceWithMultiple([_declaration.node, buildExportsAssignment(_id3, _id3)]);\n                  nonHoistedExportNames[_id3.name] = true;\n                } else if (_declaration.isVariableDeclaration()) {\n                  var declarators = _declaration.get("declarations");\n                  for (var _iterator7 = declarators, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n                    var _ref7;\n\n                    if (_isArray7) {\n                      if (_i7 >= _iterator7.length) break;\n                      _ref7 = _iterator7[_i7++];\n                    } else {\n                      _i7 = _iterator7.next();\n                      if (_i7.done) break;\n                      _ref7 = _i7.value;\n                    }\n\n                    var decl = _ref7;\n\n                    var _id4 = decl.get("id");\n\n                    var init = decl.get("init");\n                    var exportsToInsert = [];\n                    if (!init.node) init.replaceWith(t.identifier("undefined"));\n\n                    if (_id4.isIdentifier()) {\n                      addTo(exports, _id4.node.name, _id4.node);\n                      init.replaceWith(buildExportsAssignment(_id4.node, init.node).expression);\n                      nonHoistedExportNames[_id4.node.name] = true;\n                    } else if (_id4.isObjectPattern()) {\n                      for (var _i8 = 0; _i8 < _id4.node.properties.length; _i8++) {\n                        var prop = _id4.node.properties[_i8];\n                        var propValue = prop.value;\n                        if (t.isAssignmentPattern(propValue)) {\n                          propValue = propValue.left;\n                        } else if (t.isRestProperty(prop)) {\n                          propValue = prop.argument;\n                        }\n                        addTo(exports, propValue.name, propValue);\n                        exportsToInsert.push(buildExportsAssignment(propValue, propValue));\n                        nonHoistedExportNames[propValue.name] = true;\n                      }\n                    } else if (_id4.isArrayPattern() && _id4.node.elements) {\n                      for (var _i9 = 0; _i9 < _id4.node.elements.length; _i9++) {\n                        var elem = _id4.node.elements[_i9];\n                        if (!elem) continue;\n                        if (t.isAssignmentPattern(elem)) {\n                          elem = elem.left;\n                        } else if (t.isRestElement(elem)) {\n                          elem = elem.argument;\n                        }\n                        var name = elem.name;\n                        addTo(exports, name, elem);\n                        exportsToInsert.push(buildExportsAssignment(elem, elem));\n                        nonHoistedExportNames[name] = true;\n                      }\n                    }\n                    _path.insertAfter(exportsToInsert);\n                  }\n                  _path.replaceWith(_declaration.node);\n                }\n                continue;\n              }\n\n              var _specifiers = _path.get("specifiers");\n              var nodes = [];\n              var _source = _path.node.source;\n              if (_source) {\n                var ref = addRequire(_source.value, _path.node._blockHoist);\n\n                for (var _iterator8 = _specifiers, _isArray8 = Array.isArray(_iterator8), _i10 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {\n                  var _ref8;\n\n                  if (_isArray8) {\n                    if (_i10 >= _iterator8.length) break;\n                    _ref8 = _iterator8[_i10++];\n                  } else {\n                    _i10 = _iterator8.next();\n                    if (_i10.done) break;\n                    _ref8 = _i10.value;\n                  }\n\n                  var _specifier3 = _ref8;\n\n                  if (_specifier3.isExportNamespaceSpecifier()) {} else if (_specifier3.isExportDefaultSpecifier()) {} else if (_specifier3.isExportSpecifier()) {\n                    if (!noInterop && _specifier3.node.local.name === "default") {\n                      topNodes.push(buildExportsFrom(t.stringLiteral(_specifier3.node.exported.name), t.memberExpression(t.callExpression(this.addHelper("interopRequireDefault"), [ref]), _specifier3.node.local)));\n                    } else {\n                      topNodes.push(buildExportsFrom(t.stringLiteral(_specifier3.node.exported.name), t.memberExpression(ref, _specifier3.node.local)));\n                    }\n                    nonHoistedExportNames[_specifier3.node.exported.name] = true;\n                  }\n                }\n              } else {\n                for (var _iterator9 = _specifiers, _isArray9 = Array.isArray(_iterator9), _i11 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {\n                  var _ref9;\n\n                  if (_isArray9) {\n                    if (_i11 >= _iterator9.length) break;\n                    _ref9 = _iterator9[_i11++];\n                  } else {\n                    _i11 = _iterator9.next();\n                    if (_i11.done) break;\n                    _ref9 = _i11.value;\n                  }\n\n                  var _specifier4 = _ref9;\n\n                  if (_specifier4.isExportSpecifier()) {\n                    addTo(exports, _specifier4.node.local.name, _specifier4.node.exported);\n                    nonHoistedExportNames[_specifier4.node.exported.name] = true;\n                    nodes.push(buildExportsAssignment(_specifier4.node.exported, _specifier4.node.local));\n                  }\n                }\n              }\n              _path.replaceWithMultiple(nodes);\n            } else if (_path.isExportAllDeclaration()) {\n              var exportNode = buildExportAll({\n                OBJECT: addRequire(_path.node.source.value, _path.node._blockHoist)\n              });\n              exportNode.loc = _path.node.loc;\n              topNodes.push(exportNode);\n              _path.remove();\n            }\n          }\n\n          for (var source in imports) {\n            var _imports$source = imports[source],\n                specifiers = _imports$source.specifiers,\n                maxBlockHoist = _imports$source.maxBlockHoist;\n\n            if (specifiers.length) {\n              var uid = addRequire(source, maxBlockHoist);\n\n              var wildcard = void 0;\n\n              for (var i = 0; i < specifiers.length; i++) {\n                var specifier = specifiers[i];\n                if (t.isImportNamespaceSpecifier(specifier)) {\n                  if (strict || noInterop) {\n                    remaps[specifier.local.name] = uid;\n                  } else {\n                    var varDecl = t.variableDeclaration("var", [t.variableDeclarator(specifier.local, t.callExpression(this.addHelper("interopRequireWildcard"), [uid]))]);\n\n                    if (maxBlockHoist > 0) {\n                      varDecl._blockHoist = maxBlockHoist;\n                    }\n\n                    topNodes.push(varDecl);\n                  }\n                  wildcard = specifier.local;\n                } else if (t.isImportDefaultSpecifier(specifier)) {\n                  specifiers[i] = t.importSpecifier(specifier.local, t.identifier("default"));\n                }\n              }\n\n              for (var _iterator5 = specifiers, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n                var _ref5;\n\n                if (_isArray5) {\n                  if (_i5 >= _iterator5.length) break;\n                  _ref5 = _iterator5[_i5++];\n                } else {\n                  _i5 = _iterator5.next();\n                  if (_i5.done) break;\n                  _ref5 = _i5.value;\n                }\n\n                var _specifier = _ref5;\n\n                if (t.isImportSpecifier(_specifier)) {\n                  var target = uid;\n                  if (_specifier.imported.name === "default") {\n                    if (wildcard) {\n                      target = wildcard;\n                    } else if (!noInterop) {\n                      target = wildcard = path.scope.generateUidIdentifier(uid.name);\n                      var _varDecl = t.variableDeclaration("var", [t.variableDeclarator(target, t.callExpression(this.addHelper("interopRequireDefault"), [uid]))]);\n\n                      if (maxBlockHoist > 0) {\n                        _varDecl._blockHoist = maxBlockHoist;\n                      }\n\n                      topNodes.push(_varDecl);\n                    }\n                  }\n                  remaps[_specifier.local.name] = t.memberExpression(t.cloneWithoutLoc(target), t.cloneWithoutLoc(_specifier.imported));\n                }\n              }\n            } else {\n              var requireNode = buildRequire(t.stringLiteral(source));\n              requireNode.loc = imports[source].loc;\n              topNodes.push(requireNode);\n            }\n          }\n\n          if (hasImports && (0, _keys2.default)(nonHoistedExportNames).length) {\n            var maxHoistedExportsNodeAssignmentLength = 100;\n            var nonHoistedExportNamesArr = (0, _keys2.default)(nonHoistedExportNames);\n\n            var _loop = function _loop(currentExportsNodeAssignmentLength) {\n              var nonHoistedExportNamesChunk = nonHoistedExportNamesArr.slice(currentExportsNodeAssignmentLength, currentExportsNodeAssignmentLength + maxHoistedExportsNodeAssignmentLength);\n\n              var hoistedExportsNode = t.identifier("undefined");\n\n              nonHoistedExportNamesChunk.forEach(function (name) {\n                hoistedExportsNode = buildExportsAssignment(t.identifier(name), hoistedExportsNode).expression;\n              });\n\n              var node = t.expressionStatement(hoistedExportsNode);\n              node._blockHoist = 3;\n\n              topNodes.unshift(node);\n            };\n\n            for (var currentExportsNodeAssignmentLength = 0; currentExportsNodeAssignmentLength < nonHoistedExportNamesArr.length; currentExportsNodeAssignmentLength += maxHoistedExportsNodeAssignmentLength) {\n              _loop(currentExportsNodeAssignmentLength);\n            }\n          }\n\n          if (hasExports && !strict) {\n            var buildTemplate = buildExportsModuleDeclaration;\n            if (this.opts.loose) buildTemplate = buildLooseExportsModuleDeclaration;\n\n            var declar = buildTemplate();\n            declar._blockHoist = 3;\n\n            topNodes.unshift(declar);\n          }\n\n          path.unshiftContainer("body", topNodes);\n          path.traverse(reassignmentVisitor, {\n            remaps: remaps,\n            scope: scope,\n            exports: exports,\n            requeueInParent: function requeueInParent(newPath) {\n              return path.requeue(newPath);\n            }\n          });\n        }\n      }\n    }\n  };\n};\n\nvar _path2 = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelPluginTransformStrictMode = __webpack_require__("./node_modules/babel-plugin-transform-strict-mode/lib/index.js");\n\nvar _babelPluginTransformStrictMode2 = _interopRequireDefault(_babelPluginTransformStrictMode);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildRequire = (0, _babelTemplate2.default)("\\n  require($0);\\n");\n\nvar buildExportsModuleDeclaration = (0, _babelTemplate2.default)("\\n  Object.defineProperty(exports, \\"__esModule\\", {\\n    value: true\\n  });\\n");\n\nvar buildExportsFrom = (0, _babelTemplate2.default)("\\n  Object.defineProperty(exports, $0, {\\n    enumerable: true,\\n    get: function () {\\n      return $1;\\n    }\\n  });\\n");\n\nvar buildLooseExportsModuleDeclaration = (0, _babelTemplate2.default)("\\n  exports.__esModule = true;\\n");\n\nvar buildExportsAssignment = (0, _babelTemplate2.default)("\\n  exports.$0 = $1;\\n");\n\nvar buildExportAll = (0, _babelTemplate2.default)("\\n  Object.keys(OBJECT).forEach(function (key) {\\n    if (key === \\"default\\" || key === \\"__esModule\\") return;\\n    Object.defineProperty(exports, key, {\\n      enumerable: true,\\n      get: function () {\\n        return OBJECT[key];\\n      }\\n    });\\n  });\\n");\n\nvar THIS_BREAK_KEYS = ["FunctionExpression", "FunctionDeclaration", "ClassProperty", "ClassMethod", "ObjectMethod"];\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-modules-commonjs/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-modules-systemjs/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var IGNORE_REASSIGNMENT_SYMBOL = (0, _symbol2.default)();\n\n  var reassignmentVisitor = {\n    "AssignmentExpression|UpdateExpression": function AssignmentExpressionUpdateExpression(path) {\n      if (path.node[IGNORE_REASSIGNMENT_SYMBOL]) return;\n      path.node[IGNORE_REASSIGNMENT_SYMBOL] = true;\n\n      var arg = path.get(path.isAssignmentExpression() ? "left" : "argument");\n      if (!arg.isIdentifier()) return;\n\n      var name = arg.node.name;\n\n      if (this.scope.getBinding(name) !== path.scope.getBinding(name)) return;\n\n      var exportedNames = this.exports[name];\n      if (!exportedNames) return;\n\n      var node = path.node;\n\n      var isPostUpdateExpression = path.isUpdateExpression() && !node.prefix;\n      if (isPostUpdateExpression) {\n        if (node.operator === "++") node = t.binaryExpression("+", node.argument, t.numericLiteral(1));else if (node.operator === "--") node = t.binaryExpression("-", node.argument, t.numericLiteral(1));else isPostUpdateExpression = false;\n      }\n\n      for (var _iterator = exportedNames, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var exportedName = _ref2;\n\n        node = this.buildCall(exportedName, node).expression;\n      }\n\n      if (isPostUpdateExpression) node = t.sequenceExpression([node, path.node]);\n\n      path.replaceWith(node);\n    }\n  };\n\n  return {\n    visitor: {\n      CallExpression: function CallExpression(path, state) {\n        if (path.node.callee.type === TYPE_IMPORT) {\n          var contextIdent = state.contextIdent;\n          path.replaceWith(t.callExpression(t.memberExpression(contextIdent, t.identifier("import")), path.node.arguments));\n        }\n      },\n      ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n        if (path.node.name == "__moduleName" && !path.scope.hasBinding("__moduleName")) {\n          path.replaceWith(t.memberExpression(state.contextIdent, t.identifier("id")));\n        }\n      },\n\n\n      Program: {\n        enter: function enter(path, state) {\n          state.contextIdent = path.scope.generateUidIdentifier("context");\n        },\n        exit: function exit(path, state) {\n          var exportIdent = path.scope.generateUidIdentifier("export");\n          var contextIdent = state.contextIdent;\n\n          var exportNames = (0, _create2.default)(null);\n          var modules = [];\n\n          var beforeBody = [];\n          var setters = [];\n          var sources = [];\n          var variableIds = [];\n          var removedPaths = [];\n\n          function addExportName(key, val) {\n            exportNames[key] = exportNames[key] || [];\n            exportNames[key].push(val);\n          }\n\n          function pushModule(source, key, specifiers) {\n            var module = void 0;\n            modules.forEach(function (m) {\n              if (m.key === source) {\n                module = m;\n              }\n            });\n            if (!module) {\n              modules.push(module = { key: source, imports: [], exports: [] });\n            }\n            module[key] = module[key].concat(specifiers);\n          }\n\n          function buildExportCall(name, val) {\n            return t.expressionStatement(t.callExpression(exportIdent, [t.stringLiteral(name), val]));\n          }\n\n          var body = path.get("body");\n\n          var canHoist = true;\n          for (var _iterator2 = body, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n            var _ref3;\n\n            if (_isArray2) {\n              if (_i2 >= _iterator2.length) break;\n              _ref3 = _iterator2[_i2++];\n            } else {\n              _i2 = _iterator2.next();\n              if (_i2.done) break;\n              _ref3 = _i2.value;\n            }\n\n            var _path = _ref3;\n\n            if (_path.isExportDeclaration()) _path = _path.get("declaration");\n            if (_path.isVariableDeclaration() && _path.node.kind !== "var") {\n              canHoist = false;\n              break;\n            }\n          }\n\n          for (var _iterator3 = body, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref4;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref4 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref4 = _i3.value;\n            }\n\n            var _path2 = _ref4;\n\n            if (canHoist && _path2.isFunctionDeclaration()) {\n              beforeBody.push(_path2.node);\n              removedPaths.push(_path2);\n            } else if (_path2.isImportDeclaration()) {\n              var source = _path2.node.source.value;\n              pushModule(source, "imports", _path2.node.specifiers);\n              for (var name in _path2.getBindingIdentifiers()) {\n                _path2.scope.removeBinding(name);\n                variableIds.push(t.identifier(name));\n              }\n              _path2.remove();\n            } else if (_path2.isExportAllDeclaration()) {\n              pushModule(_path2.node.source.value, "exports", _path2.node);\n              _path2.remove();\n            } else if (_path2.isExportDefaultDeclaration()) {\n              var declar = _path2.get("declaration");\n              if (declar.isClassDeclaration() || declar.isFunctionDeclaration()) {\n                var id = declar.node.id;\n                var nodes = [];\n\n                if (id) {\n                  nodes.push(declar.node);\n                  nodes.push(buildExportCall("default", id));\n                  addExportName(id.name, "default");\n                } else {\n                  nodes.push(buildExportCall("default", t.toExpression(declar.node)));\n                }\n\n                if (!canHoist || declar.isClassDeclaration()) {\n                  _path2.replaceWithMultiple(nodes);\n                } else {\n                  beforeBody = beforeBody.concat(nodes);\n                  removedPaths.push(_path2);\n                }\n              } else {\n                _path2.replaceWith(buildExportCall("default", declar.node));\n              }\n            } else if (_path2.isExportNamedDeclaration()) {\n              var _declar = _path2.get("declaration");\n\n              if (_declar.node) {\n                _path2.replaceWith(_declar);\n\n                var _nodes = [];\n                var bindingIdentifiers = void 0;\n                if (_path2.isFunction()) {\n                  var node = _declar.node;\n                  var _name = node.id.name;\n                  if (canHoist) {\n                    addExportName(_name, _name);\n                    beforeBody.push(node);\n                    beforeBody.push(buildExportCall(_name, node.id));\n                    removedPaths.push(_path2);\n                  } else {\n                    var _bindingIdentifiers;\n\n                    bindingIdentifiers = (_bindingIdentifiers = {}, _bindingIdentifiers[_name] = node.id, _bindingIdentifiers);\n                  }\n                } else {\n                  bindingIdentifiers = _declar.getBindingIdentifiers();\n                }\n                for (var _name2 in bindingIdentifiers) {\n                  addExportName(_name2, _name2);\n                  _nodes.push(buildExportCall(_name2, t.identifier(_name2)));\n                }\n                _path2.insertAfter(_nodes);\n              } else {\n                var specifiers = _path2.node.specifiers;\n                if (specifiers && specifiers.length) {\n                  if (_path2.node.source) {\n                    pushModule(_path2.node.source.value, "exports", specifiers);\n                    _path2.remove();\n                  } else {\n                    var _nodes2 = [];\n\n                    for (var _iterator7 = specifiers, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n                      var _ref8;\n\n                      if (_isArray7) {\n                        if (_i7 >= _iterator7.length) break;\n                        _ref8 = _iterator7[_i7++];\n                      } else {\n                        _i7 = _iterator7.next();\n                        if (_i7.done) break;\n                        _ref8 = _i7.value;\n                      }\n\n                      var specifier = _ref8;\n\n                      _nodes2.push(buildExportCall(specifier.exported.name, specifier.local));\n                      addExportName(specifier.local.name, specifier.exported.name);\n                    }\n\n                    _path2.replaceWithMultiple(_nodes2);\n                  }\n                }\n              }\n            }\n          }\n\n          modules.forEach(function (specifiers) {\n            var setterBody = [];\n            var target = path.scope.generateUidIdentifier(specifiers.key);\n\n            for (var _iterator4 = specifiers.imports, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n              var _ref5;\n\n              if (_isArray4) {\n                if (_i4 >= _iterator4.length) break;\n                _ref5 = _iterator4[_i4++];\n              } else {\n                _i4 = _iterator4.next();\n                if (_i4.done) break;\n                _ref5 = _i4.value;\n              }\n\n              var specifier = _ref5;\n\n              if (t.isImportNamespaceSpecifier(specifier)) {\n                setterBody.push(t.expressionStatement(t.assignmentExpression("=", specifier.local, target)));\n              } else if (t.isImportDefaultSpecifier(specifier)) {\n                specifier = t.importSpecifier(specifier.local, t.identifier("default"));\n              }\n\n              if (t.isImportSpecifier(specifier)) {\n                setterBody.push(t.expressionStatement(t.assignmentExpression("=", specifier.local, t.memberExpression(target, specifier.imported))));\n              }\n            }\n\n            if (specifiers.exports.length) {\n              var exportObjRef = path.scope.generateUidIdentifier("exportObj");\n\n              setterBody.push(t.variableDeclaration("var", [t.variableDeclarator(exportObjRef, t.objectExpression([]))]));\n\n              for (var _iterator5 = specifiers.exports, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n                var _ref6;\n\n                if (_isArray5) {\n                  if (_i5 >= _iterator5.length) break;\n                  _ref6 = _iterator5[_i5++];\n                } else {\n                  _i5 = _iterator5.next();\n                  if (_i5.done) break;\n                  _ref6 = _i5.value;\n                }\n\n                var node = _ref6;\n\n                if (t.isExportAllDeclaration(node)) {\n                  setterBody.push(buildExportAll({\n                    KEY: path.scope.generateUidIdentifier("key"),\n                    EXPORT_OBJ: exportObjRef,\n                    TARGET: target\n                  }));\n                } else if (t.isExportSpecifier(node)) {\n                  setterBody.push(t.expressionStatement(t.assignmentExpression("=", t.memberExpression(exportObjRef, node.exported), t.memberExpression(target, node.local))));\n                } else {}\n              }\n\n              setterBody.push(t.expressionStatement(t.callExpression(exportIdent, [exportObjRef])));\n            }\n\n            sources.push(t.stringLiteral(specifiers.key));\n            setters.push(t.functionExpression(null, [target], t.blockStatement(setterBody)));\n          });\n\n          var moduleName = this.getModuleName();\n          if (moduleName) moduleName = t.stringLiteral(moduleName);\n\n          if (canHoist) {\n            (0, _babelHelperHoistVariables2.default)(path, function (id) {\n              return variableIds.push(id);\n            });\n          }\n\n          if (variableIds.length) {\n            beforeBody.unshift(t.variableDeclaration("var", variableIds.map(function (id) {\n              return t.variableDeclarator(id);\n            })));\n          }\n\n          path.traverse(reassignmentVisitor, {\n            exports: exportNames,\n            buildCall: buildExportCall,\n            scope: path.scope\n          });\n\n          for (var _iterator6 = removedPaths, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n            var _ref7;\n\n            if (_isArray6) {\n              if (_i6 >= _iterator6.length) break;\n              _ref7 = _iterator6[_i6++];\n            } else {\n              _i6 = _iterator6.next();\n              if (_i6.done) break;\n              _ref7 = _i6.value;\n            }\n\n            var _path3 = _ref7;\n\n            _path3.remove();\n          }\n\n          path.node.body = [buildTemplate({\n            SYSTEM_REGISTER: t.memberExpression(t.identifier(state.opts.systemGlobal || "System"), t.identifier("register")),\n            BEFORE_BODY: beforeBody,\n            MODULE_NAME: moduleName,\n            SETTERS: setters,\n            SOURCES: sources,\n            BODY: path.node.body,\n            EXPORT_IDENTIFIER: exportIdent,\n            CONTEXT_IDENTIFIER: contextIdent\n          })];\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperHoistVariables = __webpack_require__("./node_modules/babel-helper-hoist-variables/lib/index.js");\n\nvar _babelHelperHoistVariables2 = _interopRequireDefault(_babelHelperHoistVariables);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildTemplate = (0, _babelTemplate2.default)("\\n  SYSTEM_REGISTER(MODULE_NAME, [SOURCES], function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\\n    \\"use strict\\";\\n    BEFORE_BODY;\\n    return {\\n      setters: [SETTERS],\\n      execute: function () {\\n        BODY;\\n      }\\n    };\\n  });\\n");\n\nvar buildExportAll = (0, _babelTemplate2.default)("\\n  for (var KEY in TARGET) {\\n    if (KEY !== \\"default\\" && KEY !== \\"__esModule\\") EXPORT_OBJ[KEY] = TARGET[KEY];\\n  }\\n");\n\nvar TYPE_IMPORT = "Import";\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-modules-systemjs/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-modules-umd/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function isValidDefine(path) {\n    if (!path.isExpressionStatement()) return;\n\n    var expr = path.get("expression");\n    if (!expr.isCallExpression()) return false;\n    if (!expr.get("callee").isIdentifier({ name: "define" })) return false;\n\n    var args = expr.get("arguments");\n    if (args.length === 3 && !args.shift().isStringLiteral()) return false;\n    if (args.length !== 2) return false;\n    if (!args.shift().isArrayExpression()) return false;\n    if (!args.shift().isFunctionExpression()) return false;\n\n    return true;\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-amd/lib/index.js"),\n\n    visitor: {\n      Program: {\n        exit: function exit(path, state) {\n          var last = path.get("body").pop();\n          if (!isValidDefine(last)) return;\n\n          var call = last.node.expression;\n          var args = call.arguments;\n\n          var moduleName = args.length === 3 ? args.shift() : null;\n          var amdArgs = call.arguments[0];\n          var func = call.arguments[1];\n          var browserGlobals = state.opts.globals || {};\n\n          var commonArgs = amdArgs.elements.map(function (arg) {\n            if (arg.value === "module" || arg.value === "exports") {\n              return t.identifier(arg.value);\n            } else {\n              return t.callExpression(t.identifier("require"), [arg]);\n            }\n          });\n\n          var browserArgs = amdArgs.elements.map(function (arg) {\n            if (arg.value === "module") {\n              return t.identifier("mod");\n            } else if (arg.value === "exports") {\n              return t.memberExpression(t.identifier("mod"), t.identifier("exports"));\n            } else {\n              var memberExpression = void 0;\n\n              if (state.opts.exactGlobals) {\n                var globalRef = browserGlobals[arg.value];\n                if (globalRef) {\n                  memberExpression = globalRef.split(".").reduce(function (accum, curr) {\n                    return t.memberExpression(accum, t.identifier(curr));\n                  }, t.identifier("global"));\n                } else {\n                  memberExpression = t.memberExpression(t.identifier("global"), t.identifier(t.toIdentifier(arg.value)));\n                }\n              } else {\n                var requireName = (0, _path.basename)(arg.value, (0, _path.extname)(arg.value));\n                var globalName = browserGlobals[requireName] || requireName;\n                memberExpression = t.memberExpression(t.identifier("global"), t.identifier(t.toIdentifier(globalName)));\n              }\n\n              return memberExpression;\n            }\n          });\n\n          var moduleNameOrBasename = moduleName ? moduleName.value : this.file.opts.basename;\n          var globalToAssign = t.memberExpression(t.identifier("global"), t.identifier(t.toIdentifier(moduleNameOrBasename)));\n          var prerequisiteAssignments = null;\n\n          if (state.opts.exactGlobals) {\n            var globalName = browserGlobals[moduleNameOrBasename];\n\n            if (globalName) {\n              prerequisiteAssignments = [];\n\n              var members = globalName.split(".");\n              globalToAssign = members.slice(1).reduce(function (accum, curr) {\n                prerequisiteAssignments.push(buildPrerequisiteAssignment({ GLOBAL_REFERENCE: accum }));\n                return t.memberExpression(accum, t.identifier(curr));\n              }, t.memberExpression(t.identifier("global"), t.identifier(members[0])));\n            }\n          }\n\n          var globalExport = buildGlobalExport({\n            BROWSER_ARGUMENTS: browserArgs,\n            PREREQUISITE_ASSIGNMENTS: prerequisiteAssignments,\n            GLOBAL_TO_ASSIGN: globalToAssign\n          });\n\n          last.replaceWith(buildWrapper({\n            MODULE_NAME: moduleName,\n            AMD_ARGUMENTS: amdArgs,\n            COMMON_ARGUMENTS: commonArgs,\n            GLOBAL_EXPORT: globalExport,\n            FUNC: func\n          }));\n        }\n      }\n    }\n  };\n};\n\nvar _path = __webpack_require__("./node_modules/path-browserify/index.js");\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildPrerequisiteAssignment = (0, _babelTemplate2.default)("\\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\\n");\n\nvar buildGlobalExport = (0, _babelTemplate2.default)("\\n  var mod = { exports: {} };\\n  factory(BROWSER_ARGUMENTS);\\n  PREREQUISITE_ASSIGNMENTS\\n  GLOBAL_TO_ASSIGN = mod.exports;\\n");\n\nvar buildWrapper = (0, _babelTemplate2.default)("\\n  (function (global, factory) {\\n    if (typeof define === \\"function\\" && define.amd) {\\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\\n    } else if (typeof exports !== \\"undefined\\") {\\n      factory(COMMON_ARGUMENTS);\\n    } else {\\n      GLOBAL_EXPORT\\n    }\\n  })(this, FUNC);\\n");\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-modules-umd/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-object-super/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function Property(path, node, scope, getObjectRef, file) {\n    var replaceSupers = new _babelHelperReplaceSupers2.default({\n      getObjectRef: getObjectRef,\n      methodNode: node,\n      methodPath: path,\n      isStatic: true,\n      scope: scope,\n      file: file\n    });\n\n    replaceSupers.replace();\n  }\n\n  var CONTAINS_SUPER = (0, _symbol2.default)();\n\n  return {\n    visitor: {\n      Super: function Super(path) {\n        var parentObj = path.findParent(function (path) {\n          return path.isObjectExpression();\n        });\n        if (parentObj) parentObj.node[CONTAINS_SUPER] = true;\n      },\n\n\n      ObjectExpression: {\n        exit: function exit(path, file) {\n          if (!path.node[CONTAINS_SUPER]) return;\n\n          var objectRef = void 0;\n          var getObjectRef = function getObjectRef() {\n            return objectRef = objectRef || path.scope.generateUidIdentifier("obj");\n          };\n\n          var propPaths = path.get("properties");\n          for (var _iterator = propPaths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n            var _ref2;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref2 = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref2 = _i.value;\n            }\n\n            var propPath = _ref2;\n\n            if (propPath.isObjectProperty()) propPath = propPath.get("value");\n            Property(propPath, propPath.node, path.scope, getObjectRef, file);\n          }\n\n          if (objectRef) {\n            path.scope.push({ id: objectRef });\n            path.replaceWith(t.assignmentExpression("=", objectRef, path.node));\n          }\n        }\n      }\n    }\n  };\n};\n\nvar _babelHelperReplaceSupers = __webpack_require__("./node_modules/babel-helper-replace-supers/lib/index.js");\n\nvar _babelHelperReplaceSupers2 = _interopRequireDefault(_babelHelperReplaceSupers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-object-super/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-parameters/lib/default.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _babelHelperGetFunctionArity = __webpack_require__("./node_modules/babel-helper-get-function-arity/lib/index.js");\n\nvar _babelHelperGetFunctionArity2 = _interopRequireDefault(_babelHelperGetFunctionArity);\n\nvar _babelHelperCallDelegate = __webpack_require__("./node_modules/babel-helper-call-delegate/lib/index.js");\n\nvar _babelHelperCallDelegate2 = _interopRequireDefault(_babelHelperCallDelegate);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildDefaultParam = (0, _babelTemplate2.default)("\\n  let VARIABLE_NAME =\\n    ARGUMENTS.length > ARGUMENT_KEY && ARGUMENTS[ARGUMENT_KEY] !== undefined ?\\n      ARGUMENTS[ARGUMENT_KEY]\\n    :\\n      DEFAULT_VALUE;\\n");\n\nvar buildCutOff = (0, _babelTemplate2.default)("\\n  let $0 = $1[$2];\\n");\n\nfunction hasDefaults(node) {\n  for (var _iterator = node.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var param = _ref;\n\n    if (!t.isIdentifier(param)) return true;\n  }\n  return false;\n}\n\nfunction isSafeBinding(scope, node) {\n  if (!scope.hasOwnBinding(node.name)) return true;\n\n  var _scope$getOwnBinding = scope.getOwnBinding(node.name),\n      kind = _scope$getOwnBinding.kind;\n\n  return kind === "param" || kind === "local";\n}\n\nvar iifeVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var scope = path.scope,\n        node = path.node;\n\n    if (node.name === "eval" || !isSafeBinding(scope, node)) {\n      state.iife = true;\n      path.stop();\n    }\n  },\n  Scope: function Scope(path) {\n    path.skip();\n  }\n};\n\nvar visitor = exports.visitor = {\n  Function: function Function(path) {\n    var node = path.node,\n        scope = path.scope;\n\n    if (!hasDefaults(node)) return;\n\n    path.ensureBlock();\n\n    var state = {\n      iife: false,\n      scope: scope\n    };\n\n    var body = [];\n\n    var argsIdentifier = t.identifier("arguments");\n    argsIdentifier._shadowedFunctionLiteral = path;\n\n    function pushDefNode(left, right, i) {\n      var defNode = buildDefaultParam({\n        VARIABLE_NAME: left,\n        DEFAULT_VALUE: right,\n        ARGUMENT_KEY: t.numericLiteral(i),\n        ARGUMENTS: argsIdentifier\n      });\n      defNode._blockHoist = node.params.length - i;\n      body.push(defNode);\n    }\n\n    var lastNonDefaultParam = (0, _babelHelperGetFunctionArity2.default)(node);\n\n    var params = path.get("params");\n    for (var i = 0; i < params.length; i++) {\n      var param = params[i];\n\n      if (!param.isAssignmentPattern()) {\n        if (!state.iife && !param.isIdentifier()) {\n          param.traverse(iifeVisitor, state);\n        }\n\n        continue;\n      }\n\n      var left = param.get("left");\n      var right = param.get("right");\n\n      if (i >= lastNonDefaultParam || left.isPattern()) {\n        var placeholder = scope.generateUidIdentifier("x");\n        placeholder._isDefaultPlaceholder = true;\n        node.params[i] = placeholder;\n      } else {\n        node.params[i] = left.node;\n      }\n\n      if (!state.iife) {\n        if (right.isIdentifier() && !isSafeBinding(scope, right.node)) {\n          state.iife = true;\n        } else {\n          right.traverse(iifeVisitor, state);\n        }\n      }\n\n      pushDefNode(left.node, right.node, i);\n    }\n\n    for (var _i2 = lastNonDefaultParam + 1; _i2 < node.params.length; _i2++) {\n      var _param = node.params[_i2];\n      if (_param._isDefaultPlaceholder) continue;\n\n      var declar = buildCutOff(_param, argsIdentifier, t.numericLiteral(_i2));\n      declar._blockHoist = node.params.length - _i2;\n      body.push(declar);\n    }\n\n    node.params = node.params.slice(0, lastNonDefaultParam);\n\n    if (state.iife) {\n      body.push((0, _babelHelperCallDelegate2.default)(path, scope));\n      path.set("body", t.blockStatement(body));\n    } else {\n      path.get("body").unshiftContainer("body", body);\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-parameters/lib/default.js?')},"./node_modules/babel-plugin-transform-es2015-parameters/lib/destructuring.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar visitor = exports.visitor = {\n  Function: function Function(path) {\n    var params = path.get("params");\n\n    var hoistTweak = t.isRestElement(params[params.length - 1]) ? 1 : 0;\n    var outputParamsLength = params.length - hoistTweak;\n\n    for (var i = 0; i < outputParamsLength; i++) {\n      var param = params[i];\n      if (param.isArrayPattern() || param.isObjectPattern()) {\n        var uid = path.scope.generateUidIdentifier("ref");\n\n        var declar = t.variableDeclaration("let", [t.variableDeclarator(param.node, uid)]);\n        declar._blockHoist = outputParamsLength - i;\n\n        path.ensureBlock();\n        path.get("body").unshiftContainer("body", declar);\n\n        param.replaceWith(uid);\n      }\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-parameters/lib/destructuring.js?')},"./node_modules/babel-plugin-transform-es2015-parameters/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function () {\n  return {\n    visitor: _babelTraverse.visitors.merge([{\n      ArrowFunctionExpression: function ArrowFunctionExpression(path) {\n        var params = path.get("params");\n        for (var _iterator = params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var param = _ref;\n\n          if (param.isRestElement() || param.isAssignmentPattern()) {\n            path.arrowFunctionToShadowed();\n            break;\n          }\n        }\n      }\n    }, destructuring.visitor, rest.visitor, def.visitor])\n  };\n};\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _destructuring = __webpack_require__("./node_modules/babel-plugin-transform-es2015-parameters/lib/destructuring.js");\n\nvar destructuring = _interopRequireWildcard(_destructuring);\n\nvar _default = __webpack_require__("./node_modules/babel-plugin-transform-es2015-parameters/lib/default.js");\n\nvar def = _interopRequireWildcard(_default);\n\nvar _rest = __webpack_require__("./node_modules/babel-plugin-transform-es2015-parameters/lib/rest.js");\n\nvar rest = _interopRequireWildcard(_rest);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-parameters/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-parameters/lib/rest.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.visitor = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _babelTemplate = __webpack_require__("./node_modules/babel-template/lib/index.js");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildRest = (0, _babelTemplate2.default)("\\n  for (var LEN = ARGUMENTS.length,\\n           ARRAY = Array(ARRAY_LEN),\\n           KEY = START;\\n       KEY < LEN;\\n       KEY++) {\\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\\n  }\\n");\n\nvar restIndex = (0, _babelTemplate2.default)("\\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\\n");\n\nvar restIndexImpure = (0, _babelTemplate2.default)("\\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\\n");\n\nvar restLength = (0, _babelTemplate2.default)("\\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\\n");\n\nvar memberExpressionOptimisationVisitor = {\n  Scope: function Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.name, state.outerBinding)) {\n      path.skip();\n    }\n  },\n  Flow: function Flow(path) {\n    if (path.isTypeCastExpression()) return;\n\n    path.skip();\n  },\n\n\n  "Function|ClassProperty": function FunctionClassProperty(path, state) {\n    var oldNoOptimise = state.noOptimise;\n    state.noOptimise = true;\n    path.traverse(memberExpressionOptimisationVisitor, state);\n    state.noOptimise = oldNoOptimise;\n\n    path.skip();\n  },\n\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var node = path.node;\n\n    if (node.name === "arguments") {\n      state.deopted = true;\n    }\n\n    if (node.name !== state.name) return;\n\n    if (state.noOptimise) {\n      state.deopted = true;\n    } else {\n      var parentPath = path.parentPath;\n\n      if (parentPath.listKey === "params" && parentPath.key < state.offset) {\n        return;\n      }\n\n      if (parentPath.isMemberExpression({ object: node })) {\n        var grandparentPath = parentPath.parentPath;\n\n        var argsOptEligible = !state.deopted && !(grandparentPath.isAssignmentExpression() && parentPath.node === grandparentPath.node.left || grandparentPath.isLVal() || grandparentPath.isForXStatement() || grandparentPath.isUpdateExpression() || grandparentPath.isUnaryExpression({ operator: "delete" }) || (grandparentPath.isCallExpression() || grandparentPath.isNewExpression()) && parentPath.node === grandparentPath.node.callee);\n\n        if (argsOptEligible) {\n          if (parentPath.node.computed) {\n            if (parentPath.get("property").isBaseType("number")) {\n              state.candidates.push({ cause: "indexGetter", path: path });\n              return;\n            }\n          } else if (parentPath.node.property.name === "length") {\n              state.candidates.push({ cause: "lengthGetter", path: path });\n              return;\n            }\n        }\n      }\n\n      if (state.offset === 0 && parentPath.isSpreadElement()) {\n        var call = parentPath.parentPath;\n        if (call.isCallExpression() && call.node.arguments.length === 1) {\n          state.candidates.push({ cause: "argSpread", path: path });\n          return;\n        }\n      }\n\n      state.references.push(path);\n    }\n  },\n  BindingIdentifier: function BindingIdentifier(_ref, state) {\n    var node = _ref.node;\n\n    if (node.name === state.name) {\n      state.deopted = true;\n    }\n  }\n};\nfunction hasRest(node) {\n  return t.isRestElement(node.params[node.params.length - 1]);\n}\n\nfunction optimiseIndexGetter(path, argsId, offset) {\n  var index = void 0;\n\n  if (t.isNumericLiteral(path.parent.property)) {\n    index = t.numericLiteral(path.parent.property.value + offset);\n  } else if (offset === 0) {\n    index = path.parent.property;\n  } else {\n    index = t.binaryExpression("+", path.parent.property, t.numericLiteral(offset));\n  }\n\n  var scope = path.scope;\n\n  if (!scope.isPure(index)) {\n    var temp = scope.generateUidIdentifierBasedOnNode(index);\n    scope.push({ id: temp, kind: "var" });\n    path.parentPath.replaceWith(restIndexImpure({\n      ARGUMENTS: argsId,\n      INDEX: index,\n      REF: temp\n    }));\n  } else {\n    path.parentPath.replaceWith(restIndex({\n      ARGUMENTS: argsId,\n      INDEX: index\n    }));\n  }\n}\n\nfunction optimiseLengthGetter(path, argsId, offset) {\n  if (offset) {\n    path.parentPath.replaceWith(restLength({\n      ARGUMENTS: argsId,\n      OFFSET: t.numericLiteral(offset)\n    }));\n  } else {\n    path.replaceWith(argsId);\n  }\n}\n\nvar visitor = exports.visitor = {\n  Function: function Function(path) {\n    var node = path.node,\n        scope = path.scope;\n\n    if (!hasRest(node)) return;\n\n    var rest = node.params.pop().argument;\n\n    var argsId = t.identifier("arguments");\n\n    argsId._shadowedFunctionLiteral = path;\n\n    var state = {\n      references: [],\n      offset: node.params.length,\n\n      argumentsNode: argsId,\n      outerBinding: scope.getBindingIdentifier(rest.name),\n\n      candidates: [],\n\n      name: rest.name,\n\n      deopted: false\n    };\n\n    path.traverse(memberExpressionOptimisationVisitor, state);\n\n    if (!state.deopted && !state.references.length) {\n      for (var _iterator = state.candidates, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref3;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref3 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref3 = _i.value;\n        }\n\n        var _ref4 = _ref3;\n        var _path = _ref4.path,\n            cause = _ref4.cause;\n\n        switch (cause) {\n          case "indexGetter":\n            optimiseIndexGetter(_path, argsId, state.offset);\n            break;\n          case "lengthGetter":\n            optimiseLengthGetter(_path, argsId, state.offset);\n            break;\n          default:\n            _path.replaceWith(argsId);\n        }\n      }\n      return;\n    }\n\n    state.references = state.references.concat(state.candidates.map(function (_ref5) {\n      var path = _ref5.path;\n      return path;\n    }));\n\n    state.deopted = state.deopted || !!node.shadow;\n\n    var start = t.numericLiteral(node.params.length);\n    var key = scope.generateUidIdentifier("key");\n    var len = scope.generateUidIdentifier("len");\n\n    var arrKey = key;\n    var arrLen = len;\n    if (node.params.length) {\n      arrKey = t.binaryExpression("-", key, start);\n\n      arrLen = t.conditionalExpression(t.binaryExpression(">", len, start), t.binaryExpression("-", len, start), t.numericLiteral(0));\n    }\n\n    var loop = buildRest({\n      ARGUMENTS: argsId,\n      ARRAY_KEY: arrKey,\n      ARRAY_LEN: arrLen,\n      START: start,\n      ARRAY: rest,\n      KEY: key,\n      LEN: len\n    });\n\n    if (state.deopted) {\n      loop._blockHoist = node.params.length + 1;\n      node.body.body.unshift(loop);\n    } else {\n      loop._blockHoist = 1;\n\n      var target = path.getEarliestCommonAncestorFrom(state.references).getStatementParent();\n\n      target.findParent(function (path) {\n        if (path.isLoop()) {\n          target = path;\n        } else {\n          return path.isFunction();\n        }\n      });\n\n      target.insertBefore(loop);\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-parameters/lib/rest.js?')},"./node_modules/babel-plugin-transform-es2015-shorthand-properties/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    visitor: {\n      ObjectMethod: function ObjectMethod(path) {\n        var node = path.node;\n\n        if (node.kind === "method") {\n          var func = t.functionExpression(null, node.params, node.body, node.generator, node.async);\n          func.returnType = node.returnType;\n\n          path.replaceWith(t.objectProperty(node.key, func, node.computed));\n        }\n      },\n      ObjectProperty: function ObjectProperty(_ref) {\n        var node = _ref.node;\n\n        if (node.shorthand) {\n          node.shorthand = false;\n        }\n      }\n    }\n  };\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-shorthand-properties/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-spread/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function getSpreadLiteral(spread, scope, state) {\n    if (state.opts.loose && !t.isIdentifier(spread.argument, { name: "arguments" })) {\n      return spread.argument;\n    } else {\n      return scope.toArray(spread.argument, true);\n    }\n  }\n\n  function hasSpread(nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      if (t.isSpreadElement(nodes[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function build(props, scope, state) {\n    var nodes = [];\n\n    var _props = [];\n\n    function push() {\n      if (!_props.length) return;\n      nodes.push(t.arrayExpression(_props));\n      _props = [];\n    }\n\n    for (var _iterator = props, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var prop = _ref2;\n\n      if (t.isSpreadElement(prop)) {\n        push();\n        nodes.push(getSpreadLiteral(prop, scope, state));\n      } else {\n        _props.push(prop);\n      }\n    }\n\n    push();\n\n    return nodes;\n  }\n\n  return {\n    visitor: {\n      ArrayExpression: function ArrayExpression(path, state) {\n        var node = path.node,\n            scope = path.scope;\n\n        var elements = node.elements;\n        if (!hasSpread(elements)) return;\n\n        var nodes = build(elements, scope, state);\n        var first = nodes.shift();\n\n        if (!t.isArrayExpression(first)) {\n          nodes.unshift(first);\n          first = t.arrayExpression([]);\n        }\n\n        path.replaceWith(t.callExpression(t.memberExpression(first, t.identifier("concat")), nodes));\n      },\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node,\n            scope = path.scope;\n\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var calleePath = path.get("callee");\n        if (calleePath.isSuper()) return;\n\n        var contextLiteral = t.identifier("undefined");\n\n        node.arguments = [];\n\n        var nodes = void 0;\n        if (args.length === 1 && args[0].argument.name === "arguments") {\n          nodes = [args[0].argument];\n        } else {\n          nodes = build(args, scope, state);\n        }\n\n        var first = nodes.shift();\n        if (nodes.length) {\n          node.arguments.push(t.callExpression(t.memberExpression(first, t.identifier("concat")), nodes));\n        } else {\n          node.arguments.push(first);\n        }\n\n        var callee = node.callee;\n\n        if (calleePath.isMemberExpression()) {\n          var temp = scope.maybeGenerateMemoised(callee.object);\n          if (temp) {\n            callee.object = t.assignmentExpression("=", temp, callee.object);\n            contextLiteral = temp;\n          } else {\n            contextLiteral = callee.object;\n          }\n          t.appendToMemberExpression(callee, t.identifier("apply"));\n        } else {\n          node.callee = t.memberExpression(node.callee, t.identifier("apply"));\n        }\n\n        if (t.isSuper(contextLiteral)) {\n          contextLiteral = t.thisExpression();\n        }\n\n        node.arguments.unshift(contextLiteral);\n      },\n      NewExpression: function NewExpression(path, state) {\n        var node = path.node,\n            scope = path.scope;\n\n        var args = node.arguments;\n        if (!hasSpread(args)) return;\n\n        var nodes = build(args, scope, state);\n\n        var context = t.arrayExpression([t.nullLiteral()]);\n\n        args = t.callExpression(t.memberExpression(context, t.identifier("concat")), nodes);\n\n        path.replaceWith(t.newExpression(t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier("Function"), t.identifier("prototype")), t.identifier("bind")), t.identifier("apply")), [node.callee, args]), []));\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-spread/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-sticky-regex/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    visitor: {\n      RegExpLiteral: function RegExpLiteral(path) {\n        var node = path.node;\n\n        if (!regex.is(node, "y")) return;\n\n        path.replaceWith(t.newExpression(t.identifier("RegExp"), [t.stringLiteral(node.pattern), t.stringLiteral(node.flags)]));\n      }\n    }\n  };\n};\n\nvar _babelHelperRegex = __webpack_require__("./node_modules/babel-helper-regex/lib/index.js");\n\nvar regex = _interopRequireWildcard(_babelHelperRegex);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-sticky-regex/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-template-literals/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function isString(node) {\n    return t.isLiteral(node) && typeof node.value === "string";\n  }\n\n  function buildBinaryExpression(left, right) {\n    return t.binaryExpression("+", left, right);\n  }\n\n  return {\n    visitor: {\n      TaggedTemplateExpression: function TaggedTemplateExpression(path, state) {\n        var node = path.node;\n\n        var quasi = node.quasi;\n        var args = [];\n\n        var strings = [];\n        var raw = [];\n\n        for (var _iterator = quasi.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var elem = _ref2;\n\n          strings.push(t.stringLiteral(elem.value.cooked));\n          raw.push(t.stringLiteral(elem.value.raw));\n        }\n\n        strings = t.arrayExpression(strings);\n        raw = t.arrayExpression(raw);\n\n        var templateName = "taggedTemplateLiteral";\n        if (state.opts.loose) templateName += "Loose";\n\n        var templateObject = state.file.addTemplateObject(templateName, strings, raw);\n        args.push(templateObject);\n\n        args = args.concat(quasi.expressions);\n\n        path.replaceWith(t.callExpression(node.tag, args));\n      },\n      TemplateLiteral: function TemplateLiteral(path, state) {\n        var nodes = [];\n\n        var expressions = path.get("expressions");\n\n        for (var _iterator2 = path.node.quasis, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var elem = _ref3;\n\n          nodes.push(t.stringLiteral(elem.value.cooked));\n\n          var expr = expressions.shift();\n          if (expr) {\n            if (state.opts.spec && !expr.isBaseType("string") && !expr.isBaseType("number")) {\n              nodes.push(t.callExpression(t.identifier("String"), [expr.node]));\n            } else {\n              nodes.push(expr.node);\n            }\n          }\n        }\n\n        nodes = nodes.filter(function (n) {\n          return !t.isLiteral(n, { value: "" });\n        });\n\n        if (!isString(nodes[0]) && !isString(nodes[1])) {\n          nodes.unshift(t.stringLiteral(""));\n        }\n\n        if (nodes.length > 1) {\n          var root = buildBinaryExpression(nodes.shift(), nodes.shift());\n\n          for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n            var _ref4;\n\n            if (_isArray3) {\n              if (_i3 >= _iterator3.length) break;\n              _ref4 = _iterator3[_i3++];\n            } else {\n              _i3 = _iterator3.next();\n              if (_i3.done) break;\n              _ref4 = _i3.value;\n            }\n\n            var node = _ref4;\n\n            root = buildBinaryExpression(root, node);\n          }\n\n          path.replaceWith(root);\n        } else {\n          path.replaceWith(nodes[0]);\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-template-literals/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-typeof-symbol/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var IGNORE = (0, _symbol2.default)();\n\n  return {\n    visitor: {\n      Scope: function Scope(_ref2) {\n        var scope = _ref2.scope;\n\n        if (!scope.getBinding("Symbol")) {\n          return;\n        }\n\n        scope.rename("Symbol");\n      },\n      UnaryExpression: function UnaryExpression(path) {\n        var node = path.node,\n            parent = path.parent;\n\n        if (node[IGNORE]) return;\n        if (path.find(function (path) {\n          return path.node && !!path.node._generated;\n        })) return;\n\n        if (path.parentPath.isBinaryExpression() && t.EQUALITY_BINARY_OPERATORS.indexOf(parent.operator) >= 0) {\n          var opposite = path.getOpposite();\n          if (opposite.isLiteral() && opposite.node.value !== "symbol" && opposite.node.value !== "object") {\n            return;\n          }\n        }\n\n        if (node.operator === "typeof") {\n          var call = t.callExpression(this.addHelper("typeof"), [node.argument]);\n          if (path.get("argument").isIdentifier()) {\n            var undefLiteral = t.stringLiteral("undefined");\n            var unary = t.unaryExpression("typeof", node.argument);\n            unary[IGNORE] = true;\n            path.replaceWith(t.conditionalExpression(t.binaryExpression("===", unary, undefLiteral), undefLiteral, call));\n          } else {\n            path.replaceWith(call);\n          }\n        }\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-typeof-symbol/lib/index.js?')},"./node_modules/babel-plugin-transform-es2015-unicode-regex/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function () {\n  return {\n    visitor: {\n      RegExpLiteral: function RegExpLiteral(_ref) {\n        var node = _ref.node;\n\n        if (!regex.is(node, "u")) return;\n        node.pattern = (0, _regexpuCore2.default)(node.pattern, node.flags);\n        regex.pullFlag(node, "u");\n      }\n    }\n  };\n};\n\nvar _regexpuCore = __webpack_require__("./node_modules/regexpu-core/rewrite-pattern.js");\n\nvar _regexpuCore2 = _interopRequireDefault(_regexpuCore);\n\nvar _babelHelperRegex = __webpack_require__("./node_modules/babel-helper-regex/lib/index.js");\n\nvar regex = _interopRequireWildcard(_babelHelperRegex);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-es2015-unicode-regex/lib/index.js?')},"./node_modules/babel-plugin-transform-exponentiation-operator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-exponentiation-operator/lib/index.js"),\n\n    visitor: (0, _babelHelperBuilderBinaryAssignmentOperatorVisitor2.default)({\n      operator: "**",\n\n      build: function build(left, right) {\n        return t.callExpression(t.memberExpression(t.identifier("Math"), t.identifier("pow")), [left, right]);\n      }\n    })\n  };\n};\n\nvar _babelHelperBuilderBinaryAssignmentOperatorVisitor = __webpack_require__("./node_modules/babel-helper-builder-binary-assignment-operator-visitor/lib/index.js");\n\nvar _babelHelperBuilderBinaryAssignmentOperatorVisitor2 = _interopRequireDefault(_babelHelperBuilderBinaryAssignmentOperatorVisitor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-exponentiation-operator/lib/index.js?')},"./node_modules/babel-plugin-transform-export-extensions/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function build(node, nodes, scope) {\n    var first = node.specifiers[0];\n    if (!t.isExportNamespaceSpecifier(first) && !t.isExportDefaultSpecifier(first)) return;\n\n    var specifier = node.specifiers.shift();\n    var uid = scope.generateUidIdentifier(specifier.exported.name);\n\n    var newSpecifier = void 0;\n    if (t.isExportNamespaceSpecifier(specifier)) {\n      newSpecifier = t.importNamespaceSpecifier(uid);\n    } else {\n      newSpecifier = t.importDefaultSpecifier(uid);\n    }\n\n    nodes.push(t.importDeclaration([newSpecifier], node.source));\n    nodes.push(t.exportNamedDeclaration(null, [t.exportSpecifier(uid, specifier.exported)]));\n\n    build(node, nodes, scope);\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-export-extensions/lib/index.js"),\n\n    visitor: {\n      ExportNamedDeclaration: function ExportNamedDeclaration(path) {\n        var node = path.node,\n            scope = path.scope;\n\n        var nodes = [];\n        build(node, nodes, scope);\n        if (!nodes.length) return;\n\n        if (node.specifiers.length >= 1) {\n          nodes.push(node);\n        }\n        path.replaceWithMultiple(nodes);\n      }\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-export-extensions/lib/index.js?')},"./node_modules/babel-plugin-transform-flow-strip-types/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  var FLOW_DIRECTIVE = "@flow";\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-flow/lib/index.js"),\n\n    visitor: {\n      Program: function Program(path, _ref2) {\n        var comments = _ref2.file.ast.comments;\n\n        for (var _iterator = comments, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref3;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref3 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref3 = _i.value;\n          }\n\n          var comment = _ref3;\n\n          if (comment.value.indexOf(FLOW_DIRECTIVE) >= 0) {\n            comment.value = comment.value.replace(FLOW_DIRECTIVE, "");\n\n            if (!comment.value.replace(/\\*/g, "").trim()) comment.ignore = true;\n          }\n        }\n      },\n      Flow: function Flow(path) {\n        path.remove();\n      },\n      ClassProperty: function ClassProperty(path) {\n        path.node.variance = null;\n        path.node.typeAnnotation = null;\n        if (!path.node.value) path.remove();\n      },\n      Class: function Class(path) {\n        path.node.implements = null;\n\n        path.get("body.body").forEach(function (child) {\n          if (child.isClassProperty()) {\n            child.node.typeAnnotation = null;\n            if (!child.node.value) child.remove();\n          }\n        });\n      },\n      AssignmentPattern: function AssignmentPattern(_ref4) {\n        var node = _ref4.node;\n\n        node.left.optional = false;\n      },\n      Function: function Function(_ref5) {\n        var node = _ref5.node;\n\n        for (var i = 0; i < node.params.length; i++) {\n          var param = node.params[i];\n          param.optional = false;\n        }\n      },\n      TypeCastExpression: function TypeCastExpression(path) {\n        var node = path.node;\n\n        do {\n          node = node.expression;\n        } while (t.isTypeCastExpression(node));\n        path.replaceWith(node);\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-flow-strip-types/lib/index.js?')},"./node_modules/babel-plugin-transform-function-bind/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function getTempId(scope) {\n    var id = scope.path.getData("functionBind");\n    if (id) return id;\n\n    id = scope.generateDeclaredUidIdentifier("context");\n    return scope.path.setData("functionBind", id);\n  }\n\n  function getStaticContext(bind, scope) {\n    var object = bind.object || bind.callee.object;\n    return scope.isStatic(object) && object;\n  }\n\n  function inferBindContext(bind, scope) {\n    var staticContext = getStaticContext(bind, scope);\n    if (staticContext) return staticContext;\n\n    var tempId = getTempId(scope);\n    if (bind.object) {\n      bind.callee = t.sequenceExpression([t.assignmentExpression("=", tempId, bind.object), bind.callee]);\n    } else {\n      bind.callee.object = t.assignmentExpression("=", tempId, bind.callee.object);\n    }\n    return tempId;\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-function-bind/lib/index.js"),\n\n    visitor: {\n      CallExpression: function CallExpression(_ref2) {\n        var node = _ref2.node,\n            scope = _ref2.scope;\n\n        var bind = node.callee;\n        if (!t.isBindExpression(bind)) return;\n\n        var context = inferBindContext(bind, scope);\n        node.callee = t.memberExpression(bind.callee, t.identifier("call"));\n        node.arguments.unshift(context);\n      },\n      BindExpression: function BindExpression(path) {\n        var node = path.node,\n            scope = path.scope;\n\n        var context = inferBindContext(node, scope);\n        path.replaceWith(t.callExpression(t.memberExpression(node.callee, t.identifier("bind")), [context]));\n      }\n    }\n  };\n};\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-function-bind/lib/index.js?')},"./node_modules/babel-plugin-transform-object-rest-spread/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (_ref) {\n  var t = _ref.types;\n\n  function hasRestProperty(path) {\n    var foundRestProperty = false;\n    path.traverse({\n      RestProperty: function RestProperty() {\n        foundRestProperty = true;\n        path.stop();\n      }\n    });\n    return foundRestProperty;\n  }\n\n  function hasSpread(node) {\n    for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var prop = _ref2;\n\n      if (t.isSpreadProperty(prop)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function createObjectSpread(file, props, objRef) {\n    var restProperty = props.pop();\n\n    var keys = [];\n    for (var _iterator2 = props, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref3;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref3 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref3 = _i2.value;\n      }\n\n      var prop = _ref3;\n\n      var key = prop.key;\n      if (t.isIdentifier(key) && !prop.computed) {\n        key = t.stringLiteral(prop.key.name);\n      }\n      keys.push(key);\n    }\n\n    return [restProperty.argument, t.callExpression(file.addHelper("objectWithoutProperties"), [objRef, t.arrayExpression(keys)])];\n  }\n\n  function replaceRestProperty(parentPath, paramPath, i, numParams) {\n    if (paramPath.isAssignmentPattern()) {\n      replaceRestProperty(parentPath, paramPath.get("left"), i, numParams);\n      return;\n    }\n\n    if (paramPath.isObjectPattern() && hasRestProperty(paramPath)) {\n      var uid = parentPath.scope.generateUidIdentifier("ref");\n\n      var declar = t.variableDeclaration("let", [t.variableDeclarator(paramPath.node, uid)]);\n      declar._blockHoist = i ? numParams - i : 1;\n\n      parentPath.ensureBlock();\n      parentPath.get("body").unshiftContainer("body", declar);\n      paramPath.replaceWith(uid);\n    }\n  }\n\n  return {\n    inherits: __webpack_require__("./node_modules/babel-plugin-syntax-object-rest-spread/lib/index.js"),\n\n    visitor: {\n      Function: function Function(path) {\n        var params = path.get("params");\n        for (var i = 0; i < params.length; i++) {\n          replaceRestProperty(params[i].parentPath, params[i], i, params.length);\n        }\n      },\n      VariableDeclarator: function VariableDeclarator(path, file) {\n        if (!path.get("id").isObjectPattern()) {\n          return;\n        }\n\n        var insertionPath = path;\n\n        path.get("id").traverse({\n          RestProperty: function RestProperty(path) {\n            if (this.originalPath.node.id.properties.length > 1 && !t.isIdentifier(this.originalPath.node.init)) {\n              var initRef = path.scope.generateUidIdentifierBasedOnNode(this.originalPath.node.init, "ref");\n\n              this.originalPath.insertBefore(t.variableDeclarator(initRef, this.originalPath.node.init));\n\n              this.originalPath.replaceWith(t.variableDeclarator(this.originalPath.node.id, initRef));\n\n              return;\n            }\n\n            var ref = this.originalPath.node.init;\n            var refPropertyPath = [];\n\n            path.findParent(function (path) {\n              if (path.isObjectProperty()) {\n                refPropertyPath.unshift(path.node.key.name);\n              } else if (path.isVariableDeclarator()) {\n                return true;\n              }\n            });\n\n            if (refPropertyPath.length) {\n              refPropertyPath.forEach(function (prop) {\n                ref = t.memberExpression(ref, t.identifier(prop));\n              });\n            }\n\n            var _createObjectSpread = createObjectSpread(file, path.parentPath.node.properties, ref),\n                argument = _createObjectSpread[0],\n                callExpression = _createObjectSpread[1];\n\n            insertionPath.insertAfter(t.variableDeclarator(argument, callExpression));\n\n            insertionPath = insertionPath.getSibling(insertionPath.key + 1);\n\n            if (path.parentPath.node.properties.length === 0) {\n              path.findParent(function (path) {\n                return path.isObjectProperty() || path.isVariableDeclarator();\n              }).remove();\n            }\n          }\n        }, {\n          originalPath: path\n        });\n      },\n      ExportNamedDeclaration: function ExportNamedDeclaration(path) {\n        var declaration = path.get("declaration");\n        if (!declaration.isVariableDeclaration()) return;\n        if (!hasRestProperty(declaration)) return;\n\n        var specifiers = [];\n\n        for (var name in path.getOuterBindingIdentifiers(path)) {\n          var id = t.identifier(name);\n          specifiers.push(t.exportSpecifier(id, id));\n        }\n\n        path.replaceWith(declaration.node);\n        path.insertAfter(t.exportNamedDeclaration(null, specifiers));\n      },\n      CatchClause: function CatchClause(path) {\n        var paramPath = path.get("param");\n        replaceRestProperty(paramPath.parentPath, paramPath);\n      },\n      AssignmentExpression: function AssignmentExpression(path, file) {\n        var leftPath = path.get("left");\n        if (leftPath.isObjectPattern() && hasRestProperty(leftPath)) {\n          var nodes = [];\n\n          var ref = void 0;\n          if (path.isCompletionRecord() || path.parentPath.isExpressionStatement()) {\n            ref = path.scope.generateUidIdentifierBasedOnNode(path.node.right, "ref");\n\n            nodes.push(t.variableDeclaration("var", [t.variableDeclarator(ref, path.node.right)]));\n          }\n\n          var _createObjectSpread2 = createObjectSpread(file, path.node.left.properties, ref),\n              argument = _createObjectSpread2[0],\n              callExpression = _createObjectSpread2[1];\n\n          var nodeWithoutSpread = t.clone(path.node);\n          nodeWithoutSpread.right = ref;\n          nodes.push(t.expressionStatement(nodeWithoutSpread));\n          nodes.push(t.toStatement(t.assignmentExpression("=", argument, callExpression)));\n\n          if (ref) {\n            nodes.push(t.expressionStatement(ref));\n          }\n\n          path.replaceWithMultiple(nodes);\n        }\n      },\n      ForXStatement: function ForXStatement(path) {\n        var node = path.node,\n            scope = path.scope;\n\n        var leftPath = path.get("left");\n        var left = node.left;\n\n        if (t.isObjectPattern(left) && hasRestProperty(leftPath)) {\n          var temp = scope.generateUidIdentifier("ref");\n\n          node.left = t.variableDeclaration("var", [t.variableDeclarator(temp)]);\n\n          path.ensureBlock();\n\n          node.body.body.unshift(t.variableDeclaration("var", [t.variableDeclarator(left, temp)]));\n\n          return;\n        }\n\n        if (!t.isVariableDeclaration(left)) return;\n\n        var pattern = left.declarations[0].id;\n        if (!t.isObjectPattern(pattern)) return;\n\n        var key = scope.generateUidIdentifier("ref");\n        node.left = t.variableDeclaration(left.kind, [t.variableDeclarator(key, null)]);\n\n        path.ensureBlock();\n\n        node.body.body.unshift(t.variableDeclaration(node.left.kind, [t.variableDeclarator(pattern, key)]));\n      },\n      ObjectExpression: function ObjectExpression(path, file) {\n        if (!hasSpread(path.node)) return;\n\n        var useBuiltIns = file.opts.useBuiltIns || false;\n        if (typeof useBuiltIns !== "boolean") {\n          throw new Error("transform-object-rest-spread currently only accepts a boolean " + "option for useBuiltIns (defaults to false)");\n        }\n\n        var args = [];\n        var props = [];\n\n        function push() {\n          if (!props.length) return;\n          args.push(t.objectExpression(props));\n          props = [];\n        }\n\n        for (var _iterator3 = path.node.properties, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n          var _ref4;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref4 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref4 = _i3.value;\n          }\n\n          var prop = _ref4;\n\n          if (t.isSpreadProperty(prop)) {\n            push();\n            args.push(prop.argument);\n          } else {\n            props.push(prop);\n          }\n        }\n\n        push();\n\n        if (!t.isObjectExpression(args[0])) {\n          args.unshift(t.objectExpression([]));\n        }\n\n        var helper = useBuiltIns ? t.memberExpression(t.identifier("Object"), t.identifier("assign")) : file.addHelper("extends");\n\n        path.replaceWith(t.callExpression(helper, args));\n      }\n    }\n  };\n};\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-object-rest-spread/lib/index.js?')},"./node_modules/babel-plugin-transform-regenerator/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = __webpack_require__("./node_modules/regenerator-transform/lib/index.js");\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-regenerator/lib/index.js?')},"./node_modules/babel-plugin-transform-strict-mode/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function () {\n  return {\n    visitor: {\n      Program: function Program(path, state) {\n        if (state.opts.strict === false || state.opts.strictMode === false) return;\n\n        var node = path.node;\n\n\n        for (var _iterator = node.directives, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var directive = _ref;\n\n          if (directive.value.value === "use strict") return;\n        }\n\n        path.unshiftContainer("directives", t.directive(t.directiveLiteral("use strict")));\n      }\n    }\n  };\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-plugin-transform-strict-mode/lib/index.js?')},"./node_modules/babel-preset-es2015/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelPluginTransformEs2015TemplateLiterals = __webpack_require__("./node_modules/babel-plugin-transform-es2015-template-literals/lib/index.js");\n\nvar _babelPluginTransformEs2015TemplateLiterals2 = _interopRequireDefault(_babelPluginTransformEs2015TemplateLiterals);\n\nvar _babelPluginTransformEs2015Literals = __webpack_require__("./node_modules/babel-plugin-transform-es2015-literals/lib/index.js");\n\nvar _babelPluginTransformEs2015Literals2 = _interopRequireDefault(_babelPluginTransformEs2015Literals);\n\nvar _babelPluginTransformEs2015FunctionName = __webpack_require__("./node_modules/babel-plugin-transform-es2015-function-name/lib/index.js");\n\nvar _babelPluginTransformEs2015FunctionName2 = _interopRequireDefault(_babelPluginTransformEs2015FunctionName);\n\nvar _babelPluginTransformEs2015ArrowFunctions = __webpack_require__("./node_modules/babel-plugin-transform-es2015-arrow-functions/lib/index.js");\n\nvar _babelPluginTransformEs2015ArrowFunctions2 = _interopRequireDefault(_babelPluginTransformEs2015ArrowFunctions);\n\nvar _babelPluginTransformEs2015BlockScopedFunctions = __webpack_require__("./node_modules/babel-plugin-transform-es2015-block-scoped-functions/lib/index.js");\n\nvar _babelPluginTransformEs2015BlockScopedFunctions2 = _interopRequireDefault(_babelPluginTransformEs2015BlockScopedFunctions);\n\nvar _babelPluginTransformEs2015Classes = __webpack_require__("./node_modules/babel-plugin-transform-es2015-classes/lib/index.js");\n\nvar _babelPluginTransformEs2015Classes2 = _interopRequireDefault(_babelPluginTransformEs2015Classes);\n\nvar _babelPluginTransformEs2015ObjectSuper = __webpack_require__("./node_modules/babel-plugin-transform-es2015-object-super/lib/index.js");\n\nvar _babelPluginTransformEs2015ObjectSuper2 = _interopRequireDefault(_babelPluginTransformEs2015ObjectSuper);\n\nvar _babelPluginTransformEs2015ShorthandProperties = __webpack_require__("./node_modules/babel-plugin-transform-es2015-shorthand-properties/lib/index.js");\n\nvar _babelPluginTransformEs2015ShorthandProperties2 = _interopRequireDefault(_babelPluginTransformEs2015ShorthandProperties);\n\nvar _babelPluginTransformEs2015DuplicateKeys = __webpack_require__("./node_modules/babel-plugin-transform-es2015-duplicate-keys/lib/index.js");\n\nvar _babelPluginTransformEs2015DuplicateKeys2 = _interopRequireDefault(_babelPluginTransformEs2015DuplicateKeys);\n\nvar _babelPluginTransformEs2015ComputedProperties = __webpack_require__("./node_modules/babel-plugin-transform-es2015-computed-properties/lib/index.js");\n\nvar _babelPluginTransformEs2015ComputedProperties2 = _interopRequireDefault(_babelPluginTransformEs2015ComputedProperties);\n\nvar _babelPluginTransformEs2015ForOf = __webpack_require__("./node_modules/babel-plugin-transform-es2015-for-of/lib/index.js");\n\nvar _babelPluginTransformEs2015ForOf2 = _interopRequireDefault(_babelPluginTransformEs2015ForOf);\n\nvar _babelPluginTransformEs2015StickyRegex = __webpack_require__("./node_modules/babel-plugin-transform-es2015-sticky-regex/lib/index.js");\n\nvar _babelPluginTransformEs2015StickyRegex2 = _interopRequireDefault(_babelPluginTransformEs2015StickyRegex);\n\nvar _babelPluginTransformEs2015UnicodeRegex = __webpack_require__("./node_modules/babel-plugin-transform-es2015-unicode-regex/lib/index.js");\n\nvar _babelPluginTransformEs2015UnicodeRegex2 = _interopRequireDefault(_babelPluginTransformEs2015UnicodeRegex);\n\nvar _babelPluginCheckEs2015Constants = __webpack_require__("./node_modules/babel-plugin-check-es2015-constants/lib/index.js");\n\nvar _babelPluginCheckEs2015Constants2 = _interopRequireDefault(_babelPluginCheckEs2015Constants);\n\nvar _babelPluginTransformEs2015Spread = __webpack_require__("./node_modules/babel-plugin-transform-es2015-spread/lib/index.js");\n\nvar _babelPluginTransformEs2015Spread2 = _interopRequireDefault(_babelPluginTransformEs2015Spread);\n\nvar _babelPluginTransformEs2015Parameters = __webpack_require__("./node_modules/babel-plugin-transform-es2015-parameters/lib/index.js");\n\nvar _babelPluginTransformEs2015Parameters2 = _interopRequireDefault(_babelPluginTransformEs2015Parameters);\n\nvar _babelPluginTransformEs2015Destructuring = __webpack_require__("./node_modules/babel-plugin-transform-es2015-destructuring/lib/index.js");\n\nvar _babelPluginTransformEs2015Destructuring2 = _interopRequireDefault(_babelPluginTransformEs2015Destructuring);\n\nvar _babelPluginTransformEs2015BlockScoping = __webpack_require__("./node_modules/babel-plugin-transform-es2015-block-scoping/lib/index.js");\n\nvar _babelPluginTransformEs2015BlockScoping2 = _interopRequireDefault(_babelPluginTransformEs2015BlockScoping);\n\nvar _babelPluginTransformEs2015TypeofSymbol = __webpack_require__("./node_modules/babel-plugin-transform-es2015-typeof-symbol/lib/index.js");\n\nvar _babelPluginTransformEs2015TypeofSymbol2 = _interopRequireDefault(_babelPluginTransformEs2015TypeofSymbol);\n\nvar _babelPluginTransformEs2015ModulesCommonjs = __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-commonjs/lib/index.js");\n\nvar _babelPluginTransformEs2015ModulesCommonjs2 = _interopRequireDefault(_babelPluginTransformEs2015ModulesCommonjs);\n\nvar _babelPluginTransformEs2015ModulesSystemjs = __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-systemjs/lib/index.js");\n\nvar _babelPluginTransformEs2015ModulesSystemjs2 = _interopRequireDefault(_babelPluginTransformEs2015ModulesSystemjs);\n\nvar _babelPluginTransformEs2015ModulesAmd = __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-amd/lib/index.js");\n\nvar _babelPluginTransformEs2015ModulesAmd2 = _interopRequireDefault(_babelPluginTransformEs2015ModulesAmd);\n\nvar _babelPluginTransformEs2015ModulesUmd = __webpack_require__("./node_modules/babel-plugin-transform-es2015-modules-umd/lib/index.js");\n\nvar _babelPluginTransformEs2015ModulesUmd2 = _interopRequireDefault(_babelPluginTransformEs2015ModulesUmd);\n\nvar _babelPluginTransformRegenerator = __webpack_require__("./node_modules/babel-plugin-transform-regenerator/lib/index.js");\n\nvar _babelPluginTransformRegenerator2 = _interopRequireDefault(_babelPluginTransformRegenerator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction preset(context) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var moduleTypes = ["commonjs", "amd", "umd", "systemjs"];\n  var loose = false;\n  var modules = "commonjs";\n  var spec = false;\n\n  if (opts !== undefined) {\n    if (opts.loose !== undefined) loose = opts.loose;\n    if (opts.modules !== undefined) modules = opts.modules;\n    if (opts.spec !== undefined) spec = opts.spec;\n  }\n\n  if (typeof loose !== "boolean") throw new Error("Preset es2015 \'loose\' option must be a boolean.");\n  if (typeof spec !== "boolean") throw new Error("Preset es2015 \'spec\' option must be a boolean.");\n  if (modules !== false && moduleTypes.indexOf(modules) === -1) {\n    throw new Error("Preset es2015 \'modules\' option must be \'false\' to indicate no modules\\n" + "or a module type which be be one of: \'commonjs\' (default), \'amd\', \'umd\', \'systemjs\'");\n  }\n\n  var optsLoose = { loose: loose };\n\n  return {\n    plugins: [[_babelPluginTransformEs2015TemplateLiterals2.default, { loose: loose, spec: spec }], _babelPluginTransformEs2015Literals2.default, _babelPluginTransformEs2015FunctionName2.default, [_babelPluginTransformEs2015ArrowFunctions2.default, { spec: spec }], _babelPluginTransformEs2015BlockScopedFunctions2.default, [_babelPluginTransformEs2015Classes2.default, optsLoose], _babelPluginTransformEs2015ObjectSuper2.default, _babelPluginTransformEs2015ShorthandProperties2.default, _babelPluginTransformEs2015DuplicateKeys2.default, [_babelPluginTransformEs2015ComputedProperties2.default, optsLoose], [_babelPluginTransformEs2015ForOf2.default, optsLoose], _babelPluginTransformEs2015StickyRegex2.default, _babelPluginTransformEs2015UnicodeRegex2.default, _babelPluginCheckEs2015Constants2.default, [_babelPluginTransformEs2015Spread2.default, optsLoose], _babelPluginTransformEs2015Parameters2.default, [_babelPluginTransformEs2015Destructuring2.default, optsLoose], _babelPluginTransformEs2015BlockScoping2.default, _babelPluginTransformEs2015TypeofSymbol2.default, modules === "commonjs" && [_babelPluginTransformEs2015ModulesCommonjs2.default, optsLoose], modules === "systemjs" && [_babelPluginTransformEs2015ModulesSystemjs2.default, optsLoose], modules === "amd" && [_babelPluginTransformEs2015ModulesAmd2.default, optsLoose], modules === "umd" && [_babelPluginTransformEs2015ModulesUmd2.default, optsLoose], [_babelPluginTransformRegenerator2.default, { async: false, asyncGenerators: false }]].filter(Boolean) };\n}\n\nvar oldConfig = preset({});\n\nexports.default = oldConfig;\n\nObject.defineProperty(oldConfig, "buildPreset", {\n  configurable: true,\n  writable: true,\n\n  enumerable: false,\n  value: preset\n});\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-preset-es2015/lib/index.js?')},"./node_modules/babel-preset-stage-0/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelPresetStage = __webpack_require__("./node_modules/babel-preset-stage-1/lib/index.js");\n\nvar _babelPresetStage2 = _interopRequireDefault(_babelPresetStage);\n\nvar _babelPluginTransformDoExpressions = __webpack_require__("./node_modules/babel-plugin-transform-do-expressions/lib/index.js");\n\nvar _babelPluginTransformDoExpressions2 = _interopRequireDefault(_babelPluginTransformDoExpressions);\n\nvar _babelPluginTransformFunctionBind = __webpack_require__("./node_modules/babel-plugin-transform-function-bind/lib/index.js");\n\nvar _babelPluginTransformFunctionBind2 = _interopRequireDefault(_babelPluginTransformFunctionBind);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  presets: [_babelPresetStage2.default],\n  plugins: [_babelPluginTransformDoExpressions2.default, _babelPluginTransformFunctionBind2.default]\n};\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-preset-stage-0/lib/index.js?')},"./node_modules/babel-preset-stage-1/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelPresetStage = __webpack_require__("./node_modules/babel-preset-stage-2/lib/index.js");\n\nvar _babelPresetStage2 = _interopRequireDefault(_babelPresetStage);\n\nvar _babelPluginTransformClassConstructorCall = __webpack_require__("./node_modules/babel-plugin-transform-class-constructor-call/lib/index.js");\n\nvar _babelPluginTransformClassConstructorCall2 = _interopRequireDefault(_babelPluginTransformClassConstructorCall);\n\nvar _babelPluginTransformExportExtensions = __webpack_require__("./node_modules/babel-plugin-transform-export-extensions/lib/index.js");\n\nvar _babelPluginTransformExportExtensions2 = _interopRequireDefault(_babelPluginTransformExportExtensions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  presets: [_babelPresetStage2.default],\n  plugins: [_babelPluginTransformClassConstructorCall2.default, _babelPluginTransformExportExtensions2.default]\n};\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-preset-stage-1/lib/index.js?')},"./node_modules/babel-preset-stage-2/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelPresetStage = __webpack_require__("./node_modules/babel-preset-stage-3/lib/index.js");\n\nvar _babelPresetStage2 = _interopRequireDefault(_babelPresetStage);\n\nvar _babelPluginTransformClassProperties = __webpack_require__("./node_modules/babel-plugin-transform-class-properties/lib/index.js");\n\nvar _babelPluginTransformClassProperties2 = _interopRequireDefault(_babelPluginTransformClassProperties);\n\nvar _babelPluginTransformDecorators = __webpack_require__("./node_modules/babel-plugin-transform-decorators/lib/index.js");\n\nvar _babelPluginTransformDecorators2 = _interopRequireDefault(_babelPluginTransformDecorators);\n\nvar _babelPluginSyntaxDynamicImport = __webpack_require__("./node_modules/babel-plugin-syntax-dynamic-import/lib/index.js");\n\nvar _babelPluginSyntaxDynamicImport2 = _interopRequireDefault(_babelPluginSyntaxDynamicImport);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  presets: [_babelPresetStage2.default],\n  plugins: [_babelPluginSyntaxDynamicImport2.default, _babelPluginTransformClassProperties2.default, _babelPluginTransformDecorators2.default]\n};\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-preset-stage-2/lib/index.js?')},"./node_modules/babel-preset-stage-3/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _babelPluginSyntaxTrailingFunctionCommas = __webpack_require__("./node_modules/babel-plugin-syntax-trailing-function-commas/lib/index.js");\n\nvar _babelPluginSyntaxTrailingFunctionCommas2 = _interopRequireDefault(_babelPluginSyntaxTrailingFunctionCommas);\n\nvar _babelPluginTransformAsyncToGenerator = __webpack_require__("./node_modules/babel-plugin-transform-async-to-generator/lib/index.js");\n\nvar _babelPluginTransformAsyncToGenerator2 = _interopRequireDefault(_babelPluginTransformAsyncToGenerator);\n\nvar _babelPluginTransformExponentiationOperator = __webpack_require__("./node_modules/babel-plugin-transform-exponentiation-operator/lib/index.js");\n\nvar _babelPluginTransformExponentiationOperator2 = _interopRequireDefault(_babelPluginTransformExponentiationOperator);\n\nvar _babelPluginTransformObjectRestSpread = __webpack_require__("./node_modules/babel-plugin-transform-object-rest-spread/lib/index.js");\n\nvar _babelPluginTransformObjectRestSpread2 = _interopRequireDefault(_babelPluginTransformObjectRestSpread);\n\nvar _babelPluginTransformAsyncGeneratorFunctions = __webpack_require__("./node_modules/babel-plugin-transform-async-generator-functions/lib/index.js");\n\nvar _babelPluginTransformAsyncGeneratorFunctions2 = _interopRequireDefault(_babelPluginTransformAsyncGeneratorFunctions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  plugins: [_babelPluginSyntaxTrailingFunctionCommas2.default, _babelPluginTransformAsyncToGenerator2.default, _babelPluginTransformExponentiationOperator2.default, _babelPluginTransformAsyncGeneratorFunctions2.default, _babelPluginTransformObjectRestSpread2.default]\n};\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-preset-stage-3/lib/index.js?')},"./node_modules/babel-runtime/core-js/array/from.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/array/from.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/array/from.js?')},"./node_modules/babel-runtime/core-js/get-iterator.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/get-iterator.js?')},"./node_modules/babel-runtime/core-js/json/stringify.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/json/stringify.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/json/stringify.js?')},"./node_modules/babel-runtime/core-js/map.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/map.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/map.js?')},"./node_modules/babel-runtime/core-js/number/max-safe-integer.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/number/max-safe-integer.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/number/max-safe-integer.js?')},"./node_modules/babel-runtime/core-js/object/assign.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/object/assign.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/assign.js?')},"./node_modules/babel-runtime/core-js/object/create.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/object/create.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/create.js?')},"./node_modules/babel-runtime/core-js/object/get-own-property-symbols.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/object/get-own-property-symbols.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/get-own-property-symbols.js?')},"./node_modules/babel-runtime/core-js/object/keys.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/object/keys.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/keys.js?')},"./node_modules/babel-runtime/core-js/object/set-prototype-of.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/object/set-prototype-of.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/set-prototype-of.js?')},"./node_modules/babel-runtime/core-js/symbol.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/symbol/index.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/symbol.js?')},"./node_modules/babel-runtime/core-js/symbol/for.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/symbol/for.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/symbol/for.js?')},"./node_modules/babel-runtime/core-js/symbol/iterator.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/symbol/iterator.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/symbol/iterator.js?')},"./node_modules/babel-runtime/core-js/weak-map.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/weak-map.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/weak-map.js?')},"./node_modules/babel-runtime/core-js/weak-set.js":function(module,exports,__webpack_require__){eval('module.exports = { "default": __webpack_require__("./node_modules/core-js/library/fn/weak-set.js"), __esModule: true };\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/weak-set.js?')},"./node_modules/babel-runtime/helpers/classCallCheck.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js?')},"./node_modules/babel-runtime/helpers/extends.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _assign = __webpack_require__("./node_modules/babel-runtime/core-js/object/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/extends.js?')},"./node_modules/babel-runtime/helpers/inherits.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__("./node_modules/babel-runtime/core-js/object/set-prototype-of.js");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/inherits.js?')},"./node_modules/babel-runtime/helpers/objectWithoutProperties.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/objectWithoutProperties.js?")},"./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/possibleConstructorReturn.js?')},"./node_modules/babel-runtime/helpers/typeof.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__("./node_modules/babel-runtime/core-js/symbol/iterator.js");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {\n  return typeof obj === "undefined" ? "undefined" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/typeof.js?')},"./node_modules/babel-template/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _symbol = __webpack_require__("./node_modules/babel-runtime/core-js/symbol.js");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nexports.default = function (code, opts) {\n  var stack = void 0;\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      stack = error.stack.split("\\n").slice(1).join("\\n");\n    }\n  }\n\n  opts = (0, _assign2.default)({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    preserveComments: false\n  }, opts);\n\n  var _getAst = function getAst() {\n    var ast = void 0;\n\n    try {\n      ast = babylon.parse(code, opts);\n\n      ast = _babelTraverse2.default.removeProperties(ast, { preserveComments: opts.preserveComments });\n\n      _babelTraverse2.default.cheap(ast, function (node) {\n        node[FROM_TEMPLATE] = true;\n      });\n    } catch (err) {\n      err.stack = err.stack + "from\\n" + stack;\n      throw err;\n    }\n\n    _getAst = function getAst() {\n      return ast;\n    };\n\n    return ast;\n  };\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return useTemplate(_getAst(), args);\n  };\n};\n\nvar _cloneDeep = __webpack_require__("./node_modules/lodash/cloneDeep.js");\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _assign = __webpack_require__("./node_modules/lodash/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _has = __webpack_require__("./node_modules/lodash/has.js");\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _babelTraverse = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _babylon = __webpack_require__("./node_modules/babylon/lib/index.js");\n\nvar babylon = _interopRequireWildcard(_babylon);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FROM_TEMPLATE = "_fromTemplate";\nvar TEMPLATE_SKIP = (0, _symbol2.default)();\n\nfunction useTemplate(ast, nodes) {\n  ast = (0, _cloneDeep2.default)(ast);\n  var _ast = ast,\n      program = _ast.program;\n\n\n  if (nodes.length) {\n    (0, _babelTraverse2.default)(ast, templateVisitor, null, nodes);\n  }\n\n  if (program.body.length > 1) {\n    return program.body;\n  } else {\n    return program.body[0];\n  }\n}\n\nvar templateVisitor = {\n  noScope: true,\n\n  enter: function enter(path, args) {\n    var node = path.node;\n\n    if (node[TEMPLATE_SKIP]) return path.skip();\n\n    if (t.isExpressionStatement(node)) {\n      node = node.expression;\n    }\n\n    var replacement = void 0;\n\n    if (t.isIdentifier(node) && node[FROM_TEMPLATE]) {\n      if ((0, _has2.default)(args[0], node.name)) {\n        replacement = args[0][node.name];\n      } else if (node.name[0] === "$") {\n        var i = +node.name.slice(1);\n        if (args[i]) replacement = args[i];\n      }\n    }\n\n    if (replacement === null) {\n      path.remove();\n    }\n\n    if (replacement) {\n      replacement[TEMPLATE_SKIP] = true;\n      path.replaceInline(replacement);\n    }\n  },\n  exit: function exit(_ref) {\n    var node = _ref.node;\n\n    if (!node.loc) _babelTraverse2.default.clearNode(node);\n  }\n};\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-template/lib/index.js?')},"./node_modules/babel-traverse/lib/cache.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.scope = exports.path = undefined;\n\nvar _weakMap = __webpack_require__("./node_modules/babel-runtime/core-js/weak-map.js");\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar path = exports.path = new _weakMap2.default();\nvar scope = exports.scope = new _weakMap2.default();\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new _weakMap2.default();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new _weakMap2.default();\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/cache.js?')},"./node_modules/babel-traverse/lib/context.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _path2 = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nvar _path3 = _interopRequireDefault(_path2);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar testing = "production" === "test";\n\nvar TraversalContext = function () {\n  function TraversalContext(scope, opts, state, parentPath) {\n    (0, _classCallCheck3.default)(this, TraversalContext);\n    this.queue = null;\n\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  TraversalContext.prototype.shouldVisit = function shouldVisit(node) {\n    var opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n\n    if (opts[node.type]) return true;\n\n    var keys = t.VISITOR_KEYS[node.type];\n    if (!keys || !keys.length) return false;\n\n    for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var key = _ref;\n\n      if (node[key]) return true;\n    }\n\n    return false;\n  };\n\n  TraversalContext.prototype.create = function create(node, obj, key, listKey) {\n    return _path3.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey: listKey\n    });\n  };\n\n  TraversalContext.prototype.maybeQueue = function maybeQueue(path, notPriority) {\n    if (this.trap) {\n      throw new Error("Infinite cycle detected");\n    }\n\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  };\n\n  TraversalContext.prototype.visitMultiple = function visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n\n    var queue = [];\n\n    for (var key = 0; key < container.length; key++) {\n      var node = container[key];\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  };\n\n  TraversalContext.prototype.visitSingle = function visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  };\n\n  TraversalContext.prototype.visitQueue = function visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n\n    var visited = [];\n    var stop = false;\n\n    for (var _iterator2 = queue, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var path = _ref2;\n\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n\n      if (testing && queue.length >= 10000) {\n        this.trap = true;\n      }\n\n      if (visited.indexOf(path.node) >= 0) continue;\n      visited.push(path.node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (var _iterator3 = queue, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var _path = _ref3;\n\n      _path.popContext();\n    }\n\n    this.queue = null;\n\n    return stop;\n  };\n\n  TraversalContext.prototype.visit = function visit(node, key) {\n    var nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  };\n\n  return TraversalContext;\n}();\n\nexports.default = TraversalContext;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/context.js?')},"./node_modules/babel-traverse/lib/hub.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Hub = function Hub(file, options) {\n  (0, _classCallCheck3.default)(this, Hub);\n\n  this.file = file;\n  this.options = options;\n};\n\nexports.default = Hub;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/hub.js?')},"./node_modules/babel-traverse/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.visitors = exports.Hub = exports.Scope = exports.NodePath = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _path = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nObject.defineProperty(exports, "NodePath", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_path).default;\n  }\n});\n\nvar _scope = __webpack_require__("./node_modules/babel-traverse/lib/scope/index.js");\n\nObject.defineProperty(exports, "Scope", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_scope).default;\n  }\n});\n\nvar _hub = __webpack_require__("./node_modules/babel-traverse/lib/hub.js");\n\nObject.defineProperty(exports, "Hub", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_hub).default;\n  }\n});\nexports.default = traverse;\n\nvar _context = __webpack_require__("./node_modules/babel-traverse/lib/context.js");\n\nvar _context2 = _interopRequireDefault(_context);\n\nvar _visitors = __webpack_require__("./node_modules/babel-traverse/lib/visitors.js");\n\nvar visitors = _interopRequireWildcard(_visitors);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _includes = __webpack_require__("./node_modules/lodash/includes.js");\n\nvar _includes2 = _interopRequireDefault(_includes);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _cache = __webpack_require__("./node_modules/babel-traverse/lib/cache.js");\n\nvar cache = _interopRequireWildcard(_cache);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.visitors = visitors;\nfunction traverse(parent, opts, scope, state, parentPath) {\n  if (!parent) return;\n  if (!opts) opts = {};\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== "Program" && parent.type !== "File") {\n      throw new Error(messages.get("traverseNeedsParent", parent.type));\n    }\n  }\n\n  visitors.explode(opts);\n\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.NodePath = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\ntraverse.Scope = __webpack_require__("./node_modules/babel-traverse/lib/scope/index.js");\ntraverse.Hub = __webpack_require__("./node_modules/babel-traverse/lib/hub.js");\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  var keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  var context = new _context2.default(scope, opts, state, parentPath);\n  for (var _iterator = keys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var key = _ref;\n\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasBlacklistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, scope, type, blacklistTypes) {\n  if ((0, _includes2.default)(blacklistTypes, tree.type)) return false;\n\n  if (tree.type === type) return true;\n\n  var state = {\n    has: false,\n    type: type\n  };\n\n  traverse(tree, {\n    blacklist: blacklistTypes,\n    enter: hasBlacklistedType\n  }, scope, state);\n\n  return state.has;\n};\n\ntraverse.clearCache = function () {\n  cache.clear();\n};\n\ntraverse.clearCache.clearPath = cache.clearPath;\ntraverse.clearCache.clearScope = cache.clearScope;\n\ntraverse.copyCache = function (source, destination) {\n  if (cache.path.has(source)) {\n    cache.path.set(destination, cache.path.get(source));\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/index.js?')},"./node_modules/babel-traverse/lib/path/ancestry.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\nexports.inShadow = inShadow;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction findParent(callback) {\n  var path = this;\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n  return null;\n}\n\nfunction find(callback) {\n  var path = this;\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(function (path) {\n    return path.isFunction() || path.isProgram();\n  });\n}\n\nfunction getStatementParent() {\n  var path = this;\n  do {\n    if (Array.isArray(path.container)) {\n      return path;\n    }\n  } while (path = path.parentPath);\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    var earliest = void 0;\n    var keys = t.VISITOR_KEYS[deepest.type];\n\n    for (var _iterator = ancestries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var ancestry = _ref;\n\n      var path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      var earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      var currentKeyIndex = keys.indexOf(path.parentKey);\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  var _this = this;\n\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  var minDepth = Infinity;\n\n  var lastCommonIndex = void 0,\n      lastCommon = void 0;\n\n  var ancestries = paths.map(function (path) {\n    var ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== _this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n\n  var first = ancestries[0];\n\n  depthLoop: for (var i = 0; i < minDepth; i++) {\n    var shouldMatch = first[i];\n\n    for (var _iterator2 = ancestries, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var ancestry = _ref2;\n\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error("Couldn\'t find intersection");\n  }\n}\n\nfunction getAncestry() {\n  var path = this;\n  var paths = [];\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(function (parent) {\n    return parent === maybeAncestor;\n  });\n}\n\nfunction inType() {\n  var path = this;\n  while (path) {\n    for (var _iterator3 = arguments, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var type = _ref3;\n\n      if (path.node.type === type) return true;\n    }\n    path = path.parentPath;\n  }\n\n  return false;\n}\n\nfunction inShadow(key) {\n  var parentFn = this.isFunction() ? this : this.findParent(function (p) {\n    return p.isFunction();\n  });\n  if (!parentFn) return;\n\n  if (parentFn.isFunctionExpression() || parentFn.isFunctionDeclaration()) {\n    var shadow = parentFn.node.shadow;\n\n    if (shadow && (!key || shadow[key] !== false)) {\n      return parentFn;\n    }\n  } else if (parentFn.isArrowFunctionExpression()) {\n    return parentFn;\n  }\n\n  return null;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/ancestry.js?')},"./node_modules/babel-traverse/lib/path/comments.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === "string") return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments("trailing", leading);\n  next.addComments("leading", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? "CommentLine" : "CommentBlock",\n    value: content\n  }]);\n}\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + "Comments";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/comments.js?')},"./node_modules/babel-traverse/lib/path/context.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = isBlacklisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction call(key) {\n  var opts = this.opts;\n\n  this.debug(function () {\n    return key;\n  });\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (var _iterator = fns, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var fn = _ref;\n\n    if (!fn) continue;\n\n    var node = this.node;\n    if (!node) return true;\n\n    var ret = fn.call(this.state, this, this.state);\n    if (ret) throw new Error("Unexpected return value from visitor method " + fn);\n\n    if (this.node !== node) return true;\n\n    if (this.shouldStop || this.shouldSkip || this.removed) return true;\n  }\n\n  return false;\n}\n\nfunction isBlacklisted() {\n  var blacklist = this.opts.blacklist;\n  return blacklist && blacklist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isBlacklisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.call("enter") || this.shouldSkip) {\n    this.debug(function () {\n      return "Skip...";\n    });\n    return this.shouldStop;\n  }\n\n  this.debug(function () {\n    return "Recursing into...";\n  });\n  _index2.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call("exit");\n\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this.shouldStop = true;\n  this.shouldSkip = true;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n\n  var target = this.context && this.context.scope;\n\n  if (!target) {\n    var path = this.parentPath;\n    while (path && !target) {\n      if (path.opts && path.opts.noScope) return;\n\n      target = path.scope;\n      path = path.parentPath;\n    }\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  this.shouldSkip = false;\n  this.shouldStop = false;\n  this.removed = false;\n  this.skipKeys = {};\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n  this._resyncList();\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (var i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (var key in this.container) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n\n  var newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n  this.setContext(this.contexts[this.contexts.length - 1]);\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.inList = !!listKey;\n  this.listKey = listKey;\n  this.parentKey = listKey || key;\n  this.container = container;\n\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = this.node && this.node.type;\n}\n\nfunction requeue() {\n  var pathToQueue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;\n\n  if (pathToQueue.removed) return;\n\n  var contexts = this.contexts;\n\n  for (var _iterator2 = contexts, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var context = _ref2;\n\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  var path = this;\n  var contexts = this.contexts;\n  while (!contexts.length) {\n    path = path.parentPath;\n    contexts = path.contexts;\n  }\n  return contexts;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/context.js?')},"./node_modules/babel-traverse/lib/path/conversion.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction toComputedKey() {\n  var node = this.node;\n\n  var key = void 0;\n  if (this.isMemberExpression()) {\n    key = node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = node.key;\n  } else {\n    throw new ReferenceError("todo");\n  }\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  return t.ensureBlock(this.node);\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n\n  this.ensureBlock();\n\n  var node = this.node;\n\n  node.expression = false;\n  node.type = "FunctionExpression";\n  node.shadow = node.shadow || true;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/conversion.js?')},"./node_modules/babel-traverse/lib/path/evaluation.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _map = __webpack_require__("./node_modules/babel-runtime/core-js/map.js");\n\nvar _map2 = _interopRequireDefault(_map);\n\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VALID_CALLEES = ["String", "Number", "Math"];\nvar INVALID_METHODS = ["random"];\n\nfunction evaluateTruthy() {\n  var res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction evaluate() {\n  var confident = true;\n  var deoptPath = void 0;\n  var seen = new _map2.default();\n\n  function deopt(path) {\n    if (!confident) return;\n    deoptPath = path;\n    confident = false;\n  }\n\n  var value = evaluate(this);\n  if (!confident) value = undefined;\n  return {\n    confident: confident,\n    deopt: deoptPath,\n    value: value\n  };\n\n  function evaluate(path) {\n    var node = path.node;\n\n\n    if (seen.has(node)) {\n      var existing = seen.get(node);\n      if (existing.resolved) {\n        return existing.value;\n      } else {\n        deopt(path);\n        return;\n      }\n    } else {\n      var item = { resolved: false };\n      seen.set(node, item);\n\n      var val = _evaluate(path);\n      if (confident) {\n        item.resolved = true;\n        item.value = val;\n      }\n      return val;\n    }\n  }\n\n  function _evaluate(path) {\n    if (!confident) return;\n\n    var node = path.node;\n\n\n    if (path.isSequenceExpression()) {\n      var exprs = path.get("expressions");\n      return evaluate(exprs[exprs.length - 1]);\n    }\n\n    if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n      return node.value;\n    }\n\n    if (path.isNullLiteral()) {\n      return null;\n    }\n\n    if (path.isTemplateLiteral()) {\n      var str = "";\n\n      var i = 0;\n      var _exprs = path.get("expressions");\n\n      for (var _iterator = node.quasis, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var elem = _ref;\n\n        if (!confident) break;\n\n        str += elem.value.cooked;\n\n        var expr = _exprs[i++];\n        if (expr) str += String(evaluate(expr));\n      }\n\n      if (!confident) return;\n      return str;\n    }\n\n    if (path.isConditionalExpression()) {\n      var testResult = evaluate(path.get("test"));\n      if (!confident) return;\n      if (testResult) {\n        return evaluate(path.get("consequent"));\n      } else {\n        return evaluate(path.get("alternate"));\n      }\n    }\n\n    if (path.isExpressionWrapper()) {\n      return evaluate(path.get("expression"));\n    }\n\n    if (path.isMemberExpression() && !path.parentPath.isCallExpression({ callee: node })) {\n      var property = path.get("property");\n      var object = path.get("object");\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        var _value = object.node.value;\n        var type = typeof _value === "undefined" ? "undefined" : (0, _typeof3.default)(_value);\n        if (type === "number" || type === "string") {\n          return _value[property.node.name];\n        }\n      }\n    }\n\n    if (path.isReferencedIdentifier()) {\n      var binding = path.scope.getBinding(node.name);\n\n      if (binding && binding.constantViolations.length > 0) {\n        return deopt(binding.path);\n      }\n\n      if (binding && path.node.start < binding.path.node.end) {\n        return deopt(binding.path);\n      }\n\n      if (binding && binding.hasValue) {\n        return binding.value;\n      } else {\n        if (node.name === "undefined") {\n          return binding ? deopt(binding.path) : undefined;\n        } else if (node.name === "Infinity") {\n          return binding ? deopt(binding.path) : Infinity;\n        } else if (node.name === "NaN") {\n          return binding ? deopt(binding.path) : NaN;\n        }\n\n        var resolved = path.resolve();\n        if (resolved === path) {\n          return deopt(path);\n        } else {\n          return evaluate(resolved);\n        }\n      }\n    }\n\n    if (path.isUnaryExpression({ prefix: true })) {\n      if (node.operator === "void") {\n        return undefined;\n      }\n\n      var argument = path.get("argument");\n      if (node.operator === "typeof" && (argument.isFunction() || argument.isClass())) {\n        return "function";\n      }\n\n      var arg = evaluate(argument);\n      if (!confident) return;\n      switch (node.operator) {\n        case "!":\n          return !arg;\n        case "+":\n          return +arg;\n        case "-":\n          return -arg;\n        case "~":\n          return ~arg;\n        case "typeof":\n          return typeof arg === "undefined" ? "undefined" : (0, _typeof3.default)(arg);\n      }\n    }\n\n    if (path.isArrayExpression()) {\n      var arr = [];\n      var elems = path.get("elements");\n      for (var _iterator2 = elems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _elem = _ref2;\n\n        _elem = _elem.evaluate();\n\n        if (_elem.confident) {\n          arr.push(_elem.value);\n        } else {\n          return deopt(_elem);\n        }\n      }\n      return arr;\n    }\n\n    if (path.isObjectExpression()) {\n      var obj = {};\n      var props = path.get("properties");\n      for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var prop = _ref3;\n\n        if (prop.isObjectMethod() || prop.isSpreadProperty()) {\n          return deopt(prop);\n        }\n        var keyPath = prop.get("key");\n        var key = keyPath;\n        if (prop.node.computed) {\n          key = key.evaluate();\n          if (!key.confident) {\n            return deopt(keyPath);\n          }\n          key = key.value;\n        } else if (key.isIdentifier()) {\n          key = key.node.name;\n        } else {\n          key = key.node.value;\n        }\n        var valuePath = prop.get("value");\n        var _value2 = valuePath.evaluate();\n        if (!_value2.confident) {\n          return deopt(valuePath);\n        }\n        _value2 = _value2.value;\n        obj[key] = _value2;\n      }\n      return obj;\n    }\n\n    if (path.isLogicalExpression()) {\n      var wasConfident = confident;\n      var left = evaluate(path.get("left"));\n      var leftConfident = confident;\n      confident = wasConfident;\n      var right = evaluate(path.get("right"));\n      var rightConfident = confident;\n      confident = leftConfident && rightConfident;\n\n      switch (node.operator) {\n        case "||":\n          if (left && leftConfident) {\n            confident = true;\n            return left;\n          }\n\n          if (!confident) return;\n\n          return left || right;\n        case "&&":\n          if (!left && leftConfident || !right && rightConfident) {\n            confident = true;\n          }\n\n          if (!confident) return;\n\n          return left && right;\n      }\n    }\n\n    if (path.isBinaryExpression()) {\n      var _left = evaluate(path.get("left"));\n      if (!confident) return;\n      var _right = evaluate(path.get("right"));\n      if (!confident) return;\n\n      switch (node.operator) {\n        case "-":\n          return _left - _right;\n        case "+":\n          return _left + _right;\n        case "/":\n          return _left / _right;\n        case "*":\n          return _left * _right;\n        case "%":\n          return _left % _right;\n        case "**":\n          return Math.pow(_left, _right);\n        case "<":\n          return _left < _right;\n        case ">":\n          return _left > _right;\n        case "<=":\n          return _left <= _right;\n        case ">=":\n          return _left >= _right;\n        case "==":\n          return _left == _right;\n        case "!=":\n          return _left != _right;\n        case "===":\n          return _left === _right;\n        case "!==":\n          return _left !== _right;\n        case "|":\n          return _left | _right;\n        case "&":\n          return _left & _right;\n        case "^":\n          return _left ^ _right;\n        case "<<":\n          return _left << _right;\n        case ">>":\n          return _left >> _right;\n        case ">>>":\n          return _left >>> _right;\n      }\n    }\n\n    if (path.isCallExpression()) {\n      var callee = path.get("callee");\n      var context = void 0;\n      var func = void 0;\n\n      if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name, true) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n        func = global[node.callee.name];\n      }\n\n      if (callee.isMemberExpression()) {\n        var _object = callee.get("object");\n        var _property = callee.get("property");\n\n        if (_object.isIdentifier() && _property.isIdentifier() && VALID_CALLEES.indexOf(_object.node.name) >= 0 && INVALID_METHODS.indexOf(_property.node.name) < 0) {\n          context = global[_object.node.name];\n          func = context[_property.node.name];\n        }\n\n        if (_object.isLiteral() && _property.isIdentifier()) {\n          var _type = (0, _typeof3.default)(_object.node.value);\n          if (_type === "string" || _type === "number") {\n            context = _object.node.value;\n            func = context[_property.node.name];\n          }\n        }\n      }\n\n      if (func) {\n        var args = path.get("arguments").map(evaluate);\n        if (!confident) return;\n\n        return func.apply(context, args);\n      }\n    }\n\n    deopt(path);\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/evaluation.js?')},"./node_modules/babel-traverse/lib/path/family.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.getStatementParent = getStatementParent;\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getStatementParent() {\n  var path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error("File/Program node, we can\'t possibly find a statement parent to this");\n  }\n\n  return path;\n}\n\nfunction getOpposite() {\n  if (this.key === "left") {\n    return this.getSibling("right");\n  } else if (this.key === "right") {\n    return this.getSibling("left");\n  }\n}\n\nfunction getCompletionRecords() {\n  var paths = [];\n\n  var add = function add(path) {\n    if (path) paths = paths.concat(path.getCompletionRecords());\n  };\n\n  if (this.isIfStatement()) {\n    add(this.get("consequent"));\n    add(this.get("alternate"));\n  } else if (this.isDoExpression() || this.isFor() || this.isWhile()) {\n    add(this.get("body"));\n  } else if (this.isProgram() || this.isBlockStatement()) {\n    add(this.get("body").pop());\n  } else if (this.isFunction()) {\n    return this.get("body").getCompletionRecords();\n  } else if (this.isTryStatement()) {\n    add(this.get("block"));\n    add(this.get("handler"));\n    add(this.get("finalizer"));\n  } else {\n    paths.push(this);\n  }\n\n  return paths;\n}\n\nfunction getSibling(key) {\n  return _index2.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  });\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  var _key = this.key;\n  var sibling = this.getSibling(++_key);\n  var siblings = [];\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  var _key = this.key;\n  var sibling = this.getSibling(--_key);\n  var siblings = [];\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n  return siblings;\n}\n\nfunction get(key, context) {\n  if (context === true) context = this.context;\n  var parts = key.split(".");\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  var _this = this;\n\n  var node = this.node;\n  var container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map(function (_, i) {\n      return _index2.default.get({\n        listKey: key,\n        parentPath: _this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index2.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  var path = this;\n  for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var part = _ref;\n\n    if (part === ".") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths() {\n  var duplicates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var outerOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var path = this;\n  var search = [].concat(path);\n  var ids = (0, _create2.default)(null);\n\n  while (search.length) {\n    var id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n\n    var keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        var _ids = ids[id.node.name] = ids[id.node.name] || [];\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      var declaration = id.get("declaration");\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get("id"));\n        continue;\n      }\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var child = id.get(key);\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/family.js?')},"./node_modules/babel-traverse/lib/path/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _virtualTypes = __webpack_require__("./node_modules/babel-traverse/lib/path/lib/virtual-types.js");\n\nvar virtualTypes = _interopRequireWildcard(_virtualTypes);\n\nvar _debug2 = __webpack_require__("./node_modules/debug/src/browser.js");\n\nvar _debug3 = _interopRequireDefault(_debug2);\n\nvar _invariant = __webpack_require__("./node_modules/invariant/browser.js");\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _assign = __webpack_require__("./node_modules/lodash/assign.js");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _scope = __webpack_require__("./node_modules/babel-traverse/lib/scope/index.js");\n\nvar _scope2 = _interopRequireDefault(_scope);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _cache = __webpack_require__("./node_modules/babel-traverse/lib/cache.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _debug = (0, _debug3.default)("babel");\n\nvar NodePath = function () {\n  function NodePath(hub, parent) {\n    (0, _classCallCheck3.default)(this, NodePath);\n\n    this.parent = parent;\n    this.hub = hub;\n    this.contexts = [];\n    this.data = {};\n    this.shouldSkip = false;\n    this.shouldStop = false;\n    this.removed = false;\n    this.state = null;\n    this.opts = null;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.context = null;\n    this.container = null;\n    this.listKey = null;\n    this.inList = false;\n    this.parentKey = null;\n    this.key = null;\n    this.node = null;\n    this.scope = null;\n    this.type = null;\n    this.typeAnnotation = null;\n  }\n\n  NodePath.get = function get(_ref) {\n    var hub = _ref.hub,\n        parentPath = _ref.parentPath,\n        parent = _ref.parent,\n        container = _ref.container,\n        listKey = _ref.listKey,\n        key = _ref.key;\n\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    (0, _invariant2.default)(parent, "To get a node path the parent needs to exist");\n\n    var targetNode = container[key];\n\n    var paths = _cache.path.get(parent) || [];\n    if (!_cache.path.has(parent)) {\n      _cache.path.set(parent, paths);\n    }\n\n    var path = void 0;\n\n    for (var i = 0; i < paths.length; i++) {\n      var pathCheck = paths[i];\n      if (pathCheck.node === targetNode) {\n        path = pathCheck;\n        break;\n      }\n    }\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      paths.push(path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n\n    return path;\n  };\n\n  NodePath.prototype.getScope = function getScope(scope) {\n    var ourScope = scope;\n\n    if (this.isScope()) {\n      ourScope = new _scope2.default(this, scope);\n    }\n\n    return ourScope;\n  };\n\n  NodePath.prototype.setData = function setData(key, val) {\n    return this.data[key] = val;\n  };\n\n  NodePath.prototype.getData = function getData(key, def) {\n    var val = this.data[key];\n    if (!val && def) val = this.data[key] = def;\n    return val;\n  };\n\n  NodePath.prototype.buildCodeFrameError = function buildCodeFrameError(msg) {\n    var Error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SyntaxError;\n\n    return this.hub.file.buildCodeFrameError(this.node, msg, Error);\n  };\n\n  NodePath.prototype.traverse = function traverse(visitor, state) {\n    (0, _index2.default)(this.node, visitor, this.scope, state, this);\n  };\n\n  NodePath.prototype.mark = function mark(type, message) {\n    this.hub.file.metadata.marked.push({\n      type: type,\n      message: message,\n      loc: this.node.loc\n    });\n  };\n\n  NodePath.prototype.set = function set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  };\n\n  NodePath.prototype.getPathLocation = function getPathLocation() {\n    var parts = [];\n    var path = this;\n    do {\n      var key = path.key;\n      if (path.inList) key = path.listKey + "[" + key + "]";\n      parts.unshift(key);\n    } while (path = path.parentPath);\n    return parts.join(".");\n  };\n\n  NodePath.prototype.debug = function debug(buildMessage) {\n    if (!_debug.enabled) return;\n    _debug(this.getPathLocation() + " " + this.type + ": " + buildMessage());\n  };\n\n  return NodePath;\n}();\n\nexports.default = NodePath;\n\n\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/ancestry.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/inference/index.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/replacement.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/evaluation.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/conversion.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/introspection.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/context.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/removal.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/modification.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/family.js"));\n(0, _assign2.default)(NodePath.prototype, __webpack_require__("./node_modules/babel-traverse/lib/path/comments.js"));\n\nvar _loop2 = function _loop2() {\n  if (_isArray) {\n    if (_i >= _iterator.length) return "break";\n    _ref2 = _iterator[_i++];\n  } else {\n    _i = _iterator.next();\n    if (_i.done) return "break";\n    _ref2 = _i.value;\n  }\n\n  var type = _ref2;\n\n  var typeKey = "is" + type;\n  NodePath.prototype[typeKey] = function (opts) {\n    return t[typeKey](this.node, opts);\n  };\n\n  NodePath.prototype["assert" + type] = function (opts) {\n    if (!this[typeKey](opts)) {\n      throw new TypeError("Expected node path of type " + type);\n    }\n  };\n};\n\nfor (var _iterator = t.TYPES, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n  var _ref2;\n\n  var _ret2 = _loop2();\n\n  if (_ret2 === "break") break;\n}\n\nvar _loop = function _loop(type) {\n  if (type[0] === "_") return "continue";\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n\n  var virtualType = virtualTypes[type];\n\n  NodePath.prototype["is" + type] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n};\n\nfor (var type in virtualTypes) {\n  var _ret = _loop(type);\n\n  if (_ret === "continue") continue;\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/index.js?')},"./node_modules/babel-traverse/lib/path/inference/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar _inferers = __webpack_require__("./node_modules/babel-traverse/lib/path/inference/inferers.js");\n\nvar inferers = _interopRequireWildcard(_inferers);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n\n  var type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nfunction _getTypeAnnotation() {\n  var node = this.node;\n\n  if (!node) {\n    if (this.key === "init" && this.parentPath.isVariableDeclarator()) {\n      var declar = this.parentPath.parentPath;\n      var declarParent = declar.parentPath;\n\n      if (declar.key === "left" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === "left" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  var inferer = inferers[node.type];\n  if (inferer) {\n    return inferer.call(this, node);\n  }\n\n  inferer = inferers[this.parentPath.type];\n  if (inferer && inferer.validParent) {\n    return this.parentPath.getTypeAnnotation();\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === "string") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === "number") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === "boolean") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === "any") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === "mixed") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === "empty") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === "void") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error("Unknown base type " + baseName);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  var type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (var _iterator = type.types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type2 = _ref;\n\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(right) {\n  var left = this.getTypeAnnotation();\n  right = right.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n}\n\nfunction isGenericType(genericName) {\n  var type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, { name: genericName });\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/inference/index.js?')},"./node_modules/babel-traverse/lib/path/inference/inferer-reference.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.default = function (node) {\n  if (!this.isReferenced()) return;\n\n  var binding = this.scope.getBinding(node.name);\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(this, node.name);\n    }\n  }\n\n  if (node.name === "undefined") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === "NaN" || node.name === "Infinity") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === "arguments") {}\n};\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getTypeAnnotationBindingConstantViolations(path, name) {\n  var binding = path.scope.getBinding(name);\n\n  var types = [];\n  path.typeAnnotation = t.unionTypeAnnotation(types);\n\n  var functionConstantViolations = [];\n  var constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n\n  var testType = getConditionalAnnotation(path, name);\n  if (testType) {\n    var testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n\n    constantViolations = constantViolations.filter(function (path) {\n      return testConstantViolations.indexOf(path) < 0;\n    });\n\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (var _iterator = constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var violation = _ref;\n\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (types.length) {\n    return t.createUnionTypeAnnotation(types);\n  }\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  var violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(function (violation) {\n    violation = violation.resolve();\n    var status = violation._guessExecutionStatusRelativeTo(path);\n    if (functions && status === "function") functions.push(violation);\n    return status === "before";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  var operator = path.node.operator;\n\n  var right = path.get("right").resolve();\n  var left = path.get("left").resolve();\n\n  var target = void 0;\n  if (left.isIdentifier({ name: name })) {\n    target = right;\n  } else if (right.isIdentifier({ name: name })) {\n    target = left;\n  }\n  if (target) {\n    if (operator === "===") {\n      return target.getTypeAnnotation();\n    } else if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    } else {\n      return;\n    }\n  } else {\n    if (operator !== "===") return;\n  }\n\n  var typeofPath = void 0;\n  var typePath = void 0;\n  if (left.isUnaryExpression({ operator: "typeof" })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({ operator: "typeof" })) {\n    typeofPath = right;\n    typePath = left;\n  }\n  if (!typePath && !typeofPath) return;\n\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n\n  var typeValue = typePath.node.value;\n  if (typeof typeValue !== "string") return;\n\n  if (!typeofPath.get("argument").isIdentifier({ name: name })) return;\n\n  return t.createTypeAnnotationBasedOnTypeof(typePath.node.value);\n}\n\nfunction getParentConditionalPath(path) {\n  var parentPath = void 0;\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === "test") {\n        return;\n      } else {\n        return parentPath;\n      }\n    } else {\n      path = parentPath;\n    }\n  }\n}\n\nfunction getConditionalAnnotation(path, name) {\n  var ifStatement = getParentConditionalPath(path);\n  if (!ifStatement) return;\n\n  var test = ifStatement.get("test");\n  var paths = [test];\n  var types = [];\n\n  do {\n    var _path = paths.shift().resolve();\n\n    if (_path.isLogicalExpression()) {\n      paths.push(_path.get("left"));\n      paths.push(_path.get("right"));\n    }\n\n    if (_path.isBinaryExpression()) {\n      var type = inferAnnotationFromBinaryExpression(name, _path);\n      if (type) types.push(type);\n    }\n  } while (paths.length);\n\n  if (types.length) {\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement: ifStatement\n    };\n  } else {\n    return getConditionalAnnotation(ifStatement, name);\n  }\n}\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/inference/inferer-reference.js?')},"./node_modules/babel-traverse/lib/path/inference/inferers.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = exports.Identifier = undefined;\n\nvar _infererReference = __webpack_require__("./node_modules/babel-traverse/lib/path/inference/inferer-reference.js");\n\nObject.defineProperty(exports, "Identifier", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_infererReference).default;\n  }\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction VariableDeclarator() {\n  var id = this.get("id");\n\n  if (id.isIdentifier()) {\n    return this.get("init").getTypeAnnotation();\n  } else {\n    return;\n  }\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get("callee").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  var operator = node.operator;\n\n  if (operator === "void") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  var operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === "+") {\n    var right = this.get("right");\n    var left = this.get("left");\n\n    if (left.isBaseType("number") && right.isBaseType("number")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType("string") || right.isBaseType("string")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  return t.createUnionTypeAnnotation([this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()]);\n}\n\nfunction ConditionalExpression() {\n  return t.createUnionTypeAnnotation([this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()]);\n}\n\nfunction SequenceExpression() {\n  return this.get("expressions").pop().getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get("right").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  var operator = node.operator;\n  if (operator === "++" || operator === "--") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier("RegExp"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier("Object"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier("Array"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier("Function"));\n}\n\nexports.FunctionExpression = Func;\nexports.ArrowFunctionExpression = Func;\nexports.FunctionDeclaration = Func;\nexports.ClassExpression = Func;\nexports.ClassDeclaration = Func;\nfunction CallExpression() {\n  return resolveCall(this.get("callee"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get("tag"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is("async")) {\n      if (callee.is("generator")) {\n        return t.genericTypeAnnotation(t.identifier("AsyncIterator"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier("Promise"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/inference/inferers.js?')},"./node_modules/babel-traverse/lib/path/introspection.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.is = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\n\nvar _includes = __webpack_require__("./node_modules/lodash/includes.js");\n\nvar _includes2 = _interopRequireDefault(_includes);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matchesPattern(pattern, allowPartial) {\n  if (!this.isMemberExpression()) return false;\n\n  var parts = pattern.split(".");\n  var search = [this.node];\n  var i = 0;\n\n  function matches(name) {\n    var part = parts[i];\n    return part === "*" || name === part;\n  }\n\n  while (search.length) {\n    var node = search.shift();\n\n    if (allowPartial && i === parts.length) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      if (!matches(node.name)) return false;\n    } else if (t.isLiteral(node)) {\n      if (!matches(node.value)) return false;\n    } else if (t.isMemberExpression(node)) {\n      if (node.computed && !t.isLiteral(node.property)) {\n        return false;\n      } else {\n        search.unshift(node.property);\n        search.unshift(node.object);\n        continue;\n      }\n    } else if (t.isThisExpression(node)) {\n      if (!matches("this")) return false;\n    } else {\n      return false;\n    }\n\n    if (++i > parts.length) {\n      return false;\n    }\n  }\n\n  return i === parts.length;\n}\n\nfunction has(key) {\n  var val = this.node && this.node[key];\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nvar is = exports.is = has;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === "init" || this.key === "left") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== "body" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  var path = this;\n  var first = true;\n\n  do {\n    var container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return (0, _includes2.default)(t.STATEMENT_OR_BLOCK_KEYS, this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) return false;\n\n  var binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== "module") return false;\n\n  var path = binding.path;\n  var parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === "default") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === "*") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && path.node.imported.name === importName) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  var node = this.node;\n  if (node.end) {\n    return this.hub.file.code.slice(node.start, node.end);\n  } else {\n    return "";\n  }\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== "after";\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  var targetFuncParent = target.scope.getFunctionParent();\n  var selfFuncParent = this.scope.getFunctionParent();\n\n  if (targetFuncParent.node !== selfFuncParent.node) {\n    var status = this._guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent);\n    if (status) {\n      return status;\n    } else {\n      target = targetFuncParent.path;\n    }\n  }\n\n  var targetPaths = target.getAncestry();\n  if (targetPaths.indexOf(this) >= 0) return "after";\n\n  var selfPaths = this.getAncestry();\n\n  var commonPath = void 0;\n  var targetIndex = void 0;\n  var selfIndex = void 0;\n  for (selfIndex = 0; selfIndex < selfPaths.length; selfIndex++) {\n    var selfPath = selfPaths[selfIndex];\n    targetIndex = targetPaths.indexOf(selfPath);\n    if (targetIndex >= 0) {\n      commonPath = selfPath;\n      break;\n    }\n  }\n  if (!commonPath) {\n    return "before";\n  }\n\n  var targetRelationship = targetPaths[targetIndex - 1];\n  var selfRelationship = selfPaths[selfIndex - 1];\n  if (!targetRelationship || !selfRelationship) {\n    return "before";\n  }\n\n  if (targetRelationship.listKey && targetRelationship.container === selfRelationship.container) {\n    return targetRelationship.key > selfRelationship.key ? "before" : "after";\n  }\n\n  var targetKeyPosition = t.VISITOR_KEYS[targetRelationship.type].indexOf(targetRelationship.key);\n  var selfKeyPosition = t.VISITOR_KEYS[selfRelationship.type].indexOf(selfRelationship.key);\n  return targetKeyPosition > selfKeyPosition ? "before" : "after";\n}\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(targetFuncParent) {\n  var targetFuncPath = targetFuncParent.path;\n  if (!targetFuncPath.isFunctionDeclaration()) return;\n\n  var binding = targetFuncPath.scope.getBinding(targetFuncPath.node.id.name);\n\n  if (!binding.references) return "before";\n\n  var referencePaths = binding.referencePaths;\n\n  for (var _iterator = referencePaths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var path = _ref;\n\n    if (path.key !== "callee" || !path.parentPath.isCallExpression()) {\n      return;\n    }\n  }\n\n  var allStatus = void 0;\n\n  for (var _iterator2 = referencePaths, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var _path = _ref2;\n\n    var childOfFunction = !!_path.find(function (path) {\n      return path.node === targetFuncPath.node;\n    });\n    if (childOfFunction) continue;\n\n    var status = this._guessExecutionStatusRelativeTo(_path);\n\n    if (allStatus) {\n      if (allStatus !== status) return;\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get("id").isIdentifier()) {\n      return this.get("init").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    var binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n\n    if (!binding.constant) return;\n\n    if (binding.kind === "module") return;\n\n    if (binding.path !== this) {\n      var ret = binding.path.resolve(dangerous, resolved);\n\n      if (this.find(function (parent) {\n        return parent.node === ret.node;\n      })) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get("expression").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n\n    var targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n\n    var targetName = targetKey.value;\n\n    var target = this.get("object").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      var props = target.get("properties");\n      for (var _iterator3 = props, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var prop = _ref3;\n\n        if (!prop.isProperty()) continue;\n\n        var key = prop.get("key");\n\n        var match = prop.isnt("computed") && key.isIdentifier({ name: targetName });\n\n        match = match || key.isLiteral({ value: targetName });\n\n        if (match) return prop.get("value").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      var elems = target.get("elements");\n      var elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/introspection.js?')},"./node_modules/babel-traverse/lib/path/lib/hoister.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar referenceVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && _babelTypes.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === "this") {\n      var scope = path.scope;\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) break;\n      } while (scope = scope.parent);\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    var binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n\n    state.bindings[path.node.name] = binding;\n  }\n};\n\nvar PathHoister = function () {\n  function PathHoister(path, scope) {\n    (0, _classCallCheck3.default)(this, PathHoister);\n\n    this.breakOnScopePaths = [];\n\n    this.bindings = {};\n\n    this.scopes = [];\n\n    this.scope = scope;\n    this.path = path;\n\n    this.attachAfter = false;\n  }\n\n  PathHoister.prototype.isCompatibleScope = function isCompatibleScope(scope) {\n    for (var key in this.bindings) {\n      var binding = this.bindings[key];\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  PathHoister.prototype.getCompatibleScopes = function getCompatibleScopes() {\n    var scope = this.path.scope;\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  };\n\n  PathHoister.prototype.getAttachmentPath = function getAttachmentPath() {\n    var path = this._getAttachmentPath();\n    if (!path) return;\n\n    var targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (var name in this.bindings) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n\n        var binding = this.bindings[name];\n\n        if (binding.kind === "param") continue;\n\n        if (this.getAttachmentParentForPath(binding.path).key > path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (var _iterator = binding.constantViolations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var violationPath = _ref;\n\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    if (path.parentPath.isExportDeclaration()) {\n      path = path.parentPath;\n    }\n\n    return path;\n  };\n\n  PathHoister.prototype._getAttachmentPath = function _getAttachmentPath() {\n    var scopes = this.scopes;\n\n    var scope = scopes.pop();\n\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n\n        return scope.path.get("body").get("body")[0];\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  };\n\n  PathHoister.prototype.getNextScopeAttachmentParent = function getNextScopeAttachmentParent() {\n    var scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  };\n\n  PathHoister.prototype.getAttachmentParentForPath = function getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement() || path.isVariableDeclarator() && path.parentPath.node !== null && path.parentPath.node.declarations.length > 1) return path;\n    } while (path = path.parentPath);\n  };\n\n  PathHoister.prototype.hasOwnParamBindings = function hasOwnParamBindings(scope) {\n    for (var name in this.bindings) {\n      if (!scope.hasOwnBinding(name)) continue;\n\n      var binding = this.bindings[name];\n\n      if (binding.kind === "param" && binding.constant) return true;\n    }\n    return false;\n  };\n\n  PathHoister.prototype.run = function run() {\n    var node = this.path.node;\n    if (node._hoisted) return;\n    node._hoisted = true;\n\n    this.path.traverse(referenceVisitor, this);\n\n    this.getCompatibleScopes();\n\n    var attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n\n    var uid = attachTo.scope.generateUidIdentifier("ref");\n    var declarator = t.variableDeclarator(uid, this.path.node);\n\n    var insertFn = this.attachAfter ? "insertAfter" : "insertBefore";\n    attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration("var", [declarator])]);\n\n    var parent = this.path.parentPath;\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.JSXExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(uid);\n  };\n\n  return PathHoister;\n}();\n\nexports.default = PathHoister;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/lib/hoister.js?')},"./node_modules/babel-traverse/lib/path/lib/removal-hooks.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nvar hooks = exports.hooks = [function (self, parent) {\n  var removeParent = self.key === "test" && (parent.isWhile() || parent.isSwitchCase()) || self.key === "declaration" && parent.isExportDeclaration() || self.key === "body" && parent.isLabeledStatement() || self.listKey === "declarations" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === "expression" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === "left") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === "consequent" || self.key === "alternate") || self.key === "body" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: "BlockStatement",\n      body: []\n    });\n    return true;\n  }\n}];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/lib/removal-hooks.js?')},"./node_modules/babel-traverse/lib/path/lib/virtual-types.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = undefined;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar ReferencedIdentifier = exports.ReferencedIdentifier = {\n  types: ["Identifier", "JSXIdentifier"],\n  checkPath: function checkPath(_ref, opts) {\n    var node = _ref.node,\n        parent = _ref.parent;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (_babelTypes.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent);\n  }\n};\n\nvar ReferencedMemberExpression = exports.ReferencedMemberExpression = {\n  types: ["MemberExpression"],\n  checkPath: function checkPath(_ref2) {\n    var node = _ref2.node,\n        parent = _ref2.parent;\n\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n};\n\nvar BindingIdentifier = exports.BindingIdentifier = {\n  types: ["Identifier"],\n  checkPath: function checkPath(_ref3) {\n    var node = _ref3.node,\n        parent = _ref3.parent;\n\n    return t.isIdentifier(node) && t.isBinding(node, parent);\n  }\n};\n\nvar Statement = exports.Statement = {\n  types: ["Statement"],\n  checkPath: function checkPath(_ref4) {\n    var node = _ref4.node,\n        parent = _ref4.parent;\n\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, { left: node })) return false;\n        if (t.isForStatement(parent, { init: node })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nvar Expression = exports.Expression = {\n  types: ["Expression"],\n  checkPath: function checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n};\n\nvar Scope = exports.Scope = {\n  types: ["Scopable"],\n  checkPath: function checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n};\n\nvar Referenced = exports.Referenced = {\n  checkPath: function checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n};\n\nvar BlockScoped = exports.BlockScoped = {\n  checkPath: function checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n};\n\nvar Var = exports.Var = {\n  types: ["VariableDeclaration"],\n  checkPath: function checkPath(path) {\n    return t.isVar(path.node);\n  }\n};\n\nvar User = exports.User = {\n  checkPath: function checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n};\n\nvar Generated = exports.Generated = {\n  checkPath: function checkPath(path) {\n    return !path.isUser();\n  }\n};\n\nvar Pure = exports.Pure = {\n  checkPath: function checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n};\n\nvar Flow = exports.Flow = {\n  types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"],\n  checkPath: function checkPath(_ref5) {\n    var node = _ref5.node;\n\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === "type" || node.importKind === "typeof";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === "type";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === "type" || node.importKind === "typeof";\n    } else {\n      return false;\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/lib/virtual-types.js?')},"./node_modules/babel-traverse/lib/path/modification.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._maybePopFromStatements = _maybePopFromStatements;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = __webpack_require__("./node_modules/babel-traverse/lib/cache.js");\n\nvar _hoister = __webpack_require__("./node_modules/babel-traverse/lib/path/lib/hoister.js");\n\nvar _hoister2 = _interopRequireDefault(_hoister);\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction insertBefore(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertBefore(nodes);\n  } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {\n    if (this.node) nodes.push(this.node);\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertBefore(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.push(this.node);\n      this._replaceWith(t.blockStatement(nodes));\n    } else {\n      throw new Error("We don\'t know what to do with this node type. " + "We were previously a Statement but we can\'t fit in here?");\n    }\n  }\n\n  return [this];\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n\n  var paths = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var to = from + i;\n    var node = nodes[i];\n    this.container.splice(to, 0, node);\n\n    if (this.context) {\n      var path = this.context.create(this.parent, this.container, to, this.listKey);\n\n      if (this.context.queue) path.pushContext(this.context);\n      paths.push(path);\n    } else {\n      paths.push(_index2.default.get({\n        parentPath: this.parentPath,\n        parent: this.parent,\n        container: this.container,\n        listKey: this.listKey,\n        key: to\n      }));\n    }\n  }\n\n  var contexts = this._getQueueContexts();\n\n  for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _path = _ref;\n\n    _path.setScope();\n    _path.debug(function () {\n      return "Inserted.";\n    });\n\n    for (var _iterator2 = contexts, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var context = _ref2;\n\n      context.maybeQueue(_path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction _maybePopFromStatements(nodes) {\n  var last = nodes[nodes.length - 1];\n  var isIdentifier = t.isIdentifier(last) || t.isExpressionStatement(last) && t.isIdentifier(last.expression);\n\n  if (isIdentifier && !this.isCompletionRecord()) {\n    nodes.pop();\n  }\n}\n\nfunction insertAfter(nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  if (this.parentPath.isExpressionStatement() || this.parentPath.isLabeledStatement()) {\n    return this.parentPath.insertAfter(nodes);\n  } else if (this.isNodeType("Expression") || this.parentPath.isForStatement() && this.key === "init") {\n    if (this.node) {\n      var temp = this.scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression("=", temp, this.node)));\n      nodes.push(t.expressionStatement(temp));\n    }\n    this.replaceExpressionWithStatements(nodes);\n  } else {\n    this._maybePopFromStatements(nodes);\n    if (Array.isArray(this.container)) {\n      return this._containerInsertAfter(nodes);\n    } else if (this.isStatementOrBlock()) {\n      if (this.node) nodes.unshift(this.node);\n      this._replaceWith(t.blockStatement(nodes));\n    } else {\n      throw new Error("We don\'t know what to do with this node type. " + "We were previously a Statement but we can\'t fit in here?");\n    }\n  }\n\n  return [this];\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  var paths = _cache.path.get(this.parent);\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (nodes.constructor !== Array) {\n    nodes = [nodes];\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    var msg = void 0;\n\n    if (!node) {\n      msg = "has falsy node";\n    } else if ((typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node)) !== "object") {\n      msg = "contains a non-object node";\n    } else if (!node.type) {\n      msg = "without a type";\n    } else if (node instanceof _index2.default) {\n      msg = "has a NodePath when it expected a raw object";\n    }\n\n    if (msg) {\n      var type = Array.isArray(node) ? "array" : typeof node === "undefined" ? "undefined" : (0, _typeof3.default)(node);\n      throw new Error("Node list " + msg + " with the index of " + i + " and type of " + type);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  var path = _index2.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey: listKey,\n    key: 0\n  });\n\n  return path.insertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  var container = this.node[listKey];\n  var path = _index2.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey: listKey,\n    key: container.length\n  });\n\n  return path.replaceWithMultiple(nodes);\n}\n\nfunction hoist() {\n  var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.scope;\n\n  var hoister = new _hoister2.default(this, scope);\n  return hoister.run();\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/modification.js?')},"./node_modules/babel-traverse/lib/path/removal.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.remove = remove;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = __webpack_require__("./node_modules/babel-traverse/lib/path/lib/removal-hooks.js");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction remove() {\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n  this._remove();\n  this._markRemoved();\n}\n\nfunction _callRemovalHooks() {\n  for (var _iterator = _removalHooks.hooks, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var fn = _ref;\n\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this.shouldSkip = true;\n  this.removed = true;\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError("NodePath has been removed so is read-only.");\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/removal.js?')},"./node_modules/babel-traverse/lib/path/replacement.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _babelCodeFrame = __webpack_require__("./node_modules/babel-code-frame/lib/index.js");\n\nvar _babelCodeFrame2 = _interopRequireDefault(_babelCodeFrame);\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = __webpack_require__("./node_modules/babel-traverse/lib/path/index.js");\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _babylon = __webpack_require__("./node_modules/babylon/lib/index.js");\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hoistVariablesVisitor = {\n  Function: function Function(path) {\n    path.skip();\n  },\n  VariableDeclaration: function VariableDeclaration(path) {\n    if (path.node.kind !== "var") return;\n\n    var bindings = path.getBindingIdentifiers();\n    for (var key in bindings) {\n      path.scope.push({ id: bindings[key] });\n    }\n\n    var exprs = [];\n\n    for (var _iterator = path.node.declarations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var declar = _ref;\n\n      if (declar.init) {\n        exprs.push(t.expressionStatement(t.assignmentExpression("=", declar.id, declar.init)));\n      }\n    }\n\n    path.replaceWithMultiple(exprs);\n  }\n};\n\nfunction replaceWithMultiple(nodes) {\n  this.resync();\n\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  this.node = this.container[this.key] = null;\n  this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = "(" + replacement + ")";\n    replacement = (0, _babylon.parse)(replacement);\n  } catch (err) {\n    var loc = err.loc;\n    if (loc) {\n      err.message += " - make sure this is an expression.";\n      err.message += "\\n" + (0, _babelCodeFrame2.default)(replacement, loc.line, loc.column + 1);\n    }\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n  _index2.default.removeProperties(replacement);\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error("You can\'t replace this node, we\'ve already removed it");\n  }\n\n  if (replacement instanceof _index4.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");\n  }\n\n  if (this.node === replacement) {\n    return;\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error("You can only replace a Program root node with another Program node");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error("Don\'t use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");\n  }\n\n  if (typeof replacement === "string") {\n    throw new Error("Don\'t use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");\n  }\n\n  if (this.isNodeType("Statement") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n    }\n  }\n\n  if (this.isNodeType("Expression") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  var oldNode = this.node;\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n  this.type = replacement.type;\n\n  this.setScope();\n\n  this.requeue();\n}\n\nfunction _replaceWith(node) {\n  if (!this.container) {\n    throw new ReferenceError("Container is falsy");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(function () {\n    return "Replace with " + (node && node.type);\n  });\n\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n\n  var toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (t.isSequenceExpression(toSequenceExpression)) {\n    var exprs = toSequenceExpression.expressions;\n\n    if (exprs.length >= 2 && this.parentPath.isExpressionStatement()) {\n      this._maybePopFromStatements(exprs);\n    }\n\n    if (exprs.length === 1) {\n      this.replaceWith(exprs[0]);\n    } else {\n      this.replaceWith(toSequenceExpression);\n    }\n  } else if (toSequenceExpression) {\n    this.replaceWith(toSequenceExpression);\n  } else {\n    var container = t.functionExpression(null, [], t.blockStatement(nodes));\n    container.shadow = true;\n\n    this.replaceWith(t.callExpression(container, []));\n    this.traverse(hoistVariablesVisitor);\n\n    var completionRecords = this.get("callee").getCompletionRecords();\n    for (var _iterator2 = completionRecords, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var path = _ref2;\n\n      if (!path.isExpressionStatement()) continue;\n\n      var loop = path.findParent(function (path) {\n        return path.isLoop();\n      });\n      if (loop) {\n        var uid = loop.getData("expressionReplacementReturnUid");\n\n        if (!uid) {\n          var callee = this.get("callee");\n          uid = callee.scope.generateDeclaredUidIdentifier("ret");\n          callee.get("body").pushContainer("body", t.returnStatement(uid));\n          loop.setData("expressionReplacementReturnUid", uid);\n        } else {\n          uid = t.identifier(uid.name);\n        }\n\n        path.get("expression").replaceWith(t.assignmentExpression("=", uid, path.node.expression));\n      } else {\n        path.replaceWith(t.returnStatement(path.node.expression));\n      }\n    }\n\n    return this.node;\n  }\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n      this._containerInsertAfter(nodes);\n      return this.remove();\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/path/replacement.js?')},"./node_modules/babel-traverse/lib/scope/binding.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Binding = function () {\n  function Binding(_ref) {\n    var existing = _ref.existing,\n        identifier = _ref.identifier,\n        scope = _ref.scope,\n        path = _ref.path,\n        kind = _ref.kind;\n    (0, _classCallCheck3.default)(this, Binding);\n\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n\n    this.constantViolations = [];\n    this.constant = true;\n\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n\n    this.clearValue();\n\n    if (existing) {\n      this.constantViolations = [].concat(existing.path, existing.constantViolations, this.constantViolations);\n    }\n  }\n\n  Binding.prototype.deoptValue = function deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  };\n\n  Binding.prototype.setValue = function setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  };\n\n  Binding.prototype.clearValue = function clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  };\n\n  Binding.prototype.reassign = function reassign(path) {\n    this.constant = false;\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n    this.constantViolations.push(path);\n  };\n\n  Binding.prototype.reference = function reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  };\n\n  Binding.prototype.dereference = function dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  };\n\n  return Binding;\n}();\n\nexports.default = Binding;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/scope/binding.js?')},"./node_modules/babel-traverse/lib/scope/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _map = __webpack_require__("./node_modules/babel-runtime/core-js/map.js");\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _includes = __webpack_require__("./node_modules/lodash/includes.js");\n\nvar _includes2 = _interopRequireDefault(_includes);\n\nvar _repeat = __webpack_require__("./node_modules/lodash/repeat.js");\n\nvar _repeat2 = _interopRequireDefault(_repeat);\n\nvar _renamer = __webpack_require__("./node_modules/babel-traverse/lib/scope/lib/renamer.js");\n\nvar _renamer2 = _interopRequireDefault(_renamer);\n\nvar _index = __webpack_require__("./node_modules/babel-traverse/lib/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _defaults = __webpack_require__("./node_modules/lodash/defaults.js");\n\nvar _defaults2 = _interopRequireDefault(_defaults);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _binding2 = __webpack_require__("./node_modules/babel-traverse/lib/scope/binding.js");\n\nvar _binding3 = _interopRequireDefault(_binding2);\n\nvar _globals = __webpack_require__("./node_modules/babel-traverse/node_modules/globals/index.js");\n\nvar _globals2 = _interopRequireDefault(_globals);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _cache = __webpack_require__("./node_modules/babel-traverse/lib/cache.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _crawlCallsCount = 0;\n\nfunction getCache(path, parentScope, self) {\n  var scopes = _cache.scope.get(path.node) || [];\n\n  for (var _iterator = scopes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var scope = _ref;\n\n    if (scope.parent === parentScope && scope.path === path) return scope;\n  }\n\n  scopes.push(self);\n\n  if (!_cache.scope.has(path.node)) {\n    _cache.scope.set(path.node, scopes);\n  }\n}\n\nfunction gatherNodeParts(node, parts) {\n  if (t.isModuleDeclaration(node)) {\n    if (node.source) {\n      gatherNodeParts(node.source, parts);\n    } else if (node.specifiers && node.specifiers.length) {\n      for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var specifier = _ref2;\n\n        gatherNodeParts(specifier, parts);\n      }\n    } else if (node.declaration) {\n      gatherNodeParts(node.declaration, parts);\n    }\n  } else if (t.isModuleSpecifier(node)) {\n    gatherNodeParts(node.local, parts);\n  } else if (t.isMemberExpression(node)) {\n    gatherNodeParts(node.object, parts);\n    gatherNodeParts(node.property, parts);\n  } else if (t.isIdentifier(node)) {\n    parts.push(node.name);\n  } else if (t.isLiteral(node)) {\n    parts.push(node.value);\n  } else if (t.isCallExpression(node)) {\n    gatherNodeParts(node.callee, parts);\n  } else if (t.isObjectExpression(node) || t.isObjectPattern(node)) {\n    for (var _iterator3 = node.properties, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var prop = _ref3;\n\n      gatherNodeParts(prop.key || prop.argument, parts);\n    }\n  }\n}\n\nvar collectorVisitor = {\n  For: function For(path) {\n    for (var _iterator4 = t.FOR_INIT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var key = _ref4;\n\n      var declar = path.get(key);\n      if (declar.isVar()) path.scope.getFunctionParent().registerBinding("var", declar);\n    }\n  },\n  Declaration: function Declaration(path) {\n    if (path.isBlockScoped()) return;\n\n    if (path.isExportDeclaration() && path.get("declaration").isDeclaration()) return;\n\n    path.scope.getFunctionParent().registerDeclaration(path);\n  },\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n  ForXStatement: function ForXStatement(path, state) {\n    var left = path.get("left");\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(left);\n    }\n  },\n\n\n  ExportDeclaration: {\n    exit: function exit(path) {\n      var node = path.node,\n          scope = path.scope;\n\n      var declar = node.declaration;\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        var _id = declar.id;\n        if (!_id) return;\n\n        var binding = scope.getBinding(_id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (var _iterator5 = declar.declarations, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n          var _ref5;\n\n          if (_isArray5) {\n            if (_i5 >= _iterator5.length) break;\n            _ref5 = _iterator5[_i5++];\n          } else {\n            _i5 = _iterator5.next();\n            if (_i5.done) break;\n            _ref5 = _i5.value;\n          }\n\n          var decl = _ref5;\n\n          var ids = t.getBindingIdentifiers(decl);\n          for (var name in ids) {\n            var _binding = scope.getBinding(name);\n            if (_binding) _binding.reference(path);\n          }\n        }\n      }\n    }\n  },\n\n  LabeledStatement: function LabeledStatement(path) {\n    path.scope.getProgramParent().addGlobal(path.node);\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n  AssignmentExpression: function AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n  UpdateExpression: function UpdateExpression(path, state) {\n    state.constantViolations.push(path.get("argument"));\n  },\n  UnaryExpression: function UnaryExpression(path, state) {\n    if (path.node.operator === "delete") {\n      state.constantViolations.push(path.get("argument"));\n    }\n  },\n  BlockScoped: function BlockScoped(path) {\n    var scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    scope.getBlockParent().registerDeclaration(path);\n  },\n  ClassDeclaration: function ClassDeclaration(path) {\n    var id = path.node.id;\n    if (!id) return;\n\n    var name = id.name;\n    path.scope.bindings[name] = path.scope.getBinding(name);\n  },\n  Block: function Block(path) {\n    var paths = path.get("body");\n    for (var _iterator6 = paths, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var bodyPath = _ref6;\n\n      if (bodyPath.isFunctionDeclaration()) {\n        path.scope.getBlockParent().registerDeclaration(bodyPath);\n      }\n    }\n  }\n};\n\nvar uid = 0;\n\nvar Scope = function () {\n  function Scope(path, parentScope) {\n    (0, _classCallCheck3.default)(this, Scope);\n\n    if (parentScope && parentScope.block === path.node) {\n      return parentScope;\n    }\n\n    var cached = getCache(path, parentScope, this);\n    if (cached) return cached;\n\n    this.uid = uid++;\n    this.parent = parentScope;\n    this.hub = path.hub;\n\n    this.parentBlock = path.parent;\n    this.block = path.node;\n    this.path = path;\n\n    this.labels = new _map2.default();\n  }\n\n  Scope.prototype.traverse = function traverse(node, opts, state) {\n    (0, _index2.default)(node, opts, this, state, this.path);\n  };\n\n  Scope.prototype.generateDeclaredUidIdentifier = function generateDeclaredUidIdentifier() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";\n\n    var id = this.generateUidIdentifier(name);\n    this.push({ id: id });\n    return id;\n  };\n\n  Scope.prototype.generateUidIdentifier = function generateUidIdentifier() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";\n\n    return t.identifier(this.generateUid(name));\n  };\n\n  Scope.prototype.generateUid = function generateUid() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "temp";\n\n    name = t.toIdentifier(name).replace(/^_+/, "").replace(/[0-9]+$/g, "");\n\n    var uid = void 0;\n    var i = 0;\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    var program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n\n    return uid;\n  };\n\n  Scope.prototype._generateUid = function _generateUid(name, i) {\n    var id = name;\n    if (i > 1) id += i;\n    return "_" + id;\n  };\n\n  Scope.prototype.generateUidIdentifierBasedOnNode = function generateUidIdentifierBasedOnNode(parent, defaultName) {\n    var node = parent;\n\n    if (t.isAssignmentExpression(parent)) {\n      node = parent.left;\n    } else if (t.isVariableDeclarator(parent)) {\n      node = parent.id;\n    } else if (t.isObjectProperty(node) || t.isObjectMethod(node)) {\n      node = node.key;\n    }\n\n    var parts = [];\n    gatherNodeParts(node, parts);\n\n    var id = parts.join("$");\n    id = id.replace(/^_/, "") || defaultName || "ref";\n\n    return this.generateUidIdentifier(id.slice(0, 20));\n  };\n\n  Scope.prototype.isStatic = function isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      var binding = this.getBinding(node.name);\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  };\n\n  Scope.prototype.maybeGenerateMemoised = function maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      var _id2 = this.generateUidIdentifierBasedOnNode(node);\n      if (!dontPush) this.push({ id: _id2 });\n      return _id2;\n    }\n  };\n\n  Scope.prototype.checkBlockScopedCollisions = function checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === "param") return;\n\n    if (kind === "hoisted" && local.kind === "let") return;\n\n    var duplicate = kind === "let" || local.kind === "let" || local.kind === "const" || local.kind === "module" || local.kind === "param" && (kind === "let" || kind === "const");\n\n    if (duplicate) {\n      throw this.hub.file.buildCodeFrameError(id, messages.get("scopeDuplicateDeclaration", name), TypeError);\n    }\n  };\n\n  Scope.prototype.rename = function rename(oldName, newName, block) {\n    var binding = this.getBinding(oldName);\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer2.default(binding, oldName, newName).rename(block);\n    }\n  };\n\n  Scope.prototype._renameFromMap = function _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  };\n\n  Scope.prototype.dump = function dump() {\n    var sep = (0, _repeat2.default)("-", 60);\n    console.log(sep);\n    var scope = this;\n    do {\n      console.log("#", scope.block.type);\n      for (var name in scope.bindings) {\n        var binding = scope.bindings[name];\n        console.log(" -", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n    console.log(sep);\n  };\n\n  Scope.prototype.toArray = function toArray(node, i) {\n    var file = this.hub.file;\n\n    if (t.isIdentifier(node)) {\n      var binding = this.getBinding(node.name);\n      if (binding && binding.constant && binding.path.isGenericType("Array")) return node;\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, { name: "arguments" })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier("Array"), t.identifier("prototype")), t.identifier("slice")), t.identifier("call")), [node]);\n    }\n\n    var helperName = "toArray";\n    var args = [node];\n    if (i === true) {\n      helperName = "toConsumableArray";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = "slicedToArray";\n    }\n    return t.callExpression(file.addHelper(helperName), args);\n  };\n\n  Scope.prototype.hasLabel = function hasLabel(name) {\n    return !!this.getLabel(name);\n  };\n\n  Scope.prototype.getLabel = function getLabel(name) {\n    return this.labels.get(name);\n  };\n\n  Scope.prototype.registerLabel = function registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  };\n\n  Scope.prototype.registerDeclaration = function registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding("hoisted", path.get("id"), path);\n    } else if (path.isVariableDeclaration()) {\n      var declarations = path.get("declarations");\n      for (var _iterator7 = declarations, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n        var _ref7;\n\n        if (_isArray7) {\n          if (_i7 >= _iterator7.length) break;\n          _ref7 = _iterator7[_i7++];\n        } else {\n          _i7 = _iterator7.next();\n          if (_i7.done) break;\n          _ref7 = _i7.value;\n        }\n\n        var declar = _ref7;\n\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding("let", path);\n    } else if (path.isImportDeclaration()) {\n      var specifiers = path.get("specifiers");\n      for (var _iterator8 = specifiers, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {\n        var _ref8;\n\n        if (_isArray8) {\n          if (_i8 >= _iterator8.length) break;\n          _ref8 = _iterator8[_i8++];\n        } else {\n          _i8 = _iterator8.next();\n          if (_i8.done) break;\n          _ref8 = _i8.value;\n        }\n\n        var specifier = _ref8;\n\n        this.registerBinding("module", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      var _declar = path.get("declaration");\n      if (_declar.isClassDeclaration() || _declar.isFunctionDeclaration() || _declar.isVariableDeclaration()) {\n        this.registerDeclaration(_declar);\n      }\n    } else {\n      this.registerBinding("unknown", path);\n    }\n  };\n\n  Scope.prototype.buildUndefinedNode = function buildUndefinedNode() {\n    if (this.hasBinding("undefined")) {\n      return t.unaryExpression("void", t.numericLiteral(0), true);\n    } else {\n      return t.identifier("undefined");\n    }\n  };\n\n  Scope.prototype.registerConstantViolation = function registerConstantViolation(path) {\n    var ids = path.getBindingIdentifiers();\n    for (var name in ids) {\n      var binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  };\n\n  Scope.prototype.registerBinding = function registerBinding(kind, path) {\n    var bindingPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : path;\n\n    if (!kind) throw new ReferenceError("no `kind`");\n\n    if (path.isVariableDeclaration()) {\n      var declarators = path.get("declarations");\n      for (var _iterator9 = declarators, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {\n        var _ref9;\n\n        if (_isArray9) {\n          if (_i9 >= _iterator9.length) break;\n          _ref9 = _iterator9[_i9++];\n        } else {\n          _i9 = _iterator9.next();\n          if (_i9.done) break;\n          _ref9 = _i9.value;\n        }\n\n        var declar = _ref9;\n\n        this.registerBinding(kind, declar);\n      }\n      return;\n    }\n\n    var parent = this.getProgramParent();\n    var ids = path.getBindingIdentifiers(true);\n\n    for (var name in ids) {\n      for (var _iterator10 = ids[name], _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {\n        var _ref10;\n\n        if (_isArray10) {\n          if (_i10 >= _iterator10.length) break;\n          _ref10 = _iterator10[_i10++];\n        } else {\n          _i10 = _iterator10.next();\n          if (_i10.done) break;\n          _ref10 = _i10.value;\n        }\n\n        var _id3 = _ref10;\n\n        var local = this.getOwnBinding(name);\n        if (local) {\n          if (local.identifier === _id3) continue;\n\n          this.checkBlockScopedCollisions(local, kind, name, _id3);\n        }\n\n        if (local && local.path.isFlow()) local = null;\n\n        parent.references[name] = true;\n\n        this.bindings[name] = new _binding3.default({\n          identifier: _id3,\n          existing: local,\n          scope: this,\n          path: bindingPath,\n          kind: kind\n        });\n      }\n    }\n  };\n\n  Scope.prototype.addGlobal = function addGlobal(node) {\n    this.globals[node.name] = node;\n  };\n\n  Scope.prototype.hasUid = function hasUid(name) {\n    var scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  };\n\n  Scope.prototype.hasGlobal = function hasGlobal(name) {\n    var scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  };\n\n  Scope.prototype.hasReference = function hasReference(name) {\n    var scope = this;\n\n    do {\n      if (scope.references[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  };\n\n  Scope.prototype.isPure = function isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      var binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) return false;\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (var _iterator11 = node.body, _isArray11 = Array.isArray(_iterator11), _i11 = 0, _iterator11 = _isArray11 ? _iterator11 : (0, _getIterator3.default)(_iterator11);;) {\n        var _ref11;\n\n        if (_isArray11) {\n          if (_i11 >= _iterator11.length) break;\n          _ref11 = _iterator11[_i11++];\n        } else {\n          _i11 = _iterator11.next();\n          if (_i11.done) break;\n          _ref11 = _i11.value;\n        }\n\n        var method = _ref11;\n\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (var _iterator12 = node.elements, _isArray12 = Array.isArray(_iterator12), _i12 = 0, _iterator12 = _isArray12 ? _iterator12 : (0, _getIterator3.default)(_iterator12);;) {\n        var _ref12;\n\n        if (_isArray12) {\n          if (_i12 >= _iterator12.length) break;\n          _ref12 = _iterator12[_i12++];\n        } else {\n          _i12 = _iterator12.next();\n          if (_i12.done) break;\n          _ref12 = _i12.value;\n        }\n\n        var elem = _ref12;\n\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (var _iterator13 = node.properties, _isArray13 = Array.isArray(_iterator13), _i13 = 0, _iterator13 = _isArray13 ? _iterator13 : (0, _getIterator3.default)(_iterator13);;) {\n        var _ref13;\n\n        if (_isArray13) {\n          if (_i13 >= _iterator13.length) break;\n          _ref13 = _iterator13[_i13++];\n        } else {\n          _i13 = _iterator13.next();\n          if (_i13.done) break;\n          _ref13 = _i13.value;\n        }\n\n        var prop = _ref13;\n\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n      return true;\n    } else if (t.isClassMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === "get" || node.kind === "set") return false;\n      return true;\n    } else if (t.isClassProperty(node) || t.isObjectProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else {\n      return t.isPureish(node);\n    }\n  };\n\n  Scope.prototype.setData = function setData(key, val) {\n    return this.data[key] = val;\n  };\n\n  Scope.prototype.getData = function getData(key) {\n    var scope = this;\n    do {\n      var data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  };\n\n  Scope.prototype.removeData = function removeData(key) {\n    var scope = this;\n    do {\n      var data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  };\n\n  Scope.prototype.init = function init() {\n    if (!this.references) this.crawl();\n  };\n\n  Scope.prototype.crawl = function crawl() {\n    _crawlCallsCount++;\n    this._crawl();\n    _crawlCallsCount--;\n  };\n\n  Scope.prototype._crawl = function _crawl() {\n    var path = this.path;\n\n    this.references = (0, _create2.default)(null);\n    this.bindings = (0, _create2.default)(null);\n    this.globals = (0, _create2.default)(null);\n    this.uids = (0, _create2.default)(null);\n    this.data = (0, _create2.default)(null);\n\n    if (path.isLoop()) {\n      for (var _iterator14 = t.FOR_INIT_KEYS, _isArray14 = Array.isArray(_iterator14), _i14 = 0, _iterator14 = _isArray14 ? _iterator14 : (0, _getIterator3.default)(_iterator14);;) {\n        var _ref14;\n\n        if (_isArray14) {\n          if (_i14 >= _iterator14.length) break;\n          _ref14 = _iterator14[_i14++];\n        } else {\n          _i14 = _iterator14.next();\n          if (_i14.done) break;\n          _ref14 = _i14.value;\n        }\n\n        var key = _ref14;\n\n        var node = path.get(key);\n        if (node.isBlockScoped()) this.registerBinding(node.node.kind, node);\n      }\n    }\n\n    if (path.isFunctionExpression() && path.has("id")) {\n      if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {\n        this.registerBinding("local", path.get("id"), path);\n      }\n    }\n\n    if (path.isClassExpression() && path.has("id")) {\n      if (!path.get("id").node[t.NOT_LOCAL_BINDING]) {\n        this.registerBinding("local", path);\n      }\n    }\n\n    if (path.isFunction()) {\n      var params = path.get("params");\n      for (var _iterator15 = params, _isArray15 = Array.isArray(_iterator15), _i15 = 0, _iterator15 = _isArray15 ? _iterator15 : (0, _getIterator3.default)(_iterator15);;) {\n        var _ref15;\n\n        if (_isArray15) {\n          if (_i15 >= _iterator15.length) break;\n          _ref15 = _iterator15[_i15++];\n        } else {\n          _i15 = _iterator15.next();\n          if (_i15.done) break;\n          _ref15 = _i15.value;\n        }\n\n        var param = _ref15;\n\n        this.registerBinding("param", param);\n      }\n    }\n\n    if (path.isCatchClause()) {\n      this.registerBinding("let", path);\n    }\n\n    var parent = this.getProgramParent();\n    if (parent.crawling) return;\n\n    var state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n\n    this.crawling = true;\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (var _iterator16 = state.assignments, _isArray16 = Array.isArray(_iterator16), _i16 = 0, _iterator16 = _isArray16 ? _iterator16 : (0, _getIterator3.default)(_iterator16);;) {\n      var _ref16;\n\n      if (_isArray16) {\n        if (_i16 >= _iterator16.length) break;\n        _ref16 = _iterator16[_i16++];\n      } else {\n        _i16 = _iterator16.next();\n        if (_i16.done) break;\n        _ref16 = _i16.value;\n      }\n\n      var _path = _ref16;\n\n      var ids = _path.getBindingIdentifiers();\n      var programParent = void 0;\n      for (var name in ids) {\n        if (_path.scope.getBinding(name)) continue;\n\n        programParent = programParent || _path.scope.getProgramParent();\n        programParent.addGlobal(ids[name]);\n      }\n\n      _path.scope.registerConstantViolation(_path);\n    }\n\n    for (var _iterator17 = state.references, _isArray17 = Array.isArray(_iterator17), _i17 = 0, _iterator17 = _isArray17 ? _iterator17 : (0, _getIterator3.default)(_iterator17);;) {\n      var _ref17;\n\n      if (_isArray17) {\n        if (_i17 >= _iterator17.length) break;\n        _ref17 = _iterator17[_i17++];\n      } else {\n        _i17 = _iterator17.next();\n        if (_i17.done) break;\n        _ref17 = _i17.value;\n      }\n\n      var ref = _ref17;\n\n      var binding = ref.scope.getBinding(ref.node.name);\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        ref.scope.getProgramParent().addGlobal(ref.node);\n      }\n    }\n\n    for (var _iterator18 = state.constantViolations, _isArray18 = Array.isArray(_iterator18), _i18 = 0, _iterator18 = _isArray18 ? _iterator18 : (0, _getIterator3.default)(_iterator18);;) {\n      var _ref18;\n\n      if (_isArray18) {\n        if (_i18 >= _iterator18.length) break;\n        _ref18 = _iterator18[_i18++];\n      } else {\n        _i18 = _iterator18.next();\n        if (_i18.done) break;\n        _ref18 = _i18.value;\n      }\n\n      var _path2 = _ref18;\n\n      _path2.scope.registerConstantViolation(_path2);\n    }\n  };\n\n  Scope.prototype.push = function push(opts) {\n    var path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = this.getFunctionParent().path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      t.ensureBlock(path.node);\n      path = path.get("body");\n    }\n\n    var unique = opts.unique;\n    var kind = opts.kind || "var";\n    var blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n\n    var dataKey = "declaration:" + kind + ":" + blockHoist;\n    var declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      var declar = t.variableDeclaration(kind, []);\n      declar._generated = true;\n      declar._blockHoist = blockHoist;\n\n      var _path$unshiftContaine = path.unshiftContainer("body", [declar]);\n\n      declarPath = _path$unshiftContaine[0];\n\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    var declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get("declarations").pop());\n  };\n\n  Scope.prototype.getProgramParent = function getProgramParent() {\n    var scope = this;\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n    throw new Error("We couldn\'t find a Function or Program...");\n  };\n\n  Scope.prototype.getFunctionParent = function getFunctionParent() {\n    var scope = this;\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n    throw new Error("We couldn\'t find a Function or Program...");\n  };\n\n  Scope.prototype.getBlockParent = function getBlockParent() {\n    var scope = this;\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n    throw new Error("We couldn\'t find a BlockStatement, For, Switch, Function, Loop or Program...");\n  };\n\n  Scope.prototype.getAllBindings = function getAllBindings() {\n    var ids = (0, _create2.default)(null);\n\n    var scope = this;\n    do {\n      (0, _defaults2.default)(ids, scope.bindings);\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  };\n\n  Scope.prototype.getAllBindingsOfKind = function getAllBindingsOfKind() {\n    var ids = (0, _create2.default)(null);\n\n    for (var _iterator19 = arguments, _isArray19 = Array.isArray(_iterator19), _i19 = 0, _iterator19 = _isArray19 ? _iterator19 : (0, _getIterator3.default)(_iterator19);;) {\n      var _ref19;\n\n      if (_isArray19) {\n        if (_i19 >= _iterator19.length) break;\n        _ref19 = _iterator19[_i19++];\n      } else {\n        _i19 = _iterator19.next();\n        if (_i19.done) break;\n        _ref19 = _i19.value;\n      }\n\n      var kind = _ref19;\n\n      var scope = this;\n      do {\n        for (var name in scope.bindings) {\n          var binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  };\n\n  Scope.prototype.bindingIdentifierEquals = function bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  };\n\n  Scope.prototype.warnOnFlowBinding = function warnOnFlowBinding(binding) {\n    if (_crawlCallsCount === 0 && binding && binding.path.isFlow()) {\n      console.warn("\\n        You or one of the Babel plugins you are using are using Flow declarations as bindings.\\n        Support for this will be removed in version 7. To find out the caller, grep for this\\n        message and change it to a `console.trace()`.\\n      ");\n    }\n    return binding;\n  };\n\n  Scope.prototype.getBinding = function getBinding(name) {\n    var scope = this;\n\n    do {\n      var binding = scope.getOwnBinding(name);\n      if (binding) return this.warnOnFlowBinding(binding);\n    } while (scope = scope.parent);\n  };\n\n  Scope.prototype.getOwnBinding = function getOwnBinding(name) {\n    return this.warnOnFlowBinding(this.bindings[name]);\n  };\n\n  Scope.prototype.getBindingIdentifier = function getBindingIdentifier(name) {\n    var info = this.getBinding(name);\n    return info && info.identifier;\n  };\n\n  Scope.prototype.getOwnBindingIdentifier = function getOwnBindingIdentifier(name) {\n    var binding = this.bindings[name];\n    return binding && binding.identifier;\n  };\n\n  Scope.prototype.hasOwnBinding = function hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  };\n\n  Scope.prototype.hasBinding = function hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && (0, _includes2.default)(Scope.globals, name)) return true;\n    if (!noGlobals && (0, _includes2.default)(Scope.contextVariables, name)) return true;\n    return false;\n  };\n\n  Scope.prototype.parentHasBinding = function parentHasBinding(name, noGlobals) {\n    return this.parent && this.parent.hasBinding(name, noGlobals);\n  };\n\n  Scope.prototype.moveBindingTo = function moveBindingTo(name, scope) {\n    var info = this.getBinding(name);\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  };\n\n  Scope.prototype.removeOwnBinding = function removeOwnBinding(name) {\n    delete this.bindings[name];\n  };\n\n  Scope.prototype.removeBinding = function removeBinding(name) {\n    var info = this.getBinding(name);\n    if (info) {\n      info.scope.removeOwnBinding(name);\n    }\n\n    var scope = this;\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  };\n\n  return Scope;\n}();\n\nScope.globals = (0, _keys2.default)(_globals2.default.builtin);\nScope.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];\nexports.default = Scope;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/scope/index.js?')},"./node_modules/babel-traverse/lib/scope/lib/renamer.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = __webpack_require__("./node_modules/babel-runtime/helpers/classCallCheck.js");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _binding = __webpack_require__("./node_modules/babel-traverse/lib/scope/binding.js");\n\nvar _binding2 = _interopRequireDefault(_binding);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar renameVisitor = {\n  ReferencedIdentifier: function ReferencedIdentifier(_ref, state) {\n    var node = _ref.node;\n\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n  Scope: function Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      path.skip();\n    }\n  },\n  "AssignmentExpression|Declaration": function AssignmentExpressionDeclaration(path, state) {\n    var ids = path.getOuterBindingIdentifiers();\n\n    for (var name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n};\n\nvar Renamer = function () {\n  function Renamer(binding, oldName, newName) {\n    (0, _classCallCheck3.default)(this, Renamer);\n\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  Renamer.prototype.maybeConvertFromExportDeclaration = function maybeConvertFromExportDeclaration(parentDeclar) {\n    var exportDeclar = parentDeclar.parentPath.isExportDeclaration() && parentDeclar.parentPath;\n    if (!exportDeclar) return;\n\n    var isDefault = exportDeclar.isExportDefaultDeclaration();\n\n    if (isDefault && (parentDeclar.isFunctionDeclaration() || parentDeclar.isClassDeclaration()) && !parentDeclar.node.id) {\n      parentDeclar.node.id = parentDeclar.scope.generateUidIdentifier("default");\n    }\n\n    var bindingIdentifiers = parentDeclar.getOuterBindingIdentifiers();\n    var specifiers = [];\n\n    for (var name in bindingIdentifiers) {\n      var localName = name === this.oldName ? this.newName : name;\n      var exportedName = isDefault ? "default" : name;\n      specifiers.push(t.exportSpecifier(t.identifier(localName), t.identifier(exportedName)));\n    }\n\n    if (specifiers.length) {\n      var aliasDeclar = t.exportNamedDeclaration(null, specifiers);\n\n      if (parentDeclar.isFunctionDeclaration()) {\n        aliasDeclar._blockHoist = 3;\n      }\n\n      exportDeclar.insertAfter(aliasDeclar);\n      exportDeclar.replaceWith(parentDeclar.node);\n    }\n  };\n\n  Renamer.prototype.rename = function rename(block) {\n    var binding = this.binding,\n        oldName = this.oldName,\n        newName = this.newName;\n    var scope = binding.scope,\n        path = binding.path;\n\n\n    var parentDeclar = path.find(function (path) {\n      return path.isDeclaration() || path.isFunctionExpression();\n    });\n    if (parentDeclar) {\n      this.maybeConvertFromExportDeclaration(parentDeclar);\n    }\n\n    scope.traverse(block || scope.block, renameVisitor, this);\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (binding.type === "hoisted") {}\n  };\n\n  return Renamer;\n}();\n\nexports.default = Renamer;\nmodule.exports = exports["default"];\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/scope/lib/renamer.js?')},"./node_modules/babel-traverse/lib/visitors.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar _virtualTypes = __webpack_require__("./node_modules/babel-traverse/lib/path/lib/virtual-types.js");\n\nvar virtualTypes = _interopRequireWildcard(_virtualTypes);\n\nvar _babelMessages = __webpack_require__("./node_modules/babel-messages/lib/index.js");\n\nvar messages = _interopRequireWildcard(_babelMessages);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _clone = __webpack_require__("./node_modules/lodash/clone.js");\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (var nodeType in visitor) {\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    var parts = nodeType.split("|");\n    if (parts.length === 1) continue;\n\n    var fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (var _iterator = parts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var part = _ref;\n\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n\n  delete visitor.__esModule;\n\n  ensureEntranceObjects(visitor);\n\n  ensureCallbackArrays(visitor);\n\n  for (var _iterator2 = (0, _keys2.default)(visitor), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var _nodeType3 = _ref2;\n\n    if (shouldIgnoreKey(_nodeType3)) continue;\n\n    var wrapper = virtualTypes[_nodeType3];\n    if (!wrapper) continue;\n\n    var _fns2 = visitor[_nodeType3];\n    for (var type in _fns2) {\n      _fns2[type] = wrapCheck(wrapper, _fns2[type]);\n    }\n\n    delete visitor[_nodeType3];\n\n    if (wrapper.types) {\n      for (var _iterator4 = wrapper.types, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var _type = _ref4;\n\n        if (visitor[_type]) {\n          mergePair(visitor[_type], _fns2);\n        } else {\n          visitor[_type] = _fns2;\n        }\n      }\n    } else {\n      mergePair(visitor, _fns2);\n    }\n  }\n\n  for (var _nodeType in visitor) {\n    if (shouldIgnoreKey(_nodeType)) continue;\n\n    var _fns = visitor[_nodeType];\n\n    var aliases = t.FLIPPED_ALIAS_KEYS[_nodeType];\n\n    var deprecratedKey = t.DEPRECATED_KEYS[_nodeType];\n    if (deprecratedKey) {\n      console.trace("Visitor defined for " + _nodeType + " but it has been renamed to " + deprecratedKey);\n      aliases = [deprecratedKey];\n    }\n\n    if (!aliases) continue;\n\n    delete visitor[_nodeType];\n\n    for (var _iterator3 = aliases, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var alias = _ref3;\n\n      var existing = visitor[alias];\n      if (existing) {\n        mergePair(existing, _fns);\n      } else {\n        visitor[alias] = (0, _clone2.default)(_fns);\n      }\n    }\n  }\n\n  for (var _nodeType2 in visitor) {\n    if (shouldIgnoreKey(_nodeType2)) continue;\n\n    ensureCallbackArrays(visitor[_nodeType2]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === "function") {\n    throw new Error(messages.get("traverseVerifyRootFunction"));\n  }\n\n  for (var nodeType in visitor) {\n    if (nodeType === "enter" || nodeType === "exit") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(messages.get("traverseVerifyNodeType", nodeType));\n    }\n\n    var visitors = visitor[nodeType];\n    if ((typeof visitors === "undefined" ? "undefined" : (0, _typeof3.default)(visitors)) === "object") {\n      for (var visitorKey in visitors) {\n        if (visitorKey === "enter" || visitorKey === "exit") {\n          validateVisitorMethods(nodeType + "." + visitorKey, visitors[visitorKey]);\n        } else {\n          throw new Error(messages.get("traverseVerifyVisitorProperty", nodeType, visitorKey));\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  var fns = [].concat(val);\n  for (var _iterator5 = fns, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n    var _ref5;\n\n    if (_isArray5) {\n      if (_i5 >= _iterator5.length) break;\n      _ref5 = _iterator5[_i5++];\n    } else {\n      _i5 = _iterator5.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var fn = _ref5;\n\n    if (typeof fn !== "function") {\n      throw new TypeError("Non-function found defined in " + path + " with type " + (typeof fn === "undefined" ? "undefined" : (0, _typeof3.default)(fn)));\n    }\n  }\n}\n\nfunction merge(visitors) {\n  var states = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var wrapper = arguments[2];\n\n  var rootVisitor = {};\n\n  for (var i = 0; i < visitors.length; i++) {\n    var visitor = visitors[i];\n    var state = states[i];\n\n    explode(visitor);\n\n    for (var type in visitor) {\n      var visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      var nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  var newVisitor = {};\n\n  var _loop = function _loop(key) {\n    var fns = oldVisitor[key];\n\n    if (!Array.isArray(fns)) return "continue";\n\n    fns = fns.map(function (fn) {\n      var newFn = fn;\n\n      if (state) {\n        newFn = function newFn(path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      return newFn;\n    });\n\n    newVisitor[key] = fns;\n  };\n\n  for (var key in oldVisitor) {\n    var _ret = _loop(key);\n\n    if (_ret === "continue") continue;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (var key in obj) {\n    if (shouldIgnoreKey(key)) continue;\n\n    var fns = obj[key];\n    if (typeof fns === "function") {\n      obj[key] = { enter: fns };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  var newFn = function newFn(path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n  newFn.toString = function () {\n    return fn.toString();\n  };\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === "_") return true;\n\n  if (key === "enter" || key === "exit" || key === "shouldSkip") return true;\n\n  if (key === "blacklist" || key === "noScope" || key === "skipKeys") return true;\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (var key in src) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/lib/visitors.js?')},"./node_modules/babel-traverse/node_modules/globals/globals.json":function(module){eval('module.exports = JSON.parse("{\\"builtin\\":{\\"Array\\":false,\\"ArrayBuffer\\":false,\\"Boolean\\":false,\\"constructor\\":false,\\"DataView\\":false,\\"Date\\":false,\\"decodeURI\\":false,\\"decodeURIComponent\\":false,\\"encodeURI\\":false,\\"encodeURIComponent\\":false,\\"Error\\":false,\\"escape\\":false,\\"eval\\":false,\\"EvalError\\":false,\\"Float32Array\\":false,\\"Float64Array\\":false,\\"Function\\":false,\\"hasOwnProperty\\":false,\\"Infinity\\":false,\\"Int16Array\\":false,\\"Int32Array\\":false,\\"Int8Array\\":false,\\"isFinite\\":false,\\"isNaN\\":false,\\"isPrototypeOf\\":false,\\"JSON\\":false,\\"Map\\":false,\\"Math\\":false,\\"NaN\\":false,\\"Number\\":false,\\"Object\\":false,\\"parseFloat\\":false,\\"parseInt\\":false,\\"Promise\\":false,\\"propertyIsEnumerable\\":false,\\"Proxy\\":false,\\"RangeError\\":false,\\"ReferenceError\\":false,\\"Reflect\\":false,\\"RegExp\\":false,\\"Set\\":false,\\"String\\":false,\\"Symbol\\":false,\\"SyntaxError\\":false,\\"System\\":false,\\"toLocaleString\\":false,\\"toString\\":false,\\"TypeError\\":false,\\"Uint16Array\\":false,\\"Uint32Array\\":false,\\"Uint8Array\\":false,\\"Uint8ClampedArray\\":false,\\"undefined\\":false,\\"unescape\\":false,\\"URIError\\":false,\\"valueOf\\":false,\\"WeakMap\\":false,\\"WeakSet\\":false},\\"es5\\":{\\"Array\\":false,\\"Boolean\\":false,\\"constructor\\":false,\\"Date\\":false,\\"decodeURI\\":false,\\"decodeURIComponent\\":false,\\"encodeURI\\":false,\\"encodeURIComponent\\":false,\\"Error\\":false,\\"escape\\":false,\\"eval\\":false,\\"EvalError\\":false,\\"Function\\":false,\\"hasOwnProperty\\":false,\\"Infinity\\":false,\\"isFinite\\":false,\\"isNaN\\":false,\\"isPrototypeOf\\":false,\\"JSON\\":false,\\"Math\\":false,\\"NaN\\":false,\\"Number\\":false,\\"Object\\":false,\\"parseFloat\\":false,\\"parseInt\\":false,\\"propertyIsEnumerable\\":false,\\"RangeError\\":false,\\"ReferenceError\\":false,\\"RegExp\\":false,\\"String\\":false,\\"SyntaxError\\":false,\\"toLocaleString\\":false,\\"toString\\":false,\\"TypeError\\":false,\\"undefined\\":false,\\"unescape\\":false,\\"URIError\\":false,\\"valueOf\\":false},\\"es6\\":{\\"Array\\":false,\\"ArrayBuffer\\":false,\\"Boolean\\":false,\\"constructor\\":false,\\"DataView\\":false,\\"Date\\":false,\\"decodeURI\\":false,\\"decodeURIComponent\\":false,\\"encodeURI\\":false,\\"encodeURIComponent\\":false,\\"Error\\":false,\\"escape\\":false,\\"eval\\":false,\\"EvalError\\":false,\\"Float32Array\\":false,\\"Float64Array\\":false,\\"Function\\":false,\\"hasOwnProperty\\":false,\\"Infinity\\":false,\\"Int16Array\\":false,\\"Int32Array\\":false,\\"Int8Array\\":false,\\"isFinite\\":false,\\"isNaN\\":false,\\"isPrototypeOf\\":false,\\"JSON\\":false,\\"Map\\":false,\\"Math\\":false,\\"NaN\\":false,\\"Number\\":false,\\"Object\\":false,\\"parseFloat\\":false,\\"parseInt\\":false,\\"Promise\\":false,\\"propertyIsEnumerable\\":false,\\"Proxy\\":false,\\"RangeError\\":false,\\"ReferenceError\\":false,\\"Reflect\\":false,\\"RegExp\\":false,\\"Set\\":false,\\"String\\":false,\\"Symbol\\":false,\\"SyntaxError\\":false,\\"System\\":false,\\"toLocaleString\\":false,\\"toString\\":false,\\"TypeError\\":false,\\"Uint16Array\\":false,\\"Uint32Array\\":false,\\"Uint8Array\\":false,\\"Uint8ClampedArray\\":false,\\"undefined\\":false,\\"unescape\\":false,\\"URIError\\":false,\\"valueOf\\":false,\\"WeakMap\\":false,\\"WeakSet\\":false},\\"browser\\":{\\"addEventListener\\":false,\\"alert\\":false,\\"AnalyserNode\\":false,\\"Animation\\":false,\\"AnimationEffectReadOnly\\":false,\\"AnimationEffectTiming\\":false,\\"AnimationEffectTimingReadOnly\\":false,\\"AnimationEvent\\":false,\\"AnimationPlaybackEvent\\":false,\\"AnimationTimeline\\":false,\\"applicationCache\\":false,\\"ApplicationCache\\":false,\\"ApplicationCacheErrorEvent\\":false,\\"atob\\":false,\\"Attr\\":false,\\"Audio\\":false,\\"AudioBuffer\\":false,\\"AudioBufferSourceNode\\":false,\\"AudioContext\\":false,\\"AudioDestinationNode\\":false,\\"AudioListener\\":false,\\"AudioNode\\":false,\\"AudioParam\\":false,\\"AudioProcessingEvent\\":false,\\"AutocompleteErrorEvent\\":false,\\"BarProp\\":false,\\"BatteryManager\\":false,\\"BeforeUnloadEvent\\":false,\\"BiquadFilterNode\\":false,\\"Blob\\":false,\\"blur\\":false,\\"btoa\\":false,\\"Cache\\":false,\\"caches\\":false,\\"CacheStorage\\":false,\\"cancelAnimationFrame\\":false,\\"cancelIdleCallback\\":false,\\"CanvasGradient\\":false,\\"CanvasPattern\\":false,\\"CanvasRenderingContext2D\\":false,\\"CDATASection\\":false,\\"ChannelMergerNode\\":false,\\"ChannelSplitterNode\\":false,\\"CharacterData\\":false,\\"clearInterval\\":false,\\"clearTimeout\\":false,\\"clientInformation\\":false,\\"ClientRect\\":false,\\"ClientRectList\\":false,\\"ClipboardEvent\\":false,\\"close\\":false,\\"closed\\":false,\\"CloseEvent\\":false,\\"Comment\\":false,\\"CompositionEvent\\":false,\\"confirm\\":false,\\"console\\":false,\\"ConvolverNode\\":false,\\"createImageBitmap\\":false,\\"Credential\\":false,\\"CredentialsContainer\\":false,\\"crypto\\":false,\\"Crypto\\":false,\\"CryptoKey\\":false,\\"CSS\\":false,\\"CSSAnimation\\":false,\\"CSSFontFaceRule\\":false,\\"CSSImportRule\\":false,\\"CSSKeyframeRule\\":false,\\"CSSKeyframesRule\\":false,\\"CSSMediaRule\\":false,\\"CSSPageRule\\":false,\\"CSSRule\\":false,\\"CSSRuleList\\":false,\\"CSSStyleDeclaration\\":false,\\"CSSStyleRule\\":false,\\"CSSStyleSheet\\":false,\\"CSSSupportsRule\\":false,\\"CSSTransition\\":false,\\"CSSUnknownRule\\":false,\\"CSSViewportRule\\":false,\\"customElements\\":false,\\"CustomEvent\\":false,\\"DataTransfer\\":false,\\"DataTransferItem\\":false,\\"DataTransferItemList\\":false,\\"Debug\\":false,\\"defaultStatus\\":false,\\"defaultstatus\\":false,\\"DelayNode\\":false,\\"DeviceMotionEvent\\":false,\\"DeviceOrientationEvent\\":false,\\"devicePixelRatio\\":false,\\"dispatchEvent\\":false,\\"document\\":false,\\"Document\\":false,\\"DocumentFragment\\":false,\\"DocumentTimeline\\":false,\\"DocumentType\\":false,\\"DOMError\\":false,\\"DOMException\\":false,\\"DOMImplementation\\":false,\\"DOMParser\\":false,\\"DOMSettableTokenList\\":false,\\"DOMStringList\\":false,\\"DOMStringMap\\":false,\\"DOMTokenList\\":false,\\"DragEvent\\":false,\\"DynamicsCompressorNode\\":false,\\"Element\\":false,\\"ElementTimeControl\\":false,\\"ErrorEvent\\":false,\\"event\\":false,\\"Event\\":false,\\"EventSource\\":false,\\"EventTarget\\":false,\\"external\\":false,\\"FederatedCredential\\":false,\\"fetch\\":false,\\"File\\":false,\\"FileError\\":false,\\"FileList\\":false,\\"FileReader\\":false,\\"find\\":false,\\"focus\\":false,\\"FocusEvent\\":false,\\"FontFace\\":false,\\"FormData\\":false,\\"frameElement\\":false,\\"frames\\":false,\\"GainNode\\":false,\\"Gamepad\\":false,\\"GamepadButton\\":false,\\"GamepadEvent\\":false,\\"getComputedStyle\\":false,\\"getSelection\\":false,\\"HashChangeEvent\\":false,\\"Headers\\":false,\\"history\\":false,\\"History\\":false,\\"HTMLAllCollection\\":false,\\"HTMLAnchorElement\\":false,\\"HTMLAppletElement\\":false,\\"HTMLAreaElement\\":false,\\"HTMLAudioElement\\":false,\\"HTMLBaseElement\\":false,\\"HTMLBlockquoteElement\\":false,\\"HTMLBodyElement\\":false,\\"HTMLBRElement\\":false,\\"HTMLButtonElement\\":false,\\"HTMLCanvasElement\\":false,\\"HTMLCollection\\":false,\\"HTMLContentElement\\":false,\\"HTMLDataListElement\\":false,\\"HTMLDetailsElement\\":false,\\"HTMLDialogElement\\":false,\\"HTMLDirectoryElement\\":false,\\"HTMLDivElement\\":false,\\"HTMLDListElement\\":false,\\"HTMLDocument\\":false,\\"HTMLElement\\":false,\\"HTMLEmbedElement\\":false,\\"HTMLFieldSetElement\\":false,\\"HTMLFontElement\\":false,\\"HTMLFormControlsCollection\\":false,\\"HTMLFormElement\\":false,\\"HTMLFrameElement\\":false,\\"HTMLFrameSetElement\\":false,\\"HTMLHeadElement\\":false,\\"HTMLHeadingElement\\":false,\\"HTMLHRElement\\":false,\\"HTMLHtmlElement\\":false,\\"HTMLIFrameElement\\":false,\\"HTMLImageElement\\":false,\\"HTMLInputElement\\":false,\\"HTMLIsIndexElement\\":false,\\"HTMLKeygenElement\\":false,\\"HTMLLabelElement\\":false,\\"HTMLLayerElement\\":false,\\"HTMLLegendElement\\":false,\\"HTMLLIElement\\":false,\\"HTMLLinkElement\\":false,\\"HTMLMapElement\\":false,\\"HTMLMarqueeElement\\":false,\\"HTMLMediaElement\\":false,\\"HTMLMenuElement\\":false,\\"HTMLMetaElement\\":false,\\"HTMLMeterElement\\":false,\\"HTMLModElement\\":false,\\"HTMLObjectElement\\":false,\\"HTMLOListElement\\":false,\\"HTMLOptGroupElement\\":false,\\"HTMLOptionElement\\":false,\\"HTMLOptionsCollection\\":false,\\"HTMLOutputElement\\":false,\\"HTMLParagraphElement\\":false,\\"HTMLParamElement\\":false,\\"HTMLPictureElement\\":false,\\"HTMLPreElement\\":false,\\"HTMLProgressElement\\":false,\\"HTMLQuoteElement\\":false,\\"HTMLScriptElement\\":false,\\"HTMLSelectElement\\":false,\\"HTMLShadowElement\\":false,\\"HTMLSourceElement\\":false,\\"HTMLSpanElement\\":false,\\"HTMLStyleElement\\":false,\\"HTMLTableCaptionElement\\":false,\\"HTMLTableCellElement\\":false,\\"HTMLTableColElement\\":false,\\"HTMLTableElement\\":false,\\"HTMLTableRowElement\\":false,\\"HTMLTableSectionElement\\":false,\\"HTMLTemplateElement\\":false,\\"HTMLTextAreaElement\\":false,\\"HTMLTitleElement\\":false,\\"HTMLTrackElement\\":false,\\"HTMLUListElement\\":false,\\"HTMLUnknownElement\\":false,\\"HTMLVideoElement\\":false,\\"IDBCursor\\":false,\\"IDBCursorWithValue\\":false,\\"IDBDatabase\\":false,\\"IDBEnvironment\\":false,\\"IDBFactory\\":false,\\"IDBIndex\\":false,\\"IDBKeyRange\\":false,\\"IDBObjectStore\\":false,\\"IDBOpenDBRequest\\":false,\\"IDBRequest\\":false,\\"IDBTransaction\\":false,\\"IDBVersionChangeEvent\\":false,\\"Image\\":false,\\"ImageBitmap\\":false,\\"ImageData\\":false,\\"indexedDB\\":false,\\"innerHeight\\":false,\\"innerWidth\\":false,\\"InputEvent\\":false,\\"InputMethodContext\\":false,\\"IntersectionObserver\\":false,\\"IntersectionObserverEntry\\":false,\\"Intl\\":false,\\"KeyboardEvent\\":false,\\"KeyframeEffect\\":false,\\"KeyframeEffectReadOnly\\":false,\\"length\\":false,\\"localStorage\\":false,\\"location\\":false,\\"Location\\":false,\\"locationbar\\":false,\\"matchMedia\\":false,\\"MediaElementAudioSourceNode\\":false,\\"MediaEncryptedEvent\\":false,\\"MediaError\\":false,\\"MediaKeyError\\":false,\\"MediaKeyEvent\\":false,\\"MediaKeyMessageEvent\\":false,\\"MediaKeys\\":false,\\"MediaKeySession\\":false,\\"MediaKeyStatusMap\\":false,\\"MediaKeySystemAccess\\":false,\\"MediaList\\":false,\\"MediaQueryList\\":false,\\"MediaQueryListEvent\\":false,\\"MediaSource\\":false,\\"MediaRecorder\\":false,\\"MediaStream\\":false,\\"MediaStreamAudioDestinationNode\\":false,\\"MediaStreamAudioSourceNode\\":false,\\"MediaStreamEvent\\":false,\\"MediaStreamTrack\\":false,\\"menubar\\":false,\\"MessageChannel\\":false,\\"MessageEvent\\":false,\\"MessagePort\\":false,\\"MIDIAccess\\":false,\\"MIDIConnectionEvent\\":false,\\"MIDIInput\\":false,\\"MIDIInputMap\\":false,\\"MIDIMessageEvent\\":false,\\"MIDIOutput\\":false,\\"MIDIOutputMap\\":false,\\"MIDIPort\\":false,\\"MimeType\\":false,\\"MimeTypeArray\\":false,\\"MouseEvent\\":false,\\"moveBy\\":false,\\"moveTo\\":false,\\"MutationEvent\\":false,\\"MutationObserver\\":false,\\"MutationRecord\\":false,\\"name\\":false,\\"NamedNodeMap\\":false,\\"navigator\\":false,\\"Navigator\\":false,\\"Node\\":false,\\"NodeFilter\\":false,\\"NodeIterator\\":false,\\"NodeList\\":false,\\"Notification\\":false,\\"OfflineAudioCompletionEvent\\":false,\\"OfflineAudioContext\\":false,\\"offscreenBuffering\\":false,\\"onbeforeunload\\":true,\\"onblur\\":true,\\"onerror\\":true,\\"onfocus\\":true,\\"onload\\":true,\\"onresize\\":true,\\"onunload\\":true,\\"open\\":false,\\"openDatabase\\":false,\\"opener\\":false,\\"opera\\":false,\\"Option\\":false,\\"OscillatorNode\\":false,\\"outerHeight\\":false,\\"outerWidth\\":false,\\"PageTransitionEvent\\":false,\\"pageXOffset\\":false,\\"pageYOffset\\":false,\\"parent\\":false,\\"PasswordCredential\\":false,\\"Path2D\\":false,\\"performance\\":false,\\"Performance\\":false,\\"PerformanceEntry\\":false,\\"PerformanceMark\\":false,\\"PerformanceMeasure\\":false,\\"PerformanceNavigation\\":false,\\"PerformanceResourceTiming\\":false,\\"PerformanceTiming\\":false,\\"PeriodicWave\\":false,\\"Permissions\\":false,\\"PermissionStatus\\":false,\\"personalbar\\":false,\\"Plugin\\":false,\\"PluginArray\\":false,\\"PopStateEvent\\":false,\\"postMessage\\":false,\\"print\\":false,\\"ProcessingInstruction\\":false,\\"ProgressEvent\\":false,\\"PromiseRejectionEvent\\":false,\\"prompt\\":false,\\"PushManager\\":false,\\"PushSubscription\\":false,\\"RadioNodeList\\":false,\\"Range\\":false,\\"ReadableByteStream\\":false,\\"ReadableStream\\":false,\\"removeEventListener\\":false,\\"Request\\":false,\\"requestAnimationFrame\\":false,\\"requestIdleCallback\\":false,\\"resizeBy\\":false,\\"resizeTo\\":false,\\"Response\\":false,\\"RTCIceCandidate\\":false,\\"RTCSessionDescription\\":false,\\"RTCPeerConnection\\":false,\\"screen\\":false,\\"Screen\\":false,\\"screenLeft\\":false,\\"ScreenOrientation\\":false,\\"screenTop\\":false,\\"screenX\\":false,\\"screenY\\":false,\\"ScriptProcessorNode\\":false,\\"scroll\\":false,\\"scrollbars\\":false,\\"scrollBy\\":false,\\"scrollTo\\":false,\\"scrollX\\":false,\\"scrollY\\":false,\\"SecurityPolicyViolationEvent\\":false,\\"Selection\\":false,\\"self\\":false,\\"ServiceWorker\\":false,\\"ServiceWorkerContainer\\":false,\\"ServiceWorkerRegistration\\":false,\\"sessionStorage\\":false,\\"setInterval\\":false,\\"setTimeout\\":false,\\"ShadowRoot\\":false,\\"SharedKeyframeList\\":false,\\"SharedWorker\\":false,\\"showModalDialog\\":false,\\"SiteBoundCredential\\":false,\\"speechSynthesis\\":false,\\"SpeechSynthesisEvent\\":false,\\"SpeechSynthesisUtterance\\":false,\\"status\\":false,\\"statusbar\\":false,\\"stop\\":false,\\"Storage\\":false,\\"StorageEvent\\":false,\\"styleMedia\\":false,\\"StyleSheet\\":false,\\"StyleSheetList\\":false,\\"SubtleCrypto\\":false,\\"SVGAElement\\":false,\\"SVGAltGlyphDefElement\\":false,\\"SVGAltGlyphElement\\":false,\\"SVGAltGlyphItemElement\\":false,\\"SVGAngle\\":false,\\"SVGAnimateColorElement\\":false,\\"SVGAnimatedAngle\\":false,\\"SVGAnimatedBoolean\\":false,\\"SVGAnimatedEnumeration\\":false,\\"SVGAnimatedInteger\\":false,\\"SVGAnimatedLength\\":false,\\"SVGAnimatedLengthList\\":false,\\"SVGAnimatedNumber\\":false,\\"SVGAnimatedNumberList\\":false,\\"SVGAnimatedPathData\\":false,\\"SVGAnimatedPoints\\":false,\\"SVGAnimatedPreserveAspectRatio\\":false,\\"SVGAnimatedRect\\":false,\\"SVGAnimatedString\\":false,\\"SVGAnimatedTransformList\\":false,\\"SVGAnimateElement\\":false,\\"SVGAnimateMotionElement\\":false,\\"SVGAnimateTransformElement\\":false,\\"SVGAnimationElement\\":false,\\"SVGCircleElement\\":false,\\"SVGClipPathElement\\":false,\\"SVGColor\\":false,\\"SVGColorProfileElement\\":false,\\"SVGColorProfileRule\\":false,\\"SVGComponentTransferFunctionElement\\":false,\\"SVGCSSRule\\":false,\\"SVGCursorElement\\":false,\\"SVGDefsElement\\":false,\\"SVGDescElement\\":false,\\"SVGDiscardElement\\":false,\\"SVGDocument\\":false,\\"SVGElement\\":false,\\"SVGElementInstance\\":false,\\"SVGElementInstanceList\\":false,\\"SVGEllipseElement\\":false,\\"SVGEvent\\":false,\\"SVGExternalResourcesRequired\\":false,\\"SVGFEBlendElement\\":false,\\"SVGFEColorMatrixElement\\":false,\\"SVGFEComponentTransferElement\\":false,\\"SVGFECompositeElement\\":false,\\"SVGFEConvolveMatrixElement\\":false,\\"SVGFEDiffuseLightingElement\\":false,\\"SVGFEDisplacementMapElement\\":false,\\"SVGFEDistantLightElement\\":false,\\"SVGFEDropShadowElement\\":false,\\"SVGFEFloodElement\\":false,\\"SVGFEFuncAElement\\":false,\\"SVGFEFuncBElement\\":false,\\"SVGFEFuncGElement\\":false,\\"SVGFEFuncRElement\\":false,\\"SVGFEGaussianBlurElement\\":false,\\"SVGFEImageElement\\":false,\\"SVGFEMergeElement\\":false,\\"SVGFEMergeNodeElement\\":false,\\"SVGFEMorphologyElement\\":false,\\"SVGFEOffsetElement\\":false,\\"SVGFEPointLightElement\\":false,\\"SVGFESpecularLightingElement\\":false,\\"SVGFESpotLightElement\\":false,\\"SVGFETileElement\\":false,\\"SVGFETurbulenceElement\\":false,\\"SVGFilterElement\\":false,\\"SVGFilterPrimitiveStandardAttributes\\":false,\\"SVGFitToViewBox\\":false,\\"SVGFontElement\\":false,\\"SVGFontFaceElement\\":false,\\"SVGFontFaceFormatElement\\":false,\\"SVGFontFaceNameElement\\":false,\\"SVGFontFaceSrcElement\\":false,\\"SVGFontFaceUriElement\\":false,\\"SVGForeignObjectElement\\":false,\\"SVGGElement\\":false,\\"SVGGeometryElement\\":false,\\"SVGGlyphElement\\":false,\\"SVGGlyphRefElement\\":false,\\"SVGGradientElement\\":false,\\"SVGGraphicsElement\\":false,\\"SVGHKernElement\\":false,\\"SVGICCColor\\":false,\\"SVGImageElement\\":false,\\"SVGLangSpace\\":false,\\"SVGLength\\":false,\\"SVGLengthList\\":false,\\"SVGLinearGradientElement\\":false,\\"SVGLineElement\\":false,\\"SVGLocatable\\":false,\\"SVGMarkerElement\\":false,\\"SVGMaskElement\\":false,\\"SVGMatrix\\":false,\\"SVGMetadataElement\\":false,\\"SVGMissingGlyphElement\\":false,\\"SVGMPathElement\\":false,\\"SVGNumber\\":false,\\"SVGNumberList\\":false,\\"SVGPaint\\":false,\\"SVGPathElement\\":false,\\"SVGPathSeg\\":false,\\"SVGPathSegArcAbs\\":false,\\"SVGPathSegArcRel\\":false,\\"SVGPathSegClosePath\\":false,\\"SVGPathSegCurvetoCubicAbs\\":false,\\"SVGPathSegCurvetoCubicRel\\":false,\\"SVGPathSegCurvetoCubicSmoothAbs\\":false,\\"SVGPathSegCurvetoCubicSmoothRel\\":false,\\"SVGPathSegCurvetoQuadraticAbs\\":false,\\"SVGPathSegCurvetoQuadraticRel\\":false,\\"SVGPathSegCurvetoQuadraticSmoothAbs\\":false,\\"SVGPathSegCurvetoQuadraticSmoothRel\\":false,\\"SVGPathSegLinetoAbs\\":false,\\"SVGPathSegLinetoHorizontalAbs\\":false,\\"SVGPathSegLinetoHorizontalRel\\":false,\\"SVGPathSegLinetoRel\\":false,\\"SVGPathSegLinetoVerticalAbs\\":false,\\"SVGPathSegLinetoVerticalRel\\":false,\\"SVGPathSegList\\":false,\\"SVGPathSegMovetoAbs\\":false,\\"SVGPathSegMovetoRel\\":false,\\"SVGPatternElement\\":false,\\"SVGPoint\\":false,\\"SVGPointList\\":false,\\"SVGPolygonElement\\":false,\\"SVGPolylineElement\\":false,\\"SVGPreserveAspectRatio\\":false,\\"SVGRadialGradientElement\\":false,\\"SVGRect\\":false,\\"SVGRectElement\\":false,\\"SVGRenderingIntent\\":false,\\"SVGScriptElement\\":false,\\"SVGSetElement\\":false,\\"SVGStopElement\\":false,\\"SVGStringList\\":false,\\"SVGStylable\\":false,\\"SVGStyleElement\\":false,\\"SVGSVGElement\\":false,\\"SVGSwitchElement\\":false,\\"SVGSymbolElement\\":false,\\"SVGTests\\":false,\\"SVGTextContentElement\\":false,\\"SVGTextElement\\":false,\\"SVGTextPathElement\\":false,\\"SVGTextPositioningElement\\":false,\\"SVGTitleElement\\":false,\\"SVGTransform\\":false,\\"SVGTransformable\\":false,\\"SVGTransformList\\":false,\\"SVGTRefElement\\":false,\\"SVGTSpanElement\\":false,\\"SVGUnitTypes\\":false,\\"SVGURIReference\\":false,\\"SVGUseElement\\":false,\\"SVGViewElement\\":false,\\"SVGViewSpec\\":false,\\"SVGVKernElement\\":false,\\"SVGZoomAndPan\\":false,\\"SVGZoomEvent\\":false,\\"Text\\":false,\\"TextDecoder\\":false,\\"TextEncoder\\":false,\\"TextEvent\\":false,\\"TextMetrics\\":false,\\"TextTrack\\":false,\\"TextTrackCue\\":false,\\"TextTrackCueList\\":false,\\"TextTrackList\\":false,\\"TimeEvent\\":false,\\"TimeRanges\\":false,\\"toolbar\\":false,\\"top\\":false,\\"Touch\\":false,\\"TouchEvent\\":false,\\"TouchList\\":false,\\"TrackEvent\\":false,\\"TransitionEvent\\":false,\\"TreeWalker\\":false,\\"UIEvent\\":false,\\"URL\\":false,\\"URLSearchParams\\":false,\\"ValidityState\\":false,\\"VTTCue\\":false,\\"WaveShaperNode\\":false,\\"WebGLActiveInfo\\":false,\\"WebGLBuffer\\":false,\\"WebGLContextEvent\\":false,\\"WebGLFramebuffer\\":false,\\"WebGLProgram\\":false,\\"WebGLRenderbuffer\\":false,\\"WebGLRenderingContext\\":false,\\"WebGLShader\\":false,\\"WebGLShaderPrecisionFormat\\":false,\\"WebGLTexture\\":false,\\"WebGLUniformLocation\\":false,\\"WebSocket\\":false,\\"WheelEvent\\":false,\\"window\\":false,\\"Window\\":false,\\"Worker\\":false,\\"XDomainRequest\\":false,\\"XMLDocument\\":false,\\"XMLHttpRequest\\":false,\\"XMLHttpRequestEventTarget\\":false,\\"XMLHttpRequestProgressEvent\\":false,\\"XMLHttpRequestUpload\\":false,\\"XMLSerializer\\":false,\\"XPathEvaluator\\":false,\\"XPathException\\":false,\\"XPathExpression\\":false,\\"XPathNamespace\\":false,\\"XPathNSResolver\\":false,\\"XPathResult\\":false,\\"XSLTProcessor\\":false},\\"worker\\":{\\"applicationCache\\":false,\\"atob\\":false,\\"Blob\\":false,\\"BroadcastChannel\\":false,\\"btoa\\":false,\\"Cache\\":false,\\"caches\\":false,\\"clearInterval\\":false,\\"clearTimeout\\":false,\\"close\\":true,\\"console\\":false,\\"fetch\\":false,\\"FileReaderSync\\":false,\\"FormData\\":false,\\"Headers\\":false,\\"IDBCursor\\":false,\\"IDBCursorWithValue\\":false,\\"IDBDatabase\\":false,\\"IDBFactory\\":false,\\"IDBIndex\\":false,\\"IDBKeyRange\\":false,\\"IDBObjectStore\\":false,\\"IDBOpenDBRequest\\":false,\\"IDBRequest\\":false,\\"IDBTransaction\\":false,\\"IDBVersionChangeEvent\\":false,\\"ImageData\\":false,\\"importScripts\\":true,\\"indexedDB\\":false,\\"location\\":false,\\"MessageChannel\\":false,\\"MessagePort\\":false,\\"name\\":false,\\"navigator\\":false,\\"Notification\\":false,\\"onclose\\":true,\\"onconnect\\":true,\\"onerror\\":true,\\"onlanguagechange\\":true,\\"onmessage\\":true,\\"onoffline\\":true,\\"ononline\\":true,\\"onrejectionhandled\\":true,\\"onunhandledrejection\\":true,\\"performance\\":false,\\"Performance\\":false,\\"PerformanceEntry\\":false,\\"PerformanceMark\\":false,\\"PerformanceMeasure\\":false,\\"PerformanceNavigation\\":false,\\"PerformanceResourceTiming\\":false,\\"PerformanceTiming\\":false,\\"postMessage\\":true,\\"Promise\\":false,\\"Request\\":false,\\"Response\\":false,\\"self\\":true,\\"ServiceWorkerRegistration\\":false,\\"setInterval\\":false,\\"setTimeout\\":false,\\"TextDecoder\\":false,\\"TextEncoder\\":false,\\"URL\\":false,\\"URLSearchParams\\":false,\\"WebSocket\\":false,\\"Worker\\":false,\\"XMLHttpRequest\\":false},\\"node\\":{\\"__dirname\\":false,\\"__filename\\":false,\\"arguments\\":false,\\"Buffer\\":false,\\"clearImmediate\\":false,\\"clearInterval\\":false,\\"clearTimeout\\":false,\\"console\\":false,\\"exports\\":true,\\"GLOBAL\\":false,\\"global\\":false,\\"Intl\\":false,\\"module\\":false,\\"process\\":false,\\"require\\":false,\\"root\\":false,\\"setImmediate\\":false,\\"setInterval\\":false,\\"setTimeout\\":false},\\"commonjs\\":{\\"exports\\":true,\\"module\\":false,\\"require\\":false,\\"global\\":false},\\"amd\\":{\\"define\\":false,\\"require\\":false},\\"mocha\\":{\\"after\\":false,\\"afterEach\\":false,\\"before\\":false,\\"beforeEach\\":false,\\"context\\":false,\\"describe\\":false,\\"it\\":false,\\"mocha\\":false,\\"run\\":false,\\"setup\\":false,\\"specify\\":false,\\"suite\\":false,\\"suiteSetup\\":false,\\"suiteTeardown\\":false,\\"teardown\\":false,\\"test\\":false,\\"xcontext\\":false,\\"xdescribe\\":false,\\"xit\\":false,\\"xspecify\\":false},\\"jasmine\\":{\\"afterAll\\":false,\\"afterEach\\":false,\\"beforeAll\\":false,\\"beforeEach\\":false,\\"describe\\":false,\\"expect\\":false,\\"fail\\":false,\\"fdescribe\\":false,\\"fit\\":false,\\"it\\":false,\\"jasmine\\":false,\\"pending\\":false,\\"runs\\":false,\\"spyOn\\":false,\\"spyOnProperty\\":false,\\"waits\\":false,\\"waitsFor\\":false,\\"xdescribe\\":false,\\"xit\\":false},\\"jest\\":{\\"afterAll\\":false,\\"afterEach\\":false,\\"beforeAll\\":false,\\"beforeEach\\":false,\\"check\\":false,\\"describe\\":false,\\"expect\\":false,\\"gen\\":false,\\"it\\":false,\\"fdescribe\\":false,\\"fit\\":false,\\"jest\\":false,\\"pit\\":false,\\"require\\":false,\\"test\\":false,\\"xdescribe\\":false,\\"xit\\":false,\\"xtest\\":false},\\"qunit\\":{\\"asyncTest\\":false,\\"deepEqual\\":false,\\"equal\\":false,\\"expect\\":false,\\"module\\":false,\\"notDeepEqual\\":false,\\"notEqual\\":false,\\"notOk\\":false,\\"notPropEqual\\":false,\\"notStrictEqual\\":false,\\"ok\\":false,\\"propEqual\\":false,\\"QUnit\\":false,\\"raises\\":false,\\"start\\":false,\\"stop\\":false,\\"strictEqual\\":false,\\"test\\":false,\\"throws\\":false},\\"phantomjs\\":{\\"console\\":true,\\"exports\\":true,\\"phantom\\":true,\\"require\\":true,\\"WebPage\\":true},\\"couch\\":{\\"emit\\":false,\\"exports\\":false,\\"getRow\\":false,\\"log\\":false,\\"module\\":false,\\"provides\\":false,\\"require\\":false,\\"respond\\":false,\\"send\\":false,\\"start\\":false,\\"sum\\":false},\\"rhino\\":{\\"defineClass\\":false,\\"deserialize\\":false,\\"gc\\":false,\\"help\\":false,\\"importClass\\":false,\\"importPackage\\":false,\\"java\\":false,\\"load\\":false,\\"loadClass\\":false,\\"Packages\\":false,\\"print\\":false,\\"quit\\":false,\\"readFile\\":false,\\"readUrl\\":false,\\"runCommand\\":false,\\"seal\\":false,\\"serialize\\":false,\\"spawn\\":false,\\"sync\\":false,\\"toint32\\":false,\\"version\\":false},\\"nashorn\\":{\\"__DIR__\\":false,\\"__FILE__\\":false,\\"__LINE__\\":false,\\"com\\":false,\\"edu\\":false,\\"exit\\":false,\\"Java\\":false,\\"java\\":false,\\"javafx\\":false,\\"JavaImporter\\":false,\\"javax\\":false,\\"JSAdapter\\":false,\\"load\\":false,\\"loadWithNewGlobal\\":false,\\"org\\":false,\\"Packages\\":false,\\"print\\":false,\\"quit\\":false},\\"wsh\\":{\\"ActiveXObject\\":true,\\"Enumerator\\":true,\\"GetObject\\":true,\\"ScriptEngine\\":true,\\"ScriptEngineBuildVersion\\":true,\\"ScriptEngineMajorVersion\\":true,\\"ScriptEngineMinorVersion\\":true,\\"VBArray\\":true,\\"WScript\\":true,\\"WSH\\":true,\\"XDomainRequest\\":true},\\"jquery\\":{\\"$\\":false,\\"jQuery\\":false},\\"yui\\":{\\"Y\\":false,\\"YUI\\":false,\\"YUI_config\\":false},\\"shelljs\\":{\\"cat\\":false,\\"cd\\":false,\\"chmod\\":false,\\"config\\":false,\\"cp\\":false,\\"dirs\\":false,\\"echo\\":false,\\"env\\":false,\\"error\\":false,\\"exec\\":false,\\"exit\\":false,\\"find\\":false,\\"grep\\":false,\\"ls\\":false,\\"ln\\":false,\\"mkdir\\":false,\\"mv\\":false,\\"popd\\":false,\\"pushd\\":false,\\"pwd\\":false,\\"rm\\":false,\\"sed\\":false,\\"set\\":false,\\"target\\":false,\\"tempdir\\":false,\\"test\\":false,\\"touch\\":false,\\"which\\":false},\\"prototypejs\\":{\\"$\\":false,\\"$$\\":false,\\"$A\\":false,\\"$break\\":false,\\"$continue\\":false,\\"$F\\":false,\\"$H\\":false,\\"$R\\":false,\\"$w\\":false,\\"Abstract\\":false,\\"Ajax\\":false,\\"Autocompleter\\":false,\\"Builder\\":false,\\"Class\\":false,\\"Control\\":false,\\"Draggable\\":false,\\"Draggables\\":false,\\"Droppables\\":false,\\"Effect\\":false,\\"Element\\":false,\\"Enumerable\\":false,\\"Event\\":false,\\"Field\\":false,\\"Form\\":false,\\"Hash\\":false,\\"Insertion\\":false,\\"ObjectRange\\":false,\\"PeriodicalExecuter\\":false,\\"Position\\":false,\\"Prototype\\":false,\\"Scriptaculous\\":false,\\"Selector\\":false,\\"Sortable\\":false,\\"SortableObserver\\":false,\\"Sound\\":false,\\"Template\\":false,\\"Toggle\\":false,\\"Try\\":false},\\"meteor\\":{\\"$\\":false,\\"_\\":false,\\"Accounts\\":false,\\"AccountsClient\\":false,\\"AccountsServer\\":false,\\"AccountsCommon\\":false,\\"App\\":false,\\"Assets\\":false,\\"Blaze\\":false,\\"check\\":false,\\"Cordova\\":false,\\"DDP\\":false,\\"DDPServer\\":false,\\"DDPRateLimiter\\":false,\\"Deps\\":false,\\"EJSON\\":false,\\"Email\\":false,\\"HTTP\\":false,\\"Log\\":false,\\"Match\\":false,\\"Meteor\\":false,\\"Mongo\\":false,\\"MongoInternals\\":false,\\"Npm\\":false,\\"Package\\":false,\\"Plugin\\":false,\\"process\\":false,\\"Random\\":false,\\"ReactiveDict\\":false,\\"ReactiveVar\\":false,\\"Router\\":false,\\"ServiceConfiguration\\":false,\\"Session\\":false,\\"share\\":false,\\"Spacebars\\":false,\\"Template\\":false,\\"Tinytest\\":false,\\"Tracker\\":false,\\"UI\\":false,\\"Utils\\":false,\\"WebApp\\":false,\\"WebAppInternals\\":false},\\"mongo\\":{\\"_isWindows\\":false,\\"_rand\\":false,\\"BulkWriteResult\\":false,\\"cat\\":false,\\"cd\\":false,\\"connect\\":false,\\"db\\":false,\\"getHostName\\":false,\\"getMemInfo\\":false,\\"hostname\\":false,\\"ISODate\\":false,\\"listFiles\\":false,\\"load\\":false,\\"ls\\":false,\\"md5sumFile\\":false,\\"mkdir\\":false,\\"Mongo\\":false,\\"NumberInt\\":false,\\"NumberLong\\":false,\\"ObjectId\\":false,\\"PlanCache\\":false,\\"print\\":false,\\"printjson\\":false,\\"pwd\\":false,\\"quit\\":false,\\"removeFile\\":false,\\"rs\\":false,\\"sh\\":false,\\"UUID\\":false,\\"version\\":false,\\"WriteResult\\":false},\\"applescript\\":{\\"$\\":false,\\"Application\\":false,\\"Automation\\":false,\\"console\\":false,\\"delay\\":false,\\"Library\\":false,\\"ObjC\\":false,\\"ObjectSpecifier\\":false,\\"Path\\":false,\\"Progress\\":false,\\"Ref\\":false},\\"serviceworker\\":{\\"caches\\":false,\\"Cache\\":false,\\"CacheStorage\\":false,\\"Client\\":false,\\"clients\\":false,\\"Clients\\":false,\\"ExtendableEvent\\":false,\\"ExtendableMessageEvent\\":false,\\"FetchEvent\\":false,\\"importScripts\\":false,\\"registration\\":false,\\"self\\":false,\\"ServiceWorker\\":false,\\"ServiceWorkerContainer\\":false,\\"ServiceWorkerGlobalScope\\":false,\\"ServiceWorkerMessageEvent\\":false,\\"ServiceWorkerRegistration\\":false,\\"skipWaiting\\":false,\\"WindowClient\\":false},\\"atomtest\\":{\\"advanceClock\\":false,\\"fakeClearInterval\\":false,\\"fakeClearTimeout\\":false,\\"fakeSetInterval\\":false,\\"fakeSetTimeout\\":false,\\"resetTimeouts\\":false,\\"waitsForPromise\\":false},\\"embertest\\":{\\"andThen\\":false,\\"click\\":false,\\"currentPath\\":false,\\"currentRouteName\\":false,\\"currentURL\\":false,\\"fillIn\\":false,\\"find\\":false,\\"findWithAssert\\":false,\\"keyEvent\\":false,\\"pauseTest\\":false,\\"resumeTest\\":false,\\"triggerEvent\\":false,\\"visit\\":false},\\"protractor\\":{\\"$\\":false,\\"$$\\":false,\\"browser\\":false,\\"By\\":false,\\"by\\":false,\\"DartObject\\":false,\\"element\\":false,\\"protractor\\":false},\\"shared-node-browser\\":{\\"clearInterval\\":false,\\"clearTimeout\\":false,\\"console\\":false,\\"setInterval\\":false,\\"setTimeout\\":false},\\"webextensions\\":{\\"browser\\":false,\\"chrome\\":false,\\"opr\\":false},\\"greasemonkey\\":{\\"GM_addStyle\\":false,\\"GM_deleteValue\\":false,\\"GM_getResourceText\\":false,\\"GM_getResourceURL\\":false,\\"GM_getValue\\":false,\\"GM_info\\":false,\\"GM_listValues\\":false,\\"GM_log\\":false,\\"GM_openInTab\\":false,\\"GM_registerMenuCommand\\":false,\\"GM_setClipboard\\":false,\\"GM_setValue\\":false,\\"GM_xmlhttpRequest\\":false,\\"unsafeWindow\\":false}}");\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/node_modules/globals/globals.json?')},"./node_modules/babel-traverse/node_modules/globals/index.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("./node_modules/babel-traverse/node_modules/globals/globals.json");\n\n\n//# sourceURL=webpack:///./node_modules/babel-traverse/node_modules/globals/index.js?')},"./node_modules/babel-types/lib/constants.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;\n\nvar _for = __webpack_require__("./node_modules/babel-runtime/core-js/symbol/for.js");\n\nvar _for2 = _interopRequireDefault(_for);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar STATEMENT_OR_BLOCK_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];\nvar FLATTENABLE_KEYS = exports.FLATTENABLE_KEYS = ["body", "expressions"];\nvar FOR_INIT_KEYS = exports.FOR_INIT_KEYS = ["left", "init"];\nvar COMMENT_KEYS = exports.COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];\n\nvar LOGICAL_OPERATORS = exports.LOGICAL_OPERATORS = ["||", "&&"];\nvar UPDATE_OPERATORS = exports.UPDATE_OPERATORS = ["++", "--"];\n\nvar BOOLEAN_NUMBER_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];\nvar EQUALITY_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];\nvar COMPARISON_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = [].concat(EQUALITY_BINARY_OPERATORS, ["in", "instanceof"]);\nvar BOOLEAN_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = [].concat(COMPARISON_BINARY_OPERATORS, BOOLEAN_NUMBER_BINARY_OPERATORS);\nvar NUMBER_BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];\nvar BINARY_OPERATORS = exports.BINARY_OPERATORS = ["+"].concat(NUMBER_BINARY_OPERATORS, BOOLEAN_BINARY_OPERATORS);\n\nvar BOOLEAN_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = ["delete", "!"];\nvar NUMBER_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"];\nvar STRING_UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = ["typeof"];\nvar UNARY_OPERATORS = exports.UNARY_OPERATORS = ["void"].concat(BOOLEAN_UNARY_OPERATORS, NUMBER_UNARY_OPERATORS, STRING_UNARY_OPERATORS);\n\nvar INHERIT_KEYS = exports.INHERIT_KEYS = {\n  optional: ["typeAnnotation", "typeParameters", "returnType"],\n  force: ["start", "loc", "end"]\n};\n\nvar BLOCK_SCOPED_SYMBOL = exports.BLOCK_SCOPED_SYMBOL = (0, _for2.default)("var used to be block scoped");\nvar NOT_LOCAL_BINDING = exports.NOT_LOCAL_BINDING = (0, _for2.default)("should not be considered a local binding");\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/constants.js?')},"./node_modules/babel-types/lib/converters.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _maxSafeInteger = __webpack_require__("./node_modules/babel-runtime/core-js/number/max-safe-integer.js");\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _isPlainObject = __webpack_require__("./node_modules/lodash/isPlainObject.js");\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isRegExp = __webpack_require__("./node_modules/lodash/isRegExp.js");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toComputedKey(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n  return key;\n}\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var node = _ref;\n\n    ensureLastUndefined = false;\n\n    if (t.isExpression(node)) {\n      exprs.push(node);\n    } else if (t.isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (t.isVariableDeclaration(node)) {\n      if (node.kind !== "var") return;\n\n      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var declar = _ref2;\n\n        var bindings = t.getBindingIdentifiers(declar);\n        for (var key in bindings) {\n          declars.push({\n            kind: node.kind,\n            id: bindings[key]\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(t.assignmentExpression("=", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (t.isIfStatement(node)) {\n      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n\n      exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n    } else if (t.isBlockStatement(node)) {\n      var body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n\n      exprs.push(body);\n    } else if (t.isEmptyStatement(node)) {\n      ensureLastUndefined = true;\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return t.sequenceExpression(exprs);\n  }\n}\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var declar = _ref3;\n\n    scope.push(declar);\n  }\n\n  return result;\n}\n\nfunction toKeyAlias(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;\n\n  var alias = void 0;\n\n  if (node.kind === "method") {\n    return toKeyAlias.increment() + "";\n  } else if (t.isIdentifier(key)) {\n    alias = key.name;\n  } else if (t.isStringLiteral(key)) {\n    alias = (0, _stringify2.default)(key.value);\n  } else {\n    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));\n  }\n\n  if (node.computed) {\n    alias = "[" + alias + "]";\n  }\n\n  if (node.static) {\n    alias = "static:" + alias;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name) {\n  name = name + "";\n\n  name = name.replace(/[^a-zA-Z0-9$_]/g, "-");\n\n  name = name.replace(/^[-0-9]+/, "");\n\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : "";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = "_" + name;\n  }\n\n  return name || "_";\n}\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === "eval" || name === "arguments") name = "_" + name;\n  return name;\n}\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = void 0;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = "ClassDeclaration";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = "FunctionDeclaration";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error("cannot turn " + node.type + " to a statement");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  }\n\n  if (t.isClass(node)) {\n    node.type = "ClassExpression";\n  } else if (t.isFunction(node)) {\n    node.type = "FunctionExpression";\n  }\n\n  if (!t.isExpression(node)) {\n    throw new Error("cannot turn " + node.type + " to an expression");\n  }\n\n  return node;\n}\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return t.identifier("undefined");\n  }\n\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  if (typeof value === "string") {\n    return t.stringLiteral(value);\n  }\n\n  if (typeof value === "number") {\n    return t.numericLiteral(value);\n  }\n\n  if ((0, _isRegExp2.default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  if ((0, _isPlainObject2.default)(value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = void 0;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error("don\'t know how to turn this value into a node");\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/converters.js?')},"./node_modules/babel-types/lib/definitions/core.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nvar _constants = __webpack_require__("./node_modules/babel-types/lib/constants.js");\n\nvar _index2 = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index3 = _interopRequireDefault(_index2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n(0, _index3.default)("ArrayExpression", {\n  fields: {\n    elements: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),\n      default: []\n    }\n  },\n  visitor: ["elements"],\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("AssignmentExpression", {\n  fields: {\n    operator: {\n      validate: (0, _index2.assertValueType)("string")\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)("LVal")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  },\n  builder: ["operator", "left", "right"],\n  visitor: ["left", "right"],\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("BinaryExpression", {\n  builder: ["operator", "left", "right"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  },\n  visitor: ["left", "right"],\n  aliases: ["Binary", "Expression"]\n});\n\n(0, _index3.default)("Directive", {\n  visitor: ["value"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertNodeType)("DirectiveLiteral")\n    }\n  }\n});\n\n(0, _index3.default)("DirectiveLiteral", {\n  builder: ["value"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)("string")\n    }\n  }\n});\n\n(0, _index3.default)("BlockStatement", {\n  builder: ["body", "directives"],\n  visitor: ["directives", "body"],\n  fields: {\n    directives: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),\n      default: []\n    },\n    body: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))\n    }\n  },\n  aliases: ["Scopable", "BlockParent", "Block", "Statement"]\n});\n\n(0, _index3.default)("BreakStatement", {\n  visitor: ["label"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)("Identifier"),\n      optional: true\n    }\n  },\n  aliases: ["Statement", "Terminatorless", "CompletionStatement"]\n});\n\n(0, _index3.default)("CallExpression", {\n  visitor: ["callee", "arguments"],\n  fields: {\n    callee: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    arguments: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))\n    }\n  },\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("CatchClause", {\n  visitor: ["param", "body"],\n  fields: {\n    param: {\n      validate: (0, _index2.assertNodeType)("Identifier")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    }\n  },\n  aliases: ["Scopable"]\n});\n\n(0, _index3.default)("ConditionalExpression", {\n  visitor: ["test", "consequent", "alternate"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    consequent: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    alternate: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  },\n  aliases: ["Expression", "Conditional"]\n});\n\n(0, _index3.default)("ContinueStatement", {\n  visitor: ["label"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)("Identifier"),\n      optional: true\n    }\n  },\n  aliases: ["Statement", "Terminatorless", "CompletionStatement"]\n});\n\n(0, _index3.default)("DebuggerStatement", {\n  aliases: ["Statement"]\n});\n\n(0, _index3.default)("DoWhileStatement", {\n  visitor: ["test", "body"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("Statement")\n    }\n  },\n  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]\n});\n\n(0, _index3.default)("EmptyStatement", {\n  aliases: ["Statement"]\n});\n\n(0, _index3.default)("ExpressionStatement", {\n  visitor: ["expression"],\n  fields: {\n    expression: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  },\n  aliases: ["Statement", "ExpressionWrapper"]\n});\n\n(0, _index3.default)("File", {\n  builder: ["program", "comments", "tokens"],\n  visitor: ["program"],\n  fields: {\n    program: {\n      validate: (0, _index2.assertNodeType)("Program")\n    }\n  }\n});\n\n(0, _index3.default)("ForInStatement", {\n  visitor: ["left", "right", "body"],\n  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],\n  fields: {\n    left: {\n      validate: (0, _index2.assertNodeType)("VariableDeclaration", "LVal")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index3.default)("ForStatement", {\n  visitor: ["init", "test", "update", "body"],\n  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],\n  fields: {\n    init: {\n      validate: (0, _index2.assertNodeType)("VariableDeclaration", "Expression"),\n      optional: true\n    },\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression"),\n      optional: true\n    },\n    update: {\n      validate: (0, _index2.assertNodeType)("Expression"),\n      optional: true\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index3.default)("FunctionDeclaration", {\n  builder: ["id", "params", "body", "generator", "async"],\n  visitor: ["id", "params", "body", "returnType", "typeParameters"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)("Identifier")\n    },\n    params: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    }\n  },\n  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"]\n});\n\n(0, _index3.default)("FunctionExpression", {\n  inherits: "FunctionDeclaration",\n  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)("Identifier"),\n      optional: true\n    },\n    params: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("LVal")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    }\n  }\n});\n\n(0, _index3.default)("Identifier", {\n  builder: ["name"],\n  visitor: ["typeAnnotation"],\n  aliases: ["Expression", "LVal"],\n  fields: {\n    name: {\n      validate: function validate(node, key, val) {\n        if (!t.isValidIdentifier(val)) {}\n      }\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index3.default)("IfStatement", {\n  visitor: ["test", "consequent", "alternate"],\n  aliases: ["Statement", "Conditional"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    consequent: {\n      validate: (0, _index2.assertNodeType)("Statement")\n    },\n    alternate: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index3.default)("LabeledStatement", {\n  visitor: ["label", "body"],\n  aliases: ["Statement"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)("Identifier")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index3.default)("StringLiteral", {\n  builder: ["value"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)("string")\n    }\n  },\n  aliases: ["Expression", "Pureish", "Literal", "Immutable"]\n});\n\n(0, _index3.default)("NumericLiteral", {\n  builder: ["value"],\n  deprecatedAlias: "NumberLiteral",\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)("number")\n    }\n  },\n  aliases: ["Expression", "Pureish", "Literal", "Immutable"]\n});\n\n(0, _index3.default)("NullLiteral", {\n  aliases: ["Expression", "Pureish", "Literal", "Immutable"]\n});\n\n(0, _index3.default)("BooleanLiteral", {\n  builder: ["value"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)("boolean")\n    }\n  },\n  aliases: ["Expression", "Pureish", "Literal", "Immutable"]\n});\n\n(0, _index3.default)("RegExpLiteral", {\n  builder: ["pattern", "flags"],\n  deprecatedAlias: "RegexLiteral",\n  aliases: ["Expression", "Literal"],\n  fields: {\n    pattern: {\n      validate: (0, _index2.assertValueType)("string")\n    },\n    flags: {\n      validate: (0, _index2.assertValueType)("string"),\n      default: ""\n    }\n  }\n});\n\n(0, _index3.default)("LogicalExpression", {\n  builder: ["operator", "left", "right"],\n  visitor: ["left", "right"],\n  aliases: ["Binary", "Expression"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index3.default)("MemberExpression", {\n  builder: ["object", "property", "computed"],\n  visitor: ["object", "property"],\n  aliases: ["Expression", "LVal"],\n  fields: {\n    object: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    property: {\n      validate: function validate(node, key, val) {\n        var expectedType = node.computed ? "Expression" : "Identifier";\n        (0, _index2.assertNodeType)(expectedType)(node, key, val);\n      }\n    },\n    computed: {\n      default: false\n    }\n  }\n});\n\n(0, _index3.default)("NewExpression", {\n  visitor: ["callee", "arguments"],\n  aliases: ["Expression"],\n  fields: {\n    callee: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    arguments: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression", "SpreadElement")))\n    }\n  }\n});\n\n(0, _index3.default)("Program", {\n  visitor: ["directives", "body"],\n  builder: ["body", "directives"],\n  fields: {\n    directives: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Directive"))),\n      default: []\n    },\n    body: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))\n    }\n  },\n  aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"]\n});\n\n(0, _index3.default)("ObjectExpression", {\n  visitor: ["properties"],\n  aliases: ["Expression"],\n  fields: {\n    properties: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadProperty")))\n    }\n  }\n});\n\n(0, _index3.default)("ObjectMethod", {\n  builder: ["kind", "key", "params", "body", "computed"],\n  fields: {\n    kind: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("method", "get", "set")),\n      default: "method"\n    },\n    computed: {\n      validate: (0, _index2.assertValueType)("boolean"),\n      default: false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)("boolean")\n    }\n  },\n  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],\n  aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]\n});\n\n(0, _index3.default)("ObjectProperty", {\n  builder: ["key", "value", "computed", "shorthand", "decorators"],\n  fields: {\n    computed: {\n      validate: (0, _index2.assertValueType)("boolean"),\n      default: false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    value: {\n      validate: (0, _index2.assertNodeType)("Expression", "Pattern", "RestElement")\n    },\n    shorthand: {\n      validate: (0, _index2.assertValueType)("boolean"),\n      default: false\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator"))),\n      optional: true\n    }\n  },\n  visitor: ["key", "value", "decorators"],\n  aliases: ["UserWhitespacable", "Property", "ObjectMember"]\n});\n\n(0, _index3.default)("RestElement", {\n  visitor: ["argument", "typeAnnotation"],\n  aliases: ["LVal"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)("LVal")\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index3.default)("ReturnStatement", {\n  visitor: ["argument"],\n  aliases: ["Statement", "Terminatorless", "CompletionStatement"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)("Expression"),\n      optional: true\n    }\n  }\n});\n\n(0, _index3.default)("SequenceExpression", {\n  visitor: ["expressions"],\n  fields: {\n    expressions: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Expression")))\n    }\n  },\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("SwitchCase", {\n  visitor: ["test", "consequent"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression"),\n      optional: true\n    },\n    consequent: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("Statement")))\n    }\n  }\n});\n\n(0, _index3.default)("SwitchStatement", {\n  visitor: ["discriminant", "cases"],\n  aliases: ["Statement", "BlockParent", "Scopable"],\n  fields: {\n    discriminant: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    cases: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("SwitchCase")))\n    }\n  }\n});\n\n(0, _index3.default)("ThisExpression", {\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("ThrowStatement", {\n  visitor: ["argument"],\n  aliases: ["Statement", "Terminatorless", "CompletionStatement"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index3.default)("TryStatement", {\n  visitor: ["block", "handler", "finalizer"],\n  aliases: ["Statement"],\n  fields: {\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    },\n    handler: {\n      optional: true,\n      handler: (0, _index2.assertNodeType)("BlockStatement")\n    },\n    finalizer: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)("BlockStatement")\n    }\n  }\n});\n\n(0, _index3.default)("UnaryExpression", {\n  builder: ["operator", "argument", "prefix"],\n  fields: {\n    prefix: {\n      default: true\n    },\n    argument: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: ["argument"],\n  aliases: ["UnaryLike", "Expression"]\n});\n\n(0, _index3.default)("UpdateExpression", {\n  builder: ["operator", "argument", "prefix"],\n  fields: {\n    prefix: {\n      default: false\n    },\n    argument: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: ["argument"],\n  aliases: ["Expression"]\n});\n\n(0, _index3.default)("VariableDeclaration", {\n  builder: ["kind", "declarations"],\n  visitor: ["declarations"],\n  aliases: ["Statement", "Declaration"],\n  fields: {\n    kind: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("string"), (0, _index2.assertOneOf)("var", "let", "const"))\n    },\n    declarations: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)("array"), (0, _index2.assertEach)((0, _index2.assertNodeType)("VariableDeclarator")))\n    }\n  }\n});\n\n(0, _index3.default)("VariableDeclarator", {\n  visitor: ["id", "init"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)("LVal")\n    },\n    init: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index3.default)("WhileStatement", {\n  visitor: ["test", "body"],\n  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")\n    }\n  }\n});\n\n(0, _index3.default)("WithStatement", {\n  visitor: ["object", "body"],\n  aliases: ["Statement"],\n  fields: {\n    object: {\n      object: (0, _index2.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)("BlockStatement", "Statement")\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/core.js?')},"./node_modules/babel-types/lib/definitions/es2015.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)("AssignmentPattern", {\n  visitor: ["left", "right"],\n  aliases: ["Pattern", "LVal"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index2.default)("ArrayPattern", {\n  visitor: ["elements", "typeAnnotation"],\n  aliases: ["Pattern", "LVal"],\n  fields: {\n    elements: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Identifier", "Pattern", "RestElement")))\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index2.default)("ArrowFunctionExpression", {\n  builder: ["params", "body", "async"],\n  visitor: ["params", "body", "returnType", "typeParameters"],\n  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],\n  fields: {\n    params: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("BlockStatement", "Expression")\n    },\n    async: {\n      validate: (0, _index.assertValueType)("boolean"),\n      default: false\n    }\n  }\n});\n\n(0, _index2.default)("ClassBody", {\n  visitor: ["body"],\n  fields: {\n    body: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ClassMethod", "ClassProperty")))\n    }\n  }\n});\n\n(0, _index2.default)("ClassDeclaration", {\n  builder: ["id", "superClass", "body", "decorators"],\n  visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],\n  aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],\n  fields: {\n    id: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("ClassBody")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index2.default)("ClassExpression", {\n  inherits: "ClassDeclaration",\n  aliases: ["Scopable", "Class", "Expression", "Pureish"],\n  fields: {\n    id: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("ClassBody")\n    },\n    superClass: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index2.default)("ExportAllDeclaration", {\n  visitor: ["source"],\n  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],\n  fields: {\n    source: {\n      validate: (0, _index.assertNodeType)("StringLiteral")\n    }\n  }\n});\n\n(0, _index2.default)("ExportDefaultDeclaration", {\n  visitor: ["declaration"],\n  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],\n  fields: {\n    declaration: {\n      validate: (0, _index.assertNodeType)("FunctionDeclaration", "ClassDeclaration", "Expression")\n    }\n  }\n});\n\n(0, _index2.default)("ExportNamedDeclaration", {\n  visitor: ["declaration", "specifiers", "source"],\n  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],\n  fields: {\n    declaration: {\n      validate: (0, _index.assertNodeType)("Declaration"),\n      optional: true\n    },\n    specifiers: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ExportSpecifier")))\n    },\n    source: {\n      validate: (0, _index.assertNodeType)("StringLiteral"),\n      optional: true\n    }\n  }\n});\n\n(0, _index2.default)("ExportSpecifier", {\n  visitor: ["local", "exported"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    exported: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    }\n  }\n});\n\n(0, _index2.default)("ForOfStatement", {\n  visitor: ["left", "right", "body"],\n  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index2.default)("ImportDeclaration", {\n  visitor: ["specifiers", "source"],\n  aliases: ["Statement", "Declaration", "ModuleDeclaration"],\n  fields: {\n    specifiers: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))\n    },\n    source: {\n      validate: (0, _index.assertNodeType)("StringLiteral")\n    }\n  }\n});\n\n(0, _index2.default)("ImportDefaultSpecifier", {\n  visitor: ["local"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    }\n  }\n});\n\n(0, _index2.default)("ImportNamespaceSpecifier", {\n  visitor: ["local"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    }\n  }\n});\n\n(0, _index2.default)("ImportSpecifier", {\n  visitor: ["local", "imported"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    local: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    imported: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    },\n    importKind: {\n      validate: (0, _index.assertOneOf)(null, "type", "typeof")\n    }\n  }\n});\n\n(0, _index2.default)("MetaProperty", {\n  visitor: ["meta", "property"],\n  aliases: ["Expression"],\n  fields: {\n    meta: {\n      validate: (0, _index.assertValueType)("string")\n    },\n    property: {\n      validate: (0, _index.assertValueType)("string")\n    }\n  }\n});\n\n(0, _index2.default)("ClassMethod", {\n  aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],\n  builder: ["kind", "key", "params", "body", "computed", "static"],\n  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],\n  fields: {\n    kind: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("string"), (0, _index.assertOneOf)("get", "set", "method", "constructor")),\n      default: "method"\n    },\n    computed: {\n      default: false,\n      validate: (0, _index.assertValueType)("boolean")\n    },\n    static: {\n      default: false,\n      validate: (0, _index.assertValueType)("boolean")\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? ["Expression"] : ["Identifier", "StringLiteral", "NumericLiteral"];\n        _index.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    params: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("LVal")))\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("BlockStatement")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index.assertValueType)("boolean")\n    },\n    async: {\n      default: false,\n      validate: (0, _index.assertValueType)("boolean")\n    }\n  }\n});\n\n(0, _index2.default)("ObjectPattern", {\n  visitor: ["properties", "typeAnnotation"],\n  aliases: ["Pattern", "LVal"],\n  fields: {\n    properties: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("RestProperty", "Property")))\n    },\n    decorators: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Decorator")))\n    }\n  }\n});\n\n(0, _index2.default)("SpreadElement", {\n  visitor: ["argument"],\n  aliases: ["UnaryLike"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("Super", {\n  aliases: ["Expression"]\n});\n\n(0, _index2.default)("TaggedTemplateExpression", {\n  visitor: ["tag", "quasi"],\n  aliases: ["Expression"],\n  fields: {\n    tag: {\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    quasi: {\n      validate: (0, _index.assertNodeType)("TemplateLiteral")\n    }\n  }\n});\n\n(0, _index2.default)("TemplateElement", {\n  builder: ["value", "tail"],\n  fields: {\n    value: {},\n    tail: {\n      validate: (0, _index.assertValueType)("boolean"),\n      default: false\n    }\n  }\n});\n\n(0, _index2.default)("TemplateLiteral", {\n  visitor: ["quasis", "expressions"],\n  aliases: ["Expression", "Literal"],\n  fields: {\n    quasis: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("TemplateElement")))\n    },\n    expressions: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("Expression")))\n    }\n  }\n});\n\n(0, _index2.default)("YieldExpression", {\n  builder: ["argument", "delegate"],\n  visitor: ["argument"],\n  aliases: ["Expression", "Terminatorless"],\n  fields: {\n    delegate: {\n      validate: (0, _index.assertValueType)("boolean"),\n      default: false\n    },\n    argument: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/es2015.js?')},"./node_modules/babel-types/lib/definitions/experimental.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)("AwaitExpression", {\n  builder: ["argument"],\n  visitor: ["argument"],\n  aliases: ["Expression", "Terminatorless"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("ForAwaitStatement", {\n  visitor: ["left", "right", "body"],\n  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],\n  fields: {\n    left: {\n      validate: (0, _index.assertNodeType)("VariableDeclaration", "LVal")\n    },\n    right: {\n      validate: (0, _index.assertNodeType)("Expression")\n    },\n    body: {\n      validate: (0, _index.assertNodeType)("Statement")\n    }\n  }\n});\n\n(0, _index2.default)("BindExpression", {\n  visitor: ["object", "callee"],\n  aliases: ["Expression"],\n  fields: {}\n});\n\n(0, _index2.default)("Import", {\n  aliases: ["Expression"]\n});\n\n(0, _index2.default)("Decorator", {\n  visitor: ["expression"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("DoExpression", {\n  visitor: ["body"],\n  aliases: ["Expression"],\n  fields: {\n    body: {\n      validate: (0, _index.assertNodeType)("BlockStatement")\n    }\n  }\n});\n\n(0, _index2.default)("ExportDefaultSpecifier", {\n  visitor: ["exported"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    exported: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    }\n  }\n});\n\n(0, _index2.default)("ExportNamespaceSpecifier", {\n  visitor: ["exported"],\n  aliases: ["ModuleSpecifier"],\n  fields: {\n    exported: {\n      validate: (0, _index.assertNodeType)("Identifier")\n    }\n  }\n});\n\n(0, _index2.default)("RestProperty", {\n  visitor: ["argument"],\n  aliases: ["UnaryLike"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)("LVal")\n    }\n  }\n});\n\n(0, _index2.default)("SpreadProperty", {\n  visitor: ["argument"],\n  aliases: ["UnaryLike"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/experimental.js?')},"./node_modules/babel-types/lib/definitions/flow.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)("AnyTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("ArrayTypeAnnotation", {\n  visitor: ["elementType"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("BooleanTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("BooleanLiteralTypeAnnotation", {\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("NullLiteralTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("ClassImplements", {\n  visitor: ["id", "typeParameters"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("ClassProperty", {\n  visitor: ["key", "value", "typeAnnotation", "decorators"],\n  builder: ["key", "value", "typeAnnotation", "decorators", "computed"],\n  aliases: ["Property"],\n  fields: {\n    computed: {\n      validate: (0, _index.assertValueType)("boolean"),\n      default: false\n    }\n  }\n});\n\n(0, _index2.default)("DeclareClass", {\n  visitor: ["id", "typeParameters", "extends", "body"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareFunction", {\n  visitor: ["id"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareInterface", {\n  visitor: ["id", "typeParameters", "extends", "body"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareModule", {\n  visitor: ["id", "body"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareModuleExports", {\n  visitor: ["typeAnnotation"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareTypeAlias", {\n  visitor: ["id", "typeParameters", "right"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareOpaqueType", {\n  visitor: ["id", "typeParameters", "supertype"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareVariable", {\n  visitor: ["id"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("DeclareExportDeclaration", {\n  visitor: ["declaration", "specifiers", "source"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("ExistentialTypeParam", {\n  aliases: ["Flow"]\n});\n\n(0, _index2.default)("FunctionTypeAnnotation", {\n  visitor: ["typeParameters", "params", "rest", "returnType"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("FunctionTypeParam", {\n  visitor: ["name", "typeAnnotation"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("GenericTypeAnnotation", {\n  visitor: ["id", "typeParameters"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("InterfaceExtends", {\n  visitor: ["id", "typeParameters"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("InterfaceDeclaration", {\n  visitor: ["id", "typeParameters", "extends", "body"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("IntersectionTypeAnnotation", {\n  visitor: ["types"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("MixedTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"]\n});\n\n(0, _index2.default)("EmptyTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"]\n});\n\n(0, _index2.default)("NullableTypeAnnotation", {\n  visitor: ["typeAnnotation"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("NumericLiteralTypeAnnotation", {\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("NumberTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("StringLiteralTypeAnnotation", {\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("StringTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("ThisTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n(0, _index2.default)("TupleTypeAnnotation", {\n  visitor: ["types"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeofTypeAnnotation", {\n  visitor: ["argument"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeAlias", {\n  visitor: ["id", "typeParameters", "right"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("OpaqueType", {\n  visitor: ["id", "typeParameters", "impltype", "supertype"],\n  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeAnnotation", {\n  visitor: ["typeAnnotation"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeCastExpression", {\n  visitor: ["expression", "typeAnnotation"],\n  aliases: ["Flow", "ExpressionWrapper", "Expression"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeParameter", {\n  visitor: ["bound"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeParameterDeclaration", {\n  visitor: ["params"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("TypeParameterInstantiation", {\n  visitor: ["params"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("ObjectTypeAnnotation", {\n  visitor: ["properties", "indexers", "callProperties"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("ObjectTypeCallProperty", {\n  visitor: ["value"],\n  aliases: ["Flow", "UserWhitespacable"],\n  fields: {}\n});\n\n(0, _index2.default)("ObjectTypeIndexer", {\n  visitor: ["id", "key", "value"],\n  aliases: ["Flow", "UserWhitespacable"],\n  fields: {}\n});\n\n(0, _index2.default)("ObjectTypeProperty", {\n  visitor: ["key", "value"],\n  aliases: ["Flow", "UserWhitespacable"],\n  fields: {}\n});\n\n(0, _index2.default)("ObjectTypeSpreadProperty", {\n  visitor: ["argument"],\n  aliases: ["Flow", "UserWhitespacable"],\n  fields: {}\n});\n\n(0, _index2.default)("QualifiedTypeIdentifier", {\n  visitor: ["id", "qualification"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("UnionTypeAnnotation", {\n  visitor: ["types"],\n  aliases: ["Flow"],\n  fields: {}\n});\n\n(0, _index2.default)("VoidTypeAnnotation", {\n  aliases: ["Flow", "FlowBaseAnnotation"],\n  fields: {}\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/flow.js?')},"./node_modules/babel-types/lib/definitions/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = undefined;\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nexports.assertEach = assertEach;\nexports.assertOneOf = assertOneOf;\nexports.assertNodeType = assertNodeType;\nexports.assertNodeOrValueType = assertNodeOrValueType;\nexports.assertValueType = assertValueType;\nexports.chain = chain;\nexports.default = defineType;\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VISITOR_KEYS = exports.VISITOR_KEYS = {};\nvar ALIAS_KEYS = exports.ALIAS_KEYS = {};\nvar NODE_FIELDS = exports.NODE_FIELDS = {};\nvar BUILDER_KEYS = exports.BUILDER_KEYS = {};\nvar DEPRECATED_KEYS = exports.DEPRECATED_KEYS = {};\n\nfunction getType(val) {\n  if (Array.isArray(val)) {\n    return "array";\n  } else if (val === null) {\n    return "null";\n  } else if (val === undefined) {\n    return "undefined";\n  } else {\n    return typeof val === "undefined" ? "undefined" : (0, _typeof3.default)(val);\n  }\n}\n\nfunction assertEach(callback) {\n  function validator(node, key, val) {\n    if (!Array.isArray(val)) return;\n\n    for (var i = 0; i < val.length; i++) {\n      callback(node, key + "[" + i + "]", val[i]);\n    }\n  }\n  validator.each = callback;\n  return validator;\n}\n\nfunction assertOneOf() {\n  for (var _len = arguments.length, vals = Array(_len), _key = 0; _key < _len; _key++) {\n    vals[_key] = arguments[_key];\n  }\n\n  function validate(node, key, val) {\n    if (vals.indexOf(val) < 0) {\n      throw new TypeError("Property " + key + " expected value to be one of " + (0, _stringify2.default)(vals) + " but got " + (0, _stringify2.default)(val));\n    }\n  }\n\n  validate.oneOf = vals;\n\n  return validate;\n}\n\nfunction assertNodeType() {\n  for (var _len2 = arguments.length, types = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    types[_key2] = arguments[_key2];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n\n    for (var _iterator = types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var type = _ref;\n\n      if (t.is(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));\n    }\n  }\n\n  validate.oneOfNodeTypes = types;\n\n  return validate;\n}\n\nfunction assertNodeOrValueType() {\n  for (var _len3 = arguments.length, types = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    types[_key3] = arguments[_key3];\n  }\n\n  function validate(node, key, val) {\n    var valid = false;\n\n    for (var _iterator2 = types, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var type = _ref2;\n\n      if (getType(val) === type || t.is(type, val)) {\n        valid = true;\n        break;\n      }\n    }\n\n    if (!valid) {\n      throw new TypeError("Property " + key + " of " + node.type + " expected node to be of a type " + (0, _stringify2.default)(types) + " " + ("but instead got " + (0, _stringify2.default)(val && val.type)));\n    }\n  }\n\n  validate.oneOfNodeOrValueTypes = types;\n\n  return validate;\n}\n\nfunction assertValueType(type) {\n  function validate(node, key, val) {\n    var valid = getType(val) === type;\n\n    if (!valid) {\n      throw new TypeError("Property " + key + " expected type of " + type + " but got " + getType(val));\n    }\n  }\n\n  validate.type = type;\n\n  return validate;\n}\n\nfunction chain() {\n  for (var _len4 = arguments.length, fns = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    fns[_key4] = arguments[_key4];\n  }\n\n  function validate() {\n    for (var _iterator3 = fns, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var fn = _ref3;\n\n      fn.apply(undefined, arguments);\n    }\n  }\n  validate.chainOf = fns;\n  return validate;\n}\n\nfunction defineType(type) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var inherits = opts.inherits && store[opts.inherits] || {};\n\n  opts.fields = opts.fields || inherits.fields || {};\n  opts.visitor = opts.visitor || inherits.visitor || [];\n  opts.aliases = opts.aliases || inherits.aliases || [];\n  opts.builder = opts.builder || inherits.builder || opts.visitor || [];\n\n  if (opts.deprecatedAlias) {\n    DEPRECATED_KEYS[opts.deprecatedAlias] = type;\n  }\n\n  for (var _iterator4 = opts.visitor.concat(opts.builder), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n    var _ref4;\n\n    if (_isArray4) {\n      if (_i4 >= _iterator4.length) break;\n      _ref4 = _iterator4[_i4++];\n    } else {\n      _i4 = _iterator4.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var _key5 = _ref4;\n\n    opts.fields[_key5] = opts.fields[_key5] || {};\n  }\n\n  for (var key in opts.fields) {\n    var field = opts.fields[key];\n\n    if (opts.builder.indexOf(key) === -1) {\n      field.optional = true;\n    }\n    if (field.default === undefined) {\n      field.default = null;\n    } else if (!field.validate) {\n      field.validate = assertValueType(getType(field.default));\n    }\n  }\n\n  VISITOR_KEYS[type] = opts.visitor;\n  BUILDER_KEYS[type] = opts.builder;\n  NODE_FIELDS[type] = opts.fields;\n  ALIAS_KEYS[type] = opts.aliases;\n\n  store[type] = opts;\n}\n\nvar store = {};\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/index.js?')},"./node_modules/babel-types/lib/definitions/init.js":function(module,exports,__webpack_require__){"use strict";eval('\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/core.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/es2015.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/flow.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/jsx.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/misc.js");\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/experimental.js");\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/init.js?')},"./node_modules/babel-types/lib/definitions/jsx.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)("JSXAttribute", {\n  visitor: ["name", "value"],\n  aliases: ["JSX", "Immutable"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXNamespacedName")\n    },\n    value: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("JSXElement", "StringLiteral", "JSXExpressionContainer")\n    }\n  }\n});\n\n(0, _index2.default)("JSXClosingElement", {\n  visitor: ["name"],\n  aliases: ["JSX", "Immutable"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")\n    }\n  }\n});\n\n(0, _index2.default)("JSXElement", {\n  builder: ["openingElement", "closingElement", "children", "selfClosing"],\n  visitor: ["openingElement", "children", "closingElement"],\n  aliases: ["JSX", "Immutable", "Expression"],\n  fields: {\n    openingElement: {\n      validate: (0, _index.assertNodeType)("JSXOpeningElement")\n    },\n    closingElement: {\n      optional: true,\n      validate: (0, _index.assertNodeType)("JSXClosingElement")\n    },\n    children: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement")))\n    }\n  }\n});\n\n(0, _index2.default)("JSXEmptyExpression", {\n  aliases: ["JSX", "Expression"]\n});\n\n(0, _index2.default)("JSXExpressionContainer", {\n  visitor: ["expression"],\n  aliases: ["JSX", "Immutable"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("JSXSpreadChild", {\n  visitor: ["expression"],\n  aliases: ["JSX", "Immutable"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("JSXIdentifier", {\n  builder: ["name"],\n  aliases: ["JSX", "Expression"],\n  fields: {\n    name: {\n      validate: (0, _index.assertValueType)("string")\n    }\n  }\n});\n\n(0, _index2.default)("JSXMemberExpression", {\n  visitor: ["object", "property"],\n  aliases: ["JSX", "Expression"],\n  fields: {\n    object: {\n      validate: (0, _index.assertNodeType)("JSXMemberExpression", "JSXIdentifier")\n    },\n    property: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier")\n    }\n  }\n});\n\n(0, _index2.default)("JSXNamespacedName", {\n  visitor: ["namespace", "name"],\n  aliases: ["JSX"],\n  fields: {\n    namespace: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier")\n    },\n    name: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier")\n    }\n  }\n});\n\n(0, _index2.default)("JSXOpeningElement", {\n  builder: ["name", "attributes", "selfClosing"],\n  visitor: ["name", "attributes"],\n  aliases: ["JSX", "Immutable"],\n  fields: {\n    name: {\n      validate: (0, _index.assertNodeType)("JSXIdentifier", "JSXMemberExpression")\n    },\n    selfClosing: {\n      default: false,\n      validate: (0, _index.assertValueType)("boolean")\n    },\n    attributes: {\n      validate: (0, _index.chain)((0, _index.assertValueType)("array"), (0, _index.assertEach)((0, _index.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))\n    }\n  }\n});\n\n(0, _index2.default)("JSXSpreadAttribute", {\n  visitor: ["argument"],\n  aliases: ["JSX"],\n  fields: {\n    argument: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n(0, _index2.default)("JSXText", {\n  aliases: ["JSX", "Immutable"],\n  builder: ["value"],\n  fields: {\n    value: {\n      validate: (0, _index.assertValueType)("string")\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/jsx.js?')},"./node_modules/babel-types/lib/definitions/misc.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _index2.default)("Noop", {\n  visitor: []\n});\n\n(0, _index2.default)("ParenthesizedExpression", {\n  visitor: ["expression"],\n  aliases: ["Expression", "ExpressionWrapper"],\n  fields: {\n    expression: {\n      validate: (0, _index.assertNodeType)("Expression")\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/definitions/misc.js?')},"./node_modules/babel-types/lib/flow.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.createUnionTypeAnnotation = createUnionTypeAnnotation;\nexports.removeTypeDuplicates = removeTypeDuplicates;\nexports.createTypeAnnotationBasedOnTypeof = createTypeAnnotationBasedOnTypeof;\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction createUnionTypeAnnotation(types) {\n  var flattened = removeTypeDuplicates(types);\n\n  if (flattened.length === 1) {\n    return flattened[0];\n  } else {\n    return t.unionTypeAnnotation(flattened);\n  }\n}\n\nfunction removeTypeDuplicates(nodes) {\n  var generics = {};\n  var bases = {};\n\n  var typeGroups = [];\n\n  var types = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (!node) continue;\n\n    if (types.indexOf(node) >= 0) {\n      continue;\n    }\n\n    if (t.isAnyTypeAnnotation(node)) {\n      return [node];\n    }\n\n    if (t.isFlowBaseAnnotation(node)) {\n      bases[node.type] = node;\n      continue;\n    }\n\n    if (t.isUnionTypeAnnotation(node)) {\n      if (typeGroups.indexOf(node.types) < 0) {\n        nodes = nodes.concat(node.types);\n        typeGroups.push(node.types);\n      }\n      continue;\n    }\n\n    if (t.isGenericTypeAnnotation(node)) {\n      var name = node.id.name;\n\n      if (generics[name]) {\n        var existing = generics[name];\n        if (existing.typeParameters) {\n          if (node.typeParameters) {\n            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));\n          }\n        } else {\n          existing = node.typeParameters;\n        }\n      } else {\n        generics[name] = node;\n      }\n\n      continue;\n    }\n\n    types.push(node);\n  }\n\n  for (var type in bases) {\n    types.push(bases[type]);\n  }\n\n  for (var _name in generics) {\n    types.push(generics[_name]);\n  }\n\n  return types;\n}\n\nfunction createTypeAnnotationBasedOnTypeof(type) {\n  if (type === "string") {\n    return t.stringTypeAnnotation();\n  } else if (type === "number") {\n    return t.numberTypeAnnotation();\n  } else if (type === "undefined") {\n    return t.voidTypeAnnotation();\n  } else if (type === "boolean") {\n    return t.booleanTypeAnnotation();\n  } else if (type === "function") {\n    return t.genericTypeAnnotation(t.identifier("Function"));\n  } else if (type === "object") {\n    return t.genericTypeAnnotation(t.identifier("Object"));\n  } else if (type === "symbol") {\n    return t.genericTypeAnnotation(t.identifier("Symbol"));\n  } else {\n    throw new Error("Invalid typeof value");\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/flow.js?')},"./node_modules/babel-types/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.createTypeAnnotationBasedOnTypeof = exports.removeTypeDuplicates = exports.createUnionTypeAnnotation = exports.valueToNode = exports.toBlock = exports.toExpression = exports.toStatement = exports.toBindingIdentifierName = exports.toIdentifier = exports.toKeyAlias = exports.toSequenceExpression = exports.toComputedKey = exports.isNodesEquivalent = exports.isImmutable = exports.isScope = exports.isSpecifierDefault = exports.isVar = exports.isBlockScoped = exports.isLet = exports.isValidIdentifier = exports.isReferenced = exports.isBinding = exports.getOuterBindingIdentifiers = exports.getBindingIdentifiers = exports.TYPES = exports.react = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = undefined;\n\nvar _getOwnPropertySymbols = __webpack_require__("./node_modules/babel-runtime/core-js/object/get-own-property-symbols.js");\n\nvar _getOwnPropertySymbols2 = _interopRequireDefault(_getOwnPropertySymbols);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _constants = __webpack_require__("./node_modules/babel-types/lib/constants.js");\n\nObject.defineProperty(exports, "STATEMENT_OR_BLOCK_KEYS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.STATEMENT_OR_BLOCK_KEYS;\n  }\n});\nObject.defineProperty(exports, "FLATTENABLE_KEYS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.FLATTENABLE_KEYS;\n  }\n});\nObject.defineProperty(exports, "FOR_INIT_KEYS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.FOR_INIT_KEYS;\n  }\n});\nObject.defineProperty(exports, "COMMENT_KEYS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.COMMENT_KEYS;\n  }\n});\nObject.defineProperty(exports, "LOGICAL_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.LOGICAL_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "UPDATE_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.UPDATE_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "BOOLEAN_NUMBER_BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.BOOLEAN_NUMBER_BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "EQUALITY_BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.EQUALITY_BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "COMPARISON_BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.COMPARISON_BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "BOOLEAN_BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.BOOLEAN_BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "NUMBER_BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.NUMBER_BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "BINARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.BINARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "BOOLEAN_UNARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.BOOLEAN_UNARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "NUMBER_UNARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.NUMBER_UNARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "STRING_UNARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.STRING_UNARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "UNARY_OPERATORS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.UNARY_OPERATORS;\n  }\n});\nObject.defineProperty(exports, "INHERIT_KEYS", {\n  enumerable: true,\n  get: function get() {\n    return _constants.INHERIT_KEYS;\n  }\n});\nObject.defineProperty(exports, "BLOCK_SCOPED_SYMBOL", {\n  enumerable: true,\n  get: function get() {\n    return _constants.BLOCK_SCOPED_SYMBOL;\n  }\n});\nObject.defineProperty(exports, "NOT_LOCAL_BINDING", {\n  enumerable: true,\n  get: function get() {\n    return _constants.NOT_LOCAL_BINDING;\n  }\n});\nexports.is = is;\nexports.isType = isType;\nexports.validate = validate;\nexports.shallowEqual = shallowEqual;\nexports.appendToMemberExpression = appendToMemberExpression;\nexports.prependToMemberExpression = prependToMemberExpression;\nexports.ensureBlock = ensureBlock;\nexports.clone = clone;\nexports.cloneWithoutLoc = cloneWithoutLoc;\nexports.cloneDeep = cloneDeep;\nexports.buildMatchMemberExpression = buildMatchMemberExpression;\nexports.removeComments = removeComments;\nexports.inheritsComments = inheritsComments;\nexports.inheritTrailingComments = inheritTrailingComments;\nexports.inheritLeadingComments = inheritLeadingComments;\nexports.inheritInnerComments = inheritInnerComments;\nexports.inherits = inherits;\nexports.assertNode = assertNode;\nexports.isNode = isNode;\nexports.traverseFast = traverseFast;\nexports.removeProperties = removeProperties;\nexports.removePropertiesDeep = removePropertiesDeep;\n\nvar _retrievers = __webpack_require__("./node_modules/babel-types/lib/retrievers.js");\n\nObject.defineProperty(exports, "getBindingIdentifiers", {\n  enumerable: true,\n  get: function get() {\n    return _retrievers.getBindingIdentifiers;\n  }\n});\nObject.defineProperty(exports, "getOuterBindingIdentifiers", {\n  enumerable: true,\n  get: function get() {\n    return _retrievers.getOuterBindingIdentifiers;\n  }\n});\n\nvar _validators = __webpack_require__("./node_modules/babel-types/lib/validators.js");\n\nObject.defineProperty(exports, "isBinding", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isBinding;\n  }\n});\nObject.defineProperty(exports, "isReferenced", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isReferenced;\n  }\n});\nObject.defineProperty(exports, "isValidIdentifier", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isValidIdentifier;\n  }\n});\nObject.defineProperty(exports, "isLet", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isLet;\n  }\n});\nObject.defineProperty(exports, "isBlockScoped", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isBlockScoped;\n  }\n});\nObject.defineProperty(exports, "isVar", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isVar;\n  }\n});\nObject.defineProperty(exports, "isSpecifierDefault", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isSpecifierDefault;\n  }\n});\nObject.defineProperty(exports, "isScope", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isScope;\n  }\n});\nObject.defineProperty(exports, "isImmutable", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isImmutable;\n  }\n});\nObject.defineProperty(exports, "isNodesEquivalent", {\n  enumerable: true,\n  get: function get() {\n    return _validators.isNodesEquivalent;\n  }\n});\n\nvar _converters = __webpack_require__("./node_modules/babel-types/lib/converters.js");\n\nObject.defineProperty(exports, "toComputedKey", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toComputedKey;\n  }\n});\nObject.defineProperty(exports, "toSequenceExpression", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toSequenceExpression;\n  }\n});\nObject.defineProperty(exports, "toKeyAlias", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toKeyAlias;\n  }\n});\nObject.defineProperty(exports, "toIdentifier", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toIdentifier;\n  }\n});\nObject.defineProperty(exports, "toBindingIdentifierName", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toBindingIdentifierName;\n  }\n});\nObject.defineProperty(exports, "toStatement", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toStatement;\n  }\n});\nObject.defineProperty(exports, "toExpression", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toExpression;\n  }\n});\nObject.defineProperty(exports, "toBlock", {\n  enumerable: true,\n  get: function get() {\n    return _converters.toBlock;\n  }\n});\nObject.defineProperty(exports, "valueToNode", {\n  enumerable: true,\n  get: function get() {\n    return _converters.valueToNode;\n  }\n});\n\nvar _flow = __webpack_require__("./node_modules/babel-types/lib/flow.js");\n\nObject.defineProperty(exports, "createUnionTypeAnnotation", {\n  enumerable: true,\n  get: function get() {\n    return _flow.createUnionTypeAnnotation;\n  }\n});\nObject.defineProperty(exports, "removeTypeDuplicates", {\n  enumerable: true,\n  get: function get() {\n    return _flow.removeTypeDuplicates;\n  }\n});\nObject.defineProperty(exports, "createTypeAnnotationBasedOnTypeof", {\n  enumerable: true,\n  get: function get() {\n    return _flow.createTypeAnnotationBasedOnTypeof;\n  }\n});\n\nvar _toFastProperties = __webpack_require__("./node_modules/babel-types/node_modules/to-fast-properties/index.js");\n\nvar _toFastProperties2 = _interopRequireDefault(_toFastProperties);\n\nvar _clone = __webpack_require__("./node_modules/lodash/clone.js");\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _uniq = __webpack_require__("./node_modules/lodash/uniq.js");\n\nvar _uniq2 = _interopRequireDefault(_uniq);\n\n__webpack_require__("./node_modules/babel-types/lib/definitions/init.js");\n\nvar _definitions = __webpack_require__("./node_modules/babel-types/lib/definitions/index.js");\n\nvar _react2 = __webpack_require__("./node_modules/babel-types/lib/react.js");\n\nvar _react = _interopRequireWildcard(_react2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar t = exports;\n\nfunction registerType(type) {\n  var is = t["is" + type];\n  if (!is) {\n    is = t["is" + type] = function (node, opts) {\n      return t.is(type, node, opts);\n    };\n  }\n\n  t["assert" + type] = function (node, opts) {\n    opts = opts || {};\n    if (!is(node, opts)) {\n      throw new Error("Expected type " + (0, _stringify2.default)(type) + " with option " + (0, _stringify2.default)(opts));\n    }\n  };\n}\n\nexports.VISITOR_KEYS = _definitions.VISITOR_KEYS;\nexports.ALIAS_KEYS = _definitions.ALIAS_KEYS;\nexports.NODE_FIELDS = _definitions.NODE_FIELDS;\nexports.BUILDER_KEYS = _definitions.BUILDER_KEYS;\nexports.DEPRECATED_KEYS = _definitions.DEPRECATED_KEYS;\nexports.react = _react;\n\n\nfor (var type in t.VISITOR_KEYS) {\n  registerType(type);\n}\n\nt.FLIPPED_ALIAS_KEYS = {};\n\n(0, _keys2.default)(t.ALIAS_KEYS).forEach(function (type) {\n  t.ALIAS_KEYS[type].forEach(function (alias) {\n    var types = t.FLIPPED_ALIAS_KEYS[alias] = t.FLIPPED_ALIAS_KEYS[alias] || [];\n    types.push(type);\n  });\n});\n\n(0, _keys2.default)(t.FLIPPED_ALIAS_KEYS).forEach(function (type) {\n  t[type.toUpperCase() + "_TYPES"] = t.FLIPPED_ALIAS_KEYS[type];\n  registerType(type);\n});\n\nvar TYPES = exports.TYPES = (0, _keys2.default)(t.VISITOR_KEYS).concat((0, _keys2.default)(t.FLIPPED_ALIAS_KEYS)).concat((0, _keys2.default)(t.DEPRECATED_KEYS));\n\nfunction is(type, node, opts) {\n  if (!node) return false;\n\n  var matches = isType(node.type, type);\n  if (!matches) return false;\n\n  if (typeof opts === "undefined") {\n    return true;\n  } else {\n    return t.shallowEqual(node, opts);\n  }\n}\n\nfunction isType(nodeType, targetType) {\n  if (nodeType === targetType) return true;\n\n  if (t.ALIAS_KEYS[targetType]) return false;\n\n  var aliases = t.FLIPPED_ALIAS_KEYS[targetType];\n  if (aliases) {\n    if (aliases[0] === nodeType) return true;\n\n    for (var _iterator = aliases, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var alias = _ref;\n\n      if (nodeType === alias) return true;\n    }\n  }\n\n  return false;\n}\n\n(0, _keys2.default)(t.BUILDER_KEYS).forEach(function (type) {\n  var keys = t.BUILDER_KEYS[type];\n\n  function builder() {\n    if (arguments.length > keys.length) {\n      throw new Error("t." + type + ": Too many arguments passed. Received " + arguments.length + " but can receive " + ("no more than " + keys.length));\n    }\n\n    var node = {};\n    node.type = type;\n\n    var i = 0;\n\n    for (var _iterator2 = keys, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var _key = _ref2;\n\n      var field = t.NODE_FIELDS[type][_key];\n\n      var arg = arguments[i++];\n      if (arg === undefined) arg = (0, _clone2.default)(field.default);\n\n      node[_key] = arg;\n    }\n\n    for (var key in node) {\n      validate(node, key, node[key]);\n    }\n\n    return node;\n  }\n\n  t[type] = builder;\n  t[type[0].toLowerCase() + type.slice(1)] = builder;\n});\n\nvar _loop = function _loop(_type) {\n  var newType = t.DEPRECATED_KEYS[_type];\n\n  function proxy(fn) {\n    return function () {\n      console.trace("The node type " + _type + " has been renamed to " + newType);\n      return fn.apply(this, arguments);\n    };\n  }\n\n  t[_type] = t[_type[0].toLowerCase() + _type.slice(1)] = proxy(t[newType]);\n  t["is" + _type] = proxy(t["is" + newType]);\n  t["assert" + _type] = proxy(t["assert" + newType]);\n};\n\nfor (var _type in t.DEPRECATED_KEYS) {\n  _loop(_type);\n}\n\nfunction validate(node, key, val) {\n  if (!node) return;\n\n  var fields = t.NODE_FIELDS[node.type];\n  if (!fields) return;\n\n  var field = fields[key];\n  if (!field || !field.validate) return;\n  if (field.optional && val == null) return;\n\n  field.validate(node, key, val);\n}\n\nfunction shallowEqual(actual, expected) {\n  var keys = (0, _keys2.default)(expected);\n\n  for (var _iterator3 = keys, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var key = _ref3;\n\n    if (actual[key] !== expected[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction appendToMemberExpression(member, append, computed) {\n  member.object = t.memberExpression(member.object, member.property, member.computed);\n  member.property = append;\n  member.computed = !!computed;\n  return member;\n}\n\nfunction prependToMemberExpression(member, prepend) {\n  member.object = t.memberExpression(prepend, member.object);\n  return member;\n}\n\nfunction ensureBlock(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "body";\n\n  return node[key] = t.toBlock(node[key], node);\n}\n\nfunction clone(node) {\n  if (!node) return node;\n  var newNode = {};\n  for (var key in node) {\n    if (key[0] === "_") continue;\n    newNode[key] = node[key];\n  }\n  return newNode;\n}\n\nfunction cloneWithoutLoc(node) {\n  var newNode = clone(node);\n  delete newNode.loc;\n  return newNode;\n}\n\nfunction cloneDeep(node) {\n  if (!node) return node;\n  var newNode = {};\n\n  for (var key in node) {\n    if (key[0] === "_") continue;\n\n    var val = node[key];\n\n    if (val) {\n      if (val.type) {\n        val = t.cloneDeep(val);\n      } else if (Array.isArray(val)) {\n        val = val.map(t.cloneDeep);\n      }\n    }\n\n    newNode[key] = val;\n  }\n\n  return newNode;\n}\n\nfunction buildMatchMemberExpression(match, allowPartial) {\n  var parts = match.split(".");\n\n  return function (member) {\n    if (!t.isMemberExpression(member)) return false;\n\n    var search = [member];\n    var i = 0;\n\n    while (search.length) {\n      var node = search.shift();\n\n      if (allowPartial && i === parts.length) {\n        return true;\n      }\n\n      if (t.isIdentifier(node)) {\n        if (parts[i] !== node.name) return false;\n      } else if (t.isStringLiteral(node)) {\n        if (parts[i] !== node.value) return false;\n      } else if (t.isMemberExpression(node)) {\n        if (node.computed && !t.isStringLiteral(node.property)) {\n          return false;\n        } else {\n          search.push(node.object);\n          search.push(node.property);\n          continue;\n        }\n      } else {\n        return false;\n      }\n\n      if (++i > parts.length) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n\nfunction removeComments(node) {\n  for (var _iterator4 = t.COMMENT_KEYS, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : (0, _getIterator3.default)(_iterator4);;) {\n    var _ref4;\n\n    if (_isArray4) {\n      if (_i4 >= _iterator4.length) break;\n      _ref4 = _iterator4[_i4++];\n    } else {\n      _i4 = _iterator4.next();\n      if (_i4.done) break;\n      _ref4 = _i4.value;\n    }\n\n    var key = _ref4;\n\n    delete node[key];\n  }\n  return node;\n}\n\nfunction inheritsComments(child, parent) {\n  inheritTrailingComments(child, parent);\n  inheritLeadingComments(child, parent);\n  inheritInnerComments(child, parent);\n  return child;\n}\n\nfunction inheritTrailingComments(child, parent) {\n  _inheritComments("trailingComments", child, parent);\n}\n\nfunction inheritLeadingComments(child, parent) {\n  _inheritComments("leadingComments", child, parent);\n}\n\nfunction inheritInnerComments(child, parent) {\n  _inheritComments("innerComments", child, parent);\n}\n\nfunction _inheritComments(key, child, parent) {\n  if (child && parent) {\n    child[key] = (0, _uniq2.default)([].concat(child[key], parent[key]).filter(Boolean));\n  }\n}\n\nfunction inherits(child, parent) {\n  if (!child || !parent) return child;\n\n  for (var _iterator5 = t.INHERIT_KEYS.optional, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : (0, _getIterator3.default)(_iterator5);;) {\n    var _ref5;\n\n    if (_isArray5) {\n      if (_i5 >= _iterator5.length) break;\n      _ref5 = _iterator5[_i5++];\n    } else {\n      _i5 = _iterator5.next();\n      if (_i5.done) break;\n      _ref5 = _i5.value;\n    }\n\n    var _key2 = _ref5;\n\n    if (child[_key2] == null) {\n      child[_key2] = parent[_key2];\n    }\n  }\n\n  for (var key in parent) {\n    if (key[0] === "_") child[key] = parent[key];\n  }\n\n  for (var _iterator6 = t.INHERIT_KEYS.force, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : (0, _getIterator3.default)(_iterator6);;) {\n    var _ref6;\n\n    if (_isArray6) {\n      if (_i6 >= _iterator6.length) break;\n      _ref6 = _iterator6[_i6++];\n    } else {\n      _i6 = _iterator6.next();\n      if (_i6.done) break;\n      _ref6 = _i6.value;\n    }\n\n    var _key3 = _ref6;\n\n    child[_key3] = parent[_key3];\n  }\n\n  t.inheritsComments(child, parent);\n\n  return child;\n}\n\nfunction assertNode(node) {\n  if (!isNode(node)) {\n    throw new TypeError("Not a valid node " + (node && node.type));\n  }\n}\n\nfunction isNode(node) {\n  return !!(node && _definitions.VISITOR_KEYS[node.type]);\n}\n\n(0, _toFastProperties2.default)(t);\n(0, _toFastProperties2.default)(t.VISITOR_KEYS);\n\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n\n  var keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n\n  opts = opts || {};\n  enter(node, opts);\n\n  for (var _iterator7 = keys, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : (0, _getIterator3.default)(_iterator7);;) {\n    var _ref7;\n\n    if (_isArray7) {\n      if (_i7 >= _iterator7.length) break;\n      _ref7 = _iterator7[_i7++];\n    } else {\n      _i7 = _iterator7.next();\n      if (_i7.done) break;\n      _ref7 = _i7.value;\n    }\n\n    var key = _ref7;\n\n    var subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (var _iterator8 = subNode, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : (0, _getIterator3.default)(_iterator8);;) {\n        var _ref8;\n\n        if (_isArray8) {\n          if (_i8 >= _iterator8.length) break;\n          _ref8 = _iterator8[_i8++];\n        } else {\n          _i8 = _iterator8.next();\n          if (_i8.done) break;\n          _ref8 = _i8.value;\n        }\n\n        var _node = _ref8;\n\n        traverseFast(_node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}\n\nvar CLEAR_KEYS = ["tokens", "start", "end", "loc", "raw", "rawValue"];\n\nvar CLEAR_KEYS_PLUS_COMMENTS = t.COMMENT_KEYS.concat(["comments"]).concat(CLEAR_KEYS);\n\nfunction removeProperties(node, opts) {\n  opts = opts || {};\n  var map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;\n  for (var _iterator9 = map, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : (0, _getIterator3.default)(_iterator9);;) {\n    var _ref9;\n\n    if (_isArray9) {\n      if (_i9 >= _iterator9.length) break;\n      _ref9 = _iterator9[_i9++];\n    } else {\n      _i9 = _iterator9.next();\n      if (_i9.done) break;\n      _ref9 = _i9.value;\n    }\n\n    var _key4 = _ref9;\n\n    if (node[_key4] != null) node[_key4] = undefined;\n  }\n\n  for (var key in node) {\n    if (key[0] === "_" && node[key] != null) node[key] = undefined;\n  }\n\n  var syms = (0, _getOwnPropertySymbols2.default)(node);\n  for (var _iterator10 = syms, _isArray10 = Array.isArray(_iterator10), _i10 = 0, _iterator10 = _isArray10 ? _iterator10 : (0, _getIterator3.default)(_iterator10);;) {\n    var _ref10;\n\n    if (_isArray10) {\n      if (_i10 >= _iterator10.length) break;\n      _ref10 = _iterator10[_i10++];\n    } else {\n      _i10 = _iterator10.next();\n      if (_i10.done) break;\n      _ref10 = _i10.value;\n    }\n\n    var sym = _ref10;\n\n    node[sym] = null;\n  }\n}\n\nfunction removePropertiesDeep(tree, opts) {\n  traverseFast(tree, removeProperties, opts);\n  return tree;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/index.js?')},"./node_modules/babel-types/lib/react.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.isReactComponent = undefined;\nexports.isCompatTag = isCompatTag;\nexports.buildChildren = buildChildren;\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression("React.Component");\n\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]|\\-/.test(tagName);\n}\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  var lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  var lastNonEmptyLine = 0;\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  var str = "";\n\n  for (var _i = 0; _i < lines.length; _i++) {\n    var line = lines[_i];\n\n    var isFirstLine = _i === 0;\n    var isLastLine = _i === lines.length - 1;\n    var isLastNonEmptyLine = _i === lastNonEmptyLine;\n\n    var trimmedLine = line.replace(/\\t/g, " ");\n\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, "");\n    }\n\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, "");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += " ";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(t.stringLiteral(str));\n}\n\nfunction buildChildren(node) {\n  var elems = [];\n\n  for (var i = 0; i < node.children.length; i++) {\n    var child = node.children[i];\n\n    if (t.isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elems);\n      continue;\n    }\n\n    if (t.isJSXExpressionContainer(child)) child = child.expression;\n    if (t.isJSXEmptyExpression(child)) continue;\n\n    elems.push(child);\n  }\n\n  return elems;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/react.js?')},"./node_modules/babel-types/lib/retrievers.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _create = __webpack_require__("./node_modules/babel-runtime/core-js/object/create.js");\n\nvar _create2 = _interopRequireDefault(_create);\n\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\n  var search = [].concat(node);\n  var ids = (0, _create2.default)(null);\n\n  while (search.length) {\n    var id = search.shift();\n    if (!id) continue;\n\n    var keys = t.getBindingIdentifiers.keys[id.type];\n\n    if (t.isIdentifier(id)) {\n      if (duplicates) {\n        var _ids = ids[id.name] = ids[id.name] || [];\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n      continue;\n    }\n\n    if (t.isExportDeclaration(id)) {\n      if (t.isDeclaration(id.declaration)) {\n        search.push(id.declaration);\n      }\n      continue;\n    }\n\n    if (outerOnly) {\n      if (t.isFunctionDeclaration(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if (t.isFunctionExpression(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (id[key]) {\n          search = search.concat(id[key]);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\ngetBindingIdentifiers.keys = {\n  DeclareClass: ["id"],\n  DeclareFunction: ["id"],\n  DeclareModule: ["id"],\n  DeclareVariable: ["id"],\n  InterfaceDeclaration: ["id"],\n  TypeAlias: ["id"],\n  OpaqueType: ["id"],\n\n  CatchClause: ["param"],\n  LabeledStatement: ["label"],\n  UnaryExpression: ["argument"],\n  AssignmentExpression: ["left"],\n\n  ImportSpecifier: ["local"],\n  ImportNamespaceSpecifier: ["local"],\n  ImportDefaultSpecifier: ["local"],\n  ImportDeclaration: ["specifiers"],\n\n  ExportSpecifier: ["exported"],\n  ExportNamespaceSpecifier: ["exported"],\n  ExportDefaultSpecifier: ["exported"],\n\n  FunctionDeclaration: ["id", "params"],\n  FunctionExpression: ["id", "params"],\n\n  ClassDeclaration: ["id"],\n  ClassExpression: ["id"],\n\n  RestElement: ["argument"],\n  UpdateExpression: ["argument"],\n\n  RestProperty: ["argument"],\n  ObjectProperty: ["value"],\n\n  AssignmentPattern: ["left"],\n  ArrayPattern: ["elements"],\n  ObjectPattern: ["properties"],\n\n  VariableDeclaration: ["declarations"],\n  VariableDeclarator: ["id"]\n};\n\nfunction getOuterBindingIdentifiers(node, duplicates) {\n  return getBindingIdentifiers(node, duplicates, true);\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/retrievers.js?')},"./node_modules/babel-types/lib/validators.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _typeof2 = __webpack_require__("./node_modules/babel-runtime/helpers/typeof.js");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getIterator2 = __webpack_require__("./node_modules/babel-runtime/core-js/get-iterator.js");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.isBinding = isBinding;\nexports.isReferenced = isReferenced;\nexports.isValidIdentifier = isValidIdentifier;\nexports.isLet = isLet;\nexports.isBlockScoped = isBlockScoped;\nexports.isVar = isVar;\nexports.isSpecifierDefault = isSpecifierDefault;\nexports.isScope = isScope;\nexports.isImmutable = isImmutable;\nexports.isNodesEquivalent = isNodesEquivalent;\n\nvar _retrievers = __webpack_require__("./node_modules/babel-types/lib/retrievers.js");\n\nvar _esutils = __webpack_require__("./node_modules/esutils/lib/utils.js");\n\nvar _esutils2 = _interopRequireDefault(_esutils);\n\nvar _index = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_index);\n\nvar _constants = __webpack_require__("./node_modules/babel-types/lib/constants.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isBinding(node, parent) {\n  var keys = _retrievers.getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var val = parent[key];\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction isReferenced(node, parent) {\n  switch (parent.type) {\n    case "BindExpression":\n      return parent.object === node || parent.callee === node;\n\n    case "MemberExpression":\n    case "JSXMemberExpression":\n      if (parent.property === node && parent.computed) {\n        return true;\n      } else if (parent.object === node) {\n        return true;\n      } else {\n        return false;\n      }\n\n    case "MetaProperty":\n      return false;\n\n    case "ObjectProperty":\n      if (parent.key === node) {\n        return parent.computed;\n      }\n\n    case "VariableDeclarator":\n      return parent.id !== node;\n\n    case "ArrowFunctionExpression":\n    case "FunctionDeclaration":\n    case "FunctionExpression":\n      for (var _iterator = parent.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var param = _ref;\n\n        if (param === node) return false;\n      }\n\n      return parent.id !== node;\n\n    case "ExportSpecifier":\n      if (parent.source) {\n        return false;\n      } else {\n        return parent.local === node;\n      }\n\n    case "ExportNamespaceSpecifier":\n    case "ExportDefaultSpecifier":\n      return false;\n\n    case "JSXAttribute":\n      return parent.name !== node;\n\n    case "ClassProperty":\n      if (parent.key === node) {\n        return parent.computed;\n      } else {\n        return parent.value === node;\n      }\n\n    case "ImportDefaultSpecifier":\n    case "ImportNamespaceSpecifier":\n    case "ImportSpecifier":\n      return false;\n\n    case "ClassDeclaration":\n    case "ClassExpression":\n      return parent.id !== node;\n\n    case "ClassMethod":\n    case "ObjectMethod":\n      return parent.key === node && parent.computed;\n\n    case "LabeledStatement":\n      return false;\n\n    case "CatchClause":\n      return parent.param !== node;\n\n    case "RestElement":\n      return false;\n\n    case "AssignmentExpression":\n      return parent.right === node;\n\n    case "AssignmentPattern":\n      return parent.right === node;\n\n    case "ObjectPattern":\n    case "ArrayPattern":\n      return false;\n  }\n\n  return true;\n}\n\nfunction isValidIdentifier(name) {\n  if (typeof name !== "string" || _esutils2.default.keyword.isReservedWordES6(name, true)) {\n    return false;\n  } else if (name === "await") {\n    return false;\n  } else {\n    return _esutils2.default.keyword.isIdentifierNameES6(name);\n  }\n}\n\nfunction isLet(node) {\n  return t.isVariableDeclaration(node) && (node.kind !== "var" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}\n\nfunction isBlockScoped(node) {\n  return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);\n}\n\nfunction isVar(node) {\n  return t.isVariableDeclaration(node, { kind: "var" }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}\n\nfunction isSpecifierDefault(specifier) {\n  return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, { name: "default" });\n}\n\nfunction isScope(node, parent) {\n  if (t.isBlockStatement(node) && t.isFunction(parent, { body: node })) {\n    return false;\n  }\n\n  return t.isScopable(node);\n}\n\nfunction isImmutable(node) {\n  if (t.isType(node.type, "Immutable")) return true;\n\n  if (t.isIdentifier(node)) {\n    if (node.name === "undefined") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction isNodesEquivalent(a, b) {\n  if ((typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || (typeof a === "undefined" ? "undefined" : (0, _typeof3.default)(a)) !== "object" || a == null || b == null) {\n    return a === b;\n  }\n\n  if (a.type !== b.type) {\n    return false;\n  }\n\n  var fields = (0, _keys2.default)(t.NODE_FIELDS[a.type] || a.type);\n\n  for (var _iterator2 = fields, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var field = _ref2;\n\n    if ((0, _typeof3.default)(a[field]) !== (0, _typeof3.default)(b[field])) {\n      return false;\n    }\n\n    if (Array.isArray(a[field])) {\n      if (!Array.isArray(b[field])) {\n        return false;\n      }\n      if (a[field].length !== b[field].length) {\n        return false;\n      }\n\n      for (var i = 0; i < a[field].length; i++) {\n        if (!isNodesEquivalent(a[field][i], b[field][i])) {\n          return false;\n        }\n      }\n      continue;\n    }\n\n    if (!isNodesEquivalent(a[field], b[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n//# sourceURL=webpack:///./node_modules/babel-types/lib/validators.js?')},"./node_modules/babel-types/node_modules/to-fast-properties/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nmodule.exports = function toFastproperties(o) {\n\tfunction Sub() {}\n\tSub.prototype = o;\n\tvar receiver = new Sub(); // create an instance\n\tfunction ic() { return typeof receiver.foo; } // perform access\n\tic(); \n\tic();\n\treturn o;\n\teval("o" + o); // ensure no dead code elimination\n}\n\n\n//# sourceURL=webpack:///./node_modules/babel-types/node_modules/to-fast-properties/index.js?')},"./node_modules/babylon/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, \'__esModule\', { value: true });\n\n/* eslint max-len: 0 */\n\n// This is a trick taken from Esprima. It turns out that, on\n// non-Chrome browsers, to check whether a string is in a set, a\n// predicate containing a big ugly `switch` statement is faster than\n// a regular expression, and on Chrome the two are about on par.\n// This function uses `eval` (non-lexical) to produce such a\n// predicate from a space-separated string of words.\n//\n// It starts by sorting the words by length.\n\nfunction makePredicate(words) {\n  words = words.split(" ");\n  return function (str) {\n    return words.indexOf(str) >= 0;\n  };\n}\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  6: makePredicate("enum await"),\n  strict: makePredicate("implements interface let package private protected public static yield"),\n  strictBind: makePredicate("eval arguments")\n};\n\n// And the keywords\n\nvar isKeyword = makePredicate("break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super");\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = "\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC";\nvar nonASCIIidentifierChars = "\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA900-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F";\n\nvar nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");\nvar nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `bin/generate-identifier-regex.js`.\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 17, 26, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 26, 45, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 785, 52, 76, 44, 33, 24, 27, 35, 42, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 54, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 86, 25, 391, 63, 32, 0, 449, 56, 264, 8, 2, 36, 18, 0, 50, 29, 881, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 881, 68, 12, 0, 67, 12, 65, 0, 32, 6124, 20, 754, 9486, 1, 3071, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 4149, 196, 60, 67, 1213, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 10591, 541];\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 1306, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 52, 0, 13, 2, 49, 13, 10, 2, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 57, 0, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 87, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 423, 9, 838, 7, 2, 7, 17, 9, 57, 21, 2, 13, 19882, 9, 135, 4, 60, 6, 26, 9, 1016, 45, 17, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 2214, 6, 110, 6, 6, 9, 792487, 239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code < 91) return true;\n  if (code < 97) return code === 95;\n  if (code < 123) return true;\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\n// A second optional argument can be given to further configure\nvar defaultOptions = {\n  // Source type ("script" or "module") for different semantics\n  sourceType: "script",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n  for (var key in defaultOptions) {\n    options[key] = opts && key in opts ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== "function" && superClass !== null) {\n    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return call && (typeof call === "object" || typeof call === "function") ? call : self;\n};\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  classCallCheck(this, TokenType);\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nvar KeywordTokenType = function (_TokenType) {\n  inherits(KeywordTokenType, _TokenType);\n\n  function KeywordTokenType(name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, KeywordTokenType);\n\n    options.keyword = name;\n\n    return possibleConstructorReturn(this, _TokenType.call(this, name, options));\n  }\n\n  return KeywordTokenType;\n}(TokenType);\n\nvar BinopTokenType = function (_TokenType2) {\n  inherits(BinopTokenType, _TokenType2);\n\n  function BinopTokenType(name, prec) {\n    classCallCheck(this, BinopTokenType);\n    return possibleConstructorReturn(this, _TokenType2.call(this, name, { beforeExpr: beforeExpr, binop: prec }));\n  }\n\n  return BinopTokenType;\n}(TokenType);\n\nvar types = {\n  num: new TokenType("num", { startsExpr: startsExpr }),\n  regexp: new TokenType("regexp", { startsExpr: startsExpr }),\n  string: new TokenType("string", { startsExpr: startsExpr }),\n  name: new TokenType("name", { startsExpr: startsExpr }),\n  eof: new TokenType("eof"),\n\n  // Punctuation token types.\n  bracketL: new TokenType("[", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  bracketR: new TokenType("]"),\n  braceL: new TokenType("{", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceBarL: new TokenType("{|", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  braceR: new TokenType("}"),\n  braceBarR: new TokenType("|}"),\n  parenL: new TokenType("(", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  parenR: new TokenType(")"),\n  comma: new TokenType(",", { beforeExpr: beforeExpr }),\n  semi: new TokenType(";", { beforeExpr: beforeExpr }),\n  colon: new TokenType(":", { beforeExpr: beforeExpr }),\n  doubleColon: new TokenType("::", { beforeExpr: beforeExpr }),\n  dot: new TokenType("."),\n  question: new TokenType("?", { beforeExpr: beforeExpr }),\n  arrow: new TokenType("=>", { beforeExpr: beforeExpr }),\n  template: new TokenType("template"),\n  ellipsis: new TokenType("...", { beforeExpr: beforeExpr }),\n  backQuote: new TokenType("`", { startsExpr: startsExpr }),\n  dollarBraceL: new TokenType("${", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  at: new TokenType("@"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType("=", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  assign: new TokenType("_=", { beforeExpr: beforeExpr, isAssign: isAssign }),\n  incDec: new TokenType("++/--", { prefix: prefix, postfix: postfix, startsExpr: startsExpr }),\n  prefix: new TokenType("prefix", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  logicalOR: new BinopTokenType("||", 1),\n  logicalAND: new BinopTokenType("&&", 2),\n  bitwiseOR: new BinopTokenType("|", 3),\n  bitwiseXOR: new BinopTokenType("^", 4),\n  bitwiseAND: new BinopTokenType("&", 5),\n  equality: new BinopTokenType("==/!=", 6),\n  relational: new BinopTokenType("</>", 7),\n  bitShift: new BinopTokenType("<</>>", 8),\n  plusMin: new TokenType("+/-", { beforeExpr: beforeExpr, binop: 9, prefix: prefix, startsExpr: startsExpr }),\n  modulo: new BinopTokenType("%", 10),\n  star: new BinopTokenType("*", 10),\n  slash: new BinopTokenType("/", 10),\n  exponent: new TokenType("**", { beforeExpr: beforeExpr, binop: 11, rightAssociative: true })\n};\n\nvar keywords = {\n  "break": new KeywordTokenType("break"),\n  "case": new KeywordTokenType("case", { beforeExpr: beforeExpr }),\n  "catch": new KeywordTokenType("catch"),\n  "continue": new KeywordTokenType("continue"),\n  "debugger": new KeywordTokenType("debugger"),\n  "default": new KeywordTokenType("default", { beforeExpr: beforeExpr }),\n  "do": new KeywordTokenType("do", { isLoop: isLoop, beforeExpr: beforeExpr }),\n  "else": new KeywordTokenType("else", { beforeExpr: beforeExpr }),\n  "finally": new KeywordTokenType("finally"),\n  "for": new KeywordTokenType("for", { isLoop: isLoop }),\n  "function": new KeywordTokenType("function", { startsExpr: startsExpr }),\n  "if": new KeywordTokenType("if"),\n  "return": new KeywordTokenType("return", { beforeExpr: beforeExpr }),\n  "switch": new KeywordTokenType("switch"),\n  "throw": new KeywordTokenType("throw", { beforeExpr: beforeExpr }),\n  "try": new KeywordTokenType("try"),\n  "var": new KeywordTokenType("var"),\n  "let": new KeywordTokenType("let"),\n  "const": new KeywordTokenType("const"),\n  "while": new KeywordTokenType("while", { isLoop: isLoop }),\n  "with": new KeywordTokenType("with"),\n  "new": new KeywordTokenType("new", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  "this": new KeywordTokenType("this", { startsExpr: startsExpr }),\n  "super": new KeywordTokenType("super", { startsExpr: startsExpr }),\n  "class": new KeywordTokenType("class"),\n  "extends": new KeywordTokenType("extends", { beforeExpr: beforeExpr }),\n  "export": new KeywordTokenType("export"),\n  "import": new KeywordTokenType("import", { startsExpr: startsExpr }),\n  "yield": new KeywordTokenType("yield", { beforeExpr: beforeExpr, startsExpr: startsExpr }),\n  "null": new KeywordTokenType("null", { startsExpr: startsExpr }),\n  "true": new KeywordTokenType("true", { startsExpr: startsExpr }),\n  "false": new KeywordTokenType("false", { startsExpr: startsExpr }),\n  "in": new KeywordTokenType("in", { beforeExpr: beforeExpr, binop: 7 }),\n  "instanceof": new KeywordTokenType("instanceof", { beforeExpr: beforeExpr, binop: 7 }),\n  "typeof": new KeywordTokenType("typeof", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  "void": new KeywordTokenType("void", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr }),\n  "delete": new KeywordTokenType("delete", { beforeExpr: beforeExpr, prefix: prefix, startsExpr: startsExpr })\n};\n\n// Map keyword names to token types.\nObject.keys(keywords).forEach(function (name) {\n  types["_" + name] = keywords[name];\n});\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, "g");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029;\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js\' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  classCallCheck(this, TokContext);\n\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nvar types$1 = {\n  braceStatement: new TokContext("{", false),\n  braceExpression: new TokContext("{", true),\n  templateQuasi: new TokContext("${", true),\n  parenStatement: new TokContext("(", false),\n  parenExpression: new TokContext("(", true),\n  template: new TokContext("`", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  functionExpression: new TokContext("function", true)\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  var out = this.state.context.pop();\n  if (out === types$1.braceStatement && this.curContext() === types$1.functionExpression) {\n    this.state.context.pop();\n    this.state.exprAllowed = false;\n  } else if (out === types$1.templateQuasi) {\n    this.state.exprAllowed = true;\n  } else {\n    this.state.exprAllowed = !out.isExpr;\n  }\n};\n\ntypes.name.updateContext = function (prevType) {\n  this.state.exprAllowed = false;\n\n  if (prevType === types._let || prevType === types._const || prevType === types._var) {\n    if (lineBreak.test(this.input.slice(this.state.end))) {\n      this.state.exprAllowed = true;\n    }\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = function () {\n  if (this.curContext() !== types$1.braceStatement) {\n    this.state.context.push(types$1.functionExpression);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  classCallCheck(this, Position);\n\n  this.line = line;\n  this.column = col;\n};\n\nvar SourceLocation = function SourceLocation(start, end) {\n  classCallCheck(this, SourceLocation);\n\n  this.start = start;\n  this.end = end;\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n}\n\nvar State = function () {\n  function State() {\n    classCallCheck(this, State);\n  }\n\n  State.prototype.init = function init(options, input) {\n    this.strict = options.strictMode === false ? false : options.sourceType === "module";\n\n    this.input = input;\n\n    this.potentialArrowAt = -1;\n\n    this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inPropertyName = this.inType = this.inClassProperty = this.noAnonFunctionType = false;\n\n    this.labels = [];\n\n    this.decorators = [];\n\n    this.tokens = [];\n\n    this.comments = [];\n\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n\n    this.pos = this.lineStart = 0;\n    this.curLine = options.startLine;\n\n    this.type = types.eof;\n    this.value = null;\n    this.start = this.end = this.pos;\n    this.startLoc = this.endLoc = this.curPosition();\n\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n\n    this.containsEsc = this.containsOctal = false;\n    this.octalPosition = null;\n\n    this.invalidTemplateEscapePosition = null;\n\n    this.exportedIdentifiers = [];\n\n    return this;\n  };\n\n  // TODO\n\n\n  // TODO\n\n\n  // Used to signify the start of a potential arrow function\n\n\n  // Flags to track whether we are in a function, a generator.\n\n\n  // Labels in scope.\n\n\n  // Leading decorators.\n\n\n  // Token store.\n\n\n  // Comment store.\n\n\n  // Comment attachment store\n\n\n  // The current position of the tokenizer in the input.\n\n\n  // Properties of the current token:\n  // Its type\n\n\n  // For tokens that include more information than their type, the value\n\n\n  // Its start and end offset\n\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n\n\n  // Position information for the previous token\n\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n\n  // TODO\n\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n\n\n  State.prototype.curPosition = function curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  };\n\n  State.prototype.clone = function clone(skipArrays) {\n    var state = new State();\n    for (var key in this) {\n      var val = this[key];\n\n      if ((!skipArrays || key === "context") && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n    return state;\n  };\n\n  return State;\n}();\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(state) {\n  classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n};\n\n// ## Tokenizer\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  } else {\n    return String.fromCharCode((code - 0x10000 >> 10) + 0xD800, (code - 0x10000 & 1023) + 0xDC00);\n  }\n}\n\nvar Tokenizer = function () {\n  function Tokenizer(options, input) {\n    classCallCheck(this, Tokenizer);\n\n    this.state = new State();\n    this.state.init(options, input);\n  }\n\n  // Move to the next token\n\n  Tokenizer.prototype.next = function next() {\n    if (!this.isLookahead) {\n      this.state.tokens.push(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  };\n\n  // TODO\n\n  Tokenizer.prototype.eat = function eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // TODO\n\n  Tokenizer.prototype.match = function match(type) {\n    return this.state.type === type;\n  };\n\n  // TODO\n\n  Tokenizer.prototype.isKeyword = function isKeyword$$1(word) {\n    return isKeyword(word);\n  };\n\n  // TODO\n\n  Tokenizer.prototype.lookahead = function lookahead() {\n    var old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    var curr = this.state.clone(true);\n    this.state = old;\n    return curr;\n  };\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`"use strict"; 010;` should fail).\n\n  Tokenizer.prototype.setStrict = function setStrict(strict) {\n    this.state.strict = strict;\n    if (!this.match(types.num) && !this.match(types.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart = this.input.lastIndexOf("\\n", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  };\n\n  Tokenizer.prototype.curContext = function curContext() {\n    return this.state.context[this.state.context.length - 1];\n  };\n\n  // Read a single token, updating the parser object\'s token-related\n  // properties.\n\n  Tokenizer.prototype.nextToken = function nextToken() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) this.skipSpace();\n\n    this.state.containsOctal = false;\n    this.state.octalPosition = null;\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.input.length) return this.finishToken(types.eof);\n\n    if (curContext.override) {\n      return curContext.override(this);\n    } else {\n      return this.readToken(this.fullCharCodeAtPos());\n    }\n  };\n\n  Tokenizer.prototype.readToken = function readToken(code) {\n    // Identifier or keyword. \'\\uXXXX\' sequences are allowed in\n    // identifiers, so \'\\\' also dispatches to that.\n    if (isIdentifierStart(code) || code === 92 /* \'\\\' */) {\n        return this.readWord();\n      } else {\n      return this.getTokenFromCode(code);\n    }\n  };\n\n  Tokenizer.prototype.fullCharCodeAtPos = function fullCharCodeAtPos() {\n    var code = this.input.charCodeAt(this.state.pos);\n    if (code <= 0xd7ff || code >= 0xe000) return code;\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    return (code << 10) + next - 0x35fdc00;\n  };\n\n  Tokenizer.prototype.pushComment = function pushComment(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? "CommentBlock" : "CommentLine",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n\n    if (!this.isLookahead) {\n      this.state.tokens.push(comment);\n      this.state.comments.push(comment);\n      this.addComment(comment);\n    }\n  };\n\n  Tokenizer.prototype.skipBlockComment = function skipBlockComment() {\n    var startLoc = this.state.curPosition();\n    var start = this.state.pos;\n    var end = this.input.indexOf("*/", this.state.pos += 2);\n    if (end === -1) this.raise(this.state.pos - 2, "Unterminated comment");\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    var match = void 0;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  Tokenizer.prototype.skipLineComment = function skipLineComment(startSkip) {\n    var start = this.state.pos;\n    var startLoc = this.state.curPosition();\n    var ch = this.input.charCodeAt(this.state.pos += startSkip);\n    while (this.state.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n      ++this.state.pos;\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  Tokenizer.prototype.skipSpace = function skipSpace() {\n    loop: while (this.state.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:case 160:\n          // \' \'\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:case 8232:case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          // \'/\'\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              // \'*\'\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one\'s `start` will point at the\n  // right position.\n\n  Tokenizer.prototype.finishToken = function finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    var prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n\n\n  Tokenizer.prototype.readToken_dot = function readToken_dot() {\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      return this.readNumber(true);\n    }\n\n    var next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 46 && next2 === 46) {\n      // 46 = dot \'.\'\n      this.state.pos += 3;\n      return this.finishToken(types.ellipsis);\n    } else {\n      ++this.state.pos;\n      return this.finishToken(types.dot);\n    }\n  };\n\n  Tokenizer.prototype.readToken_slash = function readToken_slash() {\n    // \'/\'\n    if (this.state.exprAllowed) {\n      ++this.state.pos;\n      return this.readRegexp();\n    }\n\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.slash, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_mult_modulo = function readToken_mult_modulo(code) {\n    // \'%*\'\n    var type = code === 42 ? types.star : types.modulo;\n    var width = 1;\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 42) {\n      // \'*\'\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types.exponent;\n    }\n\n    if (next === 61) {\n      width++;\n      type = types.assign;\n    }\n\n    return this.finishOp(type, width);\n  };\n\n  Tokenizer.prototype.readToken_pipe_amp = function readToken_pipe_amp(code) {\n    // \'|&\'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n    if (next === 61) return this.finishOp(types.assign, 2);\n    if (code === 124 && next === 125 && this.hasPlugin("flow")) return this.finishOp(types.braceBarR, 2);\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n  };\n\n  Tokenizer.prototype.readToken_caret = function readToken_caret() {\n    // \'^\'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.bitwiseXOR, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_plus_min = function readToken_plus_min(code) {\n    // \'+-\'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && this.input.charCodeAt(this.state.pos + 2) === 62 && lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.pos))) {\n        // A `--\x3e` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken();\n      }\n      return this.finishOp(types.incDec, 2);\n    }\n\n    if (next === 61) {\n      return this.finishOp(types.assign, 2);\n    } else {\n      return this.finishOp(types.plusMin, 1);\n    }\n  };\n\n  Tokenizer.prototype.readToken_lt_gt = function readToken_lt_gt(code) {\n    // \'<>\'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    var size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === 61) return this.finishOp(types.assign, size + 1);\n      return this.finishOp(types.bitShift, size);\n    }\n\n    if (next === 33 && code === 60 && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      if (this.inModule) this.unexpected();\n      // `\x3c!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    if (next === 61) {\n      // <= | >=\n      size = 2;\n    }\n\n    return this.finishOp(types.relational, size);\n  };\n\n  Tokenizer.prototype.readToken_eq_excl = function readToken_eq_excl(code) {\n    // \'=!\'\n    var next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) return this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n    if (code === 61 && next === 62) {\n      // \'=>\'\n      this.state.pos += 2;\n      return this.finishToken(types.arrow);\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n  };\n\n  Tokenizer.prototype.getTokenFromCode = function getTokenFromCode(code) {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n      case 46:\n        // \'.\'\n        return this.readToken_dot();\n\n      // Punctuation tokens.\n      case 40:\n        ++this.state.pos;return this.finishToken(types.parenL);\n      case 41:\n        ++this.state.pos;return this.finishToken(types.parenR);\n      case 59:\n        ++this.state.pos;return this.finishToken(types.semi);\n      case 44:\n        ++this.state.pos;return this.finishToken(types.comma);\n      case 91:\n        ++this.state.pos;return this.finishToken(types.bracketL);\n      case 93:\n        ++this.state.pos;return this.finishToken(types.bracketR);\n\n      case 123:\n        if (this.hasPlugin("flow") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          return this.finishOp(types.braceBarL, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.braceL);\n        }\n\n      case 125:\n        ++this.state.pos;return this.finishToken(types.braceR);\n\n      case 58:\n        if (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          return this.finishOp(types.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          return this.finishToken(types.colon);\n        }\n\n      case 63:\n        ++this.state.pos;return this.finishToken(types.question);\n      case 64:\n        ++this.state.pos;return this.finishToken(types.at);\n\n      case 96:\n        // \'`\'\n        ++this.state.pos;\n        return this.finishToken(types.backQuote);\n\n      case 48:\n        // \'0\'\n        var next = this.input.charCodeAt(this.state.pos + 1);\n        if (next === 120 || next === 88) return this.readRadixNumber(16); // \'0x\', \'0X\' - hex number\n        if (next === 111 || next === 79) return this.readRadixNumber(8); // \'0o\', \'0O\' - octal number\n        if (next === 98 || next === 66) return this.readRadixNumber(2); // \'0b\', \'0B\' - binary number\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float.\n      case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:\n        // 1-9\n        return this.readNumber(false);\n\n      // Quotes produce strings.\n      case 34:case 39:\n        // \'"\', "\'"\n        return this.readString(code);\n\n      // Operators are parsed inline in tiny state machines. \'=\' (61) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case 47:\n        // \'/\'\n        return this.readToken_slash();\n\n      case 37:case 42:\n        // \'%*\'\n        return this.readToken_mult_modulo(code);\n\n      case 124:case 38:\n        // \'|&\'\n        return this.readToken_pipe_amp(code);\n\n      case 94:\n        // \'^\'\n        return this.readToken_caret();\n\n      case 43:case 45:\n        // \'+-\'\n        return this.readToken_plus_min(code);\n\n      case 60:case 62:\n        // \'<>\'\n        return this.readToken_lt_gt(code);\n\n      case 61:case 33:\n        // \'=!\'\n        return this.readToken_eq_excl(code);\n\n      case 126:\n        // \'~\'\n        return this.finishOp(types.prefix, 1);\n    }\n\n    this.raise(this.state.pos, "Unexpected character \'" + codePointToString(code) + "\'");\n  };\n\n  Tokenizer.prototype.finishOp = function finishOp(type, size) {\n    var str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    return this.finishToken(type, str);\n  };\n\n  Tokenizer.prototype.readRegexp = function readRegexp() {\n    var start = this.state.pos;\n    var escaped = void 0,\n        inClass = void 0;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(start, "Unterminated regular expression");\n      var ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        this.raise(start, "Unterminated regular expression");\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === "[") {\n          inClass = true;\n        } else if (ch === "]" && inClass) {\n          inClass = false;\n        } else if (ch === "/" && !inClass) {\n          break;\n        }\n        escaped = ch === "\\\\";\n      }\n      ++this.state.pos;\n    }\n    var content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n    // Need to use `readWord1` because \'\\uXXXX\' sequences are allowed\n    // here (don\'t ask).\n    var mods = this.readWord1();\n    if (mods) {\n      var validFlags = /^[gmsiyu]*$/;\n      if (!validFlags.test(mods)) this.raise(start, "Invalid regular expression flag");\n    }\n    return this.finishToken(types.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  Tokenizer.prototype.readInt = function readInt(radix, len) {\n    var start = this.state.pos;\n    var total = 0;\n\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      var code = this.input.charCodeAt(this.state.pos);\n      var val = void 0;\n      if (code >= 97) {\n        val = code - 97 + 10; // a\n      } else if (code >= 65) {\n        val = code - 65 + 10; // A\n      } else if (code >= 48 && code <= 57) {\n        val = code - 48; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) break;\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (this.state.pos === start || len != null && this.state.pos - start !== len) return null;\n\n    return total;\n  };\n\n  Tokenizer.prototype.readRadixNumber = function readRadixNumber(radix) {\n    this.state.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) this.raise(this.state.start + 2, "Expected number in radix " + radix);\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");\n    return this.finishToken(types.num, val);\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  Tokenizer.prototype.readNumber = function readNumber(startsWithDot) {\n    var start = this.state.pos;\n    var octal = this.input.charCodeAt(start) === 48; // \'0\'\n    var isFloat = false;\n\n    if (!startsWithDot && this.readInt(10) === null) this.raise(start, "Invalid number");\n    if (octal && this.state.pos == start + 1) octal = false; // number === 0\n\n    var next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !octal) {\n      // \'.\'\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !octal) {\n      // \'eE\'\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) ++this.state.pos; // \'+-\'\n      if (this.readInt(10) === null) this.raise(start, "Invalid number");\n      isFloat = true;\n    }\n\n    if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.state.pos, "Identifier directly after number");\n\n    var str = this.input.slice(start, this.state.pos);\n    var val = void 0;\n    if (isFloat) {\n      val = parseFloat(str);\n    } else if (!octal || str.length === 1) {\n      val = parseInt(str, 10);\n    } else if (this.state.strict) {\n      this.raise(start, "Invalid number");\n    } else if (/[89]/.test(str)) {\n      val = parseInt(str, 10);\n    } else {\n      val = parseInt(str, 8);\n    }\n    return this.finishToken(types.num, val);\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  Tokenizer.prototype.readCodePoint = function readCodePoint(throwOnInvalid) {\n    var ch = this.input.charCodeAt(this.state.pos);\n    var code = void 0;\n\n    if (ch === 123) {\n      // \'{\'\n      var codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, throwOnInvalid);\n      ++this.state.pos;\n      if (code === null) {\n        --this.state.invalidTemplateEscapePosition; // to point to the \'\\\'\' instead of the \'u\'\n      } else if (code > 0x10FFFF) {\n        if (throwOnInvalid) {\n          this.raise(codePos, "Code point out of bounds");\n        } else {\n          this.state.invalidTemplateEscapePosition = codePos - 2;\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, throwOnInvalid);\n    }\n    return code;\n  };\n\n  Tokenizer.prototype.readString = function readString(quote) {\n    var out = "",\n        chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated string constant");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 92) {\n        // \'\\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else {\n        if (isNewLine(ch)) this.raise(this.state.start, "Unterminated string constant");\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types.string, out);\n  };\n\n  // Reads template string tokens.\n\n  Tokenizer.prototype.readTmplToken = function readTmplToken() {\n    var out = "",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.input.length) this.raise(this.state.start, "Unterminated template");\n      var ch = this.input.charCodeAt(this.state.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        // \'`\', \'${\'\n        if (this.state.pos === this.state.start && this.match(types.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            return this.finishToken(types.dollarBraceL);\n          } else {\n            ++this.state.pos;\n            return this.finishToken(types.backQuote);\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.template, containsInvalid ? null : out);\n      }\n      if (ch === 92) {\n        // \'\\\'\n        out += this.input.slice(chunkStart, this.state.pos);\n        var escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos;\n          case 10:\n            out += "\\n";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  };\n\n  // Used to read escaped characters\n\n  Tokenizer.prototype.readEscapedChar = function readEscapedChar(inTemplate) {\n    var throwOnInvalid = !inTemplate;\n    var ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case 110:\n        return "\\n"; // \'n\' -> \'\\n\'\n      case 114:\n        return "\\r"; // \'r\' -> \'\\r\'\n      case 120:\n        {\n          // \'x\'\n          var code = this.readHexChar(2, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n      case 117:\n        {\n          // \'u\'\n          var _code = this.readCodePoint(throwOnInvalid);\n          return _code === null ? null : codePointToString(_code);\n        }\n      case 116:\n        return "\\t"; // \'t\' -> \'\\t\'\n      case 98:\n        return "\\b"; // \'b\' -> \'\\b\'\n      case 118:\n        return "\\x0B"; // \'v\' -> \'\\u000b\'\n      case 102:\n        return "\\f"; // \'f\' -> \'\\f\'\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) ++this.state.pos; // \'\\r\\n\'\n      case 10:\n        // \' \\n\'\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n        return "";\n      default:\n        if (ch >= 48 && ch <= 55) {\n          var codePos = this.state.pos - 1;\n          var octalStr = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0];\n          var octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          if (octal > 0) {\n            if (inTemplate) {\n              this.state.invalidTemplateEscapePosition = codePos;\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, "Octal literal in strict mode");\n            } else if (!this.state.containsOctal) {\n              // These properties are only used to throw an error for an octal which occurs\n              // in a directive which occurs prior to a "use strict" directive.\n              this.state.containsOctal = true;\n              this.state.octalPosition = codePos;\n            }\n          }\n          this.state.pos += octalStr.length - 1;\n          return String.fromCharCode(octal);\n        }\n        return String.fromCharCode(ch);\n    }\n  };\n\n  // Used to read character escape sequences (\'\\x\', \'\\u\').\n\n  Tokenizer.prototype.readHexChar = function readHexChar(len, throwOnInvalid) {\n    var codePos = this.state.pos;\n    var n = this.readInt(16, len);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, "Bad character escape sequence");\n      } else {\n        this.state.pos = codePos - 1;\n        this.state.invalidTemplateEscapePosition = codePos - 1;\n      }\n    }\n    return n;\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a \'\\u\' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  Tokenizer.prototype.readWord1 = function readWord1() {\n    this.state.containsEsc = false;\n    var word = "",\n        first = true,\n        chunkStart = this.state.pos;\n    while (this.state.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        // "\\"\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        var escStart = this.state.pos;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          // "u"\n          this.raise(this.state.pos, "Expecting Unicode escape sequence \\\\uXXXX");\n        }\n\n        ++this.state.pos;\n        var esc = this.readCodePoint(true);\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, true)) {\n          this.raise(escStart, "Invalid Unicode escape");\n        }\n\n        word += codePointToString(esc);\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  Tokenizer.prototype.readWord = function readWord() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (!this.state.containsEsc && this.isKeyword(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word);\n  };\n\n  Tokenizer.prototype.braceIsBlock = function braceIsBlock(prevType) {\n    if (prevType === types.colon) {\n      var parent = this.curContext();\n      if (parent === types$1.braceStatement || parent === types$1.braceExpression) {\n        return !parent.isExpr;\n      }\n    }\n\n    if (prevType === types._return) {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR) {\n      return true;\n    }\n\n    if (prevType === types.braceL) {\n      return this.curContext() === types$1.braceStatement;\n    }\n\n    return !this.state.exprAllowed;\n  };\n\n  Tokenizer.prototype.updateContext = function updateContext(prevType) {\n    var type = this.state.type;\n    var update = void 0;\n\n    if (type.keyword && prevType === types.dot) {\n      this.state.exprAllowed = false;\n    } else if (update = type.updateContext) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  };\n\n  return Tokenizer;\n}();\n\nvar plugins = {};\nvar frozenDeprecatedWildcardPluginList = ["jsx", "doExpressions", "objectRestSpread", "decorators", "classProperties", "exportExtensions", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "flow"];\n\nvar Parser = function (_Tokenizer) {\n  inherits(Parser, _Tokenizer);\n\n  function Parser(options, input) {\n    classCallCheck(this, Parser);\n\n    options = getOptions(options);\n\n    var _this = possibleConstructorReturn(this, _Tokenizer.call(this, options, input));\n\n    _this.options = options;\n    _this.inModule = _this.options.sourceType === "module";\n    _this.input = input;\n    _this.plugins = _this.loadPlugins(_this.options.plugins);\n    _this.filename = options.sourceFilename;\n\n    // If enabled, skip leading hashbang line.\n    if (_this.state.pos === 0 && _this.input[0] === "#" && _this.input[1] === "!") {\n      _this.skipLineComment(2);\n    }\n    return _this;\n  }\n\n  Parser.prototype.isReservedWord = function isReservedWord(word) {\n    if (word === "await") {\n      return this.inModule;\n    } else {\n      return reservedWords[6](word);\n    }\n  };\n\n  Parser.prototype.hasPlugin = function hasPlugin(name) {\n    if (this.plugins["*"] && frozenDeprecatedWildcardPluginList.indexOf(name) > -1) {\n      return true;\n    }\n\n    return !!this.plugins[name];\n  };\n\n  Parser.prototype.extend = function extend(name, f) {\n    this[name] = f(this[name]);\n  };\n\n  Parser.prototype.loadAllPlugins = function loadAllPlugins() {\n    var _this2 = this;\n\n    // ensure flow plugin loads last, also ensure estree is not loaded with *\n    var pluginNames = Object.keys(plugins).filter(function (name) {\n      return name !== "flow" && name !== "estree";\n    });\n    pluginNames.push("flow");\n\n    pluginNames.forEach(function (name) {\n      var plugin = plugins[name];\n      if (plugin) plugin(_this2);\n    });\n  };\n\n  Parser.prototype.loadPlugins = function loadPlugins(pluginList) {\n    // TODO: Deprecate "*" option in next major version of Babylon\n    if (pluginList.indexOf("*") >= 0) {\n      this.loadAllPlugins();\n\n      return { "*": true };\n    }\n\n    var pluginMap = {};\n\n    if (pluginList.indexOf("flow") >= 0) {\n      // ensure flow plugin loads last\n      pluginList = pluginList.filter(function (plugin) {\n        return plugin !== "flow";\n      });\n      pluginList.push("flow");\n    }\n\n    if (pluginList.indexOf("estree") >= 0) {\n      // ensure estree plugin loads first\n      pluginList = pluginList.filter(function (plugin) {\n        return plugin !== "estree";\n      });\n      pluginList.unshift("estree");\n    }\n\n    for (var _iterator = pluginList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var name = _ref;\n\n      if (!pluginMap[name]) {\n        pluginMap[name] = true;\n\n        var plugin = plugins[name];\n        if (plugin) plugin(this);\n      }\n    }\n\n    return pluginMap;\n  };\n\n  Parser.prototype.parse = function parse() {\n    var file = this.startNode();\n    var program = this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(file, program);\n  };\n\n  return Parser;\n}(Tokenizer);\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\n// TODO\n\npp.addExtra = function (node, key, val) {\n  if (!node) return;\n\n  var extra = node.extra = node.extra || {};\n  extra[key] = val;\n};\n\n// TODO\n\npp.isRelational = function (op) {\n  return this.match(types.relational) && this.state.value === op;\n};\n\n// TODO\n\npp.expectRelational = function (op) {\n  if (this.isRelational(op)) {\n    this.next();\n  } else {\n    this.unexpected(null, types.relational);\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function (name) {\n  return this.match(types.name) && this.state.value === name;\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function (name) {\n  return this.state.value === name && this.eat(types.name);\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function (name, message) {\n  if (!this.eatContextual(name)) this.unexpected(null, message);\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function () {\n  return this.match(types.eof) || this.match(types.braceR) || lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n};\n\n// TODO\n\npp.isLineTerminator = function () {\n  return this.eat(types.semi) || this.canInsertSemicolon();\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function () {\n  if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error at given pos.\n\npp.expect = function (type, pos) {\n  return this.eat(type) || this.unexpected(pos, type);\n};\n\n// Raise an unexpected token error. Can take the expected token type\n// instead of a message string.\n\npp.unexpected = function (pos) {\n  var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Unexpected token";\n\n  if (messageOrType && (typeof messageOrType === "undefined" ? "undefined" : _typeof(messageOrType)) === "object" && messageOrType.label) {\n    messageOrType = "Unexpected token, expected " + messageOrType.label;\n  }\n  this.raise(pos != null ? pos : this.state.start, messageOrType);\n};\n\n/* eslint max-len: 0 */\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (file, program) {\n  program.sourceType = this.options.sourceType;\n\n  this.parseBlockBody(program, true, true, types.eof);\n\n  file.program = this.finishNode(program, "Program");\n  file.comments = this.state.comments;\n  file.tokens = this.state.tokens;\n\n  return this.finishNode(file, "File");\n};\n\nvar loopLabel = { kind: "loop" };\nvar switchLabel = { kind: "switch" };\n\n// TODO\n\npp$1.stmtToDirective = function (stmt) {\n  var expr = stmt.expression;\n\n  var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n  var directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n  var raw = this.input.slice(expr.start, expr.end);\n  var val = directiveLiteral.value = raw.slice(1, -1); // remove quotes\n\n  this.addExtra(directiveLiteral, "raw", raw);\n  this.addExtra(directiveLiteral, "rawValue", val);\n\n  directive.value = this.finishNodeAt(directiveLiteral, "DirectiveLiteral", expr.end, expr.loc.end);\n\n  return this.finishNodeAt(directive, "Directive", stmt.end, stmt.loc.end);\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function (declaration, topLevel) {\n  if (this.match(types.at)) {\n    this.parseDecorators(true);\n  }\n\n  var starttype = this.state.type;\n  var node = this.startNode();\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n    case types._break:case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n    case types._do:\n      return this.parseDoStatement(node);\n    case types._for:\n      return this.parseForStatement(node);\n    case types._function:\n      if (!declaration) this.unexpected();\n      return this.parseFunctionStatement(node);\n\n    case types._class:\n      if (!declaration) this.unexpected();\n      return this.parseClass(node, true);\n\n    case types._if:\n      return this.parseIfStatement(node);\n    case types._return:\n      return this.parseReturnStatement(node);\n    case types._switch:\n      return this.parseSwitchStatement(node);\n    case types._throw:\n      return this.parseThrowStatement(node);\n    case types._try:\n      return this.parseTryStatement(node);\n\n    case types._let:\n    case types._const:\n      if (!declaration) this.unexpected(); // NOTE: falls through to _var\n\n    case types._var:\n      return this.parseVarStatement(node, starttype);\n\n    case types._while:\n      return this.parseWhileStatement(node);\n    case types._with:\n      return this.parseWithStatement(node);\n    case types.braceL:\n      return this.parseBlock();\n    case types.semi:\n      return this.parseEmptyStatement(node);\n    case types._export:\n    case types._import:\n      if (this.hasPlugin("dynamicImport") && this.lookahead().type === types.parenL) break;\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.state.start, "\'import\' and \'export\' may only appear at the top level");\n        }\n\n        if (!this.inModule) {\n          this.raise(this.state.start, "\'import\' and \'export\' may appear only with \'sourceType: \\"module\\"\'");\n        }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node);\n\n    case types.name:\n      if (this.state.value === "async") {\n        // peek ahead and see if next token is a function\n        var state = this.state.clone();\n        this.next();\n        if (this.match(types._function) && !this.canInsertSemicolon()) {\n          this.expect(types._function);\n          return this.parseFunction(node, true, false, true);\n        } else {\n          this.state = state;\n        }\n      }\n  }\n\n  // If the statement does not start with a statement keyword or a\n  // brace, it\'s an ExpressionStatement or LabeledStatement. We\n  // simply start parsing an expression, and afterwards, if the\n  // next token is a colon and the expression was a simple\n  // Identifier node, we switch to interpreting it as a label.\n  var maybeName = this.state.value;\n  var expr = this.parseExpression();\n\n  if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {\n    return this.parseLabeledStatement(node, maybeName, expr);\n  } else {\n    return this.parseExpressionStatement(node, expr);\n  }\n};\n\npp$1.takeDecorators = function (node) {\n  if (this.state.decorators.length) {\n    node.decorators = this.state.decorators;\n    this.state.decorators = [];\n  }\n};\n\npp$1.parseDecorators = function (allowExport) {\n  while (this.match(types.at)) {\n    var decorator = this.parseDecorator();\n    this.state.decorators.push(decorator);\n  }\n\n  if (allowExport && this.match(types._export)) {\n    return;\n  }\n\n  if (!this.match(types._class)) {\n    this.raise(this.state.start, "Leading decorators must be attached to a class declaration");\n  }\n};\n\npp$1.parseDecorator = function () {\n  if (!this.hasPlugin("decorators")) {\n    this.unexpected();\n  }\n  var node = this.startNode();\n  this.next();\n  node.expression = this.parseMaybeAssign();\n  return this.finishNode(node, "Decorator");\n};\n\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword === "break";\n  this.next();\n\n  if (this.isLineTerminator()) {\n    node.label = null;\n  } else if (!this.match(types.name)) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdentifier();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = void 0;\n  for (i = 0; i < this.state.labels.length; ++i) {\n    var lab = this.state.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === "loop")) break;\n      if (node.label && isBreak) break;\n    }\n  }\n  if (i === this.state.labels.length) this.raise(node.start, "Unsyntactic " + keyword);\n  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");\n};\n\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, "DebuggerStatement");\n};\n\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  this.eat(types.semi);\n  return this.finishNode(node, "DoWhileStatement");\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  this.state.labels.push(loopLabel);\n\n  var forAwait = false;\n  if (this.hasPlugin("asyncGenerators") && this.state.inAsync && this.isContextual("await")) {\n    forAwait = true;\n    this.next();\n  }\n  this.expect(types.parenL);\n\n  if (this.match(types.semi)) {\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, null);\n  }\n\n  if (this.match(types._var) || this.match(types._let) || this.match(types._const)) {\n    var _init = this.startNode();\n    var varKind = this.state.type;\n    this.next();\n    this.parseVar(_init, true, varKind);\n    this.finishNode(_init, "VariableDeclaration");\n\n    if (this.match(types._in) || this.isContextual("of")) {\n      if (_init.declarations.length === 1 && !_init.declarations[0].init) {\n        return this.parseForIn(node, _init, forAwait);\n      }\n    }\n    if (forAwait) {\n      this.unexpected();\n    }\n    return this.parseFor(node, _init);\n  }\n\n  var refShorthandDefaultPos = { start: 0 };\n  var init = this.parseExpression(true, refShorthandDefaultPos);\n  if (this.match(types._in) || this.isContextual("of")) {\n    var description = this.isContextual("of") ? "for-of statement" : "for-in statement";\n    this.toAssignable(init, undefined, description);\n    this.checkLVal(init, undefined, undefined, description);\n    return this.parseForIn(node, init, forAwait);\n  } else if (refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n  if (forAwait) {\n    this.unexpected();\n  }\n  return this.parseFor(node, init);\n};\n\npp$1.parseFunctionStatement = function (node) {\n  this.next();\n  return this.parseFunction(node, true);\n};\n\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  node.consequent = this.parseStatement(false);\n  node.alternate = this.eat(types._else) ? this.parseStatement(false) : null;\n  return this.finishNode(node, "IfStatement");\n};\n\npp$1.parseReturnStatement = function (node) {\n  if (!this.state.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.state.start, "\'return\' outside of function");\n  }\n\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.isLineTerminator()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n\n  return this.finishNode(node, "ReturnStatement");\n};\n\npp$1.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.state.labels.push(switchLabel);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur = void 0;\n  for (var sawDefault; !this.match(types.braceR);) {\n    if (this.match(types._case) || this.match(types._default)) {\n      var isCase = this.match(types._case);\n      if (cur) this.finishNode(cur, "SwitchCase");\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) this.raise(this.state.lastTokStart, "Multiple default clauses");\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types.colon);\n    } else {\n      if (cur) {\n        cur.consequent.push(this.parseStatement(true));\n      } else {\n        this.unexpected();\n      }\n    }\n  }\n  if (cur) this.finishNode(cur, "SwitchCase");\n  this.next(); // Closing brace\n  this.state.labels.pop();\n  return this.finishNode(node, "SwitchStatement");\n};\n\npp$1.parseThrowStatement = function (node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))) this.raise(this.state.lastTokEnd, "Illegal newline after throw");\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, "ThrowStatement");\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function (node) {\n  this.next();\n\n  node.block = this.parseBlock();\n  node.handler = null;\n\n  if (this.match(types._catch)) {\n    var clause = this.startNode();\n    this.next();\n\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.checkLVal(clause.param, true, Object.create(null), "catch clause");\n    this.expect(types.parenR);\n\n    clause.body = this.parseBlock();\n    node.handler = this.finishNode(clause, "CatchClause");\n  }\n\n  node.guardedHandlers = empty;\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, "Missing catch or finally clause");\n  }\n\n  return this.finishNode(node, "TryStatement");\n};\n\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, "VariableDeclaration");\n};\n\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.state.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, "WhileStatement");\n};\n\npp$1.parseWithStatement = function (node) {\n  if (this.state.strict) this.raise(this.state.start, "\'with\' in strict mode");\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, "WithStatement");\n};\n\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, "EmptyStatement");\n};\n\npp$1.parseLabeledStatement = function (node, maybeName, expr) {\n  for (var _iterator = this.state.labels, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _label = _ref;\n\n    if (_label.name === maybeName) {\n      this.raise(expr.start, "Label \'" + maybeName + "\' is already declared");\n    }\n  }\n\n  var kind = this.state.type.isLoop ? "loop" : this.match(types._switch) ? "switch" : null;\n  for (var i = this.state.labels.length - 1; i >= 0; i--) {\n    var label = this.state.labels[i];\n    if (label.statementStart === node.start) {\n      label.statementStart = this.state.start;\n      label.kind = kind;\n    } else {\n      break;\n    }\n  }\n\n  this.state.labels.push({ name: maybeName, kind: kind, statementStart: this.state.start });\n  node.body = this.parseStatement(true);\n  this.state.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, "LabeledStatement");\n};\n\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, "ExpressionStatement");\n};\n\n// Parse a semicolon-enclosed block of statements, handling `"use\n// strict"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function (allowDirectives) {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.parseBlockBody(node, allowDirectives, false, types.braceR);\n  return this.finishNode(node, "BlockStatement");\n};\n\npp$1.isValidDirective = function (stmt) {\n  return stmt.type === "ExpressionStatement" && stmt.expression.type === "StringLiteral" && !stmt.expression.extra.parenthesized;\n};\n\npp$1.parseBlockBody = function (node, allowDirectives, topLevel, end) {\n  node.body = [];\n  node.directives = [];\n\n  var parsedNonDirective = false;\n  var oldStrict = void 0;\n  var octalPosition = void 0;\n\n  while (!this.eat(end)) {\n    if (!parsedNonDirective && this.state.containsOctal && !octalPosition) {\n      octalPosition = this.state.octalPosition;\n    }\n\n    var stmt = this.parseStatement(true, topLevel);\n\n    if (allowDirectives && !parsedNonDirective && this.isValidDirective(stmt)) {\n      var directive = this.stmtToDirective(stmt);\n      node.directives.push(directive);\n\n      if (oldStrict === undefined && directive.value.value === "use strict") {\n        oldStrict = this.state.strict;\n        this.setStrict(true);\n\n        if (octalPosition) {\n          this.raise(octalPosition, "Octal literal in strict mode");\n        }\n      }\n\n      continue;\n    }\n\n    parsedNonDirective = true;\n    node.body.push(stmt);\n  }\n\n  if (oldStrict === false) {\n    this.setStrict(false);\n  }\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.match(types.semi) ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.match(types.parenR) ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, "ForStatement");\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser\'s perspective.\n\npp$1.parseForIn = function (node, init, forAwait) {\n  var type = void 0;\n  if (forAwait) {\n    this.eatContextual("of");\n    type = "ForAwaitStatement";\n  } else {\n    type = this.match(types._in) ? "ForInStatement" : "ForOfStatement";\n    this.next();\n  }\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement(false);\n  this.state.labels.pop();\n  return this.finishNode(node, type);\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind.keyword;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarHead(decl);\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === types._const && !(this.match(types._in) || this.isContextual("of"))) {\n      this.unexpected();\n    } else if (decl.id.type !== "Identifier" && !(isFor && (this.match(types._in) || this.isContextual("of")))) {\n      this.raise(this.state.lastTokEnd, "Complex binding patterns require an initialization value");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));\n    if (!this.eat(types.comma)) break;\n  }\n  return node;\n};\n\npp$1.parseVarHead = function (decl) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, true, undefined, "variable declaration");\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function (node, isStatement, allowExpressionBody, isAsync, optionalId) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = false;\n\n  this.initFunction(node, isAsync);\n\n  if (this.match(types.star)) {\n    if (node.async && !this.hasPlugin("asyncGenerators")) {\n      this.unexpected();\n    } else {\n      node.generator = true;\n      this.next();\n    }\n  }\n\n  if (isStatement && !optionalId && !this.match(types.name) && !this.match(types._yield)) {\n    this.unexpected();\n  }\n\n  if (this.match(types.name) || this.match(types._yield)) {\n    node.id = this.parseBindingIdentifier();\n  }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.state.inMethod = oldInMethod;\n\n  return this.finishNode(node, isStatement ? "FunctionDeclaration" : "FunctionExpression");\n};\n\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function (node, isStatement, optionalId) {\n  this.next();\n  this.takeDecorators(node);\n  this.parseClassId(node, isStatement, optionalId);\n  this.parseClassSuper(node);\n  this.parseClassBody(node);\n  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");\n};\n\npp$1.isClassProperty = function () {\n  return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n};\n\npp$1.isClassMethod = function () {\n  return this.match(types.parenL);\n};\n\npp$1.isNonstaticConstructor = function (method) {\n  return !method.computed && !method.static && (method.key.name === "constructor" || // Identifier\n  method.key.value === "constructor" // Literal\n  );\n};\n\npp$1.parseClassBody = function (node) {\n  // class bodies are implicitly strict\n  var oldStrict = this.state.strict;\n  this.state.strict = true;\n\n  var hadConstructorCall = false;\n  var hadConstructor = false;\n  var decorators = [];\n  var classBody = this.startNode();\n\n  classBody.body = [];\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (this.eat(types.semi)) {\n      if (decorators.length > 0) {\n        this.raise(this.state.lastTokEnd, "Decorators must not be followed by a semicolon");\n      }\n      continue;\n    }\n\n    if (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n      continue;\n    }\n\n    var method = this.startNode();\n\n    // steal the decorators if there are any\n    if (decorators.length) {\n      method.decorators = decorators;\n      decorators = [];\n    }\n\n    method.static = false;\n    if (this.match(types.name) && this.state.value === "static") {\n      var key = this.parseIdentifier(true); // eats \'static\'\n      if (this.isClassMethod()) {\n        // a method named \'static\'\n        method.kind = "method";\n        method.computed = false;\n        method.key = key;\n        this.parseClassMethod(classBody, method, false, false);\n        continue;\n      } else if (this.isClassProperty()) {\n        // a property named \'static\'\n        method.computed = false;\n        method.key = key;\n        classBody.body.push(this.parseClassProperty(method));\n        continue;\n      }\n      // otherwise something static\n      method.static = true;\n    }\n\n    if (this.eat(types.star)) {\n      // a generator\n      method.kind = "method";\n      this.parsePropertyName(method);\n      if (this.isNonstaticConstructor(method)) {\n        this.raise(method.key.start, "Constructor can\'t be a generator");\n      }\n      if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {\n        this.raise(method.key.start, "Classes may not have static property named prototype");\n      }\n      this.parseClassMethod(classBody, method, true, false);\n    } else {\n      var isSimple = this.match(types.name);\n      var _key = this.parsePropertyName(method);\n      if (!method.computed && method.static && (method.key.name === "prototype" || method.key.value === "prototype")) {\n        this.raise(method.key.start, "Classes may not have static property named prototype");\n      }\n      if (this.isClassMethod()) {\n        // a normal method\n        if (this.isNonstaticConstructor(method)) {\n          if (hadConstructor) {\n            this.raise(_key.start, "Duplicate constructor in the same class");\n          } else if (method.decorators) {\n            this.raise(method.start, "You can\'t attach decorators to a class constructor");\n          }\n          hadConstructor = true;\n          method.kind = "constructor";\n        } else {\n          method.kind = "method";\n        }\n        this.parseClassMethod(classBody, method, false, false);\n      } else if (this.isClassProperty()) {\n        // a normal property\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, "Classes may not have a non-static field named \'constructor\'");\n        }\n        classBody.body.push(this.parseClassProperty(method));\n      } else if (isSimple && _key.name === "async" && !this.isLineTerminator()) {\n        // an async method\n        var isGenerator = this.hasPlugin("asyncGenerators") && this.eat(types.star);\n        method.kind = "method";\n        this.parsePropertyName(method);\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, "Constructor can\'t be an async function");\n        }\n        this.parseClassMethod(classBody, method, isGenerator, true);\n      } else if (isSimple && (_key.name === "get" || _key.name === "set") && !(this.isLineTerminator() && this.match(types.star))) {\n        // `get\\n*` is an uninitialized property named \'get\' followed by a generator.\n        // a getter or setter\n        method.kind = _key.name;\n        this.parsePropertyName(method);\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, "Constructor can\'t have get/set modifier");\n        }\n        this.parseClassMethod(classBody, method, false, false);\n        this.checkGetterSetterParamCount(method);\n      } else if (this.hasPlugin("classConstructorCall") && isSimple && _key.name === "call" && this.match(types.name) && this.state.value === "constructor") {\n        // a (deprecated) call constructor\n        if (hadConstructorCall) {\n          this.raise(method.start, "Duplicate constructor call in the same class");\n        } else if (method.decorators) {\n          this.raise(method.start, "You can\'t attach decorators to a class constructor");\n        }\n        hadConstructorCall = true;\n        method.kind = "constructorCall";\n        this.parsePropertyName(method); // consume "constructor" and make it the method\'s name\n        this.parseClassMethod(classBody, method, false, false);\n      } else if (this.isLineTerminator()) {\n        // an uninitialized class property (due to ASI, since we don\'t otherwise recognize the next token)\n        if (this.isNonstaticConstructor(method)) {\n          this.raise(method.key.start, "Classes may not have a non-static field named \'constructor\'");\n        }\n        classBody.body.push(this.parseClassProperty(method));\n      } else {\n        this.unexpected();\n      }\n    }\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, "You have trailing decorators with no method");\n  }\n\n  node.body = this.finishNode(classBody, "ClassBody");\n\n  this.state.strict = oldStrict;\n};\n\npp$1.parseClassProperty = function (node) {\n  this.state.inClassProperty = true;\n  if (this.match(types.eq)) {\n    if (!this.hasPlugin("classProperties")) this.unexpected();\n    this.next();\n    node.value = this.parseMaybeAssign();\n  } else {\n    node.value = null;\n  }\n  this.semicolon();\n  this.state.inClassProperty = false;\n  return this.finishNode(node, "ClassProperty");\n};\n\npp$1.parseClassMethod = function (classBody, method, isGenerator, isAsync) {\n  this.parseMethod(method, isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, "ClassMethod"));\n};\n\npp$1.parseClassId = function (node, isStatement, optionalId) {\n  if (this.match(types.name)) {\n    node.id = this.parseIdentifier();\n  } else {\n    if (optionalId || !isStatement) {\n      node.id = null;\n    } else {\n      this.unexpected();\n    }\n  }\n};\n\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function (node) {\n  this.next();\n  // export * from \'...\'\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    if (this.hasPlugin("exportExtensions") && this.eatContextual("as")) {\n      specifier.exported = this.parseIdentifier();\n      node.specifiers = [this.finishNode(specifier, "ExportNamespaceSpecifier")];\n      this.parseExportSpecifiersMaybe(node);\n      this.parseExportFrom(node, true);\n    } else {\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, "ExportAllDeclaration");\n    }\n  } else if (this.hasPlugin("exportExtensions") && this.isExportDefaultSpecifier()) {\n    var _specifier = this.startNode();\n    _specifier.exported = this.parseIdentifier(true);\n    node.specifiers = [this.finishNode(_specifier, "ExportDefaultSpecifier")];\n    if (this.match(types.comma) && this.lookahead().type === types.star) {\n      this.expect(types.comma);\n      var _specifier2 = this.startNode();\n      this.expect(types.star);\n      this.expectContextual("as");\n      _specifier2.exported = this.parseIdentifier();\n      node.specifiers.push(this.finishNode(_specifier2, "ExportNamespaceSpecifier"));\n    } else {\n      this.parseExportSpecifiersMaybe(node);\n    }\n    this.parseExportFrom(node, true);\n  } else if (this.eat(types._default)) {\n    // export default ...\n    var expr = this.startNode();\n    var needsSemi = false;\n    if (this.eat(types._function)) {\n      expr = this.parseFunction(expr, true, false, false, true);\n    } else if (this.match(types._class)) {\n      expr = this.parseClass(expr, true, true);\n    } else {\n      needsSemi = true;\n      expr = this.parseMaybeAssign();\n    }\n    node.declaration = expr;\n    if (needsSemi) this.semicolon();\n    this.checkExport(node, true, true);\n    return this.finishNode(node, "ExportDefaultDeclaration");\n  } else if (this.shouldParseExportDeclaration()) {\n    node.specifiers = [];\n    node.source = null;\n    node.declaration = this.parseExportDeclaration(node);\n  } else {\n    // export { x, y as z } [from \'...\']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers();\n    this.parseExportFrom(node);\n  }\n  this.checkExport(node, true);\n  return this.finishNode(node, "ExportNamedDeclaration");\n};\n\npp$1.parseExportDeclaration = function () {\n  return this.parseStatement(true);\n};\n\npp$1.isExportDefaultSpecifier = function () {\n  if (this.match(types.name)) {\n    return this.state.value !== "async";\n  }\n\n  if (!this.match(types._default)) {\n    return false;\n  }\n\n  var lookahead = this.lookahead();\n  return lookahead.type === types.comma || lookahead.type === types.name && lookahead.value === "from";\n};\n\npp$1.parseExportSpecifiersMaybe = function (node) {\n  if (this.eat(types.comma)) {\n    node.specifiers = node.specifiers.concat(this.parseExportSpecifiers());\n  }\n};\n\npp$1.parseExportFrom = function (node, expect) {\n  if (this.eatContextual("from")) {\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n    this.checkExport(node);\n  } else {\n    if (expect) {\n      this.unexpected();\n    } else {\n      node.source = null;\n    }\n  }\n\n  this.semicolon();\n};\n\npp$1.shouldParseExportDeclaration = function () {\n  return this.state.type.keyword === "var" || this.state.type.keyword === "const" || this.state.type.keyword === "let" || this.state.type.keyword === "function" || this.state.type.keyword === "class" || this.isContextual("async");\n};\n\npp$1.checkExport = function (node, checkNames, isDefault) {\n  if (checkNames) {\n    // Check for duplicate exports\n    if (isDefault) {\n      // Default exports\n      this.checkDuplicateExports(node, "default");\n    } else if (node.specifiers && node.specifiers.length) {\n      // Named exports\n      for (var _iterator2 = node.specifiers, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var specifier = _ref2;\n\n        this.checkDuplicateExports(specifier, specifier.exported.name);\n      }\n    } else if (node.declaration) {\n      // Exported declarations\n      if (node.declaration.type === "FunctionDeclaration" || node.declaration.type === "ClassDeclaration") {\n        this.checkDuplicateExports(node, node.declaration.id.name);\n      } else if (node.declaration.type === "VariableDeclaration") {\n        for (var _iterator3 = node.declaration.declarations, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray3) {\n            if (_i3 >= _iterator3.length) break;\n            _ref3 = _iterator3[_i3++];\n          } else {\n            _i3 = _iterator3.next();\n            if (_i3.done) break;\n            _ref3 = _i3.value;\n          }\n\n          var declaration = _ref3;\n\n          this.checkDeclaration(declaration.id);\n        }\n      }\n    }\n  }\n\n  if (this.state.decorators.length) {\n    var isClass = node.declaration && (node.declaration.type === "ClassDeclaration" || node.declaration.type === "ClassExpression");\n    if (!node.declaration || !isClass) {\n      this.raise(node.start, "You can only use decorators on an export when exporting a class");\n    }\n    this.takeDecorators(node.declaration);\n  }\n};\n\npp$1.checkDeclaration = function (node) {\n  if (node.type === "ObjectPattern") {\n    for (var _iterator4 = node.properties, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var prop = _ref4;\n\n      this.checkDeclaration(prop);\n    }\n  } else if (node.type === "ArrayPattern") {\n    for (var _iterator5 = node.elements, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var elem = _ref5;\n\n      if (elem) {\n        this.checkDeclaration(elem);\n      }\n    }\n  } else if (node.type === "ObjectProperty") {\n    this.checkDeclaration(node.value);\n  } else if (node.type === "RestElement" || node.type === "RestProperty") {\n    this.checkDeclaration(node.argument);\n  } else if (node.type === "Identifier") {\n    this.checkDuplicateExports(node, node.name);\n  }\n};\n\npp$1.checkDuplicateExports = function (node, name) {\n  if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n    this.raiseDuplicateExportError(node, name);\n  }\n  this.state.exportedIdentifiers.push(name);\n};\n\npp$1.raiseDuplicateExportError = function (node, name) {\n  this.raise(node.start, name === "default" ? "Only one default export allowed per module." : "`" + name + "` has already been exported. Exported identifiers must be unique.");\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function () {\n  var nodes = [];\n  var first = true;\n  var needsFrom = void 0;\n\n  // export { x, y as z } [from \'...\']\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    var isDefault = this.match(types._default);\n    if (isDefault && !needsFrom) needsFrom = true;\n\n    var node = this.startNode();\n    node.local = this.parseIdentifier(isDefault);\n    node.exported = this.eatContextual("as") ? this.parseIdentifier(true) : node.local.__clone();\n    nodes.push(this.finishNode(node, "ExportSpecifier"));\n  }\n\n  // https://github.com/ember-cli/ember-cli/pull/3739\n  if (needsFrom && !this.isContextual("from")) {\n    this.unexpected();\n  }\n\n  return nodes;\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function (node) {\n  this.eat(types._import);\n\n  // import \'...\'\n  if (this.match(types.string)) {\n    node.specifiers = [];\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = [];\n    this.parseImportSpecifiers(node);\n    this.expectContextual("from");\n    node.source = this.match(types.string) ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, "ImportDeclaration");\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function (node) {\n  var first = true;\n  if (this.match(types.name)) {\n    // import defaultObj, { x, y as z } from \'...\'\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node.specifiers.push(this.parseImportSpecifierDefault(this.parseIdentifier(), startPos, startLoc));\n    if (!this.eat(types.comma)) return;\n  }\n\n  if (this.match(types.star)) {\n    var specifier = this.startNode();\n    this.next();\n    this.expectContextual("as");\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, true, undefined, "import namespace specifier");\n    node.specifiers.push(this.finishNode(specifier, "ImportNamespaceSpecifier"));\n    return;\n  }\n\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      // Detect an attempt to deep destructure\n      if (this.eat(types.colon)) {\n        this.unexpected(null, "ES2015 named imports do not destructure. Use another statement for destructuring after the import.");\n      }\n\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    this.parseImportSpecifier(node);\n  }\n};\n\npp$1.parseImportSpecifier = function (node) {\n  var specifier = this.startNode();\n  specifier.imported = this.parseIdentifier(true);\n  if (this.eatContextual("as")) {\n    specifier.local = this.parseIdentifier();\n  } else {\n    this.checkReservedWord(specifier.imported.name, specifier.start, true, true);\n    specifier.local = specifier.imported.__clone();\n  }\n  this.checkLVal(specifier.local, true, undefined, "import specifier");\n  node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));\n};\n\npp$1.parseImportSpecifierDefault = function (id, startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.local = id;\n  this.checkLVal(node.local, true, undefined, "default import specifier");\n  return this.finishNode(node, "ImportDefaultSpecifier");\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, contextDescription) {\n  if (node) {\n    switch (node.type) {\n      case "Identifier":\n      case "ObjectPattern":\n      case "ArrayPattern":\n      case "AssignmentPattern":\n        break;\n\n      case "ObjectExpression":\n        node.type = "ObjectPattern";\n        for (var _iterator = node.properties, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var prop = _ref;\n\n          if (prop.type === "ObjectMethod") {\n            if (prop.kind === "get" || prop.kind === "set") {\n              this.raise(prop.key.start, "Object pattern can\'t contain getter or setter");\n            } else {\n              this.raise(prop.key.start, "Object pattern can\'t contain methods");\n            }\n          } else {\n            this.toAssignable(prop, isBinding, "object destructuring pattern");\n          }\n        }\n        break;\n\n      case "ObjectProperty":\n        this.toAssignable(node.value, isBinding, contextDescription);\n        break;\n\n      case "SpreadProperty":\n        node.type = "RestProperty";\n        var arg = node.argument;\n        this.toAssignable(arg, isBinding, contextDescription);\n        break;\n\n      case "ArrayExpression":\n        node.type = "ArrayPattern";\n        this.toAssignableList(node.elements, isBinding, contextDescription);\n        break;\n\n      case "AssignmentExpression":\n        if (node.operator === "=") {\n          node.type = "AssignmentPattern";\n          delete node.operator;\n        } else {\n          this.raise(node.left.end, "Only \'=\' operator can be used for specifying default value.");\n        }\n        break;\n\n      case "MemberExpression":\n        if (!isBinding) break;\n\n      default:\n        {\n          var message = "Invalid left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");\n          this.raise(node.start, message);\n        }\n    }\n  }\n  return node;\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function (exprList, isBinding, contextDescription) {\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type === "RestElement") {\n      --end;\n    } else if (last && last.type === "SpreadElement") {\n      last.type = "RestElement";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding, contextDescription);\n      if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern") {\n        this.unexpected(arg.start);\n      }\n      --end;\n    }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) this.toAssignable(elt, isBinding, contextDescription);\n  }\n  return exprList;\n};\n\n// Convert list of expression atoms to a list of\n\npp$2.toReferencedList = function (exprList) {\n  return exprList;\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function (refShorthandDefaultPos) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refShorthandDefaultPos);\n  return this.finishNode(node, "SpreadElement");\n};\n\npp$2.parseRest = function () {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseBindingIdentifier();\n  return this.finishNode(node, "RestElement");\n};\n\npp$2.shouldAllowYieldIdentifier = function () {\n  return this.match(types._yield) && !this.state.strict && !this.state.inGenerator;\n};\n\npp$2.parseBindingIdentifier = function () {\n  return this.parseIdentifier(this.shouldAllowYieldIdentifier());\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function () {\n  switch (this.state.type) {\n    case types._yield:\n      if (this.state.strict || this.state.inGenerator) this.unexpected();\n    // fall-through\n    case types.name:\n      return this.parseIdentifier(true);\n\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true);\n      return this.finishNode(node, "ArrayPattern");\n\n    case types.braceL:\n      return this.parseObj(true);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$2.parseBindingList = function (close, allowEmpty) {\n  var elts = [];\n  var first = true;\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n    }\n    if (allowEmpty && this.match(types.comma)) {\n      elts.push(null);\n    } else if (this.eat(close)) {\n      break;\n    } else if (this.match(types.ellipsis)) {\n      elts.push(this.parseAssignableListItemTypes(this.parseRest()));\n      this.expect(close);\n      break;\n    } else {\n      var decorators = [];\n      while (this.match(types.at)) {\n        decorators.push(this.parseDecorator());\n      }\n      var left = this.parseMaybeDefault();\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n      this.parseAssignableListItemTypes(left);\n      elts.push(this.parseMaybeDefault(left.start, left.loc.start, left));\n    }\n  }\n  return elts;\n};\n\npp$2.parseAssignableListItemTypes = function (param) {\n  return param;\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  startLoc = startLoc || this.state.startLoc;\n  startPos = startPos || this.state.start;\n  left = left || this.parseBindingAtom();\n  if (!this.eat(types.eq)) return left;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, "AssignmentPattern");\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp$2.checkLVal = function (expr, isBinding, checkClashes, contextDescription) {\n  switch (expr.type) {\n    case "Identifier":\n      this.checkReservedWord(expr.name, expr.start, false, true);\n\n      if (checkClashes) {\n        // we need to prefix this with an underscore for the cases where we have a key of\n        // `__proto__`. there\'s a bug in old V8 where the following wouldn\'t work:\n        //\n        //   > var obj = Object.create(null);\n        //   undefined\n        //   > obj.__proto__\n        //   null\n        //   > obj.__proto__ = true;\n        //   true\n        //   > obj.__proto__\n        //   null\n        var key = "_" + expr.name;\n\n        if (checkClashes[key]) {\n          this.raise(expr.start, "Argument name clash in strict mode");\n        } else {\n          checkClashes[key] = true;\n        }\n      }\n      break;\n\n    case "MemberExpression":\n      if (isBinding) this.raise(expr.start, (isBinding ? "Binding" : "Assigning to") + " member expression");\n      break;\n\n    case "ObjectPattern":\n      for (var _iterator2 = expr.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var prop = _ref2;\n\n        if (prop.type === "ObjectProperty") prop = prop.value;\n        this.checkLVal(prop, isBinding, checkClashes, "object destructuring pattern");\n      }\n      break;\n\n    case "ArrayPattern":\n      for (var _iterator3 = expr.elements, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var elem = _ref3;\n\n        if (elem) this.checkLVal(elem, isBinding, checkClashes, "array destructuring pattern");\n      }\n      break;\n\n    case "AssignmentPattern":\n      this.checkLVal(expr.left, isBinding, checkClashes, "assignment pattern");\n      break;\n\n    case "RestProperty":\n      this.checkLVal(expr.argument, isBinding, checkClashes, "rest property");\n      break;\n\n    case "RestElement":\n      this.checkLVal(expr.argument, isBinding, checkClashes, "rest element");\n      break;\n\n    default:\n      {\n        var message = (isBinding ? /* istanbul ignore next */"Binding invalid" : "Invalid") + " left-hand side" + (contextDescription ? " in " + contextDescription : /* istanbul ignore next */"expression");\n        this.raise(expr.start, message);\n      }\n  }\n};\n\n/* eslint max-len: 0 */\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it\'ll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash) {\n  if (prop.computed || prop.kind) return;\n\n  var key = prop.key;\n  // It is either an Identifier or a String/NumericLiteral\n  var name = key.type === "Identifier" ? key.name : String(key.value);\n\n  if (name === "__proto__") {\n    if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");\n    propHash.proto = true;\n  }\n};\n\n// Convenience method to parse an Expression only\npp$3.getExpression = function () {\n  this.nextToken();\n  var expr = this.parseExpression();\n  if (!this.match(types.eof)) {\n    this.unexpected();\n  }\n  return expr;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// \'atomic\', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function (s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initialization expressions)\n// and provide reference for storing \'=\' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it\'s possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refShorthandDefaultPos);\n  if (this.match(types.comma)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) {\n      node.expressions.push(this.parseMaybeAssign(noIn, refShorthandDefaultPos));\n    }\n    this.toReferencedList(node.expressions);\n    return this.finishNode(node, "SequenceExpression");\n  }\n  return expr;\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function (noIn, refShorthandDefaultPos, afterLeftParse, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n\n  if (this.match(types._yield) && this.state.inGenerator) {\n    var _left = this.parseYield();\n    if (afterLeftParse) _left = afterLeftParse.call(this, _left, startPos, startLoc);\n    return _left;\n  }\n\n  var failOnShorthandAssign = void 0;\n  if (refShorthandDefaultPos) {\n    failOnShorthandAssign = false;\n  } else {\n    refShorthandDefaultPos = { start: 0 };\n    failOnShorthandAssign = true;\n  }\n\n  if (this.match(types.parenL) || this.match(types.name)) {\n    this.state.potentialArrowAt = this.state.start;\n  }\n\n  var left = this.parseMaybeConditional(noIn, refShorthandDefaultPos, refNeedsArrowPos);\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc);\n  if (this.state.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.state.value;\n    node.left = this.match(types.eq) ? this.toAssignable(left, undefined, "assignment expression") : left;\n    refShorthandDefaultPos.start = 0; // reset because shorthand default was used correctly\n\n    this.checkLVal(left, undefined, undefined, "assignment expression");\n\n    if (left.extra && left.extra.parenthesized) {\n      var errorMsg = void 0;\n      if (left.type === "ObjectPattern") {\n        errorMsg = "`({a}) = 0` use `({a} = 0)`";\n      } else if (left.type === "ArrayPattern") {\n        errorMsg = "`([a]) = 0` use `([a] = 0)`";\n      }\n      if (errorMsg) {\n        this.raise(left.start, "You\'re trying to assign to a parenthesized expression, eg. instead of " + errorMsg);\n      }\n    }\n\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, "AssignmentExpression");\n  } else if (failOnShorthandAssign && refShorthandDefaultPos.start) {\n    this.unexpected(refShorthandDefaultPos.start);\n  }\n\n  return left;\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function (noIn, refShorthandDefaultPos, refNeedsArrowPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprOps(noIn, refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n\n  return this.parseConditional(expr, noIn, startPos, startLoc, refNeedsArrowPos);\n};\n\npp$3.parseConditional = function (expr, noIn, startPos, startLoc) {\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, "ConditionalExpression");\n  }\n  return expr;\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function (noIn, refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseMaybeUnary(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  } else {\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.state.type.binop;\n  if (prec != null && (!noIn || !this.match(types._in))) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.left = left;\n      node.operator = this.state.value;\n\n      if (node.operator === "**" && left.type === "UnaryExpression" && left.extra && !left.extra.parenthesizedArgument && !left.extra.parenthesized) {\n        this.raise(left.argument.start, "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.");\n      }\n\n      var op = this.state.type;\n      this.next();\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      node.right = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec, noIn);\n\n      this.finishNode(node, op === types.logicalOR || op === types.logicalAND ? "LogicalExpression" : "BinaryExpression");\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n  return left;\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function (refShorthandDefaultPos) {\n  if (this.state.type.prefix) {\n    var node = this.startNode();\n    var update = this.match(types.incDec);\n    node.operator = this.state.value;\n    node.prefix = true;\n    this.next();\n\n    var argType = this.state.type;\n    node.argument = this.parseMaybeUnary();\n\n    this.addExtra(node, "parenthesizedArgument", argType === types.parenL && (!node.argument.extra || !node.argument.extra.parenthesized));\n\n    if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n      this.unexpected(refShorthandDefaultPos.start);\n    }\n\n    if (update) {\n      this.checkLVal(node.argument, undefined, undefined, "prefix operation");\n    } else if (this.state.strict && node.operator === "delete" && node.argument.type === "Identifier") {\n      this.raise(node.start, "Deleting local variable in strict mode");\n    }\n\n    return this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");\n  }\n\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var expr = this.parseExprSubscripts(refShorthandDefaultPos);\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) return expr;\n  while (this.state.type.postfix && !this.canInsertSemicolon()) {\n    var _node = this.startNodeAt(startPos, startLoc);\n    _node.operator = this.state.value;\n    _node.prefix = false;\n    _node.argument = expr;\n    this.checkLVal(expr, undefined, undefined, "postfix operation");\n    this.next();\n    expr = this.finishNode(_node, "UpdateExpression");\n  }\n  return expr;\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function (refShorthandDefaultPos) {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var potentialArrowAt = this.state.potentialArrowAt;\n  var expr = this.parseExprAtom(refShorthandDefaultPos);\n\n  if (expr.type === "ArrowFunctionExpression" && expr.start === potentialArrowAt) {\n    return expr;\n  }\n\n  if (refShorthandDefaultPos && refShorthandDefaultPos.start) {\n    return expr;\n  }\n\n  return this.parseSubscripts(expr, startPos, startLoc);\n};\n\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (!noCalls && this.eat(types.doubleColon)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      return this.parseSubscripts(this.finishNode(node, "BindExpression"), startPos, startLoc, noCalls);\n    } else if (this.eat(types.dot)) {\n      var _node2 = this.startNodeAt(startPos, startLoc);\n      _node2.object = base;\n      _node2.property = this.parseIdentifier(true);\n      _node2.computed = false;\n      base = this.finishNode(_node2, "MemberExpression");\n    } else if (this.eat(types.bracketL)) {\n      var _node3 = this.startNodeAt(startPos, startLoc);\n      _node3.object = base;\n      _node3.property = this.parseExpression();\n      _node3.computed = true;\n      this.expect(types.bracketR);\n      base = this.finishNode(_node3, "MemberExpression");\n    } else if (!noCalls && this.match(types.parenL)) {\n      var possibleAsync = this.state.potentialArrowAt === base.start && base.type === "Identifier" && base.name === "async" && !this.canInsertSemicolon();\n      this.next();\n\n      var _node4 = this.startNodeAt(startPos, startLoc);\n      _node4.callee = base;\n      _node4.arguments = this.parseCallExpressionArguments(types.parenR, possibleAsync);\n      if (_node4.callee.type === "Import" && _node4.arguments.length !== 1) {\n        this.raise(_node4.start, "import() requires exactly one argument");\n      }\n      base = this.finishNode(_node4, "CallExpression");\n\n      if (possibleAsync && this.shouldParseAsyncArrow()) {\n        return this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), _node4);\n      } else {\n        this.toReferencedList(_node4.arguments);\n      }\n    } else if (this.match(types.backQuote)) {\n      var _node5 = this.startNodeAt(startPos, startLoc);\n      _node5.tag = base;\n      _node5.quasi = this.parseTemplate(true);\n      base = this.finishNode(_node5, "TaggedTemplateExpression");\n    } else {\n      return base;\n    }\n  }\n};\n\npp$3.parseCallExpressionArguments = function (close, possibleAsyncArrow) {\n  var elts = [];\n  var innerParenStart = void 0;\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    // we need to make sure that if this is an async arrow functions, that we don\'t allow inner parens inside the params\n    if (this.match(types.parenL) && !innerParenStart) {\n      innerParenStart = this.state.start;\n    }\n\n    elts.push(this.parseExprListItem(false, possibleAsyncArrow ? { start: 0 } : undefined, possibleAsyncArrow ? { start: 0 } : undefined));\n  }\n\n  // we found an async arrow function so let\'s not allow any inner parens\n  if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n    this.unexpected();\n  }\n\n  return elts;\n};\n\npp$3.shouldParseAsyncArrow = function () {\n  return this.match(types.arrow);\n};\n\npp$3.parseAsyncArrowFromCallExpression = function (node, call) {\n  this.expect(types.arrow);\n  return this.parseArrowExpression(node, call.arguments, true);\n};\n\n// Parse a no-call expression (like argument of `new` or `::` operators).\n\npp$3.parseNoCallExpr = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function (refShorthandDefaultPos) {\n  var canBeArrow = this.state.potentialArrowAt === this.state.start;\n  var node = void 0;\n\n  switch (this.state.type) {\n    case types._super:\n      if (!this.state.inMethod && !this.state.inClassProperty && !this.options.allowSuperOutsideMethod) {\n        this.raise(this.state.start, "\'super\' outside of function or class");\n      }\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n        this.unexpected();\n      }\n      if (this.match(types.parenL) && this.state.inMethod !== "constructor" && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, "super() outside of class constructor");\n      }\n      return this.finishNode(node, "Super");\n\n    case types._import:\n      if (!this.hasPlugin("dynamicImport")) this.unexpected();\n\n      node = this.startNode();\n      this.next();\n      if (!this.match(types.parenL)) {\n        this.unexpected(null, types.parenL);\n      }\n      return this.finishNode(node, "Import");\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, "ThisExpression");\n\n    case types._yield:\n      if (this.state.inGenerator) this.unexpected();\n\n    case types.name:\n      node = this.startNode();\n      var allowAwait = this.state.value === "await" && this.state.inAsync;\n      var allowYield = this.shouldAllowYieldIdentifier();\n      var id = this.parseIdentifier(allowAwait || allowYield);\n\n      if (id.name === "await") {\n        if (this.state.inAsync || this.inModule) {\n          return this.parseAwait(node);\n        }\n      } else if (id.name === "async" && this.match(types._function) && !this.canInsertSemicolon()) {\n        this.next();\n        return this.parseFunction(node, false, false, true);\n      } else if (canBeArrow && id.name === "async" && this.match(types.name)) {\n        var params = [this.parseIdentifier()];\n        this.expect(types.arrow);\n        // let foo = bar => {};\n        return this.parseArrowExpression(node, params, true);\n      }\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        return this.parseArrowExpression(node, [id]);\n      }\n\n      return id;\n\n    case types._do:\n      if (this.hasPlugin("doExpressions")) {\n        var _node6 = this.startNode();\n        this.next();\n        var oldInFunction = this.state.inFunction;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.state.inFunction = false;\n        _node6.body = this.parseBlock(false, true);\n        this.state.inFunction = oldInFunction;\n        this.state.labels = oldLabels;\n        return this.finishNode(_node6, "DoExpression");\n      }\n\n    case types.regexp:\n      var value = this.state.value;\n      node = this.parseLiteral(value.value, "RegExpLiteral");\n      node.pattern = value.pattern;\n      node.flags = value.flags;\n      return node;\n\n    case types.num:\n      return this.parseLiteral(this.state.value, "NumericLiteral");\n\n    case types.string:\n      return this.parseLiteral(this.state.value, "StringLiteral");\n\n    case types._null:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, "NullLiteral");\n\n    case types._true:case types._false:\n      node = this.startNode();\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, "BooleanLiteral");\n\n    case types.parenL:\n      return this.parseParenAndDistinguishExpression(null, null, canBeArrow);\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, refShorthandDefaultPos);\n      this.toReferencedList(node.elements);\n      return this.finishNode(node, "ArrayExpression");\n\n    case types.braceL:\n      return this.parseObj(false, refShorthandDefaultPos);\n\n    case types._function:\n      return this.parseFunctionExpression();\n\n    case types.at:\n      this.parseDecorators();\n\n    case types._class:\n      node = this.startNode();\n      this.takeDecorators(node);\n      return this.parseClass(node, false);\n\n    case types._new:\n      return this.parseNew();\n\n    case types.backQuote:\n      return this.parseTemplate(false);\n\n    case types.doubleColon:\n      node = this.startNode();\n      this.next();\n      node.object = null;\n      var callee = node.callee = this.parseNoCallExpr();\n      if (callee.type === "MemberExpression") {\n        return this.finishNode(node, "BindExpression");\n      } else {\n        this.raise(callee.start, "Binding should be performed on object property.");\n      }\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseFunctionExpression = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n  if (this.state.inGenerator && this.eat(types.dot) && this.hasPlugin("functionSent")) {\n    return this.parseMetaProperty(node, meta, "sent");\n  } else {\n    return this.parseFunction(node, false);\n  }\n};\n\npp$3.parseMetaProperty = function (node, meta, propertyName) {\n  node.meta = meta;\n  node.property = this.parseIdentifier(true);\n\n  if (node.property.name !== propertyName) {\n    this.raise(node.property.start, "The only valid meta property for new is " + meta.name + "." + propertyName);\n  }\n\n  return this.finishNode(node, "MetaProperty");\n};\n\npp$3.parseLiteral = function (value, type, startPos, startLoc) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  this.addExtra(node, "rawValue", value);\n  this.addExtra(node, "raw", this.input.slice(startPos, this.state.end));\n  node.value = value;\n  this.next();\n  return this.finishNode(node, type);\n};\n\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\n\npp$3.parseParenAndDistinguishExpression = function (startPos, startLoc, canBeArrow) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n\n  var val = void 0;\n  this.expect(types.parenL);\n\n  var innerStartPos = this.state.start;\n  var innerStartLoc = this.state.startLoc;\n  var exprList = [];\n  var refShorthandDefaultPos = { start: 0 };\n  var refNeedsArrowPos = { start: 0 };\n  var first = true;\n  var spreadStart = void 0;\n  var optionalCommaStart = void 0;\n\n  while (!this.match(types.parenR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma, refNeedsArrowPos.start || null);\n      if (this.match(types.parenR)) {\n        optionalCommaStart = this.state.start;\n        break;\n      }\n    }\n\n    if (this.match(types.ellipsis)) {\n      var spreadNodeStartPos = this.state.start;\n      var spreadNodeStartLoc = this.state.startLoc;\n      spreadStart = this.state.start;\n      exprList.push(this.parseParenItem(this.parseRest(), spreadNodeStartPos, spreadNodeStartLoc));\n      break;\n    } else {\n      exprList.push(this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos));\n    }\n  }\n\n  var innerEndPos = this.state.start;\n  var innerEndLoc = this.state.startLoc;\n  this.expect(types.parenR);\n\n  var arrowNode = this.startNodeAt(startPos, startLoc);\n  if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n    for (var _iterator = exprList, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var param = _ref;\n\n      if (param.extra && param.extra.parenthesized) this.unexpected(param.extra.parenStart);\n    }\n\n    return this.parseArrowExpression(arrowNode, exprList);\n  }\n\n  if (!exprList.length) {\n    this.unexpected(this.state.lastTokStart);\n  }\n  if (optionalCommaStart) this.unexpected(optionalCommaStart);\n  if (spreadStart) this.unexpected(spreadStart);\n  if (refShorthandDefaultPos.start) this.unexpected(refShorthandDefaultPos.start);\n  if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n  if (exprList.length > 1) {\n    val = this.startNodeAt(innerStartPos, innerStartLoc);\n    val.expressions = exprList;\n    this.toReferencedList(val.expressions);\n    this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);\n  } else {\n    val = exprList[0];\n  }\n\n  this.addExtra(val, "parenthesized", true);\n  this.addExtra(val, "parenStart", startPos);\n\n  return val;\n};\n\npp$3.shouldParseArrow = function () {\n  return !this.canInsertSemicolon();\n};\n\npp$3.parseArrow = function (node) {\n  if (this.eat(types.arrow)) {\n    return node;\n  }\n};\n\npp$3.parseParenItem = function (node) {\n  return node;\n};\n\n// New\'s precedence is slightly tricky. It must allow its argument\n// to be a `[]` or dot subscript expression, but not a call — at\n// least, not without wrapping it in parentheses. Thus, it uses the\n\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdentifier(true);\n\n  if (this.eat(types.dot)) {\n    var metaProp = this.parseMetaProperty(node, meta, "target");\n\n    if (!this.state.inFunction) {\n      this.raise(metaProp.property.start, "new.target can only be used in functions");\n    }\n\n    return metaProp;\n  }\n\n  node.callee = this.parseNoCallExpr();\n\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR);\n    this.toReferencedList(node.arguments);\n  } else {\n    node.arguments = [];\n  }\n\n  return this.finishNode(node, "NewExpression");\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function (isTagged) {\n  var elem = this.startNode();\n  if (this.state.value === null) {\n    if (!isTagged || !this.hasPlugin("templateInvalidEscapes")) {\n      this.raise(this.state.invalidTemplateEscapePosition, "Invalid escape sequence in template");\n    } else {\n      this.state.invalidTemplateEscapePosition = null;\n    }\n  }\n  elem.value = {\n    raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, "\\n"),\n    cooked: this.state.value\n  };\n  this.next();\n  elem.tail = this.match(types.backQuote);\n  return this.finishNode(elem, "TemplateElement");\n};\n\npp$3.parseTemplate = function (isTagged) {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement(isTagged);\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n  }\n  this.next();\n  return this.finishNode(node, "TemplateLiteral");\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function (isPattern, refShorthandDefaultPos) {\n  var decorators = [];\n  var propHash = Object.create(null);\n  var first = true;\n  var node = this.startNode();\n\n  node.properties = [];\n  this.next();\n\n  var firstRestLocation = null;\n\n  while (!this.eat(types.braceR)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(types.braceR)) break;\n    }\n\n    while (this.match(types.at)) {\n      decorators.push(this.parseDecorator());\n    }\n\n    var prop = this.startNode(),\n        isGenerator = false,\n        isAsync = false,\n        startPos = void 0,\n        startLoc = void 0;\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    if (this.hasPlugin("objectRestSpread") && this.match(types.ellipsis)) {\n      prop = this.parseSpread(isPattern ? { start: 0 } : undefined);\n      prop.type = isPattern ? "RestProperty" : "SpreadProperty";\n      if (isPattern) this.toAssignable(prop.argument, true, "object pattern");\n      node.properties.push(prop);\n      if (isPattern) {\n        var position = this.state.start;\n        if (firstRestLocation !== null) {\n          this.unexpected(firstRestLocation, "Cannot have multiple rest elements when destructuring");\n        } else if (this.eat(types.braceR)) {\n          break;\n        } else if (this.match(types.comma) && this.lookahead().type === types.braceR) {\n          // TODO: temporary rollback\n          // this.unexpected(position, "A trailing comma is not permitted after the rest element");\n          continue;\n        } else {\n          firstRestLocation = position;\n          continue;\n        }\n      } else {\n        continue;\n      }\n    }\n\n    prop.method = false;\n    prop.shorthand = false;\n\n    if (isPattern || refShorthandDefaultPos) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n\n    if (!isPattern && this.isContextual("async")) {\n      if (isGenerator) this.unexpected();\n\n      var asyncId = this.parseIdentifier();\n      if (this.match(types.colon) || this.match(types.parenL) || this.match(types.braceR) || this.match(types.eq) || this.match(types.comma)) {\n        prop.key = asyncId;\n        prop.computed = false;\n      } else {\n        isAsync = true;\n        if (this.hasPlugin("asyncGenerators")) isGenerator = this.eat(types.star);\n        this.parsePropertyName(prop);\n      }\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos);\n    this.checkPropClash(prop, propHash);\n\n    if (prop.shorthand) {\n      this.addExtra(prop, "shorthand", true);\n    }\n\n    node.properties.push(prop);\n  }\n\n  if (firstRestLocation !== null) {\n    this.unexpected(firstRestLocation, "The rest element has to be the last element when destructuring");\n  }\n\n  if (decorators.length) {\n    this.raise(this.state.start, "You have trailing decorators with no property");\n  }\n\n  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");\n};\n\npp$3.isGetterOrSetterMethod = function (prop, isPattern) {\n  return !isPattern && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && (this.match(types.string) || // get "string"() {}\n  this.match(types.num) || // get 1() {}\n  this.match(types.bracketL) || // get ["string"]() {}\n  this.match(types.name) || // get foo() {}\n  this.state.type.keyword // get debugger() {}\n  );\n};\n\n// get methods aren\'t allowed to have any parameters\n// set methods must have exactly 1 parameter\npp$3.checkGetterSetterParamCount = function (method) {\n  var paramCount = method.kind === "get" ? 0 : 1;\n  if (method.params.length !== paramCount) {\n    var start = method.start;\n    if (method.kind === "get") {\n      this.raise(start, "getter should have no params");\n    } else {\n      this.raise(start, "setter should have exactly one param");\n    }\n  }\n};\n\npp$3.parseObjectMethod = function (prop, isGenerator, isAsync, isPattern) {\n  if (isAsync || isGenerator || this.match(types.parenL)) {\n    if (isPattern) this.unexpected();\n    prop.kind = "method";\n    prop.method = true;\n    this.parseMethod(prop, isGenerator, isAsync);\n\n    return this.finishNode(prop, "ObjectMethod");\n  }\n\n  if (this.isGetterOrSetterMethod(prop, isPattern)) {\n    if (isGenerator || isAsync) this.unexpected();\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    this.parseMethod(prop);\n    this.checkGetterSetterParamCount(prop);\n\n    return this.finishNode(prop, "ObjectMethod");\n  }\n};\n\npp$3.parseObjectProperty = function (prop, startPos, startLoc, isPattern, refShorthandDefaultPos) {\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(false, refShorthandDefaultPos);\n\n    return this.finishNode(prop, "ObjectProperty");\n  }\n\n  if (!prop.computed && prop.key.type === "Identifier") {\n    this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else if (this.match(types.eq) && refShorthandDefaultPos) {\n      if (!refShorthandDefaultPos.start) {\n        refShorthandDefaultPos.start = this.state.start;\n      }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n    } else {\n      prop.value = prop.key.__clone();\n    }\n    prop.shorthand = true;\n\n    return this.finishNode(prop, "ObjectProperty");\n  }\n};\n\npp$3.parseObjPropValue = function (prop, startPos, startLoc, isGenerator, isAsync, isPattern, refShorthandDefaultPos) {\n  var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refShorthandDefaultPos);\n\n  if (!node) this.unexpected();\n\n  return node;\n};\n\npp$3.parsePropertyName = function (prop) {\n  if (this.eat(types.bracketL)) {\n    prop.computed = true;\n    prop.key = this.parseMaybeAssign();\n    this.expect(types.bracketR);\n  } else {\n    prop.computed = false;\n    var oldInPropertyName = this.state.inPropertyName;\n    this.state.inPropertyName = true;\n    prop.key = this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n    this.state.inPropertyName = oldInPropertyName;\n  }\n  return prop.key;\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function (node, isAsync) {\n  node.id = null;\n  node.generator = false;\n  node.expression = false;\n  node.async = !!isAsync;\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function (node, isGenerator, isAsync) {\n  var oldInMethod = this.state.inMethod;\n  this.state.inMethod = node.kind || true;\n  this.initFunction(node, isAsync);\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR);\n  node.generator = !!isGenerator;\n  this.parseFunctionBody(node);\n  this.state.inMethod = oldInMethod;\n  return node;\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  this.initFunction(node, isAsync);\n  node.params = this.toAssignableList(params, true, "arrow function parameters");\n  this.parseFunctionBody(node, true);\n  return this.finishNode(node, "ArrowFunctionExpression");\n};\n\npp$3.isStrictBody = function (node, isExpression) {\n  if (!isExpression && node.body.directives.length) {\n    for (var _iterator2 = node.body.directives, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var directive = _ref2;\n\n      if (directive.value.value === "use strict") {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// Parse function body and check parameters.\npp$3.parseFunctionBody = function (node, allowExpression) {\n  var isExpression = allowExpression && !this.match(types.braceL);\n\n  var oldInAsync = this.state.inAsync;\n  this.state.inAsync = node.async;\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldInFunc = this.state.inFunction;\n    var oldInGen = this.state.inGenerator;\n    var oldLabels = this.state.labels;\n    this.state.inFunction = true;this.state.inGenerator = node.generator;this.state.labels = [];\n    node.body = this.parseBlock(true);\n    node.expression = false;\n    this.state.inFunction = oldInFunc;this.state.inGenerator = oldInGen;this.state.labels = oldLabels;\n  }\n  this.state.inAsync = oldInAsync;\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  var isStrict = this.isStrictBody(node, isExpression);\n  // Also check when allowExpression === true for arrow functions\n  var checkLVal = this.state.strict || allowExpression || isStrict;\n\n  if (isStrict && node.id && node.id.type === "Identifier" && node.id.name === "yield") {\n    this.raise(node.id.start, "Binding yield in strict mode");\n  }\n\n  if (checkLVal) {\n    var nameHash = Object.create(null);\n    var oldStrict = this.state.strict;\n    if (isStrict) this.state.strict = true;\n    if (node.id) {\n      this.checkLVal(node.id, true, undefined, "function name");\n    }\n    for (var _iterator3 = node.params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var param = _ref3;\n\n      if (isStrict && param.type !== "Identifier") {\n        this.raise(param.start, "Non-simple parameter in strict mode");\n      }\n      this.checkLVal(param, true, nameHash, "function parameter list");\n    }\n    this.state.strict = oldStrict;\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function (close, allowEmpty, refShorthandDefaultPos) {\n  var elts = [];\n  var first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n      if (this.eat(close)) break;\n    }\n\n    elts.push(this.parseExprListItem(allowEmpty, refShorthandDefaultPos));\n  }\n  return elts;\n};\n\npp$3.parseExprListItem = function (allowEmpty, refShorthandDefaultPos, refNeedsArrowPos) {\n  var elt = void 0;\n  if (allowEmpty && this.match(types.comma)) {\n    elt = null;\n  } else if (this.match(types.ellipsis)) {\n    elt = this.parseSpread(refShorthandDefaultPos);\n  } else {\n    elt = this.parseMaybeAssign(false, refShorthandDefaultPos, this.parseParenItem, refNeedsArrowPos);\n  }\n  return elt;\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdentifier = function (liberal) {\n  var node = this.startNode();\n  if (!liberal) {\n    this.checkReservedWord(this.state.value, this.state.start, !!this.state.type.keyword, false);\n  }\n\n  if (this.match(types.name)) {\n    node.name = this.state.value;\n  } else if (this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n\n  if (!liberal && node.name === "await" && this.state.inAsync) {\n    this.raise(node.start, "invalid use of await inside of an async function");\n  }\n\n  node.loc.identifierName = node.name;\n\n  this.next();\n  return this.finishNode(node, "Identifier");\n};\n\npp$3.checkReservedWord = function (word, startLoc, checkKeywords, isBinding) {\n  if (this.isReservedWord(word) || checkKeywords && this.isKeyword(word)) {\n    this.raise(startLoc, word + " is a reserved word");\n  }\n\n  if (this.state.strict && (reservedWords.strict(word) || isBinding && reservedWords.strictBind(word))) {\n    this.raise(startLoc, word + " is a reserved word in strict mode");\n  }\n};\n\n// Parses await expression inside async function.\n\npp$3.parseAwait = function (node) {\n  // istanbul ignore next: this condition is checked at the call site so won\'t be hit here\n  if (!this.state.inAsync) {\n    this.unexpected();\n  }\n  if (this.match(types.star)) {\n    this.raise(node.start, "await* has been removed from the async functions proposal. Use Promise.all() instead.");\n  }\n  node.argument = this.parseMaybeUnary();\n  return this.finishNode(node, "AwaitExpression");\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.semi) || this.canInsertSemicolon() || !this.match(types.star) && !this.state.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, "YieldExpression");\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$4 = Parser.prototype;\nvar commentKeys = ["leadingComments", "trailingComments", "innerComments"];\n\nvar Node = function () {\n  function Node(pos, loc, filename) {\n    classCallCheck(this, Node);\n\n    this.type = "";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (filename) this.loc.filename = filename;\n  }\n\n  Node.prototype.__clone = function __clone() {\n    var node2 = new Node();\n    for (var key in this) {\n      // Do not clone comments that are already attached to the node\n      if (commentKeys.indexOf(key) < 0) {\n        node2[key] = this[key];\n      }\n    }\n\n    return node2;\n  };\n\n  return Node;\n}();\n\npp$4.startNode = function () {\n  return new Node(this.state.start, this.state.startLoc, this.filename);\n};\n\npp$4.startNodeAt = function (pos, loc) {\n  return new Node(pos, loc, this.filename);\n};\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  node.loc.end = loc;\n  this.processComment(node);\n  return node;\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\npp$4.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n};\n\n// Finish node at given position\n\npp$4.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n};\n\nvar pp$5 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$5.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += " (" + loc.line + ":" + loc.column + ")";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  throw err;\n};\n\n/* eslint max-len: 0 */\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nvar pp$6 = Parser.prototype;\n\npp$6.addComment = function (comment) {\n  if (this.filename) comment.loc.filename = this.filename;\n  this.state.trailingComments.push(comment);\n  this.state.leadingComments.push(comment);\n};\n\npp$6.processComment = function (node) {\n  if (node.type === "Program" && node.body.length > 0) return;\n\n  var stack = this.state.commentStack;\n\n  var firstChild = void 0,\n      lastChild = void 0,\n      trailingComments = void 0,\n      i = void 0,\n      j = void 0;\n\n  if (this.state.trailingComments.length > 0) {\n    // If the first comment in trailingComments comes after the\n    // current node, then we\'re good - all comments in the array will\n    // come after the node and so it\'s safe to add them as official\n    // trailingComments.\n    if (this.state.trailingComments[0].start >= node.end) {\n      trailingComments = this.state.trailingComments;\n      this.state.trailingComments = [];\n    } else {\n      // Otherwise, if the first comment doesn\'t come after the\n      // current node, that means we have a mix of leading and trailing\n      // comments in the array and that leadingComments contains the\n      // same items as trailingComments. Reset trailingComments to\n      // zero items and we\'ll handle this by evaluating leadingComments\n      // later.\n      this.state.trailingComments.length = 0;\n    }\n  } else {\n    var lastInStack = last(stack);\n    if (stack.length > 0 && lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n      trailingComments = lastInStack.trailingComments;\n      lastInStack.trailingComments = null;\n    }\n  }\n\n  // Eating the stack.\n  if (stack.length > 0 && last(stack).start >= node.start) {\n    firstChild = stack.pop();\n  }\n\n  while (stack.length > 0 && last(stack).start >= node.start) {\n    lastChild = stack.pop();\n  }\n\n  if (!lastChild && firstChild) lastChild = firstChild;\n\n  // Attach comments that follow a trailing comma on the last\n  // property in an object literal or a trailing comma in function arguments\n  // as trailing comments\n  if (firstChild && this.state.leadingComments.length > 0) {\n    var lastComment = last(this.state.leadingComments);\n\n    if (firstChild.type === "ObjectProperty") {\n      if (lastComment.start >= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n\n          if (this.state.leadingComments.length > 0) {\n            firstChild.trailingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        }\n      }\n    } else if (node.type === "CallExpression" && node.arguments && node.arguments.length) {\n      var lastArg = last(node.arguments);\n\n      if (lastArg && lastComment.start >= lastArg.start && lastComment.end <= node.end) {\n        if (this.state.commentPreviousNode) {\n          if (this.state.leadingComments.length > 0) {\n            lastArg.trailingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        }\n      }\n    }\n  }\n\n  if (lastChild) {\n    if (lastChild.leadingComments) {\n      if (lastChild !== node && last(lastChild.leadingComments).end <= node.start) {\n        node.leadingComments = lastChild.leadingComments;\n        lastChild.leadingComments = null;\n      } else {\n        // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n        // so this takes back the leading comment.\n        // See also: https://github.com/eslint/espree/issues/158\n        for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n          if (lastChild.leadingComments[i].end <= node.start) {\n            node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n            break;\n          }\n        }\n      }\n    }\n  } else if (this.state.leadingComments.length > 0) {\n    if (last(this.state.leadingComments).end <= node.start) {\n      if (this.state.commentPreviousNode) {\n        for (j = 0; j < this.state.leadingComments.length; j++) {\n          if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n            this.state.leadingComments.splice(j, 1);\n            j--;\n          }\n        }\n      }\n      if (this.state.leadingComments.length > 0) {\n        node.leadingComments = this.state.leadingComments;\n        this.state.leadingComments = [];\n      }\n    } else {\n      // https://github.com/eslint/espree/issues/2\n      //\n      // In special cases, such as return (without a value) and\n      // debugger, all comments will end up as leadingComments and\n      // will otherwise be eliminated. This step runs when the\n      // commentStack is empty and there are comments left\n      // in leadingComments.\n      //\n      // This loop figures out the stopping point between the actual\n      // leading and trailing comments by finding the location of the\n      // first comment that comes after the given node.\n      for (i = 0; i < this.state.leadingComments.length; i++) {\n        if (this.state.leadingComments[i].end > node.start) {\n          break;\n        }\n      }\n\n      // Split the array based on the location of the first comment\n      // that comes after the node. Keep in mind that this could\n      // result in an empty array, and if so, the array must be\n      // deleted.\n      node.leadingComments = this.state.leadingComments.slice(0, i);\n      if (node.leadingComments.length === 0) {\n        node.leadingComments = null;\n      }\n\n      // Similarly, trailing comments are attached later. The variable\n      // must be reset to null if there are no trailing comments.\n      trailingComments = this.state.leadingComments.slice(i);\n      if (trailingComments.length === 0) {\n        trailingComments = null;\n      }\n    }\n  }\n\n  this.state.commentPreviousNode = node;\n\n  if (trailingComments) {\n    if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n      node.innerComments = trailingComments;\n    } else {\n      node.trailingComments = trailingComments;\n    }\n  }\n\n  stack.push(node);\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.estreeParseRegExpLiteral = function (_ref) {\n  var pattern = _ref.pattern,\n      flags = _ref.flags;\n\n  var regex = null;\n  try {\n    regex = new RegExp(pattern, flags);\n  } catch (e) {\n    // In environments that don\'t support these flags value will\n    // be null as the regex can\'t be represented natively.\n  }\n  var node = this.estreeParseLiteral(regex);\n  node.regex = { pattern: pattern, flags: flags };\n\n  return node;\n};\n\npp$7.estreeParseLiteral = function (value) {\n  return this.parseLiteral(value, "Literal");\n};\n\npp$7.directiveToStmt = function (directive) {\n  var directiveLiteral = directive.value;\n\n  var stmt = this.startNodeAt(directive.start, directive.loc.start);\n  var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n\n  expression.value = directiveLiteral.value;\n  expression.raw = directiveLiteral.extra.raw;\n\n  stmt.expression = this.finishNodeAt(expression, "Literal", directiveLiteral.end, directiveLiteral.loc.end);\n  stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n  return this.finishNodeAt(stmt, "ExpressionStatement", directive.end, directive.loc.end);\n};\n\nfunction isSimpleProperty(node) {\n  return node && node.type === "Property" && node.kind === "init" && node.method === false;\n}\n\nvar estreePlugin = function (instance) {\n  instance.extend("checkDeclaration", function (inner) {\n    return function (node) {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(node.value);\n      } else {\n        inner.call(this, node);\n      }\n    };\n  });\n\n  instance.extend("checkGetterSetterParamCount", function () {\n    return function (prop) {\n      var paramCount = prop.kind === "get" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.start;\n        if (prop.kind === "get") {\n          this.raise(start, "getter should have no params");\n        } else {\n          this.raise(start, "setter should have exactly one param");\n        }\n      }\n    };\n  });\n\n  instance.extend("checkLVal", function (inner) {\n    return function (expr, isBinding, checkClashes) {\n      var _this = this;\n\n      switch (expr.type) {\n        case "ObjectPattern":\n          expr.properties.forEach(function (prop) {\n            _this.checkLVal(prop.type === "Property" ? prop.value : prop, isBinding, checkClashes, "object destructuring pattern");\n          });\n          break;\n        default:\n          for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n            args[_key - 3] = arguments[_key];\n          }\n\n          inner.call.apply(inner, [this, expr, isBinding, checkClashes].concat(args));\n      }\n    };\n  });\n\n  instance.extend("checkPropClash", function () {\n    return function (prop, propHash) {\n      if (prop.computed || !isSimpleProperty(prop)) return;\n\n      var key = prop.key;\n      // It is either an Identifier or a String/NumericLiteral\n      var name = key.type === "Identifier" ? key.name : String(key.value);\n\n      if (name === "__proto__") {\n        if (propHash.proto) this.raise(key.start, "Redefinition of __proto__ property");\n        propHash.proto = true;\n      }\n    };\n  });\n\n  instance.extend("isStrictBody", function () {\n    return function (node, isExpression) {\n      if (!isExpression && node.body.body.length > 0) {\n        for (var _iterator = node.body.body, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var directive = _ref2;\n\n          if (directive.type === "ExpressionStatement" && directive.expression.type === "Literal") {\n            if (directive.expression.value === "use strict") return true;\n          } else {\n            // Break for the first non literal expression\n            break;\n          }\n        }\n      }\n\n      return false;\n    };\n  });\n\n  instance.extend("isValidDirective", function () {\n    return function (stmt) {\n      return stmt.type === "ExpressionStatement" && stmt.expression.type === "Literal" && typeof stmt.expression.value === "string" && (!stmt.expression.extra || !stmt.expression.extra.parenthesized);\n    };\n  });\n\n  instance.extend("stmtToDirective", function (inner) {\n    return function (stmt) {\n      var directive = inner.call(this, stmt);\n      var value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    };\n  });\n\n  instance.extend("parseBlockBody", function (inner) {\n    return function (node) {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      inner.call.apply(inner, [this, node].concat(args));\n\n      node.directives.reverse().forEach(function (directive) {\n        node.body.unshift(_this2.directiveToStmt(directive));\n      });\n      delete node.directives;\n    };\n  });\n\n  instance.extend("parseClassMethod", function () {\n    return function (classBody, method, isGenerator, isAsync) {\n      this.parseMethod(method, isGenerator, isAsync);\n      if (method.typeParameters) {\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(this.finishNode(method, "MethodDefinition"));\n    };\n  });\n\n  instance.extend("parseExprAtom", function (inner) {\n    return function () {\n      switch (this.state.type) {\n        case types.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case types.num:\n        case types.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case types._null:\n          return this.estreeParseLiteral(null);\n\n        case types._true:\n          return this.estreeParseLiteral(true);\n\n        case types._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          return inner.call.apply(inner, [this].concat(args));\n      }\n    };\n  });\n\n  instance.extend("parseLiteral", function (inner) {\n    return function () {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    };\n  });\n\n  instance.extend("parseMethod", function (inner) {\n    return function (node) {\n      var funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so inner method correctly sets state\n\n      for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        args[_key5 - 1] = arguments[_key5];\n      }\n\n      funcNode = inner.call.apply(inner, [this, funcNode].concat(args));\n      delete funcNode.kind;\n      node.value = this.finishNode(funcNode, "FunctionExpression");\n\n      return node;\n    };\n  });\n\n  instance.extend("parseObjectMethod", function (inner) {\n    return function () {\n      for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n\n      if (node) {\n        if (node.kind === "method") node.kind = "init";\n        node.type = "Property";\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend("parseObjectProperty", function (inner) {\n    return function () {\n      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n\n      if (node) {\n        node.kind = "init";\n        node.type = "Property";\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend("toAssignable", function (inner) {\n    return function (node, isBinding) {\n      for (var _len8 = arguments.length, args = Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n        args[_key8 - 2] = arguments[_key8];\n      }\n\n      if (isSimpleProperty(node)) {\n        this.toAssignable.apply(this, [node.value, isBinding].concat(args));\n\n        return node;\n      } else if (node.type === "ObjectExpression") {\n        node.type = "ObjectPattern";\n        for (var _iterator2 = node.properties, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n          var _ref3;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref3 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref3 = _i2.value;\n          }\n\n          var prop = _ref3;\n\n          if (prop.kind === "get" || prop.kind === "set") {\n            this.raise(prop.key.start, "Object pattern can\'t contain getter or setter");\n          } else if (prop.method) {\n            this.raise(prop.key.start, "Object pattern can\'t contain methods");\n          } else {\n            this.toAssignable(prop, isBinding, "object destructuring pattern");\n          }\n        }\n\n        return node;\n      }\n\n      return inner.call.apply(inner, [this, node, isBinding].concat(args));\n    };\n  });\n};\n\n/* eslint max-len: 0 */\n\nvar primitiveTypes = ["any", "mixed", "empty", "bool", "boolean", "number", "string", "void", "null"];\n\nvar pp$8 = Parser.prototype;\n\npp$8.flowParseTypeInitialiser = function (tok) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  this.expect(tok || types.colon);\n\n  var type = this.flowParseType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$8.flowParsePredicate = function () {\n  var node = this.startNode();\n  var moduloLoc = this.state.startLoc;\n  var moduloPos = this.state.start;\n  this.expect(types.modulo);\n  var checksLoc = this.state.startLoc;\n  this.expectContextual("checks");\n  // Force \'%\' and \'checks\' to be adjacent\n  if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n    this.raise(moduloPos, "Spaces between ´%´ and ´checks´ are not allowed here.");\n  }\n  if (this.eat(types.parenL)) {\n    node.expression = this.parseExpression();\n    this.expect(types.parenR);\n    return this.finishNode(node, "DeclaredPredicate");\n  } else {\n    return this.finishNode(node, "InferredPredicate");\n  }\n};\n\npp$8.flowParseTypeAndPredicateInitialiser = function () {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  this.expect(types.colon);\n  var type = null;\n  var predicate = null;\n  if (this.match(types.modulo)) {\n    this.state.inType = oldInType;\n    predicate = this.flowParsePredicate();\n  } else {\n    type = this.flowParseType();\n    this.state.inType = oldInType;\n    if (this.match(types.modulo)) {\n      predicate = this.flowParsePredicate();\n    }\n  }\n  return [type, predicate];\n};\n\npp$8.flowParseDeclareClass = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node, true);\n  return this.finishNode(node, "DeclareClass");\n};\n\npp$8.flowParseDeclareFunction = function (node) {\n  this.next();\n\n  var id = node.id = this.parseIdentifier();\n\n  var typeNode = this.startNode();\n  var typeContainer = this.startNode();\n\n  if (this.isRelational("<")) {\n    typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    typeNode.typeParameters = null;\n  }\n\n  this.expect(types.parenL);\n  var tmp = this.flowParseFunctionTypeParams();\n  typeNode.params = tmp.params;\n  typeNode.rest = tmp.rest;\n  this.expect(types.parenR);\n  var predicate = null;\n\n  var _flowParseTypeAndPred = this.flowParseTypeAndPredicateInitialiser();\n\n  typeNode.returnType = _flowParseTypeAndPred[0];\n  predicate = _flowParseTypeAndPred[1];\n\n  typeContainer.typeAnnotation = this.finishNode(typeNode, "FunctionTypeAnnotation");\n  typeContainer.predicate = predicate;\n  id.typeAnnotation = this.finishNode(typeContainer, "TypeAnnotation");\n\n  this.finishNode(id, id.type);\n\n  this.semicolon();\n\n  return this.finishNode(node, "DeclareFunction");\n};\n\npp$8.flowParseDeclare = function (node) {\n  if (this.match(types._class)) {\n    return this.flowParseDeclareClass(node);\n  } else if (this.match(types._function)) {\n    return this.flowParseDeclareFunction(node);\n  } else if (this.match(types._var)) {\n    return this.flowParseDeclareVariable(node);\n  } else if (this.isContextual("module")) {\n    if (this.lookahead().type === types.dot) {\n      return this.flowParseDeclareModuleExports(node);\n    } else {\n      return this.flowParseDeclareModule(node);\n    }\n  } else if (this.isContextual("type")) {\n    return this.flowParseDeclareTypeAlias(node);\n  } else if (this.isContextual("opaque")) {\n    return this.flowParseDeclareOpaqueType(node);\n  } else if (this.isContextual("interface")) {\n    return this.flowParseDeclareInterface(node);\n  } else if (this.match(types._export)) {\n    return this.flowParseDeclareExportDeclaration(node);\n  } else {\n    this.unexpected();\n  }\n};\n\npp$8.flowParseDeclareExportDeclaration = function (node) {\n  this.expect(types._export);\n  if (this.isContextual("opaque") // declare export opaque ...\n  ) {\n      node.declaration = this.flowParseDeclare(this.startNode());\n      node.default = false;\n\n      return this.finishNode(node, "DeclareExportDeclaration");\n    }\n\n  throw this.unexpected();\n};\n\npp$8.flowParseDeclareVariable = function (node) {\n  this.next();\n  node.id = this.flowParseTypeAnnotatableIdentifier();\n  this.semicolon();\n  return this.finishNode(node, "DeclareVariable");\n};\n\npp$8.flowParseDeclareModule = function (node) {\n  this.next();\n\n  if (this.match(types.string)) {\n    node.id = this.parseExprAtom();\n  } else {\n    node.id = this.parseIdentifier();\n  }\n\n  var bodyNode = node.body = this.startNode();\n  var body = bodyNode.body = [];\n  this.expect(types.braceL);\n  while (!this.match(types.braceR)) {\n    var _bodyNode = this.startNode();\n\n    if (this.match(types._import)) {\n      var lookahead = this.lookahead();\n      if (lookahead.value !== "type" && lookahead.value !== "typeof") {\n        this.unexpected(null, "Imports within a `declare module` body must always be `import type` or `import typeof`");\n      }\n\n      this.parseImport(_bodyNode);\n    } else {\n      this.expectContextual("declare", "Only declares and type imports are allowed inside declare module");\n\n      _bodyNode = this.flowParseDeclare(_bodyNode, true);\n    }\n\n    body.push(_bodyNode);\n  }\n  this.expect(types.braceR);\n\n  this.finishNode(bodyNode, "BlockStatement");\n  return this.finishNode(node, "DeclareModule");\n};\n\npp$8.flowParseDeclareModuleExports = function (node) {\n  this.expectContextual("module");\n  this.expect(types.dot);\n  this.expectContextual("exports");\n  node.typeAnnotation = this.flowParseTypeAnnotation();\n  this.semicolon();\n\n  return this.finishNode(node, "DeclareModuleExports");\n};\n\npp$8.flowParseDeclareTypeAlias = function (node) {\n  this.next();\n  this.flowParseTypeAlias(node);\n  return this.finishNode(node, "DeclareTypeAlias");\n};\n\npp$8.flowParseDeclareOpaqueType = function (node) {\n  this.next();\n  this.flowParseOpaqueType(node, true);\n  return this.finishNode(node, "DeclareOpaqueType");\n};\n\npp$8.flowParseDeclareInterface = function (node) {\n  this.next();\n  this.flowParseInterfaceish(node);\n  return this.finishNode(node, "DeclareInterface");\n};\n\n// Interfaces\n\npp$8.flowParseInterfaceish = function (node) {\n  node.id = this.parseIdentifier();\n\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.extends = [];\n  node.mixins = [];\n\n  if (this.eat(types._extends)) {\n    do {\n      node.extends.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  if (this.isContextual("mixins")) {\n    this.next();\n    do {\n      node.mixins.push(this.flowParseInterfaceExtends());\n    } while (this.eat(types.comma));\n  }\n\n  node.body = this.flowParseObjectType(true, false, false);\n};\n\npp$8.flowParseInterfaceExtends = function () {\n  var node = this.startNode();\n\n  node.id = this.flowParseQualifiedTypeIdentifier();\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  } else {\n    node.typeParameters = null;\n  }\n\n  return this.finishNode(node, "InterfaceExtends");\n};\n\npp$8.flowParseInterface = function (node) {\n  this.flowParseInterfaceish(node, false);\n  return this.finishNode(node, "InterfaceDeclaration");\n};\n\npp$8.flowParseRestrictedIdentifier = function (liberal) {\n  if (primitiveTypes.indexOf(this.state.value) > -1) {\n    this.raise(this.state.start, "Cannot overwrite primitive type " + this.state.value);\n  }\n\n  return this.parseIdentifier(liberal);\n};\n\n// Type aliases\n\npp$8.flowParseTypeAlias = function (node) {\n  node.id = this.flowParseRestrictedIdentifier();\n\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  node.right = this.flowParseTypeInitialiser(types.eq);\n  this.semicolon();\n\n  return this.finishNode(node, "TypeAlias");\n};\n\n// Opaque type aliases\n\npp$8.flowParseOpaqueType = function (node, declare) {\n  this.expectContextual("type");\n  node.id = this.flowParseRestrictedIdentifier();\n\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  } else {\n    node.typeParameters = null;\n  }\n\n  // Parse the supertype\n  node.supertype = null;\n  if (this.match(types.colon)) {\n    node.supertype = this.flowParseTypeInitialiser(types.colon);\n  }\n\n  node.impltype = null;\n  if (!declare) {\n    node.impltype = this.flowParseTypeInitialiser(types.eq);\n  }\n  this.semicolon();\n\n  return this.finishNode(node, "OpaqueType");\n};\n\n// Type annotations\n\npp$8.flowParseTypeParameter = function () {\n  var node = this.startNode();\n\n  var variance = this.flowParseVariance();\n\n  var ident = this.flowParseTypeAnnotatableIdentifier();\n  node.name = ident.name;\n  node.variance = variance;\n  node.bound = ident.typeAnnotation;\n\n  if (this.match(types.eq)) {\n    this.eat(types.eq);\n    node.default = this.flowParseType();\n  }\n\n  return this.finishNode(node, "TypeParameter");\n};\n\npp$8.flowParseTypeParameterDeclaration = function () {\n  var oldInType = this.state.inType;\n  var node = this.startNode();\n  node.params = [];\n\n  this.state.inType = true;\n\n  // istanbul ignore else: this condition is already checked at all call sites\n  if (this.isRelational("<") || this.match(types.jsxTagStart)) {\n    this.next();\n  } else {\n    this.unexpected();\n  }\n\n  do {\n    node.params.push(this.flowParseTypeParameter());\n    if (!this.isRelational(">")) {\n      this.expect(types.comma);\n    }\n  } while (!this.isRelational(">"));\n  this.expectRelational(">");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, "TypeParameterDeclaration");\n};\n\npp$8.flowParseTypeParameterInstantiation = function () {\n  var node = this.startNode();\n  var oldInType = this.state.inType;\n  node.params = [];\n\n  this.state.inType = true;\n\n  this.expectRelational("<");\n  while (!this.isRelational(">")) {\n    node.params.push(this.flowParseType());\n    if (!this.isRelational(">")) {\n      this.expect(types.comma);\n    }\n  }\n  this.expectRelational(">");\n\n  this.state.inType = oldInType;\n\n  return this.finishNode(node, "TypeParameterInstantiation");\n};\n\npp$8.flowParseObjectPropertyKey = function () {\n  return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n};\n\npp$8.flowParseObjectTypeIndexer = function (node, isStatic, variance) {\n  node.static = isStatic;\n\n  this.expect(types.bracketL);\n  if (this.lookahead().type === types.colon) {\n    node.id = this.flowParseObjectPropertyKey();\n    node.key = this.flowParseTypeInitialiser();\n  } else {\n    node.id = null;\n    node.key = this.flowParseType();\n  }\n  this.expect(types.bracketR);\n  node.value = this.flowParseTypeInitialiser();\n  node.variance = variance;\n\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, "ObjectTypeIndexer");\n};\n\npp$8.flowParseObjectTypeMethodish = function (node) {\n  node.params = [];\n  node.rest = null;\n  node.typeParameters = null;\n\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterDeclaration();\n  }\n\n  this.expect(types.parenL);\n  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n    node.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n\n  if (this.eat(types.ellipsis)) {\n    node.rest = this.flowParseFunctionTypeParam();\n  }\n  this.expect(types.parenR);\n  node.returnType = this.flowParseTypeInitialiser();\n\n  return this.finishNode(node, "FunctionTypeAnnotation");\n};\n\npp$8.flowParseObjectTypeMethod = function (startPos, startLoc, isStatic, key) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(startPos, startLoc));\n  node.static = isStatic;\n  node.key = key;\n  node.optional = false;\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, "ObjectTypeProperty");\n};\n\npp$8.flowParseObjectTypeCallProperty = function (node, isStatic) {\n  var valueNode = this.startNode();\n  node.static = isStatic;\n  node.value = this.flowParseObjectTypeMethodish(valueNode);\n  this.flowObjectTypeSemicolon();\n  return this.finishNode(node, "ObjectTypeCallProperty");\n};\n\npp$8.flowParseObjectType = function (allowStatic, allowExact, allowSpread) {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n\n  var nodeStart = this.startNode();\n  var node = void 0;\n  var propertyKey = void 0;\n  var isStatic = false;\n\n  nodeStart.callProperties = [];\n  nodeStart.properties = [];\n  nodeStart.indexers = [];\n\n  var endDelim = void 0;\n  var exact = void 0;\n  if (allowExact && this.match(types.braceBarL)) {\n    this.expect(types.braceBarL);\n    endDelim = types.braceBarR;\n    exact = true;\n  } else {\n    this.expect(types.braceL);\n    endDelim = types.braceR;\n    exact = false;\n  }\n\n  nodeStart.exact = exact;\n\n  while (!this.match(endDelim)) {\n    var optional = false;\n    var startPos = this.state.start;\n    var startLoc = this.state.startLoc;\n    node = this.startNode();\n    if (allowStatic && this.isContextual("static") && this.lookahead().type !== types.colon) {\n      this.next();\n      isStatic = true;\n    }\n\n    var variancePos = this.state.start;\n    var variance = this.flowParseVariance();\n\n    if (this.match(types.bracketL)) {\n      nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n    } else if (this.match(types.parenL) || this.isRelational("<")) {\n      if (variance) {\n        this.unexpected(variancePos);\n      }\n      nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n    } else {\n      if (this.match(types.ellipsis)) {\n        if (!allowSpread) {\n          this.unexpected(null, "Spread operator cannot appear in class or interface definitions");\n        }\n        if (variance) {\n          this.unexpected(variance.start, "Spread properties cannot have variance");\n        }\n        this.expect(types.ellipsis);\n        node.argument = this.flowParseType();\n        this.flowObjectTypeSemicolon();\n        nodeStart.properties.push(this.finishNode(node, "ObjectTypeSpreadProperty"));\n      } else {\n        propertyKey = this.flowParseObjectPropertyKey();\n        if (this.isRelational("<") || this.match(types.parenL)) {\n          // This is a method property\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.properties.push(this.flowParseObjectTypeMethod(startPos, startLoc, isStatic, propertyKey));\n        } else {\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n          node.key = propertyKey;\n          node.value = this.flowParseTypeInitialiser();\n          node.optional = optional;\n          node.static = isStatic;\n          node.variance = variance;\n          this.flowObjectTypeSemicolon();\n          nodeStart.properties.push(this.finishNode(node, "ObjectTypeProperty"));\n        }\n      }\n    }\n\n    isStatic = false;\n  }\n\n  this.expect(endDelim);\n\n  var out = this.finishNode(nodeStart, "ObjectTypeAnnotation");\n\n  this.state.inType = oldInType;\n\n  return out;\n};\n\npp$8.flowObjectTypeSemicolon = function () {\n  if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n    this.unexpected();\n  }\n};\n\npp$8.flowParseQualifiedTypeIdentifier = function (startPos, startLoc, id) {\n  startPos = startPos || this.state.start;\n  startLoc = startLoc || this.state.startLoc;\n  var node = id || this.parseIdentifier();\n\n  while (this.eat(types.dot)) {\n    var node2 = this.startNodeAt(startPos, startLoc);\n    node2.qualification = node;\n    node2.id = this.parseIdentifier();\n    node = this.finishNode(node2, "QualifiedTypeIdentifier");\n  }\n\n  return node;\n};\n\npp$8.flowParseGenericType = function (startPos, startLoc, id) {\n  var node = this.startNodeAt(startPos, startLoc);\n\n  node.typeParameters = null;\n  node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n  if (this.isRelational("<")) {\n    node.typeParameters = this.flowParseTypeParameterInstantiation();\n  }\n\n  return this.finishNode(node, "GenericTypeAnnotation");\n};\n\npp$8.flowParseTypeofType = function () {\n  var node = this.startNode();\n  this.expect(types._typeof);\n  node.argument = this.flowParsePrimaryType();\n  return this.finishNode(node, "TypeofTypeAnnotation");\n};\n\npp$8.flowParseTupleType = function () {\n  var node = this.startNode();\n  node.types = [];\n  this.expect(types.bracketL);\n  // We allow trailing commas\n  while (this.state.pos < this.input.length && !this.match(types.bracketR)) {\n    node.types.push(this.flowParseType());\n    if (this.match(types.bracketR)) break;\n    this.expect(types.comma);\n  }\n  this.expect(types.bracketR);\n  return this.finishNode(node, "TupleTypeAnnotation");\n};\n\npp$8.flowParseFunctionTypeParam = function () {\n  var name = null;\n  var optional = false;\n  var typeAnnotation = null;\n  var node = this.startNode();\n  var lh = this.lookahead();\n  if (lh.type === types.colon || lh.type === types.question) {\n    name = this.parseIdentifier();\n    if (this.eat(types.question)) {\n      optional = true;\n    }\n    typeAnnotation = this.flowParseTypeInitialiser();\n  } else {\n    typeAnnotation = this.flowParseType();\n  }\n  node.name = name;\n  node.optional = optional;\n  node.typeAnnotation = typeAnnotation;\n  return this.finishNode(node, "FunctionTypeParam");\n};\n\npp$8.reinterpretTypeAsFunctionTypeParam = function (type) {\n  var node = this.startNodeAt(type.start, type.loc.start);\n  node.name = null;\n  node.optional = false;\n  node.typeAnnotation = type;\n  return this.finishNode(node, "FunctionTypeParam");\n};\n\npp$8.flowParseFunctionTypeParams = function () {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var ret = { params: params, rest: null };\n  while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n    ret.params.push(this.flowParseFunctionTypeParam());\n    if (!this.match(types.parenR)) {\n      this.expect(types.comma);\n    }\n  }\n  if (this.eat(types.ellipsis)) {\n    ret.rest = this.flowParseFunctionTypeParam();\n  }\n  return ret;\n};\n\npp$8.flowIdentToTypeAnnotation = function (startPos, startLoc, node, id) {\n  switch (id.name) {\n    case "any":\n      return this.finishNode(node, "AnyTypeAnnotation");\n\n    case "void":\n      return this.finishNode(node, "VoidTypeAnnotation");\n\n    case "bool":\n    case "boolean":\n      return this.finishNode(node, "BooleanTypeAnnotation");\n\n    case "mixed":\n      return this.finishNode(node, "MixedTypeAnnotation");\n\n    case "empty":\n      return this.finishNode(node, "EmptyTypeAnnotation");\n\n    case "number":\n      return this.finishNode(node, "NumberTypeAnnotation");\n\n    case "string":\n      return this.finishNode(node, "StringTypeAnnotation");\n\n    default:\n      return this.flowParseGenericType(startPos, startLoc, id);\n  }\n};\n\n// The parsing of types roughly parallels the parsing of expressions, and\n// primary types are kind of like primary expressions...they\'re the\n// primitives with which other types are constructed.\npp$8.flowParsePrimaryType = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.startNode();\n  var tmp = void 0;\n  var type = void 0;\n  var isGroupedType = false;\n  var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n  switch (this.state.type) {\n    case types.name:\n      return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n    case types.braceL:\n      return this.flowParseObjectType(false, false, true);\n\n    case types.braceBarL:\n      return this.flowParseObjectType(false, true, true);\n\n    case types.bracketL:\n      return this.flowParseTupleType();\n\n    case types.relational:\n      if (this.state.value === "<") {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(types.parenL);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        this.expect(types.parenR);\n\n        this.expect(types.arrow);\n\n        node.returnType = this.flowParseType();\n\n        return this.finishNode(node, "FunctionTypeAnnotation");\n      }\n      break;\n\n    case types.parenL:\n      this.next();\n\n      // Check to see if this is actually a grouped type\n      if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n        if (this.match(types.name)) {\n          var token = this.lookahead().type;\n          isGroupedType = token !== types.question && token !== types.colon;\n        } else {\n          isGroupedType = true;\n        }\n      }\n\n      if (isGroupedType) {\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n        // A `,` or a `) =>` means this is an anonymous function type\n        if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n          this.expect(types.parenR);\n          return type;\n        } else {\n          // Eat a comma if there is one\n          this.eat(types.comma);\n        }\n      }\n\n      if (type) {\n        tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n      } else {\n        tmp = this.flowParseFunctionTypeParams();\n      }\n\n      node.params = tmp.params;\n      node.rest = tmp.rest;\n\n      this.expect(types.parenR);\n\n      this.expect(types.arrow);\n\n      node.returnType = this.flowParseType();\n\n      node.typeParameters = null;\n\n      return this.finishNode(node, "FunctionTypeAnnotation");\n\n    case types.string:\n      return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");\n\n    case types._true:case types._false:\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, "BooleanLiteralTypeAnnotation");\n\n    case types.plusMin:\n      if (this.state.value === "-") {\n        this.next();\n        if (!this.match(types.num)) this.unexpected(null, "Unexpected token, expected number");\n\n        return this.parseLiteral(-this.state.value, "NumericLiteralTypeAnnotation", node.start, node.loc.start);\n      }\n\n      this.unexpected();\n    case types.num:\n      return this.parseLiteral(this.state.value, "NumericLiteralTypeAnnotation");\n\n    case types._null:\n      node.value = this.match(types._null);\n      this.next();\n      return this.finishNode(node, "NullLiteralTypeAnnotation");\n\n    case types._this:\n      node.value = this.match(types._this);\n      this.next();\n      return this.finishNode(node, "ThisTypeAnnotation");\n\n    case types.star:\n      this.next();\n      return this.finishNode(node, "ExistentialTypeParam");\n\n    default:\n      if (this.state.type.keyword === "typeof") {\n        return this.flowParseTypeofType();\n      }\n  }\n\n  this.unexpected();\n};\n\npp$8.flowParsePostfixType = function () {\n  var startPos = this.state.start,\n      startLoc = this.state.startLoc;\n  var type = this.flowParsePrimaryType();\n  while (!this.canInsertSemicolon() && this.match(types.bracketL)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.elementType = type;\n    this.expect(types.bracketL);\n    this.expect(types.bracketR);\n    type = this.finishNode(node, "ArrayTypeAnnotation");\n  }\n  return type;\n};\n\npp$8.flowParsePrefixType = function () {\n  var node = this.startNode();\n  if (this.eat(types.question)) {\n    node.typeAnnotation = this.flowParsePrefixType();\n    return this.finishNode(node, "NullableTypeAnnotation");\n  } else {\n    return this.flowParsePostfixType();\n  }\n};\n\npp$8.flowParseAnonFunctionWithoutParens = function () {\n  var param = this.flowParsePrefixType();\n  if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n    var node = this.startNodeAt(param.start, param.loc.start);\n    node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n    node.rest = null;\n    node.returnType = this.flowParseType();\n    node.typeParameters = null;\n    return this.finishNode(node, "FunctionTypeAnnotation");\n  }\n  return param;\n};\n\npp$8.flowParseIntersectionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseAND);\n  var type = this.flowParseAnonFunctionWithoutParens();\n  node.types = [type];\n  while (this.eat(types.bitwiseAND)) {\n    node.types.push(this.flowParseAnonFunctionWithoutParens());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, "IntersectionTypeAnnotation");\n};\n\npp$8.flowParseUnionType = function () {\n  var node = this.startNode();\n  this.eat(types.bitwiseOR);\n  var type = this.flowParseIntersectionType();\n  node.types = [type];\n  while (this.eat(types.bitwiseOR)) {\n    node.types.push(this.flowParseIntersectionType());\n  }\n  return node.types.length === 1 ? type : this.finishNode(node, "UnionTypeAnnotation");\n};\n\npp$8.flowParseType = function () {\n  var oldInType = this.state.inType;\n  this.state.inType = true;\n  var type = this.flowParseUnionType();\n  this.state.inType = oldInType;\n  return type;\n};\n\npp$8.flowParseTypeAnnotation = function () {\n  var node = this.startNode();\n  node.typeAnnotation = this.flowParseTypeInitialiser();\n  return this.finishNode(node, "TypeAnnotation");\n};\n\npp$8.flowParseTypeAndPredicateAnnotation = function () {\n  var node = this.startNode();\n\n  var _flowParseTypeAndPred2 = this.flowParseTypeAndPredicateInitialiser();\n\n  node.typeAnnotation = _flowParseTypeAndPred2[0];\n  node.predicate = _flowParseTypeAndPred2[1];\n\n  return this.finishNode(node, "TypeAnnotation");\n};\n\npp$8.flowParseTypeAnnotatableIdentifier = function () {\n  var ident = this.flowParseRestrictedIdentifier();\n  if (this.match(types.colon)) {\n    ident.typeAnnotation = this.flowParseTypeAnnotation();\n    this.finishNode(ident, ident.type);\n  }\n  return ident;\n};\n\npp$8.typeCastToParameter = function (node) {\n  node.expression.typeAnnotation = node.typeAnnotation;\n\n  return this.finishNodeAt(node.expression, node.expression.type, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n};\n\npp$8.flowParseVariance = function () {\n  var variance = null;\n  if (this.match(types.plusMin)) {\n    if (this.state.value === "+") {\n      variance = "plus";\n    } else if (this.state.value === "-") {\n      variance = "minus";\n    }\n    this.next();\n  }\n  return variance;\n};\n\nvar flowPlugin = function (instance) {\n  // plain function return types: function name(): string {}\n  instance.extend("parseFunctionBody", function (inner) {\n    return function (node, allowExpression) {\n      if (this.match(types.colon) && !allowExpression) {\n        // if allowExpression is true then we\'re parsing an arrow function and if\n        // there\'s a return type then it\'s been handled elsewhere\n        node.returnType = this.flowParseTypeAndPredicateAnnotation();\n      }\n\n      return inner.call(this, node, allowExpression);\n    };\n  });\n\n  // interfaces\n  instance.extend("parseStatement", function (inner) {\n    return function (declaration, topLevel) {\n      // strict mode handling of `interface` since it\'s a reserved word\n      if (this.state.strict && this.match(types.name) && this.state.value === "interface") {\n        var node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else {\n        return inner.call(this, declaration, topLevel);\n      }\n    };\n  });\n\n  // declares, interfaces and type aliases\n  instance.extend("parseExpressionStatement", function (inner) {\n    return function (node, expr) {\n      if (expr.type === "Identifier") {\n        if (expr.name === "declare") {\n          if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(types.name)) {\n          if (expr.name === "interface") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === "type") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === "opaque") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return inner.call(this, node, expr);\n    };\n  });\n\n  // export type\n  instance.extend("shouldParseExportDeclaration", function (inner) {\n    return function () {\n      return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || inner.call(this);\n    };\n  });\n\n  instance.extend("isExportDefaultSpecifier", function (inner) {\n    return function () {\n      if (this.match(types.name) && (this.state.value === "type" || this.state.value === "interface" || this.state.value === "opaque")) {\n        return false;\n      }\n\n      return inner.call(this);\n    };\n  });\n\n  instance.extend("parseConditional", function (inner) {\n    return function (expr, noIn, startPos, startLoc, refNeedsArrowPos) {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos && this.match(types.question)) {\n        var state = this.state.clone();\n        try {\n          return inner.call(this, expr, noIn, startPos, startLoc);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n            refNeedsArrowPos.start = err.pos || this.state.start;\n            return expr;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, expr, noIn, startPos, startLoc);\n    };\n  });\n\n  instance.extend("parseParenItem", function (inner) {\n    return function (node, startPos, startLoc) {\n      node = inner.call(this, node, startPos, startLoc);\n      if (this.eat(types.question)) {\n        node.optional = true;\n      }\n\n      if (this.match(types.colon)) {\n        var typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, "TypeCastExpression");\n      }\n\n      return node;\n    };\n  });\n\n  instance.extend("parseExport", function (inner) {\n    return function (node) {\n      node = inner.call(this, node);\n      if (node.type === "ExportNamedDeclaration") {\n        node.exportKind = node.exportKind || "value";\n      }\n      return node;\n    };\n  });\n\n  instance.extend("parseExportDeclaration", function (inner) {\n    return function (node) {\n      if (this.isContextual("type")) {\n        node.exportKind = "type";\n\n        var declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(types.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual("opaque")) {\n        node.exportKind = "type";\n\n        var _declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(_declarationNode, false);\n      } else if (this.isContextual("interface")) {\n        node.exportKind = "type";\n        var _declarationNode2 = this.startNode();\n        this.next();\n        return this.flowParseInterface(_declarationNode2);\n      } else {\n        return inner.call(this, node);\n      }\n    };\n  });\n\n  instance.extend("parseClassId", function (inner) {\n    return function (node) {\n      inner.apply(this, arguments);\n      if (this.isRelational("<")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    };\n  });\n\n  // don\'t consider `void` to be a keyword as then it\'ll use the void token type\n  // and set startExpr\n  instance.extend("isKeyword", function (inner) {\n    return function (name) {\n      if (this.state.inType && name === "void") {\n        return false;\n      } else {\n        return inner.call(this, name);\n      }\n    };\n  });\n\n  // ensure that inside flow types, we bypass the jsx parser plugin\n  instance.extend("readToken", function (inner) {\n    return function (code) {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(types.relational, 1);\n      } else {\n        return inner.call(this, code);\n      }\n    };\n  });\n\n  // don\'t lex any token as a jsx one inside a flow type\n  instance.extend("jsx_readToken", function (inner) {\n    return function () {\n      if (!this.state.inType) return inner.call(this);\n    };\n  });\n\n  instance.extend("toAssignable", function (inner) {\n    return function (node, isBinding, contextDescription) {\n      if (node.type === "TypeCastExpression") {\n        return inner.call(this, this.typeCastToParameter(node), isBinding, contextDescription);\n      } else {\n        return inner.call(this, node, isBinding, contextDescription);\n      }\n    };\n  });\n\n  // turn type casts that we found in function parameter head into type annotated params\n  instance.extend("toAssignableList", function (inner) {\n    return function (exprList, isBinding, contextDescription) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr.type === "TypeCastExpression") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return inner.call(this, exprList, isBinding, contextDescription);\n    };\n  });\n\n  // this is a list of nodes, from something like a call expression, we need to filter the\n  // type casts that we\'ve found that are illegal in this context\n  instance.extend("toReferencedList", function () {\n    return function (exprList) {\n      for (var i = 0; i < exprList.length; i++) {\n        var expr = exprList[i];\n        if (expr && expr._exprListItem && expr.type === "TypeCastExpression") {\n          this.raise(expr.start, "Unexpected type cast");\n        }\n      }\n\n      return exprList;\n    };\n  });\n\n  // parse an item inside a expression list eg. `(NODE, NODE)` where NODE represents\n  // the position where this function is called\n  instance.extend("parseExprListItem", function (inner) {\n    return function () {\n      var container = this.startNode();\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var node = inner.call.apply(inner, [this].concat(args));\n      if (this.match(types.colon)) {\n        container._exprListItem = true;\n        container.expression = node;\n        container.typeAnnotation = this.flowParseTypeAnnotation();\n        return this.finishNode(container, "TypeCastExpression");\n      } else {\n        return node;\n      }\n    };\n  });\n\n  instance.extend("checkLVal", function (inner) {\n    return function (node) {\n      if (node.type !== "TypeCastExpression") {\n        return inner.apply(this, arguments);\n      }\n    };\n  });\n\n  // parse class property type annotations\n  instance.extend("parseClassProperty", function (inner) {\n    return function (node) {\n      delete node.variancePos;\n      if (this.match(types.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return inner.call(this, node);\n    };\n  });\n\n  // determine whether or not we\'re currently in the position where a class method would appear\n  instance.extend("isClassMethod", function (inner) {\n    return function () {\n      return this.isRelational("<") || inner.call(this);\n    };\n  });\n\n  // determine whether or not we\'re currently in the position where a class property would appear\n  instance.extend("isClassProperty", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  instance.extend("isNonstaticConstructor", function (inner) {\n    return function (method) {\n      return !this.match(types.colon) && inner.call(this, method);\n    };\n  });\n\n  // parse type parameters for class methods\n  instance.extend("parseClassMethod", function (inner) {\n    return function (classBody, method) {\n      if (method.variance) {\n        this.unexpected(method.variancePos);\n      }\n      delete method.variance;\n      delete method.variancePos;\n      if (this.isRelational("<")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      inner.call.apply(inner, [this, classBody, method].concat(args));\n    };\n  });\n\n  // parse a the super class type parameters and implements\n  instance.extend("parseClassSuper", function (inner) {\n    return function (node, isStatement) {\n      inner.call(this, node, isStatement);\n      if (node.superClass && this.isRelational("<")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual("implements")) {\n        this.next();\n        var implemented = node.implements = [];\n        do {\n          var _node = this.startNode();\n          _node.id = this.parseIdentifier();\n          if (this.isRelational("<")) {\n            _node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            _node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(_node, "ClassImplements"));\n        } while (this.eat(types.comma));\n      }\n    };\n  });\n\n  instance.extend("parsePropertyName", function (inner) {\n    return function (node) {\n      var variancePos = this.state.start;\n      var variance = this.flowParseVariance();\n      var key = inner.call(this, node);\n      node.variance = variance;\n      node.variancePos = variancePos;\n      return key;\n    };\n  });\n\n  // parse type parameters for object method shorthand\n  instance.extend("parseObjPropValue", function (inner) {\n    return function (prop) {\n      if (prop.variance) {\n        this.unexpected(prop.variancePos);\n      }\n      delete prop.variance;\n      delete prop.variancePos;\n\n      var typeParameters = void 0;\n\n      // method shorthand\n      if (this.isRelational("<")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(types.parenL)) this.unexpected();\n      }\n\n      inner.apply(this, arguments);\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    };\n  });\n\n  instance.extend("parseAssignableListItemTypes", function () {\n    return function (param) {\n      if (this.eat(types.question)) {\n        param.optional = true;\n      }\n      if (this.match(types.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.finishNode(param, param.type);\n      return param;\n    };\n  });\n\n  instance.extend("parseMaybeDefault", function (inner) {\n    return function () {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var node = inner.apply(this, args);\n\n      if (node.type === "AssignmentPattern" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n        this.raise(node.typeAnnotation.start, "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`");\n      }\n\n      return node;\n    };\n  });\n\n  // parse typeof and type imports\n  instance.extend("parseImportSpecifiers", function (inner) {\n    return function (node) {\n      node.importKind = "value";\n\n      var kind = null;\n      if (this.match(types._typeof)) {\n        kind = "typeof";\n      } else if (this.isContextual("type")) {\n        kind = "type";\n      }\n      if (kind) {\n        var lh = this.lookahead();\n        if (lh.type === types.name && lh.value !== "from" || lh.type === types.braceL || lh.type === types.star) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      inner.call(this, node);\n    };\n  });\n\n  // parse import-type/typeof shorthand\n  instance.extend("parseImportSpecifier", function () {\n    return function (node) {\n      var specifier = this.startNode();\n      var firstIdentLoc = this.state.start;\n      var firstIdent = this.parseIdentifier(true);\n\n      var specifierTypeKind = null;\n      if (firstIdent.name === "type") {\n        specifierTypeKind = "type";\n      } else if (firstIdent.name === "typeof") {\n        specifierTypeKind = "typeof";\n      }\n\n      var isBinding = false;\n      if (this.isContextual("as")) {\n        var as_ident = this.parseIdentifier(true);\n        if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual("as")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      if ((node.importKind === "type" || node.importKind === "typeof") && (specifier.importKind === "type" || specifier.importKind === "typeof")) {\n        this.raise(firstIdentLoc, "`The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements`");\n      }\n\n      if (isBinding) this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n\n      this.checkLVal(specifier.local, true, undefined, "import specifier");\n      node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));\n    };\n  });\n\n  // parse function type parameters - function foo<T>() {}\n  instance.extend("parseFunctionParams", function (inner) {\n    return function (node) {\n      if (this.isRelational("<")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      inner.call(this, node);\n    };\n  });\n\n  // parse flow type annotations on variable declarator heads - let foo: string = bar\n  instance.extend("parseVarHead", function (inner) {\n    return function (decl) {\n      inner.call(this, decl);\n      if (this.match(types.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.finishNode(decl.id, decl.id.type);\n      }\n    };\n  });\n\n  // parse the return type of an async arrow function - let foo = (async (): number => {});\n  instance.extend("parseAsyncArrowFromCallExpression", function (inner) {\n    return function (node, call) {\n      if (this.match(types.colon)) {\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return inner.call(this, node, call);\n    };\n  });\n\n  // todo description\n  instance.extend("shouldParseAsyncArrow", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n\n  // We need to support type parameter declarations for arrow functions. This\n  // is tricky. There are three situations we need to handle\n  //\n  // 1. This is either JSX or an arrow function. We\'ll try JSX first. If that\n  //    fails, we\'ll try an arrow function. If that fails, we\'ll throw the JSX\n  //    error.\n  // 2. This is an arrow function. We\'ll parse the type parameter declaration,\n  //    parse the rest, make sure the rest is an arrow function, and go from\n  //    there\n  // 3. This is neither. Just call the inner function\n  instance.extend("parseMaybeAssign", function (inner) {\n    return function () {\n      var jsxError = null;\n\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      if (types.jsxTagStart && this.match(types.jsxTagStart)) {\n        var state = this.state.clone();\n        try {\n          return inner.apply(this, args);\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n\n            // Remove `tc.j_expr` and `tc.j_oTag` from context added\n            // by parsing `jsxTagStart` to stop the JSX plugin from\n            // messing with the tokens\n            this.state.context.length -= 2;\n\n            jsxError = err;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      if (jsxError != null || this.isRelational("<")) {\n        var arrowExpression = void 0;\n        var typeParameters = void 0;\n        try {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          arrowExpression = inner.apply(this, args);\n          arrowExpression.typeParameters = typeParameters;\n          arrowExpression.start = typeParameters.start;\n          arrowExpression.loc.start = typeParameters.loc.start;\n        } catch (err) {\n          throw jsxError || err;\n        }\n\n        if (arrowExpression.type === "ArrowFunctionExpression") {\n          return arrowExpression;\n        } else if (jsxError != null) {\n          throw jsxError;\n        } else {\n          this.raise(typeParameters.start, "Expected an arrow function after this type parameter declaration");\n        }\n      }\n\n      return inner.apply(this, args);\n    };\n  });\n\n  // handle return types for arrow functions\n  instance.extend("parseArrow", function (inner) {\n    return function (node) {\n      if (this.match(types.colon)) {\n        var state = this.state.clone();\n        try {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          var returnType = this.flowParseTypeAndPredicateAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(types.arrow)) this.unexpected();\n          // assign after it is clear it is an arrow\n          node.returnType = returnType;\n        } catch (err) {\n          if (err instanceof SyntaxError) {\n            this.state = state;\n          } else {\n            // istanbul ignore next: no such error is expected\n            throw err;\n          }\n        }\n      }\n\n      return inner.call(this, node);\n    };\n  });\n\n  instance.extend("shouldParseArrow", function (inner) {\n    return function () {\n      return this.match(types.colon) || inner.call(this);\n    };\n  });\n};\n\n// Adapted from String.fromcodepoint to export the function without modifying String\n/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\n\n// The MIT License (MIT)\n// Copyright (c) Mathias Bynens\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n// associated documentation files (the "Software"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge, publish, distribute,\n// sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies or\n// substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n// NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar fromCodePoint = String.fromCodePoint;\n\nif (!fromCodePoint) {\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  fromCodePoint = function fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate = void 0;\n    var lowSurrogate = void 0;\n    var index = -1;\n    var length = arguments.length;\n    if (!length) {\n      return "";\n    }\n    var result = "";\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n      if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 || // not a valid Unicode code point\n      codePoint > 0x10FFFF || // not a valid Unicode code point\n      floor(codePoint) != codePoint // not an integer\n      ) {\n          throw RangeError("Invalid code point: " + codePoint);\n        }\n      if (codePoint <= 0xFFFF) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xD800;\n        lowSurrogate = codePoint % 0x400 + 0xDC00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n      if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n    return result;\n  };\n}\n\nvar fromCodePoint$1 = fromCodePoint;\n\nvar XHTMLEntities = {\n  quot: "\\"",\n  amp: "&",\n  apos: "\'",\n  lt: "<",\n  gt: ">",\n  nbsp: "\\xA0",\n  iexcl: "\\xA1",\n  cent: "\\xA2",\n  pound: "\\xA3",\n  curren: "\\xA4",\n  yen: "\\xA5",\n  brvbar: "\\xA6",\n  sect: "\\xA7",\n  uml: "\\xA8",\n  copy: "\\xA9",\n  ordf: "\\xAA",\n  laquo: "\\xAB",\n  not: "\\xAC",\n  shy: "\\xAD",\n  reg: "\\xAE",\n  macr: "\\xAF",\n  deg: "\\xB0",\n  plusmn: "\\xB1",\n  sup2: "\\xB2",\n  sup3: "\\xB3",\n  acute: "\\xB4",\n  micro: "\\xB5",\n  para: "\\xB6",\n  middot: "\\xB7",\n  cedil: "\\xB8",\n  sup1: "\\xB9",\n  ordm: "\\xBA",\n  raquo: "\\xBB",\n  frac14: "\\xBC",\n  frac12: "\\xBD",\n  frac34: "\\xBE",\n  iquest: "\\xBF",\n  Agrave: "\\xC0",\n  Aacute: "\\xC1",\n  Acirc: "\\xC2",\n  Atilde: "\\xC3",\n  Auml: "\\xC4",\n  Aring: "\\xC5",\n  AElig: "\\xC6",\n  Ccedil: "\\xC7",\n  Egrave: "\\xC8",\n  Eacute: "\\xC9",\n  Ecirc: "\\xCA",\n  Euml: "\\xCB",\n  Igrave: "\\xCC",\n  Iacute: "\\xCD",\n  Icirc: "\\xCE",\n  Iuml: "\\xCF",\n  ETH: "\\xD0",\n  Ntilde: "\\xD1",\n  Ograve: "\\xD2",\n  Oacute: "\\xD3",\n  Ocirc: "\\xD4",\n  Otilde: "\\xD5",\n  Ouml: "\\xD6",\n  times: "\\xD7",\n  Oslash: "\\xD8",\n  Ugrave: "\\xD9",\n  Uacute: "\\xDA",\n  Ucirc: "\\xDB",\n  Uuml: "\\xDC",\n  Yacute: "\\xDD",\n  THORN: "\\xDE",\n  szlig: "\\xDF",\n  agrave: "\\xE0",\n  aacute: "\\xE1",\n  acirc: "\\xE2",\n  atilde: "\\xE3",\n  auml: "\\xE4",\n  aring: "\\xE5",\n  aelig: "\\xE6",\n  ccedil: "\\xE7",\n  egrave: "\\xE8",\n  eacute: "\\xE9",\n  ecirc: "\\xEA",\n  euml: "\\xEB",\n  igrave: "\\xEC",\n  iacute: "\\xED",\n  icirc: "\\xEE",\n  iuml: "\\xEF",\n  eth: "\\xF0",\n  ntilde: "\\xF1",\n  ograve: "\\xF2",\n  oacute: "\\xF3",\n  ocirc: "\\xF4",\n  otilde: "\\xF5",\n  ouml: "\\xF6",\n  divide: "\\xF7",\n  oslash: "\\xF8",\n  ugrave: "\\xF9",\n  uacute: "\\xFA",\n  ucirc: "\\xFB",\n  uuml: "\\xFC",\n  yacute: "\\xFD",\n  thorn: "\\xFE",\n  yuml: "\\xFF",\n  OElig: "\\u0152",\n  oelig: "\\u0153",\n  Scaron: "\\u0160",\n  scaron: "\\u0161",\n  Yuml: "\\u0178",\n  fnof: "\\u0192",\n  circ: "\\u02C6",\n  tilde: "\\u02DC",\n  Alpha: "\\u0391",\n  Beta: "\\u0392",\n  Gamma: "\\u0393",\n  Delta: "\\u0394",\n  Epsilon: "\\u0395",\n  Zeta: "\\u0396",\n  Eta: "\\u0397",\n  Theta: "\\u0398",\n  Iota: "\\u0399",\n  Kappa: "\\u039A",\n  Lambda: "\\u039B",\n  Mu: "\\u039C",\n  Nu: "\\u039D",\n  Xi: "\\u039E",\n  Omicron: "\\u039F",\n  Pi: "\\u03A0",\n  Rho: "\\u03A1",\n  Sigma: "\\u03A3",\n  Tau: "\\u03A4",\n  Upsilon: "\\u03A5",\n  Phi: "\\u03A6",\n  Chi: "\\u03A7",\n  Psi: "\\u03A8",\n  Omega: "\\u03A9",\n  alpha: "\\u03B1",\n  beta: "\\u03B2",\n  gamma: "\\u03B3",\n  delta: "\\u03B4",\n  epsilon: "\\u03B5",\n  zeta: "\\u03B6",\n  eta: "\\u03B7",\n  theta: "\\u03B8",\n  iota: "\\u03B9",\n  kappa: "\\u03BA",\n  lambda: "\\u03BB",\n  mu: "\\u03BC",\n  nu: "\\u03BD",\n  xi: "\\u03BE",\n  omicron: "\\u03BF",\n  pi: "\\u03C0",\n  rho: "\\u03C1",\n  sigmaf: "\\u03C2",\n  sigma: "\\u03C3",\n  tau: "\\u03C4",\n  upsilon: "\\u03C5",\n  phi: "\\u03C6",\n  chi: "\\u03C7",\n  psi: "\\u03C8",\n  omega: "\\u03C9",\n  thetasym: "\\u03D1",\n  upsih: "\\u03D2",\n  piv: "\\u03D6",\n  ensp: "\\u2002",\n  emsp: "\\u2003",\n  thinsp: "\\u2009",\n  zwnj: "\\u200C",\n  zwj: "\\u200D",\n  lrm: "\\u200E",\n  rlm: "\\u200F",\n  ndash: "\\u2013",\n  mdash: "\\u2014",\n  lsquo: "\\u2018",\n  rsquo: "\\u2019",\n  sbquo: "\\u201A",\n  ldquo: "\\u201C",\n  rdquo: "\\u201D",\n  bdquo: "\\u201E",\n  dagger: "\\u2020",\n  Dagger: "\\u2021",\n  bull: "\\u2022",\n  hellip: "\\u2026",\n  permil: "\\u2030",\n  prime: "\\u2032",\n  Prime: "\\u2033",\n  lsaquo: "\\u2039",\n  rsaquo: "\\u203A",\n  oline: "\\u203E",\n  frasl: "\\u2044",\n  euro: "\\u20AC",\n  image: "\\u2111",\n  weierp: "\\u2118",\n  real: "\\u211C",\n  trade: "\\u2122",\n  alefsym: "\\u2135",\n  larr: "\\u2190",\n  uarr: "\\u2191",\n  rarr: "\\u2192",\n  darr: "\\u2193",\n  harr: "\\u2194",\n  crarr: "\\u21B5",\n  lArr: "\\u21D0",\n  uArr: "\\u21D1",\n  rArr: "\\u21D2",\n  dArr: "\\u21D3",\n  hArr: "\\u21D4",\n  forall: "\\u2200",\n  part: "\\u2202",\n  exist: "\\u2203",\n  empty: "\\u2205",\n  nabla: "\\u2207",\n  isin: "\\u2208",\n  notin: "\\u2209",\n  ni: "\\u220B",\n  prod: "\\u220F",\n  sum: "\\u2211",\n  minus: "\\u2212",\n  lowast: "\\u2217",\n  radic: "\\u221A",\n  prop: "\\u221D",\n  infin: "\\u221E",\n  ang: "\\u2220",\n  and: "\\u2227",\n  or: "\\u2228",\n  cap: "\\u2229",\n  cup: "\\u222A",\n  "int": "\\u222B",\n  there4: "\\u2234",\n  sim: "\\u223C",\n  cong: "\\u2245",\n  asymp: "\\u2248",\n  ne: "\\u2260",\n  equiv: "\\u2261",\n  le: "\\u2264",\n  ge: "\\u2265",\n  sub: "\\u2282",\n  sup: "\\u2283",\n  nsub: "\\u2284",\n  sube: "\\u2286",\n  supe: "\\u2287",\n  oplus: "\\u2295",\n  otimes: "\\u2297",\n  perp: "\\u22A5",\n  sdot: "\\u22C5",\n  lceil: "\\u2308",\n  rceil: "\\u2309",\n  lfloor: "\\u230A",\n  rfloor: "\\u230B",\n  lang: "\\u2329",\n  rang: "\\u232A",\n  loz: "\\u25CA",\n  spades: "\\u2660",\n  clubs: "\\u2663",\n  hearts: "\\u2665",\n  diams: "\\u2666"\n};\n\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\n\ntypes$1.j_oTag = new TokContext("<tag", false);\ntypes$1.j_cTag = new TokContext("</tag", false);\ntypes$1.j_expr = new TokContext("<tag>...</tag>", true, true);\n\ntypes.jsxName = new TokenType("jsxName");\ntypes.jsxText = new TokenType("jsxText", { beforeExpr: true });\ntypes.jsxTagStart = new TokenType("jsxTagStart", { startsExpr: true });\ntypes.jsxTagEnd = new TokenType("jsxTagEnd");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(types$1.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.state.context.pop();\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nvar pp$9 = Parser.prototype;\n\n// Reads inline JSX contents token.\n\npp$9.jsxReadToken = function () {\n  var out = "";\n  var chunkStart = this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, "Unterminated JSX contents");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n\n    switch (ch) {\n      case 60: // "<"\n      case 123:\n        // "{"\n        if (this.state.pos === this.state.start) {\n          if (ch === 60 && this.state.exprAllowed) {\n            ++this.state.pos;\n            return this.finishToken(types.jsxTagStart);\n          }\n          return this.getTokenFromCode(ch);\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        return this.finishToken(types.jsxText, out);\n\n      case 38:\n        // "&"\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n        break;\n\n      default:\n        if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(true);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n    }\n  }\n};\n\npp$9.jsxReadNewLine = function (normalizeCRLF) {\n  var ch = this.input.charCodeAt(this.state.pos);\n  var out = void 0;\n  ++this.state.pos;\n  if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n    ++this.state.pos;\n    out = normalizeCRLF ? "\\n" : "\\r\\n";\n  } else {\n    out = String.fromCharCode(ch);\n  }\n  ++this.state.curLine;\n  this.state.lineStart = this.state.pos;\n\n  return out;\n};\n\npp$9.jsxReadString = function (quote) {\n  var out = "";\n  var chunkStart = ++this.state.pos;\n  for (;;) {\n    if (this.state.pos >= this.input.length) {\n      this.raise(this.state.start, "Unterminated string constant");\n    }\n\n    var ch = this.input.charCodeAt(this.state.pos);\n    if (ch === quote) break;\n    if (ch === 38) {\n      // "&"\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadEntity();\n      chunkStart = this.state.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.state.pos);\n      out += this.jsxReadNewLine(false);\n      chunkStart = this.state.pos;\n    } else {\n      ++this.state.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.state.pos++);\n  return this.finishToken(types.string, out);\n};\n\npp$9.jsxReadEntity = function () {\n  var str = "";\n  var count = 0;\n  var entity = void 0;\n  var ch = this.input[this.state.pos];\n\n  var startPos = ++this.state.pos;\n  while (this.state.pos < this.input.length && count++ < 10) {\n    ch = this.input[this.state.pos++];\n    if (ch === ";") {\n      if (str[0] === "#") {\n        if (str[1] === "x") {\n          str = str.substr(2);\n          if (HEX_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 16));\n        } else {\n          str = str.substr(1);\n          if (DECIMAL_NUMBER.test(str)) entity = fromCodePoint$1(parseInt(str, 10));\n        }\n      } else {\n        entity = XHTMLEntities[str];\n      }\n      break;\n    }\n    str += ch;\n  }\n  if (!entity) {\n    this.state.pos = startPos;\n    return "&";\n  }\n  return entity;\n};\n\n// Read a JSX identifier (valid tag or attribute name).\n//\n// Optimized version since JSX identifiers can"t contain\n// escape characters and so can be read as single slice.\n// Also assumes that first character was already checked\n// by isIdentifierStart in readToken.\n\npp$9.jsxReadWord = function () {\n  var ch = void 0;\n  var start = this.state.pos;\n  do {\n    ch = this.input.charCodeAt(++this.state.pos);\n  } while (isIdentifierChar(ch) || ch === 45); // "-"\n  return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n};\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === "JSXIdentifier") {\n    return object.name;\n  }\n\n  if (object.type === "JSXNamespacedName") {\n    return object.namespace.name + ":" + object.name.name;\n  }\n\n  if (object.type === "JSXMemberExpression") {\n    return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);\n  }\n}\n\n// Parse next token as JSX identifier\n\npp$9.jsxParseIdentifier = function () {\n  var node = this.startNode();\n  if (this.match(types.jsxName)) {\n    node.name = this.state.value;\n  } else if (this.state.type.keyword) {\n    node.name = this.state.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  return this.finishNode(node, "JSXIdentifier");\n};\n\n// Parse namespaced identifier.\n\npp$9.jsxParseNamespacedName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var name = this.jsxParseIdentifier();\n  if (!this.eat(types.colon)) return name;\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.namespace = name;\n  node.name = this.jsxParseIdentifier();\n  return this.finishNode(node, "JSXNamespacedName");\n};\n\n// Parses element name in any form - namespaced, member\n// or single identifier.\n\npp$9.jsxParseElementName = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  var node = this.jsxParseNamespacedName();\n  while (this.eat(types.dot)) {\n    var newNode = this.startNodeAt(startPos, startLoc);\n    newNode.object = node;\n    newNode.property = this.jsxParseIdentifier();\n    node = this.finishNode(newNode, "JSXMemberExpression");\n  }\n  return node;\n};\n\n// Parses any type of JSX attribute value.\n\npp$9.jsxParseAttributeValue = function () {\n  var node = void 0;\n  switch (this.state.type) {\n    case types.braceL:\n      node = this.jsxParseExpressionContainer();\n      if (node.expression.type === "JSXEmptyExpression") {\n        this.raise(node.start, "JSX attributes must only be assigned a non-empty expression");\n      } else {\n        return node;\n      }\n\n    case types.jsxTagStart:\n    case types.string:\n      node = this.parseExprAtom();\n      node.extra = null;\n      return node;\n\n    default:\n      this.raise(this.state.start, "JSX value should be either an expression or a quoted JSX text");\n  }\n};\n\n// JSXEmptyExpression is unique type since it doesn\'t actually parse anything,\n// and so it should start at the end of last read token (left brace) and finish\n// at the beginning of the next one (right brace).\n\npp$9.jsxParseEmptyExpression = function () {\n  var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n  return this.finishNodeAt(node, "JSXEmptyExpression", this.state.start, this.state.startLoc);\n};\n\n// Parse JSX spread child\n\npp$9.jsxParseSpreadChild = function () {\n  var node = this.startNode();\n  this.expect(types.braceL);\n  this.expect(types.ellipsis);\n  node.expression = this.parseExpression();\n  this.expect(types.braceR);\n\n  return this.finishNode(node, "JSXSpreadChild");\n};\n\n// Parses JSX expression enclosed into curly brackets.\n\n\npp$9.jsxParseExpressionContainer = function () {\n  var node = this.startNode();\n  this.next();\n  if (this.match(types.braceR)) {\n    node.expression = this.jsxParseEmptyExpression();\n  } else {\n    node.expression = this.parseExpression();\n  }\n  this.expect(types.braceR);\n  return this.finishNode(node, "JSXExpressionContainer");\n};\n\n// Parses following JSX attribute name-value pair.\n\npp$9.jsxParseAttribute = function () {\n  var node = this.startNode();\n  if (this.eat(types.braceL)) {\n    this.expect(types.ellipsis);\n    node.argument = this.parseMaybeAssign();\n    this.expect(types.braceR);\n    return this.finishNode(node, "JSXSpreadAttribute");\n  }\n  node.name = this.jsxParseNamespacedName();\n  node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n  return this.finishNode(node, "JSXAttribute");\n};\n\n// Parses JSX opening tag starting after "<".\n\npp$9.jsxParseOpeningElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.attributes = [];\n  node.name = this.jsxParseElementName();\n  while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n    node.attributes.push(this.jsxParseAttribute());\n  }\n  node.selfClosing = this.eat(types.slash);\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, "JSXOpeningElement");\n};\n\n// Parses JSX closing tag starting after "</".\n\npp$9.jsxParseClosingElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.name = this.jsxParseElementName();\n  this.expect(types.jsxTagEnd);\n  return this.finishNode(node, "JSXClosingElement");\n};\n\n// Parses entire JSX element, including it"s opening tag\n// (starting after "<"), attributes, contents and closing tag.\n\npp$9.jsxParseElementAt = function (startPos, startLoc) {\n  var node = this.startNodeAt(startPos, startLoc);\n  var children = [];\n  var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n  var closingElement = null;\n\n  if (!openingElement.selfClosing) {\n    contents: for (;;) {\n      switch (this.state.type) {\n        case types.jsxTagStart:\n          startPos = this.state.start;startLoc = this.state.startLoc;\n          this.next();\n          if (this.eat(types.slash)) {\n            closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n            break contents;\n          }\n          children.push(this.jsxParseElementAt(startPos, startLoc));\n          break;\n\n        case types.jsxText:\n          children.push(this.parseExprAtom());\n          break;\n\n        case types.braceL:\n          if (this.lookahead().type === types.ellipsis) {\n            children.push(this.jsxParseSpreadChild());\n          } else {\n            children.push(this.jsxParseExpressionContainer());\n          }\n\n          break;\n\n        // istanbul ignore next - should never happen\n        default:\n          this.unexpected();\n      }\n    }\n\n    if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n      this.raise(closingElement.start, "Expected corresponding JSX closing tag for <" + getQualifiedJSXName(openingElement.name) + ">");\n    }\n  }\n\n  node.openingElement = openingElement;\n  node.closingElement = closingElement;\n  node.children = children;\n  if (this.match(types.relational) && this.state.value === "<") {\n    this.raise(this.state.start, "Adjacent JSX elements must be wrapped in an enclosing tag");\n  }\n  return this.finishNode(node, "JSXElement");\n};\n\n// Parses entire JSX element from current position.\n\npp$9.jsxParseElement = function () {\n  var startPos = this.state.start;\n  var startLoc = this.state.startLoc;\n  this.next();\n  return this.jsxParseElementAt(startPos, startLoc);\n};\n\nvar jsxPlugin = function (instance) {\n  instance.extend("parseExprAtom", function (inner) {\n    return function (refShortHandDefaultPos) {\n      if (this.match(types.jsxText)) {\n        var node = this.parseLiteral(this.state.value, "JSXText");\n        // https://github.com/babel/babel/issues/2078\n        node.extra = null;\n        return node;\n      } else if (this.match(types.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else {\n        return inner.call(this, refShortHandDefaultPos);\n      }\n    };\n  });\n\n  instance.extend("readToken", function (inner) {\n    return function (code) {\n      if (this.state.inPropertyName) return inner.call(this, code);\n\n      var context = this.curContext();\n\n      if (context === types$1.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === types$1.j_oTag || context === types$1.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === 62) {\n          ++this.state.pos;\n          return this.finishToken(types.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (code === 60 && this.state.exprAllowed) {\n        ++this.state.pos;\n        return this.finishToken(types.jsxTagStart);\n      }\n\n      return inner.call(this, code);\n    };\n  });\n\n  instance.extend("updateContext", function (inner) {\n    return function (prevType) {\n      if (this.match(types.braceL)) {\n        var curContext = this.curContext();\n        if (curContext === types$1.j_oTag) {\n          this.state.context.push(types$1.braceExpression);\n        } else if (curContext === types$1.j_expr) {\n          this.state.context.push(types$1.templateQuasi);\n        } else {\n          inner.call(this, prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(types$1.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return inner.call(this, prevType);\n      }\n    };\n  });\n};\n\nplugins.estree = estreePlugin;\nplugins.flow = flowPlugin;\nplugins.jsx = jsxPlugin;\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse();\n}\n\nfunction parseExpression(input, options) {\n  var parser = new Parser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;\n\n\n//# sourceURL=webpack:///./node_modules/babylon/lib/index.js?')},"./node_modules/balanced-match/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n\n\n//# sourceURL=webpack:///./node_modules/balanced-match/index.js?")},"./node_modules/base64-js/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?")},"./node_modules/brace-expansion/index.js":function(module,exports,__webpack_require__){eval("var concatMap = __webpack_require__(\"./node_modules/concat-map/index.js\");\nvar balanced = __webpack_require__(\"./node_modules/balanced-match/index.js\");\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n\n\n//# sourceURL=webpack:///./node_modules/brace-expansion/index.js?")},"./node_modules/buffer/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(\"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(\"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(\"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?")},"./node_modules/concat-map/index.js":function(module,exports){eval("module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/concat-map/index.js?")},"./node_modules/core-js/library/fn/array/from.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.string.iterator.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.array.from.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Array.from;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/array/from.js?')},"./node_modules/core-js/library/fn/get-iterator.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/web.dom.iterable.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.string.iterator.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/core.get-iterator.js");\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/get-iterator.js?')},"./node_modules/core-js/library/fn/json/stringify.js":function(module,exports,__webpack_require__){eval('var core = __webpack_require__("./node_modules/core-js/library/modules/_core.js");\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/json/stringify.js?')},"./node_modules/core-js/library/fn/map.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.to-string.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.string.iterator.js");\n__webpack_require__("./node_modules/core-js/library/modules/web.dom.iterable.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.map.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.map.to-json.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.map.of.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.map.from.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Map;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/map.js?')},"./node_modules/core-js/library/fn/number/max-safe-integer.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.number.max-safe-integer.js");\nmodule.exports = 0x1fffffffffffff;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/number/max-safe-integer.js?')},"./node_modules/core-js/library/fn/object/assign.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.assign.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Object.assign;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/assign.js?')},"./node_modules/core-js/library/fn/object/create.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.create.js");\nvar $Object = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/create.js?')},"./node_modules/core-js/library/fn/object/get-own-property-symbols.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.symbol.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Object.getOwnPropertySymbols;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/get-own-property-symbols.js?')},"./node_modules/core-js/library/fn/object/keys.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.keys.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Object.keys;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/keys.js?')},"./node_modules/core-js/library/fn/object/set-prototype-of.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.set-prototype-of.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/set-prototype-of.js?')},"./node_modules/core-js/library/fn/symbol/for.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.symbol.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Symbol[\'for\'];\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/symbol/for.js?')},"./node_modules/core-js/library/fn/symbol/index.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.symbol.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.object.to-string.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.symbol.async-iterator.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.symbol.observable.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").Symbol;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/symbol/index.js?')},"./node_modules/core-js/library/fn/symbol/iterator.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.string.iterator.js");\n__webpack_require__("./node_modules/core-js/library/modules/web.dom.iterable.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_wks-ext.js").f(\'iterator\');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/symbol/iterator.js?')},"./node_modules/core-js/library/fn/weak-map.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.to-string.js");\n__webpack_require__("./node_modules/core-js/library/modules/web.dom.iterable.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.weak-map.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.weak-map.of.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.weak-map.from.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").WeakMap;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/weak-map.js?')},"./node_modules/core-js/library/fn/weak-set.js":function(module,exports,__webpack_require__){eval('__webpack_require__("./node_modules/core-js/library/modules/es6.object.to-string.js");\n__webpack_require__("./node_modules/core-js/library/modules/web.dom.iterable.js");\n__webpack_require__("./node_modules/core-js/library/modules/es6.weak-set.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.weak-set.of.js");\n__webpack_require__("./node_modules/core-js/library/modules/es7.weak-set.from.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").WeakSet;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/weak-set.js?')},"./node_modules/core-js/library/modules/_a-function.js":function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_a-function.js?")},"./node_modules/core-js/library/modules/_add-to-unscopables.js":function(module,exports){eval("module.exports = function () { /* empty */ };\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js?")},"./node_modules/core-js/library/modules/_an-instance.js":function(module,exports){eval("module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_an-instance.js?")},"./node_modules/core-js/library/modules/_an-object.js":function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(\"./node_modules/core-js/library/modules/_is-object.js\");\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_an-object.js?")},"./node_modules/core-js/library/modules/_array-from-iterable.js":function(module,exports,__webpack_require__){eval('var forOf = __webpack_require__("./node_modules/core-js/library/modules/_for-of.js");\n\nmodule.exports = function (iter, ITERATOR) {\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-from-iterable.js?')},"./node_modules/core-js/library/modules/_array-includes.js":function(module,exports,__webpack_require__){eval('// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__("./node_modules/core-js/library/modules/_to-iobject.js");\nvar toLength = __webpack_require__("./node_modules/core-js/library/modules/_to-length.js");\nvar toAbsoluteIndex = __webpack_require__("./node_modules/core-js/library/modules/_to-absolute-index.js");\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-includes.js?')},"./node_modules/core-js/library/modules/_array-methods.js":function(module,exports,__webpack_require__){eval('// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar IObject = __webpack_require__("./node_modules/core-js/library/modules/_iobject.js");\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar toLength = __webpack_require__("./node_modules/core-js/library/modules/_to-length.js");\nvar asc = __webpack_require__("./node_modules/core-js/library/modules/_array-species-create.js");\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-methods.js?')},"./node_modules/core-js/library/modules/_array-species-constructor.js":function(module,exports,__webpack_require__){eval('var isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar isArray = __webpack_require__("./node_modules/core-js/library/modules/_is-array.js");\nvar SPECIES = __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'species\');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == \'function\' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-species-constructor.js?')},"./node_modules/core-js/library/modules/_array-species-create.js":function(module,exports,__webpack_require__){eval('// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = __webpack_require__("./node_modules/core-js/library/modules/_array-species-constructor.js");\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-species-create.js?')},"./node_modules/core-js/library/modules/_classof.js":function(module,exports,__webpack_require__){eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(\"./node_modules/core-js/library/modules/_cof.js\");\nvar TAG = __webpack_require__(\"./node_modules/core-js/library/modules/_wks.js\")('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_classof.js?")},"./node_modules/core-js/library/modules/_cof.js":function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_cof.js?")},"./node_modules/core-js/library/modules/_collection-strong.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar dP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js").f;\nvar create = __webpack_require__("./node_modules/core-js/library/modules/_object-create.js");\nvar redefineAll = __webpack_require__("./node_modules/core-js/library/modules/_redefine-all.js");\nvar ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar anInstance = __webpack_require__("./node_modules/core-js/library/modules/_an-instance.js");\nvar forOf = __webpack_require__("./node_modules/core-js/library/modules/_for-of.js");\nvar $iterDefine = __webpack_require__("./node_modules/core-js/library/modules/_iter-define.js");\nvar step = __webpack_require__("./node_modules/core-js/library/modules/_iter-step.js");\nvar setSpecies = __webpack_require__("./node_modules/core-js/library/modules/_set-species.js");\nvar DESCRIPTORS = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js");\nvar fastKey = __webpack_require__("./node_modules/core-js/library/modules/_meta.js").fastKey;\nvar validate = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar SIZE = DESCRIPTORS ? \'_s\' : \'size\';\n\nvar getEntry = function (that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== \'F\') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, \'_i\');\n      that._t = NAME;         // collection type\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      \'delete\': function (key) {\n        var that = validate(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        validate(this, NAME);\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(validate(this, NAME), key);\n      }\n    });\n    if (DESCRIPTORS) dP(C.prototype, \'size\', {\n      get: function () {\n        return validate(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== \'F\') that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function (C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function (iterated, kind) {\n      this._t = validate(iterated, NAME); // target\n      this._k = kind;                     // kind\n      this._l = undefined;                // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) entry = entry.p;\n      // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if (kind == \'keys\') return step(0, entry.k);\n      if (kind == \'values\') return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? \'entries\' : \'values\', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_collection-strong.js?')},"./node_modules/core-js/library/modules/_collection-to-json.js":function(module,exports,__webpack_require__){eval('// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = __webpack_require__("./node_modules/core-js/library/modules/_classof.js");\nvar from = __webpack_require__("./node_modules/core-js/library/modules/_array-from-iterable.js");\nmodule.exports = function (NAME) {\n  return function toJSON() {\n    if (classof(this) != NAME) throw TypeError(NAME + "#toJSON isn\'t generic");\n    return from(this);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_collection-to-json.js?')},"./node_modules/core-js/library/modules/_collection-weak.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar redefineAll = __webpack_require__("./node_modules/core-js/library/modules/_redefine-all.js");\nvar getWeak = __webpack_require__("./node_modules/core-js/library/modules/_meta.js").getWeak;\nvar anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar anInstance = __webpack_require__("./node_modules/core-js/library/modules/_an-instance.js");\nvar forOf = __webpack_require__("./node_modules/core-js/library/modules/_for-of.js");\nvar createArrayMethod = __webpack_require__("./node_modules/core-js/library/modules/_array-methods.js");\nvar $has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar validate = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function () {\n  this.a = [];\n};\nvar findUncaughtFrozen = function (store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  \'delete\': function (key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, \'_i\');\n      that._t = NAME;      // collection type\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      \'delete\': function (key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))[\'delete\'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function (that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_collection-weak.js?')},"./node_modules/core-js/library/modules/_collection.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\nvar meta = __webpack_require__("./node_modules/core-js/library/modules/_meta.js");\nvar fails = __webpack_require__("./node_modules/core-js/library/modules/_fails.js");\nvar hide = __webpack_require__("./node_modules/core-js/library/modules/_hide.js");\nvar redefineAll = __webpack_require__("./node_modules/core-js/library/modules/_redefine-all.js");\nvar forOf = __webpack_require__("./node_modules/core-js/library/modules/_for-of.js");\nvar anInstance = __webpack_require__("./node_modules/core-js/library/modules/_an-instance.js");\nvar isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar setToStringTag = __webpack_require__("./node_modules/core-js/library/modules/_set-to-string-tag.js");\nvar dP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js").f;\nvar each = __webpack_require__("./node_modules/core-js/library/modules/_array-methods.js")(0);\nvar DESCRIPTORS = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js");\n\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? \'set\' : \'add\';\n  var proto = C && C.prototype;\n  var O = {};\n  if (!DESCRIPTORS || typeof C != \'function\' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function (target, iterable) {\n      anInstance(target, C, NAME, \'_c\');\n      target._c = new Base();\n      if (iterable != undefined) forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each(\'add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON\'.split(\',\'), function (KEY) {\n      var IS_ADDER = KEY == \'add\' || KEY == \'set\';\n      if (KEY in proto && !(IS_WEAK && KEY == \'clear\')) hide(C.prototype, KEY, function (a, b) {\n        anInstance(this, C, KEY);\n        if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == \'get\' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    IS_WEAK || dP(C.prototype, \'size\', {\n      get: function () {\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_collection.js?')},"./node_modules/core-js/library/modules/_core.js":function(module,exports){eval("var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_core.js?")},"./node_modules/core-js/library/modules/_create-property.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar $defineProperty = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js");\nvar createDesc = __webpack_require__("./node_modules/core-js/library/modules/_property-desc.js");\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_create-property.js?')},"./node_modules/core-js/library/modules/_ctx.js":function(module,exports,__webpack_require__){eval('// optional / simple context binding\nvar aFunction = __webpack_require__("./node_modules/core-js/library/modules/_a-function.js");\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ctx.js?')},"./node_modules/core-js/library/modules/_defined.js":function(module,exports){eval('// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError("Can\'t call method on  " + it);\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_defined.js?')},"./node_modules/core-js/library/modules/_descriptors.js":function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(\"./node_modules/core-js/library/modules/_fails.js\")(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_descriptors.js?")},"./node_modules/core-js/library/modules/_dom-create.js":function(module,exports,__webpack_require__){eval('var isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar document = __webpack_require__("./node_modules/core-js/library/modules/_global.js").document;\n// typeof document.createElement is \'object\' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_dom-create.js?')},"./node_modules/core-js/library/modules/_enum-bug-keys.js":function(module,exports){eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js?")},"./node_modules/core-js/library/modules/_enum-keys.js":function(module,exports,__webpack_require__){eval('// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys.js");\nvar gOPS = __webpack_require__("./node_modules/core-js/library/modules/_object-gops.js");\nvar pIE = __webpack_require__("./node_modules/core-js/library/modules/_object-pie.js");\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_enum-keys.js?')},"./node_modules/core-js/library/modules/_export.js":function(module,exports,__webpack_require__){eval('var global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar core = __webpack_require__("./node_modules/core-js/library/modules/_core.js");\nvar ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar hide = __webpack_require__("./node_modules/core-js/library/modules/_hide.js");\nvar has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar PROTOTYPE = \'prototype\';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != \'function\' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == \'function\' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_export.js?')},"./node_modules/core-js/library/modules/_fails.js":function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_fails.js?")},"./node_modules/core-js/library/modules/_for-of.js":function(module,exports,__webpack_require__){eval('var ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar call = __webpack_require__("./node_modules/core-js/library/modules/_iter-call.js");\nvar isArrayIter = __webpack_require__("./node_modules/core-js/library/modules/_is-array-iter.js");\nvar anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar toLength = __webpack_require__("./node_modules/core-js/library/modules/_to-length.js");\nvar getIterFn = __webpack_require__("./node_modules/core-js/library/modules/core.get-iterator-method.js");\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != \'function\') throw TypeError(iterable + \' is not iterable!\');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_for-of.js?')},"./node_modules/core-js/library/modules/_global.js":function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_global.js?")},"./node_modules/core-js/library/modules/_has.js":function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_has.js?")},"./node_modules/core-js/library/modules/_hide.js":function(module,exports,__webpack_require__){eval('var dP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js");\nvar createDesc = __webpack_require__("./node_modules/core-js/library/modules/_property-desc.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_hide.js?')},"./node_modules/core-js/library/modules/_html.js":function(module,exports,__webpack_require__){eval('var document = __webpack_require__("./node_modules/core-js/library/modules/_global.js").document;\nmodule.exports = document && document.documentElement;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_html.js?')},"./node_modules/core-js/library/modules/_ie8-dom-define.js":function(module,exports,__webpack_require__){eval('module.exports = !__webpack_require__("./node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__("./node_modules/core-js/library/modules/_fails.js")(function () {\n  return Object.defineProperty(__webpack_require__("./node_modules/core-js/library/modules/_dom-create.js")(\'div\'), \'a\', { get: function () { return 7; } }).a != 7;\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js?')},"./node_modules/core-js/library/modules/_iobject.js":function(module,exports,__webpack_require__){eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(\"./node_modules/core-js/library/modules/_cof.js\");\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iobject.js?")},"./node_modules/core-js/library/modules/_is-array-iter.js":function(module,exports,__webpack_require__){eval('// check on default Array iterator\nvar Iterators = __webpack_require__("./node_modules/core-js/library/modules/_iterators.js");\nvar ITERATOR = __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'iterator\');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-array-iter.js?')},"./node_modules/core-js/library/modules/_is-array.js":function(module,exports,__webpack_require__){eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(\"./node_modules/core-js/library/modules/_cof.js\");\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-array.js?")},"./node_modules/core-js/library/modules/_is-object.js":function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-object.js?")},"./node_modules/core-js/library/modules/_iter-call.js":function(module,exports,__webpack_require__){eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(\"./node_modules/core-js/library/modules/_an-object.js\");\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-call.js?")},"./node_modules/core-js/library/modules/_iter-create.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar create = __webpack_require__("./node_modules/core-js/library/modules/_object-create.js");\nvar descriptor = __webpack_require__("./node_modules/core-js/library/modules/_property-desc.js");\nvar setToStringTag = __webpack_require__("./node_modules/core-js/library/modules/_set-to-string-tag.js");\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__("./node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'iterator\'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + \' Iterator\');\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-create.js?')},"./node_modules/core-js/library/modules/_iter-define.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(\"./node_modules/core-js/library/modules/_library.js\");\nvar $export = __webpack_require__(\"./node_modules/core-js/library/modules/_export.js\");\nvar redefine = __webpack_require__(\"./node_modules/core-js/library/modules/_redefine.js\");\nvar hide = __webpack_require__(\"./node_modules/core-js/library/modules/_hide.js\");\nvar Iterators = __webpack_require__(\"./node_modules/core-js/library/modules/_iterators.js\");\nvar $iterCreate = __webpack_require__(\"./node_modules/core-js/library/modules/_iter-create.js\");\nvar setToStringTag = __webpack_require__(\"./node_modules/core-js/library/modules/_set-to-string-tag.js\");\nvar getPrototypeOf = __webpack_require__(\"./node_modules/core-js/library/modules/_object-gpo.js\");\nvar ITERATOR = __webpack_require__(\"./node_modules/core-js/library/modules/_wks.js\")('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-define.js?")},"./node_modules/core-js/library/modules/_iter-detect.js":function(module,exports,__webpack_require__){eval("var ITERATOR = __webpack_require__(\"./node_modules/core-js/library/modules/_wks.js\")('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-detect.js?")},"./node_modules/core-js/library/modules/_iter-step.js":function(module,exports){eval("module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-step.js?")},"./node_modules/core-js/library/modules/_iterators.js":function(module,exports){eval("module.exports = {};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iterators.js?")},"./node_modules/core-js/library/modules/_library.js":function(module,exports){eval("module.exports = true;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_library.js?")},"./node_modules/core-js/library/modules/_meta.js":function(module,exports,__webpack_require__){eval("var META = __webpack_require__(\"./node_modules/core-js/library/modules/_uid.js\")('meta');\nvar isObject = __webpack_require__(\"./node_modules/core-js/library/modules/_is-object.js\");\nvar has = __webpack_require__(\"./node_modules/core-js/library/modules/_has.js\");\nvar setDesc = __webpack_require__(\"./node_modules/core-js/library/modules/_object-dp.js\").f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(\"./node_modules/core-js/library/modules/_fails.js\")(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_meta.js?")},"./node_modules/core-js/library/modules/_object-assign.js":function(module,exports,__webpack_require__){"use strict";eval('\n// 19.1.2.1 Object.assign(target, source, ...)\nvar DESCRIPTORS = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js");\nvar getKeys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys.js");\nvar gOPS = __webpack_require__("./node_modules/core-js/library/modules/_object-gops.js");\nvar pIE = __webpack_require__("./node_modules/core-js/library/modules/_object-pie.js");\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar IObject = __webpack_require__("./node_modules/core-js/library/modules/_iobject.js");\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__("./node_modules/core-js/library/modules/_fails.js")(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = \'abcdefghijklmnopqrst\';\n  A[S] = 7;\n  K.split(\'\').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join(\'\') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-assign.js?')},"./node_modules/core-js/library/modules/_object-create.js":function(module,exports,__webpack_require__){eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(\"./node_modules/core-js/library/modules/_an-object.js\");\nvar dPs = __webpack_require__(\"./node_modules/core-js/library/modules/_object-dps.js\");\nvar enumBugKeys = __webpack_require__(\"./node_modules/core-js/library/modules/_enum-bug-keys.js\");\nvar IE_PROTO = __webpack_require__(\"./node_modules/core-js/library/modules/_shared-key.js\")('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(\"./node_modules/core-js/library/modules/_dom-create.js\")('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(\"./node_modules/core-js/library/modules/_html.js\").appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-create.js?")},"./node_modules/core-js/library/modules/_object-dp.js":function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(\"./node_modules/core-js/library/modules/_an-object.js\");\nvar IE8_DOM_DEFINE = __webpack_require__(\"./node_modules/core-js/library/modules/_ie8-dom-define.js\");\nvar toPrimitive = __webpack_require__(\"./node_modules/core-js/library/modules/_to-primitive.js\");\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(\"./node_modules/core-js/library/modules/_descriptors.js\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dp.js?")},"./node_modules/core-js/library/modules/_object-dps.js":function(module,exports,__webpack_require__){eval('var dP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js");\nvar anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar getKeys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys.js");\n\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dps.js?')},"./node_modules/core-js/library/modules/_object-gopd.js":function(module,exports,__webpack_require__){eval('var pIE = __webpack_require__("./node_modules/core-js/library/modules/_object-pie.js");\nvar createDesc = __webpack_require__("./node_modules/core-js/library/modules/_property-desc.js");\nvar toIObject = __webpack_require__("./node_modules/core-js/library/modules/_to-iobject.js");\nvar toPrimitive = __webpack_require__("./node_modules/core-js/library/modules/_to-primitive.js");\nvar has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar IE8_DOM_DEFINE = __webpack_require__("./node_modules/core-js/library/modules/_ie8-dom-define.js");\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopd.js?')},"./node_modules/core-js/library/modules/_object-gopn-ext.js":function(module,exports,__webpack_require__){eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(\"./node_modules/core-js/library/modules/_to-iobject.js\");\nvar gOPN = __webpack_require__(\"./node_modules/core-js/library/modules/_object-gopn.js\").f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopn-ext.js?")},"./node_modules/core-js/library/modules/_object-gopn.js":function(module,exports,__webpack_require__){eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(\"./node_modules/core-js/library/modules/_object-keys-internal.js\");\nvar hiddenKeys = __webpack_require__(\"./node_modules/core-js/library/modules/_enum-bug-keys.js\").concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gopn.js?")},"./node_modules/core-js/library/modules/_object-gops.js":function(module,exports){eval("exports.f = Object.getOwnPropertySymbols;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gops.js?")},"./node_modules/core-js/library/modules/_object-gpo.js":function(module,exports,__webpack_require__){eval('// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar IE_PROTO = __webpack_require__("./node_modules/core-js/library/modules/_shared-key.js")(\'IE_PROTO\');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == \'function\' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gpo.js?')},"./node_modules/core-js/library/modules/_object-keys-internal.js":function(module,exports,__webpack_require__){eval('var has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar toIObject = __webpack_require__("./node_modules/core-js/library/modules/_to-iobject.js");\nvar arrayIndexOf = __webpack_require__("./node_modules/core-js/library/modules/_array-includes.js")(false);\nvar IE_PROTO = __webpack_require__("./node_modules/core-js/library/modules/_shared-key.js")(\'IE_PROTO\');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don\'t enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js?')},"./node_modules/core-js/library/modules/_object-keys.js":function(module,exports,__webpack_require__){eval('// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys-internal.js");\nvar enumBugKeys = __webpack_require__("./node_modules/core-js/library/modules/_enum-bug-keys.js");\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys.js?')},"./node_modules/core-js/library/modules/_object-pie.js":function(module,exports){eval("exports.f = {}.propertyIsEnumerable;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-pie.js?")},"./node_modules/core-js/library/modules/_object-sap.js":function(module,exports,__webpack_require__){eval('// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\nvar core = __webpack_require__("./node_modules/core-js/library/modules/_core.js");\nvar fails = __webpack_require__("./node_modules/core-js/library/modules/_fails.js");\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), \'Object\', exp);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-sap.js?')},"./node_modules/core-js/library/modules/_property-desc.js":function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_property-desc.js?")},"./node_modules/core-js/library/modules/_redefine-all.js":function(module,exports,__webpack_require__){eval('var hide = __webpack_require__("./node_modules/core-js/library/modules/_hide.js");\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_redefine-all.js?')},"./node_modules/core-js/library/modules/_redefine.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("./node_modules/core-js/library/modules/_hide.js");\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_redefine.js?')},"./node_modules/core-js/library/modules/_set-collection-from.js":function(module,exports,__webpack_require__){"use strict";eval('\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\nvar aFunction = __webpack_require__("./node_modules/core-js/library/modules/_a-function.js");\nvar ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar forOf = __webpack_require__("./node_modules/core-js/library/modules/_for-of.js");\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n    var mapFn = arguments[1];\n    var mapping, A, n, cb;\n    aFunction(this);\n    mapping = mapFn !== undefined;\n    if (mapping) aFunction(mapFn);\n    if (source == undefined) return new this();\n    A = [];\n    if (mapping) {\n      n = 0;\n      cb = ctx(mapFn, arguments[2], 2);\n      forOf(source, false, function (nextItem) {\n        A.push(cb(nextItem, n++));\n      });\n    } else {\n      forOf(source, false, A.push, A);\n    }\n    return new this(A);\n  } });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-collection-from.js?')},"./node_modules/core-js/library/modules/_set-collection-of.js":function(module,exports,__webpack_require__){"use strict";eval('\n// https://tc39.github.io/proposal-setmap-offrom/\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\n\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, { of: function of() {\n    var length = arguments.length;\n    var A = new Array(length);\n    while (length--) A[length] = arguments[length];\n    return new this(A);\n  } });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-collection-of.js?')},"./node_modules/core-js/library/modules/_set-proto.js":function(module,exports,__webpack_require__){eval('// Works with __proto__ only. Old v8 can\'t work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can\'t set as prototype!");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || (\'__proto__\' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js")(Function.call, __webpack_require__("./node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype, \'__proto__\').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-proto.js?')},"./node_modules/core-js/library/modules/_set-species.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar core = __webpack_require__("./node_modules/core-js/library/modules/_core.js");\nvar dP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js");\nvar DESCRIPTORS = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js");\nvar SPECIES = __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'species\');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == \'function\' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-species.js?')},"./node_modules/core-js/library/modules/_set-to-string-tag.js":function(module,exports,__webpack_require__){eval('var def = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js").f;\nvar has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar TAG = __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'toStringTag\');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js?')},"./node_modules/core-js/library/modules/_shared-key.js":function(module,exports,__webpack_require__){eval('var shared = __webpack_require__("./node_modules/core-js/library/modules/_shared.js")(\'keys\');\nvar uid = __webpack_require__("./node_modules/core-js/library/modules/_uid.js");\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared-key.js?')},"./node_modules/core-js/library/modules/_shared.js":function(module,exports,__webpack_require__){eval("var core = __webpack_require__(\"./node_modules/core-js/library/modules/_core.js\");\nvar global = __webpack_require__(\"./node_modules/core-js/library/modules/_global.js\");\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(\"./node_modules/core-js/library/modules/_library.js\") ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared.js?")},"./node_modules/core-js/library/modules/_string-at.js":function(module,exports,__webpack_require__){eval('var toInteger = __webpack_require__("./node_modules/core-js/library/modules/_to-integer.js");\nvar defined = __webpack_require__("./node_modules/core-js/library/modules/_defined.js");\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? \'\' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_string-at.js?')},"./node_modules/core-js/library/modules/_to-absolute-index.js":function(module,exports,__webpack_require__){eval('var toInteger = __webpack_require__("./node_modules/core-js/library/modules/_to-integer.js");\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js?')},"./node_modules/core-js/library/modules/_to-integer.js":function(module,exports){eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-integer.js?")},"./node_modules/core-js/library/modules/_to-iobject.js":function(module,exports,__webpack_require__){eval('// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__("./node_modules/core-js/library/modules/_iobject.js");\nvar defined = __webpack_require__("./node_modules/core-js/library/modules/_defined.js");\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-iobject.js?')},"./node_modules/core-js/library/modules/_to-length.js":function(module,exports,__webpack_require__){eval('// 7.1.15 ToLength\nvar toInteger = __webpack_require__("./node_modules/core-js/library/modules/_to-integer.js");\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-length.js?')},"./node_modules/core-js/library/modules/_to-object.js":function(module,exports,__webpack_require__){eval('// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__("./node_modules/core-js/library/modules/_defined.js");\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-object.js?')},"./node_modules/core-js/library/modules/_to-primitive.js":function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(\"./node_modules/core-js/library/modules/_is-object.js\");\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-primitive.js?")},"./node_modules/core-js/library/modules/_uid.js":function(module,exports){eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_uid.js?")},"./node_modules/core-js/library/modules/_validate-collection.js":function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(\"./node_modules/core-js/library/modules/_is-object.js\");\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_validate-collection.js?")},"./node_modules/core-js/library/modules/_wks-define.js":function(module,exports,__webpack_require__){eval('var global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar core = __webpack_require__("./node_modules/core-js/library/modules/_core.js");\nvar LIBRARY = __webpack_require__("./node_modules/core-js/library/modules/_library.js");\nvar wksExt = __webpack_require__("./node_modules/core-js/library/modules/_wks-ext.js");\nvar defineProperty = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js").f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != \'_\' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks-define.js?')},"./node_modules/core-js/library/modules/_wks-ext.js":function(module,exports,__webpack_require__){eval('exports.f = __webpack_require__("./node_modules/core-js/library/modules/_wks.js");\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks-ext.js?')},"./node_modules/core-js/library/modules/_wks.js":function(module,exports,__webpack_require__){eval("var store = __webpack_require__(\"./node_modules/core-js/library/modules/_shared.js\")('wks');\nvar uid = __webpack_require__(\"./node_modules/core-js/library/modules/_uid.js\");\nvar Symbol = __webpack_require__(\"./node_modules/core-js/library/modules/_global.js\").Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks.js?")},"./node_modules/core-js/library/modules/core.get-iterator-method.js":function(module,exports,__webpack_require__){eval('var classof = __webpack_require__("./node_modules/core-js/library/modules/_classof.js");\nvar ITERATOR = __webpack_require__("./node_modules/core-js/library/modules/_wks.js")(\'iterator\');\nvar Iterators = __webpack_require__("./node_modules/core-js/library/modules/_iterators.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it[\'@@iterator\']\n    || Iterators[classof(it)];\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js?')},"./node_modules/core-js/library/modules/core.get-iterator.js":function(module,exports,__webpack_require__){eval('var anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar get = __webpack_require__("./node_modules/core-js/library/modules/core.get-iterator-method.js");\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_core.js").getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != \'function\') throw TypeError(it + \' is not iterable!\');\n  return anObject(iterFn.call(it));\n};\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/core.get-iterator.js?')},"./node_modules/core-js/library/modules/es6.array.from.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar ctx = __webpack_require__("./node_modules/core-js/library/modules/_ctx.js");\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar call = __webpack_require__("./node_modules/core-js/library/modules/_iter-call.js");\nvar isArrayIter = __webpack_require__("./node_modules/core-js/library/modules/_is-array-iter.js");\nvar toLength = __webpack_require__("./node_modules/core-js/library/modules/_to-length.js");\nvar createProperty = __webpack_require__("./node_modules/core-js/library/modules/_create-property.js");\nvar getIterFn = __webpack_require__("./node_modules/core-js/library/modules/core.get-iterator-method.js");\n\n$export($export.S + $export.F * !__webpack_require__("./node_modules/core-js/library/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), \'Array\', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == \'function\' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn\'t iterable or it\'s array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.array.from.js?')},"./node_modules/core-js/library/modules/es6.array.iterator.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar addToUnscopables = __webpack_require__(\"./node_modules/core-js/library/modules/_add-to-unscopables.js\");\nvar step = __webpack_require__(\"./node_modules/core-js/library/modules/_iter-step.js\");\nvar Iterators = __webpack_require__(\"./node_modules/core-js/library/modules/_iterators.js\");\nvar toIObject = __webpack_require__(\"./node_modules/core-js/library/modules/_to-iobject.js\");\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(\"./node_modules/core-js/library/modules/_iter-define.js\")(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js?")},"./node_modules/core-js/library/modules/es6.map.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar strong = __webpack_require__("./node_modules/core-js/library/modules/_collection-strong.js");\nvar validate = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar MAP = \'Map\';\n\n// 23.1 Map Objects\nmodule.exports = __webpack_require__("./node_modules/core-js/library/modules/_collection.js")(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.map.js?')},"./node_modules/core-js/library/modules/es6.number.max-safe-integer.js":function(module,exports,__webpack_require__){eval("// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = __webpack_require__(\"./node_modules/core-js/library/modules/_export.js\");\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.number.max-safe-integer.js?")},"./node_modules/core-js/library/modules/es6.object.assign.js":function(module,exports,__webpack_require__){eval('// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\n\n$export($export.S + $export.F, \'Object\', { assign: __webpack_require__("./node_modules/core-js/library/modules/_object-assign.js") });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.assign.js?')},"./node_modules/core-js/library/modules/es6.object.create.js":function(module,exports,__webpack_require__){eval('var $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, \'Object\', { create: __webpack_require__("./node_modules/core-js/library/modules/_object-create.js") });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.create.js?')},"./node_modules/core-js/library/modules/es6.object.keys.js":function(module,exports,__webpack_require__){eval('// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar $keys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys.js");\n\n__webpack_require__("./node_modules/core-js/library/modules/_object-sap.js")(\'keys\', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.keys.js?')},"./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":function(module,exports,__webpack_require__){eval('// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\n$export($export.S, \'Object\', { setPrototypeOf: __webpack_require__("./node_modules/core-js/library/modules/_set-proto.js").set });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.set-prototype-of.js?')},"./node_modules/core-js/library/modules/es6.object.to-string.js":function(module,exports){eval("\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.to-string.js?")},"./node_modules/core-js/library/modules/es6.string.iterator.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar $at = __webpack_require__("./node_modules/core-js/library/modules/_string-at.js")(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__("./node_modules/core-js/library/modules/_iter-define.js")(String, \'String\', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js?')},"./node_modules/core-js/library/modules/es6.symbol.js":function(module,exports,__webpack_require__){"use strict";eval('\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar has = __webpack_require__("./node_modules/core-js/library/modules/_has.js");\nvar DESCRIPTORS = __webpack_require__("./node_modules/core-js/library/modules/_descriptors.js");\nvar $export = __webpack_require__("./node_modules/core-js/library/modules/_export.js");\nvar redefine = __webpack_require__("./node_modules/core-js/library/modules/_redefine.js");\nvar META = __webpack_require__("./node_modules/core-js/library/modules/_meta.js").KEY;\nvar $fails = __webpack_require__("./node_modules/core-js/library/modules/_fails.js");\nvar shared = __webpack_require__("./node_modules/core-js/library/modules/_shared.js");\nvar setToStringTag = __webpack_require__("./node_modules/core-js/library/modules/_set-to-string-tag.js");\nvar uid = __webpack_require__("./node_modules/core-js/library/modules/_uid.js");\nvar wks = __webpack_require__("./node_modules/core-js/library/modules/_wks.js");\nvar wksExt = __webpack_require__("./node_modules/core-js/library/modules/_wks-ext.js");\nvar wksDefine = __webpack_require__("./node_modules/core-js/library/modules/_wks-define.js");\nvar enumKeys = __webpack_require__("./node_modules/core-js/library/modules/_enum-keys.js");\nvar isArray = __webpack_require__("./node_modules/core-js/library/modules/_is-array.js");\nvar anObject = __webpack_require__("./node_modules/core-js/library/modules/_an-object.js");\nvar isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar toObject = __webpack_require__("./node_modules/core-js/library/modules/_to-object.js");\nvar toIObject = __webpack_require__("./node_modules/core-js/library/modules/_to-iobject.js");\nvar toPrimitive = __webpack_require__("./node_modules/core-js/library/modules/_to-primitive.js");\nvar createDesc = __webpack_require__("./node_modules/core-js/library/modules/_property-desc.js");\nvar _create = __webpack_require__("./node_modules/core-js/library/modules/_object-create.js");\nvar gOPNExt = __webpack_require__("./node_modules/core-js/library/modules/_object-gopn-ext.js");\nvar $GOPD = __webpack_require__("./node_modules/core-js/library/modules/_object-gopd.js");\nvar $GOPS = __webpack_require__("./node_modules/core-js/library/modules/_object-gops.js");\nvar $DP = __webpack_require__("./node_modules/core-js/library/modules/_object-dp.js");\nvar $keys = __webpack_require__("./node_modules/core-js/library/modules/_object-keys.js");\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = \'prototype\';\nvar HIDDEN = wks(\'_hidden\');\nvar TO_PRIMITIVE = wks(\'toPrimitive\');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared(\'symbol-registry\');\nvar AllSymbols = shared(\'symbols\');\nvar OPSymbols = shared(\'op-symbols\');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == \'function\' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don\'t use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, \'a\', {\n    get: function () { return dP(this, \'a\', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == \'symbol\' ? function (it) {\n  return typeof it == \'symbol\';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError(\'Symbol is not a constructor!\');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], \'toString\', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__("./node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__("./node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__("./node_modules/core-js/library/modules/_library.js")) {\n    redefine(ObjectProto, \'propertyIsEnumerable\', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  \'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\'\n).split(\',\'), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, \'Symbol\', {\n  // 19.4.2.1 Symbol.for(key)\n  \'for\': function (key) {\n    return has(SymbolRegistry, key += \'\')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + \' is not a symbol!\');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, \'Object\', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, \'Object\', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != \'[null]\' || _stringify({ a: S }) != \'{}\' || _stringify(Object(S)) != \'{}\';\n})), \'JSON\', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == \'function\') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__("./node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, \'Symbol\');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, \'Math\', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, \'JSON\', true);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.symbol.js?')},"./node_modules/core-js/library/modules/es6.weak-map.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar global = __webpack_require__("./node_modules/core-js/library/modules/_global.js");\nvar each = __webpack_require__("./node_modules/core-js/library/modules/_array-methods.js")(0);\nvar redefine = __webpack_require__("./node_modules/core-js/library/modules/_redefine.js");\nvar meta = __webpack_require__("./node_modules/core-js/library/modules/_meta.js");\nvar assign = __webpack_require__("./node_modules/core-js/library/modules/_object-assign.js");\nvar weak = __webpack_require__("./node_modules/core-js/library/modules/_collection-weak.js");\nvar isObject = __webpack_require__("./node_modules/core-js/library/modules/_is-object.js");\nvar validate = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar NATIVE_WEAK_MAP = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar IS_IE11 = !global.ActiveXObject && \'ActiveXObject\' in global;\nvar WEAK_MAP = \'WeakMap\';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar InternalMap;\n\nvar wrapper = function (get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = __webpack_require__("./node_modules/core-js/library/modules/_collection.js")(WEAK_MAP, wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each([\'delete\', \'has\', \'get\', \'set\'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      // store frozen objects on internal weakmap shim\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == \'set\' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.weak-map.js?')},"./node_modules/core-js/library/modules/es6.weak-set.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar weak = __webpack_require__("./node_modules/core-js/library/modules/_collection-weak.js");\nvar validate = __webpack_require__("./node_modules/core-js/library/modules/_validate-collection.js");\nvar WEAK_SET = \'WeakSet\';\n\n// 23.4 WeakSet Objects\n__webpack_require__("./node_modules/core-js/library/modules/_collection.js")(WEAK_SET, function (get) {\n  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.4.3.1 WeakSet.prototype.add(value)\n  add: function add(value) {\n    return weak.def(validate(this, WEAK_SET), value, true);\n  }\n}, weak, false, true);\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.weak-set.js?')},"./node_modules/core-js/library/modules/es7.map.from.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-from.js\")('Map');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.map.from.js?")},"./node_modules/core-js/library/modules/es7.map.of.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-of.js\")('Map');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.map.of.js?")},"./node_modules/core-js/library/modules/es7.map.to-json.js":function(module,exports,__webpack_require__){eval("// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export = __webpack_require__(\"./node_modules/core-js/library/modules/_export.js\");\n\n$export($export.P + $export.R, 'Map', { toJSON: __webpack_require__(\"./node_modules/core-js/library/modules/_collection-to-json.js\")('Map') });\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.map.to-json.js?")},"./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":function(module,exports,__webpack_require__){eval("__webpack_require__(\"./node_modules/core-js/library/modules/_wks-define.js\")('asyncIterator');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js?")},"./node_modules/core-js/library/modules/es7.symbol.observable.js":function(module,exports,__webpack_require__){eval("__webpack_require__(\"./node_modules/core-js/library/modules/_wks-define.js\")('observable');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js?")},"./node_modules/core-js/library/modules/es7.weak-map.from.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-from.js\")('WeakMap');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.weak-map.from.js?")},"./node_modules/core-js/library/modules/es7.weak-map.of.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-of.js\")('WeakMap');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.weak-map.of.js?")},"./node_modules/core-js/library/modules/es7.weak-set.from.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.from\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-from.js\")('WeakSet');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.weak-set.from.js?")},"./node_modules/core-js/library/modules/es7.weak-set.of.js":function(module,exports,__webpack_require__){eval("// https://tc39.github.io/proposal-setmap-offrom/#sec-weakset.of\n__webpack_require__(\"./node_modules/core-js/library/modules/_set-collection-of.js\")('WeakSet');\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.weak-set.of.js?")},"./node_modules/core-js/library/modules/web.dom.iterable.js":function(module,exports,__webpack_require__){eval("__webpack_require__(\"./node_modules/core-js/library/modules/es6.array.iterator.js\");\nvar global = __webpack_require__(\"./node_modules/core-js/library/modules/_global.js\");\nvar hide = __webpack_require__(\"./node_modules/core-js/library/modules/_hide.js\");\nvar Iterators = __webpack_require__(\"./node_modules/core-js/library/modules/_iterators.js\");\nvar TO_STRING_TAG = __webpack_require__(\"./node_modules/core-js/library/modules/_wks.js\")('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js?")},"./node_modules/debug/node.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("./node_modules/debug/src/node.js");\n\n\n//# sourceURL=webpack:///./node_modules/debug/node.js?')},"./node_modules/debug/node_modules/ms/index.js":function(module,exports){eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/node_modules/ms/index.js?")},"./node_modules/debug/src/browser.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(\"./node_modules/debug/src/debug.js\");\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/debug/src/browser.js?")},"./node_modules/debug/src/debug.js":function(module,exports,__webpack_require__){eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(\"./node_modules/debug/node_modules/ms/index.js\");\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n//# sourceURL=webpack:///./node_modules/debug/src/debug.js?")},"./node_modules/debug/src/node.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * Module dependencies.\n */\n\nvar tty = __webpack_require__(\"./node_modules/tty-browserify/index.js\");\nvar util = __webpack_require__(\"./node_modules/util/util.js\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(\"./node_modules/debug/src/debug.js\");\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = __webpack_require__(\"./node_modules/node-libs-browser/mock/empty.js\");\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = __webpack_require__(\"./node_modules/node-libs-browser/mock/empty.js\");\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/debug/src/node.js?")},"./node_modules/escape-string-regexp/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n\n//# sourceURL=webpack:///./node_modules/escape-string-regexp/index.js?")},"./node_modules/esutils/lib/ast.js":function(module,exports){eval("/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n//# sourceURL=webpack:///./node_modules/esutils/lib/ast.js?")},"./node_modules/esutils/lib/code.js":function(module,exports){eval("/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n//# sourceURL=webpack:///./node_modules/esutils/lib/code.js?")},"./node_modules/esutils/lib/keyword.js":function(module,exports,__webpack_require__){eval("/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = __webpack_require__(\"./node_modules/esutils/lib/code.js\");\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n//# sourceURL=webpack:///./node_modules/esutils/lib/keyword.js?")},"./node_modules/esutils/lib/utils.js":function(module,exports,__webpack_require__){eval('/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    \'use strict\';\n\n    exports.ast = __webpack_require__("./node_modules/esutils/lib/ast.js");\n    exports.code = __webpack_require__("./node_modules/esutils/lib/code.js");\n    exports.keyword = __webpack_require__("./node_modules/esutils/lib/keyword.js");\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n\n\n//# sourceURL=webpack:///./node_modules/esutils/lib/utils.js?')},"./node_modules/halting-problem/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = __webpack_require__("./node_modules/halting-problem/lib/halting-problem.js");\nmodule.exports.loopProtect = __webpack_require__("./node_modules/halting-problem/lib/loop-protect.js");\nmodule.exports.reset = __webpack_require__("./node_modules/halting-problem/lib/runtime.js").reset;\nmodule.exports.protect = __webpack_require__("./node_modules/halting-problem/lib/runtime.js").protect;\n\n//# sourceURL=webpack:///./node_modules/halting-problem/index.js?')},"./node_modules/halting-problem/lib/halting-problem.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar acorn = __webpack_require__("./node_modules/halting-problem/node_modules/acorn/dist/acorn.mjs");\nvar walk = __webpack_require__("./node_modules/halting-problem/node_modules/acorn-walk/dist/walk.mjs");\n\nmodule.exports = halts;\nfunction halts(src) {\n  var ast = typeof src === \'string\' ? acorn.parse(src, {\n    ecmaVersion: 2020,\n    allowReturnOutsideFunction: true,\n    allowImportExportEverywhere: true,\n    allowHashBang: true,\n    locations: true\n  }) : src;\n  var hasBreak = false;\n  var hasThrow = false;\n  var hasReturnOrYield = false;\n  var writeHandlers = [];\n  var readHandlers = [];\n  var callHandlers = [];\n  var breakLabels = [];\n  function watch(fn) {\n    var writes = [];\n    var reads = [];\n    var calls = [];\n    writeHandlers.push(writes);\n    readHandlers.push(reads);\n    callHandlers.push(calls);\n    fn();\n    writeHandlers.pop();\n    readHandlers.pop();\n    callHandlers.pop();\n    return {writes: writes, reads: reads, calls: calls};\n  }\n  function onWrite(name) {\n    writeHandlers.forEach(function (handler) { handler.push(name); });\n  }\n  function onRead(name) {\n    readHandlers.forEach(function (handler) { handler.push(name); });\n  }\n  function onCall(node) {\n    callHandlers.forEach(function (handler) { handler.push(node); });\n  }\n  function testForBreakOrReturnOrYieldOrThrow(fn) {\n    var before = {hasBreak: hasBreak, hasReturnOrYield: hasReturnOrYield, hasThrow: hasThrow, breakLabels: breakLabels};\n    hasBreak = false; hasReturnOrYield = false; hasThrow = false; breakLabels = [];\n    fn();\n    var result = hasBreak || hasReturnOrYield || hasThrow || breakLabels.length;\n    hasBreak = before.hasBreak;\n    hasReturnOrYield = hasReturnOrYield || before.hasReturnOrYield;\n    hasThrow = hasThrow || before.hasThrow;\n    breakLabels = before.breakLabels.concat(breakLabels);\n    return result;\n  }\n  function whileStatement(node, state, walk) {\n    var test, body;\n    var hasBreak = testForBreakOrReturnOrYieldOrThrow(function () {\n      test = watch(function () {\n        walk(node.test, state, "Expression");\n      });\n      body = watch(function () {\n        walk(node.body, state, "Statement");\n      });\n    });\n    var reads = test.reads;\n    var writes = test.writes.concat(body.writes);\n    var calls = test.calls.concat(body.calls);\n    if (hasBreak) {\n      return;\n    }\n    if (reads.length === 0) {\n      var err = new Error(\'while statement on line \' + node.test.loc.start.line +\n                          \' has a constant test.  Either it is always `false` \' +\n                          \'(making the statement redundant) or it is an infinite loop.\');\n      err.line = node.test.start.line;\n      err.node = node;\n      throw err;\n    }\n    if (calls.length || reads.some(function (name) { return writes.indexOf(name) !== -1; })) {\n      return;\n    }\n    var err = new Error(\'while statement on line \' + node.test.loc.start.line +\n                        \' has a test that contains no variables that get modified \' +\n                        \'in the loop. Either it is always `false` \' +\n                        \'(making the statement redundant) or it is an infinite loop.\');\n    err.line = node.test.loc.start.line;\n    err.node = node;\n    throw err;\n  }\n  function callExpression(node, st, c) {\n      onCall(node);\n      c(node.callee, st, "Expression");\n      if (node.arguments) {\n        for (var i = 0; i < node.arguments.length; ++i) {\n          c(node.arguments[i], st, "Expression");\n        }\n      }\n    }\n  walk.recursive(ast, {}, {\n    WhileStatement: whileStatement,\n    DoWhileStatement: whileStatement,\n    Identifier: function (node) { onRead(node.name); },\n    ThisExpression: function (node) { onRead(\'this\'); },\n    CallExpression: callExpression,\n    NewExpression: callExpression,\n    AssignmentExpression: function (node, st, c) {\n      watch(function () {\n        c(node.left, st, "Expression");\n      }).reads.forEach(onWrite);\n      c(node.right, st, "Expression");\n    },\n    UpdateExpression: function (node, st, c) {\n      watch(function () {\n        c(node.argument, st, "Expression");\n      }).reads.forEach(onWrite);\n    },\n\n    BreakStatement: function (node) {\n      if (node.label) {\n        breakLabels = breakLabels.concat([node.label.name]);\n      }\n      hasBreak = true;\n    },\n    LabeledStatement: function (node, st, c) {\n      var before = breakLabels;\n      c(node.body, st, "Statement");\n      breakLabels = breakLabels.filter(function (name) { return name !== node.label.name || before.indexOf(name) !== -1; });\n    },\n\n    ReturnStatement: function (node, st, c) {\n      if (node.argument) c(node.argument, st, "Expression");\n      hasReturnOrYield = true;\n    },\n    YieldExpression: function (node, st, c) {\n      if (node.argument) c(node.argument, st, "Expression");\n      hasReturnOrYield = true;\n    },\n    ThrowStatement: function (node, st, c) {\n      c(node.argument, st, "Expression");\n      hasThrow = true;\n    },\n    Function: function (node, st, c) {\n      var hasBreakBefore;\n      var breakLabelsBefore = breakLabels;\n      var hasThrowBefore = hasThrow;\n      var hasReturnOrYieldBefore = hasReturnOrYield;\n      c(node.body, st, "Statement");\n      hasBreak = hasBreakBefore;\n      breakLabels = breakLabelsBefore;\n      hasThrow = hasThrowBefore;\n      hasReturnOrYield = hasReturnOrYieldBefore;\n    },\n    TryStatement: function (node, st, c) {\n      var hasThrowBefore = hasThrow;\n      c(node.block, st, "Statement");\n      hasThrow = hasThrowBefore;\n      if (node.handler) c(node.handler.body, st, "Statement");\n      if (node.finalizer) c(node.finalizer, st, "Statement");\n    }\n  });\n}\n\n\n//# sourceURL=webpack:///./node_modules/halting-problem/lib/halting-problem.js?')},"./node_modules/halting-problem/lib/loop-protect.js":function(module,exports,__webpack_require__){"use strict";eval("\n\n// inspired by https://github.com/jsbin/loop-protect\n\nvar acorn = __webpack_require__(\"./node_modules/halting-problem/node_modules/acorn/dist/acorn.mjs\");\nvar walk = __webpack_require__(\"./node_modules/halting-problem/node_modules/acorn-walk/dist/walk.mjs\");\n\nmodule.exports = protect;\nfunction protect(src, protectFn) {\n  protectFn = protectFn || 'haltingProblem.protect';\n  var ast = acorn.parse(src, {\n    ecmaVersion: 2020,\n    allowReturnOutsideFunction: true,\n    allowImportExportEverywhere: true,\n    allowHashBang: true,\n    locations: true\n  });\n\n  src = src.split('');\n  function source(node) {\n    return src.slice(node.start, node.end).join('')\n  }\n  function replace(node, str) {\n    for (var i = node.start; i < node.end; i++) {\n      src[i] = ''\n    }\n    src[node.start] = str\n  }\n\n  function loopStatement(node) {\n    var line = (node.test || node.left).loc.start.line;\n    if (node.body.type === 'BlockStatement') {\n      var src = source(node.body).split('{');\n      src[1] = protectFn + '(' + line + ');' + src[1];\n      src = src.join('{');\n      replace(node.body, src);\n    } else {\n      replace(node.body, '{' + protectFn + '(' + line + ');' + source(node.body) + '}');\n    }\n  }\n  function functionExpression(node) {\n    if (node.body.type === 'BlockStatement') {\n      replace(node.body, '{' + protectFn + '(' + node.loc.start.line + ');' + source(node.body).split('{').slice(1).join('{'));\n    }\n  }\n\n  walk.simple(ast, {\n    WhileStatement: loopStatement,\n    DoWhileStatement: loopStatement,\n    ForStatement: loopStatement,\n    ForInStatement: loopStatement,\n    ForOfStatement: loopStatement,\n\n    FunctionExpression: functionExpression,\n    FunctionDeclaration: functionExpression,\n    ArrowFunctionExpression: functionExpression\n  });\n\n  return src.join('');\n}\n\n\n//# sourceURL=webpack:///./node_modules/halting-problem/lib/loop-protect.js?")},"./node_modules/halting-problem/lib/runtime.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar start = Date.now();\n\nmodule.exports.reset = function (time) {\n  time = time || 1000;\n  start = Date.now() + time;\n};\nmodule.exports.protect = function (line) {\n  if (Date.now() > start) {\n    var err = new Error('Possible infinite loop detected on line ' + line);\n    throw err;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/halting-problem/lib/runtime.js?")},"./node_modules/halting-problem/node_modules/acorn-walk/dist/walk.mjs":function(__webpack_module__,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ancestor", function() { return ancestor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "base", function() { return base; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findNodeAfter", function() { return findNodeAfter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findNodeAround", function() { return findNodeAround; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findNodeAt", function() { return findNodeAt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findNodeBefore", function() { return findNodeBefore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "full", function() { return full; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fullAncestor", function() { return fullAncestor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "make", function() { return make; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recursive", function() { return recursive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "simple", function() { return simple; });\n// AST walker module for Mozilla Parser API compatible trees\n\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression and\n// Statement, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\n\nfunction simple(node, visitors, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st); }\n  })(node, state, override);\n}\n\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\nfunction ancestor(node, visitors, baseVisitor, state) {\n  var ancestors = [];\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st || ancestors, ancestors); }\n    if (isNew) { ancestors.pop(); }\n  })(node, state);\n}\n\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that\'s\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\nfunction recursive(node, state, funcs, baseVisitor, override) {\n  var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n  ;(function c(node, st, override) {\n    visitor[override || node.type](node, st, c);\n  })(node, state, override);\n}\n\nfunction makeTest(test) {\n  if (typeof test === "string")\n    { return function (type) { return type === test; } }\n  else if (!test)\n    { return function () { return true; } }\n  else\n    { return test }\n}\n\nvar Found = function Found(node, state) { this.node = node; this.state = state; };\n\n// A full walk triggers the callback on each node\nfunction full(node, callback, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type;\n    baseVisitor[type](node, st, c);\n    if (!override) { callback(node, st, type); }\n  })(node, state, override);\n}\n\n// An fullAncestor walk is like an ancestor walk, but triggers\n// the callback on each node\nfunction fullAncestor(node, callback, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  var ancestors = []\n  ;(function c(node, st, override) {\n    var type = override || node.type;\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (!override) { callback(node, st || ancestors, ancestors, type); }\n    if (isNew) { ancestors.pop(); }\n  })(node, state);\n}\n\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn\'t find a matching node.\nfunction findNodeAt(node, start, end, test, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  test = makeTest(test);\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if ((start == null || node.start <= start) &&\n          (end == null || node.end >= end))\n        { baseVisitor[type](node, st, c); }\n      if ((start == null || node.start === start) &&\n          (end == null || node.end === end) &&\n          test(type, node))\n        { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\nfunction findNodeAround(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if (node.start > pos || node.end < pos) { return }\n      baseVisitor[type](node, st, c);\n      if (test(type, node)) { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node after a given position.\nfunction findNodeAfter(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      if (node.end < pos) { return }\n      var type = override || node.type;\n      if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node before a given position.\nfunction findNodeBefore(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  var max\n  ;(function c(node, st, override) {\n    if (node.start > pos) { return }\n    var type = override || node.type;\n    if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n      { max = new Found(node, st); }\n    baseVisitor[type](node, st, c);\n  })(node, state);\n  return max\n}\n\n// Fallback to an Object.create polyfill for older environments.\nvar create = Object.create || function(proto) {\n  function Ctor() {}\n  Ctor.prototype = proto;\n  return new Ctor\n};\n\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\nfunction make(funcs, baseVisitor) {\n  var visitor = create(baseVisitor || base);\n  for (var type in funcs) { visitor[type] = funcs[type]; }\n  return visitor\n}\n\nfunction skipThrough(node, st, c) { c(node, st); }\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nbase.Program = base.BlockStatement = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var stmt = list[i];\n\n    c(stmt, st, "Statement");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression =\n  function (node, st, c) { return c(node.expression, st, "Expression"); };\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, "Expression");\n  c(node.consequent, st, "Statement");\n  if (node.alternate) { c(node.alternate, st, "Statement"); }\n};\nbase.LabeledStatement = function (node, st, c) { return c(node.body, st, "Statement"); };\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, "Expression");\n  c(node.body, st, "Statement");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, "Expression");\n  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n    var cs = list$1[i$1];\n\n    if (cs.test) { c(cs.test, st, "Expression"); }\n    for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, "Statement");\n    }\n  }\n};\nbase.SwitchCase = function (node, st, c) {\n  if (node.test) { c(node.test, st, "Expression"); }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1)\n    {\n    var cons = list[i];\n\n    c(cons, st, "Statement");\n  }\n};\nbase.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n  if (node.argument) { c(node.argument, st, "Expression"); }\n};\nbase.ThrowStatement = base.SpreadElement =\n  function (node, st, c) { return c(node.argument, st, "Expression"); };\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, "Statement");\n  if (node.handler) { c(node.handler, st); }\n  if (node.finalizer) { c(node.finalizer, st, "Statement"); }\n};\nbase.CatchClause = function (node, st, c) {\n  if (node.param) { c(node.param, st, "Pattern"); }\n  c(node.body, st, "Statement");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, "Expression");\n  c(node.body, st, "Statement");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) { c(node.init, st, "ForInit"); }\n  if (node.test) { c(node.test, st, "Expression"); }\n  if (node.update) { c(node.update, st, "Expression"); }\n  c(node.body, st, "Statement");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, "ForInit");\n  c(node.right, st, "Expression");\n  c(node.body, st, "Statement");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type === "VariableDeclaration") { c(node, st); }\n  else { c(node, st, "Expression"); }\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) { return c(node, st, "Function"); };\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    c(decl, st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, "Pattern");\n  if (node.init) { c(node.init, st, "Expression"); }\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) { c(node.id, st, "Pattern"); }\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    c(param, st, "Pattern");\n  }\n  c(node.body, st, node.expression ? "Expression" : "Statement");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type === "Identifier")\n    { c(node, st, "VariablePattern"); }\n  else if (node.type === "MemberExpression")\n    { c(node, st, "MemberPattern"); }\n  else\n    { c(node, st); }\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) { return c(node.argument, st, "Pattern"); };\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, "Pattern"); }\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n\n    if (prop.type === "Property") {\n      if (prop.computed) { c(prop.key, st, "Expression"); }\n      c(prop.value, st, "Pattern");\n    } else if (prop.type === "RestElement") {\n      c(prop.argument, st, "Pattern");\n    }\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, "Expression"); }\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1)\n    {\n    var prop = list[i];\n\n    c(prop, st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    c(expr, st, "Expression");\n  }\n};\nbase.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1)\n    {\n    var quasi = list[i];\n\n    c(quasi, st);\n  }\n\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n    {\n    var expr = list$1[i$1];\n\n    c(expr, st, "Expression");\n  }\n};\nbase.TemplateElement = ignore;\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, "Expression");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, "Expression");\n  c(node.right, st, "Expression");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, "Pattern");\n  c(node.right, st, "Expression");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, "Expression");\n  c(node.consequent, st, "Expression");\n  c(node.alternate, st, "Expression");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, "Expression");\n  if (node.arguments)\n    { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n      {\n        var arg = list[i];\n\n        c(arg, st, "Expression");\n      } }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, "Expression");\n  if (node.computed) { c(node.property, st, "Expression"); }\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration)\n    { c(node.declaration, st, node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression"); }\n  if (node.source) { c(node.source, st, "Expression"); }\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  c(node.source, st, "Expression");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n    {\n    var spec = list[i];\n\n    c(spec, st);\n  }\n  c(node.source, st, "Expression");\n};\nbase.ImportExpression = function (node, st, c) {\n  c(node.source, st, "Expression");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, "Expression");\n  c(node.quasi, st, "Expression");\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, "Class"); };\nbase.Class = function (node, st, c) {\n  if (node.id) { c(node.id, st, "Pattern"); }\n  if (node.superClass) { c(node.superClass, st, "Expression"); }\n  c(node.body, st);\n};\nbase.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var elt = list[i];\n\n    c(elt, st);\n  }\n};\nbase.MethodDefinition = base.Property = function (node, st, c) {\n  if (node.computed) { c(node.key, st, "Expression"); }\n  c(node.value, st, "Expression");\n};\n\n\n\n\n//# sourceURL=webpack:///./node_modules/halting-problem/node_modules/acorn-walk/dist/walk.mjs?')},"./node_modules/halting-problem/node_modules/acorn/dist/acorn.mjs":function(module,exports){eval('"use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.getLineInfo = getLineInfo;\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierStart = isIdentifierStart;\nexports.isNewLine = isNewLine;\nexports.parse = parse;\nexports.parseExpressionAt = parseExpressionAt;\nexports.tokenizer = tokenizer;\nexports.version = exports.tokTypes = exports.tokContexts = exports.nonASCIIwhitespace = exports.lineBreakG = exports.lineBreak = exports.keywordTypes = exports.defaultOptions = exports.TokenType = exports.Token = exports.TokContext = exports.SourceLocation = exports.Position = exports.Parser = exports.Node = void 0;\n// Reserved word lists for various dialects of the language\nvar reservedWords = {\n  3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",\n  5: "class enum extends super const export import",\n  6: "enum",\n  strict: "implements interface let package private protected public static yield",\n  strictBind: "eval arguments"\n}; // And the keywords\n\nvar ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  "5module": ecma5AndLessKeywords + " export import",\n  6: ecma5AndLessKeywords + " const class extends export import super"\n};\nvar keywordRelationalOperator = /^in(stanceof)?$/; // ## Character categories\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = "\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC";\nvar nonASCIIidentifierChars = "\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F";\nvar nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");\nvar nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null; // These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n// eslint-disable-next-line comma-spacing\n\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 477, 28, 11, 0, 9, 21, 155, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 12, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 0, 33, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 0, 161, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 270, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 754, 9486, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42710, 42, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541]; // eslint-disable-next-line comma-spacing\n\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 525, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 4, 9, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 232, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 19723, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 792487, 239]; // This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\n\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n\n    if (pos > code) {\n      return false;\n    }\n\n    pos += set[i + 1];\n\n    if (pos >= code) {\n      return true;\n    }\n  }\n} // Test whether a given character code starts an identifier.\n\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) {\n    return code === 36;\n  }\n\n  if (code < 91) {\n    return true;\n  }\n\n  if (code < 97) {\n    return code === 95;\n  }\n\n  if (code < 123) {\n    return true;\n  }\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  if (astral === false) {\n    return false;\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n} // Test whether a given character is part of an identifier.\n\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) {\n    return code === 36;\n  }\n\n  if (code < 58) {\n    return true;\n  }\n\n  if (code < 65) {\n    return false;\n  }\n\n  if (code < 91) {\n    return true;\n  }\n\n  if (code < 97) {\n    return code === 95;\n  }\n\n  if (code < 123) {\n    return true;\n  }\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  if (astral === false) {\n    return false;\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n} // ## Token types\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\n\nvar TokenType = function TokenType(label, conf) {\n  if (conf === void 0) conf = {};\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nexports.TokenType = TokenType;\n\nfunction binop(name, prec) {\n  return new TokenType(name, {\n    beforeExpr: true,\n    binop: prec\n  });\n}\n\nvar beforeExpr = {\n  beforeExpr: true\n},\n    startsExpr = {\n  startsExpr: true\n}; // Map keyword names to token types.\n\nvar keywords$1 = {}; // Succinct definitions of keyword token types\n\nexports.keywordTypes = keywords$1;\n\nfunction kw(name, options) {\n  if (options === void 0) options = {};\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options);\n}\n\nvar types = {\n  num: new TokenType("num", startsExpr),\n  regexp: new TokenType("regexp", startsExpr),\n  string: new TokenType("string", startsExpr),\n  name: new TokenType("name", startsExpr),\n  eof: new TokenType("eof"),\n  // Punctuation token types.\n  bracketL: new TokenType("[", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  bracketR: new TokenType("]"),\n  braceL: new TokenType("{", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  braceR: new TokenType("}"),\n  parenL: new TokenType("(", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  parenR: new TokenType(")"),\n  comma: new TokenType(",", beforeExpr),\n  semi: new TokenType(";", beforeExpr),\n  colon: new TokenType(":", beforeExpr),\n  dot: new TokenType("."),\n  question: new TokenType("?", beforeExpr),\n  arrow: new TokenType("=>", beforeExpr),\n  template: new TokenType("template"),\n  invalidTemplate: new TokenType("invalidTemplate"),\n  ellipsis: new TokenType("...", beforeExpr),\n  backQuote: new TokenType("`", startsExpr),\n  dollarBraceL: new TokenType("${", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n  eq: new TokenType("=", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  assign: new TokenType("_=", {\n    beforeExpr: true,\n    isAssign: true\n  }),\n  incDec: new TokenType("++/--", {\n    prefix: true,\n    postfix: true,\n    startsExpr: true\n  }),\n  prefix: new TokenType("!/~", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  logicalOR: binop("||", 1),\n  logicalAND: binop("&&", 2),\n  bitwiseOR: binop("|", 3),\n  bitwiseXOR: binop("^", 4),\n  bitwiseAND: binop("&", 5),\n  equality: binop("==/!=/===/!==", 6),\n  relational: binop("</>/<=/>=", 7),\n  bitShift: binop("<</>>/>>>", 8),\n  plusMin: new TokenType("+/-", {\n    beforeExpr: true,\n    binop: 9,\n    prefix: true,\n    startsExpr: true\n  }),\n  modulo: binop("%", 10),\n  star: binop("*", 10),\n  slash: binop("/", 10),\n  starstar: new TokenType("**", {\n    beforeExpr: true\n  }),\n  // Keyword token types.\n  _break: kw("break"),\n  _case: kw("case", beforeExpr),\n  _catch: kw("catch"),\n  _continue: kw("continue"),\n  _debugger: kw("debugger"),\n  _default: kw("default", beforeExpr),\n  _do: kw("do", {\n    isLoop: true,\n    beforeExpr: true\n  }),\n  _else: kw("else", beforeExpr),\n  _finally: kw("finally"),\n  _for: kw("for", {\n    isLoop: true\n  }),\n  _function: kw("function", startsExpr),\n  _if: kw("if"),\n  _return: kw("return", beforeExpr),\n  _switch: kw("switch"),\n  _throw: kw("throw", beforeExpr),\n  _try: kw("try"),\n  _var: kw("var"),\n  _const: kw("const"),\n  _while: kw("while", {\n    isLoop: true\n  }),\n  _with: kw("with"),\n  _new: kw("new", {\n    beforeExpr: true,\n    startsExpr: true\n  }),\n  _this: kw("this", startsExpr),\n  _super: kw("super", startsExpr),\n  _class: kw("class", startsExpr),\n  _extends: kw("extends", beforeExpr),\n  _export: kw("export"),\n  _import: kw("import", startsExpr),\n  _null: kw("null", startsExpr),\n  _true: kw("true", startsExpr),\n  _false: kw("false", startsExpr),\n  _in: kw("in", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _instanceof: kw("instanceof", {\n    beforeExpr: true,\n    binop: 7\n  }),\n  _typeof: kw("typeof", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _void: kw("void", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  }),\n  _delete: kw("delete", {\n    beforeExpr: true,\n    prefix: true,\n    startsExpr: true\n  })\n}; // Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nexports.tokTypes = types;\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nexports.lineBreak = lineBreak;\nvar lineBreakG = new RegExp(lineBreak.source, "g");\nexports.lineBreakG = lineBreakG;\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || !ecma2019String && (code === 0x2028 || code === 0x2029);\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\nexports.nonASCIIwhitespace = nonASCIIwhitespace;\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString; // Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName);\n}\n\nvar isArray = Array.isArray || function (obj) {\n  return toString.call(obj) === "[object Array]";\n};\n\nfunction wordsRegexp(words) {\n  return new RegExp("^(?:" + words.replace(/ /g, "|") + ")$");\n} // These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nexports.Position = Position;\n\nPosition.prototype.offset = function offset(n) {\n  return new Position(this.line, this.column + n);\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n\n  if (p.sourceFile !== null) {\n    this.source = p.sourceFile;\n  }\n}; // The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\n\nexports.SourceLocation = SourceLocation;\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur);\n    }\n  }\n} // A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n  // (2019). This influences support for strict mode, the set of\n  // reserved words, and support for new syntax features. The default\n  // is 10.\n  ecmaVersion: 10,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `"script"` or `"module"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: "script",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value "never", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node\'s `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n}; // Interpret and default an options object\n\nexports.defaultOptions = defaultOptions;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions) {\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt];\n  }\n\n  if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null) {\n    options.allowReserved = options.ecmaVersion < 5;\n  }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n\n    options.onToken = function (token) {\n      return tokens.push(token);\n    };\n  }\n\n  if (isArray(options.onComment)) {\n    options.onComment = pushComment(options, options.onComment);\n  }\n\n  return options;\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? "Block" : "Line",\n      value: text,\n      start: start,\n      end: end\n    };\n\n    if (options.locations) {\n      comment.loc = new SourceLocation(this, startLoc, endLoc);\n    }\n\n    if (options.ranges) {\n      comment.range = [start, end];\n    }\n\n    array.push(comment);\n  };\n} // Each scope gets a bitset that may contain these flags\n\n\nvar SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0);\n} // Used in checkLVal and declareName to determine the type of a binding\n\n\nvar BIND_NONE = 0,\n    // Not a binding\nBIND_VAR = 1,\n    // Var-style binding\nBIND_LEXICAL = 2,\n    // Let- or const-style binding\nBIND_FUNCTION = 3,\n    // Function declaration\nBIND_SIMPLE_CATCH = 4,\n    // Simple (identifier pattern) catch binding\nBIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);\n  var reserved = "";\n\n  if (options.allowReserved !== true) {\n    for (var v = options.ecmaVersion;; v--) {\n      if (reserved = reservedWords[v]) {\n        break;\n      }\n    }\n\n    if (options.sourceType === "module") {\n      reserved += " await";\n    }\n  }\n\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);\n  this.input = String(input); // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n\n  this.containsEsc = false; // Set up token state\n  // The current position of the tokenizer in the input.\n\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf("\\n", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  } // Properties of the current token:\n  // Its type\n\n\n  this.type = types.eof; // For tokens that include more information than their type, the value\n\n  this.value = null; // Its start and end offset\n\n  this.start = this.end = this.pos; // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n\n  this.startLoc = this.endLoc = this.curPosition(); // Position information for the previous token\n\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos; // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n\n  this.context = this.initialContext();\n  this.exprAllowed = true; // Figure out if it\'s a module code.\n\n  this.inModule = options.sourceType === "module";\n  this.strict = this.inModule || this.strictDirective(this.pos); // Used to signify the start of a potential arrow function\n\n  this.potentialArrowAt = -1; // Positions to delayed-check that yield/await does not exist in default parameters.\n\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0; // Labels in scope.\n\n  this.labels = []; // Thus-far undefined exports.\n\n  this.undefinedExports = {}; // If enabled, skip leading hashbang line.\n\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === "#!") {\n    this.skipLineComment(2);\n  } // Scope tracking for duplicate variable names (see scope.js)\n\n\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP); // For RegExp validation\n\n  this.regexpState = null;\n};\n\nexports.Parser = Parser;\nvar prototypeAccessors = {\n  inFunction: {\n    configurable: true\n  },\n  inGenerator: {\n    configurable: true\n  },\n  inAsync: {\n    configurable: true\n  },\n  allowSuper: {\n    configurable: true\n  },\n  allowDirectSuper: {\n    configurable: true\n  },\n  treatFunctionsAsVar: {\n    configurable: true\n  }\n};\n\nParser.prototype.parse = function parse() {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node);\n};\n\nprototypeAccessors.inFunction.get = function () {\n  return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n};\n\nprototypeAccessors.inGenerator.get = function () {\n  return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0;\n};\n\nprototypeAccessors.inAsync.get = function () {\n  return (this.currentVarScope().flags & SCOPE_ASYNC) > 0;\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n};\n\nprototypeAccessors.allowDirectSuper.get = function () {\n  return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n};\n\nprototypeAccessors.treatFunctionsAsVar.get = function () {\n  return this.treatFunctionsAsVarInScope(this.currentScope());\n}; // Switch to a getter for 7.0.0.\n\n\nParser.prototype.inNonArrowFunction = function inNonArrowFunction() {\n  return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n};\n\nParser.extend = function extend() {\n  var plugins = [],\n      len = arguments.length;\n\n  while (len--) {\n    plugins[len] = arguments[len];\n  }\n\n  var cls = this;\n\n  for (var i = 0; i < plugins.length; i++) {\n    cls = plugins[i](cls);\n  }\n\n  return cls;\n};\n\nParser.parse = function parse(input, options) {\n  return new this(options, input).parse();\n};\n\nParser.parseExpressionAt = function parseExpressionAt(input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression();\n};\n\nParser.tokenizer = function tokenizer(input, options) {\n  return new this(options, input);\n};\n\nObject.defineProperties(Parser.prototype, prototypeAccessors);\nvar pp = Parser.prototype; // ## Parser utilities\n\nvar literal = /^(?:\'((?:\\\\.|[^\'])*?)\'|"((?:\\\\.|[^"])*?)")/;\n\npp.strictDirective = function (start) {\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n\n    if (!match) {\n      return false;\n    }\n\n    if ((match[1] || match[2]) === "use strict") {\n      return true;\n    }\n\n    start += match[0].length; // Skip semicolon, if any.\n\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n\n    if (this.input[start] === ";") {\n      start++;\n    }\n  }\n}; // Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\n\npp.eat = function (type) {\n  if (this.type === type) {\n    this.next();\n    return true;\n  } else {\n    return false;\n  }\n}; // Tests whether parsed token is a contextual keyword.\n\n\npp.isContextual = function (name) {\n  return this.type === types.name && this.value === name && !this.containsEsc;\n}; // Consumes contextual keyword if possible.\n\n\npp.eatContextual = function (name) {\n  if (!this.isContextual(name)) {\n    return false;\n  }\n\n  this.next();\n  return true;\n}; // Asserts that following token is given contextual keyword.\n\n\npp.expectContextual = function (name) {\n  if (!this.eatContextual(name)) {\n    this.unexpected();\n  }\n}; // Test whether a semicolon can be inserted at the current position.\n\n\npp.canInsertSemicolon = function () {\n  return this.type === types.eof || this.type === types.braceR || lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n};\n\npp.insertSemicolon = function () {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon) {\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc);\n    }\n\n    return true;\n  }\n}; // Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\n\npp.semicolon = function () {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) {\n    this.unexpected();\n  }\n};\n\npp.afterTrailingComma = function (tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma) {\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc);\n    }\n\n    if (!notNext) {\n      this.next();\n    }\n\n    return true;\n  }\n}; // Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\n\npp.expect = function (type) {\n  this.eat(type) || this.unexpected();\n}; // Raise an unexpected token error.\n\n\npp.unexpected = function (pos) {\n  this.raise(pos != null ? pos : this.start, "Unexpected token");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;\n}\n\npp.checkPatternErrors = function (refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) {\n    return;\n  }\n\n  if (refDestructuringErrors.trailingComma > -1) {\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, "Comma is not permitted after the rest element");\n  }\n\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n\n  if (parens > -1) {\n    this.raiseRecoverable(parens, "Parenthesized pattern");\n  }\n};\n\npp.checkExpressionErrors = function (refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) {\n    return false;\n  }\n\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n\n  if (!andThrow) {\n    return shorthandAssign >= 0 || doubleProto >= 0;\n  }\n\n  if (shorthandAssign >= 0) {\n    this.raise(shorthandAssign, "Shorthand property assignments are valid only in destructuring patterns");\n  }\n\n  if (doubleProto >= 0) {\n    this.raiseRecoverable(doubleProto, "Redefinition of __proto__ property");\n  }\n};\n\npp.checkYieldAwaitInDefaultParams = function () {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos)) {\n    this.raise(this.yieldPos, "Yield expression cannot be a default value");\n  }\n\n  if (this.awaitPos) {\n    this.raise(this.awaitPos, "Await expression cannot be a default value");\n  }\n};\n\npp.isSimpleAssignTarget = function (expr) {\n  if (expr.type === "ParenthesizedExpression") {\n    return this.isSimpleAssignTarget(expr.expression);\n  }\n\n  return expr.type === "Identifier" || expr.type === "MemberExpression";\n};\n\nvar pp$1 = Parser.prototype; // ### Statement parsing\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function (node) {\n  var exports = {};\n\n  if (!node.body) {\n    node.body = [];\n  }\n\n  while (this.type !== types.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n\n  if (this.inModule) {\n    for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1) {\n      var name = list[i];\n      this.raiseRecoverable(this.undefinedExports[name].start, "Export \'" + name + "\' is not defined");\n    }\n  }\n\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, "Program");\n};\n\nvar loopLabel = {\n  kind: "loop"\n},\n    switchLabel = {\n  kind: "switch"\n};\n\npp$1.isLet = function (context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual("let")) {\n    return false;\n  }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length,\n      nextCh = this.input.charCodeAt(next); // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n\n  if (nextCh === 91) {\n    return true;\n  } // \'[\'\n\n\n  if (context) {\n    return false;\n  }\n\n  if (nextCh === 123) {\n    return true;\n  } // \'{\'\n\n\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) {\n      ++pos;\n    }\n\n    var ident = this.input.slice(next, pos);\n\n    if (!keywordRelationalOperator.test(ident)) {\n      return true;\n    }\n  }\n\n  return false;\n}; // check \'async [no LineTerminator here] function\'\n// - \'async /*foo*/ function\' is OK.\n// - \'async /*\\n*/ function\' is invalid.\n\n\npp$1.isAsyncFunction = function () {\n  if (this.options.ecmaVersion < 8 || !this.isContextual("async")) {\n    return false;\n  }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) && this.input.slice(next, next + 8) === "function" && (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)));\n}; // Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\n\npp$1.parseStatement = function (context, topLevel, exports) {\n  var starttype = this.type,\n      node = this.startNode(),\n      kind;\n\n  if (this.isLet(context)) {\n    starttype = types._var;\n    kind = "let";\n  } // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n\n  switch (starttype) {\n    case types._break:\n    case types._continue:\n      return this.parseBreakContinueStatement(node, starttype.keyword);\n\n    case types._debugger:\n      return this.parseDebuggerStatement(node);\n\n    case types._do:\n      return this.parseDoStatement(node);\n\n    case types._for:\n      return this.parseForStatement(node);\n\n    case types._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if (context && (this.strict || context !== "if" && context !== "label") && this.options.ecmaVersion >= 6) {\n        this.unexpected();\n      }\n\n      return this.parseFunctionStatement(node, false, !context);\n\n    case types._class:\n      if (context) {\n        this.unexpected();\n      }\n\n      return this.parseClass(node, true);\n\n    case types._if:\n      return this.parseIfStatement(node);\n\n    case types._return:\n      return this.parseReturnStatement(node);\n\n    case types._switch:\n      return this.parseSwitchStatement(node);\n\n    case types._throw:\n      return this.parseThrowStatement(node);\n\n    case types._try:\n      return this.parseTryStatement(node);\n\n    case types._const:\n    case types._var:\n      kind = kind || this.value;\n\n      if (context && kind !== "var") {\n        this.unexpected();\n      }\n\n      return this.parseVarStatement(node, kind);\n\n    case types._while:\n      return this.parseWhileStatement(node);\n\n    case types._with:\n      return this.parseWithStatement(node);\n\n    case types.braceL:\n      return this.parseBlock(true, node);\n\n    case types.semi:\n      return this.parseEmptyStatement(node);\n\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length,\n            nextCh = this.input.charCodeAt(next);\n\n        if (nextCh === 40) // \'(\'\n          {\n            return this.parseExpressionStatement(node, this.parseExpression());\n          }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel) {\n          this.raise(this.start, "\'import\' and \'export\' may only appear at the top level");\n        }\n\n        if (!this.inModule) {\n          this.raise(this.start, "\'import\' and \'export\' may appear only with \'sourceType: module\'");\n        }\n      }\n\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports);\n    // If the statement does not start with a statement keyword or a\n    // brace, it\'s an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) {\n          this.unexpected();\n        }\n\n        this.next();\n        return this.parseFunctionStatement(node, true, !context);\n      }\n\n      var maybeName = this.value,\n          expr = this.parseExpression();\n\n      if (starttype === types.name && expr.type === "Identifier" && this.eat(types.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n\n  }\n};\n\npp$1.parseBreakContinueStatement = function (node, keyword) {\n  var isBreak = keyword === "break";\n  this.next();\n\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.label = null;\n  } else if (this.type !== types.name) {\n    this.unexpected();\n  } else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  } // Verify that there is an actual destination to break or\n  // continue to.\n\n\n  var i = 0;\n\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === "loop")) {\n        break;\n      }\n\n      if (node.label && isBreak) {\n        break;\n      }\n    }\n  }\n\n  if (i === this.labels.length) {\n    this.raise(node.start, "Unsyntactic " + keyword);\n  }\n\n  return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");\n};\n\npp$1.parseDebuggerStatement = function (node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, "DebuggerStatement");\n};\n\npp$1.parseDoStatement = function (node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement("do");\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n\n  if (this.options.ecmaVersion >= 6) {\n    this.eat(types.semi);\n  } else {\n    this.semicolon();\n  }\n\n  return this.finishNode(node, "DoWhileStatement");\n}; // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\n\npp$1.parseForStatement = function (node) {\n  this.next();\n  var awaitAt = this.options.ecmaVersion >= 9 && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction) && this.eatContextual("await") ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types.parenL);\n\n  if (this.type === types.semi) {\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, null);\n  }\n\n  var isLet = this.isLet();\n\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(),\n        kind = isLet ? "let" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, "VariableDeclaration");\n\n    if ((this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) {\n            this.unexpected(awaitAt);\n          }\n        } else {\n          node.await = awaitAt > -1;\n        }\n      }\n\n      return this.parseForIn(node, init$1);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init$1);\n  }\n\n  var refDestructuringErrors = new DestructuringErrors();\n  var init = this.parseExpression(true, refDestructuringErrors);\n\n  if (this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n      } else {\n        node.await = awaitAt > -1;\n      }\n    }\n\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init);\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n\n  if (awaitAt > -1) {\n    this.unexpected(awaitAt);\n  }\n\n  return this.parseFor(node, init);\n};\n\npp$1.parseFunctionStatement = function (node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync);\n};\n\npp$1.parseIfStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression(); // allow function declarations in branches, but only in non-strict mode\n\n  node.consequent = this.parseStatement("if");\n  node.alternate = this.eat(types._else) ? this.parseStatement("if") : null;\n  return this.finishNode(node, "IfStatement");\n};\n\npp$1.parseReturnStatement = function (node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction) {\n    this.raise(this.start, "\'return\' outside of function");\n  }\n\n  this.next(); // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) {\n    node.argument = null;\n  } else {\n    node.argument = this.parseExpression();\n    this.semicolon();\n  }\n\n  return this.finishNode(node, "ReturnStatement");\n};\n\npp$1.parseSwitchStatement = function (node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0); // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this.type === types._case || this.type === types._default) {\n      var isCase = this.type === types._case;\n\n      if (cur) {\n        this.finishNode(cur, "SwitchCase");\n      }\n\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) {\n          this.raiseRecoverable(this.lastTokStart, "Multiple default clauses");\n        }\n\n        sawDefault = true;\n        cur.test = null;\n      }\n\n      this.expect(types.colon);\n    } else {\n      if (!cur) {\n        this.unexpected();\n      }\n\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n\n  this.exitScope();\n\n  if (cur) {\n    this.finishNode(cur, "SwitchCase");\n  }\n\n  this.next(); // Closing brace\n\n  this.labels.pop();\n  return this.finishNode(node, "SwitchStatement");\n};\n\npp$1.parseThrowStatement = function (node) {\n  this.next();\n\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) {\n    this.raise(this.lastTokEnd, "Illegal newline after throw");\n  }\n\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, "ThrowStatement");\n}; // Reused empty array added for node fields that are always empty.\n\n\nvar empty = [];\n\npp$1.parseTryStatement = function (node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === "Identifier";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) {\n        this.unexpected();\n      }\n\n      clause.param = null;\n      this.enterScope(0);\n    }\n\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, "CatchClause");\n  }\n\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n  if (!node.handler && !node.finalizer) {\n    this.raise(node.start, "Missing catch or finally clause");\n  }\n\n  return this.finishNode(node, "TryStatement");\n};\n\npp$1.parseVarStatement = function (node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, "VariableDeclaration");\n};\n\npp$1.parseWhileStatement = function (node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement("while");\n  this.labels.pop();\n  return this.finishNode(node, "WhileStatement");\n};\n\npp$1.parseWithStatement = function (node) {\n  if (this.strict) {\n    this.raise(this.start, "\'with\' in strict mode");\n  }\n\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement("with");\n  return this.finishNode(node, "WithStatement");\n};\n\npp$1.parseEmptyStatement = function (node) {\n  this.next();\n  return this.finishNode(node, "EmptyStatement");\n};\n\npp$1.parseLabeledStatement = function (node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1) {\n    var label = list[i$1];\n\n    if (label.name === maybeName) {\n      this.raise(expr.start, "Label \'" + maybeName + "\' is already declared");\n    }\n  }\n\n  var kind = this.type.isLoop ? "loop" : this.type === types._switch ? "switch" : null;\n\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else {\n      break;\n    }\n  }\n\n  this.labels.push({\n    name: maybeName,\n    kind: kind,\n    statementStart: this.start\n  });\n  node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, "LabeledStatement");\n};\n\npp$1.parseExpressionStatement = function (node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, "ExpressionStatement");\n}; // Parse a semicolon-enclosed block of statements, handling `"use\n// strict"` declarations when `allowStrict` is true (used for\n// function bodies).\n\n\npp$1.parseBlock = function (createNewLexicalScope, node) {\n  if (createNewLexicalScope === void 0) createNewLexicalScope = true;\n  if (node === void 0) node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n\n  if (createNewLexicalScope) {\n    this.enterScope(0);\n  }\n\n  while (!this.eat(types.braceR)) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n\n  if (createNewLexicalScope) {\n    this.exitScope();\n  }\n\n  return this.finishNode(node, "BlockStatement");\n}; // Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\n\npp$1.parseFor = function (node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  node.body = this.parseStatement("for");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, "ForStatement");\n}; // Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser\'s perspective.\n\n\npp$1.parseForIn = function (node, init) {\n  var isForIn = this.type === types._in;\n  this.next();\n\n  if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.options.ecmaVersion < 8 || this.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {\n    this.raise(init.start, (isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer");\n  } else if (init.type === "AssignmentPattern") {\n    this.raise(init.start, "Invalid left-hand side in for-loop");\n  }\n\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  node.body = this.parseStatement("for");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");\n}; // Parse a list of variable declarations.\n\n\npp$1.parseVar = function (node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n\n    if (this.eat(types.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === "const" && !(this.type === types._in || this.options.ecmaVersion >= 6 && this.isContextual("of"))) {\n      this.unexpected();\n    } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types._in || this.isContextual("of")))) {\n      this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value");\n    } else {\n      decl.init = null;\n    }\n\n    node.declarations.push(this.finishNode(decl, "VariableDeclarator"));\n\n    if (!this.eat(types.comma)) {\n      break;\n    }\n  }\n\n  return node;\n};\n\npp$1.parseVarId = function (decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLVal(decl.id, kind === "var" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1,\n    FUNC_HANGING_STATEMENT = 2,\n    FUNC_NULLABLE_ID = 4; // Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n\npp$1.parseFunction = function (node, statement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types.star && statement & FUNC_HANGING_STATEMENT) {\n      this.unexpected();\n    }\n\n    node.generator = this.eat(types.star);\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = statement & FUNC_NULLABLE_ID && this.type !== types.name ? null : this.parseIdent();\n\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT)) // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      {\n        this.checkLVal(node.id, this.strict || node.generator || node.async ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION);\n      }\n  }\n\n  var oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT)) {\n    node.id = this.type === types.name ? this.parseIdent() : null;\n  }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, statement & FUNC_STATEMENT ? "FunctionDeclaration" : "FunctionExpression");\n};\n\npp$1.parseFunctionParams = function (node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n}; // Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\n\npp$1.parseClass = function (node, isStatement) {\n  this.next(); // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n\n  var oldStrict = this.strict;\n  this.strict = true;\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    var element = this.parseClassElement(node.superClass !== null);\n\n    if (element) {\n      classBody.body.push(element);\n\n      if (element.type === "MethodDefinition" && element.kind === "constructor") {\n        if (hadConstructor) {\n          this.raise(element.start, "Duplicate constructor in the same class");\n        }\n\n        hadConstructor = true;\n      }\n    }\n  }\n\n  node.body = this.finishNode(classBody, "ClassBody");\n  this.strict = oldStrict;\n  return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");\n};\n\npp$1.parseClassElement = function (constructorAllowsSuper) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) {\n    return null;\n  }\n\n  var method = this.startNode();\n\n  var tryContextual = function tryContextual(k, noLineBreak) {\n    if (noLineBreak === void 0) noLineBreak = false;\n    var start = this$1.start,\n        startLoc = this$1.startLoc;\n\n    if (!this$1.eatContextual(k)) {\n      return false;\n    }\n\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n      return true;\n    }\n\n    if (method.key) {\n      this$1.unexpected();\n    }\n\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, "Identifier");\n    return false;\n  };\n\n  method.kind = "method";\n  method.static = tryContextual("static");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual("async", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual("get")) {\n      method.kind = "get";\n    } else if (tryContextual("set")) {\n      method.kind = "set";\n    }\n  }\n\n  if (!method.key) {\n    this.parsePropertyName(method);\n  }\n\n  var key = method.key;\n  var allowsDirectSuper = false;\n\n  if (!method.computed && !method.static && (key.type === "Identifier" && key.name === "constructor" || key.type === "Literal" && key.value === "constructor")) {\n    if (method.kind !== "method") {\n      this.raise(key.start, "Constructor can\'t have get/set modifier");\n    }\n\n    if (isGenerator) {\n      this.raise(key.start, "Constructor can\'t be a generator");\n    }\n\n    if (isAsync) {\n      this.raise(key.start, "Constructor can\'t be an async method");\n    }\n\n    method.kind = "constructor";\n    allowsDirectSuper = constructorAllowsSuper;\n  } else if (method.static && key.type === "Identifier" && key.name === "prototype") {\n    this.raise(key.start, "Classes may not have a static property named prototype");\n  }\n\n  this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n\n  if (method.kind === "get" && method.value.params.length !== 0) {\n    this.raiseRecoverable(method.value.start, "getter should have no params");\n  }\n\n  if (method.kind === "set" && method.value.params.length !== 1) {\n    this.raiseRecoverable(method.value.start, "setter should have exactly one param");\n  }\n\n  if (method.kind === "set" && method.value.params[0].type === "RestElement") {\n    this.raiseRecoverable(method.value.params[0].start, "Setter cannot use rest params");\n  }\n\n  return method;\n};\n\npp$1.parseClassMethod = function (method, isGenerator, isAsync, allowsDirectSuper) {\n  method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n  return this.finishNode(method, "MethodDefinition");\n};\n\npp$1.parseClassId = function (node, isStatement) {\n  if (this.type === types.name) {\n    node.id = this.parseIdent();\n\n    if (isStatement) {\n      this.checkLVal(node.id, BIND_LEXICAL, false);\n    }\n  } else {\n    if (isStatement === true) {\n      this.unexpected();\n    }\n\n    node.id = null;\n  }\n};\n\npp$1.parseClassSuper = function (node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n}; // Parses module export declaration.\n\n\npp$1.parseExport = function (node, exports) {\n  this.next(); // export * from \'...\'\n\n  if (this.eat(types.star)) {\n    this.expectContextual("from");\n\n    if (this.type !== types.string) {\n      this.unexpected();\n    }\n\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, "ExportAllDeclaration");\n  }\n\n  if (this.eat(types._default)) {\n    // export default ...\n    this.checkExport(exports, "default", this.lastTokStart);\n    var isAsync;\n\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, "nullableID");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, "ExportDefaultDeclaration");\n  } // export var|const|let|function|class ...\n\n\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n\n    if (node.declaration.type === "VariableDeclaration") {\n      this.checkVariableExport(exports, node.declaration.declarations);\n    } else {\n      this.checkExport(exports, node.declaration.id.name, node.declaration.id.start);\n    }\n\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    // export { x, y as z } [from \'...\']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n\n    if (this.eatContextual("from")) {\n      if (this.type !== types.string) {\n        this.unexpected();\n      }\n\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n        this.checkUnreserved(spec.local); // check if export is defined\n\n        this.checkLocalExport(spec.local);\n      }\n\n      node.source = null;\n    }\n\n    this.semicolon();\n  }\n\n  return this.finishNode(node, "ExportNamedDeclaration");\n};\n\npp$1.checkExport = function (exports, name, pos) {\n  if (!exports) {\n    return;\n  }\n\n  if (has(exports, name)) {\n    this.raiseRecoverable(pos, "Duplicate export \'" + name + "\'");\n  }\n\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function (exports, pat) {\n  var type = pat.type;\n\n  if (type === "Identifier") {\n    this.checkExport(exports, pat.name, pat.start);\n  } else if (type === "ObjectPattern") {\n    for (var i = 0, list = pat.properties; i < list.length; i += 1) {\n      var prop = list[i];\n      this.checkPatternExport(exports, prop);\n    }\n  } else if (type === "ArrayPattern") {\n    for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n      if (elt) {\n        this.checkPatternExport(exports, elt);\n      }\n    }\n  } else if (type === "Property") {\n    this.checkPatternExport(exports, pat.value);\n  } else if (type === "AssignmentPattern") {\n    this.checkPatternExport(exports, pat.left);\n  } else if (type === "RestElement") {\n    this.checkPatternExport(exports, pat.argument);\n  } else if (type === "ParenthesizedExpression") {\n    this.checkPatternExport(exports, pat.expression);\n  }\n};\n\npp$1.checkVariableExport = function (exports, decls) {\n  if (!exports) {\n    return;\n  }\n\n  for (var i = 0, list = decls; i < list.length; i += 1) {\n    var decl = list[i];\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function () {\n  return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" || this.isLet() || this.isAsyncFunction();\n}; // Parses a comma-separated list of module exports.\n\n\npp$1.parseExportSpecifiers = function (exports) {\n  var nodes = [],\n      first = true; // export { x, y as z } [from \'...\']\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n\n      if (this.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var node = this.startNode();\n    node.local = this.parseIdent(true);\n    node.exported = this.eatContextual("as") ? this.parseIdent(true) : node.local;\n    this.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this.finishNode(node, "ExportSpecifier"));\n  }\n\n  return nodes;\n}; // Parses import declaration.\n\n\npp$1.parseImport = function (node) {\n  this.next(); // import \'...\'\n\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual("from");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n\n  this.semicolon();\n  return this.finishNode(node, "ImportDeclaration");\n}; // Parses a comma-separated list of module imports.\n\n\npp$1.parseImportSpecifiers = function () {\n  var nodes = [],\n      first = true;\n\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from \'...\'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, "ImportDefaultSpecifier"));\n\n    if (!this.eat(types.comma)) {\n      return nodes;\n    }\n  }\n\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual("as");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, "ImportNamespaceSpecifier"));\n    return nodes;\n  }\n\n  this.expect(types.braceL);\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n\n      if (this.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseIdent(true);\n\n    if (this.eatContextual("as")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n\n    this.checkLVal(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, "ImportSpecifier"));\n  }\n\n  return nodes;\n}; // Set `ExpressionStatement#directive` property for directive prologues.\n\n\npp$1.adaptDirectivePrologue = function (statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\n\npp$1.isDirectiveCandidate = function (statement) {\n  return statement.type === "ExpressionStatement" && statement.expression.type === "Literal" && typeof statement.expression.value === "string" && ( // Reject parenthesized strings.\n  this.input[statement.start] === "\\"" || this.input[statement.start] === "\'");\n};\n\nvar pp$2 = Parser.prototype; // Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function (node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n      case "Identifier":\n        if (this.inAsync && node.name === "await") {\n          this.raise(node.start, "Cannot use \'await\' as identifier inside an async function");\n        }\n\n        break;\n\n      case "ObjectPattern":\n      case "ArrayPattern":\n      case "RestElement":\n        break;\n\n      case "ObjectExpression":\n        node.type = "ObjectPattern";\n\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n          this.toAssignable(prop, isBinding); // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n\n          if (prop.type === "RestElement" && (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")) {\n            this.raise(prop.argument.start, "Unexpected token");\n          }\n        }\n\n        break;\n\n      case "Property":\n        // AssignmentProperty has type === "Property"\n        if (node.kind !== "init") {\n          this.raise(node.key.start, "Object pattern can\'t contain getter or setter");\n        }\n\n        this.toAssignable(node.value, isBinding);\n        break;\n\n      case "ArrayExpression":\n        node.type = "ArrayPattern";\n\n        if (refDestructuringErrors) {\n          this.checkPatternErrors(refDestructuringErrors, true);\n        }\n\n        this.toAssignableList(node.elements, isBinding);\n        break;\n\n      case "SpreadElement":\n        node.type = "RestElement";\n        this.toAssignable(node.argument, isBinding);\n\n        if (node.argument.type === "AssignmentPattern") {\n          this.raise(node.argument.start, "Rest elements cannot have a default value");\n        }\n\n        break;\n\n      case "AssignmentExpression":\n        if (node.operator !== "=") {\n          this.raise(node.left.end, "Only \'=\' operator can be used for specifying default value.");\n        }\n\n        node.type = "AssignmentPattern";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n      case "AssignmentPattern":\n        break;\n\n      case "ParenthesizedExpression":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break;\n\n      case "MemberExpression":\n        if (!isBinding) {\n          break;\n        }\n\n      default:\n        this.raise(node.start, "Assigning to rvalue");\n    }\n  } else if (refDestructuringErrors) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n  }\n\n  return node;\n}; // Convert list of expression atoms to binding list.\n\n\npp$2.toAssignableList = function (exprList, isBinding) {\n  var end = exprList.length;\n\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n\n    if (elt) {\n      this.toAssignable(elt, isBinding);\n    }\n  }\n\n  if (end) {\n    var last = exprList[end - 1];\n\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier") {\n      this.unexpected(last.argument.start);\n    }\n  }\n\n  return exprList;\n}; // Parses spread element.\n\n\npp$2.parseSpread = function (refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, "SpreadElement");\n};\n\npp$2.parseRestBinding = function () {\n  var node = this.startNode();\n  this.next(); // RestElement inside of a function parameter must be an identifier\n\n  if (this.options.ecmaVersion === 6 && this.type !== types.name) {\n    this.unexpected();\n  }\n\n  node.argument = this.parseBindingAtom();\n  return this.finishNode(node, "RestElement");\n}; // Parses lvalue (assignable) atom.\n\n\npp$2.parseBindingAtom = function () {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, "ArrayPattern");\n\n      case types.braceL:\n        return this.parseObj(true);\n    }\n  }\n\n  return this.parseIdent();\n};\n\npp$2.parseBindingList = function (close, allowEmpty, allowTrailingComma) {\n  var elts = [],\n      first = true;\n\n  while (!this.eat(close)) {\n    if (first) {\n      first = false;\n    } else {\n      this.expect(types.comma);\n    }\n\n    if (allowEmpty && this.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break;\n    } else if (this.type === types.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n\n      if (this.type === types.comma) {\n        this.raise(this.start, "Comma is not permitted after the rest element");\n      }\n\n      this.expect(close);\n      break;\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n\n  return elts;\n};\n\npp$2.parseBindingListItem = function (param) {\n  return param;\n}; // Parses assignment pattern around given atom if possible.\n\n\npp$2.parseMaybeDefault = function (startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) {\n    return left;\n  }\n\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, "AssignmentPattern");\n}; // Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// \'var\' indicating that the lval creates a \'var\' binding\n// \'let\' indicating that the lval creates a lexical (\'let\' or \'const\') binding\n// \'none\' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n\npp$2.checkLVal = function (expr, bindingType, checkClashes) {\n  if (bindingType === void 0) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n    case "Identifier":\n      if (bindingType === BIND_LEXICAL && expr.name === "let") {\n        this.raiseRecoverable(expr.start, "let is disallowed as a lexically bound name");\n      }\n\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name)) {\n        this.raiseRecoverable(expr.start, (bindingType ? "Binding " : "Assigning to ") + expr.name + " in strict mode");\n      }\n\n      if (checkClashes) {\n        if (has(checkClashes, expr.name)) {\n          this.raiseRecoverable(expr.start, "Argument name clash");\n        }\n\n        checkClashes[expr.name] = true;\n      }\n\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) {\n        this.declareName(expr.name, bindingType, expr.start);\n      }\n\n      break;\n\n    case "MemberExpression":\n      if (bindingType) {\n        this.raiseRecoverable(expr.start, "Binding member expression");\n      }\n\n      break;\n\n    case "ObjectPattern":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n        this.checkLVal(prop, bindingType, checkClashes);\n      }\n\n      break;\n\n    case "Property":\n      // AssignmentProperty has type === "Property"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break;\n\n    case "ArrayPattern":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n        if (elem) {\n          this.checkLVal(elem, bindingType, checkClashes);\n        }\n      }\n\n      break;\n\n    case "AssignmentPattern":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break;\n\n    case "RestElement":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break;\n\n    case "ParenthesizedExpression":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break;\n\n    default:\n      this.raise(expr.start, (bindingType ? "Binding" : "Assigning to") + " rvalue");\n  }\n}; // A recursive descent parser operates by defining functions for all\n\n\nvar pp$3 = Parser.prototype; // Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function (prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement") {\n    return;\n  }\n\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand)) {\n    return;\n  }\n\n  var key = prop.key;\n  var name;\n\n  switch (key.type) {\n    case "Identifier":\n      name = key.name;\n      break;\n\n    case "Literal":\n      name = String(key.value);\n      break;\n\n    default:\n      return;\n  }\n\n  var kind = prop.kind;\n\n  if (this.options.ecmaVersion >= 6) {\n    if (name === "__proto__" && kind === "init") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) {\n          refDestructuringErrors.doubleProto = key.start;\n        } // Backwards-compat kludge. Can be removed in version 6.0\n        else {\n            this.raiseRecoverable(key.start, "Redefinition of __proto__ property");\n          }\n      }\n\n      propHash.proto = true;\n    }\n\n    return;\n  }\n\n  name = "$" + name;\n  var other = propHash[name];\n\n  if (other) {\n    var redefinition;\n\n    if (kind === "init") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n\n    if (redefinition) {\n      this.raiseRecoverable(key.start, "Redefinition of property");\n    }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n\n  other[kind] = true;\n}; // ### Expression parsing\n// These nest, from the most general expression type at the top to\n// \'atomic\', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing \'=\' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it\'s possible to raise\n// delayed syntax error at correct position).\n\n\npp$3.parseExpression = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n\n    while (this.eat(types.comma)) {\n      node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors));\n    }\n\n    return this.finishNode(node, "SequenceExpression");\n  }\n\n  return expr;\n}; // Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\n\npp$3.parseMaybeAssign = function (noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual("yield")) {\n    if (this.inGenerator) {\n      return this.parseYield(noIn);\n    } // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn\'t that kind of yield\n    else {\n        this.exprAllowed = false;\n      }\n  }\n\n  var ownDestructuringErrors = false,\n      oldParenAssign = -1,\n      oldTrailingComma = -1,\n      oldShorthandAssign = -1;\n\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldShorthandAssign = refDestructuringErrors.shorthandAssign;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.shorthandAssign = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors();\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start,\n      startLoc = this.startLoc;\n\n  if (this.type === types.parenL || this.type === types.name) {\n    this.potentialArrowAt = this.start;\n  }\n\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n\n  if (afterLeftParse) {\n    left = afterLeftParse.call(this, left, startPos, startLoc);\n  }\n\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n\n    if (!ownDestructuringErrors) {\n      DestructuringErrors.call(refDestructuringErrors);\n    }\n\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, "AssignmentExpression");\n  } else {\n    if (ownDestructuringErrors) {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n  }\n\n  if (oldParenAssign > -1) {\n    refDestructuringErrors.parenthesizedAssign = oldParenAssign;\n  }\n\n  if (oldTrailingComma > -1) {\n    refDestructuringErrors.trailingComma = oldTrailingComma;\n  }\n\n  if (oldShorthandAssign > -1) {\n    refDestructuringErrors.shorthandAssign = oldShorthandAssign;\n  }\n\n  return left;\n}; // Parse a ternary conditional (`?:`) operator.\n\n\npp$3.parseMaybeConditional = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, "ConditionalExpression");\n  }\n\n  return expr;\n}; // Start the precedence parser.\n\n\npp$3.parseExprOps = function (noIn, refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n\n  if (this.checkExpressionErrors(refDestructuringErrors)) {\n    return expr;\n  }\n\n  return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n}; // Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\n\npp$3.parseExprOp = function (left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start,\n          startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n  }\n\n  return left;\n};\n\npp$3.buildBinary = function (startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? "LogicalExpression" : "BinaryExpression");\n}; // Parse unary operators, both prefix and postfix.\n\n\npp$3.parseMaybeUnary = function (refDestructuringErrors, sawUnary) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      expr;\n\n  if (this.isContextual("await") && (this.inAsync || !this.inFunction && this.options.allowAwaitOutsideFunction)) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(),\n        update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n\n    if (update) {\n      this.checkLVal(node.argument);\n    } else if (this.strict && node.operator === "delete" && node.argument.type === "Identifier") {\n      this.raiseRecoverable(node.start, "Deleting local variable in strict mode");\n    } else {\n      sawUnary = true;\n    }\n\n    expr = this.finishNode(node, update ? "UpdateExpression" : "UnaryExpression");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n\n    if (this.checkExpressionErrors(refDestructuringErrors)) {\n      return expr;\n    }\n\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node$1, "UpdateExpression");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar)) {\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), "**", false);\n  } else {\n    return expr;\n  }\n}; // Parse call, dot, and `[]`-subscript expressions.\n\n\npp$3.parseExprSubscripts = function (refDestructuringErrors) {\n  var startPos = this.start,\n      startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")";\n\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) {\n    return expr;\n  }\n\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n\n  if (refDestructuringErrors && result.type === "MemberExpression") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) {\n      refDestructuringErrors.parenthesizedAssign = -1;\n    }\n\n    if (refDestructuringErrors.parenthesizedBind >= result.start) {\n      refDestructuringErrors.parenthesizedBind = -1;\n    }\n  }\n\n  return result;\n};\n\npp$3.parseSubscripts = function (base, startPos, startLoc, noCalls) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" && this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === "async";\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow);\n\n    if (element === base || element.type === "ArrowFunctionExpression") {\n      return element;\n    }\n\n    base = element;\n  }\n};\n\npp$3.parseSubscript = function (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n  var computed = this.eat(types.bracketL);\n\n  if (computed || this.eat(types.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== "never");\n    node.computed = !!computed;\n\n    if (computed) {\n      this.expect(types.bracketR);\n    }\n\n    base = this.finishNode(node, "MemberExpression");\n  } else if (!noCalls && this.eat(types.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors(),\n        oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n\n    if (maybeAsyncArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n\n      if (this.awaitIdentPos > 0) {\n        this.raise(this.awaitIdentPos, "Cannot use \'await\' as identifier inside an async function");\n      }\n\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true);\n    }\n\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    base = this.finishNode(node$1, "CallExpression");\n  } else if (this.type === types.backQuote) {\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({\n      isTagged: true\n    });\n    base = this.finishNode(node$2, "TaggedTemplateExpression");\n  }\n\n  return base;\n}; // Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\n\npp$3.parseExprAtom = function (refDestructuringErrors) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types.slash) {\n    this.readRegexp();\n  }\n\n  var node,\n      canBeArrow = this.potentialArrowAt === this.start;\n\n  switch (this.type) {\n    case types._super:\n      if (!this.allowSuper) {\n        this.raise(this.start, "\'super\' keyword outside a method");\n      }\n\n      node = this.startNode();\n      this.next();\n\n      if (this.type === types.parenL && !this.allowDirectSuper) {\n        this.raise(node.start, "super() call outside constructor of a subclass");\n      } // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super Arguments\n\n\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL) {\n        this.unexpected();\n      }\n\n      return this.finishNode(node, "Super");\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, "ThisExpression");\n\n    case types.name:\n      var startPos = this.start,\n          startLoc = this.startLoc,\n          containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types._function)) {\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true);\n      }\n\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow)) {\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false);\n        }\n\n        if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n\n          if (this.canInsertSemicolon() || !this.eat(types.arrow)) {\n            this.unexpected();\n          }\n\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true);\n        }\n      }\n\n      return id;\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {\n        pattern: value.pattern,\n        flags: value.flags\n      };\n      return node;\n\n    case types.num:\n    case types.string:\n      return this.parseLiteral(this.value);\n\n    case types._null:\n    case types._true:\n    case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, "Literal");\n\n    case types.parenL:\n      var start = this.start,\n          expr = this.parseParenAndDistinguishExpression(canBeArrow);\n\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr)) {\n          refDestructuringErrors.parenthesizedAssign = start;\n        }\n\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = start;\n        }\n      }\n\n      return expr;\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, "ArrayExpression");\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors);\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0);\n\n    case types._class:\n      return this.parseClass(this.startNode(), false);\n\n    case types._new:\n      return this.parseNew();\n\n    case types.backQuote:\n      return this.parseTemplate();\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport();\n      } else {\n        return this.unexpected();\n      }\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseExprImport = function () {\n  var node = this.startNode();\n  this.next(); // skip `import`\n\n  switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node);\n\n    default:\n      this.unexpected();\n  }\n};\n\npp$3.parseDynamicImport = function (node) {\n  this.next(); // skip `(`\n  // Parse node.source.\n\n  node.source = this.parseMaybeAssign(); // Verify ending.\n\n  if (!this.eat(types.parenR)) {\n    var errorPos = this.start;\n\n    if (this.eat(types.comma) && this.eat(types.parenR)) {\n      this.raiseRecoverable(errorPos, "Trailing comma is not allowed in import()");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, "ImportExpression");\n};\n\npp$3.parseLiteral = function (value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) {\n    node.bigint = node.raw.slice(0, -1);\n  }\n\n  this.next();\n  return this.finishNode(node, "Literal");\n};\n\npp$3.parseParenExpression = function () {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val;\n};\n\npp$3.parseParenAndDistinguishExpression = function (canBeArrow) {\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      val,\n      allowTrailingComma = this.options.ecmaVersion >= 8;\n\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n    var innerStartPos = this.start,\n        innerStartLoc = this.startLoc;\n    var exprList = [],\n        first = true,\n        lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors(),\n        oldYieldPos = this.yieldPos,\n        oldAwaitPos = this.awaitPos,\n        spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0; // Do not save awaitIdentPos to allow checking awaits nested in parameters\n\n    while (this.type !== types.parenR) {\n      first ? first = false : this.expect(types.comma);\n\n      if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break;\n      } else if (this.type === types.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n\n        if (this.type === types.comma) {\n          this.raise(this.start, "Comma is not permitted after the rest element");\n        }\n\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n\n    var innerEndPos = this.start,\n        innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList);\n    }\n\n    if (!exprList.length || lastIsComma) {\n      this.unexpected(this.lastTokStart);\n    }\n\n    if (spreadStart) {\n      this.unexpected(spreadStart);\n    }\n\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, "ParenthesizedExpression");\n  } else {\n    return val;\n  }\n};\n\npp$3.parseParenItem = function (item) {\n  return item;\n};\n\npp$3.parseParenArrowList = function (startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList);\n}; // New\'s precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\n\nvar empty$1 = [];\n\npp$3.parseNew = function () {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== "target" || containsEsc) {\n      this.raiseRecoverable(node.property.start, "The only valid meta property for new is new.target");\n    }\n\n    if (!this.inNonArrowFunction()) {\n      this.raiseRecoverable(node.start, "new.target can only be used in functions");\n    }\n\n    return this.finishNode(node, "MetaProperty");\n  }\n\n  var startPos = this.start,\n      startLoc = this.startLoc,\n      isImport = this.type === types._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n\n  if (isImport && node.callee.type === "ImportExpression") {\n    this.raise(startPos, "Cannot use new with import()");\n  }\n\n  if (this.eat(types.parenL)) {\n    node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false);\n  } else {\n    node.arguments = empty$1;\n  }\n\n  return this.finishNode(node, "NewExpression");\n}; // Parse template expression.\n\n\npp$3.parseTemplateElement = function (ref) {\n  var isTagged = ref.isTagged;\n  var elem = this.startNode();\n\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal");\n    }\n\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, "\\n"),\n      cooked: this.value\n    };\n  }\n\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, "TemplateElement");\n};\n\npp$3.parseTemplate = function (ref) {\n  if (ref === void 0) ref = {};\n  var isTagged = ref.isTagged;\n  if (isTagged === void 0) isTagged = false;\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({\n    isTagged: isTagged\n  });\n  node.quasis = [curElt];\n\n  while (!curElt.tail) {\n    if (this.type === types.eof) {\n      this.raise(this.pos, "Unterminated template literal");\n    }\n\n    this.expect(types.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({\n      isTagged: isTagged\n    }));\n  }\n\n  this.next();\n  return this.finishNode(node, "TemplateLiteral");\n};\n\npp$3.isAsyncProp = function (prop) {\n  return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" && (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === types.star) && !lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n}; // Parse an object literal or binding pattern.\n\n\npp$3.parseObj = function (isPattern, refDestructuringErrors) {\n  var node = this.startNode(),\n      first = true,\n      propHash = {};\n  node.properties = [];\n  this.next();\n\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this.expect(types.comma);\n\n      if (this.afterTrailingComma(types.braceR)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n\n    if (!isPattern) {\n      this.checkPropClash(prop, propHash, refDestructuringErrors);\n    }\n\n    node.properties.push(prop);\n  }\n\n  return this.finishNode(node, isPattern ? "ObjectPattern" : "ObjectExpression");\n};\n\npp$3.parseProperty = function (isPattern, refDestructuringErrors) {\n  var prop = this.startNode(),\n      isGenerator,\n      isAsync,\n      startPos,\n      startLoc;\n\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n\n      if (this.type === types.comma) {\n        this.raise(this.start, "Comma is not permitted after the rest element");\n      }\n\n      return this.finishNode(prop, "RestElement");\n    } // To disallow parenthesized identifier via `this.toAssignable()`.\n\n\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    } // Parse argument.\n\n\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors); // To disallow trailing comma via `this.toAssignable()`.\n\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    } // Finish\n\n\n    return this.finishNode(prop, "SpreadElement");\n  }\n\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types.star);\n    }\n  }\n\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, "Property");\n};\n\npp$3.parsePropertyValue = function (prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon) {\n    this.unexpected();\n  }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = "init";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) {\n      this.unexpected();\n    }\n\n    prop.kind = "init";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc && this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" && (prop.key.name === "get" || prop.key.name === "set") && this.type !== types.comma && this.type !== types.braceR) {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === "get" ? 0 : 1;\n\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n\n      if (prop.kind === "get") {\n        this.raiseRecoverable(start, "getter should have no params");\n      } else {\n        this.raiseRecoverable(start, "setter should have exactly one param");\n      }\n    } else {\n      if (prop.kind === "set" && prop.value.params[0].type === "RestElement") {\n        this.raiseRecoverable(prop.value.params[0].start, "Setter cannot use rest params");\n      }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {\n    if (isGenerator || isAsync) {\n      this.unexpected();\n    }\n\n    this.checkUnreserved(prop.key);\n\n    if (prop.key.name === "await" && !this.awaitIdentPos) {\n      this.awaitIdentPos = startPos;\n    }\n\n    prop.kind = "init";\n\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0) {\n        refDestructuringErrors.shorthandAssign = this.start;\n      }\n\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n\n    prop.shorthand = true;\n  } else {\n    this.unexpected();\n  }\n};\n\npp$3.parsePropertyName = function (prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key;\n    } else {\n      prop.computed = false;\n    }\n  }\n\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never");\n}; // Initialize empty function node.\n\n\npp$3.initFunction = function (node) {\n  node.id = null;\n\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = node.expression = false;\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = false;\n  }\n}; // Parse object or class method.\n\n\npp$3.parseMethod = function (isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(),\n      oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldAwaitIdentPos = this.awaitIdentPos;\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = isGenerator;\n  }\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, "FunctionExpression");\n}; // Parse arrow function expression with given parameters.\n\n\npp$3.parseArrowExpression = function (node, params, isAsync) {\n  var oldYieldPos = this.yieldPos,\n      oldAwaitPos = this.awaitPos,\n      oldAwaitIdentPos = this.awaitIdentPos;\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false);\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, "ArrowFunctionExpression");\n}; // Parse function body and check parameters.\n\n\npp$3.parseFunctionBody = function (node, isArrowFunction, isMethod) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict,\n      useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end); // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n\n      if (useStrict && nonSimple) {\n        this.raiseRecoverable(node.start, "Illegal \'use strict\' directive in function with non-simple parameter list");\n      }\n    } // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n\n\n    var oldLabels = this.labels;\n    this.labels = [];\n\n    if (useStrict) {\n      this.strict = true;\n    } // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n\n\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n\n  this.exitScope(); // Ensure the function name isn\'t a forbidden identifier in strict mode, e.g. \'eval\'\n\n  if (this.strict && node.id) {\n    this.checkLVal(node.id, BIND_OUTSIDE);\n  }\n\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function (params) {\n  for (var i = 0, list = params; i < list.length; i += 1) {\n    var param = list[i];\n\n    if (param.type !== "Identifier") {\n      return false;\n    }\n  }\n\n  return true;\n}; // Checks function params for various disallowed patterns such as using "eval"\n// or "arguments" and duplicate parameters.\n\n\npp$3.checkParams = function (node, allowDuplicates) {\n  var nameHash = {};\n\n  for (var i = 0, list = node.params; i < list.length; i += 1) {\n    var param = list[i];\n    this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n}; // Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\n\npp$3.parseExprList = function (close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [],\n      first = true;\n\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types.comma);\n\n      if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break;\n      }\n    } else {\n      first = false;\n    }\n\n    var elt = void 0;\n\n    if (allowEmpty && this.type === types.comma) {\n      elt = null;\n    } else if (this.type === types.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n\n      if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n\n    elts.push(elt);\n  }\n\n  return elts;\n};\n\npp$3.checkUnreserved = function (ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === "yield") {\n    this.raiseRecoverable(start, "Cannot use \'yield\' as identifier inside a generator");\n  }\n\n  if (this.inAsync && name === "await") {\n    this.raiseRecoverable(start, "Cannot use \'await\' as identifier inside an async function");\n  }\n\n  if (this.keywords.test(name)) {\n    this.raise(start, "Unexpected keyword \'" + name + "\'");\n  }\n\n  if (this.options.ecmaVersion < 6 && this.input.slice(start, end).indexOf("\\\\") !== -1) {\n    return;\n  }\n\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n\n  if (re.test(name)) {\n    if (!this.inAsync && name === "await") {\n      this.raiseRecoverable(start, "Cannot use keyword \'await\' outside an async function");\n    }\n\n    this.raiseRecoverable(start, "The keyword \'" + name + "\' is reserved");\n  }\n}; // Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\n\npp$3.parseIdent = function (liberal, isBinding) {\n  var node = this.startNode();\n\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword; // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n\n    if ((node.name === "class" || node.name === "function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n\n  this.next();\n  this.finishNode(node, "Identifier");\n\n  if (!liberal) {\n    this.checkUnreserved(node);\n\n    if (node.name === "await" && !this.awaitIdentPos) {\n      this.awaitIdentPos = node.start;\n    }\n  }\n\n  return node;\n}; // Parses yield expression inside generator.\n\n\npp$3.parseYield = function (noIn) {\n  if (!this.yieldPos) {\n    this.yieldPos = this.start;\n  }\n\n  var node = this.startNode();\n  this.next();\n\n  if (this.type === types.semi || this.canInsertSemicolon() || this.type !== types.star && !this.type.startsExpr) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign(noIn);\n  }\n\n  return this.finishNode(node, "YieldExpression");\n};\n\npp$3.parseAwait = function () {\n  if (!this.awaitPos) {\n    this.awaitPos = this.start;\n  }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, "AwaitExpression");\n};\n\nvar pp$4 = Parser.prototype; // This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function (pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += " (" + loc.line + ":" + loc.column + ")";\n  var err = new SyntaxError(message);\n  err.pos = pos;\n  err.loc = loc;\n  err.raisedAt = this.pos;\n  throw err;\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function () {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags; // A list of var-declared names in the current lexical scope\n\n  this.var = []; // A list of lexically-declared names in the current lexical scope\n\n  this.lexical = []; // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n\n  this.functions = [];\n}; // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n\npp$5.enterScope = function (flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$5.exitScope = function () {\n  this.scopeStack.pop();\n}; // The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\n\n\npp$5.treatFunctionsAsVarInScope = function (scope) {\n  return scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_TOP;\n};\n\npp$5.declareName = function (name, bindingType, pos) {\n  var redeclared = false;\n\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n\n    if (this.inModule && scope.flags & SCOPE_TOP) {\n      delete this.undefinedExports[name];\n    }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n\n    if (this.treatFunctionsAsVar) {\n      redeclared = scope$2.lexical.indexOf(name) > -1;\n    } else {\n      redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1;\n    }\n\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n\n      if (scope$3.lexical.indexOf(name) > -1 && !(scope$3.flags & SCOPE_SIMPLE_CATCH && scope$3.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break;\n      }\n\n      scope$3.var.push(name);\n\n      if (this.inModule && scope$3.flags & SCOPE_TOP) {\n        delete this.undefinedExports[name];\n      }\n\n      if (scope$3.flags & SCOPE_VAR) {\n        break;\n      }\n    }\n  }\n\n  if (redeclared) {\n    this.raiseRecoverable(pos, "Identifier \'" + name + "\' has already been declared");\n  }\n};\n\npp$5.checkLocalExport = function (id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$5.currentScope = function () {\n  return this.scopeStack[this.scopeStack.length - 1];\n};\n\npp$5.currentVarScope = function () {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n\n    if (scope.flags & SCOPE_VAR) {\n      return scope;\n    }\n  }\n}; // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n\n\npp$5.currentThisScope = function () {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) {\n      return scope;\n    }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = "";\n  this.start = pos;\n  this.end = 0;\n\n  if (parser.options.locations) {\n    this.loc = new SourceLocation(parser, loc);\n  }\n\n  if (parser.options.directSourceFile) {\n    this.sourceFile = parser.options.directSourceFile;\n  }\n\n  if (parser.options.ranges) {\n    this.range = [pos, 0];\n  }\n}; // Start an AST node, attaching a start offset.\n\n\nexports.Node = Node;\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function () {\n  return new Node(this, this.start, this.startLoc);\n};\n\npp$6.startNodeAt = function (pos, loc) {\n  return new Node(this, pos, loc);\n}; // Finish an AST node, adding `type` and `end` properties.\n\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n\n  if (this.options.locations) {\n    node.loc.end = loc;\n  }\n\n  if (this.options.ranges) {\n    node.range[1] = pos;\n  }\n\n  return node;\n}\n\npp$6.finishNode = function (node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc);\n}; // Finish node at given position\n\n\npp$6.finishNodeAt = function (node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc);\n}; // The algorithm used to determine whether a regexp can appear at a\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nexports.TokContext = TokContext;\nvar types$1 = {\n  b_stat: new TokContext("{", false),\n  b_expr: new TokContext("{", true),\n  b_tmpl: new TokContext("${", false),\n  p_stat: new TokContext("(", false),\n  p_expr: new TokContext("(", true),\n  q_tmpl: new TokContext("`", true, true, function (p) {\n    return p.tryReadTemplateToken();\n  }),\n  f_stat: new TokContext("function", false),\n  f_expr: new TokContext("function", true),\n  f_expr_gen: new TokContext("function", true, false, null, true),\n  f_gen: new TokContext("function", false, false, null, true)\n};\nexports.tokContexts = types$1;\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function () {\n  return [types$1.b_stat];\n};\n\npp$7.braceIsBlock = function (prevType) {\n  var parent = this.curContext();\n\n  if (parent === types$1.f_expr || parent === types$1.f_stat) {\n    return true;\n  }\n\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr)) {\n    return !parent.isExpr;\n  } // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n\n\n  if (prevType === types._return || prevType === types.name && this.exprAllowed) {\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start));\n  }\n\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n    return true;\n  }\n\n  if (prevType === types.braceL) {\n    return parent === types$1.b_stat;\n  }\n\n  if (prevType === types._var || prevType === types._const || prevType === types.name) {\n    return false;\n  }\n\n  return !this.exprAllowed;\n};\n\npp$7.inGeneratorContext = function () {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n\n    if (context.token === "function") {\n      return context.generator;\n    }\n  }\n\n  return false;\n};\n\npp$7.updateContext = function (prevType) {\n  var update,\n      type = this.type;\n\n  if (type.keyword && prevType === types.dot) {\n    this.exprAllowed = false;\n  } else if (update = type.updateContext) {\n    update.call(this, prevType);\n  } else {\n    this.exprAllowed = type.beforeExpr;\n  }\n}; // Token-specific context update code\n\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return;\n  }\n\n  var out = this.context.pop();\n\n  if (out === types$1.b_stat && this.curContext().token === "function") {\n    out = this.context.pop();\n  }\n\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {// tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.context.push(types$1.f_expr);\n  } else {\n    this.context.push(types$1.f_stat);\n  }\n\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.q_tmpl) {\n    this.context.pop();\n  } else {\n    this.context.push(types$1.q_tmpl);\n  }\n\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function (prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n\n    if (this.context[index] === types$1.f_expr) {\n      this.context[index] = types$1.f_expr_gen;\n    } else {\n      this.context[index] = types$1.f_gen;\n    }\n  }\n\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function (prevType) {\n  var allowed = false;\n\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) {\n      allowed = true;\n    }\n  }\n\n  this.exprAllowed = allowed;\n}; // This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$(\'#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code\').map(el => el.innerText)\n// #table-binary-unicode-properties\n\n\nvar ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";\nvar ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties\n}; // #table-unicode-general-category-values\n\nvar unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu"; // #table-unicode-script-values\n\nvar ecma9ScriptValues = "Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";\nvar ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";\nvar ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues\n};\nvar data = {};\n\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nbuildUnicodeData(9);\nbuildUnicodeData(10);\nbuildUnicodeData(11);\nvar pp$8 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n  this.source = "";\n  this.flags = "";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = "";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset(start, pattern, flags) {\n  var unicode = flags.indexOf("u") !== -1;\n  this.start = start | 0;\n  this.source = pattern + "";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise(message) {\n  this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + message);\n}; // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n\n\nRegExpValidationState.prototype.at = function at(i) {\n  var s = this.source;\n  var l = s.length;\n\n  if (i >= l) {\n    return -1;\n  }\n\n  var c = s.charCodeAt(i);\n\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c;\n  }\n\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00;\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex(i) {\n  var s = this.source;\n  var l = s.length;\n\n  if (i >= l) {\n    return l;\n  }\n\n  var c = s.charCodeAt(i);\n\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1;\n  }\n\n  return i + 2;\n};\n\nRegExpValidationState.prototype.current = function current() {\n  return this.at(this.pos);\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead() {\n  return this.at(this.nextIndex(this.pos));\n};\n\nRegExpValidationState.prototype.advance = function advance() {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat(ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction codePointToString(ch) {\n  if (ch <= 0xFFFF) {\n    return String.fromCharCode(ch);\n  }\n\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00);\n}\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\n\n\npp$8.validateRegExpFlags = function (state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, "Invalid regular expression flag");\n    }\n\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, "Duplicate regular expression flag");\n    }\n  }\n};\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\n\n\npp$8.validateRegExpPattern = function (state) {\n  this.regexp_pattern(state); // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n\n\npp$8.regexp_pattern = function (state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = "";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29\n    /* ) */\n    )) {\n      state.raise("Unmatched \')\'");\n    }\n\n    if (state.eat(0x5D\n    /* [ */\n    ) || state.eat(0x7D\n    /* } */\n    )) {\n      state.raise("Lone quantifier brackets");\n    }\n  }\n\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise("Invalid escape");\n  }\n\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise("Invalid named capture referenced");\n    }\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n\n\npp$8.regexp_disjunction = function (state) {\n  this.regexp_alternative(state);\n\n  while (state.eat(0x7C\n  /* | */\n  )) {\n    this.regexp_alternative(state);\n  } // Make the same message as V8.\n\n\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise("Nothing to repeat");\n  }\n\n  if (state.eat(0x7B\n  /* { */\n  )) {\n    state.raise("Lone quantifier brackets");\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n\n\npp$8.regexp_alternative = function (state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n\n\npp$8.regexp_eatTerm = function (state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise("Invalid quantifier");\n      }\n    }\n\n    return true;\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n\n\npp$8.regexp_eatAssertion = function (state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false; // ^, $\n\n  if (state.eat(0x5E\n  /* ^ */\n  ) || state.eat(0x24\n  /* $ */\n  )) {\n    return true;\n  } // \\b \\B\n\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (state.eat(0x42\n    /* B */\n    ) || state.eat(0x62\n    /* b */\n    )) {\n      return true;\n    }\n\n    state.pos = start;\n  } // Lookahead / Lookbehind\n\n\n  if (state.eat(0x28\n  /* ( */\n  ) && state.eat(0x3F\n  /* ? */\n  )) {\n    var lookbehind = false;\n\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C\n      /* < */\n      );\n    }\n\n    if (state.eat(0x3D\n    /* = */\n    ) || state.eat(0x21\n    /* ! */\n    )) {\n      this.regexp_disjunction(state);\n\n      if (!state.eat(0x29\n      /* ) */\n      )) {\n        state.raise("Unterminated group");\n      }\n\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true;\n    }\n  }\n\n  state.pos = start;\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n\n\npp$8.regexp_eatQuantifier = function (state, noError) {\n  if (noError === void 0) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F\n    /* ? */\n    );\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n\n\npp$8.regexp_eatQuantifierPrefix = function (state, noError) {\n  return state.eat(0x2A\n  /* * */\n  ) || state.eat(0x2B\n  /* + */\n  ) || state.eat(0x3F\n  /* ? */\n  ) || this.regexp_eatBracedQuantifier(state, noError);\n};\n\npp$8.regexp_eatBracedQuantifier = function (state, noError) {\n  var start = state.pos;\n\n  if (state.eat(0x7B\n  /* { */\n  )) {\n    var min = 0,\n        max = -1;\n\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n\n      if (state.eat(0x2C\n      /* , */\n      ) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n\n      if (state.eat(0x7D\n      /* } */\n      )) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise("numbers out of order in {} quantifier");\n        }\n\n        return true;\n      }\n    }\n\n    if (state.switchU && !noError) {\n      state.raise("Incomplete quantifier");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n\n\npp$8.regexp_eatAtom = function (state) {\n  return this.regexp_eatPatternCharacters(state) || state.eat(0x2E\n  /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state);\n};\n\npp$8.regexp_eatReverseSolidusAtomEscape = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$8.regexp_eatUncapturingGroup = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x28\n  /* ( */\n  )) {\n    if (state.eat(0x3F\n    /* ? */\n    ) && state.eat(0x3A\n    /* : */\n    )) {\n      this.regexp_disjunction(state);\n\n      if (state.eat(0x29\n      /* ) */\n      )) {\n        return true;\n      }\n\n      state.raise("Unterminated group");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$8.regexp_eatCapturingGroup = function (state) {\n  if (state.eat(0x28\n  /* ( */\n  )) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F\n    /* ? */\n    ) {\n        state.raise("Invalid group");\n      }\n\n    this.regexp_disjunction(state);\n\n    if (state.eat(0x29\n    /* ) */\n    )) {\n      state.numCapturingParens += 1;\n      return true;\n    }\n\n    state.raise("Unterminated group");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n\n\npp$8.regexp_eatExtendedAtom = function (state) {\n  return state.eat(0x2E\n  /* . */\n  ) || this.regexp_eatReverseSolidusAtomEscape(state) || this.regexp_eatCharacterClass(state) || this.regexp_eatUncapturingGroup(state) || this.regexp_eatCapturingGroup(state) || this.regexp_eatInvalidBracedQuantifier(state) || this.regexp_eatExtendedPatternCharacter(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n\n\npp$8.regexp_eatInvalidBracedQuantifier = function (state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise("Nothing to repeat");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n\n\npp$8.regexp_eatSyntaxCharacter = function (state) {\n  var ch = state.current();\n\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction isSyntaxCharacter(ch) {\n  return ch === 0x24\n  /* $ */\n  || ch >= 0x28\n  /* ( */\n  && ch <= 0x2B\n  /* + */\n  || ch === 0x2E\n  /* . */\n  || ch === 0x3F\n  /* ? */\n  || ch >= 0x5B\n  /* [ */\n  && ch <= 0x5E\n  /* ^ */\n  || ch >= 0x7B\n  /* { */\n  && ch <= 0x7D\n  /* } */\n  ;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\n\n\npp$8.regexp_eatPatternCharacters = function (state) {\n  var start = state.pos;\n  var ch = 0;\n\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n\n  return state.pos !== start;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n\n\npp$8.regexp_eatExtendedPatternCharacter = function (state) {\n  var ch = state.current();\n\n  if (ch !== -1 && ch !== 0x24\n  /* $ */\n  && !(ch >= 0x28\n  /* ( */\n  && ch <= 0x2B\n  /* + */\n  ) && ch !== 0x2E\n  /* . */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x5B\n  /* [ */\n  && ch !== 0x5E\n  /* ^ */\n  && ch !== 0x7C\n  /* | */\n  ) {\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\n\n\npp$8.regexp_groupSpecifier = function (state) {\n  if (state.eat(0x3F\n  /* ? */\n  )) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise("Duplicate capture group name");\n      }\n\n      state.groupNames.push(state.lastStringValue);\n      return;\n    }\n\n    state.raise("Invalid group");\n  }\n}; // GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\n\n\npp$8.regexp_eatGroupName = function (state) {\n  state.lastStringValue = "";\n\n  if (state.eat(0x3C\n  /* < */\n  )) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E\n    /* > */\n    )) {\n      return true;\n    }\n\n    state.raise("Invalid capture group name");\n  }\n\n  return false;\n}; // RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\n\n\npp$8.regexp_eatRegExpIdentifierName = function (state) {\n  state.lastStringValue = "";\n\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n\n    return true;\n  }\n\n  return false;\n}; // RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n\n\npp$8.regexp_eatRegExpIdentifierStart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C\n  /* \\ */\n  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n\n  state.pos = start;\n  return false;\n};\n\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24\n  /* $ */\n  || ch === 0x5F;\n  /* _ */\n} // RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\n\n\npp$8.regexp_eatRegExpIdentifierPart = function (state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C\n  /* \\ */\n  && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true;\n  }\n\n  state.pos = start;\n  return false;\n};\n\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24\n  /* $ */\n  || ch === 0x5F\n  /* _ */\n  || ch === 0x200C\n  /* <ZWNJ> */\n  || ch === 0x200D;\n  /* <ZWJ> */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n\n\npp$8.regexp_eatAtomEscape = function (state) {\n  if (this.regexp_eatBackReference(state) || this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state) || state.switchN && this.regexp_eatKGroupName(state)) {\n    return true;\n  }\n\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63\n    /* c */\n    ) {\n        state.raise("Invalid unicode escape");\n      }\n\n    state.raise("Invalid escape");\n  }\n\n  return false;\n};\n\npp$8.regexp_eatBackReference = function (state) {\n  var start = state.pos;\n\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n\n      return true;\n    }\n\n    if (n <= state.numCapturingParens) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$8.regexp_eatKGroupName = function (state) {\n  if (state.eat(0x6B\n  /* k */\n  )) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true;\n    }\n\n    state.raise("Invalid named reference");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n\n\npp$8.regexp_eatCharacterEscape = function (state) {\n  return this.regexp_eatControlEscape(state) || this.regexp_eatCControlLetter(state) || this.regexp_eatZero(state) || this.regexp_eatHexEscapeSequence(state) || this.regexp_eatRegExpUnicodeEscapeSequence(state) || !state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state) || this.regexp_eatIdentityEscape(state);\n};\n\npp$8.regexp_eatCControlLetter = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x63\n  /* c */\n  )) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\npp$8.regexp_eatZero = function (state) {\n  if (state.current() === 0x30\n  /* 0 */\n  && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n\n\npp$8.regexp_eatControlEscape = function (state) {\n  var ch = state.current();\n\n  if (ch === 0x74\n  /* t */\n  ) {\n      state.lastIntValue = 0x09;\n      /* \\t */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x6E\n  /* n */\n  ) {\n      state.lastIntValue = 0x0A;\n      /* \\n */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x76\n  /* v */\n  ) {\n      state.lastIntValue = 0x0B;\n      /* \\v */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x66\n  /* f */\n  ) {\n      state.lastIntValue = 0x0C;\n      /* \\f */\n\n      state.advance();\n      return true;\n    }\n\n  if (ch === 0x72\n  /* r */\n  ) {\n      state.lastIntValue = 0x0D;\n      /* \\r */\n\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n\n\npp$8.regexp_eatControlLetter = function (state) {\n  var ch = state.current();\n\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true;\n  }\n\n  return false;\n};\n\nfunction isControlLetter(ch) {\n  return ch >= 0x41\n  /* A */\n  && ch <= 0x5A\n  /* Z */\n  || ch >= 0x61\n  /* a */\n  && ch <= 0x7A\n  /* z */\n  ;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n\n\npp$8.regexp_eatRegExpUnicodeEscapeSequence = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x75\n  /* u */\n  )) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n\n        if (state.eat(0x5C\n        /* \\ */\n        ) && state.eat(0x75\n        /* u */\n        ) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true;\n          }\n        }\n\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n\n      return true;\n    }\n\n    if (state.switchU && state.eat(0x7B\n    /* { */\n    ) && this.regexp_eatHexDigits(state) && state.eat(0x7D\n    /* } */\n    ) && isValidUnicode(state.lastIntValue)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      state.raise("Invalid unicode escape");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n};\n\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF;\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n\n\npp$8.regexp_eatIdentityEscape = function (state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true;\n    }\n\n    if (state.eat(0x2F\n    /* / */\n    )) {\n      state.lastIntValue = 0x2F;\n      /* / */\n\n      return true;\n    }\n\n    return false;\n  }\n\n  var ch = state.current();\n\n  if (ch !== 0x63\n  /* c */\n  && (!state.switchN || ch !== 0x6B\n  /* k */\n  )) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n\n\npp$8.regexp_eatDecimalEscape = function (state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n\n  if (ch >= 0x31\n  /* 1 */\n  && ch <= 0x39\n  /* 9 */\n  ) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n        /* 0 */\n        );\n        state.advance();\n      } while ((ch = state.current()) >= 0x30\n      /* 0 */\n      && ch <= 0x39\n      /* 9 */\n      );\n\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n\n\npp$8.regexp_eatCharacterClassEscape = function (state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true;\n  }\n\n  if (state.switchU && this.options.ecmaVersion >= 9 && (ch === 0x50\n  /* P */\n  || ch === 0x70\n  /* p */\n  )) {\n    state.lastIntValue = -1;\n    state.advance();\n\n    if (state.eat(0x7B\n    /* { */\n    ) && this.regexp_eatUnicodePropertyValueExpression(state) && state.eat(0x7D\n    /* } */\n    )) {\n      return true;\n    }\n\n    state.raise("Invalid property name");\n  }\n\n  return false;\n};\n\nfunction isCharacterClassEscape(ch) {\n  return ch === 0x64\n  /* d */\n  || ch === 0x44\n  /* D */\n  || ch === 0x73\n  /* s */\n  || ch === 0x53\n  /* S */\n  || ch === 0x77\n  /* w */\n  || ch === 0x57\n  /* W */\n  ;\n} // UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\n\n\npp$8.regexp_eatUnicodePropertyValueExpression = function (state) {\n  var start = state.pos; // UnicodePropertyName `=` UnicodePropertyValue\n\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D\n  /* = */\n  )) {\n    var name = state.lastStringValue;\n\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true;\n    }\n  }\n\n  state.pos = start; // LoneUnicodePropertyNameOrValue\n\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true;\n  }\n\n  return false;\n};\n\npp$8.regexp_validateUnicodePropertyNameAndValue = function (state, name, value) {\n  if (!has(state.unicodeProperties.nonBinary, name)) {\n    state.raise("Invalid property name");\n  }\n\n  if (!state.unicodeProperties.nonBinary[name].test(value)) {\n    state.raise("Invalid property value");\n  }\n};\n\npp$8.regexp_validateUnicodePropertyNameOrValue = function (state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue)) {\n    state.raise("Invalid property name");\n  }\n}; // UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\n\n\npp$8.regexp_eatUnicodePropertyName = function (state) {\n  var ch = 0;\n  state.lastStringValue = "";\n\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n\n  return state.lastStringValue !== "";\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F;\n  /* _ */\n} // UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\n\n\npp$8.regexp_eatUnicodePropertyValue = function (state) {\n  var ch = 0;\n  state.lastStringValue = "";\n\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n\n  return state.lastStringValue !== "";\n};\n\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch);\n} // LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\n\n\npp$8.regexp_eatLoneUnicodePropertyNameOrValue = function (state) {\n  return this.regexp_eatUnicodePropertyValue(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n\n\npp$8.regexp_eatCharacterClass = function (state) {\n  if (state.eat(0x5B\n  /* [ */\n  )) {\n    state.eat(0x5E\n    /* ^ */\n    );\n    this.regexp_classRanges(state);\n\n    if (state.eat(0x5D\n    /* [ */\n    )) {\n      return true;\n    } // Unreachable since it threw "unterminated regular expression" error before.\n\n\n    state.raise("Unterminated character class");\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n\n\npp$8.regexp_classRanges = function (state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n\n    if (state.eat(0x2D\n    /* - */\n    ) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise("Invalid character class");\n      }\n\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise("Range out of order in character class");\n      }\n    }\n  }\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n\n\npp$8.regexp_eatClassAtom = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C\n  /* \\ */\n  )) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n\n      if (ch$1 === 0x63\n      /* c */\n      || isOctalDigit(ch$1)) {\n        state.raise("Invalid class escape");\n      }\n\n      state.raise("Invalid escape");\n    }\n\n    state.pos = start;\n  }\n\n  var ch = state.current();\n\n  if (ch !== 0x5D\n  /* [ */\n  ) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n\n\npp$8.regexp_eatClassEscape = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x62\n  /* b */\n  )) {\n    state.lastIntValue = 0x08;\n    /* <BS> */\n\n    return true;\n  }\n\n  if (state.switchU && state.eat(0x2D\n  /* - */\n  )) {\n    state.lastIntValue = 0x2D;\n    /* - */\n\n    return true;\n  }\n\n  if (!state.switchU && state.eat(0x63\n  /* c */\n  )) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true;\n    }\n\n    state.pos = start;\n  }\n\n  return this.regexp_eatCharacterClassEscape(state) || this.regexp_eatCharacterEscape(state);\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n\n\npp$8.regexp_eatClassControlLetter = function (state) {\n  var ch = state.current();\n\n  if (isDecimalDigit(ch) || ch === 0x5F\n  /* _ */\n  ) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true;\n    }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\npp$8.regexp_eatHexEscapeSequence = function (state) {\n  var start = state.pos;\n\n  if (state.eat(0x78\n  /* x */\n  )) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true;\n    }\n\n    if (state.switchU) {\n      state.raise("Invalid escape");\n    }\n\n    state.pos = start;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n\n\npp$8.regexp_eatDecimalDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30\n    /* 0 */\n    );\n    state.advance();\n  }\n\n  return state.pos !== start;\n};\n\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x39;\n  /* 9 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n\n\npp$8.regexp_eatHexDigits = function (state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n\n  return state.pos !== start;\n};\n\nfunction isHexDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x39\n  /* 9 */\n  || ch >= 0x41\n  /* A */\n  && ch <= 0x46\n  /* F */\n  || ch >= 0x61\n  /* a */\n  && ch <= 0x66\n  /* f */\n  ;\n}\n\nfunction hexToInt(ch) {\n  if (ch >= 0x41\n  /* A */\n  && ch <= 0x46\n  /* F */\n  ) {\n      return 10 + (ch - 0x41\n      /* A */\n      );\n    }\n\n  if (ch >= 0x61\n  /* a */\n  && ch <= 0x66\n  /* f */\n  ) {\n      return 10 + (ch - 0x61\n      /* a */\n      );\n    }\n\n  return ch - 0x30;\n  /* 0 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\n\n\npp$8.regexp_eatLegacyOctalEscapeSequence = function (state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n\n    return true;\n  }\n\n  return false;\n}; // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n\n\npp$8.regexp_eatOctalDigit = function (state) {\n  var ch = state.current();\n\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30;\n    /* 0 */\n\n    state.advance();\n    return true;\n  }\n\n  state.lastIntValue = 0;\n  return false;\n};\n\nfunction isOctalDigit(ch) {\n  return ch >= 0x30\n  /* 0 */\n  && ch <= 0x37;\n  /* 7 */\n} // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n\n\npp$8.regexp_eatFixedHexDigits = function (state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false;\n    }\n\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n\n  return true;\n}; // Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n\n  if (p.options.locations) {\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc);\n  }\n\n  if (p.options.ranges) {\n    this.range = [p.start, p.end];\n  }\n}; // ## Tokenizer\n\n\nexports.Token = Token;\nvar pp$9 = Parser.prototype; // Move to the next token\n\npp$9.next = function () {\n  if (this.options.onToken) {\n    this.options.onToken(new Token(this));\n  }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$9.getToken = function () {\n  this.next();\n  return new Token(this);\n}; // If we\'re in an ES6 environment, make parsers iterable\n\n\nif (typeof Symbol !== "undefined") {\n  pp$9[Symbol.iterator] = function () {\n    var this$1 = this;\n    return {\n      next: function next() {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        };\n      }\n    };\n  };\n} // Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`"use strict"; 010;` should fail).\n\n\npp$9.curContext = function () {\n  return this.context[this.context.length - 1];\n}; // Read a single token, updating the parser object\'s token-related\n// properties.\n\n\npp$9.nextToken = function () {\n  var curContext = this.curContext();\n\n  if (!curContext || !curContext.preserveSpace) {\n    this.skipSpace();\n  }\n\n  this.start = this.pos;\n\n  if (this.options.locations) {\n    this.startLoc = this.curPosition();\n  }\n\n  if (this.pos >= this.input.length) {\n    return this.finishToken(types.eof);\n  }\n\n  if (curContext.override) {\n    return curContext.override(this);\n  } else {\n    this.readToken(this.fullCharCodeAtPos());\n  }\n};\n\npp$9.readToken = function (code) {\n  // Identifier or keyword. \'\\uXXXX\' sequences are allowed in\n  // identifiers, so \'\\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92\n  /* \'\\\' */\n  ) {\n      return this.readWord();\n    }\n\n  return this.getTokenFromCode(code);\n};\n\npp$9.fullCharCodeAtPos = function () {\n  var code = this.input.charCodeAt(this.pos);\n\n  if (code <= 0xd7ff || code >= 0xe000) {\n    return code;\n  }\n\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00;\n};\n\npp$9.skipBlockComment = function () {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos,\n      end = this.input.indexOf("*/", this.pos += 2);\n\n  if (end === -1) {\n    this.raise(this.pos - 2, "Unterminated comment");\n  }\n\n  this.pos = end + 2;\n\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine;\n      this.lineStart = match.index + match[0].length;\n    }\n  }\n\n  if (this.options.onComment) {\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos, startLoc, this.curPosition());\n  }\n};\n\npp$9.skipLineComment = function (startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n\n  if (this.options.onComment) {\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos, startLoc, this.curPosition());\n  }\n}; // Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\n\npp$9.skipSpace = function () {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n\n    switch (ch) {\n      case 32:\n      case 160:\n        // \' \'\n        ++this.pos;\n        break;\n\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n\n      case 10:\n      case 8232:\n      case 8233:\n        ++this.pos;\n\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n\n        break;\n\n      case 47:\n        // \'/\'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42:\n            // \'*\'\n            this.skipBlockComment();\n            break;\n\n          case 47:\n            this.skipLineComment(2);\n            break;\n\n          default:\n            break loop;\n        }\n\n        break;\n\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop;\n        }\n\n    }\n  }\n}; // Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one\'s `start` will point at the\n// right position.\n\n\npp$9.finishToken = function (type, val) {\n  this.end = this.pos;\n\n  if (this.options.locations) {\n    this.endLoc = this.curPosition();\n  }\n\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n  this.updateContext(prevType);\n}; // ### Token reading\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\n\n\npp$9.readToken_dot = function () {\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next >= 48 && next <= 57) {\n    return this.readNumber(true);\n  }\n\n  var next2 = this.input.charCodeAt(this.pos + 2);\n\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) {\n    // 46 = dot \'.\'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis);\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot);\n  }\n};\n\npp$9.readToken_slash = function () {\n  // \'/\'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (this.exprAllowed) {\n    ++this.pos;\n    return this.readRegexp();\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.slash, 1);\n};\n\npp$9.readToken_mult_modulo_exp = function (code) {\n  // \'%*\'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo; // exponentiation operator ** and **=\n\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, size + 1);\n  }\n\n  return this.finishOp(tokentype, size);\n};\n\npp$9.readToken_pipe_amp = function (code) {\n  // \'|&\'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === code) {\n    return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n};\n\npp$9.readToken_caret = function () {\n  // \'^\'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.bitwiseXOR, 1);\n};\n\npp$9.readToken_plus_min = function (code) {\n  // \'+-\'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `--\x3e` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken();\n    }\n\n    return this.finishOp(types.incDec, 2);\n  }\n\n  if (next === 61) {\n    return this.finishOp(types.assign, 2);\n  }\n\n  return this.finishOp(types.plusMin, 1);\n};\n\npp$9.readToken_lt_gt = function (code) {\n  // \'<>\'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n\n    if (this.input.charCodeAt(this.pos + size) === 61) {\n      return this.finishOp(types.assign, size + 1);\n    }\n\n    return this.finishOp(types.bitShift, size);\n  }\n\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 && this.input.charCodeAt(this.pos + 3) === 45) {\n    // `\x3c!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken();\n  }\n\n  if (next === 61) {\n    size = 2;\n  }\n\n  return this.finishOp(types.relational, size);\n};\n\npp$9.readToken_eq_excl = function (code) {\n  // \'=!\'\n  var next = this.input.charCodeAt(this.pos + 1);\n\n  if (next === 61) {\n    return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2);\n  }\n\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) {\n    // \'=>\'\n    this.pos += 2;\n    return this.finishToken(types.arrow);\n  }\n\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1);\n};\n\npp$9.getTokenFromCode = function (code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46:\n      // \'.\'\n      return this.readToken_dot();\n    // Punctuation tokens.\n\n    case 40:\n      ++this.pos;\n      return this.finishToken(types.parenL);\n\n    case 41:\n      ++this.pos;\n      return this.finishToken(types.parenR);\n\n    case 59:\n      ++this.pos;\n      return this.finishToken(types.semi);\n\n    case 44:\n      ++this.pos;\n      return this.finishToken(types.comma);\n\n    case 91:\n      ++this.pos;\n      return this.finishToken(types.bracketL);\n\n    case 93:\n      ++this.pos;\n      return this.finishToken(types.bracketR);\n\n    case 123:\n      ++this.pos;\n      return this.finishToken(types.braceL);\n\n    case 125:\n      ++this.pos;\n      return this.finishToken(types.braceR);\n\n    case 58:\n      ++this.pos;\n      return this.finishToken(types.colon);\n\n    case 63:\n      ++this.pos;\n      return this.finishToken(types.question);\n\n    case 96:\n      // \'`\'\n      if (this.options.ecmaVersion < 6) {\n        break;\n      }\n\n      ++this.pos;\n      return this.finishToken(types.backQuote);\n\n    case 48:\n      // \'0\'\n      var next = this.input.charCodeAt(this.pos + 1);\n\n      if (next === 120 || next === 88) {\n        return this.readRadixNumber(16);\n      } // \'0x\', \'0X\' - hex number\n\n\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) {\n          return this.readRadixNumber(8);\n        } // \'0o\', \'0O\' - octal number\n\n\n        if (next === 98 || next === 66) {\n          return this.readRadixNumber(2);\n        } // \'0b\', \'0B\' - binary number\n\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      // 1-9\n      return this.readNumber(false);\n    // Quotes produce strings.\n\n    case 34:\n    case 39:\n      // \'"\', "\'"\n      return this.readString(code);\n    // Operators are parsed inline in tiny state machines. \'=\' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47:\n      // \'/\'\n      return this.readToken_slash();\n\n    case 37:\n    case 42:\n      // \'%*\'\n      return this.readToken_mult_modulo_exp(code);\n\n    case 124:\n    case 38:\n      // \'|&\'\n      return this.readToken_pipe_amp(code);\n\n    case 94:\n      // \'^\'\n      return this.readToken_caret();\n\n    case 43:\n    case 45:\n      // \'+-\'\n      return this.readToken_plus_min(code);\n\n    case 60:\n    case 62:\n      // \'<>\'\n      return this.readToken_lt_gt(code);\n\n    case 61:\n    case 33:\n      // \'=!\'\n      return this.readToken_eq_excl(code);\n\n    case 126:\n      // \'~\'\n      return this.finishOp(types.prefix, 1);\n  }\n\n  this.raise(this.pos, "Unexpected character \'" + codePointToString$1(code) + "\'");\n};\n\npp$9.finishOp = function (type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str);\n};\n\npp$9.readRegexp = function () {\n  var escaped,\n      inClass,\n      start = this.pos;\n\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(start, "Unterminated regular expression");\n    }\n\n    var ch = this.input.charAt(this.pos);\n\n    if (lineBreak.test(ch)) {\n      this.raise(start, "Unterminated regular expression");\n    }\n\n    if (!escaped) {\n      if (ch === "[") {\n        inClass = true;\n      } else if (ch === "]" && inClass) {\n        inClass = false;\n      } else if (ch === "/" && !inClass) {\n        break;\n      }\n\n      escaped = ch === "\\\\";\n    } else {\n      escaped = false;\n    }\n\n    ++this.pos;\n  }\n\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n\n  if (this.containsEsc) {\n    this.unexpected(flagsStart);\n  } // Validate pattern\n\n\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state); // Create Literal#value property value.\n\n  var value = null;\n\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {// ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {\n    pattern: pattern,\n    flags: flags,\n    value: value\n  });\n}; // Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\n\npp$9.readInt = function (radix, len) {\n  var start = this.pos,\n      total = 0;\n\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this.input.charCodeAt(this.pos),\n        val = void 0;\n\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } // a\n    else if (code >= 65) {\n        val = code - 65 + 10;\n      } // A\n      else if (code >= 48 && code <= 57) {\n          val = code - 48;\n        } // 0-9\n        else {\n            val = Infinity;\n          }\n\n    if (val >= radix) {\n      break;\n    }\n\n    ++this.pos;\n    total = total * radix + val;\n  }\n\n  if (this.pos === start || len != null && this.pos - start !== len) {\n    return null;\n  }\n\n  return total;\n};\n\npp$9.readRadixNumber = function (radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n\n  var val = this.readInt(radix);\n\n  if (val == null) {\n    this.raise(this.start + 2, "Expected number in radix " + radix);\n  }\n\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = typeof BigInt !== "undefined" ? BigInt(this.input.slice(start, this.pos)) : null;\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, "Identifier directly after number");\n  }\n\n  return this.finishToken(types.num, val);\n}; // Read an integer, octal integer, or floating-point number.\n\n\npp$9.readNumber = function (startsWithDot) {\n  var start = this.pos;\n\n  if (!startsWithDot && this.readInt(10) === null) {\n    this.raise(start, "Invalid number");\n  }\n\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n  if (octal && this.strict) {\n    this.raise(start, "Invalid number");\n  }\n\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) {\n    octal = false;\n  }\n\n  var next = this.input.charCodeAt(this.pos);\n\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var str$1 = this.input.slice(start, this.pos);\n    var val$1 = typeof BigInt !== "undefined" ? BigInt(str$1) : null;\n    ++this.pos;\n\n    if (isIdentifierStart(this.fullCharCodeAtPos())) {\n      this.raise(this.pos, "Identifier directly after number");\n    }\n\n    return this.finishToken(types.num, val$1);\n  }\n\n  if (next === 46 && !octal) {\n    // \'.\'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n\n  if ((next === 69 || next === 101) && !octal) {\n    // \'eE\'\n    next = this.input.charCodeAt(++this.pos);\n\n    if (next === 43 || next === 45) {\n      ++this.pos;\n    } // \'+-\'\n\n\n    if (this.readInt(10) === null) {\n      this.raise(start, "Invalid number");\n    }\n  }\n\n  if (isIdentifierStart(this.fullCharCodeAtPos())) {\n    this.raise(this.pos, "Identifier directly after number");\n  }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val);\n}; // Read a string value, interpreting backslash-escapes.\n\n\npp$9.readCodePoint = function () {\n  var ch = this.input.charCodeAt(this.pos),\n      code;\n\n  if (ch === 123) {\n    // \'{\'\n    if (this.options.ecmaVersion < 6) {\n      this.unexpected();\n    }\n\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos);\n    ++this.pos;\n\n    if (code > 0x10FFFF) {\n      this.invalidStringToken(codePos, "Code point out of bounds");\n    }\n  } else {\n    code = this.readHexChar(4);\n  }\n\n  return code;\n};\n\nfunction codePointToString$1(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00);\n}\n\npp$9.readString = function (quote) {\n  var out = "",\n      chunkStart = ++this.pos;\n\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(this.start, "Unterminated string constant");\n    }\n\n    var ch = this.input.charCodeAt(this.pos);\n\n    if (ch === quote) {\n      break;\n    }\n\n    if (ch === 92) {\n      // \'\\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else {\n      if (isNewLine(ch, this.options.ecmaVersion >= 10)) {\n        this.raise(this.start, "Unterminated string constant");\n      }\n\n      ++this.pos;\n    }\n  }\n\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out);\n}; // Reads template string tokens.\n\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$9.tryReadTemplateToken = function () {\n  this.inTemplateElement = true;\n\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err;\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$9.invalidStringToken = function (position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR;\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$9.readTmplToken = function () {\n  var out = "",\n      chunkStart = this.pos;\n\n  for (;;) {\n    if (this.pos >= this.input.length) {\n      this.raise(this.start, "Unterminated template");\n    }\n\n    var ch = this.input.charCodeAt(this.pos);\n\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) {\n      // \'`\', \'${\'\n      if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types.dollarBraceL);\n        } else {\n          ++this.pos;\n          return this.finishToken(types.backQuote);\n        }\n      }\n\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types.template, out);\n    }\n\n    if (ch === 92) {\n      // \'\\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) {\n            ++this.pos;\n          }\n\n        case 10:\n          out += "\\n";\n          break;\n\n        default:\n          out += String.fromCharCode(ch);\n          break;\n      }\n\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n}; // Reads a template token to search for the end, without validating any escape sequences\n\n\npp$9.readInvalidTemplateToken = function () {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n      case "\\\\":\n        ++this.pos;\n        break;\n\n      case "$":\n        if (this.input[this.pos + 1] !== "{") {\n          break;\n        }\n\n      // falls through\n\n      case "`":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos));\n      // no default\n    }\n  }\n\n  this.raise(this.start, "Unterminated template");\n}; // Used to read escaped characters\n\n\npp$9.readEscapedChar = function (inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n\n  switch (ch) {\n    case 110:\n      return "\\n";\n    // \'n\' -> \'\\n\'\n\n    case 114:\n      return "\\r";\n    // \'r\' -> \'\\r\'\n\n    case 120:\n      return String.fromCharCode(this.readHexChar(2));\n    // \'x\'\n\n    case 117:\n      return codePointToString$1(this.readCodePoint());\n    // \'u\'\n\n    case 116:\n      return "\\t";\n    // \'t\' -> \'\\t\'\n\n    case 98:\n      return "\\b";\n    // \'b\' -> \'\\b\'\n\n    case 118:\n      return "\\x0B";\n    // \'v\' -> \'\\u000b\'\n\n    case 102:\n      return "\\f";\n    // \'f\' -> \'\\f\'\n\n    case 13:\n      if (this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n      }\n\n    // \'\\r\\n\'\n\n    case 10:\n      // \' \\n\'\n      if (this.options.locations) {\n        this.lineStart = this.pos;\n        ++this.curLine;\n      }\n\n      return "";\n\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n\n        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(this.pos - 1 - octalStr.length, inTemplate ? "Octal literal in template string" : "Octal literal in strict mode");\n        }\n\n        return String.fromCharCode(octal);\n      }\n\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return "";\n      }\n\n      return String.fromCharCode(ch);\n  }\n}; // Used to read character escape sequences (\'\\x\', \'\\u\', \'\\U\').\n\n\npp$9.readHexChar = function (len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n\n  if (n === null) {\n    this.invalidStringToken(codePos, "Bad character escape sequence");\n  }\n\n  return n;\n}; // Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a \'\\u\' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\n\npp$9.readWord1 = function () {\n  this.containsEsc = false;\n  var word = "",\n      first = true,\n      chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) {\n      // "\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n\n      if (this.input.charCodeAt(++this.pos) !== 117) // "u"\n        {\n          this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\\\uXXXX");\n        }\n\n      ++this.pos;\n      var esc = this.readCodePoint();\n\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral)) {\n        this.invalidStringToken(escStart, "Invalid Unicode escape");\n      }\n\n      word += codePointToString$1(esc);\n      chunkStart = this.pos;\n    } else {\n      break;\n    }\n\n    first = false;\n  }\n\n  return word + this.input.slice(chunkStart, this.pos);\n}; // Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\n\npp$9.readWord = function () {\n  var word = this.readWord1();\n  var type = types.name;\n\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) {\n      this.raiseRecoverable(this.start, "Escape sequence in keyword " + word);\n    }\n\n    type = keywords$1[word];\n  }\n\n  return this.finishToken(type, word);\n}; // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n\nvar version = "7.0.0"; // The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nexports.version = version;\n\nfunction parse(input, options) {\n  return Parser.parse(input, options);\n} // This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options);\n} // Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options);\n}\n\n//# sourceURL=webpack:///./node_modules/halting-problem/node_modules/acorn/dist/acorn.mjs?')},"./node_modules/has-ansi/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar ansiRegex = __webpack_require__("./node_modules/ansi-regex/index.js");\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n\n\n//# sourceURL=webpack:///./node_modules/has-ansi/index.js?')},"./node_modules/ieee754/index.js":function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?")},"./node_modules/invariant/browser.js":function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {}\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n\n\n//# sourceURL=webpack:///./node_modules/invariant/browser.js?")},"./node_modules/is-finite/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar numberIsNan = __webpack_require__(\"./node_modules/number-is-nan/index.js\");\n\nmodule.exports = Number.isFinite || function (val) {\n\treturn !(typeof val !== 'number' || numberIsNan(val) || val === Infinity || val === -Infinity);\n};\n\n\n//# sourceURL=webpack:///./node_modules/is-finite/index.js?")},"./node_modules/isarray/index.js":function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?")},"./node_modules/js-tokens/index.js":function(module,exports){eval('// Copyright 2014, 2015, 2016, 2017 Simon Lydell\n// License: MIT. (See LICENSE.)\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n})\n\n// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default = /(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyu]{1,5}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g\n\nexports.matchToToken = function(match) {\n  var token = {type: "invalid", value: match[0]}\n       if (match[ 1]) token.type = "string" , token.closed = !!(match[3] || match[4])\n  else if (match[ 5]) token.type = "comment"\n  else if (match[ 6]) token.type = "comment", token.closed = !!match[7]\n  else if (match[ 8]) token.type = "regex"\n  else if (match[ 9]) token.type = "number"\n  else if (match[10]) token.type = "name"\n  else if (match[11]) token.type = "punctuator"\n  else if (match[12]) token.type = "whitespace"\n  return token\n}\n\n\n//# sourceURL=webpack:///./node_modules/js-tokens/index.js?')},"./node_modules/lodash/_DataView.js":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("./node_modules/lodash/_getNative.js"),\n    root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, \'DataView\');\n\nmodule.exports = DataView;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_DataView.js?')},"./node_modules/lodash/_Hash.js":function(module,exports,__webpack_require__){eval('var hashClear = __webpack_require__("./node_modules/lodash/_hashClear.js"),\n    hashDelete = __webpack_require__("./node_modules/lodash/_hashDelete.js"),\n    hashGet = __webpack_require__("./node_modules/lodash/_hashGet.js"),\n    hashHas = __webpack_require__("./node_modules/lodash/_hashHas.js"),\n    hashSet = __webpack_require__("./node_modules/lodash/_hashSet.js");\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype[\'delete\'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Hash.js?')},"./node_modules/lodash/_ListCache.js":function(module,exports,__webpack_require__){eval('var listCacheClear = __webpack_require__("./node_modules/lodash/_listCacheClear.js"),\n    listCacheDelete = __webpack_require__("./node_modules/lodash/_listCacheDelete.js"),\n    listCacheGet = __webpack_require__("./node_modules/lodash/_listCacheGet.js"),\n    listCacheHas = __webpack_require__("./node_modules/lodash/_listCacheHas.js"),\n    listCacheSet = __webpack_require__("./node_modules/lodash/_listCacheSet.js");\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype[\'delete\'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_ListCache.js?')},"./node_modules/lodash/_Map.js":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("./node_modules/lodash/_getNative.js"),\n    root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, \'Map\');\n\nmodule.exports = Map;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Map.js?')},"./node_modules/lodash/_MapCache.js":function(module,exports,__webpack_require__){eval('var mapCacheClear = __webpack_require__("./node_modules/lodash/_mapCacheClear.js"),\n    mapCacheDelete = __webpack_require__("./node_modules/lodash/_mapCacheDelete.js"),\n    mapCacheGet = __webpack_require__("./node_modules/lodash/_mapCacheGet.js"),\n    mapCacheHas = __webpack_require__("./node_modules/lodash/_mapCacheHas.js"),\n    mapCacheSet = __webpack_require__("./node_modules/lodash/_mapCacheSet.js");\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype[\'delete\'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_MapCache.js?')},"./node_modules/lodash/_Promise.js":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("./node_modules/lodash/_getNative.js"),\n    root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, \'Promise\');\n\nmodule.exports = Promise;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Promise.js?')},"./node_modules/lodash/_Set.js":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("./node_modules/lodash/_getNative.js"),\n    root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, \'Set\');\n\nmodule.exports = Set;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Set.js?')},"./node_modules/lodash/_SetCache.js":function(module,exports,__webpack_require__){eval('var MapCache = __webpack_require__("./node_modules/lodash/_MapCache.js"),\n    setCacheAdd = __webpack_require__("./node_modules/lodash/_setCacheAdd.js"),\n    setCacheHas = __webpack_require__("./node_modules/lodash/_setCacheHas.js");\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_SetCache.js?')},"./node_modules/lodash/_Stack.js":function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"),\n    stackClear = __webpack_require__("./node_modules/lodash/_stackClear.js"),\n    stackDelete = __webpack_require__("./node_modules/lodash/_stackDelete.js"),\n    stackGet = __webpack_require__("./node_modules/lodash/_stackGet.js"),\n    stackHas = __webpack_require__("./node_modules/lodash/_stackHas.js"),\n    stackSet = __webpack_require__("./node_modules/lodash/_stackSet.js");\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype[\'delete\'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Stack.js?')},"./node_modules/lodash/_Symbol.js":function(module,exports,__webpack_require__){eval('var root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Symbol.js?')},"./node_modules/lodash/_Uint8Array.js":function(module,exports,__webpack_require__){eval('var root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_Uint8Array.js?')},"./node_modules/lodash/_WeakMap.js":function(module,exports,__webpack_require__){eval('var getNative = __webpack_require__("./node_modules/lodash/_getNative.js"),\n    root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, \'WeakMap\');\n\nmodule.exports = WeakMap;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_WeakMap.js?')},"./node_modules/lodash/_apply.js":function(module,exports){eval("/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_apply.js?")},"./node_modules/lodash/_arrayEach.js":function(module,exports){eval("/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayEach.js?")},"./node_modules/lodash/_arrayFilter.js":function(module,exports){eval("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayFilter.js?")},"./node_modules/lodash/_arrayIncludes.js":function(module,exports,__webpack_require__){eval('var baseIndexOf = __webpack_require__("./node_modules/lodash/_baseIndexOf.js");\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayIncludes.js?')},"./node_modules/lodash/_arrayIncludesWith.js":function(module,exports){eval("/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayIncludesWith.js?")},"./node_modules/lodash/_arrayLikeKeys.js":function(module,exports,__webpack_require__){eval("var baseTimes = __webpack_require__(\"./node_modules/lodash/_baseTimes.js\"),\n    isArguments = __webpack_require__(\"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(\"./node_modules/lodash/isBuffer.js\"),\n    isIndex = __webpack_require__(\"./node_modules/lodash/_isIndex.js\"),\n    isTypedArray = __webpack_require__(\"./node_modules/lodash/isTypedArray.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayLikeKeys.js?")},"./node_modules/lodash/_arrayMap.js":function(module,exports){eval("/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayMap.js?")},"./node_modules/lodash/_arrayPush.js":function(module,exports){eval("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arrayPush.js?")},"./node_modules/lodash/_arraySome.js":function(module,exports){eval("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_arraySome.js?")},"./node_modules/lodash/_assignMergeValue.js":function(module,exports,__webpack_require__){eval('var baseAssignValue = __webpack_require__("./node_modules/lodash/_baseAssignValue.js"),\n    eq = __webpack_require__("./node_modules/lodash/eq.js");\n\n/**\n * This function is like `assignValue` except that it doesn\'t assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_assignMergeValue.js?')},"./node_modules/lodash/_assignValue.js":function(module,exports,__webpack_require__){eval('var baseAssignValue = __webpack_require__("./node_modules/lodash/_baseAssignValue.js"),\n    eq = __webpack_require__("./node_modules/lodash/eq.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_assignValue.js?')},"./node_modules/lodash/_assocIndexOf.js":function(module,exports,__webpack_require__){eval('var eq = __webpack_require__("./node_modules/lodash/eq.js");\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_assocIndexOf.js?')},"./node_modules/lodash/_baseAssign.js":function(module,exports,__webpack_require__){eval('var copyObject = __webpack_require__("./node_modules/lodash/_copyObject.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseAssign.js?')},"./node_modules/lodash/_baseAssignIn.js":function(module,exports,__webpack_require__){eval('var copyObject = __webpack_require__("./node_modules/lodash/_copyObject.js"),\n    keysIn = __webpack_require__("./node_modules/lodash/keysIn.js");\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseAssignIn.js?')},"./node_modules/lodash/_baseAssignValue.js":function(module,exports,__webpack_require__){eval("var defineProperty = __webpack_require__(\"./node_modules/lodash/_defineProperty.js\");\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseAssignValue.js?")},"./node_modules/lodash/_baseClamp.js":function(module,exports){eval("/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseClamp.js?")},"./node_modules/lodash/_baseClone.js":function(module,exports,__webpack_require__){eval("var Stack = __webpack_require__(\"./node_modules/lodash/_Stack.js\"),\n    arrayEach = __webpack_require__(\"./node_modules/lodash/_arrayEach.js\"),\n    assignValue = __webpack_require__(\"./node_modules/lodash/_assignValue.js\"),\n    baseAssign = __webpack_require__(\"./node_modules/lodash/_baseAssign.js\"),\n    baseAssignIn = __webpack_require__(\"./node_modules/lodash/_baseAssignIn.js\"),\n    cloneBuffer = __webpack_require__(\"./node_modules/lodash/_cloneBuffer.js\"),\n    copyArray = __webpack_require__(\"./node_modules/lodash/_copyArray.js\"),\n    copySymbols = __webpack_require__(\"./node_modules/lodash/_copySymbols.js\"),\n    copySymbolsIn = __webpack_require__(\"./node_modules/lodash/_copySymbolsIn.js\"),\n    getAllKeys = __webpack_require__(\"./node_modules/lodash/_getAllKeys.js\"),\n    getAllKeysIn = __webpack_require__(\"./node_modules/lodash/_getAllKeysIn.js\"),\n    getTag = __webpack_require__(\"./node_modules/lodash/_getTag.js\"),\n    initCloneArray = __webpack_require__(\"./node_modules/lodash/_initCloneArray.js\"),\n    initCloneByTag = __webpack_require__(\"./node_modules/lodash/_initCloneByTag.js\"),\n    initCloneObject = __webpack_require__(\"./node_modules/lodash/_initCloneObject.js\"),\n    isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(\"./node_modules/lodash/isBuffer.js\"),\n    isMap = __webpack_require__(\"./node_modules/lodash/isMap.js\"),\n    isObject = __webpack_require__(\"./node_modules/lodash/isObject.js\"),\n    isSet = __webpack_require__(\"./node_modules/lodash/isSet.js\"),\n    keys = __webpack_require__(\"./node_modules/lodash/keys.js\");\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseClone.js?")},"./node_modules/lodash/_baseCreate.js":function(module,exports,__webpack_require__){eval('var isObject = __webpack_require__("./node_modules/lodash/isObject.js");\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseCreate.js?')},"./node_modules/lodash/_baseEach.js":function(module,exports,__webpack_require__){eval('var baseForOwn = __webpack_require__("./node_modules/lodash/_baseForOwn.js"),\n    createBaseEach = __webpack_require__("./node_modules/lodash/_createBaseEach.js");\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseEach.js?')},"./node_modules/lodash/_baseFindIndex.js":function(module,exports){eval("/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseFindIndex.js?")},"./node_modules/lodash/_baseFlatten.js":function(module,exports,__webpack_require__){eval('var arrayPush = __webpack_require__("./node_modules/lodash/_arrayPush.js"),\n    isFlattenable = __webpack_require__("./node_modules/lodash/_isFlattenable.js");\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseFlatten.js?')},"./node_modules/lodash/_baseFor.js":function(module,exports,__webpack_require__){eval('var createBaseFor = __webpack_require__("./node_modules/lodash/_createBaseFor.js");\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseFor.js?')},"./node_modules/lodash/_baseForOwn.js":function(module,exports,__webpack_require__){eval('var baseFor = __webpack_require__("./node_modules/lodash/_baseFor.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseForOwn.js?')},"./node_modules/lodash/_baseGet.js":function(module,exports,__webpack_require__){eval('var castPath = __webpack_require__("./node_modules/lodash/_castPath.js"),\n    toKey = __webpack_require__("./node_modules/lodash/_toKey.js");\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseGet.js?')},"./node_modules/lodash/_baseGetAllKeys.js":function(module,exports,__webpack_require__){eval('var arrayPush = __webpack_require__("./node_modules/lodash/_arrayPush.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js");\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseGetAllKeys.js?')},"./node_modules/lodash/_baseGetTag.js":function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("./node_modules/lodash/_Symbol.js"),\n    getRawTag = __webpack_require__("./node_modules/lodash/_getRawTag.js"),\n    objectToString = __webpack_require__("./node_modules/lodash/_objectToString.js");\n\n/** `Object#toString` result references. */\nvar nullTag = \'[object Null]\',\n    undefinedTag = \'[object Undefined]\';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseGetTag.js?')},"./node_modules/lodash/_baseHas.js":function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseHas.js?")},"./node_modules/lodash/_baseHasIn.js":function(module,exports){eval("/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseHasIn.js?")},"./node_modules/lodash/_baseIndexOf.js":function(module,exports,__webpack_require__){eval('var baseFindIndex = __webpack_require__("./node_modules/lodash/_baseFindIndex.js"),\n    baseIsNaN = __webpack_require__("./node_modules/lodash/_baseIsNaN.js"),\n    strictIndexOf = __webpack_require__("./node_modules/lodash/_strictIndexOf.js");\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIndexOf.js?')},"./node_modules/lodash/_baseIndexOfWith.js":function(module,exports){eval("/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIndexOfWith.js?")},"./node_modules/lodash/_baseIsArguments.js":function(module,exports,__webpack_require__){eval('var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/** `Object#toString` result references. */\nvar argsTag = \'[object Arguments]\';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsArguments.js?')},"./node_modules/lodash/_baseIsEqual.js":function(module,exports,__webpack_require__){eval('var baseIsEqualDeep = __webpack_require__("./node_modules/lodash/_baseIsEqualDeep.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsEqual.js?')},"./node_modules/lodash/_baseIsEqualDeep.js":function(module,exports,__webpack_require__){eval('var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"),\n    equalArrays = __webpack_require__("./node_modules/lodash/_equalArrays.js"),\n    equalByTag = __webpack_require__("./node_modules/lodash/_equalByTag.js"),\n    equalObjects = __webpack_require__("./node_modules/lodash/_equalObjects.js"),\n    getTag = __webpack_require__("./node_modules/lodash/_getTag.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js"),\n    isBuffer = __webpack_require__("./node_modules/lodash/isBuffer.js"),\n    isTypedArray = __webpack_require__("./node_modules/lodash/isTypedArray.js");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = \'[object Arguments]\',\n    arrayTag = \'[object Array]\',\n    objectTag = \'[object Object]\';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, \'__wrapped__\'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, \'__wrapped__\');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsEqualDeep.js?')},"./node_modules/lodash/_baseIsMap.js":function(module,exports,__webpack_require__){eval('var getTag = __webpack_require__("./node_modules/lodash/_getTag.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/** `Object#toString` result references. */\nvar mapTag = \'[object Map]\';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsMap.js?')},"./node_modules/lodash/_baseIsMatch.js":function(module,exports,__webpack_require__){eval('var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"),\n    baseIsEqual = __webpack_require__("./node_modules/lodash/_baseIsEqual.js");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsMatch.js?')},"./node_modules/lodash/_baseIsNaN.js":function(module,exports){eval("/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsNaN.js?")},"./node_modules/lodash/_baseIsNative.js":function(module,exports,__webpack_require__){eval("var isFunction = __webpack_require__(\"./node_modules/lodash/isFunction.js\"),\n    isMasked = __webpack_require__(\"./node_modules/lodash/_isMasked.js\"),\n    isObject = __webpack_require__(\"./node_modules/lodash/isObject.js\"),\n    toSource = __webpack_require__(\"./node_modules/lodash/_toSource.js\");\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsNative.js?")},"./node_modules/lodash/_baseIsRegExp.js":function(module,exports,__webpack_require__){eval('var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/** `Object#toString` result references. */\nvar regexpTag = \'[object RegExp]\';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsRegExp.js?')},"./node_modules/lodash/_baseIsSet.js":function(module,exports,__webpack_require__){eval('var getTag = __webpack_require__("./node_modules/lodash/_getTag.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/** `Object#toString` result references. */\nvar setTag = \'[object Set]\';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsSet.js?')},"./node_modules/lodash/_baseIsTypedArray.js":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    isLength = __webpack_require__(\"./node_modules/lodash/isLength.js\"),\n    isObjectLike = __webpack_require__(\"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIsTypedArray.js?")},"./node_modules/lodash/_baseIteratee.js":function(module,exports,__webpack_require__){eval('var baseMatches = __webpack_require__("./node_modules/lodash/_baseMatches.js"),\n    baseMatchesProperty = __webpack_require__("./node_modules/lodash/_baseMatchesProperty.js"),\n    identity = __webpack_require__("./node_modules/lodash/identity.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js"),\n    property = __webpack_require__("./node_modules/lodash/property.js");\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don\'t store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == \'function\') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == \'object\') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseIteratee.js?')},"./node_modules/lodash/_baseKeys.js":function(module,exports,__webpack_require__){eval('var isPrototype = __webpack_require__("./node_modules/lodash/_isPrototype.js"),\n    nativeKeys = __webpack_require__("./node_modules/lodash/_nativeKeys.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn\'t treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != \'constructor\') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseKeys.js?')},"./node_modules/lodash/_baseKeysIn.js":function(module,exports,__webpack_require__){eval('var isObject = __webpack_require__("./node_modules/lodash/isObject.js"),\n    isPrototype = __webpack_require__("./node_modules/lodash/_isPrototype.js"),\n    nativeKeysIn = __webpack_require__("./node_modules/lodash/_nativeKeysIn.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn\'t treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == \'constructor\' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseKeysIn.js?')},"./node_modules/lodash/_baseMap.js":function(module,exports,__webpack_require__){eval('var baseEach = __webpack_require__("./node_modules/lodash/_baseEach.js"),\n    isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js");\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseMap.js?')},"./node_modules/lodash/_baseMatches.js":function(module,exports,__webpack_require__){eval('var baseIsMatch = __webpack_require__("./node_modules/lodash/_baseIsMatch.js"),\n    getMatchData = __webpack_require__("./node_modules/lodash/_getMatchData.js"),\n    matchesStrictComparable = __webpack_require__("./node_modules/lodash/_matchesStrictComparable.js");\n\n/**\n * The base implementation of `_.matches` which doesn\'t clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseMatches.js?')},"./node_modules/lodash/_baseMatchesProperty.js":function(module,exports,__webpack_require__){eval('var baseIsEqual = __webpack_require__("./node_modules/lodash/_baseIsEqual.js"),\n    get = __webpack_require__("./node_modules/lodash/get.js"),\n    hasIn = __webpack_require__("./node_modules/lodash/hasIn.js"),\n    isKey = __webpack_require__("./node_modules/lodash/_isKey.js"),\n    isStrictComparable = __webpack_require__("./node_modules/lodash/_isStrictComparable.js"),\n    matchesStrictComparable = __webpack_require__("./node_modules/lodash/_matchesStrictComparable.js"),\n    toKey = __webpack_require__("./node_modules/lodash/_toKey.js");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn\'t clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseMatchesProperty.js?')},"./node_modules/lodash/_baseMerge.js":function(module,exports,__webpack_require__){eval('var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"),\n    assignMergeValue = __webpack_require__("./node_modules/lodash/_assignMergeValue.js"),\n    baseFor = __webpack_require__("./node_modules/lodash/_baseFor.js"),\n    baseMergeDeep = __webpack_require__("./node_modules/lodash/_baseMergeDeep.js"),\n    isObject = __webpack_require__("./node_modules/lodash/isObject.js"),\n    keysIn = __webpack_require__("./node_modules/lodash/keysIn.js"),\n    safeGet = __webpack_require__("./node_modules/lodash/_safeGet.js");\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + \'\'), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseMerge.js?')},"./node_modules/lodash/_baseMergeDeep.js":function(module,exports,__webpack_require__){eval('var assignMergeValue = __webpack_require__("./node_modules/lodash/_assignMergeValue.js"),\n    cloneBuffer = __webpack_require__("./node_modules/lodash/_cloneBuffer.js"),\n    cloneTypedArray = __webpack_require__("./node_modules/lodash/_cloneTypedArray.js"),\n    copyArray = __webpack_require__("./node_modules/lodash/_copyArray.js"),\n    initCloneObject = __webpack_require__("./node_modules/lodash/_initCloneObject.js"),\n    isArguments = __webpack_require__("./node_modules/lodash/isArguments.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js"),\n    isArrayLikeObject = __webpack_require__("./node_modules/lodash/isArrayLikeObject.js"),\n    isBuffer = __webpack_require__("./node_modules/lodash/isBuffer.js"),\n    isFunction = __webpack_require__("./node_modules/lodash/isFunction.js"),\n    isObject = __webpack_require__("./node_modules/lodash/isObject.js"),\n    isPlainObject = __webpack_require__("./node_modules/lodash/isPlainObject.js"),\n    isTypedArray = __webpack_require__("./node_modules/lodash/isTypedArray.js"),\n    safeGet = __webpack_require__("./node_modules/lodash/_safeGet.js"),\n    toPlainObject = __webpack_require__("./node_modules/lodash/toPlainObject.js");\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + \'\'), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack[\'delete\'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseMergeDeep.js?')},"./node_modules/lodash/_baseOrderBy.js":function(module,exports,__webpack_require__){eval('var arrayMap = __webpack_require__("./node_modules/lodash/_arrayMap.js"),\n    baseIteratee = __webpack_require__("./node_modules/lodash/_baseIteratee.js"),\n    baseMap = __webpack_require__("./node_modules/lodash/_baseMap.js"),\n    baseSortBy = __webpack_require__("./node_modules/lodash/_baseSortBy.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    compareMultiple = __webpack_require__("./node_modules/lodash/_compareMultiple.js"),\n    identity = __webpack_require__("./node_modules/lodash/identity.js");\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { \'criteria\': criteria, \'index\': ++index, \'value\': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseOrderBy.js?')},"./node_modules/lodash/_baseProperty.js":function(module,exports){eval("/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseProperty.js?")},"./node_modules/lodash/_basePropertyDeep.js":function(module,exports,__webpack_require__){eval('var baseGet = __webpack_require__("./node_modules/lodash/_baseGet.js");\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_basePropertyDeep.js?')},"./node_modules/lodash/_basePullAll.js":function(module,exports,__webpack_require__){eval('var arrayMap = __webpack_require__("./node_modules/lodash/_arrayMap.js"),\n    baseIndexOf = __webpack_require__("./node_modules/lodash/_baseIndexOf.js"),\n    baseIndexOfWith = __webpack_require__("./node_modules/lodash/_baseIndexOfWith.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    copyArray = __webpack_require__("./node_modules/lodash/_copyArray.js");\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_basePullAll.js?')},"./node_modules/lodash/_baseRepeat.js":function(module,exports){eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseRepeat.js?")},"./node_modules/lodash/_baseRest.js":function(module,exports,__webpack_require__){eval('var identity = __webpack_require__("./node_modules/lodash/identity.js"),\n    overRest = __webpack_require__("./node_modules/lodash/_overRest.js"),\n    setToString = __webpack_require__("./node_modules/lodash/_setToString.js");\n\n/**\n * The base implementation of `_.rest` which doesn\'t validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + \'\');\n}\n\nmodule.exports = baseRest;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseRest.js?')},"./node_modules/lodash/_baseSetToString.js":function(module,exports,__webpack_require__){eval("var constant = __webpack_require__(\"./node_modules/lodash/constant.js\"),\n    defineProperty = __webpack_require__(\"./node_modules/lodash/_defineProperty.js\"),\n    identity = __webpack_require__(\"./node_modules/lodash/identity.js\");\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseSetToString.js?")},"./node_modules/lodash/_baseSortBy.js":function(module,exports){eval("/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseSortBy.js?")},"./node_modules/lodash/_baseTimes.js":function(module,exports){eval("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseTimes.js?")},"./node_modules/lodash/_baseToString.js":function(module,exports,__webpack_require__){eval("var Symbol = __webpack_require__(\"./node_modules/lodash/_Symbol.js\"),\n    arrayMap = __webpack_require__(\"./node_modules/lodash/_arrayMap.js\"),\n    isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(\"./node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseToString.js?")},"./node_modules/lodash/_baseUnary.js":function(module,exports){eval("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseUnary.js?")},"./node_modules/lodash/_baseUniq.js":function(module,exports,__webpack_require__){eval('var SetCache = __webpack_require__("./node_modules/lodash/_SetCache.js"),\n    arrayIncludes = __webpack_require__("./node_modules/lodash/_arrayIncludes.js"),\n    arrayIncludesWith = __webpack_require__("./node_modules/lodash/_arrayIncludesWith.js"),\n    cacheHas = __webpack_require__("./node_modules/lodash/_cacheHas.js"),\n    createSet = __webpack_require__("./node_modules/lodash/_createSet.js"),\n    setToArray = __webpack_require__("./node_modules/lodash/_setToArray.js");\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseUniq.js?')},"./node_modules/lodash/_baseValues.js":function(module,exports,__webpack_require__){eval('var arrayMap = __webpack_require__("./node_modules/lodash/_arrayMap.js");\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseValues.js?')},"./node_modules/lodash/_cacheHas.js":function(module,exports){eval("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cacheHas.js?")},"./node_modules/lodash/_castPath.js":function(module,exports,__webpack_require__){eval('var isArray = __webpack_require__("./node_modules/lodash/isArray.js"),\n    isKey = __webpack_require__("./node_modules/lodash/_isKey.js"),\n    stringToPath = __webpack_require__("./node_modules/lodash/_stringToPath.js"),\n    toString = __webpack_require__("./node_modules/lodash/toString.js");\n\n/**\n * Casts `value` to a path array if it\'s not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_castPath.js?')},"./node_modules/lodash/_cloneArrayBuffer.js":function(module,exports,__webpack_require__){eval('var Uint8Array = __webpack_require__("./node_modules/lodash/_Uint8Array.js");\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneArrayBuffer.js?')},"./node_modules/lodash/_cloneBuffer.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("./node_modules/lodash/_root.js");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == \'object\' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneBuffer.js?')},"./node_modules/lodash/_cloneDataView.js":function(module,exports,__webpack_require__){eval('var cloneArrayBuffer = __webpack_require__("./node_modules/lodash/_cloneArrayBuffer.js");\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneDataView.js?')},"./node_modules/lodash/_cloneRegExp.js":function(module,exports){eval("/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneRegExp.js?")},"./node_modules/lodash/_cloneSymbol.js":function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("./node_modules/lodash/_Symbol.js");\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneSymbol.js?')},"./node_modules/lodash/_cloneTypedArray.js":function(module,exports,__webpack_require__){eval('var cloneArrayBuffer = __webpack_require__("./node_modules/lodash/_cloneArrayBuffer.js");\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_cloneTypedArray.js?')},"./node_modules/lodash/_compareAscending.js":function(module,exports,__webpack_require__){eval('var isSymbol = __webpack_require__("./node_modules/lodash/isSymbol.js");\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_compareAscending.js?')},"./node_modules/lodash/_compareMultiple.js":function(module,exports,__webpack_require__){eval('var compareAscending = __webpack_require__("./node_modules/lodash/_compareAscending.js");\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of "desc" for descending or "asc" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == \'desc\' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_compareMultiple.js?')},"./node_modules/lodash/_copyArray.js":function(module,exports){eval("/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_copyArray.js?")},"./node_modules/lodash/_copyObject.js":function(module,exports,__webpack_require__){eval('var assignValue = __webpack_require__("./node_modules/lodash/_assignValue.js"),\n    baseAssignValue = __webpack_require__("./node_modules/lodash/_baseAssignValue.js");\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_copyObject.js?')},"./node_modules/lodash/_copySymbols.js":function(module,exports,__webpack_require__){eval('var copyObject = __webpack_require__("./node_modules/lodash/_copyObject.js"),\n    getSymbols = __webpack_require__("./node_modules/lodash/_getSymbols.js");\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_copySymbols.js?')},"./node_modules/lodash/_copySymbolsIn.js":function(module,exports,__webpack_require__){eval('var copyObject = __webpack_require__("./node_modules/lodash/_copyObject.js"),\n    getSymbolsIn = __webpack_require__("./node_modules/lodash/_getSymbolsIn.js");\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_copySymbolsIn.js?')},"./node_modules/lodash/_coreJsData.js":function(module,exports,__webpack_require__){eval("var root = __webpack_require__(\"./node_modules/lodash/_root.js\");\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_coreJsData.js?")},"./node_modules/lodash/_createAssigner.js":function(module,exports,__webpack_require__){eval('var baseRest = __webpack_require__("./node_modules/lodash/_baseRest.js"),\n    isIterateeCall = __webpack_require__("./node_modules/lodash/_isIterateeCall.js");\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == \'function\')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_createAssigner.js?')},"./node_modules/lodash/_createBaseEach.js":function(module,exports,__webpack_require__){eval('var isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js");\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_createBaseEach.js?')},"./node_modules/lodash/_createBaseFor.js":function(module,exports){eval("/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_createBaseFor.js?")},"./node_modules/lodash/_createFind.js":function(module,exports,__webpack_require__){eval('var baseIteratee = __webpack_require__("./node_modules/lodash/_baseIteratee.js"),\n    isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_createFind.js?')},"./node_modules/lodash/_createSet.js":function(module,exports,__webpack_require__){eval('var Set = __webpack_require__("./node_modules/lodash/_Set.js"),\n    noop = __webpack_require__("./node_modules/lodash/noop.js"),\n    setToArray = __webpack_require__("./node_modules/lodash/_setToArray.js");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_createSet.js?')},"./node_modules/lodash/_defineProperty.js":function(module,exports,__webpack_require__){eval("var getNative = __webpack_require__(\"./node_modules/lodash/_getNative.js\");\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_defineProperty.js?")},"./node_modules/lodash/_equalArrays.js":function(module,exports,__webpack_require__){eval('var SetCache = __webpack_require__("./node_modules/lodash/_SetCache.js"),\n    arraySome = __webpack_require__("./node_modules/lodash/_arraySome.js"),\n    cacheHas = __webpack_require__("./node_modules/lodash/_cacheHas.js");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack[\'delete\'](array);\n  stack[\'delete\'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_equalArrays.js?')},"./node_modules/lodash/_equalByTag.js":function(module,exports,__webpack_require__){eval("var Symbol = __webpack_require__(\"./node_modules/lodash/_Symbol.js\"),\n    Uint8Array = __webpack_require__(\"./node_modules/lodash/_Uint8Array.js\"),\n    eq = __webpack_require__(\"./node_modules/lodash/eq.js\"),\n    equalArrays = __webpack_require__(\"./node_modules/lodash/_equalArrays.js\"),\n    mapToArray = __webpack_require__(\"./node_modules/lodash/_mapToArray.js\"),\n    setToArray = __webpack_require__(\"./node_modules/lodash/_setToArray.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_equalByTag.js?")},"./node_modules/lodash/_equalObjects.js":function(module,exports,__webpack_require__){eval("var getAllKeys = __webpack_require__(\"./node_modules/lodash/_getAllKeys.js\");\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_equalObjects.js?")},"./node_modules/lodash/_freeGlobal.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/lodash/_freeGlobal.js?")},"./node_modules/lodash/_getAllKeys.js":function(module,exports,__webpack_require__){eval('var baseGetAllKeys = __webpack_require__("./node_modules/lodash/_baseGetAllKeys.js"),\n    getSymbols = __webpack_require__("./node_modules/lodash/_getSymbols.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getAllKeys.js?')},"./node_modules/lodash/_getAllKeysIn.js":function(module,exports,__webpack_require__){eval('var baseGetAllKeys = __webpack_require__("./node_modules/lodash/_baseGetAllKeys.js"),\n    getSymbolsIn = __webpack_require__("./node_modules/lodash/_getSymbolsIn.js"),\n    keysIn = __webpack_require__("./node_modules/lodash/keysIn.js");\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getAllKeysIn.js?')},"./node_modules/lodash/_getMapData.js":function(module,exports,__webpack_require__){eval("var isKeyable = __webpack_require__(\"./node_modules/lodash/_isKeyable.js\");\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getMapData.js?")},"./node_modules/lodash/_getMatchData.js":function(module,exports,__webpack_require__){eval('var isStrictComparable = __webpack_require__("./node_modules/lodash/_isStrictComparable.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getMatchData.js?')},"./node_modules/lodash/_getNative.js":function(module,exports,__webpack_require__){eval('var baseIsNative = __webpack_require__("./node_modules/lodash/_baseIsNative.js"),\n    getValue = __webpack_require__("./node_modules/lodash/_getValue.js");\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it\'s native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getNative.js?')},"./node_modules/lodash/_getPrototype.js":function(module,exports,__webpack_require__){eval('var overArg = __webpack_require__("./node_modules/lodash/_overArg.js");\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getPrototype.js?')},"./node_modules/lodash/_getRawTag.js":function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("./node_modules/lodash/_Symbol.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getRawTag.js?')},"./node_modules/lodash/_getSymbols.js":function(module,exports,__webpack_require__){eval('var arrayFilter = __webpack_require__("./node_modules/lodash/_arrayFilter.js"),\n    stubArray = __webpack_require__("./node_modules/lodash/stubArray.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getSymbols.js?')},"./node_modules/lodash/_getSymbolsIn.js":function(module,exports,__webpack_require__){eval('var arrayPush = __webpack_require__("./node_modules/lodash/_arrayPush.js"),\n    getPrototype = __webpack_require__("./node_modules/lodash/_getPrototype.js"),\n    getSymbols = __webpack_require__("./node_modules/lodash/_getSymbols.js"),\n    stubArray = __webpack_require__("./node_modules/lodash/stubArray.js");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getSymbolsIn.js?')},"./node_modules/lodash/_getTag.js":function(module,exports,__webpack_require__){eval("var DataView = __webpack_require__(\"./node_modules/lodash/_DataView.js\"),\n    Map = __webpack_require__(\"./node_modules/lodash/_Map.js\"),\n    Promise = __webpack_require__(\"./node_modules/lodash/_Promise.js\"),\n    Set = __webpack_require__(\"./node_modules/lodash/_Set.js\"),\n    WeakMap = __webpack_require__(\"./node_modules/lodash/_WeakMap.js\"),\n    baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    toSource = __webpack_require__(\"./node_modules/lodash/_toSource.js\");\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getTag.js?")},"./node_modules/lodash/_getValue.js":function(module,exports){eval("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_getValue.js?")},"./node_modules/lodash/_hasPath.js":function(module,exports,__webpack_require__){eval('var castPath = __webpack_require__("./node_modules/lodash/_castPath.js"),\n    isArguments = __webpack_require__("./node_modules/lodash/isArguments.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js"),\n    isIndex = __webpack_require__("./node_modules/lodash/_isIndex.js"),\n    isLength = __webpack_require__("./node_modules/lodash/isLength.js"),\n    toKey = __webpack_require__("./node_modules/lodash/_toKey.js");\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hasPath.js?')},"./node_modules/lodash/_hashClear.js":function(module,exports,__webpack_require__){eval('var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js");\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hashClear.js?')},"./node_modules/lodash/_hashDelete.js":function(module,exports){eval("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hashDelete.js?")},"./node_modules/lodash/_hashGet.js":function(module,exports,__webpack_require__){eval("var nativeCreate = __webpack_require__(\"./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hashGet.js?")},"./node_modules/lodash/_hashHas.js":function(module,exports,__webpack_require__){eval('var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hashHas.js?')},"./node_modules/lodash/_hashSet.js":function(module,exports,__webpack_require__){eval("var nativeCreate = __webpack_require__(\"./node_modules/lodash/_nativeCreate.js\");\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_hashSet.js?")},"./node_modules/lodash/_initCloneArray.js":function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_initCloneArray.js?")},"./node_modules/lodash/_initCloneByTag.js":function(module,exports,__webpack_require__){eval("var cloneArrayBuffer = __webpack_require__(\"./node_modules/lodash/_cloneArrayBuffer.js\"),\n    cloneDataView = __webpack_require__(\"./node_modules/lodash/_cloneDataView.js\"),\n    cloneRegExp = __webpack_require__(\"./node_modules/lodash/_cloneRegExp.js\"),\n    cloneSymbol = __webpack_require__(\"./node_modules/lodash/_cloneSymbol.js\"),\n    cloneTypedArray = __webpack_require__(\"./node_modules/lodash/_cloneTypedArray.js\");\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_initCloneByTag.js?")},"./node_modules/lodash/_initCloneObject.js":function(module,exports,__webpack_require__){eval('var baseCreate = __webpack_require__("./node_modules/lodash/_baseCreate.js"),\n    getPrototype = __webpack_require__("./node_modules/lodash/_getPrototype.js"),\n    isPrototype = __webpack_require__("./node_modules/lodash/_isPrototype.js");\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == \'function\' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_initCloneObject.js?')},"./node_modules/lodash/_isFlattenable.js":function(module,exports,__webpack_require__){eval('var Symbol = __webpack_require__("./node_modules/lodash/_Symbol.js"),\n    isArguments = __webpack_require__("./node_modules/lodash/isArguments.js"),\n    isArray = __webpack_require__("./node_modules/lodash/isArray.js");\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isFlattenable.js?')},"./node_modules/lodash/_isIndex.js":function(module,exports){eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isIndex.js?")},"./node_modules/lodash/_isIterateeCall.js":function(module,exports,__webpack_require__){eval('var eq = __webpack_require__("./node_modules/lodash/eq.js"),\n    isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js"),\n    isIndex = __webpack_require__("./node_modules/lodash/_isIndex.js"),\n    isObject = __webpack_require__("./node_modules/lodash/isObject.js");\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == \'number\'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == \'string\' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isIterateeCall.js?')},"./node_modules/lodash/_isKey.js":function(module,exports,__webpack_require__){eval("var isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(\"./node_modules/lodash/isSymbol.js\");\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isKey.js?")},"./node_modules/lodash/_isKeyable.js":function(module,exports){eval("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isKeyable.js?")},"./node_modules/lodash/_isMasked.js":function(module,exports,__webpack_require__){eval("var coreJsData = __webpack_require__(\"./node_modules/lodash/_coreJsData.js\");\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isMasked.js?")},"./node_modules/lodash/_isPrototype.js":function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isPrototype.js?")},"./node_modules/lodash/_isStrictComparable.js":function(module,exports,__webpack_require__){eval('var isObject = __webpack_require__("./node_modules/lodash/isObject.js");\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_isStrictComparable.js?')},"./node_modules/lodash/_listCacheClear.js":function(module,exports){eval("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_listCacheClear.js?")},"./node_modules/lodash/_listCacheDelete.js":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_listCacheDelete.js?')},"./node_modules/lodash/_listCacheGet.js":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_listCacheGet.js?')},"./node_modules/lodash/_listCacheHas.js":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_listCacheHas.js?')},"./node_modules/lodash/_listCacheSet.js":function(module,exports,__webpack_require__){eval('var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_listCacheSet.js?')},"./node_modules/lodash/_mapCacheClear.js":function(module,exports,__webpack_require__){eval("var Hash = __webpack_require__(\"./node_modules/lodash/_Hash.js\"),\n    ListCache = __webpack_require__(\"./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(\"./node_modules/lodash/_Map.js\");\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapCacheClear.js?")},"./node_modules/lodash/_mapCacheDelete.js":function(module,exports,__webpack_require__){eval("var getMapData = __webpack_require__(\"./node_modules/lodash/_getMapData.js\");\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapCacheDelete.js?")},"./node_modules/lodash/_mapCacheGet.js":function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js");\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapCacheGet.js?')},"./node_modules/lodash/_mapCacheHas.js":function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js");\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapCacheHas.js?')},"./node_modules/lodash/_mapCacheSet.js":function(module,exports,__webpack_require__){eval('var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js");\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapCacheSet.js?')},"./node_modules/lodash/_mapToArray.js":function(module,exports){eval("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_mapToArray.js?")},"./node_modules/lodash/_matchesStrictComparable.js":function(module,exports){eval("/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_matchesStrictComparable.js?")},"./node_modules/lodash/_memoizeCapped.js":function(module,exports,__webpack_require__){eval('var memoize = __webpack_require__("./node_modules/lodash/memoize.js");\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function\'s\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_memoizeCapped.js?')},"./node_modules/lodash/_nativeCreate.js":function(module,exports,__webpack_require__){eval("var getNative = __webpack_require__(\"./node_modules/lodash/_getNative.js\");\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_nativeCreate.js?")},"./node_modules/lodash/_nativeKeys.js":function(module,exports,__webpack_require__){eval('var overArg = __webpack_require__("./node_modules/lodash/_overArg.js");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_nativeKeys.js?')},"./node_modules/lodash/_nativeKeysIn.js":function(module,exports){eval("/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_nativeKeysIn.js?")},"./node_modules/lodash/_nodeUtil.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(\"./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash/_nodeUtil.js?")},"./node_modules/lodash/_objectToString.js":function(module,exports){eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_objectToString.js?")},"./node_modules/lodash/_overArg.js":function(module,exports){eval("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_overArg.js?")},"./node_modules/lodash/_overRest.js":function(module,exports,__webpack_require__){eval('var apply = __webpack_require__("./node_modules/lodash/_apply.js");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_overRest.js?')},"./node_modules/lodash/_root.js":function(module,exports,__webpack_require__){eval("var freeGlobal = __webpack_require__(\"./node_modules/lodash/_freeGlobal.js\");\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_root.js?")},"./node_modules/lodash/_safeGet.js":function(module,exports){eval("/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_safeGet.js?")},"./node_modules/lodash/_setCacheAdd.js":function(module,exports){eval("/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_setCacheAdd.js?")},"./node_modules/lodash/_setCacheHas.js":function(module,exports){eval("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_setCacheHas.js?")},"./node_modules/lodash/_setToArray.js":function(module,exports){eval("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_setToArray.js?")},"./node_modules/lodash/_setToString.js":function(module,exports,__webpack_require__){eval('var baseSetToString = __webpack_require__("./node_modules/lodash/_baseSetToString.js"),\n    shortOut = __webpack_require__("./node_modules/lodash/_shortOut.js");\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_setToString.js?')},"./node_modules/lodash/_shortOut.js":function(module,exports){eval("/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_shortOut.js?")},"./node_modules/lodash/_stackClear.js":function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js");\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stackClear.js?')},"./node_modules/lodash/_stackDelete.js":function(module,exports){eval("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stackDelete.js?")},"./node_modules/lodash/_stackGet.js":function(module,exports){eval("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stackGet.js?")},"./node_modules/lodash/_stackHas.js":function(module,exports){eval("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stackHas.js?")},"./node_modules/lodash/_stackSet.js":function(module,exports,__webpack_require__){eval('var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"),\n    Map = __webpack_require__("./node_modules/lodash/_Map.js"),\n    MapCache = __webpack_require__("./node_modules/lodash/_MapCache.js");\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stackSet.js?')},"./node_modules/lodash/_strictIndexOf.js":function(module,exports){eval("/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_strictIndexOf.js?")},"./node_modules/lodash/_stringToPath.js":function(module,exports,__webpack_require__){eval("var memoizeCapped = __webpack_require__(\"./node_modules/lodash/_memoizeCapped.js\");\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_stringToPath.js?")},"./node_modules/lodash/_toKey.js":function(module,exports,__webpack_require__){eval("var isSymbol = __webpack_require__(\"./node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_toKey.js?")},"./node_modules/lodash/_toSource.js":function(module,exports){eval("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/_toSource.js?")},"./node_modules/lodash/assign.js":function(module,exports,__webpack_require__){eval('var assignValue = __webpack_require__("./node_modules/lodash/_assignValue.js"),\n    copyObject = __webpack_require__("./node_modules/lodash/_copyObject.js"),\n    createAssigner = __webpack_require__("./node_modules/lodash/_createAssigner.js"),\n    isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js"),\n    isPrototype = __webpack_require__("./node_modules/lodash/_isPrototype.js"),\n    keys = __webpack_require__("./node_modules/lodash/keys.js");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ \'a\': 0 }, new Foo, new Bar);\n * // => { \'a\': 1, \'c\': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/assign.js?')},"./node_modules/lodash/assignIn.js":function(module,exports,__webpack_require__){eval("var copyObject = __webpack_require__(\"./node_modules/lodash/_copyObject.js\"),\n    createAssigner = __webpack_require__(\"./node_modules/lodash/_createAssigner.js\"),\n    keysIn = __webpack_require__(\"./node_modules/lodash/keysIn.js\");\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/assignIn.js?")},"./node_modules/lodash/clone.js":function(module,exports,__webpack_require__){eval("var baseClone = __webpack_require__(\"./node_modules/lodash/_baseClone.js\");\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/clone.js?")},"./node_modules/lodash/cloneDeep.js":function(module,exports,__webpack_require__){eval("var baseClone = __webpack_require__(\"./node_modules/lodash/_baseClone.js\");\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/cloneDeep.js?")},"./node_modules/lodash/cloneDeepWith.js":function(module,exports,__webpack_require__){eval("var baseClone = __webpack_require__(\"./node_modules/lodash/_baseClone.js\");\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nmodule.exports = cloneDeepWith;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/cloneDeepWith.js?")},"./node_modules/lodash/constant.js":function(module,exports){eval("/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/constant.js?")},"./node_modules/lodash/defaults.js":function(module,exports,__webpack_require__){eval("var baseRest = __webpack_require__(\"./node_modules/lodash/_baseRest.js\"),\n    eq = __webpack_require__(\"./node_modules/lodash/eq.js\"),\n    isIterateeCall = __webpack_require__(\"./node_modules/lodash/_isIterateeCall.js\"),\n    keysIn = __webpack_require__(\"./node_modules/lodash/keysIn.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/defaults.js?")},"./node_modules/lodash/eq.js":function(module,exports){eval("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/eq.js?")},"./node_modules/lodash/escapeRegExp.js":function(module,exports,__webpack_require__){eval('var toString = __webpack_require__("./node_modules/lodash/toString.js");\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters "^", "$", "\\", ".", "*", "+",\n * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=\'\'] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp(\'[lodash](https://lodash.com/)\');\n * // => \'\\[lodash\\]\\(https://lodash\\.com/\\)\'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, \'\\\\$&\')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/escapeRegExp.js?')},"./node_modules/lodash/extend.js":function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__("./node_modules/lodash/assignIn.js");\n\n\n//# sourceURL=webpack:///./node_modules/lodash/extend.js?')},"./node_modules/lodash/find.js":function(module,exports,__webpack_require__){eval("var createFind = __webpack_require__(\"./node_modules/lodash/_createFind.js\"),\n    findIndex = __webpack_require__(\"./node_modules/lodash/findIndex.js\");\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/find.js?")},"./node_modules/lodash/findIndex.js":function(module,exports,__webpack_require__){eval("var baseFindIndex = __webpack_require__(\"./node_modules/lodash/_baseFindIndex.js\"),\n    baseIteratee = __webpack_require__(\"./node_modules/lodash/_baseIteratee.js\"),\n    toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/findIndex.js?")},"./node_modules/lodash/findLast.js":function(module,exports,__webpack_require__){eval('var createFind = __webpack_require__("./node_modules/lodash/_createFind.js"),\n    findLastIndex = __webpack_require__("./node_modules/lodash/findLastIndex.js");\n\n/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=collection.length-1] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */\nvar findLast = createFind(findLastIndex);\n\nmodule.exports = findLast;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/findLast.js?')},"./node_modules/lodash/findLastIndex.js":function(module,exports,__webpack_require__){eval("var baseFindIndex = __webpack_require__(\"./node_modules/lodash/_baseFindIndex.js\"),\n    baseIteratee = __webpack_require__(\"./node_modules/lodash/_baseIteratee.js\"),\n    toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/findLastIndex.js?")},"./node_modules/lodash/get.js":function(module,exports,__webpack_require__){eval("var baseGet = __webpack_require__(\"./node_modules/lodash/_baseGet.js\");\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/get.js?")},"./node_modules/lodash/has.js":function(module,exports,__webpack_require__){eval("var baseHas = __webpack_require__(\"./node_modules/lodash/_baseHas.js\"),\n    hasPath = __webpack_require__(\"./node_modules/lodash/_hasPath.js\");\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/has.js?")},"./node_modules/lodash/hasIn.js":function(module,exports,__webpack_require__){eval("var baseHasIn = __webpack_require__(\"./node_modules/lodash/_baseHasIn.js\"),\n    hasPath = __webpack_require__(\"./node_modules/lodash/_hasPath.js\");\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/hasIn.js?")},"./node_modules/lodash/identity.js":function(module,exports){eval("/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/identity.js?")},"./node_modules/lodash/includes.js":function(module,exports,__webpack_require__){eval("var baseIndexOf = __webpack_require__(\"./node_modules/lodash/_baseIndexOf.js\"),\n    isArrayLike = __webpack_require__(\"./node_modules/lodash/isArrayLike.js\"),\n    isString = __webpack_require__(\"./node_modules/lodash/isString.js\"),\n    toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\"),\n    values = __webpack_require__(\"./node_modules/lodash/values.js\");\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/includes.js?")},"./node_modules/lodash/isArguments.js":function(module,exports,__webpack_require__){eval("var baseIsArguments = __webpack_require__(\"./node_modules/lodash/_baseIsArguments.js\"),\n    isObjectLike = __webpack_require__(\"./node_modules/lodash/isObjectLike.js\");\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isArguments.js?")},"./node_modules/lodash/isArray.js":function(module,exports){eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isArray.js?")},"./node_modules/lodash/isArrayLike.js":function(module,exports,__webpack_require__){eval("var isFunction = __webpack_require__(\"./node_modules/lodash/isFunction.js\"),\n    isLength = __webpack_require__(\"./node_modules/lodash/isLength.js\");\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isArrayLike.js?")},"./node_modules/lodash/isArrayLikeObject.js":function(module,exports,__webpack_require__){eval('var isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js"),\n    isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject(\'abc\');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isArrayLikeObject.js?')},"./node_modules/lodash/isBuffer.js":function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__("./node_modules/lodash/_root.js"),\n    stubFalse = __webpack_require__("./node_modules/lodash/stubFalse.js");\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == \'object\' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/module.js")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash/isBuffer.js?')},"./node_modules/lodash/isFunction.js":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    isObject = __webpack_require__(\"./node_modules/lodash/isObject.js\");\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isFunction.js?")},"./node_modules/lodash/isInteger.js":function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\");\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nmodule.exports = isInteger;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isInteger.js?")},"./node_modules/lodash/isLength.js":function(module,exports){eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isLength.js?")},"./node_modules/lodash/isMap.js":function(module,exports,__webpack_require__){eval('var baseIsMap = __webpack_require__("./node_modules/lodash/_baseIsMap.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    nodeUtil = __webpack_require__("./node_modules/lodash/_nodeUtil.js");\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isMap.js?')},"./node_modules/lodash/isObject.js":function(module,exports){eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isObject.js?")},"./node_modules/lodash/isObjectLike.js":function(module,exports){eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isObjectLike.js?")},"./node_modules/lodash/isPlainObject.js":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    getPrototype = __webpack_require__(\"./node_modules/lodash/_getPrototype.js\"),\n    isObjectLike = __webpack_require__(\"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isPlainObject.js?")},"./node_modules/lodash/isRegExp.js":function(module,exports,__webpack_require__){eval('var baseIsRegExp = __webpack_require__("./node_modules/lodash/_baseIsRegExp.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    nodeUtil = __webpack_require__("./node_modules/lodash/_nodeUtil.js");\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp(\'/abc/\');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isRegExp.js?')},"./node_modules/lodash/isSet.js":function(module,exports,__webpack_require__){eval('var baseIsSet = __webpack_require__("./node_modules/lodash/_baseIsSet.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    nodeUtil = __webpack_require__("./node_modules/lodash/_nodeUtil.js");\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isSet.js?')},"./node_modules/lodash/isString.js":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\"),\n    isObjectLike = __webpack_require__(\"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isString.js?")},"./node_modules/lodash/isSymbol.js":function(module,exports,__webpack_require__){eval("var baseGetTag = __webpack_require__(\"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(\"./node_modules/lodash/isObjectLike.js\");\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isSymbol.js?")},"./node_modules/lodash/isTypedArray.js":function(module,exports,__webpack_require__){eval('var baseIsTypedArray = __webpack_require__("./node_modules/lodash/_baseIsTypedArray.js"),\n    baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"),\n    nodeUtil = __webpack_require__("./node_modules/lodash/_nodeUtil.js");\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/isTypedArray.js?')},"./node_modules/lodash/keys.js":function(module,exports,__webpack_require__){eval("var arrayLikeKeys = __webpack_require__(\"./node_modules/lodash/_arrayLikeKeys.js\"),\n    baseKeys = __webpack_require__(\"./node_modules/lodash/_baseKeys.js\"),\n    isArrayLike = __webpack_require__(\"./node_modules/lodash/isArrayLike.js\");\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/keys.js?")},"./node_modules/lodash/keysIn.js":function(module,exports,__webpack_require__){eval("var arrayLikeKeys = __webpack_require__(\"./node_modules/lodash/_arrayLikeKeys.js\"),\n    baseKeysIn = __webpack_require__(\"./node_modules/lodash/_baseKeysIn.js\"),\n    isArrayLike = __webpack_require__(\"./node_modules/lodash/isArrayLike.js\");\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/keysIn.js?")},"./node_modules/lodash/map.js":function(module,exports,__webpack_require__){eval("var arrayMap = __webpack_require__(\"./node_modules/lodash/_arrayMap.js\"),\n    baseIteratee = __webpack_require__(\"./node_modules/lodash/_baseIteratee.js\"),\n    baseMap = __webpack_require__(\"./node_modules/lodash/_baseMap.js\"),\n    isArray = __webpack_require__(\"./node_modules/lodash/isArray.js\");\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/map.js?")},"./node_modules/lodash/memoize.js":function(module,exports,__webpack_require__){eval("var MapCache = __webpack_require__(\"./node_modules/lodash/_MapCache.js\");\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/memoize.js?")},"./node_modules/lodash/mergeWith.js":function(module,exports,__webpack_require__){eval("var baseMerge = __webpack_require__(\"./node_modules/lodash/_baseMerge.js\"),\n    createAssigner = __webpack_require__(\"./node_modules/lodash/_createAssigner.js\");\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/mergeWith.js?")},"./node_modules/lodash/noop.js":function(module,exports){eval("/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/noop.js?")},"./node_modules/lodash/property.js":function(module,exports,__webpack_require__){eval("var baseProperty = __webpack_require__(\"./node_modules/lodash/_baseProperty.js\"),\n    basePropertyDeep = __webpack_require__(\"./node_modules/lodash/_basePropertyDeep.js\"),\n    isKey = __webpack_require__(\"./node_modules/lodash/_isKey.js\"),\n    toKey = __webpack_require__(\"./node_modules/lodash/_toKey.js\");\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/property.js?")},"./node_modules/lodash/pull.js":function(module,exports,__webpack_require__){eval("var baseRest = __webpack_require__(\"./node_modules/lodash/_baseRest.js\"),\n    pullAll = __webpack_require__(\"./node_modules/lodash/pullAll.js\");\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nmodule.exports = pull;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/pull.js?")},"./node_modules/lodash/pullAll.js":function(module,exports,__webpack_require__){eval("var basePullAll = __webpack_require__(\"./node_modules/lodash/_basePullAll.js\");\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/pullAll.js?")},"./node_modules/lodash/repeat.js":function(module,exports,__webpack_require__){eval("var baseRepeat = __webpack_require__(\"./node_modules/lodash/_baseRepeat.js\"),\n    isIterateeCall = __webpack_require__(\"./node_modules/lodash/_isIterateeCall.js\"),\n    toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\"),\n    toString = __webpack_require__(\"./node_modules/lodash/toString.js\");\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=1] The number of times to repeat the string.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n, guard) {\n  if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  return baseRepeat(toString(string), n);\n}\n\nmodule.exports = repeat;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/repeat.js?")},"./node_modules/lodash/sortBy.js":function(module,exports,__webpack_require__){eval("var baseFlatten = __webpack_require__(\"./node_modules/lodash/_baseFlatten.js\"),\n    baseOrderBy = __webpack_require__(\"./node_modules/lodash/_baseOrderBy.js\"),\n    baseRest = __webpack_require__(\"./node_modules/lodash/_baseRest.js\"),\n    isIterateeCall = __webpack_require__(\"./node_modules/lodash/_isIterateeCall.js\");\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/sortBy.js?")},"./node_modules/lodash/startsWith.js":function(module,exports,__webpack_require__){eval("var baseClamp = __webpack_require__(\"./node_modules/lodash/_baseClamp.js\"),\n    baseToString = __webpack_require__(\"./node_modules/lodash/_baseToString.js\"),\n    toInteger = __webpack_require__(\"./node_modules/lodash/toInteger.js\"),\n    toString = __webpack_require__(\"./node_modules/lodash/toString.js\");\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/startsWith.js?")},"./node_modules/lodash/stubArray.js":function(module,exports){eval("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/stubArray.js?")},"./node_modules/lodash/stubFalse.js":function(module,exports){eval("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/stubFalse.js?")},"./node_modules/lodash/toFinite.js":function(module,exports,__webpack_require__){eval("var toNumber = __webpack_require__(\"./node_modules/lodash/toNumber.js\");\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/toFinite.js?")},"./node_modules/lodash/toInteger.js":function(module,exports,__webpack_require__){eval("var toFinite = __webpack_require__(\"./node_modules/lodash/toFinite.js\");\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/toInteger.js?")},"./node_modules/lodash/toNumber.js":function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(\"./node_modules/lodash/isObject.js\"),\n    isSymbol = __webpack_require__(\"./node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/toNumber.js?")},"./node_modules/lodash/toPlainObject.js":function(module,exports,__webpack_require__){eval("var copyObject = __webpack_require__(\"./node_modules/lodash/_copyObject.js\"),\n    keysIn = __webpack_require__(\"./node_modules/lodash/keysIn.js\");\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/toPlainObject.js?")},"./node_modules/lodash/toString.js":function(module,exports,__webpack_require__){eval("var baseToString = __webpack_require__(\"./node_modules/lodash/_baseToString.js\");\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/toString.js?")},"./node_modules/lodash/uniq.js":function(module,exports,__webpack_require__){eval('var baseUniq = __webpack_require__("./node_modules/lodash/_baseUniq.js");\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/uniq.js?')},"./node_modules/lodash/values.js":function(module,exports,__webpack_require__){eval("var baseValues = __webpack_require__(\"./node_modules/lodash/_baseValues.js\"),\n    keys = __webpack_require__(\"./node_modules/lodash/keys.js\");\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n\n\n//# sourceURL=webpack:///./node_modules/lodash/values.js?")},"./node_modules/minimatch/minimatch.js":function(module,exports,__webpack_require__){eval("module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = __webpack_require__(\"./node_modules/path-browserify/index.js\")\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = __webpack_require__(\"./node_modules/brace-expansion/index.js\")\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --\x3e regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n\n\n//# sourceURL=webpack:///./node_modules/minimatch/minimatch.js?")},"./node_modules/node-libs-browser/mock/empty.js":function(module,exports){eval("\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/mock/empty.js?")},"./node_modules/number-is-nan/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n\n\n//# sourceURL=webpack:///./node_modules/number-is-nan/index.js?")},"./node_modules/path-browserify/index.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/path-browserify/index.js?")},"./node_modules/path-is-absolute/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/path-is-absolute/index.js?")},"./node_modules/prettier/parser-babel.js":function(module,exports,__webpack_require__){"use strict";eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _interopRequireDefault = __webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/assertThisInitialized.js"));\n\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"));\n\nvar _get8 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/get.js"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/inherits.js"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/createClass.js"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/classCallCheck.js"));\n\nvar _toConsumableArray2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js"));\n\nvar _typeof2 = _interopRequireDefault(__webpack_require__("./node_modules/@babel/runtime/helpers/typeof.js"));\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e97) { throw _e97; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e98) { didErr = true; err = _e98; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n!function (t, e) {\n  "object" == ( false ? undefined : (0, _typeof2.default)(exports)) && "undefined" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(void 0, function (t) {\n  "use strict";\n\n  var e = function e(t, _e) {\n    var s = new SyntaxError(t + " (" + _e.start.line + ":" + _e.start.column + ")");\n    return s.loc = _e, s;\n  };\n\n  function s(t) {\n    return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;\n  }\n\n  function i(t, e) {\n    return t(e = {\n      exports: {}\n    }, e.exports), e.exports;\n  }\n\n  var r = Object.freeze({\n    __proto__: null,\n    default: {\n      EOL: "\\n"\n    }\n  });\n\n  var a = function a(t) {\n    if ("string" != typeof t) throw new TypeError("Expected a string");\n    var e = t.match(/(?:\\r?\\n)/g) || [];\n    if (0 === e.length) return;\n    var s = e.filter(function (t) {\n      return "\\r\\n" === t;\n    }).length;\n    return s > e.length - s ? "\\r\\n" : "\\n";\n  };\n\n  var n = a;\n\n  n.graceful = function (t) {\n    return "string" == typeof t && a(t) || "\\n";\n  };\n\n  var o,\n      h = (o = r) && o.default || o,\n      p = i(function (t, e) {\n    function s() {\n      var t = h;\n      return s = function s() {\n        return t;\n      }, t;\n    }\n\n    function i() {\n      var t = (e = n) && e.__esModule ? e : {\n        default: e\n      };\n      var e;\n      return i = function i() {\n        return t;\n      }, t;\n    }\n\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    }), e.extract = function (t) {\n      var e = t.match(o);\n      return e ? e[0].trimLeft() : "";\n    }, e.strip = function (t) {\n      var e = t.match(o);\n      return e && e[0] ? t.substring(e[0].length) : t;\n    }, e.parse = function (t) {\n      return m(t).pragmas;\n    }, e.parseWithComments = m, e.print = function (_ref) {\n      var _ref$comments = _ref.comments,\n          t = _ref$comments === void 0 ? "" : _ref$comments,\n          _ref$pragmas = _ref.pragmas,\n          e = _ref$pragmas === void 0 ? {} : _ref$pragmas;\n      var r = (0, i().default)(t) || s().EOL,\n          a = Object.keys(e),\n          n = a.map(function (t) {\n        return f(t, e[t]);\n      }).reduce(function (t, e) {\n        return t.concat(e);\n      }, []).map(function (t) {\n        return " * " + t + r;\n      }).join("");\n\n      if (!t) {\n        if (0 === a.length) return "";\n\n        if (1 === a.length && !Array.isArray(e[a[0]])) {\n          var _t2 = e[a[0]];\n          return "".concat("/**", " ").concat(f(a[0], _t2)[0]).concat(" */");\n        }\n      }\n\n      var o = t.split(r).map(function (t) {\n        return "".concat(" *", " ").concat(t);\n      }).join(r) + r;\n      return "/**" + r + (t ? o : "") + (t && a.length ? " *" + r : "") + n + " */";\n    };\n    var r = /\\*\\/$/,\n        a = /^\\/\\*\\*/,\n        o = /^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)/,\n        p = /(^|\\s+)\\/\\/([^\\r\\n]*)/g,\n        c = /^(\\r?\\n)+/,\n        u = /(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *(?![^@\\r\\n]*\\/\\/[^]*)([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g,\n        l = /(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g,\n        d = /(\\r?\\n|^) *\\* ?/g;\n\n    function m(t) {\n      var e = (0, i().default)(t) || s().EOL;\n      t = t.replace(a, "").replace(r, "").replace(d, "$1");\n      var n = "";\n\n      for (; n !== t;) {\n        n = t, t = t.replace(u, "".concat(e, "$1 $2").concat(e));\n      }\n\n      t = t.replace(c, "").trimRight();\n      var o = Object.create(null),\n          h = t.replace(l, "").replace(c, "").trimRight();\n      var m;\n\n      for (; m = l.exec(t);) {\n        var _t3 = m[2].replace(p, "");\n\n        "string" == typeof o[m[1]] || Array.isArray(o[m[1]]) ? o[m[1]] = [].concat(o[m[1]], _t3) : o[m[1]] = _t3;\n      }\n\n      return {\n        comments: h,\n        pragmas: o\n      };\n    }\n\n    function f(t, e) {\n      return [].concat(e).map(function (e) {\n        return "@".concat(t, " ").concat(e).trim();\n      });\n    }\n  });\n  s(p);\n  p.extract, p.strip, p.parse, p.parseWithComments, p.print;\n\n  var c = {\n    hasPragma: function hasPragma(t) {\n      var e = Object.keys(p.parse(p.extract(t)));\n      return e.includes("prettier") || e.includes("format");\n    },\n    insertPragma: function insertPragma(t) {\n      var e = p.parseWithComments(p.extract(t)),\n          s = Object.assign({\n        format: ""\n      }, e.pragmas),\n          i = p.print({\n        pragmas: s,\n        comments: e.comments.replace(/^(\\s+?\\r?\\n)+/, "")\n      }).replace(/(\\r\\n|\\r)/g, "\\n"),\n          r = p.strip(t);\n      return i + (r.startsWith("\\n") ? "\\n" : "\\n\\n") + r;\n    }\n  },\n      u = function u(t) {\n    return t[t.length - 1];\n  };\n\n  function l(t, e) {\n    return !(e = e || {}).ignoreDecorators && t.declaration && t.declaration.decorators && t.declaration.decorators.length > 0 ? l(t.declaration.decorators[0]) : !e.ignoreDecorators && t.decorators && t.decorators.length > 0 ? l(t.decorators[0]) : t.__location ? t.__location.startOffset : t.range ? t.range[0] : "number" == typeof t.start ? t.start : t.loc ? t.loc.start : null;\n  }\n\n  function d(t) {\n    var e = t.nodes && u(t.nodes);\n    if (e && t.source && !t.source.end && (t = e), t.__location) return t.__location.endOffset;\n    var s = t.range ? t.range[1] : "number" == typeof t.end ? t.end : null;\n    return t.typeAnnotation ? Math.max(s, d(t.typeAnnotation)) : t.loc && !s ? t.loc.end : s;\n  }\n\n  var m = {\n    locStart: l,\n    locEnd: d,\n    composeLoc: function composeLoc(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : t;\n      var s = "number" == typeof e ? e : -1,\n          i = l(t),\n          r = -1 !== s ? i + s : d(e),\n          a = t.loc.start;\n      return {\n        start: i,\n        end: r,\n        range: [i, r],\n        loc: {\n          start: a,\n          end: -1 !== s ? {\n            line: a.line,\n            column: a.column + s\n          } : e.loc.end\n        }\n      };\n    }\n  },\n      f = function f(t) {\n    return "string" == typeof t ? t.replace(function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$onlyFirst = _ref2.onlyFirst,\n          t = _ref2$onlyFirst === void 0 ? !1 : _ref2$onlyFirst;\n\n      var e = ["[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)", "(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))"].join("|");\n      return new RegExp(e, t ? void 0 : "g");\n    }(), "") : t;\n  };\n\n  var D = function D(t) {\n    return !Number.isNaN(t) && t >= 4352 && (t <= 4447 || 9001 === t || 9002 === t || 11904 <= t && t <= 12871 && 12351 !== t || 12880 <= t && t <= 19903 || 19968 <= t && t <= 42182 || 43360 <= t && t <= 43388 || 44032 <= t && t <= 55203 || 63744 <= t && t <= 64255 || 65040 <= t && t <= 65049 || 65072 <= t && t <= 65131 || 65281 <= t && t <= 65376 || 65504 <= t && t <= 65510 || 110592 <= t && t <= 110593 || 127488 <= t && t <= 127569 || 131072 <= t && t <= 262141);\n  };\n\n  var y = D,\n      x = D;\n  y.default = x;\n\n  var g = function g(t) {\n    if ("string" != typeof (t = t.replace(/\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g, "  ")) || 0 === t.length) return 0;\n    t = f(t);\n    var e = 0;\n\n    for (var _s = 0; _s < t.length; _s++) {\n      var _i = t.codePointAt(_s);\n\n      _i <= 31 || _i >= 127 && _i <= 159 || _i >= 768 && _i <= 879 || (_i > 65535 && _s++, e += y(_i) ? 2 : 1);\n    }\n\n    return e;\n  };\n\n  var P = g,\n      E = g;\n  P.default = E;\n  var C = /[|\\\\{}()[\\]^$+*?.-]/g;\n\n  var b = function b(t) {\n    if ("string" != typeof t) throw new TypeError("Expected a string");\n    return t.replace(C, "\\\\$&");\n  };\n\n  var T = /[^\\x20-\\x7F]/;\n\n  function A(t) {\n    return function (e, s, i) {\n      var r = i && i.backwards;\n      if (!1 === s) return !1;\n      var a = e.length;\n      var n = s;\n\n      for (; n >= 0 && n < a;) {\n        var _s2 = e.charAt(n);\n\n        if (t instanceof RegExp) {\n          if (!t.test(_s2)) return n;\n        } else if (!t.includes(_s2)) return n;\n\n        r ? n-- : n++;\n      }\n\n      return (-1 === n || n === a) && n;\n    };\n  }\n\n  var w = A(/\\s/),\n      S = A(" \\t"),\n      N = A(",; \\t"),\n      F = A(/[^\\r\\n]/);\n\n  function k(t, e) {\n    if (!1 === e) return !1;\n    if ("/" === t.charAt(e) && "*" === t.charAt(e + 1)) for (var _s3 = e + 2; _s3 < t.length; ++_s3) {\n      if ("*" === t.charAt(_s3) && "/" === t.charAt(_s3 + 1)) return _s3 + 2;\n    }\n    return e;\n  }\n\n  function I(t, e) {\n    return !1 !== e && ("/" === t.charAt(e) && "/" === t.charAt(e + 1) ? F(t, e) : e);\n  }\n\n  function v(t, e, s) {\n    var i = s && s.backwards;\n    if (!1 === e) return !1;\n    var r = t.charAt(e);\n\n    if (i) {\n      if ("\\r" === t.charAt(e - 1) && "\\n" === r) return e - 2;\n      if ("\\n" === r || "\\r" === r || "\\u2028" === r || "\\u2029" === r) return e - 1;\n    } else {\n      if ("\\r" === r && "\\n" === t.charAt(e + 1)) return e + 2;\n      if ("\\n" === r || "\\r" === r || "\\u2028" === r || "\\u2029" === r) return e + 1;\n    }\n\n    return e;\n  }\n\n  function L(t, e, s) {\n    var i = S(t, (s = s || {}).backwards ? e - 1 : e, s);\n    return i !== v(t, i, s);\n  }\n\n  function B(t, e) {\n    var s = null,\n        i = e;\n\n    for (; i !== s;) {\n      s = i, i = N(t, i), i = k(t, i), i = S(t, i);\n    }\n\n    return i = I(t, i), i = v(t, i), !1 !== i && L(t, i);\n  }\n\n  function M(t, e) {\n    var s = null,\n        i = e;\n\n    for (; i !== s;) {\n      s = i, i = S(t, i), i = k(t, i), i = I(t, i), i = v(t, i);\n    }\n\n    return i;\n  }\n\n  function O(t, e, s) {\n    return M(t, s(e));\n  }\n\n  var R = {};\n\n  function _(t) {\n    return R[t];\n  }\n\n  [["|>"], ["??"], ["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], ["<", ">", "<=", ">=", "in", "instanceof"], [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"], ["**"]].forEach(function (t, e) {\n    t.forEach(function (t) {\n      R[t] = e;\n    });\n  });\n  var j = {\n    "==": !0,\n    "!=": !0,\n    "===": !0,\n    "!==": !0\n  },\n      U = {\n    "*": !0,\n    "/": !0,\n    "%": !0\n  },\n      q = {\n    ">>": !0,\n    ">>>": !0,\n    "<<": !0\n  };\n\n  function V(t, e, s) {\n    var i = 0;\n\n    for (var _r = s = s || 0; _r < t.length; ++_r) {\n      "\\t" === t[_r] ? i = i + e - i % e : i++;\n    }\n\n    return i;\n  }\n\n  function z(t, e) {\n    var s = t.slice(1, -1),\n        i = {\n      quote: \'"\',\n      regex: /"/g\n    },\n        r = {\n      quote: "\'",\n      regex: /\'/g\n    },\n        a = "\'" === e ? r : i,\n        n = a === r ? i : r;\n    var o = a.quote;\n\n    if (s.includes(a.quote) || s.includes(n.quote)) {\n      o = (s.match(a.regex) || []).length > (s.match(n.regex) || []).length ? n.quote : a.quote;\n    }\n\n    return o;\n  }\n\n  function H(t, e, s) {\n    var i = \'"\' === e ? "\'" : \'"\',\n        r = t.replace(/\\\\([\\s\\S])|([\'"])/g, function (t, r, a) {\n      return r === i ? r : a === e ? "\\\\" + a : a || (s && /^[^\\\\nrvtbfux\\r\\n\\u2028\\u2029"\'0-7]$/.test(r) ? r : "\\\\" + r);\n    });\n    return e + r + e;\n  }\n\n  function W(t) {\n    return t && (t.comments && t.comments.length > 0 && t.comments.some(function (t) {\n      return K(t) && !t.unignore;\n    }) || t.prettierIgnore);\n  }\n\n  function K(t) {\n    return "prettier-ignore" === t.value.trim();\n  }\n\n  function J(t, e) {\n    (t.comments || (t.comments = [])).push(e), e.printed = !1, "JSXText" === t.type && (e.printed = !0);\n  }\n\n  var X = {\n    replaceEndOfLineWith: function replaceEndOfLineWith(t, e) {\n      var s = [];\n\n      var _iterator = _createForOfIteratorHelper(t.split("\\n")),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _i2 = _step.value;\n          0 !== s.length && s.push(e), s.push(_i2);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return s;\n    },\n    getStringWidth: function getStringWidth(t) {\n      return t ? T.test(t) ? P(t) : t.length : 0;\n    },\n    getMaxContinuousCount: function getMaxContinuousCount(t, e) {\n      var s = t.match(new RegExp("(".concat(b(e), ")+"), "g"));\n      return null === s ? 0 : s.reduce(function (t, s) {\n        return Math.max(t, s.length / e.length);\n      }, 0);\n    },\n    getMinNotPresentContinuousCount: function getMinNotPresentContinuousCount(t, e) {\n      var s = t.match(new RegExp("(".concat(b(e), ")+"), "g"));\n      if (null === s) return 0;\n      var i = new Map();\n      var r = 0;\n\n      var _iterator2 = _createForOfIteratorHelper(s),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _t5 = _step2.value;\n\n          var _s4 = _t5.length / e.length;\n\n          i.set(_s4, !0), _s4 > r && (r = _s4);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      for (var _t4 = 1; _t4 < r; _t4++) {\n        if (!i.get(_t4)) return _t4;\n      }\n\n      return r + 1;\n    },\n    getPrecedence: _,\n    shouldFlatten: function shouldFlatten(t, e) {\n      return _(e) === _(t) && "**" !== t && (!j[t] || !j[e]) && !("%" === e && U[t] || "%" === t && U[e]) && (e === t || !U[e] || !U[t]) && (!q[t] || !q[e]);\n    },\n    isBitwiseOperator: function isBitwiseOperator(t) {\n      return !!q[t] || "|" === t || "^" === t || "&" === t;\n    },\n    getPenultimate: function getPenultimate(t) {\n      return t.length > 1 ? t[t.length - 2] : null;\n    },\n    getLast: u,\n    getNextNonSpaceNonCommentCharacterIndexWithStartIndex: M,\n    getNextNonSpaceNonCommentCharacterIndex: O,\n    getNextNonSpaceNonCommentCharacter: function getNextNonSpaceNonCommentCharacter(t, e, s) {\n      return t.charAt(O(t, e, s));\n    },\n    skip: A,\n    skipWhitespace: w,\n    skipSpaces: S,\n    skipToLineEnd: N,\n    skipEverythingButNewLine: F,\n    skipInlineComment: k,\n    skipTrailingComment: I,\n    skipNewline: v,\n    isNextLineEmptyAfterIndex: B,\n    isNextLineEmpty: function isNextLineEmpty(t, e, s) {\n      return B(t, s(e));\n    },\n    isPreviousLineEmpty: function isPreviousLineEmpty(t, e, s) {\n      var i = s(e) - 1;\n      return i = S(t, i, {\n        backwards: !0\n      }), i = v(t, i, {\n        backwards: !0\n      }), i = S(t, i, {\n        backwards: !0\n      }), i !== v(t, i, {\n        backwards: !0\n      });\n    },\n    hasNewline: L,\n    hasNewlineInRange: function hasNewlineInRange(t, e, s) {\n      for (var _i3 = e; _i3 < s; ++_i3) {\n        if ("\\n" === t.charAt(_i3)) return !0;\n      }\n\n      return !1;\n    },\n    hasSpaces: function hasSpaces(t, e, s) {\n      return S(t, (s = s || {}).backwards ? e - 1 : e, s) !== e;\n    },\n    setLocStart: function setLocStart(t, e) {\n      t.range ? t.range[0] = e : t.start = e;\n    },\n    setLocEnd: function setLocEnd(t, e) {\n      t.range ? t.range[1] = e : t.end = e;\n    },\n    startsWithNoLookaheadToken: function t(e, s) {\n      switch ((e = function t(e) {\n        if (e.left) return t(e.left);\n        return e;\n      }(e)).type) {\n        case "FunctionExpression":\n        case "ClassExpression":\n        case "DoExpression":\n          return s;\n\n        case "ObjectExpression":\n          return !0;\n\n        case "MemberExpression":\n        case "OptionalMemberExpression":\n          return t(e.object, s);\n\n        case "TaggedTemplateExpression":\n          return "FunctionExpression" !== e.tag.type && t(e.tag, s);\n\n        case "CallExpression":\n        case "OptionalCallExpression":\n          return "FunctionExpression" !== e.callee.type && t(e.callee, s);\n\n        case "ConditionalExpression":\n          return t(e.test, s);\n\n        case "UpdateExpression":\n          return !e.prefix && t(e.argument, s);\n\n        case "BindExpression":\n          return e.object && t(e.object, s);\n\n        case "SequenceExpression":\n          return t(e.expressions[0], s);\n\n        case "TSAsExpression":\n          return t(e.expression, s);\n\n        default:\n          return !1;\n      }\n    },\n    getAlignmentSize: V,\n    getIndentSize: function getIndentSize(t, e) {\n      var s = t.lastIndexOf("\\n");\n      return -1 === s ? 0 : V(t.slice(s + 1).match(/^[ \\t]*/)[0], e);\n    },\n    getPreferredQuote: z,\n    printString: function printString(t, e, s) {\n      var i = t.slice(1, -1),\n          r = !i.includes(\'"\') && !i.includes("\'"),\n          a = "json" === e.parser ? \'"\' : e.__isInHtmlAttribute ? "\'" : z(t, e.singleQuote ? "\'" : \'"\');\n      return s ? r ? a + i + a : t : H(i, a, !("css" === e.parser || "less" === e.parser || "scss" === e.parser || e.embeddedInHtml));\n    },\n    printNumber: function printNumber(t) {\n      return t.toLowerCase().replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/, "$1$2$3").replace(/^([+-]?[\\d.]+)e[+-]?0+$/, "$1").replace(/^([+-])?\\./, "$10.").replace(/(\\.\\d+?)0+(?=e|$)/, "$1").replace(/\\.(?=e|$)/, "");\n    },\n    hasIgnoreComment: function hasIgnoreComment(t) {\n      return W(t.getValue());\n    },\n    hasNodeIgnoreComment: W,\n    isNodeIgnoreComment: K,\n    makeString: H,\n    addLeadingComment: function addLeadingComment(t, e) {\n      e.leading = !0, e.trailing = !1, J(t, e);\n    },\n    addDanglingComment: function addDanglingComment(t, e) {\n      e.leading = !1, e.trailing = !1, J(t, e);\n    },\n    addTrailingComment: function addTrailingComment(t, e) {\n      e.leading = !1, e.trailing = !0, J(t, e);\n    },\n    isWithinParentArrayProperty: function isWithinParentArrayProperty(t, e) {\n      var s = t.getValue(),\n          i = t.getParentNode();\n      if (null == i) return !1;\n      if (!Array.isArray(i[e])) return !1;\n      var r = t.getName();\n      return i[e][r] === s;\n    }\n  };\n  var G = X.getMaxContinuousCount,\n      Q = X.getStringWidth,\n      Y = X.getAlignmentSize,\n      $ = X.getIndentSize,\n      Z = X.skip,\n      tt = X.skipWhitespace,\n      et = X.skipSpaces,\n      st = X.skipNewline,\n      it = X.skipToLineEnd,\n      rt = X.skipEverythingButNewLine,\n      at = X.skipInlineComment,\n      nt = X.skipTrailingComment,\n      ot = X.hasNewline,\n      ht = X.hasNewlineInRange,\n      pt = X.hasSpaces,\n      ct = X.isNextLineEmpty,\n      ut = X.isNextLineEmptyAfterIndex,\n      lt = X.isPreviousLineEmpty,\n      dt = X.getNextNonSpaceNonCommentCharacterIndex,\n      mt = X.makeString,\n      ft = X.addLeadingComment,\n      Dt = X.addDanglingComment,\n      yt = X.addTrailingComment;\n  var xt = {\n    getMaxContinuousCount: G,\n    getStringWidth: Q,\n    getAlignmentSize: Y,\n    getIndentSize: $,\n    skip: Z,\n    skipWhitespace: tt,\n    skipSpaces: et,\n    skipNewline: st,\n    skipToLineEnd: it,\n    skipEverythingButNewLine: rt,\n    skipInlineComment: at,\n    skipTrailingComment: nt,\n    hasNewline: ot,\n    hasNewlineInRange: ht,\n    hasSpaces: pt,\n    isNextLineEmpty: ct,\n    isNextLineEmptyAfterIndex: ut,\n    isPreviousLineEmpty: lt,\n    getNextNonSpaceNonCommentCharacterIndex: dt,\n    makeString: mt,\n    addLeadingComment: ft,\n    addDanglingComment: Dt,\n    addTrailingComment: yt\n  };\n  var gt = xt.addLeadingComment,\n      Pt = xt.addTrailingComment,\n      Et = xt.addDanglingComment,\n      Ct = xt.getNextNonSpaceNonCommentCharacterIndex;\n\n  function bt(t, e) {\n    var s = t.body.filter(function (t) {\n      return "EmptyStatement" !== t.type;\n    });\n    0 === s.length ? Et(t, e) : gt(s[0], e);\n  }\n\n  function Tt(t, e) {\n    "BlockStatement" === t.type ? bt(t, e) : gt(t, e);\n  }\n\n  function At(t, e, s, i, r, a) {\n    if (!s || "IfStatement" !== s.type || !i) return !1;\n    return ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd) ? (Pt(e, r), !0) : e === s.consequent && i === s.alternate ? ("BlockStatement" === e.type ? Pt(e, r) : Et(s, r), !0) : "BlockStatement" === i.type ? (bt(i, r), !0) : "IfStatement" === i.type ? (Tt(i.consequent, r), !0) : s.consequent === i && (gt(i, r), !0);\n  }\n\n  function wt(t, e, s, i, r, a) {\n    if (!s || "WhileStatement" !== s.type || !i) return !1;\n    return ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd) ? (Pt(e, r), !0) : "BlockStatement" === i.type && (bt(i, r), !0);\n  }\n\n  function St(t, e, s, i) {\n    return !(!t || "TryStatement" !== t.type && "CatchClause" !== t.type || !s) && ("CatchClause" === t.type && e ? (Pt(e, i), !0) : "BlockStatement" === s.type ? (bt(s, i), !0) : "TryStatement" === s.type ? (Tt(s.finalizer, i), !0) : "CatchClause" === s.type && (Tt(s.body, i), !0));\n  }\n\n  function Nt(t, e, s, i) {\n    return !(!(t && ("ClassDeclaration" === t.type || "ClassExpression" === t.type) && t.decorators && t.decorators.length > 0) || s && "Decorator" === s.type) && (t.decorators && 0 !== t.decorators.length ? Pt(t.decorators[t.decorators.length - 1], i) : gt(t, i), !0);\n  }\n\n  function Ft(t, e, s, i, r) {\n    return e && s && ("Property" === e.type || "TSDeclareMethod" === e.type || "TSAbstractMethodDefinition" === e.type) && "Identifier" === s.type && e.key === s && ":" !== X.getNextNonSpaceNonCommentCharacter(t, s, r.locEnd) ? (Pt(s, i), !0) : !(!s || !e || "Decorator" !== s.type || "ClassMethod" !== e.type && "ClassProperty" !== e.type && "TSAbstractClassProperty" !== e.type && "TSAbstractMethodDefinition" !== e.type && "TSDeclareMethod" !== e.type && "MethodDefinition" !== e.type) && (Pt(s, i), !0);\n  }\n\n  function kt(t, e, s, i, r, a) {\n    if (e && "FunctionTypeParam" === e.type && s && "FunctionTypeAnnotation" === s.type && i && "FunctionTypeParam" !== i.type) return Pt(e, r), !0;\n    if (e && ("Identifier" === e.type || "AssignmentPattern" === e.type) && s && Mt(s) && ")" === X.getNextNonSpaceNonCommentCharacter(t, r, a.locEnd)) return Pt(e, r), !0;\n\n    if (s && "FunctionDeclaration" === s.type && i && "BlockStatement" === i.type) {\n      var _e2 = function () {\n        if (0 !== (s.params || s.parameters).length) return X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, a.locEnd(X.getLast(s.params || s.parameters)));\n        var e = X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, a.locEnd(s.id));\n        return X.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(t, e + 1);\n      }();\n\n      if (a.locStart(r) > _e2) return bt(i, r), !0;\n    }\n\n    return !1;\n  }\n\n  function It(t, e) {\n    return !(!t || "ImportSpecifier" !== t.type) && (gt(t, e), !0);\n  }\n\n  function vt(t, e) {\n    return !(!t || "LabeledStatement" !== t.type) && (gt(t, e), !0);\n  }\n\n  function Lt(t, e, s, i) {\n    return e && e.body && 0 === e.body.length ? (i ? Et(e, s) : gt(e, s), !0) : !(!t || "Program" !== t.type || 0 !== t.body.length || !t.directives || 0 !== t.directives.length) && (i ? Et(t, s) : gt(t, s), !0);\n  }\n\n  function Bt(t) {\n    return "Block" === t.type || "CommentBlock" === t.type;\n  }\n\n  function Mt(t) {\n    return "ArrowFunctionExpression" === t.type || "FunctionExpression" === t.type || "FunctionDeclaration" === t.type || "ObjectMethod" === t.type || "ClassMethod" === t.type || "TSDeclareFunction" === t.type || "TSCallSignatureDeclaration" === t.type || "TSConstructSignatureDeclaration" === t.type || "TSConstructSignatureDeclaration" === t.type || "TSMethodSignature" === t.type || "TSConstructorType" === t.type || "TSFunctionType" === t.type || "TSDeclareMethod" === t.type;\n  }\n\n  function Ot(t) {\n    return Bt(t) && "*" === t.value[0] && /@type\\b/.test(t.value);\n  }\n\n  var Rt = {\n    handleOwnLineComment: function handleOwnLineComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return kt(e, a, n, o, t, s) || function (t, e, s) {\n        if (t && ("MemberExpression" === t.type || "OptionalMemberExpression" === t.type) && e && "Identifier" === e.type) return gt(t, s), !0;\n        return !1;\n      }(n, o, t) || At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || St(n, a, o, t) || Nt(n, a, o, t) || It(n, t) || function (t, e, s) {\n        if (t && ("ForInStatement" === t.type || "ForOfStatement" === t.type)) return gt(t, s), !0;\n        return !1;\n      }(n, 0, t) || function (t, e, s, i) {\n        if (e && ("UnionTypeAnnotation" === e.type || "TSUnionType" === e.type)) return X.isNodeIgnoreComment(i) && (s.prettierIgnore = !0, i.unignore = !0), !!t && (Pt(t, i), !0);\n        s && ("UnionTypeAnnotation" === s.type || "TSUnionType" === s.type) && X.isNodeIgnoreComment(i) && (s.types[0].prettierIgnore = !0, i.unignore = !0);\n        return !1;\n      }(a, n, o, t) || Lt(n, i, t, r) || function (t, e, s, i, r) {\n        if (s && "ImportSpecifier" === s.type && e && "ImportDeclaration" === e.type && X.hasNewline(t, r.locEnd(i))) return Pt(s, i), !0;\n        return !1;\n      }(e, n, a, t, s) || function (t, e) {\n        if (t && "AssignmentPattern" === t.type) return gt(t, e), !0;\n        return !1;\n      }(n, t) || Ft(e, n, a, t, s) || vt(n, t);\n    },\n    handleEndOfLineComment: function handleEndOfLineComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return function (t, e) {\n        if (t && Ot(e)) return gt(t, e), !0;\n        return !1;\n      }(o, t) || kt(e, a, n, o, t, s) || function (t, e, s, i, r, a) {\n        var n = e && !X.hasNewlineInRange(r, a.locEnd(e), a.locStart(i));\n        if ((!e || !n) && t && "ConditionalExpression" === t.type && s) return gt(s, i), !0;\n        return !1;\n      }(n, a, o, t, e, s) || It(n, t) || At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || St(n, a, o, t) || Nt(n, a, o, t) || vt(n, t) || function (t, e, s) {\n        if (e && ("CallExpression" === e.type || "OptionalCallExpression" === e.type) && t && e.callee === t && e.arguments.length > 0) return gt(e.arguments[0], s), !0;\n        return !1;\n      }(a, n, t) || function (t, e) {\n        if (t && ("Property" === t.type || "ObjectProperty" === t.type)) return gt(t, e), !0;\n        return !1;\n      }(n, t) || Lt(n, i, t, r) || function (t, e, s) {\n        if (t && "TypeAlias" === t.type) return gt(t, s), !0;\n        return !1;\n      }(n, 0, t) || function (t, e, s) {\n        if (t && ("VariableDeclarator" === t.type || "AssignmentExpression" === t.type) && e && ("ObjectExpression" === e.type || "ArrayExpression" === e.type || "TemplateLiteral" === e.type || "TaggedTemplateExpression" === e.type || Bt(s))) return gt(e, s), !0;\n        return !1;\n      }(n, o, t);\n    },\n    handleRemainingComment: function handleRemainingComment(t, e, s, i, r) {\n      var a = t.precedingNode,\n          n = t.enclosingNode,\n          o = t.followingNode;\n      return !!(At(e, a, n, o, t, s) || wt(e, a, n, o, t, s) || function (t, e, s) {\n        if (t && ("ObjectProperty" === t.type || "Property" === t.type) && t.shorthand && t.key === e && "AssignmentPattern" === t.value.type) return Pt(t.value.left, s), !0;\n        return !1;\n      }(n, a, t) || function (t, e, s, i) {\n        if (")" !== X.getNextNonSpaceNonCommentCharacter(t, s, i.locEnd)) return !1;\n        if (e && (Mt(e) && 0 === (e.params || e.parameters).length || ("CallExpression" === e.type || "OptionalCallExpression" === e.type || "NewExpression" === e.type) && 0 === e.arguments.length)) return Et(e, s), !0;\n        if (e && "MethodDefinition" === e.type && 0 === e.value.params.length) return Et(e.value, s), !0;\n        return !1;\n      }(e, n, t, s) || Ft(e, n, a, t, s) || Lt(n, i, t, r) || function (t, e, s, i) {\n        if (!e || "ArrowFunctionExpression" !== e.type) return !1;\n        var r = Ct(t, s, i.locEnd);\n        if ("=>" === t.slice(r, r + 2)) return Et(e, s), !0;\n        return !1;\n      }(e, n, t, s) || function (t, e, s, i, r) {\n        if ("(" !== X.getNextNonSpaceNonCommentCharacter(t, i, r.locEnd)) return !1;\n        if (s && e && ("FunctionDeclaration" === e.type || "FunctionExpression" === e.type || "ClassMethod" === e.type || "MethodDefinition" === e.type || "ObjectMethod" === e.type)) return Pt(s, i), !0;\n        return !1;\n      }(e, n, a, t, s) || function (t, e, s, i, r) {\n        if (!e || "TSMappedType" !== e.type) return !1;\n        if (i && "TSTypeParameter" === i.type && i.name) return gt(i.name, r), !0;\n        if (s && "TSTypeParameter" === s.type && s.constraint) return Pt(s.constraint, r), !0;\n        return !1;\n      }(0, n, a, o, t) || function (t, e) {\n        if (t && ("ContinueStatement" === t.type || "BreakStatement" === t.type) && !t.label) return Pt(t, e), !0;\n        return !1;\n      }(n, t) || function (t, e, s, i, r) {\n        if (!s && e && ("TSMethodSignature" === e.type || "TSDeclareFunction" === e.type || "TSAbstractMethodDefinition" === e.type) && ";" === X.getNextNonSpaceNonCommentCharacter(t, i, r.locEnd)) return Pt(e, i), !0;\n        return !1;\n      }(e, n, o, t, s));\n    },\n    hasLeadingComment: function hasLeadingComment(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return !0;\n      };\n      return t.leadingComments ? t.leadingComments.some(e) : !!t.comments && t.comments.some(function (t) {\n        return t.leading && e(t);\n      });\n    },\n    isBlockComment: Bt,\n    isTypeCastComment: Ot,\n    getGapRegex: function getGapRegex(t) {\n      if (t && "BinaryExpression" !== t.type && "LogicalExpression" !== t.type) return /^[\\s(&|]*$/;\n    },\n    getCommentChildNodes: function getCommentChildNodes(t, e) {\n      if (("typescript" === e.parser || "flow" === e.parser) && "MethodDefinition" === t.type && t.value && "FunctionExpression" === t.value.type && 0 === t.value.params.length && !t.value.returnType && (!t.value.typeParameters || 0 === t.value.typeParameters.length) && t.value.body) return [].concat((0, _toConsumableArray2.default)(t.decorators || []), [t.key, t.value.body]);\n    }\n  };\n  var _t = X.getLast,\n      jt = X.getNextNonSpaceNonCommentCharacter,\n      Ut = m.composeLoc,\n      qt = m.locEnd,\n      Vt = Rt.isTypeCastComment;\n\n  function zt(t, e, s, i) {\n    if (!t || "object" != (0, _typeof2.default)(t)) return;\n\n    if (Array.isArray(t)) {\n      for (var _s5 = 0; _s5 < t.length; _s5++) {\n        zt(t[_s5], e, t, _s5);\n      }\n\n      return;\n    }\n\n    if ("string" != typeof t.type) return;\n\n    for (var _i4 = 0, _Object$keys = Object.keys(t); _i4 < _Object$keys.length; _i4++) {\n      var _s6 = _Object$keys[_i4];\n      zt(t[_s6], e, t, _s6);\n    }\n\n    var r = e(t);\n    r && (s[i] = r);\n  }\n\n  function Ht(t) {\n    return "LogicalExpression" === t.type && "LogicalExpression" === t.right.type && t.operator === t.right.operator;\n  }\n\n  var Wt = function Wt(t, e) {\n    if ("typescript" !== e.parser && "flow" !== e.parser) {\n      var _e3 = new Set();\n\n      zt(t, function (t) {\n        t.leadingComments && t.leadingComments.some(Vt) && _e3.add(t.start);\n      }), zt(t, function (t) {\n        if ("ParenthesizedExpression" === t.type && !_e3.has(t.start)) {\n          var _e4 = t.expression;\n          return _e4.extra || (_e4.extra = {}), _e4.extra.parenthesized = !0, _e4.extra.parenStart = t.start, _e4;\n        }\n      });\n    }\n\n    return zt(t, function (t) {\n      switch (t.type) {\n        case "LogicalExpression":\n          if (Ht(t)) return function t(e) {\n            if (!Ht(e)) return e;\n            return t(Object.assign({\n              type: "LogicalExpression",\n              operator: e.operator,\n              left: t(Object.assign({\n                type: "LogicalExpression",\n                operator: e.operator,\n                left: e.left,\n                right: e.right.left\n              }, Ut(e.left, e.right.left))),\n              right: e.right.right\n            }, Ut(e)));\n          }(t);\n          break;\n\n        case "VariableDeclaration":\n          {\n            var _s7 = _t(t.declarations);\n\n            _s7 && _s7.init && function (t, s) {\n              if (";" === e.originalText[qt(s)]) return;\n              Array.isArray(t.range) ? t.range = [t.range[0], s.range[1]] : t.end = s.end;\n              t.loc = Object.assign({}, t.loc, {\n                end: t.loc.end\n              });\n            }(t, _s7);\n            break;\n          }\n\n        case "TSParenthesizedType":\n          return Object.assign({}, t.typeAnnotation, {}, Ut(t));\n\n        case "TSUnionType":\n        case "TSIntersectionType":\n          if (1 === t.types.length) return Object.assign({}, t.types[0], {}, Ut(t));\n          break;\n\n        case "TSTypeParameter":\n          "string" == typeof t.name && (t.name = Object.assign({\n            type: "Identifier",\n            name: t.name\n          }, Ut(t, t.name.length)));\n          break;\n\n        case "SequenceExpression":\n          t.end && t.end > _t(t.expressions).end && (t.end = _t(t.expressions).end);\n          break;\n\n        case "ClassProperty":\n          t.key && "TSPrivateIdentifier" === t.key.type && "?" === jt(e.originalText, t.key, qt) && (t.optional = !0);\n      }\n    }), t;\n  },\n      Kt = i(function (t, e) {\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    });\n\n    var s = function s(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      (0, _classCallCheck2.default)(this, s);\n      this.label = t, this.keyword = e.keyword, this.beforeExpr = !!e.beforeExpr, this.startsExpr = !!e.startsExpr, this.rightAssociative = !!e.rightAssociative, this.isLoop = !!e.isLoop, this.isAssign = !!e.isAssign, this.prefix = !!e.prefix, this.postfix = !!e.postfix, this.binop = null != e.binop ? e.binop : null, this.updateContext = null;\n    };\n\n    var i = new Map();\n\n    function r(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      e.keyword = t;\n      var r = new s(t, e);\n      return i.set(t, r), r;\n    }\n\n    function a(t, e) {\n      return new s(t, {\n        beforeExpr: !0,\n        binop: e\n      });\n    }\n\n    var n = {\n      num: new s("num", {\n        startsExpr: !0\n      }),\n      bigint: new s("bigint", {\n        startsExpr: !0\n      }),\n      regexp: new s("regexp", {\n        startsExpr: !0\n      }),\n      string: new s("string", {\n        startsExpr: !0\n      }),\n      name: new s("name", {\n        startsExpr: !0\n      }),\n      eof: new s("eof"),\n      bracketL: new s("[", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketHashL: new s("#[", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketBarL: new s("[|", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      bracketR: new s("]"),\n      bracketBarR: new s("|]"),\n      braceL: new s("{", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceBarL: new s("{|", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceHashL: new s("#{", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      braceR: new s("}"),\n      braceBarR: new s("|}"),\n      parenL: new s("(", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      parenR: new s(")"),\n      comma: new s(",", {\n        beforeExpr: !0\n      }),\n      semi: new s(";", {\n        beforeExpr: !0\n      }),\n      colon: new s(":", {\n        beforeExpr: !0\n      }),\n      doubleColon: new s("::", {\n        beforeExpr: !0\n      }),\n      dot: new s("."),\n      question: new s("?", {\n        beforeExpr: !0\n      }),\n      questionDot: new s("?."),\n      arrow: new s("=>", {\n        beforeExpr: !0\n      }),\n      template: new s("template"),\n      ellipsis: new s("...", {\n        beforeExpr: !0\n      }),\n      backQuote: new s("`", {\n        startsExpr: !0\n      }),\n      dollarBraceL: new s("${", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      at: new s("@"),\n      hash: new s("#", {\n        startsExpr: !0\n      }),\n      interpreterDirective: new s("#!..."),\n      eq: new s("=", {\n        beforeExpr: !0,\n        isAssign: !0\n      }),\n      assign: new s("_=", {\n        beforeExpr: !0,\n        isAssign: !0\n      }),\n      incDec: new s("++/--", {\n        prefix: !0,\n        postfix: !0,\n        startsExpr: !0\n      }),\n      bang: new s("!", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      tilde: new s("~", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      pipeline: a("|>", 0),\n      nullishCoalescing: a("??", 1),\n      logicalOR: a("||", 1),\n      logicalAND: a("&&", 2),\n      bitwiseOR: a("|", 3),\n      bitwiseXOR: a("^", 4),\n      bitwiseAND: a("&", 5),\n      equality: a("==/!=/===/!==", 6),\n      relational: a("</>/<=/>=", 7),\n      bitShift: a("<</>>/>>>", 8),\n      plusMin: new s("+/-", {\n        beforeExpr: !0,\n        binop: 9,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      modulo: new s("%", {\n        beforeExpr: !0,\n        binop: 10,\n        startsExpr: !0\n      }),\n      star: a("*", 10),\n      slash: a("/", 10),\n      exponent: new s("**", {\n        beforeExpr: !0,\n        binop: 11,\n        rightAssociative: !0\n      }),\n      _break: r("break"),\n      _case: r("case", {\n        beforeExpr: !0\n      }),\n      _catch: r("catch"),\n      _continue: r("continue"),\n      _debugger: r("debugger"),\n      _default: r("default", {\n        beforeExpr: !0\n      }),\n      _do: r("do", {\n        isLoop: !0,\n        beforeExpr: !0\n      }),\n      _else: r("else", {\n        beforeExpr: !0\n      }),\n      _finally: r("finally"),\n      _for: r("for", {\n        isLoop: !0\n      }),\n      _function: r("function", {\n        startsExpr: !0\n      }),\n      _if: r("if"),\n      _return: r("return", {\n        beforeExpr: !0\n      }),\n      _switch: r("switch"),\n      _throw: r("throw", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _try: r("try"),\n      _var: r("var"),\n      _const: r("const"),\n      _while: r("while", {\n        isLoop: !0\n      }),\n      _with: r("with"),\n      _new: r("new", {\n        beforeExpr: !0,\n        startsExpr: !0\n      }),\n      _this: r("this", {\n        startsExpr: !0\n      }),\n      _super: r("super", {\n        startsExpr: !0\n      }),\n      _class: r("class", {\n        startsExpr: !0\n      }),\n      _extends: r("extends", {\n        beforeExpr: !0\n      }),\n      _export: r("export"),\n      _import: r("import", {\n        startsExpr: !0\n      }),\n      _null: r("null", {\n        startsExpr: !0\n      }),\n      _true: r("true", {\n        startsExpr: !0\n      }),\n      _false: r("false", {\n        startsExpr: !0\n      }),\n      _in: r("in", {\n        beforeExpr: !0,\n        binop: 7\n      }),\n      _instanceof: r("instanceof", {\n        beforeExpr: !0,\n        binop: 7\n      }),\n      _typeof: r("typeof", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _void: r("void", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      }),\n      _delete: r("delete", {\n        beforeExpr: !0,\n        prefix: !0,\n        startsExpr: !0\n      })\n    },\n        o = /\\r\\n?|[\\n\\u2028\\u2029]/,\n        h = new RegExp(o.source, "g");\n\n    function p(t) {\n      switch (t) {\n        case 10:\n        case 13:\n        case 8232:\n        case 8233:\n          return !0;\n\n        default:\n          return !1;\n      }\n    }\n\n    var c = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n    function u(t) {\n      switch (t) {\n        case 9:\n        case 11:\n        case 12:\n        case 32:\n        case 160:\n        case 5760:\n        case 8192:\n        case 8193:\n        case 8194:\n        case 8195:\n        case 8196:\n        case 8197:\n        case 8198:\n        case 8199:\n        case 8200:\n        case 8201:\n        case 8202:\n        case 8239:\n        case 8287:\n        case 12288:\n        case 65279:\n          return !0;\n\n        default:\n          return !1;\n      }\n    }\n\n    var l = function l(t, e) {\n      (0, _classCallCheck2.default)(this, l);\n      this.line = t, this.column = e;\n    };\n\n    var d = function d(t, e) {\n      (0, _classCallCheck2.default)(this, d);\n      this.start = t, this.end = e;\n    };\n\n    function m(t) {\n      return t[t.length - 1];\n    }\n\n    var f = Object.freeze({\n      ArgumentsDisallowedInInitializer: "\'arguments\' is not allowed in class field initializer",\n      AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block",\n      AwaitBindingIdentifier: "Can not use \'await\' as identifier inside an async function",\n      AwaitExpressionFormalParameter: "await is not allowed in async function parameters",\n      AwaitNotInAsyncFunction: "Can not use keyword \'await\' outside an async function",\n      BadGetterArity: "getter must not have any formal parameters",\n      BadSetterArity: "setter must have exactly one formal parameter",\n      BadSetterRestParameter: "setter function argument must not be a rest parameter",\n      ConstructorClassField: "Classes may not have a field named \'constructor\'",\n      ConstructorClassPrivateField: "Classes may not have a private field named \'#constructor\'",\n      ConstructorIsAccessor: "Class constructor may not be an accessor",\n      ConstructorIsAsync: "Constructor can\'t be an async function",\n      ConstructorIsGenerator: "Constructor can\'t be a generator",\n      DeclarationMissingInitializer: "%0 require an initialization value",\n      DecoratorBeforeExport: "Decorators must be placed *before* the \'export\' keyword. You can set the \'decoratorsBeforeExport\' option to false to use the \'export @decorator class {}\' syntax",\n      DecoratorConstructor: "Decorators can\'t be used with a constructor. Did you mean \'@dec class { ... }\'?",\n      DecoratorExportClass: "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.",\n      DecoratorSemicolon: "Decorators must not be followed by a semicolon",\n      DeletePrivateField: "Deleting a private field is not allowed",\n      DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",\n      DuplicateConstructor: "Duplicate constructor in the same class",\n      DuplicateDefaultExport: "Only one default export allowed per module.",\n      DuplicateExport: "`%0` has already been exported. Exported identifiers must be unique.",\n      DuplicateProto: "Redefinition of __proto__ property",\n      DuplicateRegExpFlags: "Duplicate regular expression flag",\n      ElementAfterRest: "Rest element must be last element",\n      EscapedCharNotAnIdentifier: "Invalid Unicode escape",\n      ForInOfLoopInitializer: "%0 loop variable declaration may not have an initializer",\n      GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block",\n      IllegalBreakContinue: "Unsyntactic %0",\n      IllegalLanguageModeDirective: "Illegal \'use strict\' directive in function with non-simple parameter list",\n      IllegalReturn: "\'return\' outside of function",\n      ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments",\n      ImportCallArity: "import() requires exactly one argument",\n      ImportCallArityLtOne: "Dynamic imports require a parameter: import(\'a.js\')",\n      ImportCallNotNewExpression: "Cannot use new with import(...)",\n      ImportCallSpreadArgument: "... is not allowed in import()",\n      ImportMetaOutsideModule: "import.meta may appear only with \'sourceType: \\"module\\"\'",\n      ImportOutsideModule: "\'import\' and \'export\' may appear only with \'sourceType: \\"module\\"\'",\n      InvalidCodePoint: "Code point out of bounds",\n      InvalidDigit: "Expected number in radix %0",\n      InvalidEscapeSequence: "Bad character escape sequence",\n      InvalidEscapeSequenceTemplate: "Invalid escape sequence in template",\n      InvalidEscapedReservedWord: "Escape sequence in keyword %0",\n      InvalidIdentifier: "Invalid identifier %0",\n      InvalidLhs: "Invalid left-hand side in %0",\n      InvalidLhsBinding: "Binding invalid left-hand side in %0",\n      InvalidNumber: "Invalid number",\n      InvalidOrUnexpectedToken: "Unexpected character \'%0\'",\n      InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern",\n      InvalidPrivateFieldResolution: "Private name #%0 is not defined",\n      InvalidPropertyBindingPattern: "Binding member expression",\n      InvalidRestAssignmentPattern: "Invalid rest operator\'s argument",\n      LabelRedeclaration: "Label \'%0\' is already declared",\n      LetInLexicalBinding: "\'let\' is not allowed to be used as a name in \'let\' or \'const\' declarations.",\n      MalformedRegExpFlags: "Invalid regular expression flag",\n      MissingClassName: "A class name is required",\n      MissingEqInAssignment: "Only \'=\' operator can be used for specifying default value.",\n      MissingUnicodeEscape: "Expecting Unicode escape sequence \\\\uXXXX",\n      MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators",\n      ModuleExportUndefined: "Export \'%0\' is not defined",\n      MultipleDefaultsInSwitch: "Multiple default clauses",\n      NewlineAfterThrow: "Illegal newline after throw",\n      NoCatchOrFinally: "Missing catch or finally clause",\n      NumberIdentifier: "Identifier directly after number",\n      NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences",\n      ObsoleteAwaitStar: "await* has been removed from the async functions proposal. Use Promise.all() instead.",\n      OptionalChainingNoNew: "constructors in/after an Optional Chain are not allowed",\n      OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain",\n      ParamDupe: "Argument name clash",\n      PatternHasAccessor: "Object pattern can\'t contain getter or setter",\n      PatternHasMethod: "Object pattern can\'t contain methods",\n      PipelineBodyNoArrow: \'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized\',\n      PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression",\n      PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression",\n      PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference",\n      PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding",\n      PrimaryTopicRequiresSmartPipeline: "Primary Topic Reference found but pipelineOperator not passed \'smart\' for \'proposal\' option.",\n      PrivateNameRedeclaration: "Duplicate private name #%0",\n      RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with \'|}\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with \'{|\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with \'#{\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'hash\'",\n      RestTrailingComma: "Unexpected trailing comma after rest element",\n      SloppyFunction: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement",\n      StaticPrototype: "Classes may not have static property named prototype",\n      StrictDelete: "Deleting local variable in strict mode",\n      StrictEvalArguments: "Assigning to \'%0\' in strict mode",\n      StrictEvalArgumentsBinding: "Binding \'%0\' in strict mode",\n      StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block",\n      StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode",\n      StrictWith: "\'with\' in strict mode",\n      SuperNotAllowed: "super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name (\'constructor\') or not extending another class?",\n      SuperPrivateField: "Private fields can\'t be accessed on super",\n      TrailingDecorator: "Decorators must be attached to a class element",\n      TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with \'|]\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with \'[|\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'bar\'",\n      TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with \'#[\' are only allowed when the \'syntaxType\' option of the \'recordAndTuple\' plugin is set to \'hash\'",\n      UnexpectedArgumentPlaceholder: "Unexpected argument placeholder",\n      UnexpectedAwaitAfterPipelineBody: \'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal\',\n      UnexpectedDigitAfterHash: "Unexpected digit after hash token",\n      UnexpectedImportExport: "\'import\' and \'export\' may only appear at the top level",\n      UnexpectedKeyword: "Unexpected keyword \'%0\'",\n      UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration",\n      UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context",\n      UnexpectedNewTarget: "new.target can only be used in functions",\n      UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits",\n      UnexpectedPrivateField: "Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).",\n      UnexpectedReservedWord: "Unexpected reserved word \'%0\'",\n      UnexpectedSuper: "super is only allowed in object methods and classes",\n      UnexpectedToken: "Unexpected token \'%\'",\n      UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",\n      UnsupportedBind: "Binding should be performed on object property.",\n      UnsupportedDecoratorExport: "A decorated export must export a class declaration",\n      UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",\n      UnsupportedImport: "import can only be used in import() or import.meta",\n      UnsupportedMetaProperty: "The only valid meta property for %0 is %0.%1",\n      UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters",\n      UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties",\n      UnsupportedSuper: "super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])",\n      UnterminatedComment: "Unterminated comment",\n      UnterminatedRegExp: "Unterminated regular expression",\n      UnterminatedString: "Unterminated string constant",\n      UnterminatedTemplate: "Unterminated template",\n      VarRedeclaration: "Identifier \'%0\' has already been declared",\n      YieldBindingIdentifier: "Can not use \'yield\' as identifier inside a generator",\n      YieldInParameter: "yield is not allowed in generator parameters",\n      ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0"\n    });\n\n    function D(t) {\n      return null != t && "Property" === t.type && "init" === t.kind && !1 === t.method;\n    }\n\n    var y = function y(t, e, s, i) {\n      (0, _classCallCheck2.default)(this, y);\n      this.token = t, this.isExpr = !!e, this.preserveSpace = !!s, this.override = i;\n    };\n\n    var x = {\n      braceStatement: new y("{", !1),\n      braceExpression: new y("{", !0),\n      templateQuasi: new y("${", !1),\n      parenStatement: new y("(", !1),\n      parenExpression: new y("(", !0),\n      template: new y("`", !0, !0, function (t) {\n        return t.readTmplToken();\n      }),\n      functionExpression: new y("function", !0),\n      functionStatement: new y("function", !1)\n    };\n    n.parenR.updateContext = n.braceR.updateContext = function () {\n      if (1 === this.state.context.length) return void (this.state.exprAllowed = !0);\n      var t = this.state.context.pop();\n      t === x.braceStatement && "function" === this.curContext().token && (t = this.state.context.pop()), this.state.exprAllowed = !t.isExpr;\n    }, n.name.updateContext = function (t) {\n      var e = !1;\n      t !== n.dot && ("of" === this.state.value && !this.state.exprAllowed || "yield" === this.state.value && this.prodParam.hasYield) && (e = !0), this.state.exprAllowed = e, this.state.isIterator && (this.state.isIterator = !1);\n    }, n.braceL.updateContext = function (t) {\n      this.state.context.push(this.braceIsBlock(t) ? x.braceStatement : x.braceExpression), this.state.exprAllowed = !0;\n    }, n.dollarBraceL.updateContext = function () {\n      this.state.context.push(x.templateQuasi), this.state.exprAllowed = !0;\n    }, n.parenL.updateContext = function (t) {\n      var e = t === n._if || t === n._for || t === n._with || t === n._while;\n      this.state.context.push(e ? x.parenStatement : x.parenExpression), this.state.exprAllowed = !0;\n    }, n.incDec.updateContext = function () {}, n._function.updateContext = n._class.updateContext = function (t) {\n      !t.beforeExpr || t === n.semi || t === n._else || t === n._return && o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) || (t === n.colon || t === n.braceL) && this.curContext() === x.b_stat ? this.state.context.push(x.functionStatement) : this.state.context.push(x.functionExpression), this.state.exprAllowed = !1;\n    }, n.backQuote.updateContext = function () {\n      this.curContext() === x.template ? this.state.context.pop() : this.state.context.push(x.template), this.state.exprAllowed = !1;\n    };\n    var g = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࣇऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-鿼ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞿꟂ-ꟊꟵ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",\n        P = "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿᫀᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿";\n    var E = new RegExp("[" + g + "]"),\n        C = new RegExp("[" + g + P + "]");\n    g = P = null;\n    var b = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938],\n        T = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n    function A(t, e) {\n      var s = 65536;\n\n      for (var _i5 = 0, _r2 = e.length; _i5 < _r2; _i5 += 2) {\n        if (s += e[_i5], s > t) return !1;\n        if (s += e[_i5 + 1], s >= t) return !0;\n      }\n\n      return !1;\n    }\n\n    function w(t) {\n      return t < 65 ? 36 === t : t <= 90 || (t < 97 ? 95 === t : t <= 122 || (t <= 65535 ? t >= 170 && E.test(String.fromCharCode(t)) : A(t, b)));\n    }\n\n    function S(t) {\n      return t < 48 ? 36 === t : t < 58 || !(t < 65) && (t <= 90 || (t < 97 ? 95 === t : t <= 122 || (t <= 65535 ? t >= 170 && C.test(String.fromCharCode(t)) : A(t, b) || A(t, T))));\n    }\n\n    var N = ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],\n        F = ["eval", "arguments"],\n        k = new Set(["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"]),\n        I = new Set(N),\n        v = new Set(F);\n\n    function L(t, e) {\n      return e && "await" === t || "enum" === t;\n    }\n\n    function B(t, e) {\n      return L(t, e) || I.has(t);\n    }\n\n    function M(t) {\n      return v.has(t);\n    }\n\n    function O(t, e) {\n      return B(t, e) || M(t);\n    }\n\n    var R = /^in(stanceof)?$/;\n\n    var _ = new Set(["_", "any", "bool", "boolean", "empty", "extends", "false", "interface", "mixed", "null", "number", "static", "string", "true", "typeof", "void"]),\n        j = Object.freeze({\n      AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",\n      AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module",\n      AssignReservedType: "Cannot overwrite reserved type %0",\n      DeclareClassElement: "The `declare` modifier can only appear on class fields.",\n      DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",\n      DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement",\n      EnumBooleanMemberNotInitialized: "Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.",\n      EnumDuplicateMemberName: "Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.",\n      EnumInconsistentMemberValues: "Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.",\n      EnumInvalidExplicitType: "Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",\n      EnumInvalidExplicitTypeUnknownSupplied: "Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",\n      EnumInvalidMemberInitializerPrimaryType: "Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.",\n      EnumInvalidMemberInitializerSymbolType: "Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.",\n      EnumInvalidMemberInitializerUnknownType: "The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.",\n      EnumInvalidMemberName: "Enum member names cannot start with lowercase \'a\' through \'z\'. Instead of using `%0`, consider using `%1`, in enum `%2`.",\n      EnumNumberMemberNotInitialized: "Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.",\n      EnumStringMemberInconsistentlyInitailized: "String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.",\n      ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements",\n      InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type",\n      InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions",\n      InexactVariance: "Explicit inexact syntax cannot have variance",\n      InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`",\n      MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",\n      NestedDeclareModule: "`declare module` cannot be used inside another `declare module`",\n      NestedFlowComment: "Cannot have a flow comment inside another flow comment",\n      OptionalBindingPattern: "A binding pattern parameter cannot be optional in an implementation signature.",\n      SpreadVariance: "Spread properties cannot have variance",\n      TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",\n      TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis",\n      UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object",\n      UnexpectedReservedType: "Unexpected reserved type %0",\n      UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new",\n      UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",\n      UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions",\n      UnexpectedSubtractionOperand: \'Unexpected token, expected "number" or "bigint"\',\n      UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration",\n      UnsupportedDeclareExportKind: "`declare export %0` is not supported. Use `%1` instead",\n      UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module",\n      UnterminatedFlowComment: "Unterminated flow-comment"\n    });\n\n    function U(t) {\n      return "type" === t.importKind || "typeof" === t.importKind;\n    }\n\n    function q(t) {\n      return (t.type === n.name || !!t.type.keyword) && "from" !== t.value;\n    }\n\n    var V = {\n      const: "declare export var",\n      let: "declare export var",\n      type: "export type",\n      interface: "export interface"\n    };\n    var z = /\\*?\\s*@((?:no)?flow)\\b/;\n    var H = {\n      quot: \'"\',\n      amp: "&",\n      apos: "\'",\n      lt: "<",\n      gt: ">",\n      nbsp: " ",\n      iexcl: "¡",\n      cent: "¢",\n      pound: "£",\n      curren: "¤",\n      yen: "¥",\n      brvbar: "¦",\n      sect: "§",\n      uml: "¨",\n      copy: "©",\n      ordf: "ª",\n      laquo: "«",\n      not: "¬",\n      shy: "­",\n      reg: "®",\n      macr: "¯",\n      deg: "°",\n      plusmn: "±",\n      sup2: "²",\n      sup3: "³",\n      acute: "´",\n      micro: "µ",\n      para: "¶",\n      middot: "·",\n      cedil: "¸",\n      sup1: "¹",\n      ordm: "º",\n      raquo: "»",\n      frac14: "¼",\n      frac12: "½",\n      frac34: "¾",\n      iquest: "¿",\n      Agrave: "À",\n      Aacute: "Á",\n      Acirc: "Â",\n      Atilde: "Ã",\n      Auml: "Ä",\n      Aring: "Å",\n      AElig: "Æ",\n      Ccedil: "Ç",\n      Egrave: "È",\n      Eacute: "É",\n      Ecirc: "Ê",\n      Euml: "Ë",\n      Igrave: "Ì",\n      Iacute: "Í",\n      Icirc: "Î",\n      Iuml: "Ï",\n      ETH: "Ð",\n      Ntilde: "Ñ",\n      Ograve: "Ò",\n      Oacute: "Ó",\n      Ocirc: "Ô",\n      Otilde: "Õ",\n      Ouml: "Ö",\n      times: "×",\n      Oslash: "Ø",\n      Ugrave: "Ù",\n      Uacute: "Ú",\n      Ucirc: "Û",\n      Uuml: "Ü",\n      Yacute: "Ý",\n      THORN: "Þ",\n      szlig: "ß",\n      agrave: "à",\n      aacute: "á",\n      acirc: "â",\n      atilde: "ã",\n      auml: "ä",\n      aring: "å",\n      aelig: "æ",\n      ccedil: "ç",\n      egrave: "è",\n      eacute: "é",\n      ecirc: "ê",\n      euml: "ë",\n      igrave: "ì",\n      iacute: "í",\n      icirc: "î",\n      iuml: "ï",\n      eth: "ð",\n      ntilde: "ñ",\n      ograve: "ò",\n      oacute: "ó",\n      ocirc: "ô",\n      otilde: "õ",\n      ouml: "ö",\n      divide: "÷",\n      oslash: "ø",\n      ugrave: "ù",\n      uacute: "ú",\n      ucirc: "û",\n      uuml: "ü",\n      yacute: "ý",\n      thorn: "þ",\n      yuml: "ÿ",\n      OElig: "Œ",\n      oelig: "œ",\n      Scaron: "Š",\n      scaron: "š",\n      Yuml: "Ÿ",\n      fnof: "ƒ",\n      circ: "ˆ",\n      tilde: "˜",\n      Alpha: "Α",\n      Beta: "Β",\n      Gamma: "Γ",\n      Delta: "Δ",\n      Epsilon: "Ε",\n      Zeta: "Ζ",\n      Eta: "Η",\n      Theta: "Θ",\n      Iota: "Ι",\n      Kappa: "Κ",\n      Lambda: "Λ",\n      Mu: "Μ",\n      Nu: "Ν",\n      Xi: "Ξ",\n      Omicron: "Ο",\n      Pi: "Π",\n      Rho: "Ρ",\n      Sigma: "Σ",\n      Tau: "Τ",\n      Upsilon: "Υ",\n      Phi: "Φ",\n      Chi: "Χ",\n      Psi: "Ψ",\n      Omega: "Ω",\n      alpha: "α",\n      beta: "β",\n      gamma: "γ",\n      delta: "δ",\n      epsilon: "ε",\n      zeta: "ζ",\n      eta: "η",\n      theta: "θ",\n      iota: "ι",\n      kappa: "κ",\n      lambda: "λ",\n      mu: "μ",\n      nu: "ν",\n      xi: "ξ",\n      omicron: "ο",\n      pi: "π",\n      rho: "ρ",\n      sigmaf: "ς",\n      sigma: "σ",\n      tau: "τ",\n      upsilon: "υ",\n      phi: "φ",\n      chi: "χ",\n      psi: "ψ",\n      omega: "ω",\n      thetasym: "ϑ",\n      upsih: "ϒ",\n      piv: "ϖ",\n      ensp: " ",\n      emsp: " ",\n      thinsp: " ",\n      zwnj: "‌",\n      zwj: "‍",\n      lrm: "‎",\n      rlm: "‏",\n      ndash: "–",\n      mdash: "—",\n      lsquo: "‘",\n      rsquo: "’",\n      sbquo: "‚",\n      ldquo: "“",\n      rdquo: "”",\n      bdquo: "„",\n      dagger: "†",\n      Dagger: "‡",\n      bull: "•",\n      hellip: "…",\n      permil: "‰",\n      prime: "′",\n      Prime: "″",\n      lsaquo: "‹",\n      rsaquo: "›",\n      oline: "‾",\n      frasl: "⁄",\n      euro: "€",\n      image: "ℑ",\n      weierp: "℘",\n      real: "ℜ",\n      trade: "™",\n      alefsym: "ℵ",\n      larr: "←",\n      uarr: "↑",\n      rarr: "→",\n      darr: "↓",\n      harr: "↔",\n      crarr: "↵",\n      lArr: "⇐",\n      uArr: "⇑",\n      rArr: "⇒",\n      dArr: "⇓",\n      hArr: "⇔",\n      forall: "∀",\n      part: "∂",\n      exist: "∃",\n      empty: "∅",\n      nabla: "∇",\n      isin: "∈",\n      notin: "∉",\n      ni: "∋",\n      prod: "∏",\n      sum: "∑",\n      minus: "−",\n      lowast: "∗",\n      radic: "√",\n      prop: "∝",\n      infin: "∞",\n      ang: "∠",\n      and: "∧",\n      or: "∨",\n      cap: "∩",\n      cup: "∪",\n      int: "∫",\n      there4: "∴",\n      sim: "∼",\n      cong: "≅",\n      asymp: "≈",\n      ne: "≠",\n      equiv: "≡",\n      le: "≤",\n      ge: "≥",\n      sub: "⊂",\n      sup: "⊃",\n      nsub: "⊄",\n      sube: "⊆",\n      supe: "⊇",\n      oplus: "⊕",\n      otimes: "⊗",\n      perp: "⊥",\n      sdot: "⋅",\n      lceil: "⌈",\n      rceil: "⌉",\n      lfloor: "⌊",\n      rfloor: "⌋",\n      lang: "〈",\n      rang: "〉",\n      loz: "◊",\n      spades: "♠",\n      clubs: "♣",\n      hearts: "♥",\n      diams: "♦"\n    },\n        W = /^[\\da-fA-F]+$/,\n        K = /^\\d+$/,\n        J = Object.freeze({\n      AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression",\n      MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>",\n      MissingClosingTagElement: "Expected corresponding JSX closing tag for <%0>",\n      UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text",\n      UnterminatedJsxContent: "Unterminated JSX contents",\n      UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"\n    });\n\n    function X(t) {\n      return !!t && ("JSXOpeningFragment" === t.type || "JSXClosingFragment" === t.type);\n    }\n\n    function G(t) {\n      if ("JSXIdentifier" === t.type) return t.name;\n      if ("JSXNamespacedName" === t.type) return t.namespace.name + ":" + t.name.name;\n      if ("JSXMemberExpression" === t.type) return G(t.object) + "." + G(t.property);\n      throw new Error("Node had unexpected type: " + t.type);\n    }\n\n    x.j_oTag = new y("<tag", !1), x.j_cTag = new y("</tag", !1), x.j_expr = new y("<tag>...</tag>", !0, !0), n.jsxName = new s("jsxName"), n.jsxText = new s("jsxText", {\n      beforeExpr: !0\n    }), n.jsxTagStart = new s("jsxTagStart", {\n      startsExpr: !0\n    }), n.jsxTagEnd = new s("jsxTagEnd"), n.jsxTagStart.updateContext = function () {\n      this.state.context.push(x.j_expr), this.state.context.push(x.j_oTag), this.state.exprAllowed = !1;\n    }, n.jsxTagEnd.updateContext = function (t) {\n      var e = this.state.context.pop();\n      e === x.j_oTag && t === n.slash || e === x.j_cTag ? (this.state.context.pop(), this.state.exprAllowed = this.curContext() === x.j_expr) : this.state.exprAllowed = !0;\n    };\n\n    var Q = function Q(t) {\n      (0, _classCallCheck2.default)(this, Q);\n      this.var = [], this.lexical = [], this.functions = [], this.flags = t;\n    };\n\n    var Y = /*#__PURE__*/function () {\n      function Y(t, e) {\n        (0, _classCallCheck2.default)(this, Y);\n        this.scopeStack = [], this.undefinedExports = new Map(), this.undefinedPrivateNames = new Map(), this.raise = t, this.inModule = e;\n      }\n\n      (0, _createClass2.default)(Y, [{\n        key: "createScope",\n        value: function createScope(t) {\n          return new Q(t);\n        }\n      }, {\n        key: "enter",\n        value: function enter(t) {\n          this.scopeStack.push(this.createScope(t));\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          this.scopeStack.pop();\n        }\n      }, {\n        key: "treatFunctionsAsVarInScope",\n        value: function treatFunctionsAsVarInScope(t) {\n          return !!(2 & t.flags || !this.inModule && 1 & t.flags);\n        }\n      }, {\n        key: "declareName",\n        value: function declareName(t, e, s) {\n          var i = this.currentScope();\n          if (8 & e || 16 & e) this.checkRedeclarationInScope(i, t, e, s), 16 & e ? i.functions.push(t) : i.lexical.push(t), 8 & e && this.maybeExportDefined(i, t);else if (4 & e) for (var _r3 = this.scopeStack.length - 1; _r3 >= 0 && (i = this.scopeStack[_r3], this.checkRedeclarationInScope(i, t, e, s), i.var.push(t), this.maybeExportDefined(i, t), !(131 & i.flags)); --_r3) {\n            ;\n          }\n          this.inModule && 1 & i.flags && this.undefinedExports.delete(t);\n        }\n      }, {\n        key: "maybeExportDefined",\n        value: function maybeExportDefined(t, e) {\n          this.inModule && 1 & t.flags && this.undefinedExports.delete(e);\n        }\n      }, {\n        key: "checkRedeclarationInScope",\n        value: function checkRedeclarationInScope(t, e, s, i) {\n          this.isRedeclaredInScope(t, e, s) && this.raise(i, f.VarRedeclaration, e);\n        }\n      }, {\n        key: "isRedeclaredInScope",\n        value: function isRedeclaredInScope(t, e, s) {\n          return !!(1 & s) && (8 & s ? t.lexical.indexOf(e) > -1 || t.functions.indexOf(e) > -1 || t.var.indexOf(e) > -1 : 16 & s ? t.lexical.indexOf(e) > -1 || !this.treatFunctionsAsVarInScope(t) && t.var.indexOf(e) > -1 : t.lexical.indexOf(e) > -1 && !(8 & t.flags && t.lexical[0] === e) || !this.treatFunctionsAsVarInScope(t) && t.functions.indexOf(e) > -1);\n        }\n      }, {\n        key: "checkLocalExport",\n        value: function checkLocalExport(t) {\n          -1 === this.scopeStack[0].lexical.indexOf(t.name) && -1 === this.scopeStack[0].var.indexOf(t.name) && -1 === this.scopeStack[0].functions.indexOf(t.name) && this.undefinedExports.set(t.name, t.start);\n        }\n      }, {\n        key: "currentScope",\n        value: function currentScope() {\n          return this.scopeStack[this.scopeStack.length - 1];\n        }\n      }, {\n        key: "currentVarScope",\n        value: function currentVarScope() {\n          for (var _t6 = this.scopeStack.length - 1;; _t6--) {\n            var _e5 = this.scopeStack[_t6];\n            if (131 & _e5.flags) return _e5;\n          }\n        }\n      }, {\n        key: "currentThisScope",\n        value: function currentThisScope() {\n          for (var _t7 = this.scopeStack.length - 1;; _t7--) {\n            var _e6 = this.scopeStack[_t7];\n            if ((131 & _e6.flags || 64 & _e6.flags) && !(4 & _e6.flags)) return _e6;\n          }\n        }\n      }, {\n        key: "inFunction",\n        get: function get() {\n          return (2 & this.currentVarScope().flags) > 0;\n        }\n      }, {\n        key: "allowSuper",\n        get: function get() {\n          return (16 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "allowDirectSuper",\n        get: function get() {\n          return (32 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "inClass",\n        get: function get() {\n          return (64 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "inNonArrowFunction",\n        get: function get() {\n          return (2 & this.currentThisScope().flags) > 0;\n        }\n      }, {\n        key: "treatFunctionsAsVar",\n        get: function get() {\n          return this.treatFunctionsAsVarInScope(this.currentScope());\n        }\n      }]);\n      return Y;\n    }();\n\n    var $ = /*#__PURE__*/function (_Q) {\n      (0, _inherits2.default)($, _Q);\n\n      var _super = _createSuper($);\n\n      function $() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, $);\n\n        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n          t[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(t)), _this.types = [], _this.enums = [], _this.constEnums = [], _this.classes = [], _this.exportOnlyBindings = [];\n        return _this;\n      }\n\n      return $;\n    }(Q);\n\n    var Z = /*#__PURE__*/function (_Y) {\n      (0, _inherits2.default)(Z, _Y);\n\n      var _super2 = _createSuper(Z);\n\n      function Z() {\n        (0, _classCallCheck2.default)(this, Z);\n        return _super2.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(Z, [{\n        key: "createScope",\n        value: function createScope(t) {\n          return new $(t);\n        }\n      }, {\n        key: "declareName",\n        value: function declareName(t, e, s) {\n          var i = this.currentScope();\n          if (1024 & e) return this.maybeExportDefined(i, t), void i.exportOnlyBindings.push(t);\n          (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "declareName", this).apply(this, arguments), 2 & e && (1 & e || (this.checkRedeclarationInScope(i, t, e, s), this.maybeExportDefined(i, t)), i.types.push(t)), 256 & e && i.enums.push(t), 512 & e && i.constEnums.push(t), 128 & e && i.classes.push(t);\n        }\n      }, {\n        key: "isRedeclaredInScope",\n        value: function isRedeclaredInScope(t, e, s) {\n          if (t.enums.indexOf(e) > -1) {\n            if (256 & s) {\n              return !!(512 & s) !== t.constEnums.indexOf(e) > -1;\n            }\n\n            return !0;\n          }\n\n          return 128 & s && t.classes.indexOf(e) > -1 ? t.lexical.indexOf(e) > -1 && !!(1 & s) : !!(2 & s && t.types.indexOf(e) > -1) || (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "isRedeclaredInScope", this).apply(this, arguments);\n        }\n      }, {\n        key: "checkLocalExport",\n        value: function checkLocalExport(t) {\n          -1 === this.scopeStack[0].types.indexOf(t.name) && -1 === this.scopeStack[0].exportOnlyBindings.indexOf(t.name) && (0, _get8.default)((0, _getPrototypeOf2.default)(Z.prototype), "checkLocalExport", this).call(this, t);\n        }\n      }]);\n      return Z;\n    }(Y);\n\n    var tt = /*#__PURE__*/function () {\n      function tt() {\n        (0, _classCallCheck2.default)(this, tt);\n        this.stacks = [];\n      }\n\n      (0, _createClass2.default)(tt, [{\n        key: "enter",\n        value: function enter(t) {\n          this.stacks.push(t);\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          this.stacks.pop();\n        }\n      }, {\n        key: "currentFlags",\n        value: function currentFlags() {\n          return this.stacks[this.stacks.length - 1];\n        }\n      }, {\n        key: "hasAwait",\n        get: function get() {\n          return (2 & this.currentFlags()) > 0;\n        }\n      }, {\n        key: "hasYield",\n        get: function get() {\n          return (1 & this.currentFlags()) > 0;\n        }\n      }, {\n        key: "hasReturn",\n        get: function get() {\n          return (4 & this.currentFlags()) > 0;\n        }\n      }]);\n      return tt;\n    }();\n\n    function et(t, e) {\n      return (t ? 2 : 0) | (e ? 1 : 0);\n    }\n\n    function st(t) {\n      if (null == t) throw new Error("Unexpected ".concat(t, " value."));\n      return t;\n    }\n\n    function it(t) {\n      if (!t) throw new Error("Assert fail");\n    }\n\n    var rt = Object.freeze({\n      ClassMethodHasDeclare: "Class methods cannot have the \'declare\' modifier",\n      ClassMethodHasReadonly: "Class methods cannot have the \'readonly\' modifier",\n      DeclareClassFieldHasInitializer: "\'declare\' class fields cannot have an initializer",\n      DuplicateModifier: "Duplicate modifier: \'%0\'",\n      EmptyHeritageClauseType: "\'%0\' list cannot be empty.",\n      IndexSignatureHasAbstract: "Index signatures cannot have the \'abstract\' modifier",\n      IndexSignatureHasAccessibility: "Index signatures cannot have an accessibility modifier (\'%0\')",\n      IndexSignatureHasStatic: "Index signatures cannot have the \'static\' modifier",\n      OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",\n      PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",\n      PrivateElementHasAbstract: "Private elements cannot have the \'abstract\' modifier.",\n      PrivateElementHasAccessibility: "Private elements cannot have an accessibility modifier (\'%0\')",\n      TemplateTypeHasSubstitution: "Template literal types cannot have any substitution",\n      TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`",\n      UnexpectedReadonly: "\'readonly\' type modifier is only permitted on array and tuple literal types.",\n      UnexpectedTypeAnnotation: "Did not expect a type annotation here.",\n      UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",\n      UnsupportedImportTypeArgument: "Argument in a type import must be a string literal",\n      UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",\n      UnsupportedSignatureParameterKind: "Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0"\n    });\n    n.placeholder = new s("%%", {\n      startsExpr: !0\n    });\n\n    function at(t, e) {\n      return t.some(function (t) {\n        return Array.isArray(t) ? t[0] === e : t === e;\n      });\n    }\n\n    function nt(t, e, s) {\n      var i = t.find(function (t) {\n        return Array.isArray(t) ? t[0] === e : t === e;\n      });\n      return i && Array.isArray(i) ? i[1][s] : null;\n    }\n\n    var ot = ["minimal", "smart", "fsharp"],\n        ht = ["hash", "bar"];\n    var pt = {\n      estree: function estree(t) {\n        return /*#__PURE__*/function (_t8) {\n          (0, _inherits2.default)(_class, _t8);\n\n          var _super3 = _createSuper(_class);\n\n          function _class() {\n            (0, _classCallCheck2.default)(this, _class);\n            return _super3.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class, [{\n            key: "estreeParseRegExpLiteral",\n            value: function estreeParseRegExpLiteral(_ref3) {\n              var t = _ref3.pattern,\n                  e = _ref3.flags;\n              var s = null;\n\n              try {\n                s = new RegExp(t, e);\n              } catch (t) {}\n\n              var i = this.estreeParseLiteral(s);\n              return i.regex = {\n                pattern: t,\n                flags: e\n              }, i;\n            }\n          }, {\n            key: "estreeParseBigIntLiteral",\n            value: function estreeParseBigIntLiteral(t) {\n              var e = "undefined" != typeof BigInt ? BigInt(t) : null,\n                  s = this.estreeParseLiteral(e);\n              return s.bigint = String(s.value || t), s;\n            }\n          }, {\n            key: "estreeParseLiteral",\n            value: function estreeParseLiteral(t) {\n              return this.parseLiteral(t, "Literal");\n            }\n          }, {\n            key: "directiveToStmt",\n            value: function directiveToStmt(t) {\n              var e = t.value,\n                  s = this.startNodeAt(t.start, t.loc.start),\n                  i = this.startNodeAt(e.start, e.loc.start);\n              return i.value = e.value, i.raw = e.extra.raw, s.expression = this.finishNodeAt(i, "Literal", e.end, e.loc.end), s.directive = e.extra.raw.slice(1, -1), this.finishNodeAt(s, "ExpressionStatement", t.end, t.loc.end);\n            }\n          }, {\n            key: "initFunction",\n            value: function initFunction(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "initFunction", this).call(this, t, e), t.expression = !1;\n            }\n          }, {\n            key: "checkDeclaration",\n            value: function checkDeclaration(t) {\n              D(t) ? this.checkDeclaration(t.value) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "checkDeclaration", this).call(this, t);\n            }\n          }, {\n            key: "checkGetterSetterParams",\n            value: function checkGetterSetterParams(t) {\n              var e = t,\n                  s = "get" === e.kind ? 0 : 1,\n                  i = e.start;\n              e.value.params.length !== s ? "get" === t.kind ? this.raise(i, f.BadGetterArity) : this.raise(i, f.BadSetterArity) : "set" === e.kind && "RestElement" === e.value.params[0].type && this.raise(i, f.BadSetterRestParameter);\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var _this2 = this;\n\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n              var r = arguments.length > 4 ? arguments[4] : undefined;\n\n              switch (t.type) {\n                case "ObjectPattern":\n                  t.properties.forEach(function (t) {\n                    _this2.checkLVal("Property" === t.type ? t.value : t, e, s, "object destructuring pattern", r);\n                  });\n                  break;\n\n                default:\n                  (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "checkLVal", this).call(this, t, e, s, i, r);\n              }\n            }\n          }, {\n            key: "checkDuplicatedProto",\n            value: function checkDuplicatedProto(t, e, s) {\n              if ("SpreadElement" === t.type || t.computed || t.method || t.shorthand) return;\n              var i = t.key;\n              "__proto__" === ("Identifier" === i.type ? i.name : String(i.value)) && "init" === t.kind && (e.used && (s && -1 === s.doubleProto ? s.doubleProto = i.start : this.raise(i.start, f.DuplicateProto)), e.used = !0);\n            }\n          }, {\n            key: "isValidDirective",\n            value: function isValidDirective(t) {\n              return !("ExpressionStatement" !== t.type || "Literal" !== t.expression.type || "string" != typeof t.expression.value || t.expression.extra && t.expression.extra.parenthesized);\n            }\n          }, {\n            key: "stmtToDirective",\n            value: function stmtToDirective(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "stmtToDirective", this).call(this, t),\n                  s = t.expression.value;\n              return e.value.value = s, e;\n            }\n          }, {\n            key: "parseBlockBody",\n            value: function parseBlockBody(t, e, s, i) {\n              var _this3 = this;\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseBlockBody", this).call(this, t, e, s, i);\n              var r = t.directives.map(function (t) {\n                return _this3.directiveToStmt(t);\n              });\n              t.body = r.concat(t.body), delete t.directives;\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              this.parseMethod(e, s, i, r, a, "ClassMethod", !0), e.typeParameters && (e.value.typeParameters = e.typeParameters, delete e.typeParameters), t.body.push(e);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom(t) {\n              switch (this.state.type) {\n                case n.num:\n                case n.string:\n                  return this.estreeParseLiteral(this.state.value);\n\n                case n.regexp:\n                  return this.estreeParseRegExpLiteral(this.state.value);\n\n                case n.bigint:\n                  return this.estreeParseBigIntLiteral(this.state.value);\n\n                case n._null:\n                  return this.estreeParseLiteral(null);\n\n                case n._true:\n                  return this.estreeParseLiteral(!0);\n\n                case n._false:\n                  return this.estreeParseLiteral(!1);\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseExprAtom", this).call(this, t);\n              }\n            }\n          }, {\n            key: "parseLiteral",\n            value: function parseLiteral(t, e, s, i) {\n              var r = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseLiteral", this).call(this, t, e, s, i);\n              return r.raw = r.extra.raw, delete r.extra, r;\n            }\n          }, {\n            key: "parseFunctionBody",\n            value: function parseFunctionBody(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseFunctionBody", this).call(this, t, e, s), t.expression = "BlockStatement" !== t.body.type;\n            }\n          }, {\n            key: "parseMethod",\n            value: function parseMethod(t, e, s, i, r, a) {\n              var n = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : !1;\n              var o = this.startNode();\n              return o.kind = t.kind, o = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseMethod", this).call(this, o, e, s, i, r, a, n), o.type = "FunctionExpression", delete o.kind, t.value = o, a = "ClassMethod" === a ? "MethodDefinition" : a, this.finishNode(t, a);\n            }\n          }, {\n            key: "parseObjectMethod",\n            value: function parseObjectMethod(t, e, s, i, r) {\n              var a = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseObjectMethod", this).call(this, t, e, s, i, r);\n              return a && (a.type = "Property", "method" === a.kind && (a.kind = "init"), a.shorthand = !1), a;\n            }\n          }, {\n            key: "parseObjectProperty",\n            value: function parseObjectProperty(t, e, s, i, r) {\n              var a = (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseObjectProperty", this).call(this, t, e, s, i, r);\n              return a && (a.kind = "init", a.type = "Property"), a;\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return D(t) ? (this.toAssignable(t.value), t) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toAssignable", this).call(this, t);\n            }\n          }, {\n            key: "toAssignableObjectExpressionProp",\n            value: function toAssignableObjectExpressionProp(t, e) {\n              if ("get" === t.kind || "set" === t.kind) throw this.raise(t.key.start, f.PatternHasAccessor);\n              if (t.method) throw this.raise(t.key.start, f.PatternHasMethod);\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toAssignableObjectExpressionProp", this).call(this, t, e);\n            }\n          }, {\n            key: "finishCallExpression",\n            value: function finishCallExpression(t, e) {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "finishCallExpression", this).call(this, t, e), "Import" === t.callee.type && (t.type = "ImportExpression", t.source = t.arguments[0], delete t.arguments, delete t.callee), t;\n            }\n          }, {\n            key: "toReferencedListDeep",\n            value: function toReferencedListDeep(t, e) {\n              t && (0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "toReferencedListDeep", this).call(this, t, e);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              switch ((0, _get8.default)((0, _getPrototypeOf2.default)(_class.prototype), "parseExport", this).call(this, t), t.type) {\n                case "ExportAllDeclaration":\n                  t.exported = null;\n                  break;\n\n                case "ExportNamedDeclaration":\n                  1 === t.specifiers.length && "ExportNamespaceSpecifier" === t.specifiers[0].type && (t.type = "ExportAllDeclaration", t.exported = t.specifiers[0].exported, delete t.specifiers);\n              }\n\n              return t;\n            }\n          }]);\n          return _class;\n        }(t);\n      },\n      jsx: function jsx(t) {\n        return /*#__PURE__*/function (_t9) {\n          (0, _inherits2.default)(_class2, _t9);\n\n          var _super4 = _createSuper(_class2);\n\n          function _class2() {\n            (0, _classCallCheck2.default)(this, _class2);\n            return _super4.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class2, [{\n            key: "jsxReadToken",\n            value: function jsxReadToken() {\n              var t = "",\n                  e = this.state.pos;\n\n              for (;;) {\n                if (this.state.pos >= this.length) throw this.raise(this.state.start, J.UnterminatedJsxContent);\n\n                var _s8 = this.input.charCodeAt(this.state.pos);\n\n                switch (_s8) {\n                  case 60:\n                  case 123:\n                    return this.state.pos === this.state.start ? 60 === _s8 && this.state.exprAllowed ? (++this.state.pos, this.finishToken(n.jsxTagStart)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, _s8) : (t += this.input.slice(e, this.state.pos), this.finishToken(n.jsxText, t));\n\n                  case 38:\n                    t += this.input.slice(e, this.state.pos), t += this.jsxReadEntity(), e = this.state.pos;\n                    break;\n\n                  default:\n                    p(_s8) ? (t += this.input.slice(e, this.state.pos), t += this.jsxReadNewLine(!0), e = this.state.pos) : ++this.state.pos;\n                }\n              }\n            }\n          }, {\n            key: "jsxReadNewLine",\n            value: function jsxReadNewLine(t) {\n              var e = this.input.charCodeAt(this.state.pos);\n              var s;\n              return ++this.state.pos, 13 === e && 10 === this.input.charCodeAt(this.state.pos) ? (++this.state.pos, s = t ? "\\n" : "\\r\\n") : s = String.fromCharCode(e), ++this.state.curLine, this.state.lineStart = this.state.pos, s;\n            }\n          }, {\n            key: "jsxReadString",\n            value: function jsxReadString(t) {\n              var e = "",\n                  s = ++this.state.pos;\n\n              for (;;) {\n                if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedString);\n\n                var _i6 = this.input.charCodeAt(this.state.pos);\n\n                if (_i6 === t) break;\n                38 === _i6 ? (e += this.input.slice(s, this.state.pos), e += this.jsxReadEntity(), s = this.state.pos) : p(_i6) ? (e += this.input.slice(s, this.state.pos), e += this.jsxReadNewLine(!1), s = this.state.pos) : ++this.state.pos;\n              }\n\n              return e += this.input.slice(s, this.state.pos++), this.finishToken(n.string, e);\n            }\n          }, {\n            key: "jsxReadEntity",\n            value: function jsxReadEntity() {\n              var t,\n                  e = "",\n                  s = 0,\n                  i = this.input[this.state.pos];\n              var r = ++this.state.pos;\n\n              for (; this.state.pos < this.length && s++ < 10;) {\n                if (i = this.input[this.state.pos++], ";" === i) {\n                  "#" === e[0] ? "x" === e[1] ? (e = e.substr(2), W.test(e) && (t = String.fromCodePoint(parseInt(e, 16)))) : (e = e.substr(1), K.test(e) && (t = String.fromCodePoint(parseInt(e, 10)))) : t = H[e];\n                  break;\n                }\n\n                e += i;\n              }\n\n              return t || (this.state.pos = r, "&");\n            }\n          }, {\n            key: "jsxReadWord",\n            value: function jsxReadWord() {\n              var t;\n              var e = this.state.pos;\n\n              do {\n                t = this.input.charCodeAt(++this.state.pos);\n              } while (S(t) || 45 === t);\n\n              return this.finishToken(n.jsxName, this.input.slice(e, this.state.pos));\n            }\n          }, {\n            key: "jsxParseIdentifier",\n            value: function jsxParseIdentifier() {\n              var t = this.startNode();\n              return this.match(n.jsxName) ? t.name = this.state.value : this.state.type.keyword ? t.name = this.state.type.keyword : this.unexpected(), this.next(), this.finishNode(t, "JSXIdentifier");\n            }\n          }, {\n            key: "jsxParseNamespacedName",\n            value: function jsxParseNamespacedName() {\n              var t = this.state.start,\n                  e = this.state.startLoc,\n                  s = this.jsxParseIdentifier();\n              if (!this.eat(n.colon)) return s;\n              var i = this.startNodeAt(t, e);\n              return i.namespace = s, i.name = this.jsxParseIdentifier(), this.finishNode(i, "JSXNamespacedName");\n            }\n          }, {\n            key: "jsxParseElementName",\n            value: function jsxParseElementName() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              var s = this.jsxParseNamespacedName();\n              if ("JSXNamespacedName" === s.type) return s;\n\n              for (; this.eat(n.dot);) {\n                var _i7 = this.startNodeAt(t, e);\n\n                _i7.object = s, _i7.property = this.jsxParseIdentifier(), s = this.finishNode(_i7, "JSXMemberExpression");\n              }\n\n              return s;\n            }\n          }, {\n            key: "jsxParseAttributeValue",\n            value: function jsxParseAttributeValue() {\n              var t;\n\n              switch (this.state.type) {\n                case n.braceL:\n                  return t = this.startNode(), this.next(), t = this.jsxParseExpressionContainer(t), "JSXEmptyExpression" === t.expression.type && this.raise(t.start, J.AttributeIsEmpty), t;\n\n                case n.jsxTagStart:\n                case n.string:\n                  return this.parseExprAtom();\n\n                default:\n                  throw this.raise(this.state.start, J.UnsupportedJsxValue);\n              }\n            }\n          }, {\n            key: "jsxParseEmptyExpression",\n            value: function jsxParseEmptyExpression() {\n              var t = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n              return this.finishNodeAt(t, "JSXEmptyExpression", this.state.start, this.state.startLoc);\n            }\n          }, {\n            key: "jsxParseSpreadChild",\n            value: function jsxParseSpreadChild(t) {\n              return this.next(), t.expression = this.parseExpression(), this.expect(n.braceR), this.finishNode(t, "JSXSpreadChild");\n            }\n          }, {\n            key: "jsxParseExpressionContainer",\n            value: function jsxParseExpressionContainer(t) {\n              return this.match(n.braceR) ? t.expression = this.jsxParseEmptyExpression() : t.expression = this.parseExpression(), this.expect(n.braceR), this.finishNode(t, "JSXExpressionContainer");\n            }\n          }, {\n            key: "jsxParseAttribute",\n            value: function jsxParseAttribute() {\n              var t = this.startNode();\n              return this.eat(n.braceL) ? (this.expect(n.ellipsis), t.argument = this.parseMaybeAssign(), this.expect(n.braceR), this.finishNode(t, "JSXSpreadAttribute")) : (t.name = this.jsxParseNamespacedName(), t.value = this.eat(n.eq) ? this.jsxParseAttributeValue() : null, this.finishNode(t, "JSXAttribute"));\n            }\n          }, {\n            key: "jsxParseOpeningElementAt",\n            value: function jsxParseOpeningElementAt(t, e) {\n              var s = this.startNodeAt(t, e);\n              return this.match(n.jsxTagEnd) ? (this.expect(n.jsxTagEnd), this.finishNode(s, "JSXOpeningFragment")) : (s.name = this.jsxParseElementName(), this.jsxParseOpeningElementAfterName(s));\n            }\n          }, {\n            key: "jsxParseOpeningElementAfterName",\n            value: function jsxParseOpeningElementAfterName(t) {\n              var e = [];\n\n              for (; !this.match(n.slash) && !this.match(n.jsxTagEnd);) {\n                e.push(this.jsxParseAttribute());\n              }\n\n              return t.attributes = e, t.selfClosing = this.eat(n.slash), this.expect(n.jsxTagEnd), this.finishNode(t, "JSXOpeningElement");\n            }\n          }, {\n            key: "jsxParseClosingElementAt",\n            value: function jsxParseClosingElementAt(t, e) {\n              var s = this.startNodeAt(t, e);\n              return this.match(n.jsxTagEnd) ? (this.expect(n.jsxTagEnd), this.finishNode(s, "JSXClosingFragment")) : (s.name = this.jsxParseElementName(), this.expect(n.jsxTagEnd), this.finishNode(s, "JSXClosingElement"));\n            }\n          }, {\n            key: "jsxParseElementAt",\n            value: function jsxParseElementAt(t, e) {\n              var s = this.startNodeAt(t, e),\n                  i = [],\n                  r = this.jsxParseOpeningElementAt(t, e);\n              var a = null;\n\n              if (!r.selfClosing) {\n                t: for (;;) {\n                  switch (this.state.type) {\n                    case n.jsxTagStart:\n                      if (t = this.state.start, e = this.state.startLoc, this.next(), this.eat(n.slash)) {\n                        a = this.jsxParseClosingElementAt(t, e);\n                        break t;\n                      }\n\n                      i.push(this.jsxParseElementAt(t, e));\n                      break;\n\n                    case n.jsxText:\n                      i.push(this.parseExprAtom());\n                      break;\n\n                    case n.braceL:\n                      {\n                        var _t10 = this.startNode();\n\n                        this.next(), this.match(n.ellipsis) ? i.push(this.jsxParseSpreadChild(_t10)) : i.push(this.jsxParseExpressionContainer(_t10));\n                        break;\n                      }\n\n                    default:\n                      throw this.unexpected();\n                  }\n                }\n\n                X(r) && !X(a) ? this.raise(a.start, J.MissingClosingTagFragment) : !X(r) && X(a) ? this.raise(a.start, J.MissingClosingTagElement, G(r.name)) : X(r) || X(a) || G(a.name) !== G(r.name) && this.raise(a.start, J.MissingClosingTagElement, G(r.name));\n              }\n\n              if (X(r) ? (s.openingFragment = r, s.closingFragment = a) : (s.openingElement = r, s.closingElement = a), s.children = i, this.isRelational("<")) throw this.raise(this.state.start, J.UnwrappedAdjacentJSXElements);\n              return X(r) ? this.finishNode(s, "JSXFragment") : this.finishNode(s, "JSXElement");\n            }\n          }, {\n            key: "jsxParseElement",\n            value: function jsxParseElement() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              return this.next(), this.jsxParseElementAt(t, e);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom(t) {\n              return this.match(n.jsxText) ? this.parseLiteral(this.state.value, "JSXText") : this.match(n.jsxTagStart) ? this.jsxParseElement() : this.isRelational("<") && 33 !== this.input.charCodeAt(this.state.pos) ? (this.finishToken(n.jsxTagStart), this.jsxParseElement()) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "parseExprAtom", this).call(this, t);\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              if (this.state.inPropertyName) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, t);\n              var e = this.curContext();\n              if (e === x.j_expr) return this.jsxReadToken();\n\n              if (e === x.j_oTag || e === x.j_cTag) {\n                if (w(t)) return this.jsxReadWord();\n                if (62 === t) return ++this.state.pos, this.finishToken(n.jsxTagEnd);\n                if ((34 === t || 39 === t) && e === x.j_oTag) return this.jsxReadString(t);\n              }\n\n              return 60 === t && this.state.exprAllowed && 33 !== this.input.charCodeAt(this.state.pos + 1) ? (++this.state.pos, this.finishToken(n.jsxTagStart)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "getTokenFromCode", this).call(this, t);\n            }\n          }, {\n            key: "updateContext",\n            value: function updateContext(t) {\n              if (this.match(n.braceL)) {\n                var _e7 = this.curContext();\n\n                _e7 === x.j_oTag ? this.state.context.push(x.braceExpression) : _e7 === x.j_expr ? this.state.context.push(x.templateQuasi) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "updateContext", this).call(this, t), this.state.exprAllowed = !0;\n              } else {\n                if (!this.match(n.slash) || t !== n.jsxTagStart) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class2.prototype), "updateContext", this).call(this, t);\n                this.state.context.length -= 2, this.state.context.push(x.j_cTag), this.state.exprAllowed = !1;\n              }\n            }\n          }]);\n          return _class2;\n        }(t);\n      },\n      flow: function flow(t) {\n        return /*#__PURE__*/function (_t11) {\n          (0, _inherits2.default)(_class3, _t11);\n\n          var _super5 = _createSuper(_class3);\n\n          function _class3(t, e) {\n            var _this4;\n\n            (0, _classCallCheck2.default)(this, _class3);\n            _this4 = _super5.call(this, t, e), _this4.flowPragma = void 0;\n            return _this4;\n          }\n\n          (0, _createClass2.default)(_class3, [{\n            key: "shouldParseTypes",\n            value: function shouldParseTypes() {\n              return this.getPluginOption("flow", "all") || "flow" === this.flowPragma;\n            }\n          }, {\n            key: "shouldParseEnums",\n            value: function shouldParseEnums() {\n              return !!this.getPluginOption("flow", "enums");\n            }\n          }, {\n            key: "finishToken",\n            value: function finishToken(t, e) {\n              return t !== n.string && t !== n.semi && t !== n.interpreterDirective && void 0 === this.flowPragma && (this.flowPragma = null), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "finishToken", this).call(this, t, e);\n            }\n          }, {\n            key: "addComment",\n            value: function addComment(t) {\n              if (void 0 === this.flowPragma) {\n                var _e8 = z.exec(t.value);\n\n                if (_e8) {\n                  if ("flow" === _e8[1]) this.flowPragma = "flow";else {\n                    if ("noflow" !== _e8[1]) throw new Error("Unexpected flow pragma");\n                    this.flowPragma = "noflow";\n                  }\n                } else ;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "addComment", this).call(this, t);\n            }\n          }, {\n            key: "flowParseTypeInitialiser",\n            value: function flowParseTypeInitialiser(t) {\n              var e = this.state.inType;\n              this.state.inType = !0, this.expect(t || n.colon);\n              var s = this.flowParseType();\n              return this.state.inType = e, s;\n            }\n          }, {\n            key: "flowParsePredicate",\n            value: function flowParsePredicate() {\n              var t = this.startNode(),\n                  e = this.state.startLoc,\n                  s = this.state.start;\n              this.expect(n.modulo);\n              var i = this.state.startLoc;\n              return this.expectContextual("checks"), e.line === i.line && e.column === i.column - 1 || this.raise(s, j.UnexpectedSpaceBetweenModuloChecks), this.eat(n.parenL) ? (t.value = this.parseExpression(), this.expect(n.parenR), this.finishNode(t, "DeclaredPredicate")) : this.finishNode(t, "InferredPredicate");\n            }\n          }, {\n            key: "flowParseTypeAndPredicateInitialiser",\n            value: function flowParseTypeAndPredicateInitialiser() {\n              var t = this.state.inType;\n              this.state.inType = !0, this.expect(n.colon);\n              var e = null,\n                  s = null;\n              return this.match(n.modulo) ? (this.state.inType = t, s = this.flowParsePredicate()) : (e = this.flowParseType(), this.state.inType = t, this.match(n.modulo) && (s = this.flowParsePredicate())), [e, s];\n            }\n          }, {\n            key: "flowParseDeclareClass",\n            value: function flowParseDeclareClass(t) {\n              return this.next(), this.flowParseInterfaceish(t, !0), this.finishNode(t, "DeclareClass");\n            }\n          }, {\n            key: "flowParseDeclareFunction",\n            value: function flowParseDeclareFunction(t) {\n              var _this$flowParseTypeAn, _this$flowParseTypeAn2;\n\n              this.next();\n              var e = t.id = this.parseIdentifier(),\n                  s = this.startNode(),\n                  i = this.startNode();\n              this.isRelational("<") ? s.typeParameters = this.flowParseTypeParameterDeclaration() : s.typeParameters = null, this.expect(n.parenL);\n              var r = this.flowParseFunctionTypeParams();\n              return s.params = r.params, s.rest = r.rest, this.expect(n.parenR), (_this$flowParseTypeAn = this.flowParseTypeAndPredicateInitialiser(), _this$flowParseTypeAn2 = (0, _slicedToArray2.default)(_this$flowParseTypeAn, 2), s.returnType = _this$flowParseTypeAn2[0], t.predicate = _this$flowParseTypeAn2[1], _this$flowParseTypeAn), i.typeAnnotation = this.finishNode(s, "FunctionTypeAnnotation"), e.typeAnnotation = this.finishNode(i, "TypeAnnotation"), this.resetEndLocation(e), this.semicolon(), this.finishNode(t, "DeclareFunction");\n            }\n          }, {\n            key: "flowParseDeclare",\n            value: function flowParseDeclare(t, e) {\n              if (this.match(n._class)) return this.flowParseDeclareClass(t);\n              if (this.match(n._function)) return this.flowParseDeclareFunction(t);\n              if (this.match(n._var)) return this.flowParseDeclareVariable(t);\n              if (this.eatContextual("module")) return this.match(n.dot) ? this.flowParseDeclareModuleExports(t) : (e && this.raise(this.state.lastTokStart, j.NestedDeclareModule), this.flowParseDeclareModule(t));\n              if (this.isContextual("type")) return this.flowParseDeclareTypeAlias(t);\n              if (this.isContextual("opaque")) return this.flowParseDeclareOpaqueType(t);\n              if (this.isContextual("interface")) return this.flowParseDeclareInterface(t);\n              if (this.match(n._export)) return this.flowParseDeclareExportDeclaration(t, e);\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParseDeclareVariable",\n            value: function flowParseDeclareVariable(t) {\n              return this.next(), t.id = this.flowParseTypeAnnotatableIdentifier(!0), this.scope.declareName(t.id.name, 5, t.id.start), this.semicolon(), this.finishNode(t, "DeclareVariable");\n            }\n          }, {\n            key: "flowParseDeclareModule",\n            value: function flowParseDeclareModule(t) {\n              var _this5 = this;\n\n              this.scope.enter(0), this.match(n.string) ? t.id = this.parseExprAtom() : t.id = this.parseIdentifier();\n              var e = t.body = this.startNode(),\n                  s = e.body = [];\n\n              for (this.expect(n.braceL); !this.match(n.braceR);) {\n                var _t12 = this.startNode();\n\n                this.match(n._import) ? (this.next(), this.isContextual("type") || this.match(n._typeof) || this.raise(this.state.lastTokStart, j.InvalidNonTypeImportInDeclareModule), this.parseImport(_t12)) : (this.expectContextual("declare", j.UnsupportedStatementInDeclareModule), _t12 = this.flowParseDeclare(_t12, !0)), s.push(_t12);\n              }\n\n              this.scope.exit(), this.expect(n.braceR), this.finishNode(e, "BlockStatement");\n              var i = null,\n                  r = !1;\n              return s.forEach(function (t) {\n                !function (t) {\n                  return "DeclareExportAllDeclaration" === t.type || "DeclareExportDeclaration" === t.type && (!t.declaration || "TypeAlias" !== t.declaration.type && "InterfaceDeclaration" !== t.declaration.type);\n                }(t) ? "DeclareModuleExports" === t.type && (r && _this5.raise(t.start, j.DuplicateDeclareModuleExports), "ES" === i && _this5.raise(t.start, j.AmbiguousDeclareModuleKind), i = "CommonJS", r = !0) : ("CommonJS" === i && _this5.raise(t.start, j.AmbiguousDeclareModuleKind), i = "ES");\n              }), t.kind = i || "CommonJS", this.finishNode(t, "DeclareModule");\n            }\n          }, {\n            key: "flowParseDeclareExportDeclaration",\n            value: function flowParseDeclareExportDeclaration(t, e) {\n              if (this.expect(n._export), this.eat(n._default)) return this.match(n._function) || this.match(n._class) ? t.declaration = this.flowParseDeclare(this.startNode()) : (t.declaration = this.flowParseType(), this.semicolon()), t.default = !0, this.finishNode(t, "DeclareExportDeclaration");\n\n              if (this.match(n._const) || this.isLet() || (this.isContextual("type") || this.isContextual("interface")) && !e) {\n                var _t13 = this.state.value,\n                    _e9 = V[_t13];\n                throw this.raise(this.state.start, j.UnsupportedDeclareExportKind, _t13, _e9);\n              }\n\n              if (this.match(n._var) || this.match(n._function) || this.match(n._class) || this.isContextual("opaque")) return t.declaration = this.flowParseDeclare(this.startNode()), t.default = !1, this.finishNode(t, "DeclareExportDeclaration");\n              if (this.match(n.star) || this.match(n.braceL) || this.isContextual("interface") || this.isContextual("type") || this.isContextual("opaque")) return "ExportNamedDeclaration" === (t = this.parseExport(t)).type && (t.type = "ExportDeclaration", t.default = !1, delete t.exportKind), t.type = "Declare" + t.type, t;\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParseDeclareModuleExports",\n            value: function flowParseDeclareModuleExports(t) {\n              return this.next(), this.expectContextual("exports"), t.typeAnnotation = this.flowParseTypeAnnotation(), this.semicolon(), this.finishNode(t, "DeclareModuleExports");\n            }\n          }, {\n            key: "flowParseDeclareTypeAlias",\n            value: function flowParseDeclareTypeAlias(t) {\n              return this.next(), this.flowParseTypeAlias(t), t.type = "DeclareTypeAlias", t;\n            }\n          }, {\n            key: "flowParseDeclareOpaqueType",\n            value: function flowParseDeclareOpaqueType(t) {\n              return this.next(), this.flowParseOpaqueType(t, !0), t.type = "DeclareOpaqueType", t;\n            }\n          }, {\n            key: "flowParseDeclareInterface",\n            value: function flowParseDeclareInterface(t) {\n              return this.next(), this.flowParseInterfaceish(t), this.finishNode(t, "DeclareInterface");\n            }\n          }, {\n            key: "flowParseInterfaceish",\n            value: function flowParseInterfaceish(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n              if (t.id = this.flowParseRestrictedIdentifier(!e, !0), this.scope.declareName(t.id.name, e ? 17 : 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.extends = [], t.implements = [], t.mixins = [], this.eat(n._extends)) do {\n                t.extends.push(this.flowParseInterfaceExtends());\n              } while (!e && this.eat(n.comma));\n\n              if (this.isContextual("mixins")) {\n                this.next();\n\n                do {\n                  t.mixins.push(this.flowParseInterfaceExtends());\n                } while (this.eat(n.comma));\n              }\n\n              if (this.isContextual("implements")) {\n                this.next();\n\n                do {\n                  t.implements.push(this.flowParseInterfaceExtends());\n                } while (this.eat(n.comma));\n              }\n\n              t.body = this.flowParseObjectType({\n                allowStatic: e,\n                allowExact: !1,\n                allowSpread: !1,\n                allowProto: e,\n                allowInexact: !1\n              });\n            }\n          }, {\n            key: "flowParseInterfaceExtends",\n            value: function flowParseInterfaceExtends() {\n              var t = this.startNode();\n              return t.id = this.flowParseQualifiedTypeIdentifier(), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterInstantiation() : t.typeParameters = null, this.finishNode(t, "InterfaceExtends");\n            }\n          }, {\n            key: "flowParseInterface",\n            value: function flowParseInterface(t) {\n              return this.flowParseInterfaceish(t), this.finishNode(t, "InterfaceDeclaration");\n            }\n          }, {\n            key: "checkNotUnderscore",\n            value: function checkNotUnderscore(t) {\n              "_" === t && this.raise(this.state.start, j.UnexpectedReservedUnderscore);\n            }\n          }, {\n            key: "checkReservedType",\n            value: function checkReservedType(t, e, s) {\n              _.has(t) && this.raise(e, s ? j.AssignReservedType : j.UnexpectedReservedType, t);\n            }\n          }, {\n            key: "flowParseRestrictedIdentifier",\n            value: function flowParseRestrictedIdentifier(t, e) {\n              return this.checkReservedType(this.state.value, this.state.start, e), this.parseIdentifier(t);\n            }\n          }, {\n            key: "flowParseTypeAlias",\n            value: function flowParseTypeAlias(t) {\n              return t.id = this.flowParseRestrictedIdentifier(!1, !0), this.scope.declareName(t.id.name, 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.right = this.flowParseTypeInitialiser(n.eq), this.semicolon(), this.finishNode(t, "TypeAlias");\n            }\n          }, {\n            key: "flowParseOpaqueType",\n            value: function flowParseOpaqueType(t, e) {\n              return this.expectContextual("type"), t.id = this.flowParseRestrictedIdentifier(!0, !0), this.scope.declareName(t.id.name, 9, t.id.start), this.isRelational("<") ? t.typeParameters = this.flowParseTypeParameterDeclaration() : t.typeParameters = null, t.supertype = null, this.match(n.colon) && (t.supertype = this.flowParseTypeInitialiser(n.colon)), t.impltype = null, e || (t.impltype = this.flowParseTypeInitialiser(n.eq)), this.semicolon(), this.finishNode(t, "OpaqueType");\n            }\n          }, {\n            key: "flowParseTypeParameter",\n            value: function flowParseTypeParameter() {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n              var e = this.state.start,\n                  s = this.startNode(),\n                  i = this.flowParseVariance(),\n                  r = this.flowParseTypeAnnotatableIdentifier();\n              return s.name = r.name, s.variance = i, s.bound = r.typeAnnotation, this.match(n.eq) ? (this.eat(n.eq), s.default = this.flowParseType()) : t && this.raise(e, j.MissingTypeParamDefault), this.finishNode(s, "TypeParameter");\n            }\n          }, {\n            key: "flowParseTypeParameterDeclaration",\n            value: function flowParseTypeParameterDeclaration() {\n              var t = this.state.inType,\n                  e = this.startNode();\n              e.params = [], this.state.inType = !0, this.isRelational("<") || this.match(n.jsxTagStart) ? this.next() : this.unexpected();\n              var s = !1;\n\n              do {\n                var _t14 = this.flowParseTypeParameter(s);\n\n                e.params.push(_t14), _t14.default && (s = !0), this.isRelational(">") || this.expect(n.comma);\n              } while (!this.isRelational(">"));\n\n              return this.expectRelational(">"), this.state.inType = t, this.finishNode(e, "TypeParameterDeclaration");\n            }\n          }, {\n            key: "flowParseTypeParameterInstantiation",\n            value: function flowParseTypeParameterInstantiation() {\n              var t = this.startNode(),\n                  e = this.state.inType;\n              t.params = [], this.state.inType = !0, this.expectRelational("<");\n              var s = this.state.noAnonFunctionType;\n\n              for (this.state.noAnonFunctionType = !1; !this.isRelational(">");) {\n                t.params.push(this.flowParseType()), this.isRelational(">") || this.expect(n.comma);\n              }\n\n              return this.state.noAnonFunctionType = s, this.expectRelational(">"), this.state.inType = e, this.finishNode(t, "TypeParameterInstantiation");\n            }\n          }, {\n            key: "flowParseTypeParameterInstantiationCallOrNew",\n            value: function flowParseTypeParameterInstantiationCallOrNew() {\n              var t = this.startNode(),\n                  e = this.state.inType;\n\n              for (t.params = [], this.state.inType = !0, this.expectRelational("<"); !this.isRelational(">");) {\n                t.params.push(this.flowParseTypeOrImplicitInstantiation()), this.isRelational(">") || this.expect(n.comma);\n              }\n\n              return this.expectRelational(">"), this.state.inType = e, this.finishNode(t, "TypeParameterInstantiation");\n            }\n          }, {\n            key: "flowParseInterfaceType",\n            value: function flowParseInterfaceType() {\n              var t = this.startNode();\n              if (this.expectContextual("interface"), t.extends = [], this.eat(n._extends)) do {\n                t.extends.push(this.flowParseInterfaceExtends());\n              } while (this.eat(n.comma));\n              return t.body = this.flowParseObjectType({\n                allowStatic: !1,\n                allowExact: !1,\n                allowSpread: !1,\n                allowProto: !1,\n                allowInexact: !1\n              }), this.finishNode(t, "InterfaceTypeAnnotation");\n            }\n          }, {\n            key: "flowParseObjectPropertyKey",\n            value: function flowParseObjectPropertyKey() {\n              return this.match(n.num) || this.match(n.string) ? this.parseExprAtom() : this.parseIdentifier(!0);\n            }\n          }, {\n            key: "flowParseObjectTypeIndexer",\n            value: function flowParseObjectTypeIndexer(t, e, s) {\n              return t.static = e, this.lookahead().type === n.colon ? (t.id = this.flowParseObjectPropertyKey(), t.key = this.flowParseTypeInitialiser()) : (t.id = null, t.key = this.flowParseType()), this.expect(n.bracketR), t.value = this.flowParseTypeInitialiser(), t.variance = s, this.finishNode(t, "ObjectTypeIndexer");\n            }\n          }, {\n            key: "flowParseObjectTypeInternalSlot",\n            value: function flowParseObjectTypeInternalSlot(t, e) {\n              return t.static = e, t.id = this.flowParseObjectPropertyKey(), this.expect(n.bracketR), this.expect(n.bracketR), this.isRelational("<") || this.match(n.parenL) ? (t.method = !0, t.optional = !1, t.value = this.flowParseObjectTypeMethodish(this.startNodeAt(t.start, t.loc.start))) : (t.method = !1, this.eat(n.question) && (t.optional = !0), t.value = this.flowParseTypeInitialiser()), this.finishNode(t, "ObjectTypeInternalSlot");\n            }\n          }, {\n            key: "flowParseObjectTypeMethodish",\n            value: function flowParseObjectTypeMethodish(t) {\n              for (t.params = [], t.rest = null, t.typeParameters = null, this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration()), this.expect(n.parenL); !this.match(n.parenR) && !this.match(n.ellipsis);) {\n                t.params.push(this.flowParseFunctionTypeParam()), this.match(n.parenR) || this.expect(n.comma);\n              }\n\n              return this.eat(n.ellipsis) && (t.rest = this.flowParseFunctionTypeParam()), this.expect(n.parenR), t.returnType = this.flowParseTypeInitialiser(), this.finishNode(t, "FunctionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseObjectTypeCallProperty",\n            value: function flowParseObjectTypeCallProperty(t, e) {\n              var s = this.startNode();\n              return t.static = e, t.value = this.flowParseObjectTypeMethodish(s), this.finishNode(t, "ObjectTypeCallProperty");\n            }\n          }, {\n            key: "flowParseObjectType",\n            value: function flowParseObjectType(_ref4) {\n              var t = _ref4.allowStatic,\n                  e = _ref4.allowExact,\n                  s = _ref4.allowSpread,\n                  i = _ref4.allowProto,\n                  r = _ref4.allowInexact;\n              var a = this.state.inType;\n              this.state.inType = !0;\n              var o = this.startNode();\n              var h, p;\n              o.callProperties = [], o.properties = [], o.indexers = [], o.internalSlots = [];\n              var c = !1;\n\n              for (e && this.match(n.braceBarL) ? (this.expect(n.braceBarL), h = n.braceBarR, p = !0) : (this.expect(n.braceL), h = n.braceR, p = !1), o.exact = p; !this.match(h);) {\n                var _e10 = !1,\n                    _a = null,\n                    _h = null;\n\n                var _u = this.startNode();\n\n                if (i && this.isContextual("proto")) {\n                  var _e11 = this.lookahead();\n\n                  _e11.type !== n.colon && _e11.type !== n.question && (this.next(), _a = this.state.start, t = !1);\n                }\n\n                if (t && this.isContextual("static")) {\n                  var _t15 = this.lookahead();\n\n                  _t15.type !== n.colon && _t15.type !== n.question && (this.next(), _e10 = !0);\n                }\n\n                var _l = this.flowParseVariance();\n\n                if (this.eat(n.bracketL)) null != _a && this.unexpected(_a), this.eat(n.bracketL) ? (_l && this.unexpected(_l.start), o.internalSlots.push(this.flowParseObjectTypeInternalSlot(_u, _e10))) : o.indexers.push(this.flowParseObjectTypeIndexer(_u, _e10, _l));else if (this.match(n.parenL) || this.isRelational("<")) null != _a && this.unexpected(_a), _l && this.unexpected(_l.start), o.callProperties.push(this.flowParseObjectTypeCallProperty(_u, _e10));else {\n                  var _t16 = "init";\n\n                  if (this.isContextual("get") || this.isContextual("set")) {\n                    var _e12 = this.lookahead();\n\n                    _e12.type !== n.name && _e12.type !== n.string && _e12.type !== n.num || (_t16 = this.state.value, this.next());\n                  }\n\n                  var _i8 = this.flowParseObjectTypeProperty(_u, _e10, _a, _l, _t16, s, null != r ? r : !p);\n\n                  null === _i8 ? (c = !0, _h = this.state.lastTokStart) : o.properties.push(_i8);\n                }\n                this.flowObjectTypeSemicolon(), !_h || this.match(n.braceR) || this.match(n.braceBarR) || this.raise(_h, j.UnexpectedExplicitInexactInObject);\n              }\n\n              this.expect(h), s && (o.inexact = c);\n              var u = this.finishNode(o, "ObjectTypeAnnotation");\n              return this.state.inType = a, u;\n            }\n          }, {\n            key: "flowParseObjectTypeProperty",\n            value: function flowParseObjectTypeProperty(t, e, s, i, r, a, o) {\n              if (this.eat(n.ellipsis)) {\n                return this.match(n.comma) || this.match(n.semi) || this.match(n.braceR) || this.match(n.braceBarR) ? (a ? o || this.raise(this.state.lastTokStart, j.InexactInsideExact) : this.raise(this.state.lastTokStart, j.InexactInsideNonObject), i && this.raise(i.start, j.InexactVariance), null) : (a || this.raise(this.state.lastTokStart, j.UnexpectedSpreadType), null != s && this.unexpected(s), i && this.raise(i.start, j.SpreadVariance), t.argument = this.flowParseType(), this.finishNode(t, "ObjectTypeSpreadProperty"));\n              }\n\n              {\n                t.key = this.flowParseObjectPropertyKey(), t.static = e, t.proto = null != s, t.kind = r;\n\n                var _a2 = !1;\n\n                return this.isRelational("<") || this.match(n.parenL) ? (t.method = !0, null != s && this.unexpected(s), i && this.unexpected(i.start), t.value = this.flowParseObjectTypeMethodish(this.startNodeAt(t.start, t.loc.start)), "get" !== r && "set" !== r || this.flowCheckGetterSetterParams(t)) : ("init" !== r && this.unexpected(), t.method = !1, this.eat(n.question) && (_a2 = !0), t.value = this.flowParseTypeInitialiser(), t.variance = i), t.optional = _a2, this.finishNode(t, "ObjectTypeProperty");\n              }\n            }\n          }, {\n            key: "flowCheckGetterSetterParams",\n            value: function flowCheckGetterSetterParams(t) {\n              var e = "get" === t.kind ? 0 : 1,\n                  s = t.start;\n              t.value.params.length + (t.value.rest ? 1 : 0) !== e && ("get" === t.kind ? this.raise(s, f.BadGetterArity) : this.raise(s, f.BadSetterArity)), "set" === t.kind && t.value.rest && this.raise(s, f.BadSetterRestParameter);\n            }\n          }, {\n            key: "flowObjectTypeSemicolon",\n            value: function flowObjectTypeSemicolon() {\n              this.eat(n.semi) || this.eat(n.comma) || this.match(n.braceR) || this.match(n.braceBarR) || this.unexpected();\n            }\n          }, {\n            key: "flowParseQualifiedTypeIdentifier",\n            value: function flowParseQualifiedTypeIdentifier(t, e, s) {\n              t = t || this.state.start, e = e || this.state.startLoc;\n              var i = s || this.flowParseRestrictedIdentifier(!0);\n\n              for (; this.eat(n.dot);) {\n                var _s9 = this.startNodeAt(t, e);\n\n                _s9.qualification = i, _s9.id = this.flowParseRestrictedIdentifier(!0), i = this.finishNode(_s9, "QualifiedTypeIdentifier");\n              }\n\n              return i;\n            }\n          }, {\n            key: "flowParseGenericType",\n            value: function flowParseGenericType(t, e, s) {\n              var i = this.startNodeAt(t, e);\n              return i.typeParameters = null, i.id = this.flowParseQualifiedTypeIdentifier(t, e, s), this.isRelational("<") && (i.typeParameters = this.flowParseTypeParameterInstantiation()), this.finishNode(i, "GenericTypeAnnotation");\n            }\n          }, {\n            key: "flowParseTypeofType",\n            value: function flowParseTypeofType() {\n              var t = this.startNode();\n              return this.expect(n._typeof), t.argument = this.flowParsePrimaryType(), this.finishNode(t, "TypeofTypeAnnotation");\n            }\n          }, {\n            key: "flowParseTupleType",\n            value: function flowParseTupleType() {\n              var t = this.startNode();\n\n              for (t.types = [], this.expect(n.bracketL); this.state.pos < this.length && !this.match(n.bracketR) && (t.types.push(this.flowParseType()), !this.match(n.bracketR));) {\n                this.expect(n.comma);\n              }\n\n              return this.expect(n.bracketR), this.finishNode(t, "TupleTypeAnnotation");\n            }\n          }, {\n            key: "flowParseFunctionTypeParam",\n            value: function flowParseFunctionTypeParam() {\n              var t = null,\n                  e = !1,\n                  s = null;\n              var i = this.startNode(),\n                  r = this.lookahead();\n              return r.type === n.colon || r.type === n.question ? (t = this.parseIdentifier(), this.eat(n.question) && (e = !0), s = this.flowParseTypeInitialiser()) : s = this.flowParseType(), i.name = t, i.optional = e, i.typeAnnotation = s, this.finishNode(i, "FunctionTypeParam");\n            }\n          }, {\n            key: "reinterpretTypeAsFunctionTypeParam",\n            value: function reinterpretTypeAsFunctionTypeParam(t) {\n              var e = this.startNodeAt(t.start, t.loc.start);\n              return e.name = null, e.optional = !1, e.typeAnnotation = t, this.finishNode(e, "FunctionTypeParam");\n            }\n          }, {\n            key: "flowParseFunctionTypeParams",\n            value: function flowParseFunctionTypeParams() {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n              var e = null;\n\n              for (; !this.match(n.parenR) && !this.match(n.ellipsis);) {\n                t.push(this.flowParseFunctionTypeParam()), this.match(n.parenR) || this.expect(n.comma);\n              }\n\n              return this.eat(n.ellipsis) && (e = this.flowParseFunctionTypeParam()), {\n                params: t,\n                rest: e\n              };\n            }\n          }, {\n            key: "flowIdentToTypeAnnotation",\n            value: function flowIdentToTypeAnnotation(t, e, s, i) {\n              switch (i.name) {\n                case "any":\n                  return this.finishNode(s, "AnyTypeAnnotation");\n\n                case "bool":\n                case "boolean":\n                  return this.finishNode(s, "BooleanTypeAnnotation");\n\n                case "mixed":\n                  return this.finishNode(s, "MixedTypeAnnotation");\n\n                case "empty":\n                  return this.finishNode(s, "EmptyTypeAnnotation");\n\n                case "number":\n                  return this.finishNode(s, "NumberTypeAnnotation");\n\n                case "string":\n                  return this.finishNode(s, "StringTypeAnnotation");\n\n                case "symbol":\n                  return this.finishNode(s, "SymbolTypeAnnotation");\n\n                default:\n                  return this.checkNotUnderscore(i.name), this.flowParseGenericType(t, e, i);\n              }\n            }\n          }, {\n            key: "flowParsePrimaryType",\n            value: function flowParsePrimaryType() {\n              var t = this.state.start,\n                  e = this.state.startLoc,\n                  s = this.startNode();\n              var i,\n                  r,\n                  a = !1;\n              var o = this.state.noAnonFunctionType;\n\n              switch (this.state.type) {\n                case n.name:\n                  return this.isContextual("interface") ? this.flowParseInterfaceType() : this.flowIdentToTypeAnnotation(t, e, s, this.parseIdentifier());\n\n                case n.braceL:\n                  return this.flowParseObjectType({\n                    allowStatic: !1,\n                    allowExact: !1,\n                    allowSpread: !0,\n                    allowProto: !1,\n                    allowInexact: !0\n                  });\n\n                case n.braceBarL:\n                  return this.flowParseObjectType({\n                    allowStatic: !1,\n                    allowExact: !0,\n                    allowSpread: !0,\n                    allowProto: !1,\n                    allowInexact: !1\n                  });\n\n                case n.bracketL:\n                  return this.state.noAnonFunctionType = !1, r = this.flowParseTupleType(), this.state.noAnonFunctionType = o, r;\n\n                case n.relational:\n                  if ("<" === this.state.value) return s.typeParameters = this.flowParseTypeParameterDeclaration(), this.expect(n.parenL), i = this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, this.expect(n.parenR), this.expect(n.arrow), s.returnType = this.flowParseType(), this.finishNode(s, "FunctionTypeAnnotation");\n                  break;\n\n                case n.parenL:\n                  if (this.next(), !this.match(n.parenR) && !this.match(n.ellipsis)) if (this.match(n.name)) {\n                    var _t17 = this.lookahead().type;\n                    a = _t17 !== n.question && _t17 !== n.colon;\n                  } else a = !0;\n\n                  if (a) {\n                    if (this.state.noAnonFunctionType = !1, r = this.flowParseType(), this.state.noAnonFunctionType = o, this.state.noAnonFunctionType || !(this.match(n.comma) || this.match(n.parenR) && this.lookahead().type === n.arrow)) return this.expect(n.parenR), r;\n                    this.eat(n.comma);\n                  }\n\n                  return i = r ? this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(r)]) : this.flowParseFunctionTypeParams(), s.params = i.params, s.rest = i.rest, this.expect(n.parenR), this.expect(n.arrow), s.returnType = this.flowParseType(), s.typeParameters = null, this.finishNode(s, "FunctionTypeAnnotation");\n\n                case n.string:\n                  return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");\n\n                case n._true:\n                case n._false:\n                  return s.value = this.match(n._true), this.next(), this.finishNode(s, "BooleanLiteralTypeAnnotation");\n\n                case n.plusMin:\n                  if ("-" === this.state.value) {\n                    if (this.next(), this.match(n.num)) return this.parseLiteral(-this.state.value, "NumberLiteralTypeAnnotation", s.start, s.loc.start);\n                    if (this.match(n.bigint)) return this.parseLiteral(-this.state.value, "BigIntLiteralTypeAnnotation", s.start, s.loc.start);\n                    throw this.raise(this.state.start, j.UnexpectedSubtractionOperand);\n                  }\n\n                  throw this.unexpected();\n\n                case n.num:\n                  return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");\n\n                case n.bigint:\n                  return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");\n\n                case n._void:\n                  return this.next(), this.finishNode(s, "VoidTypeAnnotation");\n\n                case n._null:\n                  return this.next(), this.finishNode(s, "NullLiteralTypeAnnotation");\n\n                case n._this:\n                  return this.next(), this.finishNode(s, "ThisTypeAnnotation");\n\n                case n.star:\n                  return this.next(), this.finishNode(s, "ExistsTypeAnnotation");\n\n                default:\n                  if ("typeof" === this.state.type.keyword) return this.flowParseTypeofType();\n\n                  if (this.state.type.keyword) {\n                    var _t18 = this.state.type.label;\n                    return this.next(), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "createIdentifier", this).call(this, s, _t18);\n                  }\n\n              }\n\n              throw this.unexpected();\n            }\n          }, {\n            key: "flowParsePostfixType",\n            value: function flowParsePostfixType() {\n              var t = this.state.start,\n                  e = this.state.startLoc;\n              var s = this.flowParsePrimaryType();\n\n              for (; this.match(n.bracketL) && !this.canInsertSemicolon();) {\n                var _i9 = this.startNodeAt(t, e);\n\n                _i9.elementType = s, this.expect(n.bracketL), this.expect(n.bracketR), s = this.finishNode(_i9, "ArrayTypeAnnotation");\n              }\n\n              return s;\n            }\n          }, {\n            key: "flowParsePrefixType",\n            value: function flowParsePrefixType() {\n              var t = this.startNode();\n              return this.eat(n.question) ? (t.typeAnnotation = this.flowParsePrefixType(), this.finishNode(t, "NullableTypeAnnotation")) : this.flowParsePostfixType();\n            }\n          }, {\n            key: "flowParseAnonFunctionWithoutParens",\n            value: function flowParseAnonFunctionWithoutParens() {\n              var t = this.flowParsePrefixType();\n\n              if (!this.state.noAnonFunctionType && this.eat(n.arrow)) {\n                var _e13 = this.startNodeAt(t.start, t.loc.start);\n\n                return _e13.params = [this.reinterpretTypeAsFunctionTypeParam(t)], _e13.rest = null, _e13.returnType = this.flowParseType(), _e13.typeParameters = null, this.finishNode(_e13, "FunctionTypeAnnotation");\n              }\n\n              return t;\n            }\n          }, {\n            key: "flowParseIntersectionType",\n            value: function flowParseIntersectionType() {\n              var t = this.startNode();\n              this.eat(n.bitwiseAND);\n              var e = this.flowParseAnonFunctionWithoutParens();\n\n              for (t.types = [e]; this.eat(n.bitwiseAND);) {\n                t.types.push(this.flowParseAnonFunctionWithoutParens());\n              }\n\n              return 1 === t.types.length ? e : this.finishNode(t, "IntersectionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseUnionType",\n            value: function flowParseUnionType() {\n              var t = this.startNode();\n              this.eat(n.bitwiseOR);\n              var e = this.flowParseIntersectionType();\n\n              for (t.types = [e]; this.eat(n.bitwiseOR);) {\n                t.types.push(this.flowParseIntersectionType());\n              }\n\n              return 1 === t.types.length ? e : this.finishNode(t, "UnionTypeAnnotation");\n            }\n          }, {\n            key: "flowParseType",\n            value: function flowParseType() {\n              var t = this.state.inType;\n              this.state.inType = !0;\n              var e = this.flowParseUnionType();\n              return this.state.inType = t, this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType, e;\n            }\n          }, {\n            key: "flowParseTypeOrImplicitInstantiation",\n            value: function flowParseTypeOrImplicitInstantiation() {\n              if (this.state.type === n.name && "_" === this.state.value) {\n                var _t19 = this.state.start,\n                    _e14 = this.state.startLoc,\n                    _s10 = this.parseIdentifier();\n\n                return this.flowParseGenericType(_t19, _e14, _s10);\n              }\n\n              return this.flowParseType();\n            }\n          }, {\n            key: "flowParseTypeAnnotation",\n            value: function flowParseTypeAnnotation() {\n              var t = this.startNode();\n              return t.typeAnnotation = this.flowParseTypeInitialiser(), this.finishNode(t, "TypeAnnotation");\n            }\n          }, {\n            key: "flowParseTypeAnnotatableIdentifier",\n            value: function flowParseTypeAnnotatableIdentifier(t) {\n              var e = t ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n              return this.match(n.colon) && (e.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(e)), e;\n            }\n          }, {\n            key: "typeCastToParameter",\n            value: function typeCastToParameter(t) {\n              return t.expression.typeAnnotation = t.typeAnnotation, this.resetEndLocation(t.expression, t.typeAnnotation.end, t.typeAnnotation.loc.end), t.expression;\n            }\n          }, {\n            key: "flowParseVariance",\n            value: function flowParseVariance() {\n              var t = null;\n              return this.match(n.plusMin) && (t = this.startNode(), "+" === this.state.value ? t.kind = "plus" : t.kind = "minus", this.next(), this.finishNode(t, "Variance")), t;\n            }\n          }, {\n            key: "parseFunctionBody",\n            value: function parseFunctionBody(t, e) {\n              var _this6 = this;\n\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              return e ? this.forwardNoArrowParamsConversionAt(t, function () {\n                return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBody", _this6).call(_this6, t, !0, s);\n              }) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBody", this).call(this, t, !1, s);\n            }\n          }, {\n            key: "parseFunctionBodyAndFinish",\n            value: function parseFunctionBodyAndFinish(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n\n              if (this.match(n.colon)) {\n                var _this$flowParseTypeAn3, _this$flowParseTypeAn4;\n\n                var _e15 = this.startNode();\n\n                (_this$flowParseTypeAn3 = this.flowParseTypeAndPredicateInitialiser(), _this$flowParseTypeAn4 = (0, _slicedToArray2.default)(_this$flowParseTypeAn3, 2), _e15.typeAnnotation = _this$flowParseTypeAn4[0], t.predicate = _this$flowParseTypeAn4[1], _this$flowParseTypeAn3), t.returnType = _e15.typeAnnotation ? this.finishNode(_e15, "TypeAnnotation") : null;\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionBodyAndFinish", this).call(this, t, e, s);\n            }\n          }, {\n            key: "parseStatement",\n            value: function parseStatement(t, e) {\n              if (this.state.strict && this.match(n.name) && "interface" === this.state.value) {\n                var _t20 = this.startNode();\n\n                return this.next(), this.flowParseInterface(_t20);\n              }\n\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                var _t21 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_t21);\n              }\n\n              {\n                var _s11 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseStatement", this).call(this, t, e);\n\n                return void 0 !== this.flowPragma || this.isValidDirective(_s11) || (this.flowPragma = null), _s11;\n              }\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              if ("Identifier" === e.type) if ("declare" === e.name) {\n                if (this.match(n._class) || this.match(n.name) || this.match(n._function) || this.match(n._var) || this.match(n._export)) return this.flowParseDeclare(t);\n              } else if (this.match(n.name)) {\n                if ("interface" === e.name) return this.flowParseInterface(t);\n                if ("type" === e.name) return this.flowParseTypeAlias(t);\n                if ("opaque" === e.name) return this.flowParseOpaqueType(t, !1);\n              }\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExpressionStatement", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseExportDeclaration",\n            value: function shouldParseExportDeclaration() {\n              return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || this.shouldParseEnums() && this.isContextual("enum") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseExportDeclaration", this).call(this);\n            }\n          }, {\n            key: "isExportDefaultSpecifier",\n            value: function isExportDefaultSpecifier() {\n              return (!this.match(n.name) || !("type" === this.state.value || "interface" === this.state.value || "opaque" === this.state.value || this.shouldParseEnums() && "enum" === this.state.value)) && (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isExportDefaultSpecifier", this).call(this);\n            }\n          }, {\n            key: "parseExportDefaultExpression",\n            value: function parseExportDefaultExpression() {\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                var _t22 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_t22);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExportDefaultExpression", this).call(this);\n            }\n          }, {\n            key: "parseConditional",\n            value: function parseConditional(t, e, s, i, r) {\n              var _this7 = this;\n\n              if (!this.match(n.question)) return t;\n\n              if (r) {\n                var _a3 = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseConditional", _this7).call(_this7, t, e, s, i);\n                });\n\n                return _a3.node ? (_a3.error && (this.state = _a3.failState), _a3.node) : (r.start = _a3.error.pos || this.state.start, t);\n              }\n\n              this.expect(n.question);\n              var a = this.state.clone(),\n                  o = this.state.noArrowAt,\n                  h = this.startNodeAt(s, i);\n\n              var _this$tryParseConditi = this.tryParseConditionalConsequent(),\n                  p = _this$tryParseConditi.consequent,\n                  c = _this$tryParseConditi.failed,\n                  _this$getArrowLikeExp = this.getArrowLikeExpressions(p),\n                  _this$getArrowLikeExp2 = (0, _slicedToArray2.default)(_this$getArrowLikeExp, 2),\n                  u = _this$getArrowLikeExp2[0],\n                  l = _this$getArrowLikeExp2[1];\n\n              if (c || l.length > 0) {\n                var _this$tryParseConditi3;\n\n                var _t23 = (0, _toConsumableArray2.default)(o);\n\n                if (l.length > 0) {\n                  var _this$tryParseConditi2, _this$getArrowLikeExp3, _this$getArrowLikeExp4;\n\n                  this.state = a, this.state.noArrowAt = _t23;\n\n                  for (var _e16 = 0; _e16 < l.length; _e16++) {\n                    _t23.push(l[_e16].start);\n                  }\n\n                  (_this$tryParseConditi2 = this.tryParseConditionalConsequent(), p = _this$tryParseConditi2.consequent, c = _this$tryParseConditi2.failed, _this$tryParseConditi2), (_this$getArrowLikeExp3 = this.getArrowLikeExpressions(p), _this$getArrowLikeExp4 = (0, _slicedToArray2.default)(_this$getArrowLikeExp3, 2), u = _this$getArrowLikeExp4[0], l = _this$getArrowLikeExp4[1], _this$getArrowLikeExp3);\n                }\n\n                c && u.length > 1 && this.raise(a.start, j.AmbiguousConditionalArrow), c && 1 === u.length && (this.state = a, this.state.noArrowAt = _t23.concat(u[0].start), (_this$tryParseConditi3 = this.tryParseConditionalConsequent(), p = _this$tryParseConditi3.consequent, c = _this$tryParseConditi3.failed, _this$tryParseConditi3));\n              }\n\n              return this.getArrowLikeExpressions(p, !0), this.state.noArrowAt = o, this.expect(n.colon), h.test = t, h.consequent = p, h.alternate = this.forwardNoArrowParamsConversionAt(h, function () {\n                return _this7.parseMaybeAssign(e, void 0, void 0, void 0);\n              }), this.finishNode(h, "ConditionalExpression");\n            }\n          }, {\n            key: "tryParseConditionalConsequent",\n            value: function tryParseConditionalConsequent() {\n              this.state.noArrowParamsConversionAt.push(this.state.start);\n              var t = this.parseMaybeAssign(),\n                  e = !this.match(n.colon);\n              return this.state.noArrowParamsConversionAt.pop(), {\n                consequent: t,\n                failed: e\n              };\n            }\n          }, {\n            key: "getArrowLikeExpressions",\n            value: function getArrowLikeExpressions(t, e) {\n              var _this8 = this;\n\n              var s = [t],\n                  i = [];\n\n              for (; 0 !== s.length;) {\n                var _t24 = s.pop();\n\n                "ArrowFunctionExpression" === _t24.type ? (_t24.typeParameters || !_t24.returnType ? this.finishArrowValidation(_t24) : i.push(_t24), s.push(_t24.body)) : "ConditionalExpression" === _t24.type && (s.push(_t24.consequent), s.push(_t24.alternate));\n              }\n\n              return e ? (i.forEach(function (t) {\n                return _this8.finishArrowValidation(t);\n              }), [i, []]) : function (t, e) {\n                var s = [],\n                    i = [];\n\n                for (var _r4 = 0; _r4 < t.length; _r4++) {\n                  (e(t[_r4], _r4, t) ? s : i).push(t[_r4]);\n                }\n\n                return [s, i];\n              }(i, function (t) {\n                return t.params.every(function (t) {\n                  return _this8.isAssignable(t, !0);\n                });\n              });\n            }\n          }, {\n            key: "finishArrowValidation",\n            value: function finishArrowValidation(t) {\n              var e;\n              this.toAssignableList(t.params, null == (e = t.extra) ? void 0 : e.trailingComma), this.scope.enter(6), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkParams", this).call(this, t, !1, !0), this.scope.exit();\n            }\n          }, {\n            key: "forwardNoArrowParamsConversionAt",\n            value: function forwardNoArrowParamsConversionAt(t, e) {\n              var s;\n              return -1 !== this.state.noArrowParamsConversionAt.indexOf(t.start) ? (this.state.noArrowParamsConversionAt.push(this.state.start), s = e(), this.state.noArrowParamsConversionAt.pop()) : s = e(), s;\n            }\n          }, {\n            key: "parseParenItem",\n            value: function parseParenItem(t, e, s) {\n              if (t = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseParenItem", this).call(this, t, e, s), this.eat(n.question) && (t.optional = !0, this.resetEndLocation(t)), this.match(n.colon)) {\n                var _i10 = this.startNodeAt(e, s);\n\n                return _i10.expression = t, _i10.typeAnnotation = this.flowParseTypeAnnotation(), this.finishNode(_i10, "TypeCastExpression");\n              }\n\n              return t;\n            }\n          }, {\n            key: "assertModuleNodeAllowed",\n            value: function assertModuleNodeAllowed(t) {\n              "ImportDeclaration" === t.type && ("type" === t.importKind || "typeof" === t.importKind) || "ExportNamedDeclaration" === t.type && "type" === t.exportKind || "ExportAllDeclaration" === t.type && "type" === t.exportKind || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "assertModuleNodeAllowed", this).call(this, t);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExport", this).call(this, t);\n              return "ExportNamedDeclaration" !== e.type && "ExportAllDeclaration" !== e.type || (e.exportKind = e.exportKind || "value"), e;\n            }\n          }, {\n            key: "parseExportDeclaration",\n            value: function parseExportDeclaration(t) {\n              if (this.isContextual("type")) {\n                t.exportKind = "type";\n\n                var _e17 = this.startNode();\n\n                return this.next(), this.match(n.braceL) ? (t.specifiers = this.parseExportSpecifiers(), this.parseExportFrom(t), null) : this.flowParseTypeAlias(_e17);\n              }\n\n              if (this.isContextual("opaque")) {\n                t.exportKind = "type";\n\n                var _e18 = this.startNode();\n\n                return this.next(), this.flowParseOpaqueType(_e18, !1);\n              }\n\n              if (this.isContextual("interface")) {\n                t.exportKind = "type";\n\n                var _e19 = this.startNode();\n\n                return this.next(), this.flowParseInterface(_e19);\n              }\n\n              if (this.shouldParseEnums() && this.isContextual("enum")) {\n                t.exportKind = "value";\n\n                var _e20 = this.startNode();\n\n                return this.next(), this.flowParseEnumDeclaration(_e20);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseExportDeclaration", this).call(this, t);\n            }\n          }, {\n            key: "eatExportStar",\n            value: function eatExportStar(t) {\n              return !!(0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "eatExportStar", this).apply(this, arguments) || !(!this.isContextual("type") || this.lookahead().type !== n.star) && (t.exportKind = "type", this.next(), this.next(), !0);\n            }\n          }, {\n            key: "maybeParseExportNamespaceSpecifier",\n            value: function maybeParseExportNamespaceSpecifier(t) {\n              var e = this.state.start,\n                  s = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "maybeParseExportNamespaceSpecifier", this).call(this, t);\n              return s && "type" === t.exportKind && this.unexpected(e), s;\n            }\n          }, {\n            key: "parseClassId",\n            value: function parseClassId(t, e, s) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassId", this).call(this, t, e, s), this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration());\n            }\n          }, {\n            key: "parseClassMember",\n            value: function parseClassMember(t, e, s, i) {\n              var r = this.state.start;\n\n              if (this.isContextual("declare")) {\n                if (this.parseClassMemberFromModifier(t, e)) return;\n                e.declare = !0;\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassMember", this).call(this, t, e, s, i), e.declare && ("ClassProperty" !== e.type && "ClassPrivateProperty" !== e.type ? this.raise(r, j.DeclareClassElement) : e.value && this.raise(e.value.start, j.DeclareClassFieldInitializer));\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              return 123 === t && 124 === e ? this.finishOp(n.braceBarL, 2) : !this.state.inType || 62 !== t && 60 !== t ? function (t, e) {\n                return 64 === t && 64 === e;\n              }(t, e) ? (this.state.isIterator = !0, (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readWord", this).call(this)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "getTokenFromCode", this).call(this, t) : this.finishOp(n.relational, 1);\n            }\n          }, {\n            key: "isAssignable",\n            value: function isAssignable(t, e) {\n              var _this9 = this;\n\n              switch (t.type) {\n                case "Identifier":\n                case "ObjectPattern":\n                case "ArrayPattern":\n                case "AssignmentPattern":\n                  return !0;\n\n                case "ObjectExpression":\n                  {\n                    var _e21 = t.properties.length - 1;\n\n                    return t.properties.every(function (t, s) {\n                      return "ObjectMethod" !== t.type && (s === _e21 || "SpreadElement" === t.type) && _this9.isAssignable(t);\n                    });\n                  }\n\n                case "ObjectProperty":\n                  return this.isAssignable(t.value);\n\n                case "SpreadElement":\n                  return this.isAssignable(t.argument);\n\n                case "ArrayExpression":\n                  return t.elements.every(function (t) {\n                    return _this9.isAssignable(t);\n                  });\n\n                case "AssignmentExpression":\n                  return "=" === t.operator;\n\n                case "ParenthesizedExpression":\n                case "TypeCastExpression":\n                  return this.isAssignable(t.expression);\n\n                case "MemberExpression":\n                case "OptionalMemberExpression":\n                  return !e;\n\n                default:\n                  return !1;\n              }\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return "TypeCastExpression" === t.type ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignable", this).call(this, this.typeCastToParameter(t)) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignable", this).call(this, t);\n            }\n          }, {\n            key: "toAssignableList",\n            value: function toAssignableList(t, e) {\n              for (var _e22 = 0; _e22 < t.length; _e22++) {\n                var _s12 = t[_e22];\n                _s12 && "TypeCastExpression" === _s12.type && (t[_e22] = this.typeCastToParameter(_s12));\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "toAssignableList", this).call(this, t, e);\n            }\n          }, {\n            key: "toReferencedList",\n            value: function toReferencedList(t, e) {\n              for (var _s13 = 0; _s13 < t.length; _s13++) {\n                var _i11 = t[_s13];\n                !_i11 || "TypeCastExpression" !== _i11.type || _i11.extra && _i11.extra.parenthesized || !(t.length > 1) && e || this.raise(_i11.typeAnnotation.start, j.TypeCastInPattern);\n              }\n\n              return t;\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n              if ("TypeCastExpression" !== t.type) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkLVal", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassProperty",\n            value: function parseClassProperty(t) {\n              return this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassProperty", this).call(this, t);\n            }\n          }, {\n            key: "parseClassPrivateProperty",\n            value: function parseClassPrivateProperty(t) {\n              return this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassPrivateProperty", this).call(this, t);\n            }\n          }, {\n            key: "isClassMethod",\n            value: function isClassMethod() {\n              return this.isRelational("<") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isClassMethod", this).call(this);\n            }\n          }, {\n            key: "isClassProperty",\n            value: function isClassProperty() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isClassProperty", this).call(this);\n            }\n          }, {\n            key: "isNonstaticConstructor",\n            value: function isNonstaticConstructor(t) {\n              return !this.match(n.colon) && (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "isNonstaticConstructor", this).call(this, t);\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              e.variance && this.unexpected(e.variance.start), delete e.variance, this.isRelational("<") && (e.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "pushClassMethod", this).call(this, t, e, s, i, r, a);\n            }\n          }, {\n            key: "pushClassPrivateMethod",\n            value: function pushClassPrivateMethod(t, e, s, i) {\n              e.variance && this.unexpected(e.variance.start), delete e.variance, this.isRelational("<") && (e.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "pushClassPrivateMethod", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassSuper",\n            value: function parseClassSuper(t) {\n              if ((0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseClassSuper", this).call(this, t), t.superClass && this.isRelational("<") && (t.superTypeParameters = this.flowParseTypeParameterInstantiation()), this.isContextual("implements")) {\n                this.next();\n\n                var _e23 = t.implements = [];\n\n                do {\n                  var _t25 = this.startNode();\n\n                  _t25.id = this.flowParseRestrictedIdentifier(!0), this.isRelational("<") ? _t25.typeParameters = this.flowParseTypeParameterInstantiation() : _t25.typeParameters = null, _e23.push(this.finishNode(_t25, "ClassImplements"));\n                } while (this.eat(n.comma));\n              }\n            }\n          }, {\n            key: "parsePropertyName",\n            value: function parsePropertyName(t, e) {\n              var s = this.flowParseVariance(),\n                  i = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parsePropertyName", this).call(this, t, e);\n              return t.variance = s, i;\n            }\n          }, {\n            key: "parseObjPropValue",\n            value: function parseObjPropValue(t, e, s, i, r, a, o, h) {\n              var p;\n              t.variance && this.unexpected(t.variance.start), delete t.variance, this.isRelational("<") && (p = this.flowParseTypeParameterDeclaration(), this.match(n.parenL) || this.unexpected()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseObjPropValue", this).call(this, t, e, s, i, r, a, o, h), p && ((t.value || t).typeParameters = p);\n            }\n          }, {\n            key: "parseAssignableListItemTypes",\n            value: function parseAssignableListItemTypes(t) {\n              return this.eat(n.question) && ("Identifier" !== t.type && this.raise(t.start, j.OptionalBindingPattern), t.optional = !0), this.match(n.colon) && (t.typeAnnotation = this.flowParseTypeAnnotation()), this.resetEndLocation(t), t;\n            }\n          }, {\n            key: "parseMaybeDefault",\n            value: function parseMaybeDefault(t, e, s) {\n              var i = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeDefault", this).call(this, t, e, s);\n              return "AssignmentPattern" === i.type && i.typeAnnotation && i.right.start < i.typeAnnotation.start && this.raise(i.typeAnnotation.start, j.TypeBeforeInitializer), i;\n            }\n          }, {\n            key: "shouldParseDefaultImport",\n            value: function shouldParseDefaultImport(t) {\n              return U(t) ? q(this.state) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseDefaultImport", this).call(this, t);\n            }\n          }, {\n            key: "parseImportSpecifierLocal",\n            value: function parseImportSpecifierLocal(t, e, s, i) {\n              e.local = U(t) ? this.flowParseRestrictedIdentifier(!0, !0) : this.parseIdentifier(), this.checkLVal(e.local, 9, void 0, i), t.specifiers.push(this.finishNode(e, s));\n            }\n          }, {\n            key: "maybeParseDefaultImportSpecifier",\n            value: function maybeParseDefaultImportSpecifier(t) {\n              t.importKind = "value";\n              var e = null;\n\n              if (this.match(n._typeof) ? e = "typeof" : this.isContextual("type") && (e = "type"), e) {\n                var _s14 = this.lookahead();\n\n                "type" === e && _s14.type === n.star && this.unexpected(_s14.start), (q(_s14) || _s14.type === n.braceL || _s14.type === n.star) && (this.next(), t.importKind = e);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "maybeParseDefaultImportSpecifier", this).call(this, t);\n            }\n          }, {\n            key: "parseImportSpecifier",\n            value: function parseImportSpecifier(t) {\n              var e = this.startNode(),\n                  s = this.state.start,\n                  i = this.parseIdentifier(!0);\n              var r = null;\n              "type" === i.name ? r = "type" : "typeof" === i.name && (r = "typeof");\n              var a = !1;\n\n              if (this.isContextual("as") && !this.isLookaheadContextual("as")) {\n                var _t26 = this.parseIdentifier(!0);\n\n                null === r || this.match(n.name) || this.state.type.keyword ? (e.imported = i, e.importKind = null, e.local = this.parseIdentifier()) : (e.imported = _t26, e.importKind = r, e.local = _t26.__clone());\n              } else null !== r && (this.match(n.name) || this.state.type.keyword) ? (e.imported = this.parseIdentifier(!0), e.importKind = r, this.eatContextual("as") ? e.local = this.parseIdentifier() : (a = !0, e.local = e.imported.__clone())) : (a = !0, e.imported = i, e.importKind = null, e.local = e.imported.__clone());\n\n              var o = U(t),\n                  h = U(e);\n              o && h && this.raise(s, j.ImportTypeShorthandOnlyInPureImport), (o || h) && this.checkReservedType(e.local.name, e.local.start, !0), !a || o || h || this.checkReservedWord(e.local.name, e.start, !0, !0), this.checkLVal(e.local, 9, void 0, "import specifier"), t.specifiers.push(this.finishNode(e, "ImportSpecifier"));\n            }\n          }, {\n            key: "parseFunctionParams",\n            value: function parseFunctionParams(t, e) {\n              var s = t.kind;\n              "get" !== s && "set" !== s && this.isRelational("<") && (t.typeParameters = this.flowParseTypeParameterDeclaration()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseFunctionParams", this).call(this, t, e);\n            }\n          }, {\n            key: "parseVarId",\n            value: function parseVarId(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseVarId", this).call(this, t, e), this.match(n.colon) && (t.id.typeAnnotation = this.flowParseTypeAnnotation(), this.resetEndLocation(t.id));\n            }\n          }, {\n            key: "parseAsyncArrowFromCallExpression",\n            value: function parseAsyncArrowFromCallExpression(t, e) {\n              if (this.match(n.colon)) {\n                var _e24 = this.state.noAnonFunctionType;\n                this.state.noAnonFunctionType = !0, t.returnType = this.flowParseTypeAnnotation(), this.state.noAnonFunctionType = _e24;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseAsyncArrowFromCallExpression", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseAsyncArrow",\n            value: function shouldParseAsyncArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseAsyncArrow", this).call(this);\n            }\n          }, {\n            key: "parseMaybeAssign",\n            value: function parseMaybeAssign(t, e, s, i) {\n              var _this10 = this;\n\n              var r,\n                  a = null;\n\n              if (this.hasPlugin("jsx") && (this.match(n.jsxTagStart) || this.isRelational("<"))) {\n                if (a = this.state.clone(), r = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", _this10).call(_this10, t, e, s, i);\n                }, a), !r.error) return r.node;\n                var _n = this.state.context;\n                _n[_n.length - 1] === x.j_oTag ? _n.length -= 2 : _n[_n.length - 1] === x.j_expr && (_n.length -= 1);\n              }\n\n              if (r && r.error || this.isRelational("<")) {\n                var _n2;\n\n                a = a || this.state.clone();\n\n                var _o = this.tryParse(function () {\n                  _n2 = _this10.flowParseTypeParameterDeclaration();\n\n                  var r = _this10.forwardNoArrowParamsConversionAt(_n2, function () {\n                    return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", _this10).call(_this10, t, e, s, i);\n                  });\n\n                  return r.typeParameters = _n2, _this10.resetStartLocationFromNode(r, _n2), r;\n                }, a),\n                    _h2 = _o.node && "ArrowFunctionExpression" === _o.node.type ? _o.node : null;\n\n                if (!_o.error && _h2) return _h2;\n                if (r && r.node) return this.state = r.failState, r.node;\n                if (_h2) return this.state = _o.failState, _h2;\n                if (r && r.thrown) throw r.error;\n                if (_o.thrown) throw _o.error;\n                throw this.raise(_n2.start, j.UnexpectedTokenAfterTypeParameter);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseMaybeAssign", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseArrow",\n            value: function parseArrow(t) {\n              var _this11 = this;\n\n              if (this.match(n.colon)) {\n                var _e25 = this.tryParse(function () {\n                  var _this11$flowParseType, _this11$flowParseType2;\n\n                  var e = _this11.state.noAnonFunctionType;\n                  _this11.state.noAnonFunctionType = !0;\n\n                  var s = _this11.startNode();\n\n                  return (_this11$flowParseType = _this11.flowParseTypeAndPredicateInitialiser(), _this11$flowParseType2 = (0, _slicedToArray2.default)(_this11$flowParseType, 2), s.typeAnnotation = _this11$flowParseType2[0], t.predicate = _this11$flowParseType2[1], _this11$flowParseType), _this11.state.noAnonFunctionType = e, _this11.canInsertSemicolon() && _this11.unexpected(), _this11.match(n.arrow) || _this11.unexpected(), s;\n                });\n\n                if (_e25.thrown) return null;\n                _e25.error && (this.state = _e25.failState), t.returnType = _e25.node.typeAnnotation ? this.finishNode(_e25.node, "TypeAnnotation") : null;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseArrow", this).call(this, t);\n            }\n          }, {\n            key: "shouldParseArrow",\n            value: function shouldParseArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "shouldParseArrow", this).call(this);\n            }\n          }, {\n            key: "setArrowFunctionParameters",\n            value: function setArrowFunctionParameters(t, e) {\n              -1 !== this.state.noArrowParamsConversionAt.indexOf(t.start) ? t.params = e : (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "setArrowFunctionParameters", this).call(this, t, e);\n            }\n          }, {\n            key: "checkParams",\n            value: function checkParams(t, e, s) {\n              if (!s || -1 === this.state.noArrowParamsConversionAt.indexOf(t.start)) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "checkParams", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseParenAndDistinguishExpression",\n            value: function parseParenAndDistinguishExpression(t) {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseParenAndDistinguishExpression", this).call(this, t && -1 === this.state.noArrowAt.indexOf(this.state.start));\n            }\n          }, {\n            key: "parseSubscripts",\n            value: function parseSubscripts(t, e, s, i) {\n              var _this12 = this;\n\n              if ("Identifier" === t.type && "async" === t.name && -1 !== this.state.noArrowAt.indexOf(e)) {\n                this.next();\n\n                var _i12 = this.startNodeAt(e, s);\n\n                _i12.callee = t, _i12.arguments = this.parseCallExpressionArguments(n.parenR, !1), t = this.finishNode(_i12, "CallExpression");\n              } else if ("Identifier" === t.type && "async" === t.name && this.isRelational("<")) {\n                var _r5 = this.state.clone(),\n                    _a4 = this.tryParse(function (t) {\n                  return _this12.parseAsyncArrowWithTypeParameters(e, s) || t();\n                }, _r5);\n\n                if (!_a4.error && !_a4.aborted) return _a4.node;\n\n                var _n3 = this.tryParse(function () {\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscripts", _this12).call(_this12, t, e, s, i);\n                }, _r5);\n\n                if (_n3.node && !_n3.error) return _n3.node;\n                if (_a4.node) return this.state = _a4.failState, _a4.node;\n                if (_n3.node) return this.state = _n3.failState, _n3.node;\n                throw _a4.error || _n3.error;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscripts", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseSubscript",\n            value: function parseSubscript(t, e, s, i, r) {\n              var _this13 = this;\n\n              if (this.match(n.questionDot) && this.isLookaheadRelational("<")) {\n                if (r.optionalChainMember = !0, i) return r.stop = !0, t;\n                this.next();\n\n                var _a5 = this.startNodeAt(e, s);\n\n                return _a5.callee = t, _a5.typeArguments = this.flowParseTypeParameterInstantiation(), this.expect(n.parenL), _a5.arguments = this.parseCallExpressionArguments(n.parenR, !1), _a5.optional = !0, this.finishCallExpression(_a5, !0);\n              }\n\n              if (!i && this.shouldParseTypes() && this.isRelational("<")) {\n                var _i13 = this.startNodeAt(e, s);\n\n                _i13.callee = t;\n\n                var _a6 = this.tryParse(function () {\n                  return _i13.typeArguments = _this13.flowParseTypeParameterInstantiationCallOrNew(), _this13.expect(n.parenL), _i13.arguments = _this13.parseCallExpressionArguments(n.parenR, !1), r.optionalChainMember && (_i13.optional = !1), _this13.finishCallExpression(_i13, r.optionalChainMember);\n                });\n\n                if (_a6.node) return _a6.error && (this.state = _a6.failState), _a6.node;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseSubscript", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parseNewArguments",\n            value: function parseNewArguments(t) {\n              var _this14 = this;\n\n              var e = null;\n              this.shouldParseTypes() && this.isRelational("<") && (e = this.tryParse(function () {\n                return _this14.flowParseTypeParameterInstantiationCallOrNew();\n              }).node), t.typeArguments = e, (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseNewArguments", this).call(this, t);\n            }\n          }, {\n            key: "parseAsyncArrowWithTypeParameters",\n            value: function parseAsyncArrowWithTypeParameters(t, e) {\n              var s = this.startNodeAt(t, e);\n              if (this.parseFunctionParams(s), this.parseArrow(s)) return this.parseArrowExpression(s, void 0, !0);\n            }\n          }, {\n            key: "readToken_mult_modulo",\n            value: function readToken_mult_modulo(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              if (42 === t && 47 === e && this.state.hasFlowComment) return this.state.hasFlowComment = !1, this.state.pos += 2, void this.nextToken();\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readToken_mult_modulo", this).call(this, t);\n            }\n          }, {\n            key: "readToken_pipe_amp",\n            value: function readToken_pipe_amp(t) {\n              var e = this.input.charCodeAt(this.state.pos + 1);\n              124 !== t || 125 !== e ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "readToken_pipe_amp", this).call(this, t) : this.finishOp(n.braceBarR, 2);\n            }\n          }, {\n            key: "parseTopLevel",\n            value: function parseTopLevel(t, e) {\n              var s = (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "parseTopLevel", this).call(this, t, e);\n              return this.state.hasFlowComment && this.raise(this.state.pos, j.UnterminatedFlowComment), s;\n            }\n          }, {\n            key: "skipBlockComment",\n            value: function skipBlockComment() {\n              if (this.hasPlugin("flowComments") && this.skipFlowComment()) return this.state.hasFlowComment && this.unexpected(null, j.NestedFlowComment), this.hasFlowCommentCompletion(), this.state.pos += this.skipFlowComment(), void (this.state.hasFlowComment = !0);\n\n              if (this.state.hasFlowComment) {\n                var _t27 = this.input.indexOf("*-/", this.state.pos += 2);\n\n                if (-1 === _t27) throw this.raise(this.state.pos - 2, f.UnterminatedComment);\n                this.state.pos = _t27 + 3;\n              } else (0, _get8.default)((0, _getPrototypeOf2.default)(_class3.prototype), "skipBlockComment", this).call(this);\n            }\n          }, {\n            key: "skipFlowComment",\n            value: function skipFlowComment() {\n              var t = this.state.pos;\n              var e = 2;\n\n              for (; [32, 9].includes(this.input.charCodeAt(t + e));) {\n                e++;\n              }\n\n              var s = this.input.charCodeAt(e + t),\n                  i = this.input.charCodeAt(e + t + 1);\n              return 58 === s && 58 === i ? e + 2 : "flow-include" === this.input.slice(e + t, e + t + 12) ? e + 12 : 58 === s && 58 !== i && e;\n            }\n          }, {\n            key: "hasFlowCommentCompletion",\n            value: function hasFlowCommentCompletion() {\n              if (-1 === this.input.indexOf("*/", this.state.pos)) throw this.raise(this.state.pos, f.UnterminatedComment);\n            }\n          }, {\n            key: "flowEnumErrorBooleanMemberNotInitialized",\n            value: function flowEnumErrorBooleanMemberNotInitialized(t, _ref5) {\n              var e = _ref5.enumName,\n                  s = _ref5.memberName;\n              this.raise(t, j.EnumBooleanMemberNotInitialized, s, e);\n            }\n          }, {\n            key: "flowEnumErrorInvalidMemberName",\n            value: function flowEnumErrorInvalidMemberName(t, _ref6) {\n              var e = _ref6.enumName,\n                  s = _ref6.memberName;\n              var i = s[0].toUpperCase() + s.slice(1);\n              this.raise(t, j.EnumInvalidMemberName, s, i, e);\n            }\n          }, {\n            key: "flowEnumErrorDuplicateMemberName",\n            value: function flowEnumErrorDuplicateMemberName(t, _ref7) {\n              var e = _ref7.enumName,\n                  s = _ref7.memberName;\n              this.raise(t, j.EnumDuplicateMemberName, s, e);\n            }\n          }, {\n            key: "flowEnumErrorInconsistentMemberValues",\n            value: function flowEnumErrorInconsistentMemberValues(t, _ref8) {\n              var e = _ref8.enumName;\n              this.raise(t, j.EnumInconsistentMemberValues, e);\n            }\n          }, {\n            key: "flowEnumErrorInvalidExplicitType",\n            value: function flowEnumErrorInvalidExplicitType(t, _ref9) {\n              var e = _ref9.enumName,\n                  s = _ref9.suppliedType;\n              return this.raise(t, null === s ? j.EnumInvalidExplicitTypeUnknownSupplied : j.EnumInvalidExplicitType, e, s);\n            }\n          }, {\n            key: "flowEnumErrorInvalidMemberInitializer",\n            value: function flowEnumErrorInvalidMemberInitializer(t, _ref10) {\n              var e = _ref10.enumName,\n                  s = _ref10.explicitType,\n                  i = _ref10.memberName;\n              var r = null;\n\n              switch (s) {\n                case "boolean":\n                case "number":\n                case "string":\n                  r = j.EnumInvalidMemberInitializerPrimaryType;\n                  break;\n\n                case "symbol":\n                  r = j.EnumInvalidMemberInitializerSymbolType;\n                  break;\n\n                default:\n                  r = j.EnumInvalidMemberInitializerUnknownType;\n              }\n\n              return this.raise(t, r, e, i, s);\n            }\n          }, {\n            key: "flowEnumErrorNumberMemberNotInitialized",\n            value: function flowEnumErrorNumberMemberNotInitialized(t, _ref11) {\n              var e = _ref11.enumName,\n                  s = _ref11.memberName;\n              this.raise(t, j.EnumNumberMemberNotInitialized, e, s);\n            }\n          }, {\n            key: "flowEnumErrorStringMemberInconsistentlyInitailized",\n            value: function flowEnumErrorStringMemberInconsistentlyInitailized(t, _ref12) {\n              var e = _ref12.enumName;\n              this.raise(t, j.EnumStringMemberInconsistentlyInitailized, e);\n            }\n          }, {\n            key: "flowEnumMemberInit",\n            value: function flowEnumMemberInit() {\n              var _this15 = this;\n\n              var t = this.state.start,\n                  e = function e() {\n                return _this15.match(n.comma) || _this15.match(n.braceR);\n              };\n\n              switch (this.state.type) {\n                case n.num:\n                  {\n                    var _s15 = this.parseLiteral(this.state.value, "NumericLiteral");\n\n                    return e() ? {\n                      type: "number",\n                      pos: _s15.start,\n                      value: _s15\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                case n.string:\n                  {\n                    var _s16 = this.parseLiteral(this.state.value, "StringLiteral");\n\n                    return e() ? {\n                      type: "string",\n                      pos: _s16.start,\n                      value: _s16\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                case n._true:\n                case n._false:\n                  {\n                    var _s17 = this.parseBooleanLiteral();\n\n                    return e() ? {\n                      type: "boolean",\n                      pos: _s17.start,\n                      value: _s17\n                    } : {\n                      type: "invalid",\n                      pos: t\n                    };\n                  }\n\n                default:\n                  return {\n                    type: "invalid",\n                    pos: t\n                  };\n              }\n            }\n          }, {\n            key: "flowEnumMemberRaw",\n            value: function flowEnumMemberRaw() {\n              var t = this.state.start;\n              return {\n                id: this.parseIdentifier(!0),\n                init: this.eat(n.eq) ? this.flowEnumMemberInit() : {\n                  type: "none",\n                  pos: t\n                }\n              };\n            }\n          }, {\n            key: "flowEnumCheckExplicitTypeMismatch",\n            value: function flowEnumCheckExplicitTypeMismatch(t, e, s) {\n              var i = e.explicitType;\n              null !== i && i !== s && this.flowEnumErrorInvalidMemberInitializer(t, e);\n            }\n          }, {\n            key: "flowEnumMembers",\n            value: function flowEnumMembers(_ref13) {\n              var t = _ref13.enumName,\n                  e = _ref13.explicitType;\n              var s = new Set(),\n                  i = {\n                booleanMembers: [],\n                numberMembers: [],\n                stringMembers: [],\n                defaultedMembers: []\n              };\n\n              for (; !this.match(n.braceR);) {\n                var _r6 = this.startNode(),\n                    _this$flowEnumMemberR = this.flowEnumMemberRaw(),\n                    _a7 = _this$flowEnumMemberR.id,\n                    _o2 = _this$flowEnumMemberR.init,\n                    _h3 = _a7.name;\n\n                if ("" === _h3) continue;\n                /^[a-z]/.test(_h3) && this.flowEnumErrorInvalidMemberName(_a7.start, {\n                  enumName: t,\n                  memberName: _h3\n                }), s.has(_h3) && this.flowEnumErrorDuplicateMemberName(_a7.start, {\n                  enumName: t,\n                  memberName: _h3\n                }), s.add(_h3);\n                var _p = {\n                  enumName: t,\n                  explicitType: e,\n                  memberName: _h3\n                };\n\n                switch (_r6.id = _a7, _o2.type) {\n                  case "boolean":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "boolean"), _r6.init = _o2.value, i.booleanMembers.push(this.finishNode(_r6, "EnumBooleanMember"));\n                    break;\n\n                  case "number":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "number"), _r6.init = _o2.value, i.numberMembers.push(this.finishNode(_r6, "EnumNumberMember"));\n                    break;\n\n                  case "string":\n                    this.flowEnumCheckExplicitTypeMismatch(_o2.pos, _p, "string"), _r6.init = _o2.value, i.stringMembers.push(this.finishNode(_r6, "EnumStringMember"));\n                    break;\n\n                  case "invalid":\n                    throw this.flowEnumErrorInvalidMemberInitializer(_o2.pos, _p);\n\n                  case "none":\n                    switch (e) {\n                      case "boolean":\n                        this.flowEnumErrorBooleanMemberNotInitialized(_o2.pos, _p);\n                        break;\n\n                      case "number":\n                        this.flowEnumErrorNumberMemberNotInitialized(_o2.pos, _p);\n                        break;\n\n                      default:\n                        i.defaultedMembers.push(this.finishNode(_r6, "EnumDefaultedMember"));\n                    }\n\n                }\n\n                this.match(n.braceR) || this.expect(n.comma);\n              }\n\n              return i;\n            }\n          }, {\n            key: "flowEnumStringMembers",\n            value: function flowEnumStringMembers(t, e, _ref14) {\n              var s = _ref14.enumName;\n              if (0 === t.length) return e;\n              if (0 === e.length) return t;\n\n              if (e.length > t.length) {\n                for (var _e26 = 0; _e26 < t.length; _e26++) {\n                  var _i14 = t[_e26];\n                  this.flowEnumErrorStringMemberInconsistentlyInitailized(_i14.start, {\n                    enumName: s\n                  });\n                }\n\n                return e;\n              }\n\n              for (var _t28 = 0; _t28 < e.length; _t28++) {\n                var _i15 = e[_t28];\n                this.flowEnumErrorStringMemberInconsistentlyInitailized(_i15.start, {\n                  enumName: s\n                });\n              }\n\n              return t;\n            }\n          }, {\n            key: "flowEnumParseExplicitType",\n            value: function flowEnumParseExplicitType(_ref15) {\n              var t = _ref15.enumName;\n\n              if (this.eatContextual("of")) {\n                if (!this.match(n.name)) throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n                  enumName: t,\n                  suppliedType: null\n                });\n                var _e27 = this.state.value;\n                return this.next(), "boolean" !== _e27 && "number" !== _e27 && "string" !== _e27 && "symbol" !== _e27 && this.flowEnumErrorInvalidExplicitType(this.state.start, {\n                  enumName: t,\n                  suppliedType: _e27\n                }), _e27;\n              }\n\n              return null;\n            }\n          }, {\n            key: "flowEnumBody",\n            value: function flowEnumBody(t, _ref16) {\n              var _this16 = this;\n\n              var e = _ref16.enumName,\n                  s = _ref16.nameLoc;\n              var i = this.flowEnumParseExplicitType({\n                enumName: e\n              });\n              this.expect(n.braceL);\n              var r = this.flowEnumMembers({\n                enumName: e,\n                explicitType: i\n              });\n\n              switch (i) {\n                case "boolean":\n                  return t.explicitType = !0, t.members = r.booleanMembers, this.expect(n.braceR), this.finishNode(t, "EnumBooleanBody");\n\n                case "number":\n                  return t.explicitType = !0, t.members = r.numberMembers, this.expect(n.braceR), this.finishNode(t, "EnumNumberBody");\n\n                case "string":\n                  return t.explicitType = !0, t.members = this.flowEnumStringMembers(r.stringMembers, r.defaultedMembers, {\n                    enumName: e\n                  }), this.expect(n.braceR), this.finishNode(t, "EnumStringBody");\n\n                case "symbol":\n                  return t.members = r.defaultedMembers, this.expect(n.braceR), this.finishNode(t, "EnumSymbolBody");\n\n                default:\n                  {\n                    var _i16 = function _i16() {\n                      return t.members = [], _this16.expect(n.braceR), _this16.finishNode(t, "EnumStringBody");\n                    };\n\n                    t.explicitType = !1;\n                    var _a8 = r.booleanMembers.length,\n                        _o3 = r.numberMembers.length,\n                        _h4 = r.stringMembers.length,\n                        _p2 = r.defaultedMembers.length;\n\n                    if (_a8 || _o3 || _h4 || _p2) {\n                      if (_a8 || _o3) {\n                        if (!_o3 && !_h4 && _a8 >= _p2) {\n                          for (var _t29 = 0, _s18 = r.defaultedMembers; _t29 < _s18.length; _t29++) {\n                            var _i17 = _s18[_t29];\n                            this.flowEnumErrorBooleanMemberNotInitialized(_i17.start, {\n                              enumName: e,\n                              memberName: _i17.id.name\n                            });\n                          }\n\n                          return t.members = r.booleanMembers, this.expect(n.braceR), this.finishNode(t, "EnumBooleanBody");\n                        }\n\n                        if (!_a8 && !_h4 && _o3 >= _p2) {\n                          for (var _t30 = 0, _s19 = r.defaultedMembers; _t30 < _s19.length; _t30++) {\n                            var _i18 = _s19[_t30];\n                            this.flowEnumErrorNumberMemberNotInitialized(_i18.start, {\n                              enumName: e,\n                              memberName: _i18.id.name\n                            });\n                          }\n\n                          return t.members = r.numberMembers, this.expect(n.braceR), this.finishNode(t, "EnumNumberBody");\n                        }\n\n                        return this.flowEnumErrorInconsistentMemberValues(s, {\n                          enumName: e\n                        }), _i16();\n                      }\n\n                      return t.members = this.flowEnumStringMembers(r.stringMembers, r.defaultedMembers, {\n                        enumName: e\n                      }), this.expect(n.braceR), this.finishNode(t, "EnumStringBody");\n                    }\n\n                    return _i16();\n                  }\n              }\n            }\n          }, {\n            key: "flowParseEnumDeclaration",\n            value: function flowParseEnumDeclaration(t) {\n              var e = this.parseIdentifier();\n              return t.id = e, t.body = this.flowEnumBody(this.startNode(), {\n                enumName: e.name,\n                nameLoc: e.start\n              }), this.finishNode(t, "EnumDeclaration");\n            }\n          }]);\n          return _class3;\n        }(t);\n      },\n      typescript: function typescript(t) {\n        return /*#__PURE__*/function (_t31) {\n          (0, _inherits2.default)(_class4, _t31);\n\n          var _super6 = _createSuper(_class4);\n\n          function _class4() {\n            (0, _classCallCheck2.default)(this, _class4);\n            return _super6.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class4, [{\n            key: "getScopeHandler",\n            value: function getScopeHandler() {\n              return Z;\n            }\n          }, {\n            key: "tsIsIdentifier",\n            value: function tsIsIdentifier() {\n              return this.match(n.name);\n            }\n          }, {\n            key: "tsNextTokenCanFollowModifier",\n            value: function tsNextTokenCanFollowModifier() {\n              return this.next(), !(this.hasPrecedingLineBreak() || this.match(n.parenL) || this.match(n.parenR) || this.match(n.colon) || this.match(n.eq) || this.match(n.question) || this.match(n.bang));\n            }\n          }, {\n            key: "tsParseModifier",\n            value: function tsParseModifier(t) {\n              if (!this.match(n.name)) return;\n              var e = this.state.value;\n              return -1 !== t.indexOf(e) && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this)) ? e : void 0;\n            }\n          }, {\n            key: "tsParseModifiers",\n            value: function tsParseModifiers(t, e) {\n              for (;;) {\n                var _s20 = this.state.start,\n                    _i19 = this.tsParseModifier(e);\n\n                if (!_i19) break;\n                Object.hasOwnProperty.call(t, _i19) && this.raise(_s20, rt.DuplicateModifier, _i19), t[_i19] = !0;\n              }\n            }\n          }, {\n            key: "tsIsListTerminator",\n            value: function tsIsListTerminator(t) {\n              switch (t) {\n                case "EnumMembers":\n                case "TypeMembers":\n                  return this.match(n.braceR);\n\n                case "HeritageClauseElement":\n                  return this.match(n.braceL);\n\n                case "TupleElementTypes":\n                  return this.match(n.bracketR);\n\n                case "TypeParametersOrArguments":\n                  return this.isRelational(">");\n              }\n\n              throw new Error("Unreachable");\n            }\n          }, {\n            key: "tsParseList",\n            value: function tsParseList(t, e) {\n              var s = [];\n\n              for (; !this.tsIsListTerminator(t);) {\n                s.push(e());\n              }\n\n              return s;\n            }\n          }, {\n            key: "tsParseDelimitedList",\n            value: function tsParseDelimitedList(t, e) {\n              return st(this.tsParseDelimitedListWorker(t, e, !0));\n            }\n          }, {\n            key: "tsParseDelimitedListWorker",\n            value: function tsParseDelimitedListWorker(t, e, s) {\n              var i = [];\n\n              for (; !this.tsIsListTerminator(t);) {\n                var _r7 = e();\n\n                if (null == _r7) return;\n\n                if (i.push(_r7), !this.eat(n.comma)) {\n                  if (this.tsIsListTerminator(t)) break;\n                  return void (s && this.expect(n.comma));\n                }\n              }\n\n              return i;\n            }\n          }, {\n            key: "tsParseBracketedList",\n            value: function tsParseBracketedList(t, e, s, i) {\n              i || (s ? this.expect(n.bracketL) : this.expectRelational("<"));\n              var r = this.tsParseDelimitedList(t, e);\n              return s ? this.expect(n.bracketR) : this.expectRelational(">"), r;\n            }\n          }, {\n            key: "tsParseImportType",\n            value: function tsParseImportType() {\n              var t = this.startNode();\n              return this.expect(n._import), this.expect(n.parenL), this.match(n.string) || this.raise(this.state.start, rt.UnsupportedImportTypeArgument), t.argument = this.parseExprAtom(), this.expect(n.parenR), this.eat(n.dot) && (t.qualifier = this.tsParseEntityName(!0)), this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSImportType");\n            }\n          }, {\n            key: "tsParseEntityName",\n            value: function tsParseEntityName(t) {\n              var e = this.parseIdentifier();\n\n              for (; this.eat(n.dot);) {\n                var _s21 = this.startNodeAtNode(e);\n\n                _s21.left = e, _s21.right = this.parseIdentifier(t), e = this.finishNode(_s21, "TSQualifiedName");\n              }\n\n              return e;\n            }\n          }, {\n            key: "tsParseTypeReference",\n            value: function tsParseTypeReference() {\n              var t = this.startNode();\n              return t.typeName = this.tsParseEntityName(!1), !this.hasPrecedingLineBreak() && this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSTypeReference");\n            }\n          }, {\n            key: "tsParseThisTypePredicate",\n            value: function tsParseThisTypePredicate(t) {\n              this.next();\n              var e = this.startNodeAtNode(t);\n              return e.parameterName = t, e.typeAnnotation = this.tsParseTypeAnnotation(!1), this.finishNode(e, "TSTypePredicate");\n            }\n          }, {\n            key: "tsParseThisTypeNode",\n            value: function tsParseThisTypeNode() {\n              var t = this.startNode();\n              return this.next(), this.finishNode(t, "TSThisType");\n            }\n          }, {\n            key: "tsParseTypeQuery",\n            value: function tsParseTypeQuery() {\n              var t = this.startNode();\n              return this.expect(n._typeof), this.match(n._import) ? t.exprName = this.tsParseImportType() : t.exprName = this.tsParseEntityName(!0), this.finishNode(t, "TSTypeQuery");\n            }\n          }, {\n            key: "tsParseTypeParameter",\n            value: function tsParseTypeParameter() {\n              var t = this.startNode();\n              return t.name = this.parseIdentifierName(t.start), t.constraint = this.tsEatThenParseType(n._extends), t.default = this.tsEatThenParseType(n.eq), this.finishNode(t, "TSTypeParameter");\n            }\n          }, {\n            key: "tsTryParseTypeParameters",\n            value: function tsTryParseTypeParameters() {\n              if (this.isRelational("<")) return this.tsParseTypeParameters();\n            }\n          }, {\n            key: "tsParseTypeParameters",\n            value: function tsParseTypeParameters() {\n              var t = this.startNode();\n              return this.isRelational("<") || this.match(n.jsxTagStart) ? this.next() : this.unexpected(), t.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this), !1, !0), this.finishNode(t, "TSTypeParameterDeclaration");\n            }\n          }, {\n            key: "tsTryNextParseConstantContext",\n            value: function tsTryNextParseConstantContext() {\n              return this.lookahead().type === n._const ? (this.next(), this.tsParseTypeReference()) : null;\n            }\n          }, {\n            key: "tsFillSignature",\n            value: function tsFillSignature(t, e) {\n              var s = t === n.arrow;\n              e.typeParameters = this.tsTryParseTypeParameters(), this.expect(n.parenL), e.parameters = this.tsParseBindingListForSignature(), s ? e.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(t) : this.match(t) && (e.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(t));\n            }\n          }, {\n            key: "tsParseBindingListForSignature",\n            value: function tsParseBindingListForSignature() {\n              var _this17 = this;\n\n              return this.parseBindingList(n.parenR, 41).map(function (t) {\n                return "Identifier" !== t.type && "RestElement" !== t.type && "ObjectPattern" !== t.type && "ArrayPattern" !== t.type && _this17.raise(t.start, rt.UnsupportedSignatureParameterKind, t.type), t;\n              });\n            }\n          }, {\n            key: "tsParseTypeMemberSemicolon",\n            value: function tsParseTypeMemberSemicolon() {\n              this.eat(n.comma) || this.semicolon();\n            }\n          }, {\n            key: "tsParseSignatureMember",\n            value: function tsParseSignatureMember(t, e) {\n              return this.tsFillSignature(n.colon, e), this.tsParseTypeMemberSemicolon(), this.finishNode(e, t);\n            }\n          }, {\n            key: "tsIsUnambiguouslyIndexSignature",\n            value: function tsIsUnambiguouslyIndexSignature() {\n              return this.next(), this.eat(n.name) && this.match(n.colon);\n            }\n          }, {\n            key: "tsTryParseIndexSignature",\n            value: function tsTryParseIndexSignature(t) {\n              if (!this.match(n.bracketL) || !this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))) return;\n              this.expect(n.bracketL);\n              var e = this.parseIdentifier();\n              e.typeAnnotation = this.tsParseTypeAnnotation(), this.resetEndLocation(e), this.expect(n.bracketR), t.parameters = [e];\n              var s = this.tsTryParseTypeAnnotation();\n              return s && (t.typeAnnotation = s), this.tsParseTypeMemberSemicolon(), this.finishNode(t, "TSIndexSignature");\n            }\n          }, {\n            key: "tsParsePropertyOrMethodSignature",\n            value: function tsParsePropertyOrMethodSignature(t, e) {\n              this.eat(n.question) && (t.optional = !0);\n              var s = t;\n\n              if (e || !this.match(n.parenL) && !this.isRelational("<")) {\n                var _t32 = s;\n                e && (_t32.readonly = !0);\n\n                var _i20 = this.tsTryParseTypeAnnotation();\n\n                return _i20 && (_t32.typeAnnotation = _i20), this.tsParseTypeMemberSemicolon(), this.finishNode(_t32, "TSPropertySignature");\n              }\n\n              {\n                var _t33 = s;\n                return this.tsFillSignature(n.colon, _t33), this.tsParseTypeMemberSemicolon(), this.finishNode(_t33, "TSMethodSignature");\n              }\n            }\n          }, {\n            key: "tsParseTypeMember",\n            value: function tsParseTypeMember() {\n              var t = this.startNode();\n              if (this.match(n.parenL) || this.isRelational("<")) return this.tsParseSignatureMember("TSCallSignatureDeclaration", t);\n\n              if (this.match(n._new)) {\n                var _e28 = this.startNode();\n\n                return this.next(), this.match(n.parenL) || this.isRelational("<") ? this.tsParseSignatureMember("TSConstructSignatureDeclaration", t) : (t.key = this.createIdentifier(_e28, "new"), this.tsParsePropertyOrMethodSignature(t, !1));\n              }\n\n              var e = !!this.tsParseModifier(["readonly"]),\n                  s = this.tsTryParseIndexSignature(t);\n              return s ? (e && (t.readonly = !0), s) : (this.parsePropertyName(t, !1), this.tsParsePropertyOrMethodSignature(t, e));\n            }\n          }, {\n            key: "tsParseTypeLiteral",\n            value: function tsParseTypeLiteral() {\n              var t = this.startNode();\n              return t.members = this.tsParseObjectTypeMembers(), this.finishNode(t, "TSTypeLiteral");\n            }\n          }, {\n            key: "tsParseObjectTypeMembers",\n            value: function tsParseObjectTypeMembers() {\n              this.expect(n.braceL);\n              var t = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));\n              return this.expect(n.braceR), t;\n            }\n          }, {\n            key: "tsIsStartOfMappedType",\n            value: function tsIsStartOfMappedType() {\n              return this.next(), this.eat(n.plusMin) ? this.isContextual("readonly") : (this.isContextual("readonly") && this.next(), !!this.match(n.bracketL) && (this.next(), !!this.tsIsIdentifier() && (this.next(), this.match(n._in))));\n            }\n          }, {\n            key: "tsParseMappedTypeParameter",\n            value: function tsParseMappedTypeParameter() {\n              var t = this.startNode();\n              return t.name = this.parseIdentifierName(t.start), t.constraint = this.tsExpectThenParseType(n._in), this.finishNode(t, "TSTypeParameter");\n            }\n          }, {\n            key: "tsParseMappedType",\n            value: function tsParseMappedType() {\n              var t = this.startNode();\n              return this.expect(n.braceL), this.match(n.plusMin) ? (t.readonly = this.state.value, this.next(), this.expectContextual("readonly")) : this.eatContextual("readonly") && (t.readonly = !0), this.expect(n.bracketL), t.typeParameter = this.tsParseMappedTypeParameter(), this.expect(n.bracketR), this.match(n.plusMin) ? (t.optional = this.state.value, this.next(), this.expect(n.question)) : this.eat(n.question) && (t.optional = !0), t.typeAnnotation = this.tsTryParseType(), this.semicolon(), this.expect(n.braceR), this.finishNode(t, "TSMappedType");\n            }\n          }, {\n            key: "tsParseTupleType",\n            value: function tsParseTupleType() {\n              var _this18 = this;\n\n              var t = this.startNode();\n              t.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), !0, !1);\n              var e = !1;\n              return t.elementTypes.forEach(function (t) {\n                "TSOptionalType" === t.type ? e = !0 : e && "TSRestType" !== t.type && _this18.raise(t.start, rt.OptionalTypeBeforeRequired);\n              }), this.finishNode(t, "TSTupleType");\n            }\n          }, {\n            key: "tsParseTupleElementType",\n            value: function tsParseTupleElementType() {\n              if (this.match(n.ellipsis)) {\n                var _t34 = this.startNode();\n\n                return this.next(), _t34.typeAnnotation = this.tsParseType(), this.match(n.comma) && 93 !== this.lookaheadCharCode() && this.raiseRestNotLast(this.state.start), this.finishNode(_t34, "TSRestType");\n              }\n\n              var t = this.tsParseType();\n\n              if (this.eat(n.question)) {\n                var _e29 = this.startNodeAtNode(t);\n\n                return _e29.typeAnnotation = t, this.finishNode(_e29, "TSOptionalType");\n              }\n\n              return t;\n            }\n          }, {\n            key: "tsParseParenthesizedType",\n            value: function tsParseParenthesizedType() {\n              var t = this.startNode();\n              return this.expect(n.parenL), t.typeAnnotation = this.tsParseType(), this.expect(n.parenR), this.finishNode(t, "TSParenthesizedType");\n            }\n          }, {\n            key: "tsParseFunctionOrConstructorType",\n            value: function tsParseFunctionOrConstructorType(t) {\n              var e = this.startNode();\n              return "TSConstructorType" === t && this.expect(n._new), this.tsFillSignature(n.arrow, e), this.finishNode(e, t);\n            }\n          }, {\n            key: "tsParseLiteralTypeNode",\n            value: function tsParseLiteralTypeNode() {\n              var _this19 = this;\n\n              var t = this.startNode();\n              return t.literal = function () {\n                switch (_this19.state.type) {\n                  case n.num:\n                  case n.string:\n                  case n._true:\n                  case n._false:\n                    return _this19.parseExprAtom();\n\n                  default:\n                    throw _this19.unexpected();\n                }\n              }(), this.finishNode(t, "TSLiteralType");\n            }\n          }, {\n            key: "tsParseTemplateLiteralType",\n            value: function tsParseTemplateLiteralType() {\n              var t = this.startNode(),\n                  e = this.parseTemplate(!1);\n              return e.expressions.length > 0 && this.raise(e.expressions[0].start, rt.TemplateTypeHasSubstitution), t.literal = e, this.finishNode(t, "TSLiteralType");\n            }\n          }, {\n            key: "tsParseThisTypeOrThisTypePredicate",\n            value: function tsParseThisTypeOrThisTypePredicate() {\n              var t = this.tsParseThisTypeNode();\n              return this.isContextual("is") && !this.hasPrecedingLineBreak() ? this.tsParseThisTypePredicate(t) : t;\n            }\n          }, {\n            key: "tsParseNonArrayType",\n            value: function tsParseNonArrayType() {\n              switch (this.state.type) {\n                case n.name:\n                case n._void:\n                case n._null:\n                  {\n                    var _t35 = this.match(n._void) ? "TSVoidKeyword" : this.match(n._null) ? "TSNullKeyword" : function (t) {\n                      switch (t) {\n                        case "any":\n                          return "TSAnyKeyword";\n\n                        case "boolean":\n                          return "TSBooleanKeyword";\n\n                        case "bigint":\n                          return "TSBigIntKeyword";\n\n                        case "never":\n                          return "TSNeverKeyword";\n\n                        case "number":\n                          return "TSNumberKeyword";\n\n                        case "object":\n                          return "TSObjectKeyword";\n\n                        case "string":\n                          return "TSStringKeyword";\n\n                        case "symbol":\n                          return "TSSymbolKeyword";\n\n                        case "undefined":\n                          return "TSUndefinedKeyword";\n\n                        case "unknown":\n                          return "TSUnknownKeyword";\n\n                        default:\n                          return;\n                      }\n                    }(this.state.value);\n\n                    if (void 0 !== _t35 && 46 !== this.lookaheadCharCode()) {\n                      var _e30 = this.startNode();\n\n                      return this.next(), this.finishNode(_e30, _t35);\n                    }\n\n                    return this.tsParseTypeReference();\n                  }\n\n                case n.string:\n                case n.num:\n                case n._true:\n                case n._false:\n                  return this.tsParseLiteralTypeNode();\n\n                case n.plusMin:\n                  if ("-" === this.state.value) {\n                    var _t36 = this.startNode();\n\n                    if (this.lookahead().type !== n.num) throw this.unexpected();\n                    return _t36.literal = this.parseMaybeUnary(), this.finishNode(_t36, "TSLiteralType");\n                  }\n\n                  break;\n\n                case n._this:\n                  return this.tsParseThisTypeOrThisTypePredicate();\n\n                case n._typeof:\n                  return this.tsParseTypeQuery();\n\n                case n._import:\n                  return this.tsParseImportType();\n\n                case n.braceL:\n                  return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n                case n.bracketL:\n                  return this.tsParseTupleType();\n\n                case n.parenL:\n                  return this.tsParseParenthesizedType();\n\n                case n.backQuote:\n                  return this.tsParseTemplateLiteralType();\n              }\n\n              throw this.unexpected();\n            }\n          }, {\n            key: "tsParseArrayTypeOrHigher",\n            value: function tsParseArrayTypeOrHigher() {\n              var t = this.tsParseNonArrayType();\n\n              for (; !this.hasPrecedingLineBreak() && this.eat(n.bracketL);) {\n                if (this.match(n.bracketR)) {\n                  var _e31 = this.startNodeAtNode(t);\n\n                  _e31.elementType = t, this.expect(n.bracketR), t = this.finishNode(_e31, "TSArrayType");\n                } else {\n                  var _e32 = this.startNodeAtNode(t);\n\n                  _e32.objectType = t, _e32.indexType = this.tsParseType(), this.expect(n.bracketR), t = this.finishNode(_e32, "TSIndexedAccessType");\n                }\n              }\n\n              return t;\n            }\n          }, {\n            key: "tsParseTypeOperator",\n            value: function tsParseTypeOperator(t) {\n              var e = this.startNode();\n              return this.expectContextual(t), e.operator = t, e.typeAnnotation = this.tsParseTypeOperatorOrHigher(), "readonly" === t && this.tsCheckTypeAnnotationForReadOnly(e), this.finishNode(e, "TSTypeOperator");\n            }\n          }, {\n            key: "tsCheckTypeAnnotationForReadOnly",\n            value: function tsCheckTypeAnnotationForReadOnly(t) {\n              switch (t.typeAnnotation.type) {\n                case "TSTupleType":\n                case "TSArrayType":\n                  return;\n\n                default:\n                  this.raise(t.start, rt.UnexpectedReadonly);\n              }\n            }\n          }, {\n            key: "tsParseInferType",\n            value: function tsParseInferType() {\n              var t = this.startNode();\n              this.expectContextual("infer");\n              var e = this.startNode();\n              return e.name = this.parseIdentifierName(e.start), t.typeParameter = this.finishNode(e, "TSTypeParameter"), this.finishNode(t, "TSInferType");\n            }\n          }, {\n            key: "tsParseTypeOperatorOrHigher",\n            value: function tsParseTypeOperatorOrHigher() {\n              var _this20 = this;\n\n              var t = ["keyof", "unique", "readonly"].find(function (t) {\n                return _this20.isContextual(t);\n              });\n              return t ? this.tsParseTypeOperator(t) : this.isContextual("infer") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n            }\n          }, {\n            key: "tsParseUnionOrIntersectionType",\n            value: function tsParseUnionOrIntersectionType(t, e, s) {\n              this.eat(s);\n              var i = e();\n\n              if (this.match(s)) {\n                var _r8 = [i];\n\n                for (; this.eat(s);) {\n                  _r8.push(e());\n                }\n\n                var _a9 = this.startNodeAtNode(i);\n\n                _a9.types = _r8, i = this.finishNode(_a9, t);\n              }\n\n              return i;\n            }\n          }, {\n            key: "tsParseIntersectionTypeOrHigher",\n            value: function tsParseIntersectionTypeOrHigher() {\n              return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), n.bitwiseAND);\n            }\n          }, {\n            key: "tsParseUnionTypeOrHigher",\n            value: function tsParseUnionTypeOrHigher() {\n              return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), n.bitwiseOR);\n            }\n          }, {\n            key: "tsIsStartOfFunctionType",\n            value: function tsIsStartOfFunctionType() {\n              return !!this.isRelational("<") || this.match(n.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n            }\n          }, {\n            key: "tsSkipParameterStart",\n            value: function tsSkipParameterStart() {\n              if (this.match(n.name) || this.match(n._this)) return this.next(), !0;\n\n              if (this.match(n.braceL)) {\n                var _t37 = 1;\n\n                for (this.next(); _t37 > 0;) {\n                  this.match(n.braceL) ? ++_t37 : this.match(n.braceR) && --_t37, this.next();\n                }\n\n                return !0;\n              }\n\n              if (this.match(n.bracketL)) {\n                var _t38 = 1;\n\n                for (this.next(); _t38 > 0;) {\n                  this.match(n.bracketL) ? ++_t38 : this.match(n.bracketR) && --_t38, this.next();\n                }\n\n                return !0;\n              }\n\n              return !1;\n            }\n          }, {\n            key: "tsIsUnambiguouslyStartOfFunctionType",\n            value: function tsIsUnambiguouslyStartOfFunctionType() {\n              if (this.next(), this.match(n.parenR) || this.match(n.ellipsis)) return !0;\n\n              if (this.tsSkipParameterStart()) {\n                if (this.match(n.colon) || this.match(n.comma) || this.match(n.question) || this.match(n.eq)) return !0;\n                if (this.match(n.parenR) && (this.next(), this.match(n.arrow))) return !0;\n              }\n\n              return !1;\n            }\n          }, {\n            key: "tsParseTypeOrTypePredicateAnnotation",\n            value: function tsParseTypeOrTypePredicateAnnotation(t) {\n              var _this21 = this;\n\n              return this.tsInType(function () {\n                var e = _this21.startNode();\n\n                _this21.expect(t);\n\n                var s = _this21.tsTryParse(_this21.tsParseTypePredicateAsserts.bind(_this21));\n\n                if (s && _this21.match(n._this)) {\n                  var _t39 = _this21.tsParseThisTypeOrThisTypePredicate();\n\n                  if ("TSThisType" === _t39.type) {\n                    var _s22 = _this21.startNodeAtNode(e);\n\n                    _s22.parameterName = _t39, _s22.asserts = !0, _t39 = _this21.finishNode(_s22, "TSTypePredicate");\n                  } else _t39.asserts = !0;\n\n                  return e.typeAnnotation = _t39, _this21.finishNode(e, "TSTypeAnnotation");\n                }\n\n                var i = _this21.tsIsIdentifier() && _this21.tsTryParse(_this21.tsParseTypePredicatePrefix.bind(_this21));\n\n                if (!i) {\n                  if (!s) return _this21.tsParseTypeAnnotation(!1, e);\n\n                  var _t40 = _this21.startNodeAtNode(e);\n\n                  return _t40.parameterName = _this21.parseIdentifier(), _t40.asserts = s, e.typeAnnotation = _this21.finishNode(_t40, "TSTypePredicate"), _this21.finishNode(e, "TSTypeAnnotation");\n                }\n\n                var r = _this21.tsParseTypeAnnotation(!1),\n                    a = _this21.startNodeAtNode(e);\n\n                return a.parameterName = i, a.typeAnnotation = r, a.asserts = s, e.typeAnnotation = _this21.finishNode(a, "TSTypePredicate"), _this21.finishNode(e, "TSTypeAnnotation");\n              });\n            }\n          }, {\n            key: "tsTryParseTypeOrTypePredicateAnnotation",\n            value: function tsTryParseTypeOrTypePredicateAnnotation() {\n              return this.match(n.colon) ? this.tsParseTypeOrTypePredicateAnnotation(n.colon) : void 0;\n            }\n          }, {\n            key: "tsTryParseTypeAnnotation",\n            value: function tsTryParseTypeAnnotation() {\n              return this.match(n.colon) ? this.tsParseTypeAnnotation() : void 0;\n            }\n          }, {\n            key: "tsTryParseType",\n            value: function tsTryParseType() {\n              return this.tsEatThenParseType(n.colon);\n            }\n          }, {\n            key: "tsParseTypePredicatePrefix",\n            value: function tsParseTypePredicatePrefix() {\n              var t = this.parseIdentifier();\n              if (this.isContextual("is") && !this.hasPrecedingLineBreak()) return this.next(), t;\n            }\n          }, {\n            key: "tsParseTypePredicateAsserts",\n            value: function tsParseTypePredicateAsserts() {\n              if (!this.match(n.name) || "asserts" !== this.state.value || this.hasPrecedingLineBreak()) return !1;\n              var t = this.state.containsEsc;\n              return this.next(), !(!this.match(n.name) && !this.match(n._this)) && (t && this.raise(this.state.lastTokStart, f.InvalidEscapedReservedWord, "asserts"), !0);\n            }\n          }, {\n            key: "tsParseTypeAnnotation",\n            value: function tsParseTypeAnnotation() {\n              var _this22 = this;\n\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.startNode();\n              return this.tsInType(function () {\n                t && _this22.expect(n.colon), e.typeAnnotation = _this22.tsParseType();\n              }), this.finishNode(e, "TSTypeAnnotation");\n            }\n          }, {\n            key: "tsParseType",\n            value: function tsParseType() {\n              it(this.state.inType);\n              var t = this.tsParseNonConditionalType();\n              if (this.hasPrecedingLineBreak() || !this.eat(n._extends)) return t;\n              var e = this.startNodeAtNode(t);\n              return e.checkType = t, e.extendsType = this.tsParseNonConditionalType(), this.expect(n.question), e.trueType = this.tsParseType(), this.expect(n.colon), e.falseType = this.tsParseType(), this.finishNode(e, "TSConditionalType");\n            }\n          }, {\n            key: "tsParseNonConditionalType",\n            value: function tsParseNonConditionalType() {\n              return this.tsIsStartOfFunctionType() ? this.tsParseFunctionOrConstructorType("TSFunctionType") : this.match(n._new) ? this.tsParseFunctionOrConstructorType("TSConstructorType") : this.tsParseUnionTypeOrHigher();\n            }\n          }, {\n            key: "tsParseTypeAssertion",\n            value: function tsParseTypeAssertion() {\n              var t = this.startNode(),\n                  e = this.tsTryNextParseConstantContext();\n              return t.typeAnnotation = e || this.tsNextThenParseType(), this.expectRelational(">"), t.expression = this.parseMaybeUnary(), this.finishNode(t, "TSTypeAssertion");\n            }\n          }, {\n            key: "tsParseHeritageClause",\n            value: function tsParseHeritageClause(t) {\n              var e = this.state.start,\n                  s = this.tsParseDelimitedList("HeritageClauseElement", this.tsParseExpressionWithTypeArguments.bind(this));\n              return s.length || this.raise(e, rt.EmptyHeritageClauseType, t), s;\n            }\n          }, {\n            key: "tsParseExpressionWithTypeArguments",\n            value: function tsParseExpressionWithTypeArguments() {\n              var t = this.startNode();\n              return t.expression = this.tsParseEntityName(!1), this.isRelational("<") && (t.typeParameters = this.tsParseTypeArguments()), this.finishNode(t, "TSExpressionWithTypeArguments");\n            }\n          }, {\n            key: "tsParseInterfaceDeclaration",\n            value: function tsParseInterfaceDeclaration(t) {\n              t.id = this.parseIdentifier(), this.checkLVal(t.id, 130, void 0, "typescript interface declaration"), t.typeParameters = this.tsTryParseTypeParameters(), this.eat(n._extends) && (t.extends = this.tsParseHeritageClause("extends"));\n              var e = this.startNode();\n              return e.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this)), t.body = this.finishNode(e, "TSInterfaceBody"), this.finishNode(t, "TSInterfaceDeclaration");\n            }\n          }, {\n            key: "tsParseTypeAliasDeclaration",\n            value: function tsParseTypeAliasDeclaration(t) {\n              return t.id = this.parseIdentifier(), this.checkLVal(t.id, 2, void 0, "typescript type alias"), t.typeParameters = this.tsTryParseTypeParameters(), t.typeAnnotation = this.tsExpectThenParseType(n.eq), this.semicolon(), this.finishNode(t, "TSTypeAliasDeclaration");\n            }\n          }, {\n            key: "tsInNoContext",\n            value: function tsInNoContext(t) {\n              var e = this.state.context;\n              this.state.context = [e[0]];\n\n              try {\n                return t();\n              } finally {\n                this.state.context = e;\n              }\n            }\n          }, {\n            key: "tsInType",\n            value: function tsInType(t) {\n              var e = this.state.inType;\n              this.state.inType = !0;\n\n              try {\n                return t();\n              } finally {\n                this.state.inType = e;\n              }\n            }\n          }, {\n            key: "tsEatThenParseType",\n            value: function tsEatThenParseType(t) {\n              return this.match(t) ? this.tsNextThenParseType() : void 0;\n            }\n          }, {\n            key: "tsExpectThenParseType",\n            value: function tsExpectThenParseType(t) {\n              var _this23 = this;\n\n              return this.tsDoThenParseType(function () {\n                return _this23.expect(t);\n              });\n            }\n          }, {\n            key: "tsNextThenParseType",\n            value: function tsNextThenParseType() {\n              var _this24 = this;\n\n              return this.tsDoThenParseType(function () {\n                return _this24.next();\n              });\n            }\n          }, {\n            key: "tsDoThenParseType",\n            value: function tsDoThenParseType(t) {\n              var _this25 = this;\n\n              return this.tsInType(function () {\n                return t(), _this25.tsParseType();\n              });\n            }\n          }, {\n            key: "tsParseEnumMember",\n            value: function tsParseEnumMember() {\n              var t = this.startNode();\n              return t.id = this.match(n.string) ? this.parseExprAtom() : this.parseIdentifier(!0), this.eat(n.eq) && (t.initializer = this.parseMaybeAssign()), this.finishNode(t, "TSEnumMember");\n            }\n          }, {\n            key: "tsParseEnumDeclaration",\n            value: function tsParseEnumDeclaration(t, e) {\n              return e && (t.const = !0), t.id = this.parseIdentifier(), this.checkLVal(t.id, e ? 779 : 267, void 0, "typescript enum declaration"), this.expect(n.braceL), t.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this)), this.expect(n.braceR), this.finishNode(t, "TSEnumDeclaration");\n            }\n          }, {\n            key: "tsParseModuleBlock",\n            value: function tsParseModuleBlock() {\n              var t = this.startNode();\n              return this.scope.enter(0), this.expect(n.braceL), this.parseBlockOrModuleBlockBody(t.body = [], void 0, !0, n.braceR), this.scope.exit(), this.finishNode(t, "TSModuleBlock");\n            }\n          }, {\n            key: "tsParseModuleOrNamespaceDeclaration",\n            value: function tsParseModuleOrNamespaceDeclaration(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;\n\n              if (t.id = this.parseIdentifier(), e || this.checkLVal(t.id, 1024, null, "module or namespace declaration"), this.eat(n.dot)) {\n                var _e33 = this.startNode();\n\n                this.tsParseModuleOrNamespaceDeclaration(_e33, !0), t.body = _e33;\n              } else this.scope.enter(128), this.prodParam.enter(0), t.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit();\n\n              return this.finishNode(t, "TSModuleDeclaration");\n            }\n          }, {\n            key: "tsParseAmbientExternalModuleDeclaration",\n            value: function tsParseAmbientExternalModuleDeclaration(t) {\n              return this.isContextual("global") ? (t.global = !0, t.id = this.parseIdentifier()) : this.match(n.string) ? t.id = this.parseExprAtom() : this.unexpected(), this.match(n.braceL) ? (this.scope.enter(128), this.prodParam.enter(0), t.body = this.tsParseModuleBlock(), this.prodParam.exit(), this.scope.exit()) : this.semicolon(), this.finishNode(t, "TSModuleDeclaration");\n            }\n          }, {\n            key: "tsParseImportEqualsDeclaration",\n            value: function tsParseImportEqualsDeclaration(t, e) {\n              return t.isExport = e || !1, t.id = this.parseIdentifier(), this.checkLVal(t.id, 9, void 0, "import equals declaration"), this.expect(n.eq), t.moduleReference = this.tsParseModuleReference(), this.semicolon(), this.finishNode(t, "TSImportEqualsDeclaration");\n            }\n          }, {\n            key: "tsIsExternalModuleReference",\n            value: function tsIsExternalModuleReference() {\n              return this.isContextual("require") && 40 === this.lookaheadCharCode();\n            }\n          }, {\n            key: "tsParseModuleReference",\n            value: function tsParseModuleReference() {\n              return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(!1);\n            }\n          }, {\n            key: "tsParseExternalModuleReference",\n            value: function tsParseExternalModuleReference() {\n              var t = this.startNode();\n              if (this.expectContextual("require"), this.expect(n.parenL), !this.match(n.string)) throw this.unexpected();\n              return t.expression = this.parseExprAtom(), this.expect(n.parenR), this.finishNode(t, "TSExternalModuleReference");\n            }\n          }, {\n            key: "tsLookAhead",\n            value: function tsLookAhead(t) {\n              var e = this.state.clone(),\n                  s = t();\n              return this.state = e, s;\n            }\n          }, {\n            key: "tsTryParseAndCatch",\n            value: function tsTryParseAndCatch(t) {\n              var e = this.tryParse(function (e) {\n                return t() || e();\n              });\n              if (!e.aborted && e.node) return e.error && (this.state = e.failState), e.node;\n            }\n          }, {\n            key: "tsTryParse",\n            value: function tsTryParse(t) {\n              var e = this.state.clone(),\n                  s = t();\n              return void 0 !== s && !1 !== s ? s : void (this.state = e);\n            }\n          }, {\n            key: "tsTryParseDeclare",\n            value: function tsTryParseDeclare(t) {\n              if (this.isLineTerminator()) return;\n              var e,\n                  s = this.state.type;\n\n              switch (this.isContextual("let") && (s = n._var, e = "let"), s) {\n                case n._function:\n                  return this.parseFunctionStatement(t, !1, !0);\n\n                case n._class:\n                  return t.declare = !0, this.parseClass(t, !0, !1);\n\n                case n._const:\n                  if (this.match(n._const) && this.isLookaheadContextual("enum")) return this.expect(n._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(t, !0);\n\n                case n._var:\n                  return e = e || this.state.value, this.parseVarStatement(t, e);\n\n                case n.name:\n                  {\n                    var _e34 = this.state.value;\n                    return "global" === _e34 ? this.tsParseAmbientExternalModuleDeclaration(t) : this.tsParseDeclaration(t, _e34, !0);\n                  }\n              }\n            }\n          }, {\n            key: "tsTryParseExportDeclaration",\n            value: function tsTryParseExportDeclaration() {\n              return this.tsParseDeclaration(this.startNode(), this.state.value, !0);\n            }\n          }, {\n            key: "tsParseExpressionStatement",\n            value: function tsParseExpressionStatement(t, e) {\n              switch (e.name) {\n                case "declare":\n                  {\n                    var _e35 = this.tsTryParseDeclare(t);\n\n                    if (_e35) return _e35.declare = !0, _e35;\n                    break;\n                  }\n\n                case "global":\n                  if (this.match(n.braceL)) {\n                    this.scope.enter(128), this.prodParam.enter(0);\n                    var _s23 = t;\n                    return _s23.global = !0, _s23.id = e, _s23.body = this.tsParseModuleBlock(), this.scope.exit(), this.prodParam.exit(), this.finishNode(_s23, "TSModuleDeclaration");\n                  }\n\n                  break;\n\n                default:\n                  return this.tsParseDeclaration(t, e.name, !1);\n              }\n            }\n          }, {\n            key: "tsParseDeclaration",\n            value: function tsParseDeclaration(t, e, s) {\n              switch (e) {\n                case "abstract":\n                  if (this.tsCheckLineTerminatorAndMatch(n._class, s)) {\n                    var _e36 = t;\n                    return _e36.abstract = !0, s && (this.next(), this.match(n._class) || this.unexpected(null, n._class)), this.parseClass(_e36, !0, !1);\n                  }\n\n                  break;\n\n                case "enum":\n                  if (s || this.match(n.name)) return s && this.next(), this.tsParseEnumDeclaration(t, !1);\n                  break;\n\n                case "interface":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseInterfaceDeclaration(t);\n                  break;\n\n                case "module":\n                  if (s && this.next(), this.match(n.string)) return this.tsParseAmbientExternalModuleDeclaration(t);\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return this.tsParseModuleOrNamespaceDeclaration(t);\n                  break;\n\n                case "namespace":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseModuleOrNamespaceDeclaration(t);\n                  break;\n\n                case "type":\n                  if (this.tsCheckLineTerminatorAndMatch(n.name, s)) return s && this.next(), this.tsParseTypeAliasDeclaration(t);\n              }\n            }\n          }, {\n            key: "tsCheckLineTerminatorAndMatch",\n            value: function tsCheckLineTerminatorAndMatch(t, e) {\n              return (e || this.match(t)) && !this.isLineTerminator();\n            }\n          }, {\n            key: "tsTryParseGenericAsyncArrowFunction",\n            value: function tsTryParseGenericAsyncArrowFunction(t, e) {\n              var _this26 = this;\n\n              if (!this.isRelational("<")) return;\n              var s = this.state.maybeInArrowParameters,\n                  i = this.state.yieldPos,\n                  r = this.state.awaitPos;\n              this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1;\n              var a = this.tsTryParseAndCatch(function () {\n                var s = _this26.startNodeAt(t, e);\n\n                return s.typeParameters = _this26.tsParseTypeParameters(), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionParams", _this26).call(_this26, s), s.returnType = _this26.tsTryParseTypeOrTypePredicateAnnotation(), _this26.expect(n.arrow), s;\n              });\n              return this.state.maybeInArrowParameters = s, this.state.yieldPos = i, this.state.awaitPos = r, a ? this.parseArrowExpression(a, null, !0) : void 0;\n            }\n          }, {\n            key: "tsParseTypeArguments",\n            value: function tsParseTypeArguments() {\n              var _this27 = this;\n\n              var t = this.startNode();\n              return t.params = this.tsInType(function () {\n                return _this27.tsInNoContext(function () {\n                  return _this27.expectRelational("<"), _this27.tsParseDelimitedList("TypeParametersOrArguments", _this27.tsParseType.bind(_this27));\n                });\n              }), this.state.exprAllowed = !1, this.expectRelational(">"), this.finishNode(t, "TSTypeParameterInstantiation");\n            }\n          }, {\n            key: "tsIsDeclarationStart",\n            value: function tsIsDeclarationStart() {\n              if (this.match(n.name)) switch (this.state.value) {\n                case "abstract":\n                case "declare":\n                case "enum":\n                case "interface":\n                case "module":\n                case "namespace":\n                case "type":\n                  return !0;\n              }\n              return !1;\n            }\n          }, {\n            key: "isExportDefaultSpecifier",\n            value: function isExportDefaultSpecifier() {\n              return !this.tsIsDeclarationStart() && (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isExportDefaultSpecifier", this).call(this);\n            }\n          }, {\n            key: "parseAssignableListItem",\n            value: function parseAssignableListItem(t, e) {\n              var s = this.state.start,\n                  i = this.state.startLoc;\n              var r,\n                  a = !1;\n              t && (r = this.parseAccessModifier(), a = !!this.tsParseModifier(["readonly"]));\n              var n = this.parseMaybeDefault();\n              this.parseAssignableListItemTypes(n);\n              var o = this.parseMaybeDefault(n.start, n.loc.start, n);\n\n              if (r || a) {\n                var _t41 = this.startNodeAt(s, i);\n\n                return e.length && (_t41.decorators = e), r && (_t41.accessibility = r), a && (_t41.readonly = a), "Identifier" !== o.type && "AssignmentPattern" !== o.type && this.raise(_t41.start, rt.UnsupportedParameterPropertyKind), _t41.parameter = o, this.finishNode(_t41, "TSParameterProperty");\n              }\n\n              return e.length && (n.decorators = e), o;\n            }\n          }, {\n            key: "parseFunctionBodyAndFinish",\n            value: function parseFunctionBodyAndFinish(t, e) {\n              var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n              this.match(n.colon) && (t.returnType = this.tsParseTypeOrTypePredicateAnnotation(n.colon));\n              var i = "FunctionDeclaration" === e ? "TSDeclareFunction" : "ClassMethod" === e ? "TSDeclareMethod" : void 0;\n              i && !this.match(n.braceL) && this.isLineTerminator() ? this.finishNode(t, i) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionBodyAndFinish", this).call(this, t, e, s);\n            }\n          }, {\n            key: "registerFunctionStatementId",\n            value: function registerFunctionStatementId(t) {\n              !t.body && t.id ? this.checkLVal(t.id, 1024, null, "function name") : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "registerFunctionStatementId", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseSubscript",\n            value: function parseSubscript(t, e, s, i, r) {\n              var _this28 = this;\n\n              if (!this.hasPrecedingLineBreak() && this.match(n.bang)) {\n                this.state.exprAllowed = !1, this.next();\n\n                var _i21 = this.startNodeAt(e, s);\n\n                return _i21.expression = t, this.finishNode(_i21, "TSNonNullExpression");\n              }\n\n              if (this.isRelational("<")) {\n                var _a10 = this.tsTryParseAndCatch(function () {\n                  if (!i && _this28.atPossibleAsyncArrow(t)) {\n                    var _t42 = _this28.tsTryParseGenericAsyncArrowFunction(e, s);\n\n                    if (_t42) return _t42;\n                  }\n\n                  var a = _this28.startNodeAt(e, s);\n\n                  a.callee = t;\n\n                  var o = _this28.tsParseTypeArguments();\n\n                  if (o) {\n                    if (!i && _this28.eat(n.parenL)) return a.arguments = _this28.parseCallExpressionArguments(n.parenR, !1), a.typeParameters = o, _this28.finishCallExpression(a, r.optionalChainMember);\n                    if (_this28.match(n.backQuote)) return _this28.parseTaggedTemplateExpression(e, s, t, r, o);\n                  }\n\n                  _this28.unexpected();\n                });\n\n                if (_a10) return _a10;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseSubscript", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parseNewArguments",\n            value: function parseNewArguments(t) {\n              var _this29 = this;\n\n              if (this.isRelational("<")) {\n                var _e37 = this.tsTryParseAndCatch(function () {\n                  var t = _this29.tsParseTypeArguments();\n\n                  return _this29.match(n.parenL) || _this29.unexpected(), t;\n                });\n\n                _e37 && (t.typeParameters = _e37);\n              }\n\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseNewArguments", this).call(this, t);\n            }\n          }, {\n            key: "parseExprOp",\n            value: function parseExprOp(t, e, s, i, r) {\n              if (st(n._in.binop) > i && !this.hasPrecedingLineBreak() && this.isContextual("as")) {\n                var _a11 = this.startNodeAt(e, s);\n\n                _a11.expression = t;\n\n                var _n4 = this.tsTryNextParseConstantContext();\n\n                return _a11.typeAnnotation = _n4 || this.tsNextThenParseType(), this.finishNode(_a11, "TSAsExpression"), this.parseExprOp(_a11, e, s, i, r);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExprOp", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "checkReservedWord",\n            value: function checkReservedWord(t, e, s, i) {}\n          }, {\n            key: "checkDuplicateExports",\n            value: function checkDuplicateExports() {}\n          }, {\n            key: "parseImport",\n            value: function parseImport(t) {\n              if (this.match(n.name) || this.match(n.star) || this.match(n.braceL)) {\n                var _e38 = this.lookahead();\n\n                if (this.match(n.name) && _e38.type === n.eq) return this.tsParseImportEqualsDeclaration(t);\n                !this.isContextual("type") || _e38.type === n.comma || _e38.type === n.name && "from" === _e38.value ? t.importKind = "value" : (t.importKind = "type", this.next());\n              }\n\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseImport", this).call(this, t);\n              return "type" === e.importKind && e.specifiers.length > 1 && "ImportDefaultSpecifier" === e.specifiers[0].type && this.raise(e.start, "A type-only import can specify a default import or named bindings, but not both."), e;\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              if (this.match(n._import)) return this.expect(n._import), this.tsParseImportEqualsDeclaration(t, !0);\n\n              if (this.eat(n.eq)) {\n                var _e39 = t;\n                return _e39.expression = this.parseExpression(), this.semicolon(), this.finishNode(_e39, "TSExportAssignment");\n              }\n\n              if (this.eatContextual("as")) {\n                var _e40 = t;\n                return this.expectContextual("namespace"), _e40.id = this.parseIdentifier(), this.semicolon(), this.finishNode(_e40, "TSNamespaceExportDeclaration");\n              }\n\n              return this.isContextual("type") && this.lookahead().type === n.braceL ? (this.next(), t.exportKind = "type") : t.exportKind = "value", (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExport", this).call(this, t);\n            }\n          }, {\n            key: "isAbstractClass",\n            value: function isAbstractClass() {\n              return this.isContextual("abstract") && this.lookahead().type === n._class;\n            }\n          }, {\n            key: "parseExportDefaultExpression",\n            value: function parseExportDefaultExpression() {\n              if (this.isAbstractClass()) {\n                var _t43 = this.startNode();\n\n                return this.next(), this.parseClass(_t43, !0, !0), _t43.abstract = !0, _t43;\n              }\n\n              if ("interface" === this.state.value) {\n                var _t44 = this.tsParseDeclaration(this.startNode(), this.state.value, !0);\n\n                if (_t44) return _t44;\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExportDefaultExpression", this).call(this);\n            }\n          }, {\n            key: "parseStatementContent",\n            value: function parseStatementContent(t, e) {\n              if (this.state.type === n._const) {\n                var _t45 = this.lookahead();\n\n                if (_t45.type === n.name && "enum" === _t45.value) {\n                  var _t46 = this.startNode();\n\n                  return this.expect(n._const), this.expectContextual("enum"), this.tsParseEnumDeclaration(_t46, !0);\n                }\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseStatementContent", this).call(this, t, e);\n            }\n          }, {\n            key: "parseAccessModifier",\n            value: function parseAccessModifier() {\n              return this.tsParseModifier(["public", "protected", "private"]);\n            }\n          }, {\n            key: "parseClassMember",\n            value: function parseClassMember(t, e, s, i) {\n              this.tsParseModifiers(e, ["declare"]);\n              var r = this.parseAccessModifier();\n              r && (e.accessibility = r), this.tsParseModifiers(e, ["declare"]), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassMember", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassMemberWithIsStatic",\n            value: function parseClassMemberWithIsStatic(t, e, s, i, r) {\n              this.tsParseModifiers(e, ["abstract", "readonly", "declare"]);\n              var a = this.tsTryParseIndexSignature(e);\n              if (a) return t.body.push(a), e.abstract && this.raise(e.start, rt.IndexSignatureHasAbstract), i && this.raise(e.start, rt.IndexSignatureHasStatic), void (e.accessibility && this.raise(e.start, rt.IndexSignatureHasAccessibility, e.accessibility));\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassMemberWithIsStatic", this).call(this, t, e, s, i, r);\n            }\n          }, {\n            key: "parsePostMemberNameModifiers",\n            value: function parsePostMemberNameModifiers(t) {\n              this.eat(n.question) && (t.optional = !0), t.readonly && this.match(n.parenL) && this.raise(t.start, rt.ClassMethodHasReadonly), t.declare && this.match(n.parenL) && this.raise(t.start, rt.ClassMethodHasDeclare);\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              return ("Identifier" === e.type ? this.tsParseExpressionStatement(t, e) : void 0) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExpressionStatement", this).call(this, t, e);\n            }\n          }, {\n            key: "shouldParseExportDeclaration",\n            value: function shouldParseExportDeclaration() {\n              return !!this.tsIsDeclarationStart() || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseExportDeclaration", this).call(this);\n            }\n          }, {\n            key: "parseConditional",\n            value: function parseConditional(t, e, s, i, r) {\n              var _this30 = this;\n\n              if (!r || !this.match(n.question)) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseConditional", this).call(this, t, e, s, i, r);\n              var a = this.tryParse(function () {\n                return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseConditional", _this30).call(_this30, t, e, s, i);\n              });\n              return a.node ? (a.error && (this.state = a.failState), a.node) : (r.start = a.error.pos || this.state.start, t);\n            }\n          }, {\n            key: "parseParenItem",\n            value: function parseParenItem(t, e, s) {\n              if (t = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseParenItem", this).call(this, t, e, s), this.eat(n.question) && (t.optional = !0, this.resetEndLocation(t)), this.match(n.colon)) {\n                var _i22 = this.startNodeAt(e, s);\n\n                return _i22.expression = t, _i22.typeAnnotation = this.tsParseTypeAnnotation(), this.finishNode(_i22, "TSTypeCastExpression");\n              }\n\n              return t;\n            }\n          }, {\n            key: "parseExportDeclaration",\n            value: function parseExportDeclaration(t) {\n              var e = this.state.start,\n                  s = this.state.startLoc,\n                  i = this.eatContextual("declare");\n              var r;\n              return this.match(n.name) && (r = this.tsTryParseExportDeclaration()), r || (r = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseExportDeclaration", this).call(this, t)), r && ("TSInterfaceDeclaration" === r.type || "TSTypeAliasDeclaration" === r.type || i) && (t.exportKind = "type"), r && i && (this.resetStartLocation(r, e, s), r.declare = !0), r;\n            }\n          }, {\n            key: "parseClassId",\n            value: function parseClassId(t, e, s) {\n              if ((!e || s) && this.isContextual("implements")) return;\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassId", this).call(this, t, e, s, t.declare ? 1024 : 139);\n              var i = this.tsTryParseTypeParameters();\n              i && (t.typeParameters = i);\n            }\n          }, {\n            key: "parseClassPropertyAnnotation",\n            value: function parseClassPropertyAnnotation(t) {\n              !t.optional && this.eat(n.bang) && (t.definite = !0);\n              var e = this.tsTryParseTypeAnnotation();\n              e && (t.typeAnnotation = e);\n            }\n          }, {\n            key: "parseClassProperty",\n            value: function parseClassProperty(t) {\n              return this.parseClassPropertyAnnotation(t), t.declare && this.match(n.equal) && this.raise(this.state.start, rt.DeclareClassFieldHasInitializer), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassProperty", this).call(this, t);\n            }\n          }, {\n            key: "parseClassPrivateProperty",\n            value: function parseClassPrivateProperty(t) {\n              return t.abstract && this.raise(t.start, rt.PrivateElementHasAbstract), t.accessibility && this.raise(t.start, rt.PrivateElementHasAccessibility, t.accessibility), this.parseClassPropertyAnnotation(t), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassPrivateProperty", this).call(this, t);\n            }\n          }, {\n            key: "pushClassMethod",\n            value: function pushClassMethod(t, e, s, i, r, a) {\n              var n = this.tsTryParseTypeParameters();\n              n && (e.typeParameters = n), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "pushClassMethod", this).call(this, t, e, s, i, r, a);\n            }\n          }, {\n            key: "pushClassPrivateMethod",\n            value: function pushClassPrivateMethod(t, e, s, i) {\n              var r = this.tsTryParseTypeParameters();\n              r && (e.typeParameters = r), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "pushClassPrivateMethod", this).call(this, t, e, s, i);\n            }\n          }, {\n            key: "parseClassSuper",\n            value: function parseClassSuper(t) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseClassSuper", this).call(this, t), t.superClass && this.isRelational("<") && (t.superTypeParameters = this.tsParseTypeArguments()), this.eatContextual("implements") && (t.implements = this.tsParseHeritageClause("implements"));\n            }\n          }, {\n            key: "parseObjPropValue",\n            value: function parseObjPropValue(t) {\n              var _get2;\n\n              var s = this.tsTryParseTypeParameters();\n\n              for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                e[_key2 - 1] = arguments[_key2];\n              }\n\n              s && (t.typeParameters = s), (_get2 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseObjPropValue", this)).call.apply(_get2, [this, t].concat(e));\n            }\n          }, {\n            key: "parseFunctionParams",\n            value: function parseFunctionParams(t, e) {\n              var s = this.tsTryParseTypeParameters();\n              s && (t.typeParameters = s), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseFunctionParams", this).call(this, t, e);\n            }\n          }, {\n            key: "parseVarId",\n            value: function parseVarId(t, e) {\n              (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseVarId", this).call(this, t, e), "Identifier" === t.id.type && this.eat(n.bang) && (t.definite = !0);\n              var s = this.tsTryParseTypeAnnotation();\n              s && (t.id.typeAnnotation = s, this.resetEndLocation(t.id));\n            }\n          }, {\n            key: "parseAsyncArrowFromCallExpression",\n            value: function parseAsyncArrowFromCallExpression(t, e) {\n              return this.match(n.colon) && (t.returnType = this.tsParseTypeAnnotation()), (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseAsyncArrowFromCallExpression", this).call(this, t, e);\n            }\n          }, {\n            key: "parseMaybeAssign",\n            value: function parseMaybeAssign() {\n              var _this31 = this,\n                  _get4;\n\n              for (var _len3 = arguments.length, t = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                t[_key3] = arguments[_key3];\n              }\n\n              var e, s, i, r;\n\n              if (this.match(n.jsxTagStart)) {\n                if (e = this.state.clone(), s = this.tryParse(function () {\n                  var _get3;\n\n                  return (_get3 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get3, [_this31].concat(t));\n                }, e), !s.error) return s.node;\n                var _i23 = this.state.context;\n                _i23[_i23.length - 1] === x.j_oTag ? _i23.length -= 2 : _i23[_i23.length - 1] === x.j_expr && (_i23.length -= 1);\n              }\n\n              if (!(s && s.error || this.isRelational("<"))) return (_get4 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", this)).call.apply(_get4, [this].concat(t));\n              e = e || this.state.clone();\n              var a = this.tryParse(function (e) {\n                var _get5;\n\n                r = _this31.tsParseTypeParameters();\n\n                var s = (_get5 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get5, [_this31].concat(t));\n\n                return ("ArrowFunctionExpression" !== s.type || s.extra && s.extra.parenthesized) && e(), r && 0 !== r.params.length && _this31.resetStartLocationFromNode(s, r), s.typeParameters = r, s;\n              }, e);\n              if (!a.error && !a.aborted) return a.node;\n              if (!s && (it(!this.hasPlugin("jsx")), i = this.tryParse(function () {\n                var _get6;\n\n                return (_get6 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeAssign", _this31)).call.apply(_get6, [_this31].concat(t));\n              }, e), !i.error)) return i.node;\n              if (s && s.node) return this.state = s.failState, s.node;\n              if (a.node) return this.state = a.failState, a.node;\n              if (i && i.node) return this.state = i.failState, i.node;\n              if (s && s.thrown) throw s.error;\n              if (a.thrown) throw a.error;\n              if (i && i.thrown) throw i.error;\n              throw s && s.error || a.error || i && i.error;\n            }\n          }, {\n            key: "parseMaybeUnary",\n            value: function parseMaybeUnary(t) {\n              return !this.hasPlugin("jsx") && this.isRelational("<") ? this.tsParseTypeAssertion() : (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeUnary", this).call(this, t);\n            }\n          }, {\n            key: "parseArrow",\n            value: function parseArrow(t) {\n              var _this32 = this;\n\n              if (this.match(n.colon)) {\n                var _e41 = this.tryParse(function (t) {\n                  var e = _this32.tsParseTypeOrTypePredicateAnnotation(n.colon);\n\n                  return !_this32.canInsertSemicolon() && _this32.match(n.arrow) || t(), e;\n                });\n\n                if (_e41.aborted) return;\n                _e41.thrown || (_e41.error && (this.state = _e41.failState), t.returnType = _e41.node);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseArrow", this).call(this, t);\n            }\n          }, {\n            key: "parseAssignableListItemTypes",\n            value: function parseAssignableListItemTypes(t) {\n              this.eat(n.question) && ("Identifier" !== t.type && this.raise(t.start, rt.PatternIsOptional), t.optional = !0);\n              var e = this.tsTryParseTypeAnnotation();\n              return e && (t.typeAnnotation = e), this.resetEndLocation(t), t;\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              switch (t.type) {\n                case "TSTypeCastExpression":\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, this.typeCastToParameter(t));\n\n                case "TSParameterProperty":\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, t);\n\n                case "TSAsExpression":\n                case "TSNonNullExpression":\n                case "TSTypeAssertion":\n                  return t.expression = this.toAssignable(t.expression), t;\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignable", this).call(this, t);\n              }\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n              var s = arguments.length > 2 ? arguments[2] : undefined;\n              var i = arguments.length > 3 ? arguments[3] : undefined;\n\n              switch (t.type) {\n                case "TSTypeCastExpression":\n                  return;\n\n                case "TSParameterProperty":\n                  return void this.checkLVal(t.parameter, e, s, "parameter property");\n\n                case "TSAsExpression":\n                case "TSNonNullExpression":\n                case "TSTypeAssertion":\n                  return void this.checkLVal(t.expression, e, s, i);\n\n                default:\n                  return void (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "checkLVal", this).call(this, t, e, s, i);\n              }\n            }\n          }, {\n            key: "parseBindingAtom",\n            value: function parseBindingAtom() {\n              switch (this.state.type) {\n                case n._this:\n                  return this.parseIdentifier(!0);\n\n                default:\n                  return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseBindingAtom", this).call(this);\n              }\n            }\n          }, {\n            key: "parseMaybeDecoratorArguments",\n            value: function parseMaybeDecoratorArguments(t) {\n              if (this.isRelational("<")) {\n                var _e42 = this.tsParseTypeArguments();\n\n                if (this.match(n.parenL)) {\n                  var _s24 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDecoratorArguments", this).call(this, t);\n\n                  return _s24.typeParameters = _e42, _s24;\n                }\n\n                this.unexpected(this.state.start, n.parenL);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDecoratorArguments", this).call(this, t);\n            }\n          }, {\n            key: "isClassMethod",\n            value: function isClassMethod() {\n              return this.isRelational("<") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isClassMethod", this).call(this);\n            }\n          }, {\n            key: "isClassProperty",\n            value: function isClassProperty() {\n              return this.match(n.bang) || this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "isClassProperty", this).call(this);\n            }\n          }, {\n            key: "parseMaybeDefault",\n            value: function parseMaybeDefault() {\n              var _get7;\n\n              for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                t[_key4] = arguments[_key4];\n              }\n\n              var e = (_get7 = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "parseMaybeDefault", this)).call.apply(_get7, [this].concat(t));\n\n              return "AssignmentPattern" === e.type && e.typeAnnotation && e.right.start < e.typeAnnotation.start && this.raise(e.typeAnnotation.start, rt.TypeAnnotationAfterAssign), e;\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              return !this.state.inType || 62 !== t && 60 !== t ? (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "getTokenFromCode", this).call(this, t) : this.finishOp(n.relational, 1);\n            }\n          }, {\n            key: "toAssignableList",\n            value: function toAssignableList(t) {\n              for (var _e43 = 0; _e43 < t.length; _e43++) {\n                var _s25 = t[_e43];\n                if (_s25) switch (_s25.type) {\n                  case "TSTypeCastExpression":\n                    t[_e43] = this.typeCastToParameter(_s25);\n                    break;\n\n                  case "TSAsExpression":\n                  case "TSTypeAssertion":\n                    this.state.maybeInArrowParameters ? this.raise(_s25.start, rt.UnexpectedTypeCastInParameter) : t[_e43] = this.typeCastToParameter(_s25);\n                }\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "toAssignableList", this).apply(this, arguments);\n            }\n          }, {\n            key: "typeCastToParameter",\n            value: function typeCastToParameter(t) {\n              return t.expression.typeAnnotation = t.typeAnnotation, this.resetEndLocation(t.expression, t.typeAnnotation.end, t.typeAnnotation.loc.end), t.expression;\n            }\n          }, {\n            key: "toReferencedList",\n            value: function toReferencedList(t, e) {\n              for (var _e44 = 0; _e44 < t.length; _e44++) {\n                var _s26 = t[_e44];\n                _s26 && "TSTypeCastExpression" === _s26.type && this.raise(_s26.start, rt.UnexpectedTypeAnnotation);\n              }\n\n              return t;\n            }\n          }, {\n            key: "shouldParseArrow",\n            value: function shouldParseArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseArrow", this).call(this);\n            }\n          }, {\n            key: "shouldParseAsyncArrow",\n            value: function shouldParseAsyncArrow() {\n              return this.match(n.colon) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "shouldParseAsyncArrow", this).call(this);\n            }\n          }, {\n            key: "canHaveLeadingDecorator",\n            value: function canHaveLeadingDecorator() {\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "canHaveLeadingDecorator", this).call(this) || this.isAbstractClass();\n            }\n          }, {\n            key: "jsxParseOpeningElementAfterName",\n            value: function jsxParseOpeningElementAfterName(t) {\n              var _this33 = this;\n\n              if (this.isRelational("<")) {\n                var _e45 = this.tsTryParseAndCatch(function () {\n                  return _this33.tsParseTypeArguments();\n                });\n\n                _e45 && (t.typeParameters = _e45);\n              }\n\n              return (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "jsxParseOpeningElementAfterName", this).call(this, t);\n            }\n          }, {\n            key: "getGetterSetterExpectedParamCount",\n            value: function getGetterSetterExpectedParamCount(t) {\n              var e = (0, _get8.default)((0, _getPrototypeOf2.default)(_class4.prototype), "getGetterSetterExpectedParamCount", this).call(this, t),\n                  s = t.params[0];\n              return s && "Identifier" === s.type && "this" === s.name ? e + 1 : e;\n            }\n          }]);\n          return _class4;\n        }(t);\n      },\n      v8intrinsic: function v8intrinsic(t) {\n        return /*#__PURE__*/function (_t47) {\n          (0, _inherits2.default)(_class5, _t47);\n\n          var _super7 = _createSuper(_class5);\n\n          function _class5() {\n            (0, _classCallCheck2.default)(this, _class5);\n            return _super7.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class5, [{\n            key: "parseV8Intrinsic",\n            value: function parseV8Intrinsic() {\n              if (this.match(n.modulo)) {\n                var _t48 = this.state.start,\n                    _e46 = this.startNode();\n\n                if (this.eat(n.modulo), this.match(n.name)) {\n                  var _t49 = this.parseIdentifierName(this.state.start),\n                      _s27 = this.createIdentifier(_e46, _t49);\n\n                  if (_s27.type = "V8IntrinsicIdentifier", this.match(n.parenL)) return _s27;\n                }\n\n                this.unexpected(_t48);\n              }\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom() {\n              return this.parseV8Intrinsic() || (0, _get8.default)((0, _getPrototypeOf2.default)(_class5.prototype), "parseExprAtom", this).apply(this, arguments);\n            }\n          }]);\n          return _class5;\n        }(t);\n      },\n      placeholders: function placeholders(t) {\n        return /*#__PURE__*/function (_t50) {\n          (0, _inherits2.default)(_class6, _t50);\n\n          var _super8 = _createSuper(_class6);\n\n          function _class6() {\n            (0, _classCallCheck2.default)(this, _class6);\n            return _super8.apply(this, arguments);\n          }\n\n          (0, _createClass2.default)(_class6, [{\n            key: "parsePlaceholder",\n            value: function parsePlaceholder(t) {\n              if (this.match(n.placeholder)) {\n                var _e47 = this.startNode();\n\n                return this.next(), this.assertNoSpace("Unexpected space in placeholder."), _e47.name = (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseIdentifier", this).call(this, !0), this.assertNoSpace("Unexpected space in placeholder."), this.expect(n.placeholder), this.finishPlaceholder(_e47, t);\n              }\n            }\n          }, {\n            key: "finishPlaceholder",\n            value: function finishPlaceholder(t, e) {\n              var s = !(!t.expectedNode || "Placeholder" !== t.type);\n              return t.expectedNode = e, s ? t : this.finishNode(t, "Placeholder");\n            }\n          }, {\n            key: "getTokenFromCode",\n            value: function getTokenFromCode(t) {\n              return 37 === t && 37 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.placeholder, 2) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "getTokenFromCode", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseExprAtom",\n            value: function parseExprAtom() {\n              return this.parsePlaceholder("Expression") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExprAtom", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseIdentifier",\n            value: function parseIdentifier() {\n              return this.parsePlaceholder("Identifier") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseIdentifier", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkReservedWord",\n            value: function checkReservedWord(t) {\n              void 0 !== t && (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkReservedWord", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseBindingAtom",\n            value: function parseBindingAtom() {\n              return this.parsePlaceholder("Pattern") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseBindingAtom", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkLVal",\n            value: function checkLVal(t) {\n              "Placeholder" !== t.type && (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkLVal", this).apply(this, arguments);\n            }\n          }, {\n            key: "toAssignable",\n            value: function toAssignable(t) {\n              return t && "Placeholder" === t.type && "Expression" === t.expectedNode ? (t.expectedNode = "Pattern", t) : (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "toAssignable", this).apply(this, arguments);\n            }\n          }, {\n            key: "verifyBreakContinue",\n            value: function verifyBreakContinue(t) {\n              t.label && "Placeholder" === t.label.type || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "verifyBreakContinue", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseExpressionStatement",\n            value: function parseExpressionStatement(t, e) {\n              if ("Placeholder" !== e.type || e.extra && e.extra.parenthesized) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExpressionStatement", this).apply(this, arguments);\n\n              if (this.match(n.colon)) {\n                var _s28 = t;\n                return _s28.label = this.finishPlaceholder(e, "Identifier"), this.next(), _s28.body = this.parseStatement("label"), this.finishNode(_s28, "LabeledStatement");\n              }\n\n              return this.semicolon(), t.name = e.name, this.finishPlaceholder(t, "Statement");\n            }\n          }, {\n            key: "parseBlock",\n            value: function parseBlock() {\n              return this.parsePlaceholder("BlockStatement") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseBlock", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseFunctionId",\n            value: function parseFunctionId() {\n              return this.parsePlaceholder("Identifier") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseFunctionId", this).apply(this, arguments);\n            }\n          }, {\n            key: "parseClass",\n            value: function parseClass(t, e, s) {\n              var i = e ? "ClassDeclaration" : "ClassExpression";\n              this.next(), this.takeDecorators(t);\n              var r = this.parsePlaceholder("Identifier");\n              if (r) {\n                if (this.match(n._extends) || this.match(n.placeholder) || this.match(n.braceL)) t.id = r;else {\n                  if (s || !e) return t.id = null, t.body = this.finishPlaceholder(r, "ClassBody"), this.finishNode(t, i);\n                  this.unexpected(null, "A class name is required");\n                }\n              } else this.parseClassId(t, e, s);\n              return this.parseClassSuper(t), t.body = this.parsePlaceholder("ClassBody") || this.parseClassBody(!!t.superClass), this.finishNode(t, i);\n            }\n          }, {\n            key: "parseExport",\n            value: function parseExport(t) {\n              var e = this.parsePlaceholder("Identifier");\n              if (!e) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExport", this).apply(this, arguments);\n              if (!this.isContextual("from") && !this.match(n.comma)) return t.specifiers = [], t.source = null, t.declaration = this.finishPlaceholder(e, "Declaration"), this.finishNode(t, "ExportNamedDeclaration");\n              this.expectPlugin("exportDefaultFrom");\n              var s = this.startNode();\n              return s.exported = e, t.specifiers = [this.finishNode(s, "ExportDefaultSpecifier")], (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseExport", this).call(this, t);\n            }\n          }, {\n            key: "maybeParseExportDefaultSpecifier",\n            value: function maybeParseExportDefaultSpecifier(t) {\n              return !!(t.specifiers && t.specifiers.length > 0) || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "maybeParseExportDefaultSpecifier", this).apply(this, arguments);\n            }\n          }, {\n            key: "checkExport",\n            value: function checkExport(t) {\n              var e = t.specifiers;\n              e && e.length && (t.specifiers = e.filter(function (t) {\n                return "Placeholder" === t.exported.type;\n              })), (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "checkExport", this).call(this, t), t.specifiers = e;\n            }\n          }, {\n            key: "parseImport",\n            value: function parseImport(t) {\n              var e = this.parsePlaceholder("Identifier");\n              if (!e) return (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseImport", this).apply(this, arguments);\n              if (t.specifiers = [], !this.isContextual("from") && !this.match(n.comma)) return t.source = this.finishPlaceholder(e, "StringLiteral"), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n              var s = this.startNodeAtNode(e);\n\n              if (s.local = e, this.finishNode(s, "ImportDefaultSpecifier"), t.specifiers.push(s), this.eat(n.comma)) {\n                this.maybeParseStarImportSpecifier(t) || this.parseNamedImportSpecifiers(t);\n              }\n\n              return this.expectContextual("from"), t.source = this.parseImportSource(), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n            }\n          }, {\n            key: "parseImportSource",\n            value: function parseImportSource() {\n              return this.parsePlaceholder("StringLiteral") || (0, _get8.default)((0, _getPrototypeOf2.default)(_class6.prototype), "parseImportSource", this).apply(this, arguments);\n            }\n          }]);\n          return _class6;\n        }(t);\n      }\n    },\n        ct = Object.keys(pt),\n        ut = {\n      sourceType: "script",\n      sourceFilename: void 0,\n      startLine: 1,\n      allowAwaitOutsideFunction: !1,\n      allowReturnOutsideFunction: !1,\n      allowImportExportEverywhere: !1,\n      allowSuperOutsideMethod: !1,\n      allowUndeclaredExports: !1,\n      plugins: [],\n      strictMode: null,\n      ranges: !1,\n      tokens: !1,\n      createParenthesizedExpressions: !1,\n      errorRecovery: !1\n    };\n\n    var lt = /*#__PURE__*/function () {\n      function lt() {\n        (0, _classCallCheck2.default)(this, lt);\n        this.errors = [], this.potentialArrowAt = -1, this.noArrowAt = [], this.noArrowParamsConversionAt = [], this.inParameters = !1, this.maybeInArrowParameters = !1, this.maybeInAsyncArrowHead = !1, this.inPipeline = !1, this.inType = !1, this.noAnonFunctionType = !1, this.inPropertyName = !1, this.hasFlowComment = !1, this.isIterator = !1, this.topicContext = {\n          maxNumOfResolvableTopics: 0,\n          maxTopicIndex: null\n        }, this.soloAwait = !1, this.inFSharpPipelineDirectBody = !1, this.labels = [], this.decoratorStack = [[]], this.yieldPos = -1, this.awaitPos = -1, this.comments = [], this.trailingComments = [], this.leadingComments = [], this.commentStack = [], this.commentPreviousNode = null, this.pos = 0, this.lineStart = 0, this.type = n.eof, this.value = null, this.start = 0, this.end = 0, this.lastTokEndLoc = null, this.lastTokStartLoc = null, this.lastTokStart = 0, this.lastTokEnd = 0, this.context = [x.braceStatement], this.exprAllowed = !0, this.containsEsc = !1, this.octalPositions = [], this.exportedIdentifiers = [], this.tokensLength = 0;\n      }\n\n      (0, _createClass2.default)(lt, [{\n        key: "init",\n        value: function init(t) {\n          this.strict = !1 !== t.strictMode && "module" === t.sourceType, this.curLine = t.startLine, this.startLoc = this.endLoc = this.curPosition();\n        }\n      }, {\n        key: "curPosition",\n        value: function curPosition() {\n          return new l(this.curLine, this.pos - this.lineStart);\n        }\n      }, {\n        key: "clone",\n        value: function clone(t) {\n          var e = new lt(),\n              s = Object.keys(this);\n\n          for (var _i24 = 0, _r9 = s.length; _i24 < _r9; _i24++) {\n            var _r10 = s[_i24];\n            var _a12 = this[_r10];\n            !t && Array.isArray(_a12) && (_a12 = _a12.slice()), e[_r10] = _a12;\n          }\n\n          return e;\n        }\n      }]);\n      return lt;\n    }();\n\n    var dt = function dt(t) {\n      return t >= 48 && t <= 57;\n    };\n\n    var mt = new Set(["g", "m", "s", "i", "y", "u"]),\n        ft = {\n      decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n      hex: [46, 88, 95, 120]\n    },\n        Dt = {\n      bin: [48, 49]\n    };\n    Dt.oct = [].concat((0, _toConsumableArray2.default)(Dt.bin), [50, 51, 52, 53, 54, 55]), Dt.dec = [].concat((0, _toConsumableArray2.default)(Dt.oct), [56, 57]), Dt.hex = [].concat((0, _toConsumableArray2.default)(Dt.dec), [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);\n\n    var yt = function yt(t) {\n      (0, _classCallCheck2.default)(this, yt);\n      this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, this.loc = new d(t.startLoc, t.endLoc);\n    };\n\n    var xt = function xt() {\n      (0, _classCallCheck2.default)(this, xt);\n      this.shorthandAssign = -1, this.doubleProto = -1;\n    };\n\n    var gt = /*#__PURE__*/function () {\n      function gt(t, e, s) {\n        (0, _classCallCheck2.default)(this, gt);\n        this.type = "", this.start = e, this.end = 0, this.loc = new d(s), t && t.options.ranges && (this.range = [e, 0]), t && t.filename && (this.loc.filename = t.filename);\n      }\n\n      (0, _createClass2.default)(gt, [{\n        key: "__clone",\n        value: function __clone() {\n          var t = new gt(),\n              e = Object.keys(this);\n\n          for (var _s29 = 0, _i25 = e.length; _s29 < _i25; _s29++) {\n            var _i26 = e[_s29];\n            "leadingComments" !== _i26 && "trailingComments" !== _i26 && "innerComments" !== _i26 && (t[_i26] = this[_i26]);\n          }\n\n          return t;\n        }\n      }]);\n      return gt;\n    }();\n\n    var Pt = function Pt(t) {\n      return "ParenthesizedExpression" === t.type ? Pt(t.expression) : t;\n    };\n\n    var Et = {\n      kind: "loop"\n    },\n        Ct = {\n      kind: "switch"\n    };\n\n    var bt = function bt() {\n      (0, _classCallCheck2.default)(this, bt);\n      this.privateNames = new Set(), this.loneAccessors = new Map(), this.undefinedPrivateNames = new Map();\n    };\n\n    var Tt = /*#__PURE__*/function () {\n      function Tt(t) {\n        (0, _classCallCheck2.default)(this, Tt);\n        this.stack = [], this.undefinedPrivateNames = new Map(), this.raise = t;\n      }\n\n      (0, _createClass2.default)(Tt, [{\n        key: "current",\n        value: function current() {\n          return this.stack[this.stack.length - 1];\n        }\n      }, {\n        key: "enter",\n        value: function enter() {\n          this.stack.push(new bt());\n        }\n      }, {\n        key: "exit",\n        value: function exit() {\n          var t = this.stack.pop(),\n              e = this.current();\n\n          for (var _s30 = 0, _i27 = Array.from(t.undefinedPrivateNames); _s30 < _i27.length; _s30++) {\n            var _i27$_s = (0, _slicedToArray2.default)(_i27[_s30], 2),\n                _t51 = _i27$_s[0],\n                _r11 = _i27$_s[1];\n\n            e ? e.undefinedPrivateNames.has(_t51) || e.undefinedPrivateNames.set(_t51, _r11) : this.raise(_r11, f.InvalidPrivateFieldResolution, _t51);\n          }\n        }\n      }, {\n        key: "declarePrivateName",\n        value: function declarePrivateName(t, e, s) {\n          var i = this.current();\n          var r = i.privateNames.has(t);\n\n          if (3 & e) {\n            var _s31 = r && i.loneAccessors.get(t);\n\n            if (_s31) {\n              var _a13 = 4 & _s31,\n                  _n5 = 4 & e;\n\n              r = (3 & _s31) === (3 & e) || _a13 !== _n5, r || i.loneAccessors.delete(t);\n            } else r || i.loneAccessors.set(t, e);\n          }\n\n          r && this.raise(s, f.PrivateNameRedeclaration, t), i.privateNames.add(t), i.undefinedPrivateNames.delete(t);\n        }\n      }, {\n        key: "usePrivateName",\n        value: function usePrivateName(t, e) {\n          var s;\n\n          for (var _e48 = 0, _i28 = this.stack; _e48 < _i28.length; _e48++) {\n            if (s = _i28[_e48], s.privateNames.has(t)) return;\n          }\n\n          s ? s.undefinedPrivateNames.set(t, e) : this.raise(e, f.InvalidPrivateFieldResolution, t);\n        }\n      }]);\n      return Tt;\n    }();\n\n    var At = /*#__PURE__*/function (_ref17) {\n      (0, _inherits2.default)(At, _ref17);\n\n      var _super9 = _createSuper(At);\n\n      function At(t, e) {\n        var _this34;\n\n        (0, _classCallCheck2.default)(this, At);\n        _this34 = _super9.call(this, t = function (t) {\n          var e = {};\n\n          for (var _s32 = 0, _i29 = Object.keys(ut); _s32 < _i29.length; _s32++) {\n            var _r12 = _i29[_s32];\n            e[_r12] = t && null != t[_r12] ? t[_r12] : ut[_r12];\n          }\n\n          return e;\n        }(t), e);\n\n        var s = _this34.getScopeHandler();\n\n        _this34.options = t, _this34.inModule = "module" === _this34.options.sourceType, _this34.scope = new s(_this34.raise.bind((0, _assertThisInitialized2.default)(_this34)), _this34.inModule), _this34.prodParam = new tt(), _this34.classScope = new Tt(_this34.raise.bind((0, _assertThisInitialized2.default)(_this34))), _this34.plugins = function (t) {\n          var e = new Map();\n\n          for (var _s33 = 0; _s33 < t.length; _s33++) {\n            var _i30 = t[_s33],\n                _ref18 = Array.isArray(_i30) ? _i30 : [_i30, {}],\n                _ref19 = (0, _slicedToArray2.default)(_ref18, 2),\n                _r13 = _ref19[0],\n                _a14 = _ref19[1];\n\n            e.has(_r13) || e.set(_r13, _a14 || {});\n          }\n\n          return e;\n        }(_this34.options.plugins), _this34.filename = t.sourceFilename;\n        return _this34;\n      }\n\n      (0, _createClass2.default)(At, [{\n        key: "getScopeHandler",\n        value: function getScopeHandler() {\n          return Y;\n        }\n      }, {\n        key: "parse",\n        value: function parse() {\n          var t = 0;\n          this.hasPlugin("topLevelAwait") && this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t);\n          var e = this.startNode(),\n              s = this.startNode();\n          return this.nextToken(), e.errors = null, this.parseTopLevel(e, s), e.errors = this.state.errors, e;\n        }\n      }]);\n      return At;\n    }( /*#__PURE__*/function (_ref20) {\n      (0, _inherits2.default)(_class7, _ref20);\n\n      var _super10 = _createSuper(_class7);\n\n      function _class7() {\n        (0, _classCallCheck2.default)(this, _class7);\n        return _super10.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class7, [{\n        key: "parseTopLevel",\n        value: function parseTopLevel(t, e) {\n          if (e.sourceType = this.options.sourceType, e.interpreter = this.parseInterpreterDirective(), this.parseBlockBody(e, !0, !0, n.eof), this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) for (var _t52 = 0, _e49 = Array.from(this.scope.undefinedExports); _t52 < _e49.length; _t52++) {\n            var _e49$_t = (0, _slicedToArray2.default)(_e49[_t52], 1),\n                _s34 = _e49$_t[0],\n                _i31 = this.scope.undefinedExports.get(_s34);\n\n            this.raise(_i31, f.ModuleExportUndefined, _s34);\n          }\n          return t.program = this.finishNode(e, "Program"), t.comments = this.state.comments, this.options.tokens && (t.tokens = this.tokens), this.finishNode(t, "File");\n        }\n      }, {\n        key: "stmtToDirective",\n        value: function stmtToDirective(t) {\n          var e = t.expression,\n              s = this.startNodeAt(e.start, e.loc.start),\n              i = this.startNodeAt(t.start, t.loc.start),\n              r = this.input.slice(e.start, e.end),\n              a = s.value = r.slice(1, -1);\n          return this.addExtra(s, "raw", r), this.addExtra(s, "rawValue", a), i.value = this.finishNodeAt(s, "DirectiveLiteral", e.end, e.loc.end), this.finishNodeAt(i, "Directive", t.end, t.loc.end);\n        }\n      }, {\n        key: "parseInterpreterDirective",\n        value: function parseInterpreterDirective() {\n          if (!this.match(n.interpreterDirective)) return null;\n          var t = this.startNode();\n          return t.value = this.state.value, this.next(), this.finishNode(t, "InterpreterDirective");\n        }\n      }, {\n        key: "isLet",\n        value: function isLet(t) {\n          if (!this.isContextual("let")) return !1;\n          var e = this.nextTokenStart(),\n              s = this.input.charCodeAt(e);\n          if (91 === s) return !0;\n          if (t) return !1;\n          if (123 === s) return !0;\n\n          if (w(s)) {\n            var _t53 = e + 1;\n\n            for (; S(this.input.charCodeAt(_t53));) {\n              ++_t53;\n            }\n\n            var _s35 = this.input.slice(e, _t53);\n\n            if (!R.test(_s35)) return !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "parseStatement",\n        value: function parseStatement(t, e) {\n          return this.match(n.at) && this.parseDecorators(!0), this.parseStatementContent(t, e);\n        }\n      }, {\n        key: "parseStatementContent",\n        value: function parseStatementContent(t, e) {\n          var s = this.state.type;\n          var i = this.startNode();\n          var r;\n\n          switch (this.isLet(t) && (s = n._var, r = "let"), s) {\n            case n._break:\n            case n._continue:\n              return this.parseBreakContinueStatement(i, s.keyword);\n\n            case n._debugger:\n              return this.parseDebuggerStatement(i);\n\n            case n._do:\n              return this.parseDoStatement(i);\n\n            case n._for:\n              return this.parseForStatement(i);\n\n            case n._function:\n              if (46 === this.lookaheadCharCode()) break;\n              return t && (this.state.strict ? this.raise(this.state.start, f.StrictFunction) : "if" !== t && "label" !== t && this.raise(this.state.start, f.SloppyFunction)), this.parseFunctionStatement(i, !1, !t);\n\n            case n._class:\n              return t && this.unexpected(), this.parseClass(i, !0);\n\n            case n._if:\n              return this.parseIfStatement(i);\n\n            case n._return:\n              return this.parseReturnStatement(i);\n\n            case n._switch:\n              return this.parseSwitchStatement(i);\n\n            case n._throw:\n              return this.parseThrowStatement(i);\n\n            case n._try:\n              return this.parseTryStatement(i);\n\n            case n._const:\n            case n._var:\n              return r = r || this.state.value, t && "var" !== r && this.raise(this.state.start, f.UnexpectedLexicalDeclaration), this.parseVarStatement(i, r);\n\n            case n._while:\n              return this.parseWhileStatement(i);\n\n            case n._with:\n              return this.parseWithStatement(i);\n\n            case n.braceL:\n              return this.parseBlock();\n\n            case n.semi:\n              return this.parseEmptyStatement(i);\n\n            case n._export:\n            case n._import:\n              {\n                var _t54 = this.lookaheadCharCode();\n\n                if (40 === _t54 || 46 === _t54) break;\n\n                var _r14;\n\n                return this.options.allowImportExportEverywhere || e || this.raise(this.state.start, f.UnexpectedImportExport), this.next(), s === n._import ? (_r14 = this.parseImport(i), "ImportDeclaration" !== _r14.type || _r14.importKind && "value" !== _r14.importKind || (this.sawUnambiguousESM = !0)) : (_r14 = this.parseExport(i), ("ExportNamedDeclaration" !== _r14.type || _r14.exportKind && "value" !== _r14.exportKind) && ("ExportAllDeclaration" !== _r14.type || _r14.exportKind && "value" !== _r14.exportKind) && "ExportDefaultDeclaration" !== _r14.type || (this.sawUnambiguousESM = !0)), this.assertModuleNodeAllowed(i), _r14;\n              }\n\n            default:\n              if (this.isAsyncFunction()) return t && this.raise(this.state.start, f.AsyncFunctionInSingleStatementContext), this.next(), this.parseFunctionStatement(i, !0, !t);\n          }\n\n          var a = this.state.value,\n              o = this.parseExpression();\n          return s === n.name && "Identifier" === o.type && this.eat(n.colon) ? this.parseLabeledStatement(i, a, o, t) : this.parseExpressionStatement(i, o);\n        }\n      }, {\n        key: "assertModuleNodeAllowed",\n        value: function assertModuleNodeAllowed(t) {\n          this.options.allowImportExportEverywhere || this.inModule || this.raiseWithData(t.start, {\n            code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"\n          }, f.ImportOutsideModule);\n        }\n      }, {\n        key: "takeDecorators",\n        value: function takeDecorators(t) {\n          var e = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n          e.length && (t.decorators = e, this.resetStartLocationFromNode(t, e[0]), this.state.decoratorStack[this.state.decoratorStack.length - 1] = []);\n        }\n      }, {\n        key: "canHaveLeadingDecorator",\n        value: function canHaveLeadingDecorator() {\n          return this.match(n._class);\n        }\n      }, {\n        key: "parseDecorators",\n        value: function parseDecorators(t) {\n          var e = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n          for (; this.match(n.at);) {\n            var _t55 = this.parseDecorator();\n\n            e.push(_t55);\n          }\n\n          if (this.match(n._export)) t || this.unexpected(), this.hasPlugin("decorators") && !this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, f.DecoratorExportClass);else if (!this.canHaveLeadingDecorator()) throw this.raise(this.state.start, f.UnexpectedLeadingDecorator);\n        }\n      }, {\n        key: "parseDecorator",\n        value: function parseDecorator() {\n          this.expectOnePlugin(["decorators-legacy", "decorators"]);\n          var t = this.startNode();\n\n          if (this.next(), this.hasPlugin("decorators")) {\n            this.state.decoratorStack.push([]);\n            var _e50 = this.state.start,\n                _s36 = this.state.startLoc;\n\n            var _i32;\n\n            if (this.eat(n.parenL)) _i32 = this.parseExpression(), this.expect(n.parenR);else for (_i32 = this.parseIdentifier(!1); this.eat(n.dot);) {\n              var _t56 = this.startNodeAt(_e50, _s36);\n\n              _t56.object = _i32, _t56.property = this.parseIdentifier(!0), _t56.computed = !1, _i32 = this.finishNode(_t56, "MemberExpression");\n            }\n            t.expression = this.parseMaybeDecoratorArguments(_i32), this.state.decoratorStack.pop();\n          } else t.expression = this.parseExprSubscripts();\n\n          return this.finishNode(t, "Decorator");\n        }\n      }, {\n        key: "parseMaybeDecoratorArguments",\n        value: function parseMaybeDecoratorArguments(t) {\n          if (this.eat(n.parenL)) {\n            var _e51 = this.startNodeAtNode(t);\n\n            return _e51.callee = t, _e51.arguments = this.parseCallExpressionArguments(n.parenR, !1), this.toReferencedList(_e51.arguments), this.finishNode(_e51, "CallExpression");\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseBreakContinueStatement",\n        value: function parseBreakContinueStatement(t, e) {\n          var s = "break" === e;\n          return this.next(), this.isLineTerminator() ? t.label = null : (t.label = this.parseIdentifier(), this.semicolon()), this.verifyBreakContinue(t, e), this.finishNode(t, s ? "BreakStatement" : "ContinueStatement");\n        }\n      }, {\n        key: "verifyBreakContinue",\n        value: function verifyBreakContinue(t, e) {\n          var s = "break" === e;\n          var i;\n\n          for (i = 0; i < this.state.labels.length; ++i) {\n            var _e52 = this.state.labels[i];\n\n            if (null == t.label || _e52.name === t.label.name) {\n              if (null != _e52.kind && (s || "loop" === _e52.kind)) break;\n              if (t.label && s) break;\n            }\n          }\n\n          i === this.state.labels.length && this.raise(t.start, f.IllegalBreakContinue, e);\n        }\n      }, {\n        key: "parseDebuggerStatement",\n        value: function parseDebuggerStatement(t) {\n          return this.next(), this.semicolon(), this.finishNode(t, "DebuggerStatement");\n        }\n      }, {\n        key: "parseHeaderExpression",\n        value: function parseHeaderExpression() {\n          this.expect(n.parenL);\n          var t = this.parseExpression();\n          return this.expect(n.parenR), t;\n        }\n      }, {\n        key: "parseDoStatement",\n        value: function parseDoStatement(t) {\n          var _this35 = this;\n\n          return this.next(), this.state.labels.push(Et), t.body = this.withTopicForbiddingContext(function () {\n            return _this35.parseStatement("do");\n          }), this.state.labels.pop(), this.expect(n._while), t.test = this.parseHeaderExpression(), this.eat(n.semi), this.finishNode(t, "DoWhileStatement");\n        }\n      }, {\n        key: "parseForStatement",\n        value: function parseForStatement(t) {\n          this.next(), this.state.labels.push(Et);\n          var e = -1;\n          if (this.isAwaitAllowed() && this.eatContextual("await") && (e = this.state.lastTokStart), this.scope.enter(0), this.expect(n.parenL), this.match(n.semi)) return e > -1 && this.unexpected(e), this.parseFor(t, null);\n          var s = this.isLet();\n\n          if (this.match(n._var) || this.match(n._const) || s) {\n            var _i33 = this.startNode(),\n                _r15 = s ? "let" : this.state.value;\n\n            return this.next(), this.parseVar(_i33, !0, _r15), this.finishNode(_i33, "VariableDeclaration"), (this.match(n._in) || this.isContextual("of")) && 1 === _i33.declarations.length ? this.parseForIn(t, _i33, e) : (e > -1 && this.unexpected(e), this.parseFor(t, _i33));\n          }\n\n          var i = new xt(),\n              r = this.parseExpression(!0, i);\n\n          if (this.match(n._in) || this.isContextual("of")) {\n            this.toAssignable(r);\n\n            var _s37 = this.isContextual("of") ? "for-of statement" : "for-in statement";\n\n            return this.checkLVal(r, void 0, void 0, _s37), this.parseForIn(t, r, e);\n          }\n\n          return this.checkExpressionErrors(i, !0), e > -1 && this.unexpected(e), this.parseFor(t, r);\n        }\n      }, {\n        key: "parseFunctionStatement",\n        value: function parseFunctionStatement(t, e, s) {\n          return this.next(), this.parseFunction(t, 1 | (s ? 0 : 2), e);\n        }\n      }, {\n        key: "parseIfStatement",\n        value: function parseIfStatement(t) {\n          return this.next(), t.test = this.parseHeaderExpression(), t.consequent = this.parseStatement("if"), t.alternate = this.eat(n._else) ? this.parseStatement("if") : null, this.finishNode(t, "IfStatement");\n        }\n      }, {\n        key: "parseReturnStatement",\n        value: function parseReturnStatement(t) {\n          return this.prodParam.hasReturn || this.options.allowReturnOutsideFunction || this.raise(this.state.start, f.IllegalReturn), this.next(), this.isLineTerminator() ? t.argument = null : (t.argument = this.parseExpression(), this.semicolon()), this.finishNode(t, "ReturnStatement");\n        }\n      }, {\n        key: "parseSwitchStatement",\n        value: function parseSwitchStatement(t) {\n          this.next(), t.discriminant = this.parseHeaderExpression();\n          var e = t.cases = [];\n          var s, i;\n\n          for (this.expect(n.braceL), this.state.labels.push(Ct), this.scope.enter(0); !this.match(n.braceR);) {\n            if (this.match(n._case) || this.match(n._default)) {\n              var _t57 = this.match(n._case);\n\n              s && this.finishNode(s, "SwitchCase"), e.push(s = this.startNode()), s.consequent = [], this.next(), _t57 ? s.test = this.parseExpression() : (i && this.raise(this.state.lastTokStart, f.MultipleDefaultsInSwitch), i = !0, s.test = null), this.expect(n.colon);\n            } else s ? s.consequent.push(this.parseStatement(null)) : this.unexpected();\n          }\n\n          return this.scope.exit(), s && this.finishNode(s, "SwitchCase"), this.next(), this.state.labels.pop(), this.finishNode(t, "SwitchStatement");\n        }\n      }, {\n        key: "parseThrowStatement",\n        value: function parseThrowStatement(t) {\n          return this.next(), o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) && this.raise(this.state.lastTokEnd, f.NewlineAfterThrow), t.argument = this.parseExpression(), this.semicolon(), this.finishNode(t, "ThrowStatement");\n        }\n      }, {\n        key: "parseTryStatement",\n        value: function parseTryStatement(t) {\n          var _this36 = this;\n\n          if (this.next(), t.block = this.parseBlock(), t.handler = null, this.match(n._catch)) {\n            var _e53 = this.startNode();\n\n            if (this.next(), this.match(n.parenL)) {\n              this.expect(n.parenL), _e53.param = this.parseBindingAtom();\n\n              var _t58 = "Identifier" === _e53.param.type;\n\n              this.scope.enter(_t58 ? 8 : 0), this.checkLVal(_e53.param, 9, null, "catch clause"), this.expect(n.parenR);\n            } else _e53.param = null, this.scope.enter(0);\n\n            _e53.body = this.withTopicForbiddingContext(function () {\n              return _this36.parseBlock(!1, !1);\n            }), this.scope.exit(), t.handler = this.finishNode(_e53, "CatchClause");\n          }\n\n          return t.finalizer = this.eat(n._finally) ? this.parseBlock() : null, t.handler || t.finalizer || this.raise(t.start, f.NoCatchOrFinally), this.finishNode(t, "TryStatement");\n        }\n      }, {\n        key: "parseVarStatement",\n        value: function parseVarStatement(t, e) {\n          return this.next(), this.parseVar(t, !1, e), this.semicolon(), this.finishNode(t, "VariableDeclaration");\n        }\n      }, {\n        key: "parseWhileStatement",\n        value: function parseWhileStatement(t) {\n          var _this37 = this;\n\n          return this.next(), t.test = this.parseHeaderExpression(), this.state.labels.push(Et), t.body = this.withTopicForbiddingContext(function () {\n            return _this37.parseStatement("while");\n          }), this.state.labels.pop(), this.finishNode(t, "WhileStatement");\n        }\n      }, {\n        key: "parseWithStatement",\n        value: function parseWithStatement(t) {\n          var _this38 = this;\n\n          return this.state.strict && this.raise(this.state.start, f.StrictWith), this.next(), t.object = this.parseHeaderExpression(), t.body = this.withTopicForbiddingContext(function () {\n            return _this38.parseStatement("with");\n          }), this.finishNode(t, "WithStatement");\n        }\n      }, {\n        key: "parseEmptyStatement",\n        value: function parseEmptyStatement(t) {\n          return this.next(), this.finishNode(t, "EmptyStatement");\n        }\n      }, {\n        key: "parseLabeledStatement",\n        value: function parseLabeledStatement(t, e, s, i) {\n          for (var _t59 = 0, _i34 = this.state.labels; _t59 < _i34.length; _t59++) {\n            _i34[_t59].name === e && this.raise(s.start, f.LabelRedeclaration, e);\n          }\n\n          var r = this.state.type.isLoop ? "loop" : this.match(n._switch) ? "switch" : null;\n\n          for (var _e54 = this.state.labels.length - 1; _e54 >= 0; _e54--) {\n            var _s38 = this.state.labels[_e54];\n            if (_s38.statementStart !== t.start) break;\n            _s38.statementStart = this.state.start, _s38.kind = r;\n          }\n\n          return this.state.labels.push({\n            name: e,\n            kind: r,\n            statementStart: this.state.start\n          }), t.body = this.parseStatement(i ? -1 === i.indexOf("label") ? i + "label" : i : "label"), this.state.labels.pop(), t.label = s, this.finishNode(t, "LabeledStatement");\n        }\n      }, {\n        key: "parseExpressionStatement",\n        value: function parseExpressionStatement(t, e) {\n          return t.expression = e, this.semicolon(), this.finishNode(t, "ExpressionStatement");\n        }\n      }, {\n        key: "parseBlock",\n        value: function parseBlock() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n          var s = arguments.length > 2 ? arguments[2] : undefined;\n          var i = this.startNode();\n          return this.expect(n.braceL), e && this.scope.enter(0), this.parseBlockBody(i, t, !1, n.braceR, s), e && this.scope.exit(), this.finishNode(i, "BlockStatement");\n        }\n      }, {\n        key: "isValidDirective",\n        value: function isValidDirective(t) {\n          return "ExpressionStatement" === t.type && "StringLiteral" === t.expression.type && !t.expression.extra.parenthesized;\n        }\n      }, {\n        key: "parseBlockBody",\n        value: function parseBlockBody(t, e, s, i, r) {\n          var a = t.body = [],\n              n = t.directives = [];\n          this.parseBlockOrModuleBlockBody(a, e ? n : void 0, s, i, r);\n        }\n      }, {\n        key: "parseBlockOrModuleBlockBody",\n        value: function parseBlockOrModuleBlockBody(t, e, s, i, r) {\n          var a = [],\n              n = this.state.strict;\n          var o = !1,\n              h = !1;\n\n          for (; !this.match(i);) {\n            !h && this.state.octalPositions.length && a.push.apply(a, (0, _toConsumableArray2.default)(this.state.octalPositions));\n\n            var _i35 = this.parseStatement(null, s);\n\n            if (e && !h && this.isValidDirective(_i35)) {\n              var _t60 = this.stmtToDirective(_i35);\n\n              e.push(_t60), o || "use strict" !== _t60.value.value || (o = !0, this.setStrict(!0));\n            } else h = !0, t.push(_i35);\n          }\n\n          if (this.state.strict && a.length) for (var _t61 = 0; _t61 < a.length; _t61++) {\n            var _e55 = a[_t61];\n            this.raise(_e55, f.StrictOctalLiteral);\n          }\n          r && r.call(this, o), n || this.setStrict(!1), this.next();\n        }\n      }, {\n        key: "parseFor",\n        value: function parseFor(t, e) {\n          var _this39 = this;\n\n          return t.init = e, this.expect(n.semi), t.test = this.match(n.semi) ? null : this.parseExpression(), this.expect(n.semi), t.update = this.match(n.parenR) ? null : this.parseExpression(), this.expect(n.parenR), t.body = this.withTopicForbiddingContext(function () {\n            return _this39.parseStatement("for");\n          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, "ForStatement");\n        }\n      }, {\n        key: "parseForIn",\n        value: function parseForIn(t, e, s) {\n          var _this40 = this;\n\n          var i = this.match(n._in);\n          return this.next(), i ? s > -1 && this.unexpected(s) : t.await = s > -1, "VariableDeclaration" !== e.type || null == e.declarations[0].init || i && !this.state.strict && "var" === e.kind && "Identifier" === e.declarations[0].id.type ? "AssignmentPattern" === e.type && this.raise(e.start, f.InvalidLhs, "for-loop") : this.raise(e.start, f.ForInOfLoopInitializer, i ? "for-in" : "for-of"), t.left = e, t.right = i ? this.parseExpression() : this.parseMaybeAssign(), this.expect(n.parenR), t.body = this.withTopicForbiddingContext(function () {\n            return _this40.parseStatement("for");\n          }), this.scope.exit(), this.state.labels.pop(), this.finishNode(t, i ? "ForInStatement" : "ForOfStatement");\n        }\n      }, {\n        key: "parseVar",\n        value: function parseVar(t, e, s) {\n          var i = t.declarations = [],\n              r = this.hasPlugin("typescript");\n\n          for (t.kind = s;;) {\n            var _t62 = this.startNode();\n\n            if (this.parseVarId(_t62, s), this.eat(n.eq) ? _t62.init = this.parseMaybeAssign(e) : ("const" !== s || this.match(n._in) || this.isContextual("of") ? "Identifier" === _t62.id.type || e && (this.match(n._in) || this.isContextual("of")) || this.raise(this.state.lastTokEnd, f.DeclarationMissingInitializer, "Complex binding patterns") : r || this.unexpected(), _t62.init = null), i.push(this.finishNode(_t62, "VariableDeclarator")), !this.eat(n.comma)) break;\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseVarId",\n        value: function parseVarId(t, e) {\n          t.id = this.parseBindingAtom(), this.checkLVal(t.id, "var" === e ? 5 : 9, void 0, "variable declaration", "var" !== e);\n        }\n      }, {\n        key: "parseFunction",\n        value: function parseFunction(t) {\n          var _this41 = this;\n\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          var i = 1 & e,\n              r = 2 & e,\n              a = !(!i || 4 & e);\n          this.initFunction(t, s), this.match(n.star) && r && this.raise(this.state.start, f.GeneratorInSingleStatementContext), t.generator = this.eat(n.star), i && (t.id = this.parseFunctionId(a));\n          var o = this.state.maybeInArrowParameters,\n              h = this.state.yieldPos,\n              p = this.state.awaitPos;\n          return this.state.maybeInArrowParameters = !1, this.state.yieldPos = -1, this.state.awaitPos = -1, this.scope.enter(2), this.prodParam.enter(et(s, t.generator)), i || (t.id = this.parseFunctionId()), this.parseFunctionParams(t), this.withTopicForbiddingContext(function () {\n            _this41.parseFunctionBodyAndFinish(t, i ? "FunctionDeclaration" : "FunctionExpression");\n          }), this.prodParam.exit(), this.scope.exit(), i && !r && this.registerFunctionStatementId(t), this.state.maybeInArrowParameters = o, this.state.yieldPos = h, this.state.awaitPos = p, t;\n        }\n      }, {\n        key: "parseFunctionId",\n        value: function parseFunctionId(t) {\n          return t || this.match(n.name) ? this.parseIdentifier() : null;\n        }\n      }, {\n        key: "parseFunctionParams",\n        value: function parseFunctionParams(t, e) {\n          var s = this.state.inParameters;\n          this.state.inParameters = !0, this.expect(n.parenL), t.params = this.parseBindingList(n.parenR, 41, !1, e), this.state.inParameters = s, this.checkYieldAwaitInDefaultParams();\n        }\n      }, {\n        key: "registerFunctionStatementId",\n        value: function registerFunctionStatementId(t) {\n          t.id && this.scope.declareName(t.id.name, this.state.strict || t.generator || t.async ? this.scope.treatFunctionsAsVar ? 5 : 9 : 17, t.id.start);\n        }\n      }, {\n        key: "parseClass",\n        value: function parseClass(t, e, s) {\n          this.next(), this.takeDecorators(t);\n          var i = this.state.strict;\n          return this.state.strict = !0, this.parseClassId(t, e, s), this.parseClassSuper(t), t.body = this.parseClassBody(!!t.superClass, i), this.state.strict = i, this.finishNode(t, e ? "ClassDeclaration" : "ClassExpression");\n        }\n      }, {\n        key: "isClassProperty",\n        value: function isClassProperty() {\n          return this.match(n.eq) || this.match(n.semi) || this.match(n.braceR);\n        }\n      }, {\n        key: "isClassMethod",\n        value: function isClassMethod() {\n          return this.match(n.parenL);\n        }\n      }, {\n        key: "isNonstaticConstructor",\n        value: function isNonstaticConstructor(t) {\n          return !(t.computed || t.static || "constructor" !== t.key.name && "constructor" !== t.key.value);\n        }\n      }, {\n        key: "parseClassBody",\n        value: function parseClassBody(t, e) {\n          var _this42 = this;\n\n          this.classScope.enter();\n          var s = {\n            hadConstructor: !1\n          };\n          var i = [];\n          var r = this.startNode();\n          if (r.body = [], this.expect(n.braceL), this.withTopicForbiddingContext(function () {\n            for (; !_this42.match(n.braceR);) {\n              if (_this42.eat(n.semi)) {\n                if (i.length > 0) throw _this42.raise(_this42.state.lastTokEnd, f.DecoratorSemicolon);\n                continue;\n              }\n\n              if (_this42.match(n.at)) {\n                i.push(_this42.parseDecorator());\n                continue;\n              }\n\n              var _e56 = _this42.startNode();\n\n              i.length && (_e56.decorators = i, _this42.resetStartLocationFromNode(_e56, i[0]), i = []), _this42.parseClassMember(r, _e56, s, t), "constructor" === _e56.kind && _e56.decorators && _e56.decorators.length > 0 && _this42.raise(_e56.start, f.DecoratorConstructor);\n            }\n          }), e || (this.state.strict = !1), this.next(), i.length) throw this.raise(this.state.start, f.TrailingDecorator);\n          return this.classScope.exit(), this.finishNode(r, "ClassBody");\n        }\n      }, {\n        key: "parseClassMemberFromModifier",\n        value: function parseClassMemberFromModifier(t, e) {\n          var s = this.state.containsEsc,\n              i = this.parseIdentifier(!0);\n\n          if (this.isClassMethod()) {\n            var _s39 = e;\n            return _s39.kind = "method", _s39.computed = !1, _s39.key = i, _s39.static = !1, this.pushClassMethod(t, _s39, !1, !1, !1, !1), !0;\n          }\n\n          if (this.isClassProperty()) {\n            var _s40 = e;\n            return _s40.computed = !1, _s40.key = i, _s40.static = !1, t.body.push(this.parseClassProperty(_s40)), !0;\n          }\n\n          if (s) throw this.unexpected();\n          return !1;\n        }\n      }, {\n        key: "parseClassMember",\n        value: function parseClassMember(t, e, s, i) {\n          var r = this.isContextual("static");\n          r && this.parseClassMemberFromModifier(t, e) || this.parseClassMemberWithIsStatic(t, e, s, r, i);\n        }\n      }, {\n        key: "parseClassMemberWithIsStatic",\n        value: function parseClassMemberWithIsStatic(t, e, s, i, r) {\n          var a = e,\n              o = e,\n              h = e,\n              p = e,\n              c = a,\n              u = a;\n          if (e.static = i, this.eat(n.star)) return c.kind = "method", this.parseClassPropertyName(c), "PrivateName" === c.key.type ? void this.pushClassPrivateMethod(t, o, !0, !1) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsGenerator), void this.pushClassMethod(t, a, !0, !1, !1, !1));\n          var l = this.state.containsEsc,\n              d = this.parseClassPropertyName(e),\n              m = "PrivateName" === d.type,\n              D = "Identifier" === d.type,\n              y = this.state.start;\n\n          if (this.parsePostMemberNameModifiers(u), this.isClassMethod()) {\n            if (c.kind = "method", m) return void this.pushClassPrivateMethod(t, o, !1, !1);\n\n            var _e57 = this.isNonstaticConstructor(a);\n\n            var _i36 = !1;\n\n            _e57 && (a.kind = "constructor", s.hadConstructor && !this.hasPlugin("typescript") && this.raise(d.start, f.DuplicateConstructor), s.hadConstructor = !0, _i36 = r), this.pushClassMethod(t, a, !1, !1, _e57, _i36);\n          } else if (this.isClassProperty()) m ? this.pushClassPrivateProperty(t, p) : this.pushClassProperty(t, h);else if (!D || "async" !== d.name || l || this.isLineTerminator()) !D || "get" !== d.name && "set" !== d.name || l || this.match(n.star) && this.isLineTerminator() ? this.isLineTerminator() ? m ? this.pushClassPrivateProperty(t, p) : this.pushClassProperty(t, h) : this.unexpected() : (c.kind = d.name, this.parseClassPropertyName(a), "PrivateName" === c.key.type ? this.pushClassPrivateMethod(t, o, !1, !1) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsAccessor), this.pushClassMethod(t, a, !1, !1, !1, !1)), this.checkGetterSetterParams(a));else {\n            var _e58 = this.eat(n.star);\n\n            u.optional && this.unexpected(y), c.kind = "method", this.parseClassPropertyName(c), this.parsePostMemberNameModifiers(u), "PrivateName" === c.key.type ? this.pushClassPrivateMethod(t, o, _e58, !0) : (this.isNonstaticConstructor(a) && this.raise(a.key.start, f.ConstructorIsAsync), this.pushClassMethod(t, a, _e58, !0, !1, !1));\n          }\n        }\n      }, {\n        key: "parseClassPropertyName",\n        value: function parseClassPropertyName(t) {\n          var e = this.parsePropertyName(t, !0);\n          return t.computed || !t.static || "prototype" !== e.name && "prototype" !== e.value || this.raise(e.start, f.StaticPrototype), "PrivateName" === e.type && "constructor" === e.id.name && this.raise(e.start, f.ConstructorClassPrivateField), e;\n        }\n      }, {\n        key: "pushClassProperty",\n        value: function pushClassProperty(t, e) {\n          e.computed || "constructor" !== e.key.name && "constructor" !== e.key.value || this.raise(e.key.start, f.ConstructorClassField), t.body.push(this.parseClassProperty(e));\n        }\n      }, {\n        key: "pushClassPrivateProperty",\n        value: function pushClassPrivateProperty(t, e) {\n          this.expectPlugin("classPrivateProperties", e.key.start);\n          var s = this.parseClassPrivateProperty(e);\n          t.body.push(s), this.classScope.declarePrivateName(s.key.id.name, 0, s.key.start);\n        }\n      }, {\n        key: "pushClassMethod",\n        value: function pushClassMethod(t, e, s, i, r, a) {\n          t.body.push(this.parseMethod(e, s, i, r, a, "ClassMethod", !0));\n        }\n      }, {\n        key: "pushClassPrivateMethod",\n        value: function pushClassPrivateMethod(t, e, s, i) {\n          this.expectPlugin("classPrivateMethods", e.key.start);\n          var r = this.parseMethod(e, s, i, !1, !1, "ClassPrivateMethod", !0);\n          t.body.push(r);\n          var a = "get" === r.kind ? r.static ? 6 : 2 : "set" === r.kind ? r.static ? 5 : 1 : 0;\n          this.classScope.declarePrivateName(r.key.id.name, a, r.key.start);\n        }\n      }, {\n        key: "parsePostMemberNameModifiers",\n        value: function parsePostMemberNameModifiers(t) {}\n      }, {\n        key: "parseAccessModifier",\n        value: function parseAccessModifier() {}\n      }, {\n        key: "parseClassPrivateProperty",\n        value: function parseClassPrivateProperty(t) {\n          return this.scope.enter(80), this.prodParam.enter(0), t.value = this.eat(n.eq) ? this.parseMaybeAssign() : null, this.semicolon(), this.prodParam.exit(), this.scope.exit(), this.finishNode(t, "ClassPrivateProperty");\n        }\n      }, {\n        key: "parseClassProperty",\n        value: function parseClassProperty(t) {\n          return t.typeAnnotation || this.expectPlugin("classProperties"), this.scope.enter(80), this.prodParam.enter(0), this.match(n.eq) ? (this.expectPlugin("classProperties"), this.next(), t.value = this.parseMaybeAssign()) : t.value = null, this.semicolon(), this.prodParam.exit(), this.scope.exit(), this.finishNode(t, "ClassProperty");\n        }\n      }, {\n        key: "parseClassId",\n        value: function parseClassId(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 139;\n          this.match(n.name) ? (t.id = this.parseIdentifier(), e && this.checkLVal(t.id, i, void 0, "class name")) : s || !e ? t.id = null : this.unexpected(null, f.MissingClassName);\n        }\n      }, {\n        key: "parseClassSuper",\n        value: function parseClassSuper(t) {\n          t.superClass = this.eat(n._extends) ? this.parseExprSubscripts() : null;\n        }\n      }, {\n        key: "parseExport",\n        value: function parseExport(t) {\n          var e = this.maybeParseExportDefaultSpecifier(t),\n              s = !e || this.eat(n.comma),\n              i = s && this.eatExportStar(t),\n              r = i && this.maybeParseExportNamespaceSpecifier(t),\n              a = s && (!r || this.eat(n.comma)),\n              o = e || i;\n          if (i && !r) return e && this.unexpected(), this.parseExportFrom(t, !0), this.finishNode(t, "ExportAllDeclaration");\n          var h = this.maybeParseExportNamedSpecifiers(t);\n          if (e && s && !i && !h || r && a && !h) throw this.unexpected(null, n.braceL);\n          var p;\n          if (o || h ? (p = !1, this.parseExportFrom(t, o)) : p = this.maybeParseExportDeclaration(t), o || h || p) return this.checkExport(t, !0, !1, !!t.source), this.finishNode(t, "ExportNamedDeclaration");\n          if (this.eat(n._default)) return t.declaration = this.parseExportDefaultExpression(), this.checkExport(t, !0, !0), this.finishNode(t, "ExportDefaultDeclaration");\n          throw this.unexpected(null, n.braceL);\n        }\n      }, {\n        key: "eatExportStar",\n        value: function eatExportStar(t) {\n          return this.eat(n.star);\n        }\n      }, {\n        key: "maybeParseExportDefaultSpecifier",\n        value: function maybeParseExportDefaultSpecifier(t) {\n          if (this.isExportDefaultSpecifier()) {\n            this.expectPlugin("exportDefaultFrom");\n\n            var _e59 = this.startNode();\n\n            return _e59.exported = this.parseIdentifier(!0), t.specifiers = [this.finishNode(_e59, "ExportDefaultSpecifier")], !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "maybeParseExportNamespaceSpecifier",\n        value: function maybeParseExportNamespaceSpecifier(t) {\n          if (this.isContextual("as")) {\n            t.specifiers || (t.specifiers = []);\n\n            var _e60 = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n\n            return this.next(), _e60.exported = this.parseIdentifier(!0), t.specifiers.push(this.finishNode(_e60, "ExportNamespaceSpecifier")), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "maybeParseExportNamedSpecifiers",\n        value: function maybeParseExportNamedSpecifiers(t) {\n          var _t$specifiers;\n\n          return !!this.match(n.braceL) && (t.specifiers || (t.specifiers = []), (_t$specifiers = t.specifiers).push.apply(_t$specifiers, (0, _toConsumableArray2.default)(this.parseExportSpecifiers())), t.source = null, t.declaration = null, !0);\n        }\n      }, {\n        key: "maybeParseExportDeclaration",\n        value: function maybeParseExportDeclaration(t) {\n          if (this.shouldParseExportDeclaration()) {\n            if (this.isContextual("async")) {\n              var _t63 = this.nextTokenStart();\n\n              this.isUnparsedContextual(_t63, "function") || this.unexpected(_t63, n._function);\n            }\n\n            return t.specifiers = [], t.source = null, t.declaration = this.parseExportDeclaration(t), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "isAsyncFunction",\n        value: function isAsyncFunction() {\n          if (!this.isContextual("async")) return !1;\n          var t = this.nextTokenStart();\n          return !o.test(this.input.slice(this.state.pos, t)) && this.isUnparsedContextual(t, "function");\n        }\n      }, {\n        key: "parseExportDefaultExpression",\n        value: function parseExportDefaultExpression() {\n          var t = this.startNode(),\n              e = this.isAsyncFunction();\n          if (this.match(n._function) || e) return this.next(), e && this.next(), this.parseFunction(t, 5, e);\n          if (this.match(n._class)) return this.parseClass(t, !0, !0);\n          if (this.match(n.at)) return this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport") && this.raise(this.state.start, f.DecoratorBeforeExport), this.parseDecorators(!1), this.parseClass(t, !0, !0);\n          if (this.match(n._const) || this.match(n._var) || this.isLet()) throw this.raise(this.state.start, f.UnsupportedDefaultExport);\n          {\n            var _t64 = this.parseMaybeAssign();\n\n            return this.semicolon(), _t64;\n          }\n        }\n      }, {\n        key: "parseExportDeclaration",\n        value: function parseExportDeclaration(t) {\n          return this.parseStatement(null);\n        }\n      }, {\n        key: "isExportDefaultSpecifier",\n        value: function isExportDefaultSpecifier() {\n          if (this.match(n.name)) return "async" !== this.state.value && "let" !== this.state.value;\n          if (!this.match(n._default)) return !1;\n          var t = this.nextTokenStart();\n          return 44 === this.input.charCodeAt(t) || this.isUnparsedContextual(t, "from");\n        }\n      }, {\n        key: "parseExportFrom",\n        value: function parseExportFrom(t, e) {\n          this.eatContextual("from") ? (t.source = this.parseImportSource(), this.checkExport(t)) : e ? this.unexpected() : t.source = null, this.semicolon();\n        }\n      }, {\n        key: "shouldParseExportDeclaration",\n        value: function shouldParseExportDeclaration() {\n          if (this.match(n.at) && (this.expectOnePlugin(["decorators", "decorators-legacy"]), this.hasPlugin("decorators"))) {\n            if (!this.getPluginOption("decorators", "decoratorsBeforeExport")) return !0;\n            this.unexpected(this.state.start, f.DecoratorBeforeExport);\n          }\n\n          return "var" === this.state.type.keyword || "const" === this.state.type.keyword || "function" === this.state.type.keyword || "class" === this.state.type.keyword || this.isLet() || this.isAsyncFunction();\n        }\n      }, {\n        key: "checkExport",\n        value: function checkExport(t, e, s, i) {\n          if (e) if (s) this.checkDuplicateExports(t, "default");else if (t.specifiers && t.specifiers.length) for (var _e61 = 0, _s41 = t.specifiers; _e61 < _s41.length; _e61++) {\n            var _t65 = _s41[_e61];\n            this.checkDuplicateExports(_t65, _t65.exported.name), !i && _t65.local && (this.checkReservedWord(_t65.local.name, _t65.local.start, !0, !1), this.scope.checkLocalExport(_t65.local));\n          } else if (t.declaration) if ("FunctionDeclaration" === t.declaration.type || "ClassDeclaration" === t.declaration.type) {\n            var _e62 = t.declaration.id;\n            if (!_e62) throw new Error("Assertion failure");\n            this.checkDuplicateExports(t, _e62.name);\n          } else if ("VariableDeclaration" === t.declaration.type) for (var _e63 = 0, _s42 = t.declaration.declarations; _e63 < _s42.length; _e63++) {\n            var _t66 = _s42[_e63];\n            this.checkDeclaration(_t66.id);\n          }\n\n          if (this.state.decoratorStack[this.state.decoratorStack.length - 1].length) {\n            var _e64 = t.declaration && ("ClassDeclaration" === t.declaration.type || "ClassExpression" === t.declaration.type);\n\n            if (!t.declaration || !_e64) throw this.raise(t.start, f.UnsupportedDecoratorExport);\n            this.takeDecorators(t.declaration);\n          }\n        }\n      }, {\n        key: "checkDeclaration",\n        value: function checkDeclaration(t) {\n          if ("Identifier" === t.type) this.checkDuplicateExports(t, t.name);else if ("ObjectPattern" === t.type) for (var _e65 = 0, _s43 = t.properties; _e65 < _s43.length; _e65++) {\n            var _t67 = _s43[_e65];\n            this.checkDeclaration(_t67);\n          } else if ("ArrayPattern" === t.type) for (var _e66 = 0, _s44 = t.elements; _e66 < _s44.length; _e66++) {\n            var _t68 = _s44[_e66];\n            _t68 && this.checkDeclaration(_t68);\n          } else "ObjectProperty" === t.type ? this.checkDeclaration(t.value) : "RestElement" === t.type ? this.checkDeclaration(t.argument) : "AssignmentPattern" === t.type && this.checkDeclaration(t.left);\n        }\n      }, {\n        key: "checkDuplicateExports",\n        value: function checkDuplicateExports(t, e) {\n          this.state.exportedIdentifiers.indexOf(e) > -1 && this.raise(t.start, "default" === e ? f.DuplicateDefaultExport : f.DuplicateExport, e), this.state.exportedIdentifiers.push(e);\n        }\n      }, {\n        key: "parseExportSpecifiers",\n        value: function parseExportSpecifiers() {\n          var t = [];\n          var e = !0;\n\n          for (this.expect(n.braceL); !this.eat(n.braceR);) {\n            if (e) e = !1;else if (this.expect(n.comma), this.eat(n.braceR)) break;\n\n            var _s45 = this.startNode();\n\n            _s45.local = this.parseIdentifier(!0), _s45.exported = this.eatContextual("as") ? this.parseIdentifier(!0) : _s45.local.__clone(), t.push(this.finishNode(_s45, "ExportSpecifier"));\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseImport",\n        value: function parseImport(t) {\n          if (t.specifiers = [], !this.match(n.string)) {\n            var _e67 = !this.maybeParseDefaultImportSpecifier(t) || this.eat(n.comma),\n                _s46 = _e67 && this.maybeParseStarImportSpecifier(t);\n\n            _e67 && !_s46 && this.parseNamedImportSpecifiers(t), this.expectContextual("from");\n          }\n\n          return t.source = this.parseImportSource(), this.semicolon(), this.finishNode(t, "ImportDeclaration");\n        }\n      }, {\n        key: "parseImportSource",\n        value: function parseImportSource() {\n          return this.match(n.string) || this.unexpected(), this.parseExprAtom();\n        }\n      }, {\n        key: "shouldParseDefaultImport",\n        value: function shouldParseDefaultImport(t) {\n          return this.match(n.name);\n        }\n      }, {\n        key: "parseImportSpecifierLocal",\n        value: function parseImportSpecifierLocal(t, e, s, i) {\n          e.local = this.parseIdentifier(), this.checkLVal(e.local, 9, void 0, i), t.specifiers.push(this.finishNode(e, s));\n        }\n      }, {\n        key: "maybeParseDefaultImportSpecifier",\n        value: function maybeParseDefaultImportSpecifier(t) {\n          return !!this.shouldParseDefaultImport(t) && (this.parseImportSpecifierLocal(t, this.startNode(), "ImportDefaultSpecifier", "default import specifier"), !0);\n        }\n      }, {\n        key: "maybeParseStarImportSpecifier",\n        value: function maybeParseStarImportSpecifier(t) {\n          if (this.match(n.star)) {\n            var _e68 = this.startNode();\n\n            return this.next(), this.expectContextual("as"), this.parseImportSpecifierLocal(t, _e68, "ImportNamespaceSpecifier", "import namespace specifier"), !0;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "parseNamedImportSpecifiers",\n        value: function parseNamedImportSpecifiers(t) {\n          var e = !0;\n\n          for (this.expect(n.braceL); !this.eat(n.braceR);) {\n            if (e) e = !1;else {\n              if (this.eat(n.colon)) throw this.raise(this.state.start, f.DestructureNamedImport);\n              if (this.expect(n.comma), this.eat(n.braceR)) break;\n            }\n            this.parseImportSpecifier(t);\n          }\n        }\n      }, {\n        key: "parseImportSpecifier",\n        value: function parseImportSpecifier(t) {\n          var e = this.startNode();\n          e.imported = this.parseIdentifier(!0), this.eatContextual("as") ? e.local = this.parseIdentifier() : (this.checkReservedWord(e.imported.name, e.start, !0, !0), e.local = e.imported.__clone()), this.checkLVal(e.local, 9, void 0, "import specifier"), t.specifiers.push(this.finishNode(e, "ImportSpecifier"));\n        }\n      }]);\n      return _class7;\n    }( /*#__PURE__*/function (_ref21) {\n      (0, _inherits2.default)(_class8, _ref21);\n\n      var _super11 = _createSuper(_class8);\n\n      function _class8() {\n        (0, _classCallCheck2.default)(this, _class8);\n        return _super11.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class8, [{\n        key: "checkDuplicatedProto",\n        value: function checkDuplicatedProto(t, e, s) {\n          if ("SpreadElement" === t.type || t.computed || t.kind || t.shorthand) return;\n          var i = t.key;\n          "__proto__" === ("Identifier" === i.type ? i.name : String(i.value)) && (e.used && (s ? -1 === s.doubleProto && (s.doubleProto = i.start) : this.raise(i.start, f.DuplicateProto)), e.used = !0);\n        }\n      }, {\n        key: "getExpression",\n        value: function getExpression() {\n          var t = 0;\n          this.hasPlugin("topLevelAwait") && this.inModule && (t |= 2), this.scope.enter(1), this.prodParam.enter(t), this.nextToken();\n          var e = this.parseExpression();\n          return this.match(n.eof) || this.unexpected(), e.comments = this.state.comments, e.errors = this.state.errors, e;\n        }\n      }, {\n        key: "parseExpression",\n        value: function parseExpression(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc,\n              r = this.parseMaybeAssign(t, e);\n\n          if (this.match(n.comma)) {\n            var _a15 = this.startNodeAt(s, i);\n\n            for (_a15.expressions = [r]; this.eat(n.comma);) {\n              _a15.expressions.push(this.parseMaybeAssign(t, e));\n            }\n\n            return this.toReferencedList(_a15.expressions), this.finishNode(_a15, "SequenceExpression");\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseMaybeAssign",\n        value: function parseMaybeAssign(t, e, s, i) {\n          var r = this.state.start,\n              a = this.state.startLoc;\n\n          if (this.isContextual("yield")) {\n            if (this.prodParam.hasYield) {\n              var _e69 = this.parseYield(t);\n\n              return s && (_e69 = s.call(this, _e69, r, a)), _e69;\n            }\n\n            this.state.exprAllowed = !1;\n          }\n\n          var o;\n          e ? o = !1 : (e = new xt(), o = !0), (this.match(n.parenL) || this.match(n.name)) && (this.state.potentialArrowAt = this.state.start);\n          var h = this.parseMaybeConditional(t, e, i);\n\n          if (s && (h = s.call(this, h, r, a)), this.state.type.isAssign) {\n            var _s47 = this.startNodeAt(r, a),\n                _i37 = this.state.value;\n\n            return _s47.operator = _i37, "??=" === _i37 && this.expectPlugin("logicalAssignment"), "||=" !== _i37 && "&&=" !== _i37 || this.expectPlugin("logicalAssignment"), this.match(n.eq) ? (_s47.left = this.toAssignable(h), e.doubleProto = -1) : _s47.left = h, e.shorthandAssign >= _s47.left.start && (e.shorthandAssign = -1), this.checkLVal(h, void 0, void 0, "assignment expression"), this.next(), _s47.right = this.parseMaybeAssign(t), this.finishNode(_s47, "AssignmentExpression");\n          }\n\n          return o && this.checkExpressionErrors(e, !0), h;\n        }\n      }, {\n        key: "parseMaybeConditional",\n        value: function parseMaybeConditional(t, e, s) {\n          var i = this.state.start,\n              r = this.state.startLoc,\n              a = this.state.potentialArrowAt,\n              n = this.parseExprOps(t, e);\n          return "ArrowFunctionExpression" === n.type && n.start === a ? n : this.checkExpressionErrors(e, !1) ? n : this.parseConditional(n, t, i, r, s);\n        }\n      }, {\n        key: "parseConditional",\n        value: function parseConditional(t, e, s, i, r) {\n          if (this.eat(n.question)) {\n            var _r16 = this.startNodeAt(s, i);\n\n            return _r16.test = t, _r16.consequent = this.parseMaybeAssign(), this.expect(n.colon), _r16.alternate = this.parseMaybeAssign(e), this.finishNode(_r16, "ConditionalExpression");\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseExprOps",\n        value: function parseExprOps(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc,\n              r = this.state.potentialArrowAt,\n              a = this.parseMaybeUnary(e);\n          return "ArrowFunctionExpression" === a.type && a.start === r ? a : this.checkExpressionErrors(e, !1) ? a : this.parseExprOp(a, s, i, -1, t);\n        }\n      }, {\n        key: "parseExprOp",\n        value: function parseExprOp(t, e, s, i, r) {\n          var a = this.state.type.binop;\n\n          if (!(null == a || r && this.match(n._in)) && a > i) {\n            var _o4 = this.state.value;\n            if ("|>" === _o4 && this.state.inFSharpPipelineDirectBody) return t;\n\n            var _h5 = this.startNodeAt(e, s);\n\n            _h5.left = t, _h5.operator = _o4, "**" !== _o4 || "UnaryExpression" !== t.type || !this.options.createParenthesizedExpressions && t.extra && t.extra.parenthesized || this.raise(t.argument.start, f.UnexpectedTokenUnaryExponentiation);\n\n            var _p3 = this.state.type,\n                _c = _p3 === n.logicalOR || _p3 === n.logicalAND,\n                _u2 = _p3 === n.nullishCoalescing;\n\n            if (_p3 === n.pipeline ? (this.expectPlugin("pipelineOperator"), this.state.inPipeline = !0, this.checkPipelineAtInfixOperator(t, e)) : _u2 && (a = n.logicalAND.binop), this.next(), _p3 === n.pipeline && "minimal" === this.getPluginOption("pipelineOperator", "proposal") && this.match(n.name) && "await" === this.state.value && this.prodParam.hasAwait) throw this.raise(this.state.start, f.UnexpectedAwaitAfterPipelineBody);\n            _h5.right = this.parseExprOpRightExpr(_p3, a, r), this.finishNode(_h5, _c || _u2 ? "LogicalExpression" : "BinaryExpression");\n            var _l2 = this.state.type;\n            if (_u2 && (_l2 === n.logicalOR || _l2 === n.logicalAND) || _c && _l2 === n.nullishCoalescing) throw this.raise(this.state.start, f.MixingCoalesceWithLogical);\n            return this.parseExprOp(_h5, e, s, i, r);\n          }\n\n          return t;\n        }\n      }, {\n        key: "parseExprOpRightExpr",\n        value: function parseExprOpRightExpr(t, e, s) {\n          var _this43 = this;\n\n          var i = this.state.start,\n              r = this.state.startLoc;\n\n          switch (t) {\n            case n.pipeline:\n              switch (this.getPluginOption("pipelineOperator", "proposal")) {\n                case "smart":\n                  return this.withTopicPermittingContext(function () {\n                    return _this43.parseSmartPipelineBody(_this43.parseExprOpBaseRightExpr(t, e, s), i, r);\n                  });\n\n                case "fsharp":\n                  return this.withSoloAwaitPermittingContext(function () {\n                    return _this43.parseFSharpPipelineBody(e, s);\n                  });\n              }\n\n            default:\n              return this.parseExprOpBaseRightExpr(t, e, s);\n          }\n        }\n      }, {\n        key: "parseExprOpBaseRightExpr",\n        value: function parseExprOpBaseRightExpr(t, e, s) {\n          var i = this.state.start,\n              r = this.state.startLoc;\n          return this.parseExprOp(this.parseMaybeUnary(), i, r, t.rightAssociative ? e - 1 : e, s);\n        }\n      }, {\n        key: "parseMaybeUnary",\n        value: function parseMaybeUnary(t) {\n          if (this.isContextual("await") && this.isAwaitAllowed()) return this.parseAwait();\n\n          if (this.state.type.prefix) {\n            var _e70 = this.startNode(),\n                _s48 = this.match(n.incDec);\n\n            if (_e70.operator = this.state.value, _e70.prefix = !0, "throw" === _e70.operator && this.expectPlugin("throwExpressions"), this.next(), _e70.argument = this.parseMaybeUnary(), this.checkExpressionErrors(t, !0), _s48) this.checkLVal(_e70.argument, void 0, void 0, "prefix operation");else if (this.state.strict && "delete" === _e70.operator) {\n              var _t69 = _e70.argument;\n              "Identifier" === _t69.type ? this.raise(_e70.start, f.StrictDelete) : "MemberExpression" === _t69.type && "PrivateName" === _t69.property.type && this.raise(_e70.start, f.DeletePrivateField);\n            }\n            return this.finishNode(_e70, _s48 ? "UpdateExpression" : "UnaryExpression");\n          }\n\n          var e = this.state.start,\n              s = this.state.startLoc;\n          var i = this.parseExprSubscripts(t);\n          if (this.checkExpressionErrors(t, !1)) return i;\n\n          for (; this.state.type.postfix && !this.canInsertSemicolon();) {\n            var _t70 = this.startNodeAt(e, s);\n\n            _t70.operator = this.state.value, _t70.prefix = !1, _t70.argument = i, this.checkLVal(i, void 0, void 0, "postfix operation"), this.next(), i = this.finishNode(_t70, "UpdateExpression");\n          }\n\n          return i;\n        }\n      }, {\n        key: "parseExprSubscripts",\n        value: function parseExprSubscripts(t) {\n          var e = this.state.start,\n              s = this.state.startLoc,\n              i = this.state.potentialArrowAt,\n              r = this.parseExprAtom(t);\n          return "ArrowFunctionExpression" === r.type && r.start === i ? r : this.parseSubscripts(r, e, s);\n        }\n      }, {\n        key: "parseSubscripts",\n        value: function parseSubscripts(t, e, s, i) {\n          var r = {\n            optionalChainMember: !1,\n            maybeAsyncArrow: this.atPossibleAsyncArrow(t),\n            stop: !1\n          };\n\n          do {\n            var _a16 = this.state.maybeInAsyncArrowHead;\n            r.maybeAsyncArrow && (this.state.maybeInAsyncArrowHead = !0), t = this.parseSubscript(t, e, s, i, r), r.maybeAsyncArrow = !1, this.state.maybeInAsyncArrowHead = _a16;\n          } while (!r.stop);\n\n          return t;\n        }\n      }, {\n        key: "parseSubscript",\n        value: function parseSubscript(t, e, s, i, r) {\n          if (!i && this.eat(n.doubleColon)) {\n            var _a17 = this.startNodeAt(e, s);\n\n            return _a17.object = t, _a17.callee = this.parseNoCallExpr(), r.stop = !0, this.parseSubscripts(this.finishNode(_a17, "BindExpression"), e, s, i);\n          }\n\n          var a = !1;\n\n          if (this.match(n.questionDot)) {\n            if (r.optionalChainMember = a = !0, i && 40 === this.lookaheadCharCode()) return r.stop = !0, t;\n            this.next();\n          }\n\n          var o = this.eat(n.bracketL);\n\n          if (a && !this.match(n.parenL) && !this.match(n.backQuote) || o || this.eat(n.dot)) {\n            var _i38 = this.startNodeAt(e, s);\n\n            return _i38.object = t, _i38.property = o ? this.parseExpression() : a ? this.parseIdentifier(!0) : this.parseMaybePrivateName(!0), _i38.computed = o, "PrivateName" === _i38.property.type && ("Super" === _i38.object.type && this.raise(e, f.SuperPrivateField), this.classScope.usePrivateName(_i38.property.id.name, _i38.property.start)), o && this.expect(n.bracketR), r.optionalChainMember ? (_i38.optional = a, this.finishNode(_i38, "OptionalMemberExpression")) : this.finishNode(_i38, "MemberExpression");\n          }\n\n          if (!i && this.match(n.parenL)) {\n            var _i39 = this.state.maybeInArrowParameters,\n                _o5 = this.state.yieldPos,\n                _h6 = this.state.awaitPos;\n            this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1, this.next();\n\n            var _p4 = this.startNodeAt(e, s);\n\n            return _p4.callee = t, a ? (_p4.optional = !0, _p4.arguments = this.parseCallExpressionArguments(n.parenR, !1)) : _p4.arguments = this.parseCallExpressionArguments(n.parenR, r.maybeAsyncArrow, "Import" === t.type, "Super" !== t.type, _p4), this.finishCallExpression(_p4, r.optionalChainMember), r.maybeAsyncArrow && this.shouldParseAsyncArrow() && !a ? (r.stop = !0, _p4 = this.parseAsyncArrowFromCallExpression(this.startNodeAt(e, s), _p4), this.checkYieldAwaitInDefaultParams(), this.state.yieldPos = _o5, this.state.awaitPos = _h6) : (this.toReferencedListDeep(_p4.arguments), -1 !== _o5 && (this.state.yieldPos = _o5), (this.isAwaitAllowed() || _i39) && -1 === _h6 || (this.state.awaitPos = _h6)), this.state.maybeInArrowParameters = _i39, _p4;\n          }\n\n          return this.match(n.backQuote) ? this.parseTaggedTemplateExpression(e, s, t, r) : (r.stop = !0, t);\n        }\n      }, {\n        key: "parseTaggedTemplateExpression",\n        value: function parseTaggedTemplateExpression(t, e, s, i, r) {\n          var a = this.startNodeAt(t, e);\n          return a.tag = s, a.quasi = this.parseTemplate(!0), r && (a.typeParameters = r), i.optionalChainMember && this.raise(t, f.OptionalChainingNoTemplate), this.finishNode(a, "TaggedTemplateExpression");\n        }\n      }, {\n        key: "atPossibleAsyncArrow",\n        value: function atPossibleAsyncArrow(t) {\n          return "Identifier" === t.type && "async" === t.name && this.state.lastTokEnd === t.end && !this.canInsertSemicolon() && t.end - t.start == 5 && t.start === this.state.potentialArrowAt;\n        }\n      }, {\n        key: "finishCallExpression",\n        value: function finishCallExpression(t, e) {\n          if ("Import" === t.callee.type) if (1 !== t.arguments.length) this.raise(t.start, f.ImportCallArity);else {\n            var _e71 = t.arguments[0];\n            _e71 && "SpreadElement" === _e71.type && this.raise(_e71.start, f.ImportCallSpreadArgument);\n          }\n          return this.finishNode(t, e ? "OptionalCallExpression" : "CallExpression");\n        }\n      }, {\n        key: "parseCallExpressionArguments",\n        value: function parseCallExpressionArguments(t, e, s, i, r) {\n          var a = [];\n          var o,\n              h = !0;\n          var p = this.state.inFSharpPipelineDirectBody;\n\n          for (this.state.inFSharpPipelineDirectBody = !1; !this.eat(t);) {\n            if (h) h = !1;else if (this.expect(n.comma), this.match(t)) {\n              s && this.raise(this.state.lastTokStart, f.ImportCallArgumentTrailingComma), r && this.addExtra(r, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n            this.match(n.parenL) && !o && (o = this.state.start), a.push(this.parseExprListItem(!1, e ? new xt() : void 0, e ? {\n              start: 0\n            } : void 0, i));\n          }\n\n          return e && o && this.shouldParseAsyncArrow() && this.unexpected(), this.state.inFSharpPipelineDirectBody = p, a;\n        }\n      }, {\n        key: "shouldParseAsyncArrow",\n        value: function shouldParseAsyncArrow() {\n          return this.match(n.arrow) && !this.canInsertSemicolon();\n        }\n      }, {\n        key: "parseAsyncArrowFromCallExpression",\n        value: function parseAsyncArrowFromCallExpression(t, e) {\n          var s;\n          return this.expect(n.arrow), this.parseArrowExpression(t, e.arguments, !0, null == (s = e.extra) ? void 0 : s.trailingComma), t;\n        }\n      }, {\n        key: "parseNoCallExpr",\n        value: function parseNoCallExpr() {\n          var t = this.state.start,\n              e = this.state.startLoc;\n          return this.parseSubscripts(this.parseExprAtom(), t, e, !0);\n        }\n      }, {\n        key: "parseExprAtom",\n        value: function parseExprAtom(t) {\n          this.state.type === n.slash && this.readRegexp();\n          var e = this.state.potentialArrowAt === this.state.start;\n          var s;\n\n          switch (this.state.type) {\n            case n._super:\n              return s = this.startNode(), this.next(), !this.match(n.parenL) || this.scope.allowDirectSuper || this.options.allowSuperOutsideMethod ? this.scope.allowSuper || this.options.allowSuperOutsideMethod || this.raise(s.start, f.UnexpectedSuper) : this.raise(s.start, f.SuperNotAllowed), this.match(n.parenL) || this.match(n.bracketL) || this.match(n.dot) || this.raise(s.start, f.UnsupportedSuper), this.finishNode(s, "Super");\n\n            case n._import:\n              return s = this.startNode(), this.next(), this.match(n.dot) ? this.parseImportMetaProperty(s) : (this.match(n.parenL) || this.raise(this.state.lastTokStart, f.UnsupportedImport), this.finishNode(s, "Import"));\n\n            case n._this:\n              return s = this.startNode(), this.next(), this.finishNode(s, "ThisExpression");\n\n            case n.name:\n              {\n                s = this.startNode();\n\n                var _t71 = this.state.containsEsc,\n                    _i40 = this.parseIdentifier();\n\n                if (!_t71 && "async" === _i40.name && this.match(n._function) && !this.canInsertSemicolon()) {\n                  var _t72 = this.state.context.length - 1;\n\n                  if (this.state.context[_t72] !== x.functionStatement) throw new Error("Internal error");\n                  return this.state.context[_t72] = x.functionExpression, this.next(), this.parseFunction(s, void 0, !0);\n                }\n\n                if (e && !_t71 && "async" === _i40.name && this.match(n.name) && !this.canInsertSemicolon()) {\n                  var _t73 = this.state.maybeInArrowParameters,\n                      _e72 = this.state.maybeInAsyncArrowHead,\n                      _i41 = this.state.yieldPos,\n                      _r17 = this.state.awaitPos;\n                  this.state.maybeInArrowParameters = !0, this.state.maybeInAsyncArrowHead = !0, this.state.yieldPos = -1, this.state.awaitPos = -1;\n                  var _a18 = [this.parseIdentifier()];\n                  return this.expect(n.arrow), this.checkYieldAwaitInDefaultParams(), this.state.maybeInArrowParameters = _t73, this.state.maybeInAsyncArrowHead = _e72, this.state.yieldPos = _i41, this.state.awaitPos = _r17, this.parseArrowExpression(s, _a18, !0), s;\n                }\n\n                return e && this.match(n.arrow) && !this.canInsertSemicolon() ? (this.next(), this.parseArrowExpression(s, [_i40], !1), s) : _i40;\n              }\n\n            case n._do:\n              {\n                this.expectPlugin("doExpressions");\n\n                var _t74 = this.startNode();\n\n                this.next();\n                var _e73 = this.state.labels;\n                return this.state.labels = [], _t74.body = this.parseBlock(), this.state.labels = _e73, this.finishNode(_t74, "DoExpression");\n              }\n\n            case n.regexp:\n              {\n                var _t75 = this.state.value;\n                return s = this.parseLiteral(_t75.value, "RegExpLiteral"), s.pattern = _t75.pattern, s.flags = _t75.flags, s;\n              }\n\n            case n.num:\n              return this.parseLiteral(this.state.value, "NumericLiteral");\n\n            case n.bigint:\n              return this.parseLiteral(this.state.value, "BigIntLiteral");\n\n            case n.string:\n              return this.parseLiteral(this.state.value, "StringLiteral");\n\n            case n._null:\n              return s = this.startNode(), this.next(), this.finishNode(s, "NullLiteral");\n\n            case n._true:\n            case n._false:\n              return this.parseBooleanLiteral();\n\n            case n.parenL:\n              return this.parseParenAndDistinguishExpression(e);\n\n            case n.bracketBarL:\n            case n.bracketHashL:\n              {\n                this.expectPlugin("recordAndTuple");\n\n                var _e74 = this.state.inFSharpPipelineDirectBody,\n                    _i42 = this.state.type === n.bracketBarL ? n.bracketBarR : n.bracketR;\n\n                return this.state.inFSharpPipelineDirectBody = !1, s = this.startNode(), this.next(), s.elements = this.parseExprList(_i42, !0, t, s), this.state.inFSharpPipelineDirectBody = _e74, this.finishNode(s, "TupleExpression");\n              }\n\n            case n.bracketL:\n              {\n                var _e75 = this.state.inFSharpPipelineDirectBody;\n                return this.state.inFSharpPipelineDirectBody = !1, s = this.startNode(), this.next(), s.elements = this.parseExprList(n.bracketR, !0, t, s), this.state.maybeInArrowParameters || this.toReferencedList(s.elements), this.state.inFSharpPipelineDirectBody = _e75, this.finishNode(s, "ArrayExpression");\n              }\n\n            case n.braceBarL:\n            case n.braceHashL:\n              {\n                this.expectPlugin("recordAndTuple");\n\n                var _e76 = this.state.inFSharpPipelineDirectBody,\n                    _s49 = this.state.type === n.braceBarL ? n.braceBarR : n.braceR;\n\n                this.state.inFSharpPipelineDirectBody = !1;\n\n                var _i43 = this.parseObj(_s49, !1, !0, t);\n\n                return this.state.inFSharpPipelineDirectBody = _e76, _i43;\n              }\n\n            case n.braceL:\n              {\n                var _e77 = this.state.inFSharpPipelineDirectBody;\n                this.state.inFSharpPipelineDirectBody = !1;\n\n                var _s50 = this.parseObj(n.braceR, !1, !1, t);\n\n                return this.state.inFSharpPipelineDirectBody = _e77, _s50;\n              }\n\n            case n._function:\n              return this.parseFunctionExpression();\n\n            case n.at:\n              this.parseDecorators();\n\n            case n._class:\n              return s = this.startNode(), this.takeDecorators(s), this.parseClass(s, !1);\n\n            case n._new:\n              return this.parseNew();\n\n            case n.backQuote:\n              return this.parseTemplate(!1);\n\n            case n.doubleColon:\n              {\n                s = this.startNode(), this.next(), s.object = null;\n\n                var _t76 = s.callee = this.parseNoCallExpr();\n\n                if ("MemberExpression" === _t76.type) return this.finishNode(s, "BindExpression");\n                throw this.raise(_t76.start, f.UnsupportedBind);\n              }\n\n            case n.hash:\n              if (this.state.inPipeline) return s = this.startNode(), "smart" !== this.getPluginOption("pipelineOperator", "proposal") && this.raise(s.start, f.PrimaryTopicRequiresSmartPipeline), this.next(), this.primaryTopicReferenceIsAllowedInCurrentTopicContext() || this.raise(s.start, f.PrimaryTopicNotAllowed), this.registerTopicReference(), this.finishNode(s, "PipelinePrimaryTopicReference");\n\n            default:\n              throw this.unexpected();\n          }\n        }\n      }, {\n        key: "parseBooleanLiteral",\n        value: function parseBooleanLiteral() {\n          var t = this.startNode();\n          return t.value = this.match(n._true), this.next(), this.finishNode(t, "BooleanLiteral");\n        }\n      }, {\n        key: "parseMaybePrivateName",\n        value: function parseMaybePrivateName(t) {\n          if (this.match(n.hash)) {\n            this.expectOnePlugin(["classPrivateProperties", "classPrivateMethods"]), t || this.raise(this.state.pos, f.UnexpectedPrivateField);\n\n            var _e78 = this.startNode();\n\n            return this.next(), this.assertNoSpace("Unexpected space between # and identifier"), _e78.id = this.parseIdentifier(!0), this.finishNode(_e78, "PrivateName");\n          }\n\n          return this.parseIdentifier(!0);\n        }\n      }, {\n        key: "parseFunctionExpression",\n        value: function parseFunctionExpression() {\n          var t = this.startNode();\n          var e = this.startNode();\n          return this.next(), e = this.createIdentifier(e, "function"), this.prodParam.hasYield && this.eat(n.dot) ? this.parseMetaProperty(t, e, "sent") : this.parseFunction(t);\n        }\n      }, {\n        key: "parseMetaProperty",\n        value: function parseMetaProperty(t, e, s) {\n          t.meta = e, "function" === e.name && "sent" === s && (this.isContextual(s) ? this.expectPlugin("functionSent") : this.hasPlugin("functionSent") || this.unexpected());\n          var i = this.state.containsEsc;\n          return t.property = this.parseIdentifier(!0), (t.property.name !== s || i) && this.raise(t.property.start, f.UnsupportedMetaProperty, e.name, s), this.finishNode(t, "MetaProperty");\n        }\n      }, {\n        key: "parseImportMetaProperty",\n        value: function parseImportMetaProperty(t) {\n          var e = this.createIdentifier(this.startNodeAtNode(t), "import");\n          return this.expect(n.dot), this.isContextual("meta") ? (this.expectPlugin("importMeta"), this.inModule || this.raiseWithData(e.start, {\n            code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"\n          }, f.ImportMetaOutsideModule), this.sawUnambiguousESM = !0) : this.hasPlugin("importMeta") || this.raise(e.start, f.ImportCallArityLtOne), this.parseMetaProperty(t, e, "meta");\n        }\n      }, {\n        key: "parseLiteral",\n        value: function parseLiteral(t, e, s, i) {\n          s = s || this.state.start, i = i || this.state.startLoc;\n          var r = this.startNodeAt(s, i);\n          return this.addExtra(r, "rawValue", t), this.addExtra(r, "raw", this.input.slice(s, this.state.end)), r.value = t, this.next(), this.finishNode(r, e);\n        }\n      }, {\n        key: "parseParenAndDistinguishExpression",\n        value: function parseParenAndDistinguishExpression(t) {\n          var e = this.state.start,\n              s = this.state.startLoc;\n          var i;\n          this.expect(n.parenL);\n          var r = this.state.maybeInArrowParameters,\n              a = this.state.yieldPos,\n              o = this.state.awaitPos,\n              h = this.state.inFSharpPipelineDirectBody;\n          this.state.maybeInArrowParameters = !0, this.state.yieldPos = -1, this.state.awaitPos = -1, this.state.inFSharpPipelineDirectBody = !1;\n          var p = this.state.start,\n              c = this.state.startLoc,\n              u = [],\n              l = new xt(),\n              d = {\n            start: 0\n          };\n          var m,\n              f,\n              D = !0;\n\n          for (; !this.match(n.parenR);) {\n            if (D) D = !1;else if (this.expect(n.comma, d.start || null), this.match(n.parenR)) {\n              f = this.state.start;\n              break;\n            }\n\n            if (this.match(n.ellipsis)) {\n              var _t77 = this.state.start,\n                  _e79 = this.state.startLoc;\n              m = this.state.start, u.push(this.parseParenItem(this.parseRestBinding(), _t77, _e79)), this.checkCommaAfterRest(41);\n              break;\n            }\n\n            u.push(this.parseMaybeAssign(!1, l, this.parseParenItem, d));\n          }\n\n          var y = this.state.start,\n              x = this.state.startLoc;\n          this.expect(n.parenR), this.state.maybeInArrowParameters = r, this.state.inFSharpPipelineDirectBody = h;\n          var g = this.startNodeAt(e, s);\n\n          if (t && this.shouldParseArrow() && (g = this.parseArrow(g))) {\n            this.isAwaitAllowed() || this.state.maybeInAsyncArrowHead || (this.state.awaitPos = o), this.checkYieldAwaitInDefaultParams(), this.state.yieldPos = a, this.state.awaitPos = o;\n\n            for (var _t78 = 0; _t78 < u.length; _t78++) {\n              var _e80 = u[_t78];\n              _e80.extra && _e80.extra.parenthesized && this.unexpected(_e80.extra.parenStart);\n            }\n\n            return this.parseArrowExpression(g, u, !1), g;\n          }\n\n          if (-1 !== a && (this.state.yieldPos = a), -1 !== o && (this.state.awaitPos = o), u.length || this.unexpected(this.state.lastTokStart), f && this.unexpected(f), m && this.unexpected(m), this.checkExpressionErrors(l, !0), d.start && this.unexpected(d.start), this.toReferencedListDeep(u, !0), u.length > 1 ? (i = this.startNodeAt(p, c), i.expressions = u, this.finishNodeAt(i, "SequenceExpression", y, x)) : i = u[0], !this.options.createParenthesizedExpressions) return this.addExtra(i, "parenthesized", !0), this.addExtra(i, "parenStart", e), i;\n          var P = this.startNodeAt(e, s);\n          return P.expression = i, this.finishNode(P, "ParenthesizedExpression"), P;\n        }\n      }, {\n        key: "shouldParseArrow",\n        value: function shouldParseArrow() {\n          return !this.canInsertSemicolon();\n        }\n      }, {\n        key: "parseArrow",\n        value: function parseArrow(t) {\n          if (this.eat(n.arrow)) return t;\n        }\n      }, {\n        key: "parseParenItem",\n        value: function parseParenItem(t, e, s) {\n          return t;\n        }\n      }, {\n        key: "parseNew",\n        value: function parseNew() {\n          var t = this.startNode();\n          var e = this.startNode();\n\n          if (this.next(), e = this.createIdentifier(e, "new"), this.eat(n.dot)) {\n            var _s51 = this.parseMetaProperty(t, e, "target");\n\n            if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n              var _t79 = f.UnexpectedNewTarget;\n              this.hasPlugin("classProperties") && (_t79 += " or class properties"), this.raise(_s51.start, _t79);\n            }\n\n            return _s51;\n          }\n\n          return t.callee = this.parseNoCallExpr(), "Import" === t.callee.type ? this.raise(t.callee.start, f.ImportCallNotNewExpression) : "OptionalMemberExpression" === t.callee.type || "OptionalCallExpression" === t.callee.type ? this.raise(this.state.lastTokEnd, f.OptionalChainingNoNew) : this.eat(n.questionDot) && this.raise(this.state.start, f.OptionalChainingNoNew), this.parseNewArguments(t), this.finishNode(t, "NewExpression");\n        }\n      }, {\n        key: "parseNewArguments",\n        value: function parseNewArguments(t) {\n          if (this.eat(n.parenL)) {\n            var _e81 = this.parseExprList(n.parenR);\n\n            this.toReferencedList(_e81), t.arguments = _e81;\n          } else t.arguments = [];\n        }\n      }, {\n        key: "parseTemplateElement",\n        value: function parseTemplateElement(t) {\n          var e = this.startNode();\n          return null === this.state.value && (t || this.raise(this.state.start + 1, f.InvalidEscapeSequenceTemplate)), e.value = {\n            raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, "\\n"),\n            cooked: this.state.value\n          }, this.next(), e.tail = this.match(n.backQuote), this.finishNode(e, "TemplateElement");\n        }\n      }, {\n        key: "parseTemplate",\n        value: function parseTemplate(t) {\n          var e = this.startNode();\n          this.next(), e.expressions = [];\n          var s = this.parseTemplateElement(t);\n\n          for (e.quasis = [s]; !s.tail;) {\n            this.expect(n.dollarBraceL), e.expressions.push(this.parseExpression()), this.expect(n.braceR), e.quasis.push(s = this.parseTemplateElement(t));\n          }\n\n          return this.next(), this.finishNode(e, "TemplateLiteral");\n        }\n      }, {\n        key: "parseObj",\n        value: function parseObj(t, e, s, i) {\n          var r = Object.create(null);\n          var a = !0;\n          var o = this.startNode();\n\n          for (o.properties = [], this.next(); !this.eat(t);) {\n            if (a) a = !1;else if (this.expect(n.comma), this.match(t)) {\n              this.addExtra(o, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n\n            var _s52 = this.parseObjectMember(e, i);\n\n            e || this.checkDuplicatedProto(_s52, r, i), _s52.shorthand && this.addExtra(_s52, "shorthand", !0), o.properties.push(_s52);\n          }\n\n          var h = "ObjectExpression";\n          return e ? h = "ObjectPattern" : s && (h = "RecordExpression"), this.finishNode(o, h);\n        }\n      }, {\n        key: "isAsyncProp",\n        value: function isAsyncProp(t) {\n          return !t.computed && "Identifier" === t.key.type && "async" === t.key.name && (this.match(n.name) || this.match(n.num) || this.match(n.string) || this.match(n.bracketL) || this.state.type.keyword || this.match(n.star)) && !this.hasPrecedingLineBreak();\n        }\n      }, {\n        key: "parseObjectMember",\n        value: function parseObjectMember(t, e) {\n          var s = [];\n          if (this.match(n.at)) for (this.hasPlugin("decorators") && this.raise(this.state.start, f.UnsupportedPropertyDecorator); this.match(n.at);) {\n            s.push(this.parseDecorator());\n          }\n          var i = this.startNode();\n          var r,\n              a,\n              o = !1,\n              h = !1;\n          if (this.match(n.ellipsis)) return s.length && this.unexpected(), t ? (this.next(), i.argument = this.parseIdentifier(), this.checkCommaAfterRest(125), this.finishNode(i, "RestElement")) : this.parseSpread();\n          s.length && (i.decorators = s, s = []), i.method = !1, (t || e) && (r = this.state.start, a = this.state.startLoc), t || (o = this.eat(n.star));\n          var p = this.state.containsEsc;\n          return this.parsePropertyName(i, !1), t || p || o || !this.isAsyncProp(i) ? h = !1 : (h = !0, o = this.eat(n.star), this.parsePropertyName(i, !1)), this.parseObjPropValue(i, r, a, o, h, t, e, p), i;\n        }\n      }, {\n        key: "isGetterOrSetterMethod",\n        value: function isGetterOrSetterMethod(t, e) {\n          return !e && !t.computed && "Identifier" === t.key.type && ("get" === t.key.name || "set" === t.key.name) && (this.match(n.string) || this.match(n.num) || this.match(n.bracketL) || this.match(n.name) || !!this.state.type.keyword);\n        }\n      }, {\n        key: "getGetterSetterExpectedParamCount",\n        value: function getGetterSetterExpectedParamCount(t) {\n          return "get" === t.kind ? 0 : 1;\n        }\n      }, {\n        key: "checkGetterSetterParams",\n        value: function checkGetterSetterParams(t) {\n          var e = this.getGetterSetterExpectedParamCount(t),\n              s = t.start;\n          t.params.length !== e && ("get" === t.kind ? this.raise(s, f.BadGetterArity) : this.raise(s, f.BadSetterArity)), "set" === t.kind && "RestElement" === t.params[t.params.length - 1].type && this.raise(s, f.BadSetterRestParameter);\n        }\n      }, {\n        key: "parseObjectMethod",\n        value: function parseObjectMethod(t, e, s, i, r) {\n          return s || e || this.match(n.parenL) ? (i && this.unexpected(), t.kind = "method", t.method = !0, this.parseMethod(t, e, s, !1, !1, "ObjectMethod")) : !r && this.isGetterOrSetterMethod(t, i) ? ((e || s) && this.unexpected(), t.kind = t.key.name, this.parsePropertyName(t, !1), this.parseMethod(t, !1, !1, !1, !1, "ObjectMethod"), this.checkGetterSetterParams(t), t) : void 0;\n        }\n      }, {\n        key: "parseObjectProperty",\n        value: function parseObjectProperty(t, e, s, i, r) {\n          return t.shorthand = !1, this.eat(n.colon) ? (t.value = i ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssign(!1, r), this.finishNode(t, "ObjectProperty")) : t.computed || "Identifier" !== t.key.type ? void 0 : (this.checkReservedWord(t.key.name, t.key.start, !0, !0), i ? t.value = this.parseMaybeDefault(e, s, t.key.__clone()) : this.match(n.eq) && r ? (-1 === r.shorthandAssign && (r.shorthandAssign = this.state.start), t.value = this.parseMaybeDefault(e, s, t.key.__clone())) : t.value = t.key.__clone(), t.shorthand = !0, this.finishNode(t, "ObjectProperty"));\n        }\n      }, {\n        key: "parseObjPropValue",\n        value: function parseObjPropValue(t, e, s, i, r, a, n, o) {\n          var h = this.parseObjectMethod(t, i, r, a, o) || this.parseObjectProperty(t, e, s, a, n);\n          return h || this.unexpected(), h;\n        }\n      }, {\n        key: "parsePropertyName",\n        value: function parsePropertyName(t, e) {\n          if (this.eat(n.bracketL)) t.computed = !0, t.key = this.parseMaybeAssign(), this.expect(n.bracketR);else {\n            var _s53 = this.state.inPropertyName;\n            this.state.inPropertyName = !0, t.key = this.match(n.num) || this.match(n.string) || this.match(n.bigint) ? this.parseExprAtom() : this.parseMaybePrivateName(e), "PrivateName" !== t.key.type && (t.computed = !1), this.state.inPropertyName = _s53;\n          }\n          return t.key;\n        }\n      }, {\n        key: "initFunction",\n        value: function initFunction(t, e) {\n          t.id = null, t.generator = !1, t.async = !!e;\n        }\n      }, {\n        key: "parseMethod",\n        value: function parseMethod(t, e, s, i, r, a) {\n          var n = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : !1;\n          var o = this.state.yieldPos,\n              h = this.state.awaitPos;\n          this.state.yieldPos = -1, this.state.awaitPos = -1, this.initFunction(t, s), t.generator = !!e;\n          var p = i;\n          return this.scope.enter(18 | (n ? 64 : 0) | (r ? 32 : 0)), this.prodParam.enter(et(s, t.generator)), this.parseFunctionParams(t, p), this.parseFunctionBodyAndFinish(t, a, !0), this.prodParam.exit(), this.scope.exit(), this.state.yieldPos = o, this.state.awaitPos = h, t;\n        }\n      }, {\n        key: "parseArrowExpression",\n        value: function parseArrowExpression(t, e, s, i) {\n          this.scope.enter(6), this.prodParam.enter(et(s, !1)), this.initFunction(t, s);\n          var r = this.state.maybeInArrowParameters,\n              a = this.state.yieldPos,\n              n = this.state.awaitPos;\n          return e && (this.state.maybeInArrowParameters = !0, this.setArrowFunctionParameters(t, e, i)), this.state.maybeInArrowParameters = !1, this.state.yieldPos = -1, this.state.awaitPos = -1, this.parseFunctionBody(t, !0), this.prodParam.exit(), this.scope.exit(), this.state.maybeInArrowParameters = r, this.state.yieldPos = a, this.state.awaitPos = n, this.finishNode(t, "ArrowFunctionExpression");\n        }\n      }, {\n        key: "setArrowFunctionParameters",\n        value: function setArrowFunctionParameters(t, e, s) {\n          t.params = this.toAssignableList(e, s);\n        }\n      }, {\n        key: "parseFunctionBodyAndFinish",\n        value: function parseFunctionBodyAndFinish(t, e) {\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          this.parseFunctionBody(t, !1, s), this.finishNode(t, e);\n        }\n      }, {\n        key: "parseFunctionBody",\n        value: function parseFunctionBody(t, e) {\n          var _this44 = this;\n\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;\n          var i = e && !this.match(n.braceL),\n              r = this.state.inParameters;\n          if (this.state.inParameters = !1, i) t.body = this.parseMaybeAssign(), this.checkParams(t, !1, e, !1);else {\n            var _i44 = this.state.strict,\n                _r18 = this.state.labels;\n            this.state.labels = [], this.prodParam.enter(4 | this.prodParam.currentFlags()), t.body = this.parseBlock(!0, !1, function (r) {\n              var a = !_this44.isSimpleParamList(t.params);\n\n              if (r && a) {\n                var _e82 = "method" !== t.kind && "constructor" !== t.kind || !t.key ? t.start : t.key.end;\n\n                _this44.raise(_e82, f.IllegalLanguageModeDirective);\n              }\n\n              var n = !_i44 && _this44.state.strict;\n              _this44.checkParams(t, !(_this44.state.strict || e || s || a), e, n), _this44.state.strict && t.id && _this44.checkLVal(t.id, 65, void 0, "function name", void 0, n);\n            }), this.prodParam.exit(), this.state.labels = _r18;\n          }\n          this.state.inParameters = r;\n        }\n      }, {\n        key: "isSimpleParamList",\n        value: function isSimpleParamList(t) {\n          for (var _e83 = 0, _s54 = t.length; _e83 < _s54; _e83++) {\n            if ("Identifier" !== t[_e83].type) return !1;\n          }\n\n          return !0;\n        }\n      }, {\n        key: "checkParams",\n        value: function checkParams(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n          var r = Object.create(null);\n\n          for (var _s55 = 0; _s55 < t.params.length; _s55++) {\n            this.checkLVal(t.params[_s55], 5, e ? null : r, "function parameter list", void 0, i);\n          }\n        }\n      }, {\n        key: "parseExprList",\n        value: function parseExprList(t, e, s, i) {\n          var r = [];\n          var a = !0;\n\n          for (; !this.eat(t);) {\n            if (a) a = !1;else if (this.expect(n.comma), this.match(t)) {\n              i && this.addExtra(i, "trailingComma", this.state.lastTokStart), this.next();\n              break;\n            }\n            r.push(this.parseExprListItem(e, s));\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseExprListItem",\n        value: function parseExprListItem(t, e, s, i) {\n          var r;\n          if (t && this.match(n.comma)) r = null;else if (this.match(n.ellipsis)) {\n            var _t80 = this.state.start,\n                _i45 = this.state.startLoc;\n            r = this.parseParenItem(this.parseSpread(e, s), _t80, _i45);\n          } else if (this.match(n.question)) {\n            this.expectPlugin("partialApplication"), i || this.raise(this.state.start, f.UnexpectedArgumentPlaceholder);\n\n            var _t81 = this.startNode();\n\n            this.next(), r = this.finishNode(_t81, "ArgumentPlaceholder");\n          } else r = this.parseMaybeAssign(!1, e, this.parseParenItem, s);\n          return r;\n        }\n      }, {\n        key: "parseIdentifier",\n        value: function parseIdentifier(t) {\n          var e = this.startNode(),\n              s = this.parseIdentifierName(e.start, t);\n          return this.createIdentifier(e, s);\n        }\n      }, {\n        key: "createIdentifier",\n        value: function createIdentifier(t, e) {\n          return t.name = e, t.loc.identifierName = e, this.finishNode(t, "Identifier");\n        }\n      }, {\n        key: "parseIdentifierName",\n        value: function parseIdentifierName(t, e) {\n          var s;\n          if (this.match(n.name)) s = this.state.value;else {\n            if (!this.state.type.keyword) throw this.unexpected();\n            s = this.state.type.keyword, "class" !== s && "function" !== s || this.state.lastTokEnd === this.state.lastTokStart + 1 && 46 === this.input.charCodeAt(this.state.lastTokStart) || this.state.context.pop();\n          }\n          return e ? this.state.type = n.name : this.checkReservedWord(s, this.state.start, !!this.state.type.keyword, !1), this.next(), s;\n        }\n      }, {\n        key: "checkReservedWord",\n        value: function checkReservedWord(t, e, s, i) {\n          if (this.prodParam.hasYield && "yield" === t) return void this.raise(e, f.YieldBindingIdentifier);\n\n          if ("await" === t) {\n            if (this.prodParam.hasAwait) return void this.raise(e, f.AwaitBindingIdentifier);\n            -1 === this.state.awaitPos && (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed()) && (this.state.awaitPos = this.state.start);\n          }\n\n          if (this.scope.inClass && !this.scope.inNonArrowFunction && "arguments" === t) return void this.raise(e, f.ArgumentsDisallowedInInitializer);\n          if (s && function (t) {\n            return k.has(t);\n          }(t)) return void this.raise(e, f.UnexpectedKeyword, t);\n          (this.state.strict ? i ? O : B : L)(t, this.inModule) && (this.prodParam.hasAwait || "await" !== t ? this.raise(e, f.UnexpectedReservedWord, t) : this.raise(e, f.AwaitNotInAsyncFunction));\n        }\n      }, {\n        key: "isAwaitAllowed",\n        value: function isAwaitAllowed() {\n          return this.scope.inFunction ? this.prodParam.hasAwait : !!this.options.allowAwaitOutsideFunction || !!this.hasPlugin("topLevelAwait") && this.inModule && this.prodParam.hasAwait;\n        }\n      }, {\n        key: "parseAwait",\n        value: function parseAwait() {\n          var t = this.startNode();\n          return this.next(), this.state.inParameters ? this.raise(t.start, f.AwaitExpressionFormalParameter) : -1 === this.state.awaitPos && (this.state.awaitPos = t.start), this.eat(n.star) && this.raise(t.start, f.ObsoleteAwaitStar), this.scope.inFunction || this.options.allowAwaitOutsideFunction || (this.hasPrecedingLineBreak() || this.match(n.plusMin) || this.match(n.parenL) || this.match(n.bracketL) || this.match(n.backQuote) || this.match(n.regexp) || this.match(n.slash) || this.hasPlugin("v8intrinsic") && this.match(n.modulo) ? this.ambiguousScriptDifferentAst = !0 : this.sawUnambiguousESM = !0), this.state.soloAwait || (t.argument = this.parseMaybeUnary()), this.finishNode(t, "AwaitExpression");\n        }\n      }, {\n        key: "parseYield",\n        value: function parseYield(t) {\n          var e = this.startNode();\n          return this.state.inParameters ? this.raise(e.start, f.YieldInParameter) : -1 === this.state.yieldPos && (this.state.yieldPos = e.start), this.next(), this.match(n.semi) || !this.match(n.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak() ? (e.delegate = !1, e.argument = null) : (e.delegate = this.eat(n.star), e.argument = this.parseMaybeAssign(t)), this.finishNode(e, "YieldExpression");\n        }\n      }, {\n        key: "checkPipelineAtInfixOperator",\n        value: function checkPipelineAtInfixOperator(t, e) {\n          "smart" === this.getPluginOption("pipelineOperator", "proposal") && "SequenceExpression" === t.type && this.raise(e, f.PipelineHeadSequenceExpression);\n        }\n      }, {\n        key: "parseSmartPipelineBody",\n        value: function parseSmartPipelineBody(t, e, s) {\n          var i = this.checkSmartPipelineBodyStyle(t);\n          return this.checkSmartPipelineBodyEarlyErrors(t, i, e), this.parseSmartPipelineBodyInStyle(t, i, e, s);\n        }\n      }, {\n        key: "checkSmartPipelineBodyEarlyErrors",\n        value: function checkSmartPipelineBodyEarlyErrors(t, e, s) {\n          if (this.match(n.arrow)) throw this.raise(this.state.start, f.PipelineBodyNoArrow);\n          "PipelineTopicExpression" === e && "SequenceExpression" === t.type && this.raise(s, f.PipelineBodySequenceExpression);\n        }\n      }, {\n        key: "parseSmartPipelineBodyInStyle",\n        value: function parseSmartPipelineBodyInStyle(t, e, s, i) {\n          var r = this.startNodeAt(s, i);\n\n          switch (e) {\n            case "PipelineBareFunction":\n              r.callee = t;\n              break;\n\n            case "PipelineBareConstructor":\n              r.callee = t.callee;\n              break;\n\n            case "PipelineBareAwaitedFunction":\n              r.callee = t.argument;\n              break;\n\n            case "PipelineTopicExpression":\n              this.topicReferenceWasUsedInCurrentTopicContext() || this.raise(s, f.PipelineTopicUnused), r.expression = t;\n              break;\n\n            default:\n              throw new Error("Internal @babel/parser error: Unknown pipeline style (".concat(e, ")"));\n          }\n\n          return this.finishNode(r, e);\n        }\n      }, {\n        key: "checkSmartPipelineBodyStyle",\n        value: function checkSmartPipelineBodyStyle(t) {\n          return t.type, this.isSimpleReference(t) ? "PipelineBareFunction" : "PipelineTopicExpression";\n        }\n      }, {\n        key: "isSimpleReference",\n        value: function isSimpleReference(t) {\n          switch (t.type) {\n            case "MemberExpression":\n              return !t.computed && this.isSimpleReference(t.object);\n\n            case "Identifier":\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n      }, {\n        key: "withTopicPermittingContext",\n        value: function withTopicPermittingContext(t) {\n          var e = this.state.topicContext;\n          this.state.topicContext = {\n            maxNumOfResolvableTopics: 1,\n            maxTopicIndex: null\n          };\n\n          try {\n            return t();\n          } finally {\n            this.state.topicContext = e;\n          }\n        }\n      }, {\n        key: "withTopicForbiddingContext",\n        value: function withTopicForbiddingContext(t) {\n          var e = this.state.topicContext;\n          this.state.topicContext = {\n            maxNumOfResolvableTopics: 0,\n            maxTopicIndex: null\n          };\n\n          try {\n            return t();\n          } finally {\n            this.state.topicContext = e;\n          }\n        }\n      }, {\n        key: "withSoloAwaitPermittingContext",\n        value: function withSoloAwaitPermittingContext(t) {\n          var e = this.state.soloAwait;\n          this.state.soloAwait = !0;\n\n          try {\n            return t();\n          } finally {\n            this.state.soloAwait = e;\n          }\n        }\n      }, {\n        key: "registerTopicReference",\n        value: function registerTopicReference() {\n          this.state.topicContext.maxTopicIndex = 0;\n        }\n      }, {\n        key: "primaryTopicReferenceIsAllowedInCurrentTopicContext",\n        value: function primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n          return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n        }\n      }, {\n        key: "topicReferenceWasUsedInCurrentTopicContext",\n        value: function topicReferenceWasUsedInCurrentTopicContext() {\n          return null != this.state.topicContext.maxTopicIndex && this.state.topicContext.maxTopicIndex >= 0;\n        }\n      }, {\n        key: "parseFSharpPipelineBody",\n        value: function parseFSharpPipelineBody(t, e) {\n          var s = this.state.start,\n              i = this.state.startLoc;\n          this.state.potentialArrowAt = this.state.start;\n          var r = this.state.inFSharpPipelineDirectBody;\n          this.state.inFSharpPipelineDirectBody = !0;\n          var a = this.parseExprOp(this.parseMaybeUnary(), s, i, t, e);\n          return this.state.inFSharpPipelineDirectBody = r, a;\n        }\n      }]);\n      return _class8;\n    }( /*#__PURE__*/function (_ref22) {\n      (0, _inherits2.default)(_class9, _ref22);\n\n      var _super12 = _createSuper(_class9);\n\n      function _class9() {\n        (0, _classCallCheck2.default)(this, _class9);\n        return _super12.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class9, [{\n        key: "toAssignable",\n        value: function toAssignable(t) {\n          var e, s;\n          var i = void 0;\n\n          switch (("ParenthesizedExpression" === t.type || (null == (e = t.extra) ? void 0 : e.parenthesized)) && (i = Pt(t), "Identifier" !== i.type && "MemberExpression" !== i.type && this.raise(t.start, f.InvalidParenthesizedAssignment)), t.type) {\n            case "Identifier":\n            case "ObjectPattern":\n            case "ArrayPattern":\n            case "AssignmentPattern":\n              break;\n\n            case "ObjectExpression":\n              t.type = "ObjectPattern";\n\n              for (var _e84 = 0, _s56 = t.properties.length, _i46 = _s56 - 1; _e84 < _s56; _e84++) {\n                var r;\n\n                var _s57 = t.properties[_e84],\n                    _a19 = _e84 === _i46;\n\n                this.toAssignableObjectExpressionProp(_s57, _a19), _a19 && "RestElement" === _s57.type && (null == (r = t.extra) ? void 0 : r.trailingComma) && this.raiseRestNotLast(t.extra.trailingComma);\n              }\n\n              break;\n\n            case "ObjectProperty":\n              this.toAssignable(t.value);\n              break;\n\n            case "SpreadElement":\n              {\n                this.checkToRestConversion(t), t.type = "RestElement";\n                var _e85 = t.argument;\n                this.toAssignable(_e85);\n                break;\n              }\n\n            case "ArrayExpression":\n              t.type = "ArrayPattern", this.toAssignableList(t.elements, null == (s = t.extra) ? void 0 : s.trailingComma);\n              break;\n\n            case "AssignmentExpression":\n              "=" !== t.operator && this.raise(t.left.end, f.MissingEqInAssignment), t.type = "AssignmentPattern", delete t.operator, this.toAssignable(t.left);\n              break;\n\n            case "ParenthesizedExpression":\n              this.toAssignable(i);\n          }\n\n          return t;\n        }\n      }, {\n        key: "toAssignableObjectExpressionProp",\n        value: function toAssignableObjectExpressionProp(t, e) {\n          if ("ObjectMethod" === t.type) {\n            var _e86 = "get" === t.kind || "set" === t.kind ? f.PatternHasAccessor : f.PatternHasMethod;\n\n            this.raise(t.key.start, _e86);\n          } else "SpreadElement" !== t.type || e ? this.toAssignable(t) : this.raiseRestNotLast(t.start);\n        }\n      }, {\n        key: "toAssignableList",\n        value: function toAssignableList(t, e) {\n          var s = t.length;\n\n          if (s) {\n            var _i47 = t[s - 1];\n            if (_i47 && "RestElement" === _i47.type) --s;else if (_i47 && "SpreadElement" === _i47.type) {\n              _i47.type = "RestElement";\n              var _t82 = _i47.argument;\n              this.toAssignable(_t82), "Identifier" !== _t82.type && "MemberExpression" !== _t82.type && "ArrayPattern" !== _t82.type && "ObjectPattern" !== _t82.type && this.unexpected(_t82.start), e && this.raiseTrailingCommaAfterRest(e), --s;\n            }\n          }\n\n          for (var _e87 = 0; _e87 < s; _e87++) {\n            var _s58 = t[_e87];\n            _s58 && (this.toAssignable(_s58), "RestElement" === _s58.type && this.raiseRestNotLast(_s58.start));\n          }\n\n          return t;\n        }\n      }, {\n        key: "toReferencedList",\n        value: function toReferencedList(t, e) {\n          return t;\n        }\n      }, {\n        key: "toReferencedListDeep",\n        value: function toReferencedListDeep(t, e) {\n          this.toReferencedList(t, e);\n\n          for (var _e88 = 0; _e88 < t.length; _e88++) {\n            var _s59 = t[_e88];\n            _s59 && "ArrayExpression" === _s59.type && this.toReferencedListDeep(_s59.elements);\n          }\n        }\n      }, {\n        key: "parseSpread",\n        value: function parseSpread(t, e) {\n          var s = this.startNode();\n          return this.next(), s.argument = this.parseMaybeAssign(!1, t, void 0, e), this.finishNode(s, "SpreadElement");\n        }\n      }, {\n        key: "parseRestBinding",\n        value: function parseRestBinding() {\n          var t = this.startNode();\n          return this.next(), t.argument = this.parseBindingAtom(), this.finishNode(t, "RestElement");\n        }\n      }, {\n        key: "parseBindingAtom",\n        value: function parseBindingAtom() {\n          switch (this.state.type) {\n            case n.bracketL:\n              {\n                var _t83 = this.startNode();\n\n                return this.next(), _t83.elements = this.parseBindingList(n.bracketR, 93, !0), this.finishNode(_t83, "ArrayPattern");\n              }\n\n            case n.braceL:\n              return this.parseObj(n.braceR, !0);\n          }\n\n          return this.parseIdentifier();\n        }\n      }, {\n        key: "parseBindingList",\n        value: function parseBindingList(t, e, s, i) {\n          var r = [];\n          var a = !0;\n\n          for (; !this.eat(t);) {\n            if (a ? a = !1 : this.expect(n.comma), s && this.match(n.comma)) r.push(null);else {\n              if (this.eat(t)) break;\n\n              if (this.match(n.ellipsis)) {\n                r.push(this.parseAssignableListItemTypes(this.parseRestBinding())), this.checkCommaAfterRest(e), this.expect(t);\n                break;\n              }\n\n              {\n                var _t84 = [];\n\n                for (this.match(n.at) && this.hasPlugin("decorators") && this.raise(this.state.start, f.UnsupportedParameterDecorator); this.match(n.at);) {\n                  _t84.push(this.parseDecorator());\n                }\n\n                r.push(this.parseAssignableListItem(i, _t84));\n              }\n            }\n          }\n\n          return r;\n        }\n      }, {\n        key: "parseAssignableListItem",\n        value: function parseAssignableListItem(t, e) {\n          var s = this.parseMaybeDefault();\n          this.parseAssignableListItemTypes(s);\n          var i = this.parseMaybeDefault(s.start, s.loc.start, s);\n          return e.length && (s.decorators = e), i;\n        }\n      }, {\n        key: "parseAssignableListItemTypes",\n        value: function parseAssignableListItemTypes(t) {\n          return t;\n        }\n      }, {\n        key: "parseMaybeDefault",\n        value: function parseMaybeDefault(t, e, s) {\n          if (e = e || this.state.startLoc, t = t || this.state.start, s = s || this.parseBindingAtom(), !this.eat(n.eq)) return s;\n          var i = this.startNodeAt(t, e);\n          return i.left = s, i.right = this.parseMaybeAssign(), this.finishNode(i, "AssignmentPattern");\n        }\n      }, {\n        key: "checkLVal",\n        value: function checkLVal(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 64;\n          var s = arguments.length > 2 ? arguments[2] : undefined;\n          var i = arguments.length > 3 ? arguments[3] : undefined;\n          var r = arguments.length > 4 ? arguments[4] : undefined;\n          var a = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : !1;\n\n          switch (t.type) {\n            case "Identifier":\n              if (this.state.strict && (a ? O(t.name, this.inModule) : M(t.name)) && this.raise(t.start, 64 === e ? f.StrictEvalArguments : f.StrictEvalArgumentsBinding, t.name), s) {\n                var _e89 = "_".concat(t.name);\n\n                s[_e89] ? this.raise(t.start, f.ParamDupe) : s[_e89] = !0;\n              }\n\n              r && "let" === t.name && this.raise(t.start, f.LetInLexicalBinding), 64 & e || this.scope.declareName(t.name, e, t.start);\n              break;\n\n            case "MemberExpression":\n              64 !== e && this.raise(t.start, f.InvalidPropertyBindingPattern);\n              break;\n\n            case "ObjectPattern":\n              for (var _i48 = 0, _a20 = t.properties; _i48 < _a20.length; _i48++) {\n                var _t85 = _a20[_i48];\n                if ("ObjectProperty" === _t85.type) _t85 = _t85.value;else if ("ObjectMethod" === _t85.type) continue;\n                this.checkLVal(_t85, e, s, "object destructuring pattern", r);\n              }\n\n              break;\n\n            case "ArrayPattern":\n              for (var _i49 = 0, _a21 = t.elements; _i49 < _a21.length; _i49++) {\n                var _t86 = _a21[_i49];\n                _t86 && this.checkLVal(_t86, e, s, "array destructuring pattern", r);\n              }\n\n              break;\n\n            case "AssignmentPattern":\n              this.checkLVal(t.left, e, s, "assignment pattern");\n              break;\n\n            case "RestElement":\n              this.checkLVal(t.argument, e, s, "rest element");\n              break;\n\n            case "ParenthesizedExpression":\n              this.checkLVal(t.expression, e, s, "parenthesized expression");\n              break;\n\n            default:\n              this.raise(t.start, 64 === e ? f.InvalidLhs : f.InvalidLhsBinding, i);\n          }\n        }\n      }, {\n        key: "checkToRestConversion",\n        value: function checkToRestConversion(t) {\n          "Identifier" !== t.argument.type && "MemberExpression" !== t.argument.type && this.raise(t.argument.start, f.InvalidRestAssignmentPattern);\n        }\n      }, {\n        key: "checkCommaAfterRest",\n        value: function checkCommaAfterRest(t) {\n          this.match(n.comma) && (this.lookaheadCharCode() === t ? this.raiseTrailingCommaAfterRest(this.state.start) : this.raiseRestNotLast(this.state.start));\n        }\n      }, {\n        key: "raiseRestNotLast",\n        value: function raiseRestNotLast(t) {\n          throw this.raise(t, f.ElementAfterRest);\n        }\n      }, {\n        key: "raiseTrailingCommaAfterRest",\n        value: function raiseTrailingCommaAfterRest(t) {\n          this.raise(t, f.RestTrailingComma);\n        }\n      }]);\n      return _class9;\n    }( /*#__PURE__*/function (_ref23) {\n      (0, _inherits2.default)(_class10, _ref23);\n\n      var _super13 = _createSuper(_class10);\n\n      function _class10() {\n        (0, _classCallCheck2.default)(this, _class10);\n        return _super13.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class10, [{\n        key: "startNode",\n        value: function startNode() {\n          return new gt(this, this.state.start, this.state.startLoc);\n        }\n      }, {\n        key: "startNodeAt",\n        value: function startNodeAt(t, e) {\n          return new gt(this, t, e);\n        }\n      }, {\n        key: "startNodeAtNode",\n        value: function startNodeAtNode(t) {\n          return this.startNodeAt(t.start, t.loc.start);\n        }\n      }, {\n        key: "finishNode",\n        value: function finishNode(t, e) {\n          return this.finishNodeAt(t, e, this.state.lastTokEnd, this.state.lastTokEndLoc);\n        }\n      }, {\n        key: "finishNodeAt",\n        value: function finishNodeAt(t, e, s, i) {\n          return t.type = e, t.end = s, t.loc.end = i, this.options.ranges && (t.range[1] = s), this.processComment(t), t;\n        }\n      }, {\n        key: "resetStartLocation",\n        value: function resetStartLocation(t, e, s) {\n          t.start = e, t.loc.start = s, this.options.ranges && (t.range[0] = e);\n        }\n      }, {\n        key: "resetEndLocation",\n        value: function resetEndLocation(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.lastTokEnd;\n          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.lastTokEndLoc;\n          t.end = e, t.loc.end = s, this.options.ranges && (t.range[1] = e);\n        }\n      }, {\n        key: "resetStartLocationFromNode",\n        value: function resetStartLocationFromNode(t, e) {\n          this.resetStartLocation(t, e.start, e.loc.start);\n        }\n      }]);\n      return _class10;\n    }( /*#__PURE__*/function (_ref24) {\n      (0, _inherits2.default)(_class11, _ref24);\n\n      var _super14 = _createSuper(_class11);\n\n      function _class11() {\n        (0, _classCallCheck2.default)(this, _class11);\n        return _super14.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class11, [{\n        key: "addExtra",\n        value: function addExtra(t, e, s) {\n          if (!t) return;\n          (t.extra = t.extra || {})[e] = s;\n        }\n      }, {\n        key: "isRelational",\n        value: function isRelational(t) {\n          return this.match(n.relational) && this.state.value === t;\n        }\n      }, {\n        key: "isLookaheadRelational",\n        value: function isLookaheadRelational(t) {\n          var e = this.nextTokenStart();\n\n          if (this.input.charAt(e) === t) {\n            if (e + 1 === this.input.length) return !0;\n\n            var _s60 = this.input.charCodeAt(e + 1);\n\n            return _s60 !== t.charCodeAt(0) && 61 !== _s60;\n          }\n\n          return !1;\n        }\n      }, {\n        key: "expectRelational",\n        value: function expectRelational(t) {\n          this.isRelational(t) ? this.next() : this.unexpected(null, n.relational);\n        }\n      }, {\n        key: "isContextual",\n        value: function isContextual(t) {\n          return this.match(n.name) && this.state.value === t && !this.state.containsEsc;\n        }\n      }, {\n        key: "isUnparsedContextual",\n        value: function isUnparsedContextual(t, e) {\n          var s = t + e.length;\n          return this.input.slice(t, s) === e && (s === this.input.length || !S(this.input.charCodeAt(s)));\n        }\n      }, {\n        key: "isLookaheadContextual",\n        value: function isLookaheadContextual(t) {\n          var e = this.nextTokenStart();\n          return this.isUnparsedContextual(e, t);\n        }\n      }, {\n        key: "eatContextual",\n        value: function eatContextual(t) {\n          return this.isContextual(t) && this.eat(n.name);\n        }\n      }, {\n        key: "expectContextual",\n        value: function expectContextual(t, e) {\n          this.eatContextual(t) || this.unexpected(null, e);\n        }\n      }, {\n        key: "canInsertSemicolon",\n        value: function canInsertSemicolon() {\n          return this.match(n.eof) || this.match(n.braceR) || this.hasPrecedingLineBreak();\n        }\n      }, {\n        key: "hasPrecedingLineBreak",\n        value: function hasPrecedingLineBreak() {\n          return o.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n        }\n      }, {\n        key: "isLineTerminator",\n        value: function isLineTerminator() {\n          return this.eat(n.semi) || this.canInsertSemicolon();\n        }\n      }, {\n        key: "semicolon",\n        value: function semicolon() {\n          this.isLineTerminator() || this.unexpected(null, n.semi);\n        }\n      }, {\n        key: "expect",\n        value: function expect(t, e) {\n          this.eat(t) || this.unexpected(e, t);\n        }\n      }, {\n        key: "assertNoSpace",\n        value: function assertNoSpace() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "Unexpected space.";\n          this.state.start > this.state.lastTokEnd && this.raise(this.state.lastTokEnd, t);\n        }\n      }, {\n        key: "unexpected",\n        value: function unexpected(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Unexpected token";\n          throw "string" != typeof e && (e = \'Unexpected token, expected "\'.concat(e.label, \'"\')), this.raise(null != t ? t : this.state.start, e);\n        }\n      }, {\n        key: "expectPlugin",\n        value: function expectPlugin(t, e) {\n          if (!this.hasPlugin(t)) throw this.raiseWithData(null != e ? e : this.state.start, {\n            missingPlugin: [t]\n          }, "This experimental syntax requires enabling the parser plugin: \'".concat(t, "\'"));\n          return !0;\n        }\n      }, {\n        key: "expectOnePlugin",\n        value: function expectOnePlugin(t, e) {\n          var _this45 = this;\n\n          if (!t.some(function (t) {\n            return _this45.hasPlugin(t);\n          })) throw this.raiseWithData(null != e ? e : this.state.start, {\n            missingPlugin: t\n          }, "This experimental syntax requires enabling one of the following parser plugin(s): \'".concat(t.join(", "), "\'"));\n        }\n      }, {\n        key: "checkYieldAwaitInDefaultParams",\n        value: function checkYieldAwaitInDefaultParams() {\n          -1 !== this.state.yieldPos && (-1 === this.state.awaitPos || this.state.yieldPos < this.state.awaitPos) && this.raise(this.state.yieldPos, "Yield cannot be used as name inside a generator function"), -1 !== this.state.awaitPos && this.raise(this.state.awaitPos, "Await cannot be used as name inside an async function");\n        }\n      }, {\n        key: "tryParse",\n        value: function tryParse(t) {\n          var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.clone();\n          var s = {\n            node: null\n          };\n\n          try {\n            var _i50 = t(function () {\n              var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n              throw s.node = t, s;\n            });\n\n            if (this.state.errors.length > e.errors.length) {\n              var _t87 = this.state;\n              return this.state = e, {\n                node: _i50,\n                error: _t87.errors[e.errors.length],\n                thrown: !1,\n                aborted: !1,\n                failState: _t87\n              };\n            }\n\n            return {\n              node: _i50,\n              error: null,\n              thrown: !1,\n              aborted: !1,\n              failState: null\n            };\n          } catch (t) {\n            var _i51 = this.state;\n            if (this.state = e, t instanceof SyntaxError) return {\n              node: null,\n              error: t,\n              thrown: !0,\n              aborted: !1,\n              failState: _i51\n            };\n            if (t === s) return {\n              node: s.node,\n              error: null,\n              thrown: !1,\n              aborted: !0,\n              failState: _i51\n            };\n            throw t;\n          }\n        }\n      }, {\n        key: "checkExpressionErrors",\n        value: function checkExpressionErrors(t, e) {\n          if (!t) return !1;\n          var s = t.shorthandAssign,\n              i = t.doubleProto;\n          if (!e) return s >= 0 || i >= 0;\n          s >= 0 && this.unexpected(s), i >= 0 && this.raise(i, f.DuplicateProto);\n        }\n      }]);\n      return _class11;\n    }( /*#__PURE__*/function (_ref25) {\n      (0, _inherits2.default)(_class12, _ref25);\n\n      var _super15 = _createSuper(_class12);\n\n      function _class12(t, e) {\n        var _this46;\n\n        (0, _classCallCheck2.default)(this, _class12);\n        _this46 = _super15.call(this), _this46.tokens = [], _this46.state = new lt(), _this46.state.init(t), _this46.input = e, _this46.length = e.length, _this46.isLookahead = !1;\n        return _this46;\n      }\n\n      (0, _createClass2.default)(_class12, [{\n        key: "pushToken",\n        value: function pushToken(t) {\n          this.tokens.length = this.state.tokensLength, this.tokens.push(t), ++this.state.tokensLength;\n        }\n      }, {\n        key: "next",\n        value: function next() {\n          this.isLookahead || (this.checkKeywordEscapes(), this.options.tokens && this.pushToken(new yt(this.state))), this.state.lastTokEnd = this.state.end, this.state.lastTokStart = this.state.start, this.state.lastTokEndLoc = this.state.endLoc, this.state.lastTokStartLoc = this.state.startLoc, this.nextToken();\n        }\n      }, {\n        key: "eat",\n        value: function eat(t) {\n          return !!this.match(t) && (this.next(), !0);\n        }\n      }, {\n        key: "match",\n        value: function match(t) {\n          return this.state.type === t;\n        }\n      }, {\n        key: "lookahead",\n        value: function lookahead() {\n          var t = this.state;\n          this.state = t.clone(!0), this.isLookahead = !0, this.next(), this.isLookahead = !1;\n          var e = this.state;\n          return this.state = t, e;\n        }\n      }, {\n        key: "nextTokenStart",\n        value: function nextTokenStart() {\n          var t = this.state.pos;\n          return c.lastIndex = t, t + c.exec(this.input)[0].length;\n        }\n      }, {\n        key: "lookaheadCharCode",\n        value: function lookaheadCharCode() {\n          return this.input.charCodeAt(this.nextTokenStart());\n        }\n      }, {\n        key: "setStrict",\n        value: function setStrict(t) {\n          if (this.state.strict = t, this.match(n.num) || this.match(n.string)) {\n            for (this.state.pos = this.state.start; this.state.pos < this.state.lineStart;) {\n              this.state.lineStart = this.input.lastIndexOf("\\n", this.state.lineStart - 2) + 1, --this.state.curLine;\n            }\n\n            this.nextToken();\n          }\n        }\n      }, {\n        key: "curContext",\n        value: function curContext() {\n          return this.state.context[this.state.context.length - 1];\n        }\n      }, {\n        key: "nextToken",\n        value: function nextToken() {\n          var t = this.curContext();\n          if (t && t.preserveSpace || this.skipSpace(), this.state.octalPositions = [], this.state.start = this.state.pos, this.state.startLoc = this.state.curPosition(), this.state.pos >= this.length) return void this.finishToken(n.eof);\n          var e = null == t ? void 0 : t.override;\n          e ? e(this) : this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n        }\n      }, {\n        key: "pushComment",\n        value: function pushComment(t, e, s, i, r, a) {\n          var n = {\n            type: t ? "CommentBlock" : "CommentLine",\n            value: e,\n            start: s,\n            end: i,\n            loc: new d(r, a)\n          };\n          this.options.tokens && this.pushToken(n), this.state.comments.push(n), this.addComment(n);\n        }\n      }, {\n        key: "skipBlockComment",\n        value: function skipBlockComment() {\n          var t = this.state.curPosition(),\n              e = this.state.pos,\n              s = this.input.indexOf("*/", this.state.pos + 2);\n          if (-1 === s) throw this.raise(e, f.UnterminatedComment);\n          var i;\n\n          for (this.state.pos = s + 2, h.lastIndex = e; (i = h.exec(this.input)) && i.index < this.state.pos;) {\n            ++this.state.curLine, this.state.lineStart = i.index + i[0].length;\n          }\n\n          this.isLookahead || this.pushComment(!0, this.input.slice(e + 2, s), e, this.state.pos, t, this.state.curPosition());\n        }\n      }, {\n        key: "skipLineComment",\n        value: function skipLineComment(t) {\n          var e = this.state.pos,\n              s = this.state.curPosition();\n          var i = this.input.charCodeAt(this.state.pos += t);\n          if (this.state.pos < this.length) for (; !p(i) && ++this.state.pos < this.length;) {\n            i = this.input.charCodeAt(this.state.pos);\n          }\n          this.isLookahead || this.pushComment(!1, this.input.slice(e + t, this.state.pos), e, this.state.pos, s, this.state.curPosition());\n        }\n      }, {\n        key: "skipSpace",\n        value: function skipSpace() {\n          t: for (; this.state.pos < this.length;) {\n            var _t88 = this.input.charCodeAt(this.state.pos);\n\n            switch (_t88) {\n              case 32:\n              case 160:\n              case 9:\n                ++this.state.pos;\n                break;\n\n              case 13:\n                10 === this.input.charCodeAt(this.state.pos + 1) && ++this.state.pos;\n\n              case 10:\n              case 8232:\n              case 8233:\n                ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;\n                break;\n\n              case 47:\n                switch (this.input.charCodeAt(this.state.pos + 1)) {\n                  case 42:\n                    this.skipBlockComment();\n                    break;\n\n                  case 47:\n                    this.skipLineComment(2);\n                    break;\n\n                  default:\n                    break t;\n                }\n\n                break;\n\n              default:\n                if (!u(_t88)) break t;\n                ++this.state.pos;\n            }\n          }\n        }\n      }, {\n        key: "finishToken",\n        value: function finishToken(t, e) {\n          this.state.end = this.state.pos, this.state.endLoc = this.state.curPosition();\n          var s = this.state.type;\n          this.state.type = t, this.state.value = e, this.isLookahead || this.updateContext(s);\n        }\n      }, {\n        key: "readToken_numberSign",\n        value: function readToken_numberSign() {\n          if (0 === this.state.pos && this.readToken_interpreter()) return;\n          var t = this.state.pos + 1,\n              e = this.input.charCodeAt(t);\n          if (e >= 48 && e <= 57) throw this.raise(this.state.pos, f.UnexpectedDigitAfterHash);\n\n          if (!this.hasPlugin("recordAndTuple") || 123 !== e && 91 !== e) {\n            if (!this.hasPlugin("classPrivateProperties") && !this.hasPlugin("classPrivateMethods") && "smart" !== this.getPluginOption("pipelineOperator", "proposal")) throw this.raise(this.state.pos, f.InvalidOrUnexpectedToken, "#");\n            this.finishOp(n.hash, 1);\n          } else {\n            if ("hash" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, 123 === e ? f.RecordExpressionHashIncorrectStartSyntaxType : f.TupleExpressionHashIncorrectStartSyntaxType);\n            123 === e ? this.finishToken(n.braceHashL) : this.finishToken(n.bracketHashL), this.state.pos += 2;\n          }\n        }\n      }, {\n        key: "readToken_dot",\n        value: function readToken_dot() {\n          var t = this.input.charCodeAt(this.state.pos + 1);\n          t >= 48 && t <= 57 ? this.readNumber(!0) : 46 === t && 46 === this.input.charCodeAt(this.state.pos + 2) ? (this.state.pos += 3, this.finishToken(n.ellipsis)) : (++this.state.pos, this.finishToken(n.dot));\n        }\n      }, {\n        key: "readToken_slash",\n        value: function readToken_slash() {\n          if (this.state.exprAllowed && !this.state.inType) return ++this.state.pos, void this.readRegexp();\n          61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.assign, 2) : this.finishOp(n.slash, 1);\n        }\n      }, {\n        key: "readToken_interpreter",\n        value: function readToken_interpreter() {\n          if (0 !== this.state.pos || this.length < 2) return !1;\n          var t = this.input.charCodeAt(this.state.pos + 1);\n          if (33 !== t) return !1;\n          var e = this.state.pos;\n\n          for (this.state.pos += 1; !p(t) && ++this.state.pos < this.length;) {\n            t = this.input.charCodeAt(this.state.pos);\n          }\n\n          var s = this.input.slice(e + 2, this.state.pos);\n          return this.finishToken(n.interpreterDirective, s), !0;\n        }\n      }, {\n        key: "readToken_mult_modulo",\n        value: function readToken_mult_modulo(t) {\n          var e = 42 === t ? n.star : n.modulo,\n              s = 1,\n              i = this.input.charCodeAt(this.state.pos + 1);\n          var r = this.state.exprAllowed;\n          42 === t && 42 === i && (s++, i = this.input.charCodeAt(this.state.pos + 2), e = n.exponent), 61 !== i || r || (s++, e = n.assign), this.finishOp(e, s);\n        }\n      }, {\n        key: "readToken_pipe_amp",\n        value: function readToken_pipe_amp(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n\n          if (e !== t) {\n            if (124 === t) {\n              if (62 === e) return void this.finishOp(n.pipeline, 2);\n\n              if (this.hasPlugin("recordAndTuple") && 125 === e) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.RecordExpressionBarIncorrectEndSyntaxType);\n                return void this.finishOp(n.braceBarR, 2);\n              }\n\n              if (this.hasPlugin("recordAndTuple") && 93 === e) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.TupleExpressionBarIncorrectEndSyntaxType);\n                return void this.finishOp(n.bracketBarR, 2);\n              }\n            }\n\n            61 !== e ? this.finishOp(124 === t ? n.bitwiseOR : n.bitwiseAND, 1) : this.finishOp(n.assign, 2);\n          } else 61 === this.input.charCodeAt(this.state.pos + 2) ? this.finishOp(n.assign, 3) : this.finishOp(124 === t ? n.logicalOR : n.logicalAND, 2);\n        }\n      }, {\n        key: "readToken_caret",\n        value: function readToken_caret() {\n          61 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.assign, 2) : this.finishOp(n.bitwiseXOR, 1);\n        }\n      }, {\n        key: "readToken_plus_min",\n        value: function readToken_plus_min(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          if (e === t) return 45 !== e || this.inModule || 62 !== this.input.charCodeAt(this.state.pos + 2) || 0 !== this.state.lastTokEnd && !o.test(this.input.slice(this.state.lastTokEnd, this.state.pos)) ? void this.finishOp(n.incDec, 2) : (this.skipLineComment(3), this.skipSpace(), void this.nextToken());\n          61 === e ? this.finishOp(n.assign, 2) : this.finishOp(n.plusMin, 1);\n        }\n      }, {\n        key: "readToken_lt_gt",\n        value: function readToken_lt_gt(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          var s = 1;\n          return e === t ? (s = 62 === t && 62 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.state.pos + s) ? void this.finishOp(n.assign, s + 1) : void this.finishOp(n.bitShift, s)) : 33 !== e || 60 !== t || this.inModule || 45 !== this.input.charCodeAt(this.state.pos + 2) || 45 !== this.input.charCodeAt(this.state.pos + 3) ? (61 === e && (s = 2), void this.finishOp(n.relational, s)) : (this.skipLineComment(4), this.skipSpace(), void this.nextToken());\n        }\n      }, {\n        key: "readToken_eq_excl",\n        value: function readToken_eq_excl(t) {\n          var e = this.input.charCodeAt(this.state.pos + 1);\n          if (61 !== e) return 61 === t && 62 === e ? (this.state.pos += 2, void this.finishToken(n.arrow)) : void this.finishOp(61 === t ? n.eq : n.bang, 1);\n          this.finishOp(n.equality, 61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2);\n        }\n      }, {\n        key: "readToken_question",\n        value: function readToken_question() {\n          var t = this.input.charCodeAt(this.state.pos + 1),\n              e = this.input.charCodeAt(this.state.pos + 2);\n          63 !== t || this.state.inType ? 46 !== t || e >= 48 && e <= 57 ? (++this.state.pos, this.finishToken(n.question)) : (this.state.pos += 2, this.finishToken(n.questionDot)) : 61 === e ? this.finishOp(n.assign, 3) : this.finishOp(n.nullishCoalescing, 2);\n        }\n      }, {\n        key: "getTokenFromCode",\n        value: function getTokenFromCode(t) {\n          switch (t) {\n            case 46:\n              return void this.readToken_dot();\n\n            case 40:\n              return ++this.state.pos, void this.finishToken(n.parenL);\n\n            case 41:\n              return ++this.state.pos, void this.finishToken(n.parenR);\n\n            case 59:\n              return ++this.state.pos, void this.finishToken(n.semi);\n\n            case 44:\n              return ++this.state.pos, void this.finishToken(n.comma);\n\n            case 91:\n              if (this.hasPlugin("recordAndTuple") && 124 === this.input.charCodeAt(this.state.pos + 1)) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.TupleExpressionBarIncorrectStartSyntaxType);\n                this.finishToken(n.bracketBarL), this.state.pos += 2;\n              } else ++this.state.pos, this.finishToken(n.bracketL);\n\n              return;\n\n            case 93:\n              return ++this.state.pos, void this.finishToken(n.bracketR);\n\n            case 123:\n              if (this.hasPlugin("recordAndTuple") && 124 === this.input.charCodeAt(this.state.pos + 1)) {\n                if ("bar" !== this.getPluginOption("recordAndTuple", "syntaxType")) throw this.raise(this.state.pos, f.RecordExpressionBarIncorrectStartSyntaxType);\n                this.finishToken(n.braceBarL), this.state.pos += 2;\n              } else ++this.state.pos, this.finishToken(n.braceL);\n\n              return;\n\n            case 125:\n              return ++this.state.pos, void this.finishToken(n.braceR);\n\n            case 58:\n              return void (this.hasPlugin("functionBind") && 58 === this.input.charCodeAt(this.state.pos + 1) ? this.finishOp(n.doubleColon, 2) : (++this.state.pos, this.finishToken(n.colon)));\n\n            case 63:\n              return void this.readToken_question();\n\n            case 96:\n              return ++this.state.pos, void this.finishToken(n.backQuote);\n\n            case 48:\n              {\n                var _t89 = this.input.charCodeAt(this.state.pos + 1);\n\n                if (120 === _t89 || 88 === _t89) return void this.readRadixNumber(16);\n                if (111 === _t89 || 79 === _t89) return void this.readRadixNumber(8);\n                if (98 === _t89 || 66 === _t89) return void this.readRadixNumber(2);\n              }\n\n            case 49:\n            case 50:\n            case 51:\n            case 52:\n            case 53:\n            case 54:\n            case 55:\n            case 56:\n            case 57:\n              return void this.readNumber(!1);\n\n            case 34:\n            case 39:\n              return void this.readString(t);\n\n            case 47:\n              return void this.readToken_slash();\n\n            case 37:\n            case 42:\n              return void this.readToken_mult_modulo(t);\n\n            case 124:\n            case 38:\n              return void this.readToken_pipe_amp(t);\n\n            case 94:\n              return void this.readToken_caret();\n\n            case 43:\n            case 45:\n              return void this.readToken_plus_min(t);\n\n            case 60:\n            case 62:\n              return void this.readToken_lt_gt(t);\n\n            case 61:\n            case 33:\n              return void this.readToken_eq_excl(t);\n\n            case 126:\n              return void this.finishOp(n.tilde, 1);\n\n            case 64:\n              return ++this.state.pos, void this.finishToken(n.at);\n\n            case 35:\n              return void this.readToken_numberSign();\n\n            case 92:\n              return void this.readWord();\n\n            default:\n              if (w(t)) return void this.readWord();\n          }\n\n          throw this.raise(this.state.pos, f.InvalidOrUnexpectedToken, String.fromCodePoint(t));\n        }\n      }, {\n        key: "finishOp",\n        value: function finishOp(t, e) {\n          var s = this.input.slice(this.state.pos, this.state.pos + e);\n          this.state.pos += e, this.finishToken(t, s);\n        }\n      }, {\n        key: "readRegexp",\n        value: function readRegexp() {\n          var t = this.state.pos;\n          var e, s;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(t, f.UnterminatedRegExp);\n\n            var _i52 = this.input.charAt(this.state.pos);\n\n            if (o.test(_i52)) throw this.raise(t, f.UnterminatedRegExp);\n            if (e) e = !1;else {\n              if ("[" === _i52) s = !0;else if ("]" === _i52 && s) s = !1;else if ("/" === _i52 && !s) break;\n              e = "\\\\" === _i52;\n            }\n            ++this.state.pos;\n          }\n\n          var i = this.input.slice(t, this.state.pos);\n          ++this.state.pos;\n          var r = "";\n\n          for (; this.state.pos < this.length;) {\n            var _t90 = this.input[this.state.pos],\n                _e90 = this.input.codePointAt(this.state.pos);\n\n            if (mt.has(_t90)) r.indexOf(_t90) > -1 && this.raise(this.state.pos + 1, f.DuplicateRegExpFlags);else {\n              if (!S(_e90) && 92 !== _e90) break;\n              this.raise(this.state.pos + 1, f.MalformedRegExpFlags);\n            }\n            ++this.state.pos, r += _t90;\n          }\n\n          this.finishToken(n.regexp, {\n            pattern: i,\n            flags: r\n          });\n        }\n      }, {\n        key: "readInt",\n        value: function readInt(t, e, s) {\n          var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;\n          var r = this.state.pos,\n              a = 16 === t ? ft.hex : ft.decBinOct,\n              n = 16 === t ? Dt.hex : 10 === t ? Dt.dec : 8 === t ? Dt.oct : Dt.bin;\n          var o = !1,\n              h = 0;\n\n          for (var _r19 = 0, _p5 = null == e ? 1 / 0 : e; _r19 < _p5; ++_r19) {\n            var _e91 = this.input.charCodeAt(this.state.pos);\n\n            var _p6 = void 0;\n\n            if (this.hasPlugin("numericSeparator") && 95 === _e91) {\n              var _t91 = this.input.charCodeAt(this.state.pos - 1),\n                  _e92 = this.input.charCodeAt(this.state.pos + 1);\n\n              -1 === n.indexOf(_e92) ? this.raise(this.state.pos, f.UnexpectedNumericSeparator) : (a.indexOf(_t91) > -1 || a.indexOf(_e92) > -1 || Number.isNaN(_e92)) && this.raise(this.state.pos, f.UnexpectedNumericSeparator), i || this.raise(this.state.pos, f.NumericSeparatorInEscapeSequence), ++this.state.pos;\n            } else {\n              if (_p6 = _e91 >= 97 ? _e91 - 97 + 10 : _e91 >= 65 ? _e91 - 65 + 10 : dt(_e91) ? _e91 - 48 : 1 / 0, _p6 >= t) if (this.options.errorRecovery && _p6 <= 9) _p6 = 0, this.raise(this.state.start + _r19 + 2, f.InvalidDigit, t);else {\n                if (!s) break;\n                _p6 = 0, o = !0;\n              }\n              ++this.state.pos, h = h * t + _p6;\n            }\n          }\n\n          return this.state.pos === r || null != e && this.state.pos - r !== e || o ? null : h;\n        }\n      }, {\n        key: "readRadixNumber",\n        value: function readRadixNumber(t) {\n          var e = this.state.pos;\n          var s = !1;\n          this.state.pos += 2;\n          var i = this.readInt(t);\n          if (null == i && this.raise(this.state.start + 2, f.InvalidDigit, t), 110 === this.input.charCodeAt(this.state.pos) && (++this.state.pos, s = !0), w(this.input.codePointAt(this.state.pos))) throw this.raise(this.state.pos, f.NumberIdentifier);\n\n          if (s) {\n            var _t92 = this.input.slice(e, this.state.pos).replace(/[_n]/g, "");\n\n            this.finishToken(n.bigint, _t92);\n          } else this.finishToken(n.num, i);\n        }\n      }, {\n        key: "readNumber",\n        value: function readNumber(t) {\n          var e = this.state.pos;\n          var s = !1,\n              i = !1,\n              r = !1;\n          t || null !== this.readInt(10) || this.raise(e, f.InvalidNumber);\n          var a = this.state.pos - e >= 2 && 48 === this.input.charCodeAt(e);\n          a && (this.state.strict && this.raise(e, f.StrictOctalLiteral), /[89]/.test(this.input.slice(e, this.state.pos)) && (a = !1, r = !0));\n          var o = this.input.charCodeAt(this.state.pos);\n\n          if (46 !== o || a || (++this.state.pos, this.readInt(10), s = !0, o = this.input.charCodeAt(this.state.pos)), 69 !== o && 101 !== o || a || (o = this.input.charCodeAt(++this.state.pos), 43 !== o && 45 !== o || ++this.state.pos, null === this.readInt(10) && this.raise(e, "Invalid number"), s = !0, o = this.input.charCodeAt(this.state.pos)), this.hasPlugin("numericSeparator") && (a || r)) {\n            var _t93 = this.input.slice(e, this.state.pos).indexOf("_");\n\n            _t93 > 0 && this.raise(_t93 + e, f.ZeroDigitNumericSeparator);\n          }\n\n          if (110 === o && ((s || a || r) && this.raise(e, "Invalid BigIntLiteral"), ++this.state.pos, i = !0), w(this.input.codePointAt(this.state.pos))) throw this.raise(this.state.pos, f.NumberIdentifier);\n          var h = this.input.slice(e, this.state.pos).replace(/[_n]/g, "");\n          if (i) return void this.finishToken(n.bigint, h);\n          var p = a ? parseInt(h, 8) : parseFloat(h);\n          this.finishToken(n.num, p);\n        }\n      }, {\n        key: "readCodePoint",\n        value: function readCodePoint(t) {\n          var e;\n\n          if (123 === this.input.charCodeAt(this.state.pos)) {\n            var _s61 = ++this.state.pos;\n\n            if (e = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, !0, t), ++this.state.pos, null !== e && e > 1114111) {\n              if (!t) return null;\n              this.raise(_s61, f.InvalidCodePoint);\n            }\n          } else e = this.readHexChar(4, !1, t);\n\n          return e;\n        }\n      }, {\n        key: "readString",\n        value: function readString(t) {\n          var e = "",\n              s = ++this.state.pos;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedString);\n\n            var _i53 = this.input.charCodeAt(this.state.pos);\n\n            if (_i53 === t) break;\n            if (92 === _i53) e += this.input.slice(s, this.state.pos), e += this.readEscapedChar(!1), s = this.state.pos;else if (8232 === _i53 || 8233 === _i53) ++this.state.pos, ++this.state.curLine, this.state.lineStart = this.state.pos;else {\n              if (p(_i53)) throw this.raise(this.state.start, f.UnterminatedString);\n              ++this.state.pos;\n            }\n          }\n\n          e += this.input.slice(s, this.state.pos++), this.finishToken(n.string, e);\n        }\n      }, {\n        key: "readTmplToken",\n        value: function readTmplToken() {\n          var t = "",\n              e = this.state.pos,\n              s = !1;\n\n          for (;;) {\n            if (this.state.pos >= this.length) throw this.raise(this.state.start, f.UnterminatedTemplate);\n\n            var _i54 = this.input.charCodeAt(this.state.pos);\n\n            if (96 === _i54 || 36 === _i54 && 123 === this.input.charCodeAt(this.state.pos + 1)) return this.state.pos === this.state.start && this.match(n.template) ? 36 === _i54 ? (this.state.pos += 2, void this.finishToken(n.dollarBraceL)) : (++this.state.pos, void this.finishToken(n.backQuote)) : (t += this.input.slice(e, this.state.pos), void this.finishToken(n.template, s ? null : t));\n\n            if (92 === _i54) {\n              t += this.input.slice(e, this.state.pos);\n\n              var _i55 = this.readEscapedChar(!0);\n\n              null === _i55 ? s = !0 : t += _i55, e = this.state.pos;\n            } else if (p(_i54)) {\n              switch (t += this.input.slice(e, this.state.pos), ++this.state.pos, _i54) {\n                case 13:\n                  10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;\n\n                case 10:\n                  t += "\\n";\n                  break;\n\n                default:\n                  t += String.fromCharCode(_i54);\n              }\n\n              ++this.state.curLine, this.state.lineStart = this.state.pos, e = this.state.pos;\n            } else ++this.state.pos;\n          }\n        }\n      }, {\n        key: "readEscapedChar",\n        value: function readEscapedChar(t) {\n          var e = !t,\n              s = this.input.charCodeAt(++this.state.pos);\n\n          switch (++this.state.pos, s) {\n            case 110:\n              return "\\n";\n\n            case 114:\n              return "\\r";\n\n            case 120:\n              {\n                var _t94 = this.readHexChar(2, !1, e);\n\n                return null === _t94 ? null : String.fromCharCode(_t94);\n              }\n\n            case 117:\n              {\n                var _t95 = this.readCodePoint(e);\n\n                return null === _t95 ? null : String.fromCodePoint(_t95);\n              }\n\n            case 116:\n              return "\\t";\n\n            case 98:\n              return "\\b";\n\n            case 118:\n              return "\\v";\n\n            case 102:\n              return "\\f";\n\n            case 13:\n              10 === this.input.charCodeAt(this.state.pos) && ++this.state.pos;\n\n            case 10:\n              this.state.lineStart = this.state.pos, ++this.state.curLine;\n\n            case 8232:\n            case 8233:\n              return "";\n\n            case 56:\n            case 57:\n              if (t) return null;\n\n            default:\n              if (s >= 48 && s <= 55) {\n                var _e93 = this.state.pos - 1;\n\n                var _s62 = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/)[0],\n                    _i56 = parseInt(_s62, 8);\n\n                _i56 > 255 && (_s62 = _s62.slice(0, -1), _i56 = parseInt(_s62, 8)), this.state.pos += _s62.length - 1;\n\n                var _r20 = this.input.charCodeAt(this.state.pos);\n\n                if ("0" !== _s62 || 56 === _r20 || 57 === _r20) {\n                  if (t) return null;\n                  this.state.strict ? this.raise(_e93, f.StrictOctalLiteral) : this.state.octalPositions.push(_e93);\n                }\n\n                return String.fromCharCode(_i56);\n              }\n\n              return String.fromCharCode(s);\n          }\n        }\n      }, {\n        key: "readHexChar",\n        value: function readHexChar(t, e, s) {\n          var i = this.state.pos,\n              r = this.readInt(16, t, e, !1);\n          return null === r && (s ? this.raise(i, f.InvalidEscapeSequence) : this.state.pos = i - 1), r;\n        }\n      }, {\n        key: "readWord1",\n        value: function readWord1() {\n          var t = "";\n          this.state.containsEsc = !1;\n          var e = this.state.pos;\n          var s = this.state.pos;\n\n          for (; this.state.pos < this.length;) {\n            var _i57 = this.input.codePointAt(this.state.pos);\n\n            if (S(_i57)) this.state.pos += _i57 <= 65535 ? 1 : 2;else if (this.state.isIterator && 64 === _i57) ++this.state.pos;else {\n              if (92 !== _i57) break;\n              {\n                this.state.containsEsc = !0, t += this.input.slice(s, this.state.pos);\n\n                var _i58 = this.state.pos,\n                    _r21 = this.state.pos === e ? w : S;\n\n                if (117 !== this.input.charCodeAt(++this.state.pos)) {\n                  this.raise(this.state.pos, f.MissingUnicodeEscape);\n                  continue;\n                }\n\n                ++this.state.pos;\n\n                var _a22 = this.readCodePoint(!0);\n\n                null !== _a22 && (_r21(_a22) || this.raise(_i58, f.EscapedCharNotAnIdentifier), t += String.fromCodePoint(_a22)), s = this.state.pos;\n              }\n            }\n          }\n\n          return t + this.input.slice(s, this.state.pos);\n        }\n      }, {\n        key: "isIterator",\n        value: function isIterator(t) {\n          return "@@iterator" === t || "@@asyncIterator" === t;\n        }\n      }, {\n        key: "readWord",\n        value: function readWord() {\n          var t = this.readWord1(),\n              e = i.get(t) || n.name;\n          !this.state.isIterator || this.isIterator(t) && this.state.inType || this.raise(this.state.pos, f.InvalidIdentifier, t), this.finishToken(e, t);\n        }\n      }, {\n        key: "checkKeywordEscapes",\n        value: function checkKeywordEscapes() {\n          var t = this.state.type.keyword;\n          t && this.state.containsEsc && this.raise(this.state.start, f.InvalidEscapedReservedWord, t);\n        }\n      }, {\n        key: "braceIsBlock",\n        value: function braceIsBlock(t) {\n          var e = this.curContext();\n          return e === x.functionExpression || e === x.functionStatement || (t !== n.colon || e !== x.braceStatement && e !== x.braceExpression ? t === n._return || t === n.name && this.state.exprAllowed ? o.test(this.input.slice(this.state.lastTokEnd, this.state.start)) : t === n._else || t === n.semi || t === n.eof || t === n.parenR || t === n.arrow || (t === n.braceL ? e === x.braceStatement : t !== n._var && t !== n._const && t !== n.name && (t === n.relational || !this.state.exprAllowed)) : !e.isExpr);\n        }\n      }, {\n        key: "updateContext",\n        value: function updateContext(t) {\n          var e = this.state.type;\n          var s;\n          !e.keyword || t !== n.dot && t !== n.questionDot ? (s = e.updateContext) ? s.call(this, t) : this.state.exprAllowed = e.beforeExpr : this.state.exprAllowed = !1;\n        }\n      }]);\n      return _class12;\n    }( /*#__PURE__*/function (_ref26) {\n      (0, _inherits2.default)(_class13, _ref26);\n\n      var _super16 = _createSuper(_class13);\n\n      function _class13() {\n        (0, _classCallCheck2.default)(this, _class13);\n        return _super16.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class13, [{\n        key: "getLocationForPosition",\n        value: function getLocationForPosition(t) {\n          var e;\n          return e = t === this.state.start ? this.state.startLoc : t === this.state.lastTokStart ? this.state.lastTokStartLoc : t === this.state.end ? this.state.endLoc : t === this.state.lastTokEnd ? this.state.lastTokEndLoc : function (t, e) {\n            var s,\n                i = 1,\n                r = 0;\n\n            for (h.lastIndex = 0; (s = h.exec(t)) && s.index < e;) {\n              i++, r = h.lastIndex;\n            }\n\n            return new l(i, e - r);\n          }(this.input, t), e;\n        }\n      }, {\n        key: "raise",\n        value: function raise(t, e) {\n          for (var _len5 = arguments.length, s = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n            s[_key5 - 2] = arguments[_key5];\n          }\n\n          return this.raiseWithData.apply(this, [t, void 0, e].concat(s));\n        }\n      }, {\n        key: "raiseWithData",\n        value: function raiseWithData(t, e, s) {\n          for (var _len6 = arguments.length, i = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n            i[_key6 - 3] = arguments[_key6];\n          }\n\n          var r = this.getLocationForPosition(t),\n              a = s.replace(/%(\\d+)/g, function (t, e) {\n            return i[e];\n          }) + " (".concat(r.line, ":").concat(r.column, ")");\n          return this._raise(Object.assign({\n            loc: r,\n            pos: t\n          }, e), a);\n        }\n      }, {\n        key: "_raise",\n        value: function _raise(t, e) {\n          var s = new SyntaxError(e);\n          if (Object.assign(s, t), this.options.errorRecovery) return this.isLookahead || this.state.errors.push(s), s;\n          throw s;\n        }\n      }]);\n      return _class13;\n    }( /*#__PURE__*/function (_ref27) {\n      (0, _inherits2.default)(_class14, _ref27);\n\n      var _super17 = _createSuper(_class14);\n\n      function _class14() {\n        (0, _classCallCheck2.default)(this, _class14);\n        return _super17.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(_class14, [{\n        key: "addComment",\n        value: function addComment(t) {\n          this.filename && (t.loc.filename = this.filename), this.state.trailingComments.push(t), this.state.leadingComments.push(t);\n        }\n      }, {\n        key: "adjustCommentsAfterTrailingComma",\n        value: function adjustCommentsAfterTrailingComma(t, e, s) {\n          if (0 === this.state.leadingComments.length) return;\n          var i = null,\n              r = e.length;\n\n          for (; null === i && r > 0;) {\n            i = e[--r];\n          }\n\n          if (null === i) return;\n\n          for (var _t96 = 0; _t96 < this.state.leadingComments.length; _t96++) {\n            this.state.leadingComments[_t96].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(_t96, 1), _t96--);\n          }\n\n          var a = [];\n\n          for (var _e94 = 0; _e94 < this.state.leadingComments.length; _e94++) {\n            var _i59 = this.state.leadingComments[_e94];\n            _i59.end < t.end ? (a.push(_i59), s || (this.state.leadingComments.splice(_e94, 1), _e94--)) : (void 0 === t.trailingComments && (t.trailingComments = []), t.trailingComments.push(_i59));\n          }\n\n          s && (this.state.leadingComments = []), a.length > 0 ? i.trailingComments = a : void 0 !== i.trailingComments && (i.trailingComments = []);\n        }\n      }, {\n        key: "processComment",\n        value: function processComment(t) {\n          if ("Program" === t.type && t.body.length > 0) return;\n          var e = this.state.commentStack;\n          var s, i, r, a, n;\n          if (this.state.trailingComments.length > 0) this.state.trailingComments[0].start >= t.end ? (r = this.state.trailingComments, this.state.trailingComments = []) : this.state.trailingComments.length = 0;else if (e.length > 0) {\n            var _s63 = m(e);\n\n            _s63.trailingComments && _s63.trailingComments[0].start >= t.end && (r = _s63.trailingComments, delete _s63.trailingComments);\n          }\n\n          for (e.length > 0 && m(e).start >= t.start && (s = e.pop()); e.length > 0 && m(e).start >= t.start;) {\n            i = e.pop();\n          }\n\n          if (!i && s && (i = s), s) switch (t.type) {\n            case "ObjectExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.properties);\n              break;\n\n            case "ObjectPattern":\n              this.adjustCommentsAfterTrailingComma(t, t.properties, !0);\n              break;\n\n            case "CallExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.arguments);\n              break;\n\n            case "ArrayExpression":\n              this.adjustCommentsAfterTrailingComma(t, t.elements);\n              break;\n\n            case "ArrayPattern":\n              this.adjustCommentsAfterTrailingComma(t, t.elements, !0);\n          } else this.state.commentPreviousNode && ("ImportSpecifier" === this.state.commentPreviousNode.type && "ImportSpecifier" !== t.type || "ExportSpecifier" === this.state.commentPreviousNode.type && "ExportSpecifier" !== t.type) && this.adjustCommentsAfterTrailingComma(t, [this.state.commentPreviousNode]);\n\n          if (i) {\n            if (i.leadingComments) if (i !== t && i.leadingComments.length > 0 && m(i.leadingComments).end <= t.start) t.leadingComments = i.leadingComments, delete i.leadingComments;else for (a = i.leadingComments.length - 2; a >= 0; --a) {\n              if (i.leadingComments[a].end <= t.start) {\n                t.leadingComments = i.leadingComments.splice(0, a + 1);\n                break;\n              }\n            }\n          } else if (this.state.leadingComments.length > 0) if (m(this.state.leadingComments).end <= t.start) {\n            if (this.state.commentPreviousNode) for (n = 0; n < this.state.leadingComments.length; n++) {\n              this.state.leadingComments[n].end < this.state.commentPreviousNode.end && (this.state.leadingComments.splice(n, 1), n--);\n            }\n            this.state.leadingComments.length > 0 && (t.leadingComments = this.state.leadingComments, this.state.leadingComments = []);\n          } else {\n            for (a = 0; a < this.state.leadingComments.length && !(this.state.leadingComments[a].end > t.start); a++) {\n              ;\n            }\n\n            var _e95 = this.state.leadingComments.slice(0, a);\n\n            _e95.length && (t.leadingComments = _e95), r = this.state.leadingComments.slice(a), 0 === r.length && (r = null);\n          }\n\n          this.state.commentPreviousNode = t, r && (r.length && r[0].start >= t.start && m(r).end <= t.end ? t.innerComments = r : t.trailingComments = r), e.push(t);\n        }\n      }]);\n      return _class14;\n    }( /*#__PURE__*/function () {\n      function _class15() {\n        (0, _classCallCheck2.default)(this, _class15);\n        this.sawUnambiguousESM = !1, this.ambiguousScriptDifferentAst = !1;\n      }\n\n      (0, _createClass2.default)(_class15, [{\n        key: "hasPlugin",\n        value: function hasPlugin(t) {\n          return this.plugins.has(t);\n        }\n      }, {\n        key: "getPluginOption",\n        value: function getPluginOption(t, e) {\n          if (this.hasPlugin(t)) return this.plugins.get(t)[e];\n        }\n      }]);\n      return _class15;\n    }())))))))));\n\n    function wt(t, e) {\n      var s = At;\n      return t && t.plugins && (!function (t) {\n        if (at(t, "decorators")) {\n          if (at(t, "decorators-legacy")) throw new Error("Cannot use the decorators and decorators-legacy plugin together");\n\n          var _e96 = nt(t, "decorators", "decoratorsBeforeExport");\n\n          if (null == _e96) throw new Error("The \'decorators\' plugin requires a \'decoratorsBeforeExport\' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the \'decorators-legacy\' plugin instead of \'decorators\'.");\n          if ("boolean" != typeof _e96) throw new Error("\'decoratorsBeforeExport\' must be a boolean.");\n        }\n\n        if (at(t, "flow") && at(t, "typescript")) throw new Error("Cannot combine flow and typescript plugins.");\n        if (at(t, "placeholders") && at(t, "v8intrinsic")) throw new Error("Cannot combine placeholders and v8intrinsic plugins.");\n        if (at(t, "pipelineOperator") && !ot.includes(nt(t, "pipelineOperator", "proposal"))) throw new Error("\'pipelineOperator\' requires \'proposal\' option whose value should be one of: " + ot.map(function (t) {\n          return "\'".concat(t, "\'");\n        }).join(", "));\n        if (at(t, "recordAndTuple") && !ht.includes(nt(t, "recordAndTuple", "syntaxType"))) throw new Error("\'recordAndTuple\' requires \'syntaxType\' option whose value should be one of: " + ht.map(function (t) {\n          return "\'".concat(t, "\'");\n        }).join(", "));\n      }(t.plugins), s = function (t) {\n        var e = ct.filter(function (e) {\n          return at(t, e);\n        }),\n            s = e.join("/");\n        var i = St[s];\n\n        if (!i) {\n          i = At;\n\n          for (var _t97 = 0; _t97 < e.length; _t97++) {\n            var _s64 = e[_t97];\n            i = pt[_s64](i);\n          }\n\n          St[s] = i;\n        }\n\n        return i;\n      }(t.plugins)), new s(t, e);\n    }\n\n    var St = {};\n    e.parse = function (t, e) {\n      if (!e || "unambiguous" !== e.sourceType) return wt(e, t).parse();\n      e = Object.assign({}, e);\n\n      try {\n        e.sourceType = "module";\n\n        var _s65 = wt(e, t),\n            _i60 = _s65.parse();\n\n        if (_s65.sawUnambiguousESM) return _i60;\n        if (_s65.ambiguousScriptDifferentAst) try {\n          return e.sourceType = "script", wt(e, t).parse();\n        } catch (t) {} else _i60.program.sourceType = "script";\n        return _i60;\n      } catch (s) {\n        try {\n          return e.sourceType = "script", wt(e, t).parse();\n        } catch (t) {}\n\n        throw s;\n      }\n    }, e.parseExpression = function (t, e) {\n      var s = wt(e, t);\n      return s.options.strictMode && (s.state.strict = !0), s.getExpression();\n    }, e.tokTypes = n;\n  });\n\n  s(Kt);\n  Kt.parse, Kt.parseExpression, Kt.tokTypes;\n  var Jt = c.hasPragma;\n\n  function Xt() {\n    var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return {\n      sourceType: "module",\n      allowAwaitOutsideFunction: !0,\n      allowImportExportEverywhere: !0,\n      allowReturnOutsideFunction: !0,\n      allowSuperOutsideMethod: !0,\n      allowUndeclaredExports: !0,\n      errorRecovery: !0,\n      createParenthesizedExpressions: !0,\n      plugins: ["doExpressions", "objectRestSpread", "classProperties", "exportDefaultFrom", "exportNamespaceFrom", "asyncGenerators", "functionBind", "functionSent", "dynamicImport", "numericSeparator", "importMeta", "optionalCatchBinding", "optionalChaining", "classPrivateProperties", ["pipelineOperator", {\n        proposal: "minimal"\n      }], "nullishCoalescingOperator", "bigInt", "throwExpressions", "logicalAssignment", "classPrivateMethods", "v8intrinsic", "partialApplication", ["decorators", {\n        decoratorsBeforeExport: !1\n      }]].concat((0, _toConsumableArray2.default)(t))\n    };\n  }\n\n  function Gt(t) {\n    for (var _len7 = arguments.length, s = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      s[_key7 - 1] = arguments[_key7];\n    }\n\n    return function (i, r, a) {\n      var n = Kt;\n      var o;\n\n      try {\n        o = function (t, e) {\n          var s;\n\n          for (var _i61 = 0; _i61 < e.length; _i61++) {\n            try {\n              return t(e[_i61]);\n            } catch (t) {\n              s || (s = t);\n            }\n          }\n\n          throw s;\n        }(function (e) {\n          return n[t](i, e);\n        }, s.map(Xt));\n      } catch (t) {\n        throw e(t.message.replace(/ \\(.*\\)/, ""), {\n          start: {\n            line: t.loc.line,\n            column: t.loc.column + 1\n          }\n        });\n      }\n\n      return delete o.tokens, Wt(o, Object.assign({}, a, {\n        originalText: i\n      }));\n    };\n  }\n\n  var Qt = Gt("parse", ["jsx", "flow"]),\n      Yt = Gt("parse", ["jsx", ["flow", {\n    all: !0,\n    enums: !0\n  }]]),\n      $t = Gt("parse", ["jsx", "typescript"], ["typescript"]),\n      Zt = Gt("parseExpression", ["jsx"]);\n\n  function te(t, s) {\n    switch (t.type) {\n      case "ArrayExpression":\n        return t.elements.forEach(i);\n\n      case "ObjectExpression":\n        return t.properties.forEach(i);\n\n      case "ObjectProperty":\n        if (t.computed) throw r("computed");\n        if (t.shorthand) throw r("shorthand");\n        return [t.key, t.value].forEach(i);\n\n      case "UnaryExpression":\n        switch (t.operator) {\n          case "+":\n          case "-":\n            return i(t.argument);\n\n          default:\n            throw r("operator");\n        }\n\n      case "Identifier":\n        if (s && "ObjectProperty" === s.type && s.key === t) return;\n        throw r();\n\n      case "NullLiteral":\n      case "BooleanLiteral":\n      case "NumericLiteral":\n      case "StringLiteral":\n        return;\n\n      default:\n        throw r();\n    }\n\n    function i(e) {\n      return te(e, t);\n    }\n\n    function r(s) {\n      var i = s ? "".concat(t.type, " with ").concat(s, "=").concat(JSON.stringify(t[s])) : t.type;\n      return e("".concat(i, " is not allowed in JSON."), {\n        start: {\n          line: t.loc.start.line,\n          column: t.loc.start.column + 1\n        }\n      });\n    }\n  }\n\n  var ee = Object.assign({\n    parse: Qt,\n    astFormat: "estree",\n    hasPragma: Jt\n  }, m),\n      se = Object.assign({}, ee, {\n    parse: Yt\n  }),\n      ie = Object.assign({}, ee, {\n    parse: $t\n  }),\n      re = Object.assign({}, ee, {\n    parse: Zt\n  });\n  var ae = {\n    parsers: {\n      babel: ee,\n      "babel-flow": se,\n      "babel-ts": ie,\n      json: Object.assign({}, re, {\n        hasPragma: function hasPragma() {\n          return !0;\n        }\n      }),\n      json5: re,\n      "json-stringify": Object.assign({\n        parse: function parse(t, e, s) {\n          var i = Zt(t, e, s);\n          return i.comments.forEach(te), te(i), i;\n        },\n        astFormat: "estree-json"\n      }, m),\n      __js_expression: re,\n      __vue_expression: re,\n      __vue_event_binding: ee\n    }\n  },\n      ne = ae.parsers;\n  t.default = ae, t.parsers = ne, Object.defineProperty(t, "__esModule", {\n    value: !0\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/prettier/parser-babel.js?')},"./node_modules/prettier/standalone.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _interopRequireDefault2=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");var _toArray2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/toArray.js"));var _get3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/get.js"));var _toConsumableArray3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/toConsumableArray.js"));var _defineProperty2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/defineProperty.js"));var _slicedToArray2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/slicedToArray.js"));var _inherits2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/inherits.js"));var _possibleConstructorReturn2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"));var _getPrototypeOf2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/getPrototypeOf.js"));var _wrapNativeSuper2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/wrapNativeSuper.js"));var _classCallCheck2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/classCallCheck.js"));var _createClass2=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/createClass.js"));var _typeof3=_interopRequireDefault2(__webpack_require__("./node_modules/@babel/runtime/helpers/typeof.js"));function _createForOfIteratorHelper(o){if(typeof Symbol==="undefined"||o[Symbol.iterator]==null){if(Array.isArray(o)||(o=_unsupportedIterableToArray(o))){var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e){throw _e;},f:F};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}var it,normalCompletion=true,didErr=false,err;return{s:function s(){it=o[Symbol.iterator]();},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e2){didErr=true;err=_e2;},f:function f(){try{if(!normalCompletion&&it.return!=null)it.return();}finally{if(didErr)throw err;}}};}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _createSuper(Derived){return function(){var Super=(0,_getPrototypeOf2.default)(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=(0,_getPrototypeOf2.default)(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return(0,_possibleConstructorReturn2.default)(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}(function(global,factory){( false?undefined:(0,_typeof3.default)(exports))===\'object\'&&typeof module!==\'undefined\'?module.exports=factory(): true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):(undefined);})(void 0,function(){\'use strict\';var name="prettier";var version="2.0.4";var description="Prettier is an opinionated code formatter";var bin="./bin/prettier.js";var repository="prettier/prettier";var homepage="https://prettier.io";var author="James Long";var license="MIT";var main="./index.js";var engines={node:">=10.13.0"};var dependencies={"@angular/compiler":"9.0.5","@babel/code-frame":"7.8.0","@babel/parser":"7.9.4","@glimmer/syntax":"0.50.0","@iarna/toml":"2.2.3","@typescript-eslint/typescript-estree":"2.26.0","angular-estree-parser":"1.3.0","angular-html-parser":"1.4.0",camelcase:"5.3.1",chalk:"4.0.0","ci-info":"watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540","cjk-regex":"2.0.0",cosmiconfig:"6.0.0",dashify:"2.0.0",dedent:"0.7.0",diff:"4.0.2",editorconfig:"0.15.3","editorconfig-to-prettier":"0.1.1","escape-string-regexp":"2.0.0",esutils:"2.0.3","fast-glob":"3.2.2","find-parent-dir":"0.3.0","find-project-root":"1.1.1","flow-parser":"0.122.0","get-stream":"5.1.0",globby:"11.0.0",graphql:"15.0.0","html-element-attributes":"2.2.1","html-styles":"1.0.0","html-tag-names":"1.1.5",ignore:"4.0.6","jest-docblock":"25.2.6","json-stable-stringify":"1.0.1",leven:"3.1.0","lines-and-columns":"1.1.6","linguist-languages":"7.9.0",lodash:"4.17.15",mem:"6.0.1",minimatch:"3.0.4",minimist:"1.2.5","n-readlines":"1.0.0","please-upgrade-node":"3.2.0","postcss-less":"3.1.4","postcss-media-query-parser":"0.2.3","postcss-scss":"2.0.0","postcss-selector-parser":"2.2.3","postcss-values-parser":"2.0.1","regexp-util":"1.2.2","remark-math":"1.0.6","remark-parse":"5.0.0",semver:"7.1.3",srcset:"2.0.1","string-width":"4.2.0",typescript:"3.8.3","unicode-regex":"3.0.0",unified:"9.0.0",vnopts:"1.0.2","yaml-unist-parser":"1.1.1"};var devDependencies={"@babel/core":"7.9.0","@babel/preset-env":"7.9.0","@rollup/plugin-alias":"3.0.1","@rollup/plugin-commonjs":"11.0.2","@rollup/plugin-json":"4.0.2","@rollup/plugin-node-resolve":"7.1.1","@rollup/plugin-replace":"2.3.1","babel-loader":"8.1.0",benchmark:"2.1.4","builtin-modules":"3.1.0",codecov:"3.6.5","cross-env":"7.0.2",cspell:"4.0.55",eslint:"6.8.0","eslint-config-prettier":"6.10.1","eslint-formatter-friendly":"7.0.0","eslint-plugin-import":"2.20.2","eslint-plugin-prettier":"3.1.2","eslint-plugin-react":"7.19.0","eslint-plugin-unicorn":"18.0.1",execa:"4.0.0",jest:"25.2.7","jest-snapshot-serializer-ansi":"1.0.0","jest-snapshot-serializer-raw":"1.1.0","jest-watch-typeahead":"0.5.0",prettier:"2.0.3",rimraf:"3.0.2",rollup:"2.3.2","rollup-plugin-babel":"4.4.0","rollup-plugin-node-globals":"1.4.0","rollup-plugin-terser":"5.3.0",shelljs:"0.8.3","snapshot-diff":"0.7.0","strip-ansi":"6.0.0","synchronous-promise":"2.0.10",tempy:"0.5.0","terser-webpack-plugin":"2.3.5",webpack:"4.42.1"};var scripts={prepublishOnly:"echo \\"Error: must publish from dist/\\" && exit 1","prepare-release":"yarn && yarn build && yarn test:dist",test:"jest","test:dist":"node ./scripts/test-dist.js","test:integration":"jest tests_integration","perf:repeat":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:repeat-inspect":"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","perf:benchmark":"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null","lint:typecheck":"tsc","lint:eslint":"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly","lint:changelog":"node ./scripts/lint-changelog.js","lint:prettier":"prettier \\"**/*.{md,json,yml,html,css}\\" --check","lint:dist":"eslint --no-eslintrc --no-ignore --env=es6,browser --parser-options=ecmaVersion:2016 \\"dist/!(bin-prettier|index|third-party).js\\"","lint:spellcheck":"cspell {bin,scripts,src,website}/**/*.js {docs,website/blog,changelog_unreleased}/**/*.md","lint:deps":"node ./scripts/check-deps.js",build:"node --max-old-space-size=3072 ./scripts/build/build.js","build-docs":"node ./scripts/build-docs.js"};var _package={name:name,version:version,description:description,bin:bin,repository:repository,homepage:homepage,author:author,license:license,main:main,engines:engines,dependencies:dependencies,devDependencies:devDependencies,scripts:scripts};var _package$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name,version:version,description:description,bin:bin,repository:repository,homepage:homepage,author:author,license:license,main:main,engines:engines,dependencies:dependencies,devDependencies:devDependencies,scripts:scripts,\'default\':_package});function Diff(){}Diff.prototype={diff:function diff(oldString,newString){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var callback=options.callback;if(typeof options===\'function\'){callback=options;options={};}this.options=options;var self=this;function done(value){if(callback){setTimeout(function(){callback(undefined,value);},0);return true;}else{return value;}}// Allow subclasses to massage the input prior to running\noldString=this.castInput(oldString);newString=this.castInput(newString);oldString=this.removeEmpty(this.tokenize(oldString));newString=this.removeEmpty(this.tokenize(newString));var newLen=newString.length,oldLen=oldString.length;var editLength=1;var maxEditLength=newLen+oldLen;var bestPath=[{newPos:-1,components:[]}];// Seed editLength = 0, i.e. the content starts with the same values\nvar oldPos=this.extractCommon(bestPath[0],newString,oldString,0);if(bestPath[0].newPos+1>=newLen&&oldPos+1>=oldLen){// Identity per the equality and tokenizer\nreturn done([{value:this.join(newString),count:newString.length}]);}// Main worker method. checks all permutations of a given edit length for acceptance.\nfunction execEditLength(){for(var diagonalPath=-1*editLength;diagonalPath<=editLength;diagonalPath+=2){var basePath=void 0;var addPath=bestPath[diagonalPath-1],removePath=bestPath[diagonalPath+1],_oldPos=(removePath?removePath.newPos:0)-diagonalPath;if(addPath){// No one else is going to attempt to use this value, clear it\nbestPath[diagonalPath-1]=undefined;}var canAdd=addPath&&addPath.newPos+1<newLen,canRemove=removePath&&0<=_oldPos&&_oldPos<oldLen;if(!canAdd&&!canRemove){// If this path is a terminal then prune\nbestPath[diagonalPath]=undefined;continue;}// Select the diagonal that we want to branch from. We select the prior\n// path whose position in the new string is the farthest from the origin\n// and does not pass the bounds of the diff graph\nif(!canAdd||canRemove&&addPath.newPos<removePath.newPos){basePath=clonePath(removePath);self.pushComponent(basePath.components,undefined,true);}else{basePath=addPath;// No need to clone, we\'ve pulled it from the list\nbasePath.newPos++;self.pushComponent(basePath.components,true,undefined);}_oldPos=self.extractCommon(basePath,newString,oldString,diagonalPath);// If we have hit the end of both strings, then we are done\nif(basePath.newPos+1>=newLen&&_oldPos+1>=oldLen){return done(buildValues(self,basePath.components,newString,oldString,self.useLongestToken));}else{// Otherwise track this path as a potential candidate and continue.\nbestPath[diagonalPath]=basePath;}}editLength++;}// Performs the length of edit iteration. Is a bit fugly as this has to support the\n// sync and async mode which is never fun. Loops over execEditLength until a value\n// is produced.\nif(callback){(function exec(){setTimeout(function(){// This should not happen, but we want to be safe.\n/* istanbul ignore next */if(editLength>maxEditLength){return callback();}if(!execEditLength()){exec();}},0);})();}else{while(editLength<=maxEditLength){var ret=execEditLength();if(ret){return ret;}}}},pushComponent:function pushComponent(components,added,removed){var last=components[components.length-1];if(last&&last.added===added&&last.removed===removed){// We need to clone here as the component clone operation is just\n// as shallow array clone\ncomponents[components.length-1]={count:last.count+1,added:added,removed:removed};}else{components.push({count:1,added:added,removed:removed});}},extractCommon:function extractCommon(basePath,newString,oldString,diagonalPath){var newLen=newString.length,oldLen=oldString.length,newPos=basePath.newPos,oldPos=newPos-diagonalPath,commonCount=0;while(newPos+1<newLen&&oldPos+1<oldLen&&this.equals(newString[newPos+1],oldString[oldPos+1])){newPos++;oldPos++;commonCount++;}if(commonCount){basePath.components.push({count:commonCount});}basePath.newPos=newPos;return oldPos;},equals:function equals(left,right){if(this.options.comparator){return this.options.comparator(left,right);}else{return left===right||this.options.ignoreCase&&left.toLowerCase()===right.toLowerCase();}},removeEmpty:function removeEmpty(array){var ret=[];for(var i=0;i<array.length;i++){if(array[i]){ret.push(array[i]);}}return ret;},castInput:function castInput(value){return value;},tokenize:function tokenize(value){return value.split(\'\');},join:function join(chars){return chars.join(\'\');}};function buildValues(diff,components,newString,oldString,useLongestToken){var componentPos=0,componentLen=components.length,newPos=0,oldPos=0;for(;componentPos<componentLen;componentPos++){var component=components[componentPos];if(!component.removed){if(!component.added&&useLongestToken){var value=newString.slice(newPos,newPos+component.count);value=value.map(function(value,i){var oldValue=oldString[oldPos+i];return oldValue.length>value.length?oldValue:value;});component.value=diff.join(value);}else{component.value=diff.join(newString.slice(newPos,newPos+component.count));}newPos+=component.count;// Common case\nif(!component.added){oldPos+=component.count;}}else{component.value=diff.join(oldString.slice(oldPos,oldPos+component.count));oldPos+=component.count;// Reverse add and remove so removes are output first to match common convention\n// The diffing algorithm is tied to add then remove output and this is the simplest\n// route to get the desired output with minimal overhead.\nif(componentPos&&components[componentPos-1].added){var tmp=components[componentPos-1];components[componentPos-1]=components[componentPos];components[componentPos]=tmp;}}}// Special case handle for when one terminal is ignored (i.e. whitespace).\n// For this case we merge the terminal into the prior string and drop the change.\n// This is only available for string mode.\nvar lastComponent=components[componentLen-1];if(componentLen>1&&typeof lastComponent.value===\'string\'&&(lastComponent.added||lastComponent.removed)&&diff.equals(\'\',lastComponent.value)){components[componentLen-2].value+=lastComponent.value;components.pop();}return components;}function clonePath(path){return{newPos:path.newPos,components:path.components.slice(0)};}var characterDiff=new Diff();function diffChars(oldStr,newStr,options){return characterDiff.diff(oldStr,newStr,options);}function generateOptions(options,defaults){if(typeof options===\'function\'){defaults.callback=options;}else if(options){for(var name in options){/* istanbul ignore else */if(options.hasOwnProperty(name)){defaults[name]=options[name];}}}return defaults;}//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars=/^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;var reWhitespace=/\\S/;var wordDiff=new Diff();wordDiff.equals=function(left,right){if(this.options.ignoreCase){left=left.toLowerCase();right=right.toLowerCase();}return left===right||this.options.ignoreWhitespace&&!reWhitespace.test(left)&&!reWhitespace.test(right);};wordDiff.tokenize=function(value){var tokens=value.split(/(\\s+|[()[\\]{}\'"]|\\b)/);// Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\nfor(var i=0;i<tokens.length-1;i++){// If we have an empty string in the next field and we have only word chars before and after, merge\nif(!tokens[i+1]&&tokens[i+2]&&extendedWordChars.test(tokens[i])&&extendedWordChars.test(tokens[i+2])){tokens[i]+=tokens[i+2];tokens.splice(i+1,2);i--;}}return tokens;};function diffWords(oldStr,newStr,options){options=generateOptions(options,{ignoreWhitespace:true});return wordDiff.diff(oldStr,newStr,options);}function diffWordsWithSpace(oldStr,newStr,options){return wordDiff.diff(oldStr,newStr,options);}var lineDiff=new Diff();lineDiff.tokenize=function(value){var retLines=[],linesAndNewlines=value.split(/(\\n|\\r\\n)/);// Ignore the final empty token that occurs if the string ends with a new line\nif(!linesAndNewlines[linesAndNewlines.length-1]){linesAndNewlines.pop();}// Merge the content and line separators into single tokens\nfor(var i=0;i<linesAndNewlines.length;i++){var line=linesAndNewlines[i];if(i%2&&!this.options.newlineIsToken){retLines[retLines.length-1]+=line;}else{if(this.options.ignoreWhitespace){line=line.trim();}retLines.push(line);}}return retLines;};function diffLines(oldStr,newStr,callback){return lineDiff.diff(oldStr,newStr,callback);}function diffTrimmedLines(oldStr,newStr,callback){var options=generateOptions(callback,{ignoreWhitespace:true});return lineDiff.diff(oldStr,newStr,options);}var sentenceDiff=new Diff();sentenceDiff.tokenize=function(value){return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);};function diffSentences(oldStr,newStr,callback){return sentenceDiff.diff(oldStr,newStr,callback);}var cssDiff=new Diff();cssDiff.tokenize=function(value){return value.split(/([{}:;,]|\\s+)/);};function diffCss(oldStr,newStr,callback){return cssDiff.diff(oldStr,newStr,callback);}function _typeof(obj){if(typeof Symbol==="function"&&(0,_typeof3.default)(Symbol.iterator)==="symbol"){_typeof=function _typeof(obj){return(0,_typeof3.default)(obj);};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":(0,_typeof3.default)(obj);};}return _typeof(obj);}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}var objectPrototypeToString=Object.prototype.toString;var jsonDiff=new Diff();// Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn\'t. Turns out including the dangling comma yields the nicest output:\njsonDiff.useLongestToken=true;jsonDiff.tokenize=lineDiff.tokenize;jsonDiff.castInput=function(value){var _this$options=this.options,undefinedReplacement=_this$options.undefinedReplacement,_this$options$stringi=_this$options.stringifyReplacer,stringifyReplacer=_this$options$stringi===void 0?function(k,v){return typeof v===\'undefined\'?undefinedReplacement:v;}:_this$options$stringi;return typeof value===\'string\'?value:JSON.stringify(canonicalize(value,null,null,stringifyReplacer),stringifyReplacer,\'  \');};jsonDiff.equals=function(left,right){return Diff.prototype.equals.call(jsonDiff,left.replace(/,([\\r\\n])/g,\'$1\'),right.replace(/,([\\r\\n])/g,\'$1\'));};function diffJson(oldObj,newObj,options){return jsonDiff.diff(oldObj,newObj,options);}// This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the "stack" of items being processed. Accepts an optional replacer\nfunction canonicalize(obj,stack,replacementStack,replacer,key){stack=stack||[];replacementStack=replacementStack||[];if(replacer){obj=replacer(key,obj);}var i;for(i=0;i<stack.length;i+=1){if(stack[i]===obj){return replacementStack[i];}}var canonicalizedObj;if(\'[object Array]\'===objectPrototypeToString.call(obj)){stack.push(obj);canonicalizedObj=new Array(obj.length);replacementStack.push(canonicalizedObj);for(i=0;i<obj.length;i+=1){canonicalizedObj[i]=canonicalize(obj[i],stack,replacementStack,replacer,key);}stack.pop();replacementStack.pop();return canonicalizedObj;}if(obj&&obj.toJSON){obj=obj.toJSON();}if(_typeof(obj)===\'object\'&&obj!==null){stack.push(obj);canonicalizedObj={};replacementStack.push(canonicalizedObj);var sortedKeys=[],_key;for(_key in obj){/* istanbul ignore else */if(obj.hasOwnProperty(_key)){sortedKeys.push(_key);}}sortedKeys.sort();for(i=0;i<sortedKeys.length;i+=1){_key=sortedKeys[i];canonicalizedObj[_key]=canonicalize(obj[_key],stack,replacementStack,replacer,_key);}stack.pop();replacementStack.pop();}else{canonicalizedObj=obj;}return canonicalizedObj;}var arrayDiff=new Diff();arrayDiff.tokenize=function(value){return value.slice();};arrayDiff.join=arrayDiff.removeEmpty=function(value){return value;};function diffArrays(oldArr,newArr,callback){return arrayDiff.diff(oldArr,newArr,callback);}function parsePatch(uniDiff){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var diffstr=uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],list=[],i=0;function parseIndex(){var index={};list.push(index);// Parse diff metadata\nwhile(i<diffstr.length){var line=diffstr[i];// File header found, end parsing diff metadata\nif(/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)){break;}// Diff index\nvar header=/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);if(header){index.index=header[1];}i++;}// Parse file headers if they are defined. Unified diff requires them, but\n// there\'s no technical issues to have an isolated hunk without file header\nparseFileHeader(index);parseFileHeader(index);// Parse hunks\nindex.hunks=[];while(i<diffstr.length){var _line=diffstr[i];if(/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)){break;}else if(/^@@/.test(_line)){index.hunks.push(parseHunk());}else if(_line&&options.strict){// Ignore unexpected content unless in strict mode\nthrow new Error(\'Unknown line \'+(i+1)+\' \'+JSON.stringify(_line));}else{i++;}}}// Parses the --- and +++ headers, if none are found, no lines\n// are consumed.\nfunction parseFileHeader(index){var fileHeader=/^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);if(fileHeader){var keyPrefix=fileHeader[1]===\'---\'?\'old\':\'new\';var data=fileHeader[2].split(\'\\t\',2);var fileName=data[0].replace(/\\\\\\\\/g,\'\\\\\');if(/^".*"$/.test(fileName)){fileName=fileName.substr(1,fileName.length-2);}index[keyPrefix+\'FileName\']=fileName;index[keyPrefix+\'Header\']=(data[1]||\'\').trim();i++;}}// Parses a hunk\n// This assumes that we are at the start of a hunk.\nfunction parseHunk(){var chunkHeaderIndex=i,chunkHeaderLine=diffstr[i++],chunkHeader=chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);var hunk={oldStart:+chunkHeader[1],oldLines:+chunkHeader[2]||1,newStart:+chunkHeader[3],newLines:+chunkHeader[4]||1,lines:[],linedelimiters:[]};var addCount=0,removeCount=0;for(;i<diffstr.length;i++){// Lines starting with \'---\' could be mistaken for the "remove line" operation\n// But they could be the header for the next file. Therefore prune such cases out.\nif(diffstr[i].indexOf(\'--- \')===0&&i+2<diffstr.length&&diffstr[i+1].indexOf(\'+++ \')===0&&diffstr[i+2].indexOf(\'@@\')===0){break;}var operation=diffstr[i].length==0&&i!=diffstr.length-1?\' \':diffstr[i][0];if(operation===\'+\'||operation===\'-\'||operation===\' \'||operation===\'\\\\\'){hunk.lines.push(diffstr[i]);hunk.linedelimiters.push(delimiters[i]||\'\\n\');if(operation===\'+\'){addCount++;}else if(operation===\'-\'){removeCount++;}else if(operation===\' \'){addCount++;removeCount++;}}else{break;}}// Handle the empty block count case\nif(!addCount&&hunk.newLines===1){hunk.newLines=0;}if(!removeCount&&hunk.oldLines===1){hunk.oldLines=0;}// Perform optional sanity checking\nif(options.strict){if(addCount!==hunk.newLines){throw new Error(\'Added line count did not match for hunk at line \'+(chunkHeaderIndex+1));}if(removeCount!==hunk.oldLines){throw new Error(\'Removed line count did not match for hunk at line \'+(chunkHeaderIndex+1));}}return hunk;}while(i<diffstr.length){parseIndex();}return list;}// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator(start,minLine,maxLine){var wantForward=true,backwardExhausted=false,forwardExhausted=false,localOffset=1;return function iterator(){if(wantForward&&!forwardExhausted){if(backwardExhausted){localOffset++;}else{wantForward=false;}// Check if trying to fit beyond text length, and if not, check it fits\n// after offset location (or desired location on first iteration)\nif(start+localOffset<=maxLine){return localOffset;}forwardExhausted=true;}if(!backwardExhausted){if(!forwardExhausted){wantForward=true;}// Check if trying to fit before text beginning, and if not, check it fits\n// before offset location\nif(minLine<=start-localOffset){return-localOffset++;}backwardExhausted=true;return iterator();}// We tried to fit hunk before text beginning and beyond text length, then\n// hunk can\'t fit on the text. Return undefined\n};}function applyPatch(source,uniDiff){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof uniDiff===\'string\'){uniDiff=parsePatch(uniDiff);}if(Array.isArray(uniDiff)){if(uniDiff.length>1){throw new Error(\'applyPatch only works with a single input.\');}uniDiff=uniDiff[0];}// Apply the diff to the input\nvar lines=source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),delimiters=source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],hunks=uniDiff.hunks,compareLine=options.compareLine||function(lineNumber,line,operation,patchContent){return line===patchContent;},errorCount=0,fuzzFactor=options.fuzzFactor||0,minLine=0,offset=0,removeEOFNL,addEOFNL;/**\n     * Checks if the hunk exactly fits on the provided location\n     */function hunkFits(hunk,toPos){for(var j=0;j<hunk.lines.length;j++){var line=hunk.lines[j],operation=line.length>0?line[0]:\' \',content=line.length>0?line.substr(1):line;if(operation===\' \'||operation===\'-\'){// Context sanity check\nif(!compareLine(toPos+1,lines[toPos],operation,content)){errorCount++;if(errorCount>fuzzFactor){return false;}}toPos++;}}return true;}// Search best fit offsets for each hunk based on the previous ones\nfor(var i=0;i<hunks.length;i++){var hunk=hunks[i],maxLine=lines.length-hunk.oldLines,localOffset=0,toPos=offset+hunk.oldStart-1;var iterator=distanceIterator(toPos,minLine,maxLine);for(;localOffset!==undefined;localOffset=iterator()){if(hunkFits(hunk,toPos+localOffset)){hunk.offset=offset+=localOffset;break;}}if(localOffset===undefined){return false;}// Set lower text limit to end of the current hunk, so next ones don\'t try\n// to fit over already patched text\nminLine=hunk.offset+hunk.oldStart+hunk.oldLines;}// Apply patch hunks\nvar diffOffset=0;for(var _i=0;_i<hunks.length;_i++){var _hunk=hunks[_i],_toPos=_hunk.oldStart+_hunk.offset+diffOffset-1;diffOffset+=_hunk.newLines-_hunk.oldLines;if(_toPos<0){// Creating a new file\n_toPos=0;}for(var j=0;j<_hunk.lines.length;j++){var line=_hunk.lines[j],operation=line.length>0?line[0]:\' \',content=line.length>0?line.substr(1):line,delimiter=_hunk.linedelimiters[j];if(operation===\' \'){_toPos++;}else if(operation===\'-\'){lines.splice(_toPos,1);delimiters.splice(_toPos,1);/* istanbul ignore else */}else if(operation===\'+\'){lines.splice(_toPos,0,content);delimiters.splice(_toPos,0,delimiter);_toPos++;}else if(operation===\'\\\\\'){var previousOperation=_hunk.lines[j-1]?_hunk.lines[j-1][0]:null;if(previousOperation===\'+\'){removeEOFNL=true;}else if(previousOperation===\'-\'){addEOFNL=true;}}}}// Handle EOFNL insertion/removal\nif(removeEOFNL){while(!lines[lines.length-1]){lines.pop();delimiters.pop();}}else if(addEOFNL){lines.push(\'\');delimiters.push(\'\\n\');}for(var _k=0;_k<lines.length-1;_k++){lines[_k]=lines[_k]+delimiters[_k];}return lines.join(\'\');}// Wrapper that supports multiple file patches via callbacks.\nfunction applyPatches(uniDiff,options){if(typeof uniDiff===\'string\'){uniDiff=parsePatch(uniDiff);}var currentIndex=0;function processIndex(){var index=uniDiff[currentIndex++];if(!index){return options.complete();}options.loadFile(index,function(err,data){if(err){return options.complete(err);}var updatedContent=applyPatch(data,index,options);options.patched(index,updatedContent,function(err){if(err){return options.complete(err);}processIndex();});});}processIndex();}function structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){if(!options){options={};}if(typeof options.context===\'undefined\'){options.context=4;}var diff=diffLines(oldStr,newStr,options);diff.push({value:\'\',lines:[]});// Append an empty value to make cleanup easier\nfunction contextLines(lines){return lines.map(function(entry){return\' \'+entry;});}var hunks=[];var oldRangeStart=0,newRangeStart=0,curRange=[],oldLine=1,newLine=1;var _loop=function _loop(i){var current=diff[i],lines=current.lines||current.value.replace(/\\n$/,\'\').split(\'\\n\');current.lines=lines;if(current.added||current.removed){var _curRange;// If we have previous context, start with that\nif(!oldRangeStart){var prev=diff[i-1];oldRangeStart=oldLine;newRangeStart=newLine;if(prev){curRange=options.context>0?contextLines(prev.lines.slice(-options.context)):[];oldRangeStart-=curRange.length;newRangeStart-=curRange.length;}}// Output our changes\n(_curRange=curRange).push.apply(_curRange,_toConsumableArray(lines.map(function(entry){return(current.added?\'+\':\'-\')+entry;})));// Track the updated file position\nif(current.added){newLine+=lines.length;}else{oldLine+=lines.length;}}else{// Identical context lines. Track line changes\nif(oldRangeStart){// Close out any changes that have been output (or join overlapping)\nif(lines.length<=options.context*2&&i<diff.length-2){var _curRange2;// Overlapping\n(_curRange2=curRange).push.apply(_curRange2,_toConsumableArray(contextLines(lines)));}else{var _curRange3;// end the range and output\nvar contextSize=Math.min(lines.length,options.context);(_curRange3=curRange).push.apply(_curRange3,_toConsumableArray(contextLines(lines.slice(0,contextSize))));var hunk={oldStart:oldRangeStart,oldLines:oldLine-oldRangeStart+contextSize,newStart:newRangeStart,newLines:newLine-newRangeStart+contextSize,lines:curRange};if(i>=diff.length-2&&lines.length<=options.context){// EOF is inside this hunk\nvar oldEOFNewline=/\\n$/.test(oldStr);var newEOFNewline=/\\n$/.test(newStr);var noNlBeforeAdds=lines.length==0&&curRange.length>hunk.oldLines;if(!oldEOFNewline&&noNlBeforeAdds){// special case: old has no eol and no trailing context; no-nl can end up before adds\ncurRange.splice(hunk.oldLines,0,\'\\\\ No newline at end of file\');}if(!oldEOFNewline&&!noNlBeforeAdds||!newEOFNewline){curRange.push(\'\\\\ No newline at end of file\');}}hunks.push(hunk);oldRangeStart=0;newRangeStart=0;curRange=[];}}oldLine+=lines.length;newLine+=lines.length;}};for(var i=0;i<diff.length;i++){_loop(i);}return{oldFileName:oldFileName,newFileName:newFileName,oldHeader:oldHeader,newHeader:newHeader,hunks:hunks};}function createTwoFilesPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options){var diff=structuredPatch(oldFileName,newFileName,oldStr,newStr,oldHeader,newHeader,options);var ret=[];if(oldFileName==newFileName){ret.push(\'Index: \'+oldFileName);}ret.push(\'===================================================================\');ret.push(\'--- \'+diff.oldFileName+(typeof diff.oldHeader===\'undefined\'?\'\':\'\\t\'+diff.oldHeader));ret.push(\'+++ \'+diff.newFileName+(typeof diff.newHeader===\'undefined\'?\'\':\'\\t\'+diff.newHeader));for(var i=0;i<diff.hunks.length;i++){var hunk=diff.hunks[i];ret.push(\'@@ -\'+hunk.oldStart+\',\'+hunk.oldLines+\' +\'+hunk.newStart+\',\'+hunk.newLines+\' @@\');ret.push.apply(ret,hunk.lines);}return ret.join(\'\\n\')+\'\\n\';}function createPatch(fileName,oldStr,newStr,oldHeader,newHeader,options){return createTwoFilesPatch(fileName,fileName,oldStr,newStr,oldHeader,newHeader,options);}function arrayEqual(a,b){if(a.length!==b.length){return false;}return arrayStartsWith(a,b);}function arrayStartsWith(array,start){if(start.length>array.length){return false;}for(var i=0;i<start.length;i++){if(start[i]!==array[i]){return false;}}return true;}function calcLineCount(hunk){var _calcOldNewLineCount=calcOldNewLineCount(hunk.lines),oldLines=_calcOldNewLineCount.oldLines,newLines=_calcOldNewLineCount.newLines;if(oldLines!==undefined){hunk.oldLines=oldLines;}else{delete hunk.oldLines;}if(newLines!==undefined){hunk.newLines=newLines;}else{delete hunk.newLines;}}function merge(mine,theirs,base){mine=loadPatch(mine,base);theirs=loadPatch(theirs,base);var ret={};// For index we just let it pass through as it doesn\'t have any necessary meaning.\n// Leaving sanity checks on this to the API consumer that may know more about the\n// meaning in their own context.\nif(mine.index||theirs.index){ret.index=mine.index||theirs.index;}if(mine.newFileName||theirs.newFileName){if(!fileNameChanged(mine)){// No header or no change in ours, use theirs (and ours if theirs does not exist)\nret.oldFileName=theirs.oldFileName||mine.oldFileName;ret.newFileName=theirs.newFileName||mine.newFileName;ret.oldHeader=theirs.oldHeader||mine.oldHeader;ret.newHeader=theirs.newHeader||mine.newHeader;}else if(!fileNameChanged(theirs)){// No header or no change in theirs, use ours\nret.oldFileName=mine.oldFileName;ret.newFileName=mine.newFileName;ret.oldHeader=mine.oldHeader;ret.newHeader=mine.newHeader;}else{// Both changed... figure it out\nret.oldFileName=selectField(ret,mine.oldFileName,theirs.oldFileName);ret.newFileName=selectField(ret,mine.newFileName,theirs.newFileName);ret.oldHeader=selectField(ret,mine.oldHeader,theirs.oldHeader);ret.newHeader=selectField(ret,mine.newHeader,theirs.newHeader);}}ret.hunks=[];var mineIndex=0,theirsIndex=0,mineOffset=0,theirsOffset=0;while(mineIndex<mine.hunks.length||theirsIndex<theirs.hunks.length){var mineCurrent=mine.hunks[mineIndex]||{oldStart:Infinity},theirsCurrent=theirs.hunks[theirsIndex]||{oldStart:Infinity};if(hunkBefore(mineCurrent,theirsCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(mineCurrent,mineOffset));mineIndex++;theirsOffset+=mineCurrent.newLines-mineCurrent.oldLines;}else if(hunkBefore(theirsCurrent,mineCurrent)){// This patch does not overlap with any of the others, yay.\nret.hunks.push(cloneHunk(theirsCurrent,theirsOffset));theirsIndex++;mineOffset+=theirsCurrent.newLines-theirsCurrent.oldLines;}else{// Overlap, merge as best we can\nvar mergedHunk={oldStart:Math.min(mineCurrent.oldStart,theirsCurrent.oldStart),oldLines:0,newStart:Math.min(mineCurrent.newStart+mineOffset,theirsCurrent.oldStart+theirsOffset),newLines:0,lines:[]};mergeLines(mergedHunk,mineCurrent.oldStart,mineCurrent.lines,theirsCurrent.oldStart,theirsCurrent.lines);theirsIndex++;mineIndex++;ret.hunks.push(mergedHunk);}}return ret;}function loadPatch(param,base){if(typeof param===\'string\'){if(/^@@/m.test(param)||/^Index:/m.test(param)){return parsePatch(param)[0];}if(!base){throw new Error(\'Must provide a base reference or pass in a patch\');}return structuredPatch(undefined,undefined,base,param);}return param;}function fileNameChanged(patch){return patch.newFileName&&patch.newFileName!==patch.oldFileName;}function selectField(index,mine,theirs){if(mine===theirs){return mine;}else{index.conflict=true;return{mine:mine,theirs:theirs};}}function hunkBefore(test,check){return test.oldStart<check.oldStart&&test.oldStart+test.oldLines<check.oldStart;}function cloneHunk(hunk,offset){return{oldStart:hunk.oldStart,oldLines:hunk.oldLines,newStart:hunk.newStart+offset,newLines:hunk.newLines,lines:hunk.lines};}function mergeLines(hunk,mineOffset,mineLines,theirOffset,theirLines){// This will generally result in a conflicted hunk, but there are cases where the context\n// is the only overlap where we can successfully merge the content here.\nvar mine={offset:mineOffset,lines:mineLines,index:0},their={offset:theirOffset,lines:theirLines,index:0};// Handle any leading content\ninsertLeading(hunk,mine,their);insertLeading(hunk,their,mine);// Now in the overlap content. Scan through and select the best changes from each.\nwhile(mine.index<mine.lines.length&&their.index<their.lines.length){var mineCurrent=mine.lines[mine.index],theirCurrent=their.lines[their.index];if((mineCurrent[0]===\'-\'||mineCurrent[0]===\'+\')&&(theirCurrent[0]===\'-\'||theirCurrent[0]===\'+\')){// Both modified ...\nmutualChange(hunk,mine,their);}else if(mineCurrent[0]===\'+\'&&theirCurrent[0]===\' \'){var _hunk$lines;// Mine inserted\n(_hunk$lines=hunk.lines).push.apply(_hunk$lines,_toConsumableArray(collectChange(mine)));}else if(theirCurrent[0]===\'+\'&&mineCurrent[0]===\' \'){var _hunk$lines2;// Theirs inserted\n(_hunk$lines2=hunk.lines).push.apply(_hunk$lines2,_toConsumableArray(collectChange(their)));}else if(mineCurrent[0]===\'-\'&&theirCurrent[0]===\' \'){// Mine removed or edited\nremoval(hunk,mine,their);}else if(theirCurrent[0]===\'-\'&&mineCurrent[0]===\' \'){// Their removed or edited\nremoval(hunk,their,mine,true);}else if(mineCurrent===theirCurrent){// Context identity\nhunk.lines.push(mineCurrent);mine.index++;their.index++;}else{// Context mismatch\nconflict(hunk,collectChange(mine),collectChange(their));}}// Now push anything that may be remaining\ninsertTrailing(hunk,mine);insertTrailing(hunk,their);calcLineCount(hunk);}function mutualChange(hunk,mine,their){var myChanges=collectChange(mine),theirChanges=collectChange(their);if(allRemoves(myChanges)&&allRemoves(theirChanges)){// Special case for remove changes that are supersets of one another\nif(arrayStartsWith(myChanges,theirChanges)&&skipRemoveSuperset(their,myChanges,myChanges.length-theirChanges.length)){var _hunk$lines3;(_hunk$lines3=hunk.lines).push.apply(_hunk$lines3,_toConsumableArray(myChanges));return;}else if(arrayStartsWith(theirChanges,myChanges)&&skipRemoveSuperset(mine,theirChanges,theirChanges.length-myChanges.length)){var _hunk$lines4;(_hunk$lines4=hunk.lines).push.apply(_hunk$lines4,_toConsumableArray(theirChanges));return;}}else if(arrayEqual(myChanges,theirChanges)){var _hunk$lines5;(_hunk$lines5=hunk.lines).push.apply(_hunk$lines5,_toConsumableArray(myChanges));return;}conflict(hunk,myChanges,theirChanges);}function removal(hunk,mine,their,swap){var myChanges=collectChange(mine),theirChanges=collectContext(their,myChanges);if(theirChanges.merged){var _hunk$lines6;(_hunk$lines6=hunk.lines).push.apply(_hunk$lines6,_toConsumableArray(theirChanges.merged));}else{conflict(hunk,swap?theirChanges:myChanges,swap?myChanges:theirChanges);}}function conflict(hunk,mine,their){hunk.conflict=true;hunk.lines.push({conflict:true,mine:mine,theirs:their});}function insertLeading(hunk,insert,their){while(insert.offset<their.offset&&insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);insert.offset++;}}function insertTrailing(hunk,insert){while(insert.index<insert.lines.length){var line=insert.lines[insert.index++];hunk.lines.push(line);}}function collectChange(state){var ret=[],operation=state.lines[state.index][0];while(state.index<state.lines.length){var line=state.lines[state.index];// Group additions that are immediately after subtractions and treat them as one "atomic" modify change.\nif(operation===\'-\'&&line[0]===\'+\'){operation=\'+\';}if(operation===line[0]){ret.push(line);state.index++;}else{break;}}return ret;}function collectContext(state,matchChanges){var changes=[],merged=[],matchIndex=0,contextChanges=false,conflicted=false;while(matchIndex<matchChanges.length&&state.index<state.lines.length){var change=state.lines[state.index],match=matchChanges[matchIndex];// Once we\'ve hit our add, then we are done\nif(match[0]===\'+\'){break;}contextChanges=contextChanges||change[0]!==\' \';merged.push(match);matchIndex++;// Consume any additions in the other block as a conflict to attempt\n// to pull in the remaining context after this\nif(change[0]===\'+\'){conflicted=true;while(change[0]===\'+\'){changes.push(change);change=state.lines[++state.index];}}if(match.substr(1)===change.substr(1)){changes.push(change);state.index++;}else{conflicted=true;}}if((matchChanges[matchIndex]||\'\')[0]===\'+\'&&contextChanges){conflicted=true;}if(conflicted){return changes;}while(matchIndex<matchChanges.length){merged.push(matchChanges[matchIndex++]);}return{merged:merged,changes:changes};}function allRemoves(changes){return changes.reduce(function(prev,change){return prev&&change[0]===\'-\';},true);}function skipRemoveSuperset(state,removeChanges,delta){for(var i=0;i<delta;i++){var changeContent=removeChanges[removeChanges.length-delta+i].substr(1);if(state.lines[state.index+i]!==\' \'+changeContent){return false;}}state.index+=delta;return true;}function calcOldNewLineCount(lines){var oldLines=0;var newLines=0;lines.forEach(function(line){if(typeof line!==\'string\'){var myCount=calcOldNewLineCount(line.mine);var theirCount=calcOldNewLineCount(line.theirs);if(oldLines!==undefined){if(myCount.oldLines===theirCount.oldLines){oldLines+=myCount.oldLines;}else{oldLines=undefined;}}if(newLines!==undefined){if(myCount.newLines===theirCount.newLines){newLines+=myCount.newLines;}else{newLines=undefined;}}}else{if(newLines!==undefined&&(line[0]===\'+\'||line[0]===\' \')){newLines++;}if(oldLines!==undefined&&(line[0]===\'-\'||line[0]===\' \')){oldLines++;}}});return{oldLines:oldLines,newLines:newLines};}// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes){var ret=[],change,operation;for(var i=0;i<changes.length;i++){change=changes[i];if(change.added){operation=1;}else if(change.removed){operation=-1;}else{operation=0;}ret.push([operation,change.value]);}return ret;}function convertChangesToXML(changes){var ret=[];for(var i=0;i<changes.length;i++){var change=changes[i];if(change.added){ret.push(\'<ins>\');}else if(change.removed){ret.push(\'<del>\');}ret.push(escapeHTML(change.value));if(change.added){ret.push(\'</ins>\');}else if(change.removed){ret.push(\'</del>\');}}return ret.join(\'\');}function escapeHTML(s){var n=s;n=n.replace(/&/g,\'&amp;\');n=n.replace(/</g,\'&lt;\');n=n.replace(/>/g,\'&gt;\');n=n.replace(/"/g,\'&quot;\');return n;}var index_es6=/*#__PURE__*/Object.freeze({__proto__:null,Diff:Diff,diffChars:diffChars,diffWords:diffWords,diffWordsWithSpace:diffWordsWithSpace,diffLines:diffLines,diffTrimmedLines:diffTrimmedLines,diffSentences:diffSentences,diffCss:diffCss,diffJson:diffJson,diffArrays:diffArrays,structuredPatch:structuredPatch,createTwoFilesPatch:createTwoFilesPatch,createPatch:createPatch,applyPatch:applyPatch,applyPatches:applyPatches,parsePatch:parsePatch,merge:merge,convertChangesToDMP:convertChangesToDMP,convertChangesToXML:convertChangesToXML,canonicalize:canonicalize});var _shim_fs={};var _shim_fs$1=/*#__PURE__*/Object.freeze({__proto__:null,\'default\':_shim_fs});var sep=/[\\\\/]/;function extname(path){var filename=basename(path);var dotIndex=filename.lastIndexOf(".");if(dotIndex===-1)return"";return filename.slice(dotIndex);}function basename(path){return path.split(sep).pop();}function isAbsolute(){return true;}var path=/*#__PURE__*/Object.freeze({__proto__:null,extname:extname,basename:basename,isAbsolute:isAbsolute});var global$1=typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!==\'undefined\'?Uint8Array:Array;var inited=false;function init(){inited=true;var code=\'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}revLookup[\'-\'.charCodeAt(0)]=62;revLookup[\'_\'.charCodeAt(0)]=63;}function toByteArray(b64){if(!inited){init();}var i,j,l,tmp,placeHolders,arr;var len=b64.length;if(len%4>0){throw new Error(\'Invalid string. Length must be a multiple of 4\');}// the number of equal signs (place holders)\n// if there are two placeholders, than the two characters before it\n// represent one byte\n// if there is only one, then the three characters before it represent 2 bytes\n// this is just a cheap hack to not do indexOf twice\nplaceHolders=b64[len-2]===\'=\'?2:b64[len-1]===\'=\'?1:0;// base64 is 4/3 + up to two characters of the original data\narr=new Arr(len*3/4-placeHolders);// if there are placeholders, only get up to the last complete 4 chars\nl=placeHolders>0?len-4:len;var L=0;for(i=0,j=0;i<l;i+=4,j+=3){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&0xFF;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&0xFF;}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2];output.push(tripletToBase64(tmp));}return output.join(\'\');}function fromByteArray(uint8){if(!inited){init();}var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar output=\'\';var parts=[];var maxChunkLength=16383;// must be multiple of 3\n// go through the array every three bytes, we\'ll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&0x3F];output+=\'==\';}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&0x3F];output+=lookup[tmp<<2&0x3F];output+=\'=\';}parts.push(output);return parts.join(\'\');}function read(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);}function write(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;}var toString={}.toString;var isArray=Array.isArray||function(arr){return toString.call(arr)==\'[object Array]\';};var INSPECT_MAX_BYTES=50;/**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Use Object implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * Due to various browser bugs, sometimes the Object implementation will be used even\n   * when the browser supports typed arrays.\n   *\n   * Note:\n   *\n   *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n   *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n   *\n   *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n   *\n   *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n   *     incorrect length in some situations.\n\n   * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n   * get the Object implementation, which is slower but behaves correctly.\n   */Buffer.TYPED_ARRAY_SUPPORT=global$1.TYPED_ARRAY_SUPPORT!==undefined?global$1.TYPED_ARRAY_SUPPORT:true;function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?0x7fffffff:0x3fffffff;}function createBuffer(that,length){if(kMaxLength()<length){throw new RangeError(\'Invalid typed array length\');}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=new Uint8Array(length);that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nif(that===null){that=new Buffer(length);}that.length=length;}return that;}/**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */function Buffer(arg,encodingOrOffset,length){if(!Buffer.TYPED_ARRAY_SUPPORT&&!(this instanceof Buffer)){return new Buffer(arg,encodingOrOffset,length);}// Common case.\nif(typeof arg===\'number\'){if(typeof encodingOrOffset===\'string\'){throw new Error(\'If encoding is specified then the first argument must be a string\');}return allocUnsafe(this,arg);}return from(this,arg,encodingOrOffset,length);}Buffer.poolSize=8192;// not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment=function(arr){arr.__proto__=Buffer.prototype;return arr;};function from(that,value,encodingOrOffset,length){if(typeof value===\'number\'){throw new TypeError(\'"value" argument must not be a number\');}if(typeof ArrayBuffer!==\'undefined\'&&value instanceof ArrayBuffer){return fromArrayBuffer(that,value,encodingOrOffset,length);}if(typeof value===\'string\'){return fromString(that,value,encodingOrOffset);}return fromObject(that,value);}/**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length);};if(Buffer.TYPED_ARRAY_SUPPORT){Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;}function assertSize(size){if(typeof size!==\'number\'){throw new TypeError(\'"size" argument must be a number\');}else if(size<0){throw new RangeError(\'"size" argument must not be negative\');}}function alloc(that,size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(that,size);}if(fill!==undefined){// Only pay attention to encoding if it\'s a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding===\'string\'?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill);}return createBuffer(that,size);}/**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/Buffer.alloc=function(size,fill,encoding){return alloc(null,size,fill,encoding);};function allocUnsafe(that,size){assertSize(size);that=createBuffer(that,size<0?0:checked(size)|0);if(!Buffer.TYPED_ARRAY_SUPPORT){for(var i=0;i<size;++i){that[i]=0;}}return that;}/**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */Buffer.allocUnsafe=function(size){return allocUnsafe(null,size);};/**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size);};function fromString(that,string,encoding){if(typeof encoding!==\'string\'||encoding===\'\'){encoding=\'utf8\';}if(!Buffer.isEncoding(encoding)){throw new TypeError(\'"encoding" must be a valid string encoding\');}var length=byteLength(string,encoding)|0;that=createBuffer(that,length);var actual=that.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// \'abxxcd\' will be treated as \'ab\')\nthat=that.slice(0,actual);}return that;}function fromArrayLike(that,array){var length=array.length<0?0:checked(array.length)|0;that=createBuffer(that,length);for(var i=0;i<length;i+=1){that[i]=array[i]&255;}return that;}function fromArrayBuffer(that,array,byteOffset,length){array.byteLength;// this throws if `array` is not a valid ArrayBuffer\nif(byteOffset<0||array.byteLength<byteOffset){throw new RangeError(\'\\\'offset\\\' is out of bounds\');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError(\'\\\'length\\\' is out of bounds\');}if(byteOffset===undefined&&length===undefined){array=new Uint8Array(array);}else if(length===undefined){array=new Uint8Array(array,byteOffset);}else{array=new Uint8Array(array,byteOffset,length);}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=array;that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nthat=fromArrayLike(that,array);}return that;}function fromObject(that,obj){if(internalIsBuffer(obj)){var len=checked(obj.length)|0;that=createBuffer(that,len);if(that.length===0){return that;}obj.copy(that,0,0,len);return that;}if(obj){if(typeof ArrayBuffer!==\'undefined\'&&obj.buffer instanceof ArrayBuffer||\'length\'in obj){if(typeof obj.length!==\'number\'||isnan(obj.length)){return createBuffer(that,0);}return fromArrayLike(that,obj);}if(obj.type===\'Buffer\'&&isArray(obj.data)){return fromArrayLike(that,obj.data);}}throw new TypeError(\'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\');}function checked(length){// Note: cannot use `length < kMaxLength()` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=kMaxLength()){throw new RangeError(\'Attempt to allocate Buffer larger than maximum \'+\'size: 0x\'+kMaxLength().toString(16)+\' bytes\');}return length|0;}Buffer.isBuffer=isBuffer;function internalIsBuffer(b){return!!(b!=null&&b._isBuffer);}Buffer.compare=function compare(a,b){if(!internalIsBuffer(a)||!internalIsBuffer(b)){throw new TypeError(\'Arguments must be Buffers\');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case\'hex\':case\'utf8\':case\'utf-8\':case\'ascii\':case\'latin1\':case\'binary\':case\'base64\':case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!isArray(list)){throw new TypeError(\'"list" argument must be an Array of Buffers\');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!internalIsBuffer(buf)){throw new TypeError(\'"list" argument must be an Array of Buffers\');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(internalIsBuffer(string)){return string.length;}if(typeof ArrayBuffer!==\'undefined\'&&typeof ArrayBuffer.isView===\'function\'&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer)){return string.byteLength;}if(typeof string!==\'string\'){string=\'\'+string;}var len=string.length;if(len===0)return 0;// Use a for loop to avoid recursion\nvar loweredCase=false;for(;;){switch(encoding){case\'ascii\':case\'latin1\':case\'binary\':return len;case\'utf8\':case\'utf-8\':case undefined:return utf8ToBytes(string).length;case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return len*2;case\'hex\':return len>>>1;case\'base64\':return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;// assume utf8\nencoding=(\'\'+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that "this.length <= MAX_UINT32" since it\'s a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){return\'\';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return\'\';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;start>>>=0;if(end<=start){return\'\';}if(!encoding)encoding=\'utf8\';while(true){switch(encoding){case\'hex\':return hexSlice(this,start,end);case\'utf8\':case\'utf-8\':return utf8Slice(this,start,end);case\'ascii\':return asciiSlice(this,start,end);case\'latin1\':case\'binary\':return latin1Slice(this,start,end);case\'base64\':return base64Slice(this,start,end);case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError(\'Unknown encoding: \'+encoding);encoding=(encoding+\'\').toLowerCase();loweredCase=true;}}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError(\'Buffer size must be a multiple of 16-bits\');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError(\'Buffer size must be a multiple of 32-bits\');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError(\'Buffer size must be a multiple of 64-bits\');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length|0;if(length===0)return\'\';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.equals=function equals(b){if(!internalIsBuffer(b))throw new TypeError(\'Argument must be a Buffer\');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str=\'\';var max=INSPECT_MAX_BYTES;if(this.length>0){str=this.toString(\'hex\',0,max).match(/.{2}/g).join(\' \');if(this.length>max)str+=\' ... \';}return\'<Buffer \'+str+\'>\';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!internalIsBuffer(target)){throw new TypeError(\'Argument must be a Buffer\');}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError(\'out of range index\');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match\nif(buffer.length===0)return-1;// Normalize byteOffset\nif(typeof byteOffset===\'string\'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.\nif(isNaN(byteOffset)){// byteOffset: it it\'s undefined, null, NaN, "foo", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val\nif(typeof val===\'string\'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(internalIsBuffer(val)){// Special case: looking for empty string/buffer always fails\nif(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val===\'number\'){val=val&0xFF;// Search for a byte value [0-255]\nif(Buffer.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf===\'function\'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError(\'val must be string, number or Buffer\');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding===\'ucs2\'||encoding===\'ucs-2\'||encoding===\'utf16le\'||encoding===\'utf-16le\'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}// must be an even number of digits\nvar strLen=string.length;if(strLen%2!==0)throw new TypeError(\'Invalid hex string\');if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)\nif(offset===undefined){encoding=\'utf8\';length=this.length;offset=0;// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset===\'string\'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){offset=offset|0;if(isFinite(length)){length=length|0;if(encoding===undefined)encoding=\'utf8\';}else{encoding=length;length=undefined;}// legacy write(string, encoding, offset, length) - remove in v0.13\n}else{throw new Error(\'Buffer.write(string, encoding, offset[, length]) is no longer supported\');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError(\'Attempt to write outside buffer bounds\');}if(!encoding)encoding=\'utf8\';var loweredCase=false;for(;;){switch(encoding){case\'hex\':return hexWrite(this,string,offset,length);case\'utf8\':case\'utf-8\':return utf8Write(this,string,offset,length);case\'ascii\':return asciiWrite(this,string,offset,length);case\'latin1\':case\'binary\':return latin1Write(this,string,offset,length);case\'base64\':// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);case\'ucs2\':case\'ucs-2\':case\'utf16le\':case\'utf-16le\':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError(\'Unknown encoding: \'+encoding);encoding=(\'\'+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:\'Buffer\',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return fromByteArray(buf);}else{return fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}// Decode in chunks to avoid "call stack size exceeded".\nvar res=\'\';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret=\'\';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret=\'\';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out=\'\';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res=\'\';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf;if(Buffer.TYPED_ARRAY_SUPPORT){newBuf=this.subarray(start,end);newBuf.__proto__=Buffer.prototype;}else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,undefined);for(var i=0;i<sliceLen;++i){newBuf[i]=this[i+start];}}return newBuf;};/*\n   * Need to make sure that buffer isn\'t trying to write out of bounds.\n   */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError(\'offset is not uint\');if(offset+ext>length)throw new RangeError(\'Trying to access beyond buffer length\');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!internalIsBuffer(buf))throw new TypeError(\'"buffer" argument must be a Buffer instance\');if(value>max||value<min)throw new RangeError(\'"value" argument is out of bounds\');if(offset+ext>buf.length)throw new RangeError(\'Index out of range\');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);this[offset]=value&0xff;return offset+1;};function objectWriteUInt16(buf,value,offset,littleEndian){if(value<0)value=0xffff+value+1;for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i){buf[offset+i]=(value&0xff<<8*(littleEndian?i:1-i))>>>(littleEndian?i:1-i)*8;}}Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};function objectWriteUInt32(buf,value,offset,littleEndian){if(value<0)value=0xffffffff+value+1;for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i){buf[offset+i]=value>>>(littleEndian?i:3-i)*8&0xff;}}Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError(\'Index out of range\');if(offset<0)throw new RangeError(\'Index out of range\');}function writeFloat(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,4);}write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,8);}write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we\'re done\nif(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions\nif(targetStart<0){throw new RangeError(\'targetStart out of bounds\');}if(start<0||start>=this.length)throw new RangeError(\'sourceStart out of bounds\');if(end<0)throw new RangeError(\'sourceEnd out of bounds\');// Are we oob?\nif(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){// descending copy from end\nfor(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else if(len<1000||!Buffer.TYPED_ARRAY_SUPPORT){// ascending copy from start\nfor(i=0;i<len;++i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);}return len;};// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:\nif(typeof val===\'string\'){if(typeof start===\'string\'){encoding=start;start=0;end=this.length;}else if(typeof end===\'string\'){encoding=end;end=this.length;}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code;}}if(encoding!==undefined&&typeof encoding!==\'string\'){throw new TypeError(\'encoding must be a string\');}if(typeof encoding===\'string\'&&!Buffer.isEncoding(encoding)){throw new TypeError(\'Unknown encoding: \'+encoding);}}else if(typeof val===\'number\'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){throw new RangeError(\'Out of range index\');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val===\'number\'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=internalIsBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString());var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS\n// ================\nvar INVALID_BASE64_RE=/[^+\\/0-9A-Za-z-_]/g;function base64clean(str){// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=stringtrim(str).replace(INVALID_BASE64_RE,\'\');// Node converts strings with length < 2 to \'\'\nif(str.length<2)return\'\';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){str=str+\'=\';}return str;}function stringtrim(str){if(str.trim)return str.trim();return str.replace(/^\\s+|\\s+$/g,\'\');}function toHex(n){if(n<16)return\'0\'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead\nif(!leadSurrogate){// no lead yet\nif(codePoint>0xDBFF){// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead\nleadSurrogate=codePoint;continue;}// 2 leads in a row\nif(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8\nif(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error(\'Invalid code point\');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node\'s code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}function isnan(val){return val!==val;// eslint-disable-line no-self-compare\n}// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it\'s missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj){return obj!=null&&(!!obj._isBuffer||isFastBuffer(obj)||isSlowBuffer(obj));}function isFastBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer===\'function\'&&obj.constructor.isBuffer(obj);}// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj){return typeof obj.readFloatLE===\'function\'&&typeof obj.slice===\'function\'&&isFastBuffer(obj.slice(0,0));}var commonjsGlobal=typeof globalThis!==\'undefined\'?globalThis:typeof window!==\'undefined\'?window:typeof global!==\'undefined\'?global:typeof self!==\'undefined\'?self:{};function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,\'default\')?x[\'default\']:x;}function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}function getCjsExportFromNamespace(n){return n&&n[\'default\']||n;}var fs=getCjsExportFromNamespace(_shim_fs$1);/**\n   * @class\n   */var LineByLine=/*#__PURE__*/function(){function LineByLine(file,options){(0,_classCallCheck2.default)(this,LineByLine);options=options||{};if(!options.readChunk)options.readChunk=1024;if(!options.newLineCharacter){options.newLineCharacter=0x0a;//linux line ending\n}else{options.newLineCharacter=options.newLineCharacter.charCodeAt(0);}if(typeof file===\'number\'){this.fd=file;}else{this.fd=fs.openSync(file,\'r\');}this.options=options;this.newLineCharacter=options.newLineCharacter;this.reset();}(0,_createClass2.default)(LineByLine,[{key:"_searchInBuffer",value:function _searchInBuffer(buffer,hexNeedle){var found=-1;for(var i=0;i<=buffer.length;i++){var b_byte=buffer[i];if(b_byte===hexNeedle){found=i;break;}}return found;}},{key:"reset",value:function reset(){this.eofReached=false;this.linesCache=[];this.fdPosition=0;}},{key:"close",value:function close(){fs.closeSync(this.fd);this.fd=null;}},{key:"_extractLines",value:function _extractLines(buffer){var line;var lines=[];var bufferPosition=0;var lastNewLineBufferPosition=0;while(true){var bufferPositionValue=buffer[bufferPosition++];if(bufferPositionValue===this.newLineCharacter){line=buffer.slice(lastNewLineBufferPosition,bufferPosition);lines.push(line);lastNewLineBufferPosition=bufferPosition;}else if(!bufferPositionValue){break;}}var leftovers=buffer.slice(lastNewLineBufferPosition,bufferPosition);if(leftovers.length){lines.push(leftovers);}return lines;}},{key:"_readChunk",value:function _readChunk(lineLeftovers){var totalBytesRead=0;var bytesRead;var buffers=[];do{var readBuffer=new Buffer(this.options.readChunk);bytesRead=fs.readSync(this.fd,readBuffer,0,this.options.readChunk,this.fdPosition);totalBytesRead=totalBytesRead+bytesRead;this.fdPosition=this.fdPosition+bytesRead;buffers.push(readBuffer);}while(bytesRead&&this._searchInBuffer(buffers[buffers.length-1],this.options.newLineCharacter)===-1);var bufferData=Buffer.concat(buffers);if(bytesRead<this.options.readChunk){this.eofReached=true;bufferData=bufferData.slice(0,totalBytesRead);}if(totalBytesRead){this.linesCache=this._extractLines(bufferData);if(lineLeftovers){this.linesCache[0]=Buffer.concat([lineLeftovers,this.linesCache[0]]);}}return totalBytesRead;}},{key:"next",value:function next(){if(!this.fd)return false;var line=false;if(this.eofReached&&this.linesCache.length===0){return line;}var bytesRead;if(!this.linesCache.length){bytesRead=this._readChunk();}if(this.linesCache.length){line=this.linesCache.shift();var lastLineCharacter=line[line.length-1];if(lastLineCharacter!==0x0a){bytesRead=this._readChunk(line);if(bytesRead){line=this.linesCache.shift();}}}if(this.eofReached&&this.linesCache.length===0){this.close();}if(line&&line[line.length-1]===this.newLineCharacter){line=line.slice(0,line.length-1);}return line;}}]);return LineByLine;}();var readlines=LineByLine;/**\n   * The inverse of `_.toPairs`; this method returns an object composed\n   * from key-value `pairs`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} pairs The key-value pairs.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * _.fromPairs([[\'a\', 1], [\'b\', 2]]);\n   * // => { \'a\': 1, \'b\': 2 }\n   */function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}var fromPairs_1=fromPairs;var ConfigError=/*#__PURE__*/function(_Error){(0,_inherits2.default)(ConfigError,_Error);var _super=_createSuper(ConfigError);function ConfigError(){(0,_classCallCheck2.default)(this,ConfigError);return _super.apply(this,arguments);}return ConfigError;}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var DebugError=/*#__PURE__*/function(_Error2){(0,_inherits2.default)(DebugError,_Error2);var _super2=_createSuper(DebugError);function DebugError(){(0,_classCallCheck2.default)(this,DebugError);return _super2.apply(this,arguments);}return DebugError;}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var UndefinedParserError=/*#__PURE__*/function(_Error3){(0,_inherits2.default)(UndefinedParserError,_Error3);var _super3=_createSuper(UndefinedParserError);function UndefinedParserError(){(0,_classCallCheck2.default)(this,UndefinedParserError);return _super3.apply(this,arguments);}return UndefinedParserError;}(/*#__PURE__*/(0,_wrapNativeSuper2.default)(Error));var errors={ConfigError:ConfigError,DebugError:DebugError,UndefinedParserError:UndefinedParserError};function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0);}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\nfunction defaultSetTimout(){throw new Error(\'setTimeout has not been defined\');}function defaultClearTimeout(){throw new Error(\'clearTimeout has not been defined\');}var cachedSetTimeout=defaultSetTimout;var cachedClearTimeout=defaultClearTimeout;if(typeof global$1.setTimeout===\'function\'){cachedSetTimeout=setTimeout;}if(typeof global$1.clearTimeout===\'function\'){cachedClearTimeout=clearTimeout;}function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations\nreturn setTimeout(fun,0);}// if setTimeout wasn\'t available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn\'t trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it\'s a version of I.E. that must have the global object for \'this\', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations\nreturn clearTimeout(marker);}// if clearTimeout wasn\'t available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn\'t  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it\'s a version of I.E. that must have the global object for \'this\', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}function nextTick(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}}// v8 likes predictible objects\nfunction Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};var title=\'browser\';var platform=\'browser\';var browser=true;var env={};var argv=[];var version$1=\'\';// empty string to avoid regexp issues\nvar versions={};var release={};var config={};function noop(){}var on=noop;var addListener=noop;var once=noop;var off=noop;var removeListener=noop;var removeAllListeners=noop;var emit=noop;function binding(name){throw new Error(\'process.binding is not supported\');}function cwd(){return\'/\';}function chdir(dir){throw new Error(\'process.chdir is not supported\');}function umask(){return 0;}// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance=global$1.performance||{};var performanceNow=performance.now||performance.mozNow||performance.msNow||performance.oNow||performance.webkitNow||function(){return new Date().getTime();};// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){var clocktime=performanceNow.call(performance)*1e-3;var seconds=Math.floor(clocktime);var nanoseconds=Math.floor(clocktime%1*1e9);if(previousTimestamp){seconds=seconds-previousTimestamp[0];nanoseconds=nanoseconds-previousTimestamp[1];if(nanoseconds<0){seconds--;nanoseconds+=1e9;}}return[seconds,nanoseconds];}var startTime=new Date();function uptime(){var currentTime=new Date();var dif=currentTime-startTime;return dif/1000;}var process={nextTick:nextTick,title:title,browser:browser,env:env,argv:argv,version:version$1,versions:versions,on:on,addListener:addListener,once:once,off:off,removeListener:removeListener,removeAllListeners:removeAllListeners,emit:emit,binding:binding,cwd:cwd,chdir:chdir,umask:umask,hrtime:hrtime,platform:platform,release:release,config:config,uptime:uptime};var debug=(0,_typeof3.default)(process)===\'object\'&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?function(){var _console;for(var _len=arguments.length,args=new Array(_len),_key2=0;_key2<_len;_key2++){args[_key2]=arguments[_key2];}return(_console=console).error.apply(_console,[\'SEMVER\'].concat(args));}:function(){};var debug_1=debug;// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nvar SEMVER_SPEC_VERSION=\'2.0.0\';var MAX_LENGTH=256;var MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||/* istanbul ignore next */9007199254740991;// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH=16;var constants={SEMVER_SPEC_VERSION:SEMVER_SPEC_VERSION,MAX_LENGTH:MAX_LENGTH,MAX_SAFE_INTEGER:MAX_SAFE_INTEGER,MAX_SAFE_COMPONENT_LENGTH:MAX_SAFE_COMPONENT_LENGTH};var re_1=createCommonjsModule(function(module,exports){var MAX_SAFE_COMPONENT_LENGTH=constants.MAX_SAFE_COMPONENT_LENGTH;exports=module.exports={};// The actual regexps go on exports.re\nvar re=exports.re=[];var src=exports.src=[];var t=exports.t={};var R=0;var createToken=function createToken(name,value,isGlobal){var index=R++;debug_1(index,value);t[name]=index;src[index]=value;re[index]=new RegExp(value,isGlobal?\'g\':undefined);};// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\ncreateToken(\'NUMERICIDENTIFIER\',\'0|[1-9]\\\\d*\');createToken(\'NUMERICIDENTIFIERLOOSE\',\'[0-9]+\');// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\ncreateToken(\'NONNUMERICIDENTIFIER\',\'\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\');// ## Main Version\n// Three dot-separated numeric identifiers.\ncreateToken(\'MAINVERSION\',"(".concat(src[t.NUMERICIDENTIFIER],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIER],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIER],")"));createToken(\'MAINVERSIONLOOSE\',"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")\\\\.")+"(".concat(src[t.NUMERICIDENTIFIERLOOSE],")"));// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\ncreateToken(\'PRERELEASEIDENTIFIER\',"(?:".concat(src[t.NUMERICIDENTIFIER],"|").concat(src[t.NONNUMERICIDENTIFIER],")"));createToken(\'PRERELEASEIDENTIFIERLOOSE\',"(?:".concat(src[t.NUMERICIDENTIFIERLOOSE],"|").concat(src[t.NONNUMERICIDENTIFIER],")"));// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\ncreateToken(\'PRERELEASE\',"(?:-(".concat(src[t.PRERELEASEIDENTIFIER],"(?:\\\\.").concat(src[t.PRERELEASEIDENTIFIER],")*))"));createToken(\'PRERELEASELOOSE\',"(?:-?(".concat(src[t.PRERELEASEIDENTIFIERLOOSE],"(?:\\\\.").concat(src[t.PRERELEASEIDENTIFIERLOOSE],")*))"));// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\ncreateToken(\'BUILDIDENTIFIER\',\'[0-9A-Za-z-]+\');// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\ncreateToken(\'BUILD\',"(?:\\\\+(".concat(src[t.BUILDIDENTIFIER],"(?:\\\\.").concat(src[t.BUILDIDENTIFIER],")*))"));// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\ncreateToken(\'FULLPLAIN\',"v?".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE],"?").concat(src[t.BUILD],"?"));createToken(\'FULL\',"^".concat(src[t.FULLPLAIN],"$"));// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken(\'LOOSEPLAIN\',"[v=\\\\s]*".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE],"?").concat(src[t.BUILD],"?"));createToken(\'LOOSE\',"^".concat(src[t.LOOSEPLAIN],"$"));createToken(\'GTLT\',\'((?:<|>)?=?)\');// Something like "2.*" or "1.2.x".\n// Note that "x.x" is a valid xRange identifer, meaning "any version"\n// Only the first item is strictly required.\ncreateToken(\'XRANGEIDENTIFIERLOOSE\',"".concat(src[t.NUMERICIDENTIFIERLOOSE],"|x|X|\\\\*"));createToken(\'XRANGEIDENTIFIER\',"".concat(src[t.NUMERICIDENTIFIER],"|x|X|\\\\*"));createToken(\'XRANGEPLAIN\',"[v=\\\\s]*(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIER],")")+"(?:".concat(src[t.PRERELEASE],")?").concat(src[t.BUILD],"?")+")?)?");createToken(\'XRANGEPLAINLOOSE\',"[v=\\\\s]*(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:\\\\.(".concat(src[t.XRANGEIDENTIFIERLOOSE],")")+"(?:".concat(src[t.PRERELEASELOOSE],")?").concat(src[t.BUILD],"?")+")?)?");createToken(\'XRANGE\',"^".concat(src[t.GTLT],"\\\\s*").concat(src[t.XRANGEPLAIN],"$"));createToken(\'XRANGELOOSE\',"^".concat(src[t.GTLT],"\\\\s*").concat(src[t.XRANGEPLAINLOOSE],"$"));// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken(\'COERCE\',"".concat(\'(^|[^\\\\d])\'+\'(\\\\d{1,\').concat(MAX_SAFE_COMPONENT_LENGTH,"})")+"(?:\\\\.(\\\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH,"}))?")+"(?:\\\\.(\\\\d{1,".concat(MAX_SAFE_COMPONENT_LENGTH,"}))?")+"(?:$|[^\\\\d])");createToken(\'COERCERTL\',src[t.COERCE],true);// Tilde ranges.\n// Meaning is "reasonably at or greater than"\ncreateToken(\'LONETILDE\',\'(?:~>?)\');createToken(\'TILDETRIM\',"(\\\\s*)".concat(src[t.LONETILDE],"\\\\s+"),true);exports.tildeTrimReplace=\'$1~\';createToken(\'TILDE\',"^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN],"$"));createToken(\'TILDELOOSE\',"^".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE],"$"));// Caret ranges.\n// Meaning is "at least and backwards compatible with"\ncreateToken(\'LONECARET\',\'(?:\\\\^)\');createToken(\'CARETTRIM\',"(\\\\s*)".concat(src[t.LONECARET],"\\\\s+"),true);exports.caretTrimReplace=\'$1^\';createToken(\'CARET\',"^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN],"$"));createToken(\'CARETLOOSE\',"^".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE],"$"));// A simple gt/lt/eq thing, or just "" to indicate "any version"\ncreateToken(\'COMPARATORLOOSE\',"^".concat(src[t.GTLT],"\\\\s*(").concat(src[t.LOOSEPLAIN],")$|^$"));createToken(\'COMPARATOR\',"^".concat(src[t.GTLT],"\\\\s*(").concat(src[t.FULLPLAIN],")$|^$"));// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken(\'COMPARATORTRIM\',"(\\\\s*)".concat(src[t.GTLT],"\\\\s*(").concat(src[t.LOOSEPLAIN],"|").concat(src[t.XRANGEPLAIN],")"),true);exports.comparatorTrimReplace=\'$1$2$3\';// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they\'ll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken(\'HYPHENRANGE\',"^\\\\s*(".concat(src[t.XRANGEPLAIN],")")+"\\\\s+-\\\\s+"+"(".concat(src[t.XRANGEPLAIN],")")+"\\\\s*$");createToken(\'HYPHENRANGELOOSE\',"^\\\\s*(".concat(src[t.XRANGEPLAINLOOSE],")")+"\\\\s+-\\\\s+"+"(".concat(src[t.XRANGEPLAINLOOSE],")")+"\\\\s*$");// Star ranges basically just allow anything at all.\ncreateToken(\'STAR\',\'(<|>)?=?\\\\s*\\\\*\');});var re_2=re_1.re;var re_3=re_1.src;var re_4=re_1.t;var re_5=re_1.tildeTrimReplace;var re_6=re_1.caretTrimReplace;var re_7=re_1.comparatorTrimReplace;var numeric=/^[0-9]+$/;var compareIdentifiers=function compareIdentifiers(a,b){var anum=numeric.test(a);var bnum=numeric.test(b);if(anum&&bnum){a=+a;b=+b;}return a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1;};var rcompareIdentifiers=function rcompareIdentifiers(a,b){return compareIdentifiers(b,a);};var identifiers={compareIdentifiers:compareIdentifiers,rcompareIdentifiers:rcompareIdentifiers};var MAX_LENGTH$1=constants.MAX_LENGTH,MAX_SAFE_INTEGER$1=constants.MAX_SAFE_INTEGER;var re=re_1.re,t=re_1.t;var compareIdentifiers$1=identifiers.compareIdentifiers;var SemVer=/*#__PURE__*/function(){function SemVer(version,options){(0,_classCallCheck2.default)(this,SemVer);if(!options||(0,_typeof3.default)(options)!==\'object\'){options={loose:!!options,includePrerelease:false};}if(version instanceof SemVer){if(version.loose===!!options.loose&&version.includePrerelease===!!options.includePrerelease){return version;}else{version=version.version;}}else if(typeof version!==\'string\'){throw new TypeError("Invalid Version: ".concat(version));}if(version.length>MAX_LENGTH$1){throw new TypeError("version is longer than ".concat(MAX_LENGTH$1," characters"));}debug_1(\'SemVer\',version,options);this.options=options;this.loose=!!options.loose;// this isn\'t actually relevant for versions, but keep it so that we\n// don\'t run into trouble passing this.options around.\nthis.includePrerelease=!!options.includePrerelease;var m=version.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m){throw new TypeError("Invalid Version: ".concat(version));}this.raw=version;// these are actually numbers\nthis.major=+m[1];this.minor=+m[2];this.patch=+m[3];if(this.major>MAX_SAFE_INTEGER$1||this.major<0){throw new TypeError(\'Invalid major version\');}if(this.minor>MAX_SAFE_INTEGER$1||this.minor<0){throw new TypeError(\'Invalid minor version\');}if(this.patch>MAX_SAFE_INTEGER$1||this.patch<0){throw new TypeError(\'Invalid patch version\');}// numberify any prerelease numeric ids\nif(!m[4]){this.prerelease=[];}else{this.prerelease=m[4].split(\'.\').map(function(id){if(/^[0-9]+$/.test(id)){var num=+id;if(num>=0&&num<MAX_SAFE_INTEGER$1){return num;}}return id;});}this.build=m[5]?m[5].split(\'.\'):[];this.format();}(0,_createClass2.default)(SemVer,[{key:"format",value:function format(){this.version="".concat(this.major,".").concat(this.minor,".").concat(this.patch);if(this.prerelease.length){this.version+="-".concat(this.prerelease.join(\'.\'));}return this.version;}},{key:"toString",value:function toString(){return this.version;}},{key:"compare",value:function compare(other){debug_1(\'SemVer.compare\',this.version,this.options,other);if(!(other instanceof SemVer)){if(typeof other===\'string\'&&other===this.version){return 0;}other=new SemVer(other,this.options);}if(other.version===this.version){return 0;}return this.compareMain(other)||this.comparePre(other);}},{key:"compareMain",value:function compareMain(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}return compareIdentifiers$1(this.major,other.major)||compareIdentifiers$1(this.minor,other.minor)||compareIdentifiers$1(this.patch,other.patch);}},{key:"comparePre",value:function comparePre(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}// NOT having a prerelease is > having one\nif(this.prerelease.length&&!other.prerelease.length){return-1;}else if(!this.prerelease.length&&other.prerelease.length){return 1;}else if(!this.prerelease.length&&!other.prerelease.length){return 0;}var i=0;do{var _a2=this.prerelease[i];var b=other.prerelease[i];debug_1(\'prerelease compare\',i,_a2,b);if(_a2===undefined&&b===undefined){return 0;}else if(b===undefined){return 1;}else if(_a2===undefined){return-1;}else if(_a2===b){continue;}else{return compareIdentifiers$1(_a2,b);}}while(++i);}},{key:"compareBuild",value:function compareBuild(other){if(!(other instanceof SemVer)){other=new SemVer(other,this.options);}var i=0;do{var _a3=this.build[i];var b=other.build[i];debug_1(\'prerelease compare\',i,_a3,b);if(_a3===undefined&&b===undefined){return 0;}else if(b===undefined){return 1;}else if(_a3===undefined){return-1;}else if(_a3===b){continue;}else{return compareIdentifiers$1(_a3,b);}}while(++i);}// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n},{key:"inc",value:function inc(release,identifier){switch(release){case\'premajor\':this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc(\'pre\',identifier);break;case\'preminor\':this.prerelease.length=0;this.patch=0;this.minor++;this.inc(\'pre\',identifier);break;case\'prepatch\':// If this is already a prerelease, it will bump to the next version\n// drop any prereleases that might already exist, since they are not\n// relevant at this point.\nthis.prerelease.length=0;this.inc(\'patch\',identifier);this.inc(\'pre\',identifier);break;// If the input is a non-prerelease version, this acts the same as\n// prepatch.\ncase\'prerelease\':if(this.prerelease.length===0){this.inc(\'patch\',identifier);}this.inc(\'pre\',identifier);break;case\'major\':// If this is a pre-major version, bump up to the same major version.\n// Otherwise increment major.\n// 1.0.0-5 bumps to 1.0.0\n// 1.1.0 bumps to 2.0.0\nif(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++;}this.minor=0;this.patch=0;this.prerelease=[];break;case\'minor\':// If this is a pre-minor version, bump up to the same minor version.\n// Otherwise increment minor.\n// 1.2.0-5 bumps to 1.2.0\n// 1.2.1 bumps to 1.3.0\nif(this.patch!==0||this.prerelease.length===0){this.minor++;}this.patch=0;this.prerelease=[];break;case\'patch\':// If this is not a pre-release version, it will increment the patch.\n// If it is a pre-release it will bump up to the same patch version.\n// 1.2.0-5 patches to 1.2.0\n// 1.2.0 patches to 1.2.1\nif(this.prerelease.length===0){this.patch++;}this.prerelease=[];break;// This probably shouldn\'t be used publicly.\n// 1.0.0 \'pre\' would become 1.0.0-0 which is the wrong direction.\ncase\'pre\':if(this.prerelease.length===0){this.prerelease=[0];}else{var i=this.prerelease.length;while(--i>=0){if(typeof this.prerelease[i]===\'number\'){this.prerelease[i]++;i=-2;}}if(i===-1){// didn\'t increment anything\nthis.prerelease.push(0);}}if(identifier){// 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n// 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\nif(this.prerelease[0]===identifier){if(isNaN(this.prerelease[1])){this.prerelease=[identifier,0];}}else{this.prerelease=[identifier,0];}}break;default:throw new Error("invalid increment argument: ".concat(release));}this.format();this.raw=this.version;return this;}}]);return SemVer;}();var semver=SemVer;var compare=function compare(a,b,loose){return new semver(a,loose).compare(new semver(b,loose));};var compare_1=compare;var lt=function lt(a,b,loose){return compare_1(a,b,loose)<0;};var lt_1=lt;var gte=function gte(a,b,loose){return compare_1(a,b,loose)>=0;};var gte_1=gte;var arrayify=function arrayify(object,keyName){return Object.entries(object).map(function(_ref){var _ref2=(0,_slicedToArray2.default)(_ref,2),key=_ref2[0],value=_ref2[1];return Object.assign((0,_defineProperty2.default)({},keyName,key),value);});};var dedent_1=createCommonjsModule(function(module){function dedent(strings){var raw=void 0;if(typeof strings==="string"){// dedent can be used as a plain function\nraw=[strings];}else{raw=strings.raw;}// first, perform interpolation\nvar result="";for(var i=0;i<raw.length;i++){result+=raw[i].// join lines when there is a suppressed newline\nreplace(/\\\\\\n[ \\t]*/g,"").// handle escaped backticks\nreplace(/\\\\`/g,"`");if(i<(arguments.length<=1?0:arguments.length-1)){result+=arguments.length<=i+1?undefined:arguments[i+1];}}// now strip indentation\nvar lines=result.split("\\n");var mindent=null;lines.forEach(function(l){var m=l.match(/^(\\s+)\\S+/);if(m){var indent=m[1].length;if(!mindent){// this is the first indented line\nmindent=indent;}else{mindent=Math.min(mindent,indent);}}});if(mindent!==null){result=lines.map(function(l){return l[0]===" "?l.slice(mindent):l;}).join("\\n");}// dedent eats leading and trailing whitespace too\nresult=result.trim();// handle escaped newlines at the end to ensure they don\'t get stripped too\nreturn result.replace(/\\\\n/g,"\\n");}{module.exports=dedent;}});function _templateObject6(){var data=_taggedTemplateLiteral(["\\n      Require either \'@prettier\' or \'@format\' to be present in the file\'s first docblock comment\\n      in order for it to be formatted.\\n    "]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral(["\\n      Format code starting at a given character offset.\\n      The range will extend backwards to the start of the first line containing the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    "]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral(["\\n      Format code ending at a given character offset (exclusive).\\n      The range will extend forwards to the end of the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    "]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral(["\\n      Custom directory that contains prettier plugins in node_modules subdirectory.\\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\\n      Multiple values are accepted.\\n    "]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral(["\\n          Maintain existing\\n          (mixed values within one file are normalised by looking at what\'s used after the first line)\\n        "]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral(["\\n      Print (to stderr) where a cursor at the given position would move to after formatting.\\n      This option cannot be used with --range-start and --range-end.\\n    "]);_templateObject=function _templateObject(){return data;};return data;}var CATEGORY_CONFIG="Config";var CATEGORY_EDITOR="Editor";var CATEGORY_FORMAT="Format";var CATEGORY_OTHER="Other";var CATEGORY_OUTPUT="Output";var CATEGORY_GLOBAL="Global";var CATEGORY_SPECIAL="Special";/**\n   * @typedef {Object} OptionInfo\n   * @property {string} [since] - available since version\n   * @property {string} category\n   * @property {\'int\' | \'boolean\' | \'choice\' | \'path\'} type\n   * @property {boolean} [array] - indicate it\'s an array of the specified type\n   * @property {OptionValueInfo} [default]\n   * @property {OptionRangeInfo} [range] - for type int\n   * @property {string} description\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionRedirectInfo} [redirect] - redirect deprecated option\n   * @property {(value: any) => boolean} [exception]\n   * @property {OptionChoiceInfo[]} [choices] - for type choice\n   * @property {string} [cliName]\n   * @property {string} [cliCategory]\n   * @property {string} [cliDescription]\n   *\n   * @typedef {number | boolean | string} OptionValue\n   * @typedef {OptionValue | [{ value: OptionValue[] }] | Array<{ since: string, value: OptionValue}>} OptionValueInfo\n   *\n   * @typedef {Object} OptionRedirectInfo\n   * @property {string} option\n   * @property {OptionValue} value\n   *\n   * @typedef {Object} OptionRangeInfo\n   * @property {number} start - recommended range start\n   * @property {number} end - recommended range end\n   * @property {number} step - recommended range step\n   *\n   * @typedef {Object} OptionChoiceInfo\n   * @property {boolean | string} value - boolean for the option that is originally boolean type\n   * @property {string} description\n   * @property {string} [since] - undefined if available since the first version of the option\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionValueInfo} [redirect] - redirect deprecated value\n   */ /** @type {{ [name: string]: OptionInfo }} */var options={cursorOffset:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:-1,range:{start:-1,end:Infinity,step:1},description:dedent_1(_templateObject()),cliCategory:CATEGORY_EDITOR},endOfLine:{since:"1.15.0",category:CATEGORY_GLOBAL,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\\\r\\\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\\\r), used very rarely"},{value:"auto",description:dedent_1(_templateObject2())}]},filepath:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:CATEGORY_OTHER,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:CATEGORY_SPECIAL,type:"boolean",default:false,description:"Insert @format pragma into file\'s first docblock comment.",cliCategory:CATEGORY_OTHER},parser:{since:"0.0.10",category:CATEGORY_GLOBAL,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:undefined}],description:"Which parser to use.",exception:function exception(value){return typeof value==="string"||typeof value==="function";},choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:null,description:"Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:true,default:[{value:[]}],category:CATEGORY_GLOBAL,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:function exception(value){return typeof value==="string"||(0,_typeof3.default)(value)==="object";},cliName:"plugin",cliCategory:CATEGORY_CONFIG},pluginSearchDirs:{since:"1.13.0",type:"path",array:true,default:[{value:[]}],category:CATEGORY_GLOBAL,description:dedent_1(_templateObject3()),exception:function exception(value){return typeof value==="string"||(0,_typeof3.default)(value)==="object";},cliName:"plugin-search-dir",cliCategory:CATEGORY_CONFIG},printWidth:{since:"0.0.0",category:CATEGORY_GLOBAL,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Infinity,step:1}},rangeEnd:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:Infinity,range:{start:0,end:Infinity,step:1},description:dedent_1(_templateObject4()),cliCategory:CATEGORY_EDITOR},rangeStart:{since:"1.4.0",category:CATEGORY_SPECIAL,type:"int",default:0,range:{start:0,end:Infinity,step:1},description:dedent_1(_templateObject5()),cliCategory:CATEGORY_EDITOR},requirePragma:{since:"1.7.0",category:CATEGORY_SPECIAL,type:"boolean",default:false,description:dedent_1(_templateObject6()),cliCategory:CATEGORY_OTHER},tabWidth:{type:"int",category:CATEGORY_GLOBAL,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Infinity,step:1}},useTabs:{since:"1.0.0",category:CATEGORY_GLOBAL,type:"boolean",default:false,description:"Indent with tabs instead of spaces."}};var coreOptions={CATEGORY_CONFIG:CATEGORY_CONFIG,CATEGORY_EDITOR:CATEGORY_EDITOR,CATEGORY_FORMAT:CATEGORY_FORMAT,CATEGORY_OTHER:CATEGORY_OTHER,CATEGORY_OUTPUT:CATEGORY_OUTPUT,CATEGORY_GLOBAL:CATEGORY_GLOBAL,CATEGORY_SPECIAL:CATEGORY_SPECIAL,options:options};var require$$0=getCjsExportFromNamespace(_package$1);var semver$1={compare:compare_1,lt:lt_1,gte:gte_1};var currentVersion=require$$0.version;var coreOptions$1=coreOptions.options;/**\n   * Strings in `plugins` and `pluginSearchDirs` are handled by a wrapped version\n   * of this function created by `withPlugins`. Don\'t pass them here directly.\n   * @param {object} param0\n   * @param {(string | object)[]=} param0.plugins Strings are resolved by `withPlugins`.\n   * @param {string[]=} param0.pluginSearchDirs Added by `withPlugins`.\n   * @param {boolean=} param0.showUnreleased\n   * @param {boolean=} param0.showDeprecated\n   * @param {boolean=} param0.showInternal\n   */function getSupportInfo(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref3$plugins=_ref3.plugins,plugins=_ref3$plugins===void 0?[]:_ref3$plugins,_ref3$showUnreleased=_ref3.showUnreleased,showUnreleased=_ref3$showUnreleased===void 0?false:_ref3$showUnreleased,_ref3$showDeprecated=_ref3.showDeprecated,showDeprecated=_ref3$showDeprecated===void 0?false:_ref3$showDeprecated,_ref3$showInternal=_ref3.showInternal,showInternal=_ref3$showInternal===void 0?false:_ref3$showInternal;// pre-release version is smaller than the normal version in semver,\n// we need to treat it as the normal one so as to test new features.\nvar version=currentVersion.split("-",1)[0];var options=arrayify(Object.assign.apply(Object,[{}].concat((0,_toConsumableArray3.default)(plugins.map(function(_ref4){var options=_ref4.options;return options;})),[coreOptions$1])),"name").filter(function(option){return filterSince(option)&&filterDeprecated(option);}).sort(function(a,b){return a.name===b.name?0:a.name<b.name?-1:1;}).map(mapInternal).map(function(option){option=Object.assign({},option);if(Array.isArray(option.default)){option.default=option.default.length===1?option.default[0].value:option.default.filter(filterSince).sort(function(info1,info2){return semver$1.compare(info2.since,info1.since);})[0].value;}if(Array.isArray(option.choices)){option.choices=option.choices.filter(function(option){return filterSince(option)&&filterDeprecated(option);});}var filteredPlugins=plugins.filter(function(plugin){return plugin.defaultOptions&&plugin.defaultOptions[option.name]!==undefined;});var pluginDefaults=filteredPlugins.reduce(function(reduced,plugin){reduced[plugin.name]=plugin.defaultOptions[option.name];return reduced;},{});return Object.assign({},option,{pluginDefaults:pluginDefaults});});var languages=plugins.reduce(function(all,plugin){return all.concat(plugin.languages||[]);},[]).filter(filterSince);return{languages:languages,options:options};function filterSince(object){return showUnreleased||!("since"in object)||object.since&&semver$1.gte(version,object.since);}function filterDeprecated(object){return showDeprecated||!("deprecated"in object)||object.deprecated&&semver$1.lt(version,object.deprecated);}function mapInternal(object){if(showInternal){return object;}var newObject=_objectWithoutPropertiesLoose(object,["cliName","cliCategory","cliDescription"]);return newObject;}}var support={getSupportInfo:getSupportInfo};/*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the "License"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */ /* global Reflect, Promise */var _extendStatics=function extendStatics(d,b){_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b;}||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}};return _extendStatics(d,b);};function __extends(d,b){_extendStatics(d,b);function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());}var _assign=function __assign(){_assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p];}}return t;};return _assign.apply(this,arguments);};function __rest(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if((typeof Reflect==="undefined"?"undefined":(0,_typeof3.default)(Reflect))==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--){if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;}return c>3&&r&&Object.defineProperty(target,key,r),r;}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex);};}function __metadata(metadataKey,metadataValue){if((typeof Reflect==="undefined"?"undefined":(0,_typeof3.default)(Reflect))==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue);}function __awaiter(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value);}).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});}function __generator(thisArg,body){var _={label:0,sent:function sent(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),"throw":verb(1),"return":verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_){try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break;}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}if(t[2])_.ops.pop();_.trys.pop();continue;}op=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}}function __exportStar(m,exports){for(var p in m){if(!exports.hasOwnProperty(p))exports[p]=m[p];}}function __values(o){var m=typeof Symbol==="function"&&o[Symbol.iterator],i=0;if(m)return m.call(o);return{next:function next(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o};}};}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n--\x3e0)&&!(r=i.next()).done){ar.push(r.value);}}catch(error){e={error:error};}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i);}finally{if(e)throw e.error;}}return ar;}function __spread(){for(var ar=[],i=0;i<arguments.length;i++){ar=ar.concat(__read(arguments[i]));}return ar;}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++){s+=arguments[i].length;}for(var r=Array(s),k=0,i=0;i<il;i++){for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++){r[k]=a[j];}}return r;}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v);}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i;function verb(n){if(g[n])i[n]=function(v){return new Promise(function(a,b){q.push([n,v,a,b])>1||resume(n,v);});};}function resume(n,v){try{step(g[n](v));}catch(e){settle(q[0][3],e);}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r);}function fulfill(value){resume("next",value);}function reject(value){resume("throw",value);}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1]);}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",function(e){throw e;}),verb("return"),i[Symbol.iterator]=function(){return this;},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:n==="return"}:f?f(v):v;}:f;}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this;},i);function verb(n){i[n]=o[n]&&function(v){return new Promise(function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value);});};}function settle(resolve,reject,d,v){Promise.resolve(v).then(function(v){resolve({value:v,done:d});},reject);}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw});}else{cooked.raw=raw;}return cooked;}function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(Object.hasOwnProperty.call(mod,k))result[k]=mod[k];}result.default=mod;return result;}function __importDefault(mod){return mod&&mod.__esModule?mod:{default:mod};}var tslib_es6=/*#__PURE__*/Object.freeze({__proto__:null,__extends:__extends,get __assign(){return _assign;},__rest:__rest,__decorate:__decorate,__param:__param,__metadata:__metadata,__awaiter:__awaiter,__generator:__generator,__exportStar:__exportStar,__values:__values,__read:__read,__spread:__spread,__spreadArrays:__spreadArrays,__await:__await,__asyncGenerator:__asyncGenerator,__asyncDelegator:__asyncDelegator,__asyncValues:__asyncValues,__makeTemplateObject:__makeTemplateObject,__importStar:__importStar,__importDefault:__importDefault});var api=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.apiDescriptor={key:function key(_key){return /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(_key)?_key:JSON.stringify(_key);},value:function value(_value2){if(_value2===null||(0,_typeof3.default)(_value2)!==\'object\'){return JSON.stringify(_value2);}if(Array.isArray(_value2)){return"[".concat(_value2.map(function(subValue){return exports.apiDescriptor.value(subValue);}).join(\', \'),"]");}var keys=Object.keys(_value2);return keys.length===0?\'{}\':"{ ".concat(keys.map(function(key){return"".concat(exports.apiDescriptor.key(key),": ").concat(exports.apiDescriptor.value(_value2[key]));}).join(\', \')," }");},pair:function pair(_ref5){var key=_ref5.key,value=_ref5.value;return exports.apiDescriptor.value((0,_defineProperty2.default)({},key,value));}};});unwrapExports(api);var api_1=api.apiDescriptor;var tslib_1=getCjsExportFromNamespace(tslib_es6);var descriptors=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(api,exports);});unwrapExports(descriptors);var matchOperatorsRe=/[|\\\\{}()[\\]^$+*?.]/g;var escapeStringRegexp=function escapeStringRegexp(str){if(typeof str!==\'string\'){throw new TypeError(\'Expected a string\');}return str.replace(matchOperatorsRe,\'\\\\$&\');};var colorName={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};var conversions=createCommonjsModule(function(module){/* MIT license */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var key in colorName){if(colorName.hasOwnProperty(key)){reverseKeywords[colorName[key]]=key;}}var convert=module.exports={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};// hide .channels and .labels properties\nfor(var model in convert){if(convert.hasOwnProperty(model)){if(!(\'channels\'in convert[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert[model].labels.length!==convert[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var channels=convert[model].channels;var labels=convert[model].labels;delete convert[model].channels;delete convert[model].labels;Object.defineProperty(convert[model],\'channels\',{value:channels});Object.defineProperty(convert[model],\'labels\',{value:labels});}}convert.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;var l;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var c;var m;var y;var k;k=Math.min(1-r,1-g,1-b);c=(1-r-k)/(1-k)||0;m=(1-g-k)/(1-k)||0;y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};/**\n     * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n     * */function comparativeDistance(x,y){return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var keyword in colorName){if(colorName.hasOwnProperty(keyword)){var value=colorName[keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=keyword;}}}return currentClosestKeyword;};convert.keyword.rgb=function(keyword){return colorName[keyword];};convert.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert.rgb.lab=function(rgb){var xyz=convert.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t1;var t2;var t3;var rgb;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);var sv;var v;l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;v=(l+s)/2;sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var lmin;var sl;var l;l=(2-s)*v;lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var i;var v;var f;var n;// wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}i=Math.floor(6*h);v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}n=wh+f*(v-wh);// linear interpolation\nvar r;var g;var b;switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}return[r*255,g*255,b*255];};convert.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r;var g;var b;r=1-Math.min(1,c*(1-k)+k);g=1-Math.min(1,m*(1-k)+k);b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var hr;var h;var c;hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}c=Math.sqrt(a*a+b*b);return[l,c,h];};convert.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var a;var b;var hr;hr=h/360*2*Math.PI;a=c*Math.cos(hr);b=c*Math.sin(hr);return[l,a,b];};convert.rgb.ansi16=function(args){var r=args[0];var g=args[1];var b=args[2];var value=1 in arguments?arguments[1]:convert.rgb.hsv(args)[2];// hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert.hsv.ansi16=function(args){// optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert.rgb.ansi16(convert.hsv.rgb(args),args[2]);};convert.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// we use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert.ansi16.rgb=function(args){var color=args%10;// handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert.ansi256.rgb=function(args){// handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma+4;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=1;var f=0;if(l<0.5){c=2.0*s*l;}else{c=2.0*s*(1.0-l);}if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert.gray.hsl=convert.gray.hsv=function(args){return[0,0,args[0]];};convert.gray.hwb=function(gray){return[0,100,gray[0]];};convert.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert.gray.lab=function(gray){return[gray[0],0,0];};convert.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};});var conversions_1=conversions.rgb;var conversions_2=conversions.hsl;var conversions_3=conversions.hsv;var conversions_4=conversions.hwb;var conversions_5=conversions.cmyk;var conversions_6=conversions.xyz;var conversions_7=conversions.lab;var conversions_8=conversions.lch;var conversions_9=conversions.hex;var conversions_10=conversions.keyword;var conversions_11=conversions.ansi16;var conversions_12=conversions.ansi256;var conversions_13=conversions.hcg;var conversions_14=conversions.apple;var conversions_15=conversions.gray;/*\n  \tthis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel){var graph=buildGraph();var queue=[fromModel];// unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link(from,to){return function(args){return to(from(args));};}function wrapConversion(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link(conversions[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route=function route(fromModel){var graph=deriveBFS(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// no possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion(toModel,graph);}return conversion;};var convert={};var models=Object.keys(conversions);function wrapRaw(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}return fn(args);};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}var result=fn(args);// we\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models.forEach(function(fromModel){convert[fromModel]={};Object.defineProperty(convert[fromModel],\'channels\',{value:conversions[fromModel].channels});Object.defineProperty(convert[fromModel],\'labels\',{value:conversions[fromModel].labels});var routes=route(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn);convert[fromModel][toModel].raw=wrapRaw(fn);});});var colorConvert=convert;var ansiStyles=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(colorConvert,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(colorConvert,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(colorConvert,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],// Bright color\nredBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Fix humans\nstyles.color.grey=styles.color.gray;for(var _i2=0,_Object$keys=Object.keys(styles);_i2<_Object$keys.length;_i2++){var groupName=_Object$keys[_i2];var _group=styles[groupName];for(var _i3=0,_Object$keys2=Object.keys(_group);_i3<_Object$keys2.length;_i3++){var styleName=_Object$keys2[_i3];var _style=_group[styleName];styles[styleName]={open:"\\x1B[".concat(_style[0],"m"),close:"\\x1B[".concat(_style[1],"m")};_group[styleName]=styles[styleName];codes.set(_style[0],_style[1]);}Object.defineProperty(styles,groupName,{value:_group,enumerable:false});Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});}var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";styles.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};styles.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};styles.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};styles.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};styles.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};styles.bgColor.ansi16m={rgb:wrapAnsi16m(rgb2rgb,10)};for(var _i4=0,_Object$keys3=Object.keys(colorConvert);_i4<_Object$keys3.length;_i4++){var key=_Object$keys3[_i4];if((0,_typeof3.default)(colorConvert[key])!==\'object\'){continue;}var suite=colorConvert[key];if(key===\'ansi16\'){key=\'ansi\';}if(\'ansi16\'in suite){styles.color.ansi[key]=wrapAnsi16(suite.ansi16,0);styles.bgColor.ansi[key]=wrapAnsi16(suite.ansi16,10);}if(\'ansi256\'in suite){styles.color.ansi256[key]=wrapAnsi256(suite.ansi256,0);styles.bgColor.ansi256[key]=wrapAnsi256(suite.ansi256,10);}if(\'rgb\'in suite){styles.color.ansi16m[key]=wrapAnsi16m(suite.rgb,0);styles.bgColor.ansi16m[key]=wrapAnsi16m(suite.rgb,10);}}return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var require$$0$1={EOL:"\\n"};var hasFlag=function hasFlag(flag,argv){argv=argv||process.argv;var prefix=flag.startsWith(\'-\')?\'\':flag.length===1?\'-\':\'--\';var pos=argv.indexOf(prefix+flag);var terminatorPos=argv.indexOf(\'--\');return pos!==-1&&(terminatorPos===-1?true:pos<terminatorPos);};var env$1=process.env;var forceColor;if(hasFlag(\'no-color\')||hasFlag(\'no-colors\')||hasFlag(\'color=false\')){forceColor=false;}else if(hasFlag(\'color\')||hasFlag(\'colors\')||hasFlag(\'color=true\')||hasFlag(\'color=always\')){forceColor=true;}if(\'FORCE_COLOR\'in env$1){forceColor=env$1.FORCE_COLOR.length===0||parseInt(env$1.FORCE_COLOR,10)!==0;}function translateLevel(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor(stream){if(forceColor===false){return 0;}if(hasFlag(\'color=16m\')||hasFlag(\'color=full\')||hasFlag(\'color=truecolor\')){return 3;}if(hasFlag(\'color=256\')){return 2;}if(stream&&!stream.isTTY&&forceColor!==true){return 0;}var min=forceColor?1:0;if(process.platform===\'win32\'){// Node.js 7.5.0 is the first version of Node.js to include a patch to\n// libuv that enables 256 color output on Windows. Anything earlier and it\n// won\'t work. However, here we target Node.js 8 at minimum as it is an LTS\n// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n// release that supports 256 colors. Windows 10 build 14931 is the first release\n// that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(process.versions.node.split(\'.\')[0])>=8&&Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$1){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$1;})||env$1.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$1){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$1.TEAMCITY_VERSION)?1:0;}if(env$1.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$1){var _version=parseInt((env$1.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$1.TERM_PROGRAM){case\'iTerm.app\':return _version>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$1.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$1.TERM)){return 1;}if(\'COLORTERM\'in env$1){return 1;}if(env$1.TERM===\'dumb\'){return min;}return min;}function getSupportLevel(stream){var level=supportsColor(stream);return translateLevel(level);}var supportsColor_1={supportsColor:getSupportLevel,stdout:getSupportLevel(process.stdout),stderr:getSupportLevel(process.stderr)};var TEMPLATE_REGEX=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape(c){if(c[0]===\'u\'&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}return ESCAPES.get(c)||c;}function parseArguments(name,args){var results=[];var chunks=args.trim().split(/\\s*,\\s*/g);var matches;var _iterator=_createForOfIteratorHelper(chunks),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var chunk=_step.value;if(!isNaN(chunk)){results.push(Number(chunk));}else if(matches=chunk.match(STRING_REGEX)){results.push(matches[2].replace(ESCAPE_REGEX,function(m,escape,chr){return escape?unescape(escape):chr;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return results;}function parseStyle(style){STYLE_REGEX.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX.exec(style))!==null){var _name=matches[1];if(matches[2]){var args=parseArguments(_name,matches[2]);results.push([_name].concat(args));}else{results.push([_name]);}}return results;}function buildStyle(chalk,styles){var enabled={};var _iterator2=_createForOfIteratorHelper(styles),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var layer=_step2.value;var _iterator3=_createForOfIteratorHelper(layer.styles),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _style2=_step3.value;enabled[_style2[0]]=layer.inverse?null:_style2.slice(1);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var current=chalk;for(var _i5=0,_Object$keys4=Object.keys(enabled);_i5<_Object$keys4.length;_i5++){var styleName=_Object$keys4[_i5];if(Array.isArray(enabled[styleName])){if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}if(enabled[styleName].length>0){current=current[styleName].apply(current,enabled[styleName]);}else{current=current[styleName];}}}return current;}var templates=function templates(chalk,tmp){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntmp.replace(TEMPLATE_REGEX,function(m,escapeChar,inverse,style,close,chr){if(escapeChar){chunk.push(unescape(escapeChar));}else if(style){var str=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?str:buildStyle(chalk,styles)(str));styles.push({inverse:inverse,styles:parseStyle(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(chr);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMsg="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMsg);}return chunks.join(\'\');};var chalk=createCommonjsModule(function(module){var stdoutColor=supportsColor_1.stdout;var isSimpleWindowsTerm=process.platform===\'win32\'&&!(process.env.TERM||\'\').toLowerCase().startsWith(\'xterm\');// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];// `color-convert` models to exclude from the Chalk API due to conflicts and such\nvar skipModels=new Set([\'gray\']);var styles=Object.create(null);function applyOptions(obj,options){options=options||{};// Detect level if not set manually\nvar scLevel=stdoutColor?stdoutColor.level:0;obj.level=options.level===undefined?scLevel:options.level;obj.enabled=\'enabled\'in options?options.enabled:obj.level>0;}function Chalk(options){// We check for this.template here since calling `chalk.constructor()`\n// by itself will have a `this` of a previously constructed chalk object\nif(!this||!(this instanceof Chalk)||this.template){var _chalk2={};applyOptions(_chalk2,options);_chalk2.template=function(){var args=[].slice.call(arguments);return chalkTag.apply(null,[_chalk2.template].concat(args));};Object.setPrototypeOf(_chalk2,Chalk.prototype);Object.setPrototypeOf(_chalk2.template,_chalk2);_chalk2.template.constructor=Chalk;return _chalk2.template;}applyOptions(this,options);}// Use bright blue on Windows as the normal blue color is illegible\nif(isSimpleWindowsTerm){ansiStyles.blue.open="\\x1B[94m";}var _loop2=function _loop2(){var key=_Object$keys5[_i6];ansiStyles[key].closeRe=new RegExp(escapeStringRegexp(ansiStyles[key].close),\'g\');styles[key]={get:function get(){var codes=ansiStyles[key];return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,key);}};};for(var _i6=0,_Object$keys5=Object.keys(ansiStyles);_i6<_Object$keys5.length;_i6++){_loop2();}styles.visible={get:function get(){return build.call(this,this._styles||[],true,\'visible\');}};ansiStyles.color.closeRe=new RegExp(escapeStringRegexp(ansiStyles.color.close),\'g\');var _loop3=function _loop3(){var model=_Object$keys6[_i7];if(skipModels.has(model)){return"continue";}styles[model]={get:function get(){var level=this.level;return function(){var open=ansiStyles.color[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles.color.close,closeRe:ansiStyles.color.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i7=0,_Object$keys6=Object.keys(ansiStyles.color.ansi);_i7<_Object$keys6.length;_i7++){var _ret=_loop3();if(_ret==="continue")continue;}ansiStyles.bgColor.closeRe=new RegExp(escapeStringRegexp(ansiStyles.bgColor.close),\'g\');var _loop4=function _loop4(){var model=_Object$keys7[_i8];if(skipModels.has(model)){return"continue";}var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var open=ansiStyles.bgColor[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles.bgColor.close,closeRe:ansiStyles.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i8=0,_Object$keys7=Object.keys(ansiStyles.bgColor.ansi);_i8<_Object$keys7.length;_i8++){var _ret2=_loop4();if(_ret2==="continue")continue;}var proto=Object.defineProperties(function(){},styles);function build(_styles,_empty,key){var builder=function builder(){return applyStyle.apply(builder,arguments);};builder._styles=_styles;builder._empty=_empty;var self=this;Object.defineProperty(builder,\'level\',{enumerable:true,get:function get(){return self.level;},set:function set(level){self.level=level;}});Object.defineProperty(builder,\'enabled\',{enumerable:true,get:function get(){return self.enabled;},set:function set(enabled){self.enabled=enabled;}});// See below for fix regarding invisible grey/dim combination on Windows\nbuilder.hasGrey=this.hasGrey||key===\'gray\'||key===\'grey\';// `__proto__` is used because we must return a function, but there is\n// no way to create a function with a different prototype\nbuilder.__proto__=proto;// eslint-disable-line no-proto\nreturn builder;}function applyStyle(){// Support varags, but simply cast to string in case there\'s only one arg\nvar args=arguments;var argsLen=args.length;var str=String(arguments[0]);if(argsLen===0){return\'\';}if(argsLen>1){// Don\'t slice `arguments`, it prevents V8 optimizations\nfor(var _a4=1;_a4<argsLen;_a4++){str+=\' \'+args[_a4];}}if(!this.enabled||this.level<=0||!str){return this._empty?\'\':str;}// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n// see https://github.com/chalk/chalk/issues/58\n// If we\'re on Windows and we\'re dealing with a gray color, temporarily make \'dim\' a noop.\nvar originalDim=ansiStyles.dim.open;if(isSimpleWindowsTerm&&this.hasGrey){ansiStyles.dim.open=\'\';}var _iterator4=_createForOfIteratorHelper(this._styles.slice().reverse()),_step4;try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var _code=_step4.value;// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstr=_code.open+str.replace(_code.closeRe,_code.open)+_code.close;// Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS\n// https://github.com/chalk/chalk/pull/92\nstr=str.replace(/\\r?\\n/g,"".concat(_code.close,"$&").concat(_code.open));}// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n}catch(err){_iterator4.e(err);}finally{_iterator4.f();}ansiStyles.dim.open=originalDim;return str;}function chalkTag(chalk,strings){if(!Array.isArray(strings)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn[].slice.call(arguments,1).join(\' \');}var args=[].slice.call(arguments,2);var parts=[strings.raw[0]];for(var i=1;i<strings.length;i++){parts.push(String(args[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'));parts.push(String(strings.raw[i]));}return templates(chalk,parts.join(\'\'));}Object.defineProperties(Chalk.prototype,styles);module.exports=Chalk();// eslint-disable-line new-cap\nmodule.exports.supportsColor=stdoutColor;module.exports.default=module.exports;// For TypeScript\n});var chalk_1=chalk.supportsColor;var common=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.commonDeprecatedHandler=function(keyOrPair,redirectTo,_ref6){var descriptor=_ref6.descriptor;var messages=["".concat(chalk.default.yellow(typeof keyOrPair===\'string\'?descriptor.key(keyOrPair):descriptor.pair(keyOrPair))," is deprecated")];if(redirectTo){messages.push("we now treat it as ".concat(chalk.default.blue(typeof redirectTo===\'string\'?descriptor.key(redirectTo):descriptor.pair(redirectTo))));}return messages.join(\'; \')+\'.\';};});unwrapExports(common);var common_1=common.commonDeprecatedHandler;var deprecated=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(common,exports);});unwrapExports(deprecated);var common$1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.commonInvalidHandler=function(key,value,utils){return["Invalid ".concat(chalk.default.red(utils.descriptor.key(key))," value."),"Expected ".concat(chalk.default.blue(utils.schemas[key].expected(utils)),","),"but received ".concat(chalk.default.red(utils.descriptor.value(value)),".")].join(\' \');};});unwrapExports(common$1);var common_1$1=common$1.commonInvalidHandler;var invalid=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(common$1,exports);});unwrapExports(invalid);/* eslint-disable no-nested-ternary */var arr=[];var charCodeCache=[];var leven=function leven(a,b){if(a===b){return 0;}var swap=a;// Swapping the strings if `a` is longer than `b` so we know which one is the\n// shortest & which one is the longest\nif(a.length>b.length){a=b;b=swap;}var aLen=a.length;var bLen=b.length;if(aLen===0){return bLen;}if(bLen===0){return aLen;}// Performing suffix trimming:\n// We can linearly drop suffix common to both strings since they\n// don\'t increase distance at all\n// Note: `~-` is the bitwise way to perform a `- 1` operation\nwhile(aLen>0&&a.charCodeAt(~-aLen)===b.charCodeAt(~-bLen)){aLen--;bLen--;}if(aLen===0){return bLen;}// Performing prefix trimming\n// We can linearly drop prefix common to both strings since they\n// don\'t increase distance at all\nvar start=0;while(start<aLen&&a.charCodeAt(start)===b.charCodeAt(start)){start++;}aLen-=start;bLen-=start;if(aLen===0){return bLen;}var bCharCode;var ret;var tmp;var tmp2;var i=0;var j=0;while(i<aLen){charCodeCache[start+i]=a.charCodeAt(start+i);arr[i]=++i;}while(j<bLen){bCharCode=b.charCodeAt(start+j);tmp=j++;ret=j;for(i=0;i<aLen;i++){tmp2=bCharCode===charCodeCache[start+i]?tmp:tmp+1;tmp=arr[i];ret=arr[i]=tmp>ret?tmp2>ret?ret+1:tmp2:tmp2>tmp?tmp+1:tmp2;}}return ret;};var leven_1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.levenUnknownHandler=function(key,value,_ref7){var descriptor=_ref7.descriptor,logger=_ref7.logger,schemas=_ref7.schemas;var messages=["Ignored unknown option ".concat(chalk.default.yellow(descriptor.pair({key:key,value:value})),".")];var suggestion=Object.keys(schemas).sort().find(function(knownKey){return leven(key,knownKey)<3;});if(suggestion){messages.push("Did you mean ".concat(chalk.default.blue(descriptor.key(suggestion)),"?"));}logger.warn(messages.join(\' \'));};});unwrapExports(leven_1);var leven_2=leven_1.levenUnknownHandler;var unknown=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(leven_1,exports);});unwrapExports(unknown);var handlers=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(deprecated,exports);tslib_1.__exportStar(invalid,exports);tslib_1.__exportStar(unknown,exports);});unwrapExports(handlers);var schema=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var HANDLER_KEYS=[\'default\',\'expected\',\'validate\',\'deprecated\',\'forward\',\'redirect\',\'overlap\',\'preprocess\',\'postprocess\'];function createSchema(SchemaConstructor,parameters){var schema=new SchemaConstructor(parameters);var subSchema=Object.create(schema);var _iterator5=_createForOfIteratorHelper(HANDLER_KEYS),_step5;try{for(_iterator5.s();!(_step5=_iterator5.n()).done;){var handlerKey=_step5.value;if(handlerKey in parameters){subSchema[handlerKey]=normalizeHandler(parameters[handlerKey],schema,Schema.prototype[handlerKey].length);}}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return subSchema;}exports.createSchema=createSchema;var Schema=/*#__PURE__*/function(){function Schema(parameters){(0,_classCallCheck2.default)(this,Schema);this.name=parameters.name;}(0,_createClass2.default)(Schema,[{key:"default",value:function _default(_utils){return undefined;}// istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n},{key:"expected",value:function expected(_utils){return\'nothing\';}// istanbul ignore next: this is actually an abstract method but we need a placeholder to get `function.length`\n},{key:"validate",value:function validate(_value,_utils){return false;}},{key:"deprecated",value:function deprecated(_value,_utils){return false;}},{key:"forward",value:function forward(_value,_utils){return undefined;}},{key:"redirect",value:function redirect(_value,_utils){return undefined;}},{key:"overlap",value:function overlap(currentValue,_newValue,_utils){return currentValue;}},{key:"preprocess",value:function preprocess(value,_utils){return value;}},{key:"postprocess",value:function postprocess(value,_utils){return value;}}],[{key:"create",value:function create(parameters){// @ts-ignore: https://github.com/Microsoft/TypeScript/issues/5863\nreturn createSchema(this,parameters);}}]);return Schema;}();exports.Schema=Schema;function normalizeHandler(handler,superSchema,handlerArgumentsLength){return typeof handler===\'function\'?function(){for(var _len2=arguments.length,args=new Array(_len2),_key3=0;_key3<_len2;_key3++){args[_key3]=arguments[_key3];}return handler.apply(void 0,(0,_toConsumableArray3.default)(args.slice(0,handlerArgumentsLength-1)).concat([superSchema],(0,_toConsumableArray3.default)(args.slice(handlerArgumentsLength-1))));}:function(){return handler;};}});unwrapExports(schema);var schema_1=schema.createSchema;var schema_2=schema.Schema;var alias=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var AliasSchema=/*#__PURE__*/function(_schema$Schema){(0,_inherits2.default)(AliasSchema,_schema$Schema);var _super4=_createSuper(AliasSchema);function AliasSchema(parameters){var _this;(0,_classCallCheck2.default)(this,AliasSchema);_this=_super4.call(this,parameters);_this._sourceName=parameters.sourceName;return _this;}(0,_createClass2.default)(AliasSchema,[{key:"expected",value:function expected(utils){return utils.schemas[this._sourceName].expected(utils);}},{key:"validate",value:function validate(value,utils){return utils.schemas[this._sourceName].validate(value,utils);}},{key:"redirect",value:function redirect(_value,_utils){return this._sourceName;}}]);return AliasSchema;}(schema.Schema);exports.AliasSchema=AliasSchema;});unwrapExports(alias);var alias_1=alias.AliasSchema;var any=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var AnySchema=/*#__PURE__*/function(_schema$Schema2){(0,_inherits2.default)(AnySchema,_schema$Schema2);var _super5=_createSuper(AnySchema);function AnySchema(){(0,_classCallCheck2.default)(this,AnySchema);return _super5.apply(this,arguments);}(0,_createClass2.default)(AnySchema,[{key:"expected",value:function expected(){return\'anything\';}},{key:"validate",value:function validate(){return true;}}]);return AnySchema;}(schema.Schema);exports.AnySchema=AnySchema;});unwrapExports(any);var any_1=any.AnySchema;var array=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ArraySchema=/*#__PURE__*/function(_schema$Schema3){(0,_inherits2.default)(ArraySchema,_schema$Schema3);var _super6=_createSuper(ArraySchema);function ArraySchema(_a){var _this2;(0,_classCallCheck2.default)(this,ArraySchema);var valueSchema=_a.valueSchema,_a$name=_a.name,name=_a$name===void 0?valueSchema.name:_a$name,handlers=tslib_1.__rest(_a,["valueSchema","name"]);_this2=_super6.call(this,Object.assign({},handlers,{name:name}));_this2._valueSchema=valueSchema;return _this2;}(0,_createClass2.default)(ArraySchema,[{key:"expected",value:function expected(utils){return"an array of ".concat(this._valueSchema.expected(utils));}},{key:"validate",value:function validate(value,utils){if(!Array.isArray(value)){return false;}var invalidValues=[];var _iterator6=_createForOfIteratorHelper(value),_step6;try{for(_iterator6.s();!(_step6=_iterator6.n()).done;){var subValue=_step6.value;var subValidateResult=utils.normalizeValidateResult(this._valueSchema.validate(subValue,utils),subValue);if(subValidateResult!==true){invalidValues.push(subValidateResult.value);}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}return invalidValues.length===0?true:{value:invalidValues};}},{key:"deprecated",value:function deprecated(value,utils){var deprecatedResult=[];var _iterator7=_createForOfIteratorHelper(value),_step7;try{for(_iterator7.s();!(_step7=_iterator7.n()).done;){var subValue=_step7.value;var subDeprecatedResult=utils.normalizeDeprecatedResult(this._valueSchema.deprecated(subValue,utils),subValue);if(subDeprecatedResult!==false){deprecatedResult.push.apply(deprecatedResult,(0,_toConsumableArray3.default)(subDeprecatedResult.map(function(_ref8){var deprecatedValue=_ref8.value;return{value:[deprecatedValue]};})));}}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return deprecatedResult;}},{key:"forward",value:function forward(value,utils){var forwardResult=[];var _iterator8=_createForOfIteratorHelper(value),_step8;try{for(_iterator8.s();!(_step8=_iterator8.n()).done;){var subValue=_step8.value;var subForwardResult=utils.normalizeForwardResult(this._valueSchema.forward(subValue,utils),subValue);forwardResult.push.apply(forwardResult,(0,_toConsumableArray3.default)(subForwardResult.map(wrapTransferResult)));}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return forwardResult;}},{key:"redirect",value:function redirect(value,utils){var remain=[];var redirect=[];var _iterator9=_createForOfIteratorHelper(value),_step9;try{for(_iterator9.s();!(_step9=_iterator9.n()).done;){var subValue=_step9.value;var subRedirectResult=utils.normalizeRedirectResult(this._valueSchema.redirect(subValue,utils),subValue);if(\'remain\'in subRedirectResult){remain.push(subRedirectResult.remain);}redirect.push.apply(redirect,(0,_toConsumableArray3.default)(subRedirectResult.redirect.map(wrapTransferResult)));}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}return remain.length===0?{redirect:redirect}:{redirect:redirect,remain:remain};}},{key:"overlap",value:function overlap(currentValue,newValue){return currentValue.concat(newValue);}}]);return ArraySchema;}(schema.Schema);exports.ArraySchema=ArraySchema;function wrapTransferResult(_ref9){var from=_ref9.from,to=_ref9.to;return{from:[from],to:to};}});unwrapExports(array);var array_1=array.ArraySchema;var boolean_1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var BooleanSchema=/*#__PURE__*/function(_schema$Schema4){(0,_inherits2.default)(BooleanSchema,_schema$Schema4);var _super7=_createSuper(BooleanSchema);function BooleanSchema(){(0,_classCallCheck2.default)(this,BooleanSchema);return _super7.apply(this,arguments);}(0,_createClass2.default)(BooleanSchema,[{key:"expected",value:function expected(){return\'true or false\';}},{key:"validate",value:function validate(value){return typeof value===\'boolean\';}}]);return BooleanSchema;}(schema.Schema);exports.BooleanSchema=BooleanSchema;});unwrapExports(boolean_1);var boolean_2=boolean_1.BooleanSchema;var utils=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});function recordFromArray(array,mainKey){var record=Object.create(null);var _iterator10=_createForOfIteratorHelper(array),_step10;try{for(_iterator10.s();!(_step10=_iterator10.n()).done;){var value=_step10.value;var key=value[mainKey];// istanbul ignore next\nif(record[key]){throw new Error("Duplicate ".concat(mainKey," ").concat(JSON.stringify(key)));}// @ts-ignore\nrecord[key]=value;}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}return record;}exports.recordFromArray=recordFromArray;function mapFromArray(array,mainKey){var map=new Map();var _iterator11=_createForOfIteratorHelper(array),_step11;try{for(_iterator11.s();!(_step11=_iterator11.n()).done;){var value=_step11.value;var key=value[mainKey];// istanbul ignore next\nif(map.has(key)){throw new Error("Duplicate ".concat(mainKey," ").concat(JSON.stringify(key)));}map.set(key,value);}}catch(err){_iterator11.e(err);}finally{_iterator11.f();}return map;}exports.mapFromArray=mapFromArray;function createAutoChecklist(){var map=Object.create(null);return function(id){var idString=JSON.stringify(id);if(map[idString]){return true;}map[idString]=true;return false;};}exports.createAutoChecklist=createAutoChecklist;function partition(array,predicate){var trueArray=[];var falseArray=[];var _iterator12=_createForOfIteratorHelper(array),_step12;try{for(_iterator12.s();!(_step12=_iterator12.n()).done;){var value=_step12.value;if(predicate(value)){trueArray.push(value);}else{falseArray.push(value);}}}catch(err){_iterator12.e(err);}finally{_iterator12.f();}return[trueArray,falseArray];}exports.partition=partition;function isInt(value){return value===Math.floor(value);}exports.isInt=isInt;function comparePrimitive(a,b){if(a===b){return 0;}var typeofA=(0,_typeof3.default)(a);var typeofB=(0,_typeof3.default)(b);var orders=[\'undefined\',\'object\',\'boolean\',\'number\',\'string\'];if(typeofA!==typeofB){return orders.indexOf(typeofA)-orders.indexOf(typeofB);}if(typeofA!==\'string\'){return Number(a)-Number(b);}return a.localeCompare(b);}exports.comparePrimitive=comparePrimitive;function normalizeDefaultResult(result){return result===undefined?{}:result;}exports.normalizeDefaultResult=normalizeDefaultResult;function normalizeValidateResult(result,value){return result===true?true:result===false?{value:value}:result;}exports.normalizeValidateResult=normalizeValidateResult;function normalizeDeprecatedResult(result,value){var doNotNormalizeTrue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return result===false?false:result===true?doNotNormalizeTrue?true:[{value:value}]:\'value\'in result?[result]:result.length===0?false:result;}exports.normalizeDeprecatedResult=normalizeDeprecatedResult;function normalizeTransferResult(result,value){return typeof result===\'string\'||\'key\'in result?{from:value,to:result}:\'from\'in result?{from:result.from,to:result.to}:{from:value,to:result.to};}exports.normalizeTransferResult=normalizeTransferResult;function normalizeForwardResult(result,value){return result===undefined?[]:Array.isArray(result)?result.map(function(transferResult){return normalizeTransferResult(transferResult,value);}):[normalizeTransferResult(result,value)];}exports.normalizeForwardResult=normalizeForwardResult;function normalizeRedirectResult(result,value){var redirect=normalizeForwardResult((0,_typeof3.default)(result)===\'object\'&&\'redirect\'in result?result.redirect:result,value);return redirect.length===0?{remain:value,redirect:redirect}:(0,_typeof3.default)(result)===\'object\'&&\'remain\'in result?{remain:result.remain,redirect:redirect}:{redirect:redirect};}exports.normalizeRedirectResult=normalizeRedirectResult;});unwrapExports(utils);var utils_1=utils.recordFromArray;var utils_2=utils.mapFromArray;var utils_3=utils.createAutoChecklist;var utils_4=utils.partition;var utils_5=utils.isInt;var utils_6=utils.comparePrimitive;var utils_7=utils.normalizeDefaultResult;var utils_8=utils.normalizeValidateResult;var utils_9=utils.normalizeDeprecatedResult;var utils_10=utils.normalizeTransferResult;var utils_11=utils.normalizeForwardResult;var utils_12=utils.normalizeRedirectResult;var choice=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var ChoiceSchema=/*#__PURE__*/function(_schema$Schema5){(0,_inherits2.default)(ChoiceSchema,_schema$Schema5);var _super8=_createSuper(ChoiceSchema);function ChoiceSchema(parameters){var _this3;(0,_classCallCheck2.default)(this,ChoiceSchema);_this3=_super8.call(this,parameters);_this3._choices=utils.mapFromArray(parameters.choices.map(function(choice){return choice&&(0,_typeof3.default)(choice)===\'object\'?choice:{value:choice};}),\'value\');return _this3;}(0,_createClass2.default)(ChoiceSchema,[{key:"expected",value:function expected(_ref10){var _this4=this;var descriptor=_ref10.descriptor;var choiceValues=Array.from(this._choices.keys()).map(function(value){return _this4._choices.get(value);}).filter(function(choiceInfo){return!choiceInfo.deprecated;}).map(function(choiceInfo){return choiceInfo.value;}).sort(utils.comparePrimitive).map(descriptor.value);var head=choiceValues.slice(0,-2);var tail=choiceValues.slice(-2);return head.concat(tail.join(\' or \')).join(\', \');}},{key:"validate",value:function validate(value){return this._choices.has(value);}},{key:"deprecated",value:function deprecated(value){var choiceInfo=this._choices.get(value);return choiceInfo&&choiceInfo.deprecated?{value:value}:false;}},{key:"forward",value:function forward(value){var choiceInfo=this._choices.get(value);return choiceInfo?choiceInfo.forward:undefined;}},{key:"redirect",value:function redirect(value){var choiceInfo=this._choices.get(value);return choiceInfo?choiceInfo.redirect:undefined;}}]);return ChoiceSchema;}(schema.Schema);exports.ChoiceSchema=ChoiceSchema;});unwrapExports(choice);var choice_1=choice.ChoiceSchema;var number=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var NumberSchema=/*#__PURE__*/function(_schema$Schema6){(0,_inherits2.default)(NumberSchema,_schema$Schema6);var _super9=_createSuper(NumberSchema);function NumberSchema(){(0,_classCallCheck2.default)(this,NumberSchema);return _super9.apply(this,arguments);}(0,_createClass2.default)(NumberSchema,[{key:"expected",value:function expected(){return\'a number\';}},{key:"validate",value:function validate(value,_utils){return typeof value===\'number\';}}]);return NumberSchema;}(schema.Schema);exports.NumberSchema=NumberSchema;});unwrapExports(number);var number_1=number.NumberSchema;var integer=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var IntegerSchema=/*#__PURE__*/function(_number$NumberSchema){(0,_inherits2.default)(IntegerSchema,_number$NumberSchema);var _super10=_createSuper(IntegerSchema);function IntegerSchema(){(0,_classCallCheck2.default)(this,IntegerSchema);return _super10.apply(this,arguments);}(0,_createClass2.default)(IntegerSchema,[{key:"expected",value:function expected(){return\'an integer\';}},{key:"validate",value:function validate(value,utils$1){return utils$1.normalizeValidateResult((0,_get3.default)((0,_getPrototypeOf2.default)(IntegerSchema.prototype),"validate",this).call(this,value,utils$1),value)===true&&utils.isInt(value);}}]);return IntegerSchema;}(number.NumberSchema);exports.IntegerSchema=IntegerSchema;});unwrapExports(integer);var integer_1=integer.IntegerSchema;var string=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});var StringSchema=/*#__PURE__*/function(_schema$Schema7){(0,_inherits2.default)(StringSchema,_schema$Schema7);var _super11=_createSuper(StringSchema);function StringSchema(){(0,_classCallCheck2.default)(this,StringSchema);return _super11.apply(this,arguments);}(0,_createClass2.default)(StringSchema,[{key:"expected",value:function expected(){return\'a string\';}},{key:"validate",value:function validate(value){return typeof value===\'string\';}}]);return StringSchema;}(schema.Schema);exports.StringSchema=StringSchema;});unwrapExports(string);var string_1=string.StringSchema;var schemas=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(alias,exports);tslib_1.__exportStar(any,exports);tslib_1.__exportStar(array,exports);tslib_1.__exportStar(boolean_1,exports);tslib_1.__exportStar(choice,exports);tslib_1.__exportStar(integer,exports);tslib_1.__exportStar(number,exports);tslib_1.__exportStar(string,exports);});unwrapExports(schemas);var defaults=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.defaultDescriptor=api.apiDescriptor;exports.defaultUnknownHandler=leven_1.levenUnknownHandler;exports.defaultInvalidHandler=invalid.commonInvalidHandler;exports.defaultDeprecatedHandler=common.commonDeprecatedHandler;});unwrapExports(defaults);var defaults_1=defaults.defaultDescriptor;var defaults_2=defaults.defaultUnknownHandler;var defaults_3=defaults.defaultInvalidHandler;var defaults_4=defaults.defaultDeprecatedHandler;var normalize=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.normalize=function(options,schemas,opts){return new Normalizer(schemas,opts).normalize(options);};var Normalizer=/*#__PURE__*/function(){function Normalizer(schemas,opts){(0,_classCallCheck2.default)(this,Normalizer);// istanbul ignore next\nvar _ref11=opts||{},_ref11$logger=_ref11.logger,logger=_ref11$logger===void 0?console:_ref11$logger,_ref11$descriptor=_ref11.descriptor,descriptor=_ref11$descriptor===void 0?defaults.defaultDescriptor:_ref11$descriptor,_ref11$unknown=_ref11.unknown,unknown=_ref11$unknown===void 0?defaults.defaultUnknownHandler:_ref11$unknown,_ref11$invalid=_ref11.invalid,invalid=_ref11$invalid===void 0?defaults.defaultInvalidHandler:_ref11$invalid,_ref11$deprecated=_ref11.deprecated,deprecated=_ref11$deprecated===void 0?defaults.defaultDeprecatedHandler:_ref11$deprecated;this._utils={descriptor:descriptor,logger:/* istanbul ignore next */logger||{warn:function warn(){}},schemas:utils.recordFromArray(schemas,\'name\'),normalizeDefaultResult:utils.normalizeDefaultResult,normalizeDeprecatedResult:utils.normalizeDeprecatedResult,normalizeForwardResult:utils.normalizeForwardResult,normalizeRedirectResult:utils.normalizeRedirectResult,normalizeValidateResult:utils.normalizeValidateResult};this._unknownHandler=unknown;this._invalidHandler=invalid;this._deprecatedHandler=deprecated;this.cleanHistory();}(0,_createClass2.default)(Normalizer,[{key:"cleanHistory",value:function cleanHistory(){this._hasDeprecationWarned=utils.createAutoChecklist();}},{key:"normalize",value:function normalize(options){var _this5=this;var normalized={};var restOptionsArray=[options];var applyNormalization=function applyNormalization(){while(restOptionsArray.length!==0){var currentOptions=restOptionsArray.shift();var transferredOptionsArray=_this5._applyNormalization(currentOptions,normalized);restOptionsArray.push.apply(restOptionsArray,(0,_toConsumableArray3.default)(transferredOptionsArray));}};applyNormalization();for(var _i9=0,_Object$keys8=Object.keys(this._utils.schemas);_i9<_Object$keys8.length;_i9++){var key=_Object$keys8[_i9];var _schema=this._utils.schemas[key];if(!(key in normalized)){var defaultResult=utils.normalizeDefaultResult(_schema.default(this._utils));if(\'value\'in defaultResult){restOptionsArray.push((0,_defineProperty2.default)({},key,defaultResult.value));}}}applyNormalization();for(var _i10=0,_Object$keys9=Object.keys(this._utils.schemas);_i10<_Object$keys9.length;_i10++){var _key4=_Object$keys9[_i10];var _schema2=this._utils.schemas[_key4];if(_key4 in normalized){normalized[_key4]=_schema2.postprocess(normalized[_key4],this._utils);}}return normalized;}},{key:"_applyNormalization",value:function _applyNormalization(options,normalized){var _this6=this;var transferredOptionsArray=[];var _utils$partition=utils.partition(Object.keys(options),function(key){return key in _this6._utils.schemas;}),_utils$partition2=(0,_slicedToArray2.default)(_utils$partition,2),knownOptionNames=_utils$partition2[0],unknownOptionNames=_utils$partition2[1];var _iterator13=_createForOfIteratorHelper(knownOptionNames),_step13;try{var _loop5=function _loop5(){var key=_step13.value;var schema=_this6._utils.schemas[key];var value=schema.preprocess(options[key],_this6._utils);var validateResult=utils.normalizeValidateResult(schema.validate(value,_this6._utils),value);if(validateResult!==true){var invalidValue=validateResult.value;var errorMessageOrError=_this6._invalidHandler(key,invalidValue,_this6._utils);throw typeof errorMessageOrError===\'string\'?new Error(errorMessageOrError):/* istanbul ignore next*/errorMessageOrError;}var appendTransferredOptions=function appendTransferredOptions(_ref12){var from=_ref12.from,to=_ref12.to;transferredOptionsArray.push(typeof to===\'string\'?(0,_defineProperty2.default)({},to,from):(0,_defineProperty2.default)({},to.key,to.value));};var warnDeprecated=function warnDeprecated(_ref15){var currentValue=_ref15.value,redirectTo=_ref15.redirectTo;var deprecatedResult=utils.normalizeDeprecatedResult(schema.deprecated(currentValue,_this6._utils),value,/* doNotNormalizeTrue */true);if(deprecatedResult===false){return;}if(deprecatedResult===true){if(!_this6._hasDeprecationWarned(key)){_this6._utils.logger.warn(_this6._deprecatedHandler(key,redirectTo,_this6._utils));}}else{var _iterator15=_createForOfIteratorHelper(deprecatedResult),_step15;try{for(_iterator15.s();!(_step15=_iterator15.n()).done;){var deprecatedValue=_step15.value.value;var pair={key:key,value:deprecatedValue};if(!_this6._hasDeprecationWarned(pair)){var redirectToPair=typeof redirectTo===\'string\'?{key:redirectTo,value:deprecatedValue}:redirectTo;_this6._utils.logger.warn(_this6._deprecatedHandler(pair,redirectToPair,_this6._utils));}}}catch(err){_iterator15.e(err);}finally{_iterator15.f();}}};var forwardResult=utils.normalizeForwardResult(schema.forward(value,_this6._utils),value);forwardResult.forEach(appendTransferredOptions);var redirectResult=utils.normalizeRedirectResult(schema.redirect(value,_this6._utils),value);redirectResult.redirect.forEach(appendTransferredOptions);if(\'remain\'in redirectResult){var remainingValue=redirectResult.remain;normalized[key]=key in normalized?schema.overlap(normalized[key],remainingValue,_this6._utils):remainingValue;warnDeprecated({value:remainingValue});}var _iterator16=_createForOfIteratorHelper(redirectResult.redirect),_step16;try{for(_iterator16.s();!(_step16=_iterator16.n()).done;){var _step16$value=_step16.value,_from=_step16$value.from,to=_step16$value.to;warnDeprecated({value:_from,redirectTo:to});}}catch(err){_iterator16.e(err);}finally{_iterator16.f();}};for(_iterator13.s();!(_step13=_iterator13.n()).done;){_loop5();}}catch(err){_iterator13.e(err);}finally{_iterator13.f();}var _iterator14=_createForOfIteratorHelper(unknownOptionNames),_step14;try{for(_iterator14.s();!(_step14=_iterator14.n()).done;){var key=_step14.value;var value=options[key];var unknownResult=this._unknownHandler(key,value,this._utils);if(unknownResult){for(var _i11=0,_Object$keys10=Object.keys(unknownResult);_i11<_Object$keys10.length;_i11++){var unknownKey=_Object$keys10[_i11];var unknownOption=(0,_defineProperty2.default)({},unknownKey,unknownResult[unknownKey]);if(unknownKey in this._utils.schemas){transferredOptionsArray.push(unknownOption);}else{Object.assign(normalized,unknownOption);}}}}}catch(err){_iterator14.e(err);}finally{_iterator14.f();}return transferredOptionsArray;}}]);return Normalizer;}();exports.Normalizer=Normalizer;});unwrapExports(normalize);var normalize_1=normalize.normalize;var normalize_2=normalize.Normalizer;var lib=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});tslib_1.__exportStar(descriptors,exports);tslib_1.__exportStar(handlers,exports);tslib_1.__exportStar(schemas,exports);tslib_1.__exportStar(normalize,exports);tslib_1.__exportStar(schema,exports);});unwrapExports(lib);var array$1=[];var charCodeCache$1=[];var leven$1=function leven$1(left,right){if(left===right){return 0;}var swap=left;// Swapping the strings if `a` is longer than `b` so we know which one is the\n// shortest & which one is the longest\nif(left.length>right.length){left=right;right=swap;}var leftLength=left.length;var rightLength=right.length;// Performing suffix trimming:\n// We can linearly drop suffix common to both strings since they\n// don\'t increase distance at all\n// Note: `~-` is the bitwise way to perform a `- 1` operation\nwhile(leftLength>0&&left.charCodeAt(~-leftLength)===right.charCodeAt(~-rightLength)){leftLength--;rightLength--;}// Performing prefix trimming\n// We can linearly drop prefix common to both strings since they\n// don\'t increase distance at all\nvar start=0;while(start<leftLength&&left.charCodeAt(start)===right.charCodeAt(start)){start++;}leftLength-=start;rightLength-=start;if(leftLength===0){return rightLength;}var bCharCode;var result;var temp;var temp2;var i=0;var j=0;while(i<leftLength){charCodeCache$1[i]=left.charCodeAt(start+i);array$1[i]=++i;}while(j<rightLength){bCharCode=right.charCodeAt(start+j);temp=j++;result=j;for(i=0;i<leftLength;i++){temp2=bCharCode===charCodeCache$1[i]?temp:temp+1;temp=array$1[i];// eslint-disable-next-line no-multi-assign\nresult=array$1[i]=temp>result?temp2>result?result+1:temp2:temp2>temp?temp+1:temp2;}}return result;};var leven_1$1=leven$1;// TODO: Remove this for the next major release\nvar default_1=leven$1;leven_1$1.default=default_1;var colorName$1={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};/* MIT license */ /* eslint-disable no-mixed-operators */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var _i12=0,_Object$keys11=Object.keys(colorName$1);_i12<_Object$keys11.length;_i12++){var key=_Object$keys11[_i12];reverseKeywords[colorName$1[key]]=key;}var convert$1={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};var conversions$1=convert$1;// Hide .channels and .labels properties\nfor(var _i13=0,_Object$keys12=Object.keys(convert$1);_i13<_Object$keys12.length;_i13++){var model=_Object$keys12[_i13];if(!(\'channels\'in convert$1[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert$1[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert$1[model].labels.length!==convert$1[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var _convert$1$model=convert$1[model],channels=_convert$1$model.channels,labels=_convert$1$model.labels;delete convert$1[model].channels;delete convert$1[model].labels;Object.defineProperty(convert$1[model],\'channels\',{value:channels});Object.defineProperty(convert$1[model],\'labels\',{value:labels});}convert$1.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}var l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert$1.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=0;s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert$1.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert$1.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert$1.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var k=Math.min(1-r,1-g,1-b);var c=(1-r-k)/(1-k)||0;var m=(1-g-k)/(1-k)||0;var y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};function comparativeDistance(x,y){/*\n    \tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n    */return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert$1.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var _i14=0,_Object$keys13=Object.keys(colorName$1);_i14<_Object$keys13.length;_i14++){var _keyword=_Object$keys13[_i14];var value=colorName$1[_keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=_keyword;}}return currentClosestKeyword;};convert$1.keyword.rgb=function(keyword){return colorName$1[keyword];};convert$1.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// Assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert$1.rgb.lab=function(rgb){var xyz=convert$1.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;var l=116*y-16;var a=500*(x-y);var b=200*(y-z);return[l,a,b];};convert$1.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t2;var t3;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}var t1=2*l-t2;var rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert$1.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;var v=(l+s)/2;var sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert$1.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert$1.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var sl;var l;l=(2-s)*v;var lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert$1.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var f;// Wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}var i=Math.floor(6*h);var v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}var n=wh+f*(v-wh);// Linear interpolation\nvar r;var g;var b;/* eslint-disable max-statements-per-line,no-multi-spaces */switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}/* eslint-enable max-statements-per-line,no-multi-spaces */return[r*255,g*255,b*255];};convert$1.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r=1-Math.min(1,c*(1-k)+k);var g=1-Math.min(1,m*(1-k)+k);var b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert$1.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// Assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert$1.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;var l=116*y-16;var a=500*(x-y);var b=200*(y-z);return[l,a,b];};convert$1.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert$1.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var h;var hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}var c=Math.sqrt(a*a+b*b);return[l,c,h];};convert$1.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var hr=h/360*2*Math.PI;var a=c*Math.cos(hr);var b=c*Math.sin(hr);return[l,a,b];};convert$1.rgb.ansi16=function(args){var saturation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _args=(0,_slicedToArray2.default)(args,3),r=_args[0],g=_args[1],b=_args[2];var value=saturation===null?convert$1.rgb.hsv(args)[2]:saturation;// Hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert$1.hsv.ansi16=function(args){// Optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert$1.rgb.ansi16(convert$1.hsv.rgb(args),args[2]);};convert$1.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// We use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert$1.ansi16.rgb=function(args){var color=args%10;// Handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert$1.ansi256.rgb=function(args){// Handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert$1.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert$1.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert$1.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert$1.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=l<0.5?2.0*s*l:2.0*s*(1.0-l);var f=0;if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert$1.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert$1.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;/* eslint-disable max-statements-per-line */switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}/* eslint-enable max-statements-per-line */mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert$1.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert$1.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert$1.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert$1.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert$1.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert$1.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert$1.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert$1.gray.hsl=function(args){return[0,0,args[0]];};convert$1.gray.hsv=convert$1.gray.hsl;convert$1.gray.hwb=function(gray){return[0,100,gray[0]];};convert$1.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert$1.gray.lab=function(gray){return[gray[0],0,0];};convert$1.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert$1.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};/*\n  \tThis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph$1(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions$1);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS$1(fromModel){var graph=buildGraph$1();var queue=[fromModel];// Unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions$1[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link$1(from,to){return function(args){return to(from(args));};}function wrapConversion$1(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions$1[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link$1(conversions$1[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route$1=function route(fromModel){var graph=deriveBFS$1(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// No possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion$1(toModel,graph);}return conversion;};var convert$2={};var models$1=Object.keys(conversions$1);function wrapRaw$1(fn){var wrappedFn=function wrappedFn(){for(var _len3=arguments.length,args=new Array(_len3),_key5=0;_key5<_len3;_key5++){args[_key5]=arguments[_key5];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}return fn(args);};// Preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded$1(fn){var wrappedFn=function wrappedFn(){for(var _len4=arguments.length,args=new Array(_len4),_key6=0;_key6<_len4;_key6++){args[_key6]=arguments[_key6];}var arg0=args[0];if(arg0===undefined||arg0===null){return arg0;}if(arg0.length>1){args=arg0;}var result=fn(args);// We\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// Preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models$1.forEach(function(fromModel){convert$2[fromModel]={};Object.defineProperty(convert$2[fromModel],\'channels\',{value:conversions$1[fromModel].channels});Object.defineProperty(convert$2[fromModel],\'labels\',{value:conversions$1[fromModel].labels});var routes=route$1(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert$2[fromModel][toModel]=wrapRounded$1(fn);convert$2[fromModel][toModel].raw=wrapRaw$1(fn);});});var colorConvert$1=convert$2;var ansiStyles$1=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(void 0,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(void 0,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(void 0,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};var setLazyProperty=function setLazyProperty(object,property,_get){Object.defineProperty(object,property,{get:function get(){var value=_get();Object.defineProperty(object,property,{value:value,enumerable:true,configurable:true});return value;},enumerable:true,configurable:true});};/** @type {typeof import(\'color-convert\')} */var colorConvert;var makeDynamicStyles=function makeDynamicStyles(wrap,targetSpace,identity,isBackground){if(colorConvert===undefined){colorConvert=colorConvert$1;}var offset=isBackground?10:0;var styles={};for(var _i15=0,_Object$entries=Object.entries(colorConvert);_i15<_Object$entries.length;_i15++){var _Object$entries$_i=(0,_slicedToArray2.default)(_Object$entries[_i15],2),sourceSpace=_Object$entries$_i[0],suite=_Object$entries$_i[1];var _name2=sourceSpace===\'ansi16\'?\'ansi\':sourceSpace;if(sourceSpace===targetSpace){styles[_name2]=wrap(identity,offset);}else if((0,_typeof3.default)(suite)===\'object\'){styles[_name2]=wrap(suite[targetSpace],offset);}}return styles;};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],// Bright color\nblackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Alias bright black as gray (and grey)\nstyles.color.gray=styles.color.blackBright;styles.bgColor.bgGray=styles.bgColor.bgBlackBright;styles.color.grey=styles.color.blackBright;styles.bgColor.bgGrey=styles.bgColor.bgBlackBright;for(var _i16=0,_Object$entries2=Object.entries(styles);_i16<_Object$entries2.length;_i16++){var _Object$entries2$_i=(0,_slicedToArray2.default)(_Object$entries2[_i16],2),groupName=_Object$entries2$_i[0],_group2=_Object$entries2$_i[1];for(var _i17=0,_Object$entries3=Object.entries(_group2);_i17<_Object$entries3.length;_i17++){var _Object$entries3$_i=(0,_slicedToArray2.default)(_Object$entries3[_i17],2),styleName=_Object$entries3$_i[0],_style3=_Object$entries3$_i[1];styles[styleName]={open:"\\x1B[".concat(_style3[0],"m"),close:"\\x1B[".concat(_style3[1],"m")};_group2[styleName]=styles[styleName];codes.set(_style3[0],_style3[1]);}Object.defineProperty(styles,groupName,{value:_group2,enumerable:false});}Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";setLazyProperty(styles.color,\'ansi\',function(){return makeDynamicStyles(wrapAnsi16,\'ansi16\',ansi2ansi,false);});setLazyProperty(styles.color,\'ansi256\',function(){return makeDynamicStyles(wrapAnsi256,\'ansi256\',ansi2ansi,false);});setLazyProperty(styles.color,\'ansi16m\',function(){return makeDynamicStyles(wrapAnsi16m,\'rgb\',rgb2rgb,false);});setLazyProperty(styles.bgColor,\'ansi\',function(){return makeDynamicStyles(wrapAnsi16,\'ansi16\',ansi2ansi,true);});setLazyProperty(styles.bgColor,\'ansi256\',function(){return makeDynamicStyles(wrapAnsi256,\'ansi256\',ansi2ansi,true);});setLazyProperty(styles.bgColor,\'ansi16m\',function(){return makeDynamicStyles(wrapAnsi16m,\'rgb\',rgb2rgb,true);});return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var tty={isatty:function isatty(){return false;}};var hasFlag$1=function hasFlag$1(flag){var argv=arguments.length>1&&arguments[1]!==undefined?arguments[1]:process.argv;var prefix=flag.startsWith(\'-\')?\'\':flag.length===1?\'-\':\'--\';var position=argv.indexOf(prefix+flag);var terminatorPosition=argv.indexOf(\'--\');return position!==-1&&(terminatorPosition===-1||position<terminatorPosition);};var env$2=process.env;var forceColor$1;if(hasFlag$1(\'no-color\')||hasFlag$1(\'no-colors\')||hasFlag$1(\'color=false\')||hasFlag$1(\'color=never\')){forceColor$1=0;}else if(hasFlag$1(\'color\')||hasFlag$1(\'colors\')||hasFlag$1(\'color=true\')||hasFlag$1(\'color=always\')){forceColor$1=1;}if(\'FORCE_COLOR\'in env$2){if(env$2.FORCE_COLOR===\'true\'){forceColor$1=1;}else if(env$2.FORCE_COLOR===\'false\'){forceColor$1=0;}else{forceColor$1=env$2.FORCE_COLOR.length===0?1:Math.min(parseInt(env$2.FORCE_COLOR,10),3);}}function translateLevel$1(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor$1(haveStream,streamIsTTY){if(forceColor$1===0){return 0;}if(hasFlag$1(\'color=16m\')||hasFlag$1(\'color=full\')||hasFlag$1(\'color=truecolor\')){return 3;}if(hasFlag$1(\'color=256\')){return 2;}if(haveStream&&!streamIsTTY&&forceColor$1===undefined){return 0;}var min=forceColor$1||0;if(env$2.TERM===\'dumb\'){return min;}if(process.platform===\'win32\'){// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$2){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$2;})||env$2.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$2){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$2.TEAMCITY_VERSION)?1:0;}if(\'GITHUB_ACTIONS\'in env$2){return 1;}if(env$2.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$2){var _version2=parseInt((env$2.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$2.TERM_PROGRAM){case\'iTerm.app\':return _version2>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$2.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$2.TERM)){return 1;}if(\'COLORTERM\'in env$2){return 1;}return min;}function getSupportLevel$1(stream){var level=supportsColor$1(stream,stream&&stream.isTTY);return translateLevel$1(level);}var supportsColor_1$1={supportsColor:getSupportLevel$1,stdout:translateLevel$1(supportsColor$1(true,tty.isatty(1))),stderr:translateLevel$1(supportsColor$1(true,tty.isatty(2)))};var stringReplaceAll=function stringReplaceAll(string,substring,replacer){var index=string.indexOf(substring);if(index===-1){return string;}var substringLength=substring.length;var endIndex=0;var returnValue=\'\';do{returnValue+=string.substr(endIndex,index-endIndex)+substring+replacer;endIndex=index+substringLength;index=string.indexOf(substring,endIndex);}while(index!==-1);returnValue+=string.substr(endIndex);return returnValue;};var stringEncaseCRLFWithFirstIndex=function stringEncaseCRLFWithFirstIndex(string,prefix,postfix,index){var endIndex=0;var returnValue=\'\';do{var gotCR=string[index-1]===\'\\r\';returnValue+=string.substr(endIndex,(gotCR?index-1:index)-endIndex)+prefix+(gotCR?\'\\r\\n\':\'\\n\')+postfix;endIndex=index+1;index=string.indexOf(\'\\n\',endIndex);}while(index!==-1);returnValue+=string.substr(endIndex);return returnValue;};var util={stringReplaceAll:stringReplaceAll,stringEncaseCRLFWithFirstIndex:stringEncaseCRLFWithFirstIndex};var TEMPLATE_REGEX$1=/(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX$1=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX$1=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX$1=/\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES$1=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape$1(c){var u=c[0]===\'u\';var bracket=c[1]===\'{\';if(u&&!bracket&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}if(u&&bracket){return String.fromCodePoint(parseInt(c.slice(2,-1),16));}return ESCAPES$1.get(c)||c;}function parseArguments$1(name,arguments_){var results=[];var chunks=arguments_.trim().split(/\\s*,\\s*/g);var matches;var _iterator17=_createForOfIteratorHelper(chunks),_step17;try{for(_iterator17.s();!(_step17=_iterator17.n()).done;){var chunk=_step17.value;var _number=Number(chunk);if(!Number.isNaN(_number)){results.push(_number);}else if(matches=chunk.match(STRING_REGEX$1)){results.push(matches[2].replace(ESCAPE_REGEX$1,function(m,escape,character){return escape?unescape$1(escape):character;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator17.e(err);}finally{_iterator17.f();}return results;}function parseStyle$1(style){STYLE_REGEX$1.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX$1.exec(style))!==null){var _name3=matches[1];if(matches[2]){var args=parseArguments$1(_name3,matches[2]);results.push([_name3].concat(args));}else{results.push([_name3]);}}return results;}function buildStyle$1(chalk,styles){var enabled={};var _iterator18=_createForOfIteratorHelper(styles),_step18;try{for(_iterator18.s();!(_step18=_iterator18.n()).done;){var layer=_step18.value;var _iterator19=_createForOfIteratorHelper(layer.styles),_step19;try{for(_iterator19.s();!(_step19=_iterator19.n()).done;){var _style4=_step19.value;enabled[_style4[0]]=layer.inverse?null:_style4.slice(1);}}catch(err){_iterator19.e(err);}finally{_iterator19.f();}}}catch(err){_iterator18.e(err);}finally{_iterator18.f();}var current=chalk;for(var _i18=0,_Object$entries4=Object.entries(enabled);_i18<_Object$entries4.length;_i18++){var _current;var _Object$entries4$_i=(0,_slicedToArray2.default)(_Object$entries4[_i18],2),styleName=_Object$entries4$_i[0],_styles2=_Object$entries4$_i[1];if(!Array.isArray(_styles2)){continue;}if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}current=_styles2.length>0?(_current=current)[styleName].apply(_current,(0,_toConsumableArray3.default)(_styles2)):current[styleName];}return current;}var templates$1=function templates$1(chalk,temporary){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntemporary.replace(TEMPLATE_REGEX$1,function(m,escapeCharacter,inverse,style,close,character){if(escapeCharacter){chunk.push(unescape$1(escapeCharacter));}else if(style){var _string=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?_string:buildStyle$1(chalk,styles)(_string));styles.push({inverse:inverse,styles:parseStyle$1(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle$1(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(character);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMessage="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMessage);}return chunks.join(\'\');};var stdoutColor=supportsColor_1$1.stdout,stderrColor=supportsColor_1$1.stderr;var stringReplaceAll$1=util.stringReplaceAll,stringEncaseCRLFWithFirstIndex$1=util.stringEncaseCRLFWithFirstIndex;// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];var styles=Object.create(null);var applyOptions=function applyOptions(object){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(options.level&&!(Number.isInteger(options.level)&&options.level>=0&&options.level<=3)){throw new Error(\'The `level` option should be an integer from 0 to 3\');}// Detect level if not set manually\nvar colorLevel=stdoutColor?stdoutColor.level:0;object.level=options.level===undefined?colorLevel:options.level;};var ChalkClass=function ChalkClass(options){(0,_classCallCheck2.default)(this,ChalkClass);// eslint-disable-next-line no-constructor-return\nreturn chalkFactory(options);};var chalkFactory=function chalkFactory(options){var chalk={};applyOptions(chalk,options);chalk.template=function(){for(var _len5=arguments.length,arguments_=new Array(_len5),_key7=0;_key7<_len5;_key7++){arguments_[_key7]=arguments[_key7];}return chalkTag.apply(void 0,[chalk.template].concat(arguments_));};Object.setPrototypeOf(chalk,Chalk.prototype);Object.setPrototypeOf(chalk.template,chalk);chalk.template.constructor=function(){throw new Error(\'`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.\');};chalk.template.Instance=ChalkClass;return chalk.template;};function Chalk(options){return chalkFactory(options);}var _loop6=function _loop6(){var _Object$entries5$_i=(0,_slicedToArray2.default)(_Object$entries5[_i19],2),styleName=_Object$entries5$_i[0],style=_Object$entries5$_i[1];styles[styleName]={get:function get(){var builder=createBuilder(this,createStyler(style.open,style.close,this._styler),this._isEmpty);Object.defineProperty(this,styleName,{value:builder});return builder;}};};for(var _i19=0,_Object$entries5=Object.entries(ansiStyles$1);_i19<_Object$entries5.length;_i19++){_loop6();}styles.visible={get:function get(){var builder=createBuilder(this,this._styler,true);Object.defineProperty(this,\'visible\',{value:builder});return builder;}};var usedModels=[\'rgb\',\'hex\',\'keyword\',\'hsl\',\'hsv\',\'hwb\',\'ansi\',\'ansi256\'];var _loop7=function _loop7(){var model=_usedModels[_i20];styles[model]={get:function get(){var level=this.level;return function(){var _ansiStyles$1$color$l;var styler=createStyler((_ansiStyles$1$color$l=ansiStyles$1.color[levelMapping[level]])[model].apply(_ansiStyles$1$color$l,arguments),ansiStyles$1.color.close,this._styler);return createBuilder(this,styler,this._isEmpty);};}};};for(var _i20=0,_usedModels=usedModels;_i20<_usedModels.length;_i20++){_loop7();}var _loop8=function _loop8(){var model=_usedModels2[_i21];var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var _ansiStyles$1$bgColor;var styler=createStyler((_ansiStyles$1$bgColor=ansiStyles$1.bgColor[levelMapping[level]])[model].apply(_ansiStyles$1$bgColor,arguments),ansiStyles$1.bgColor.close,this._styler);return createBuilder(this,styler,this._isEmpty);};}};};for(var _i21=0,_usedModels2=usedModels;_i21<_usedModels2.length;_i21++){_loop8();}var proto=Object.defineProperties(function(){},Object.assign({},styles,{level:{enumerable:true,get:function get(){return this._generator.level;},set:function set(level){this._generator.level=level;}}}));var createStyler=function createStyler(open,close,parent){var openAll;var closeAll;if(parent===undefined){openAll=open;closeAll=close;}else{openAll=parent.openAll+open;closeAll=close+parent.closeAll;}return{open:open,close:close,openAll:openAll,closeAll:closeAll,parent:parent};};var createBuilder=function createBuilder(self,_styler,_isEmpty){var builder=function builder(){for(var _len6=arguments.length,arguments_=new Array(_len6),_key8=0;_key8<_len6;_key8++){arguments_[_key8]=arguments[_key8];}// Single argument is hot path, implicit coercion is faster than anything\n// eslint-disable-next-line no-implicit-coercion\nreturn applyStyle(builder,arguments_.length===1?\'\'+arguments_[0]:arguments_.join(\' \'));};// We alter the prototype because we must return a function, but there is\n// no way to create a function with a different prototype\nObject.setPrototypeOf(builder,proto);builder._generator=self;builder._styler=_styler;builder._isEmpty=_isEmpty;return builder;};var applyStyle=function applyStyle(self,string){if(self.level<=0||!string){return self._isEmpty?\'\':string;}var styler=self._styler;if(styler===undefined){return string;}var _styler2=styler,openAll=_styler2.openAll,closeAll=_styler2.closeAll;if(string.indexOf("\\x1B")!==-1){while(styler!==undefined){// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstring=stringReplaceAll$1(string,styler.close,styler.open);styler=styler.parent;}}// We can move both next actions out of loop, because remaining actions in loop won\'t have\n// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\nvar lfIndex=string.indexOf(\'\\n\');if(lfIndex!==-1){string=stringEncaseCRLFWithFirstIndex$1(string,closeAll,openAll,lfIndex);}return openAll+string+closeAll;};var template;var chalkTag=function chalkTag(chalk){for(var _len7=arguments.length,strings=new Array(_len7>1?_len7-1:0),_key9=1;_key9<_len7;_key9++){strings[_key9-1]=arguments[_key9];}var firstString=strings[0];if(!Array.isArray(firstString)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn strings.join(\' \');}var arguments_=strings.slice(1);var parts=[firstString.raw[0]];for(var i=1;i<firstString.length;i++){parts.push(String(arguments_[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'),String(firstString.raw[i]));}if(template===undefined){template=templates$1;}return template(chalk,parts.join(\'\'));};Object.defineProperties(Chalk.prototype,styles);var chalk$1=Chalk();// eslint-disable-line new-cap\nchalk$1.supportsColor=stdoutColor;chalk$1.stderr=Chalk({level:stderrColor?stderrColor.level:0});// eslint-disable-line new-cap\nchalk$1.stderr.supportsColor=stderrColor;var source=chalk$1;var cliDescriptor={key:function key(_key){return _key.length===1?"-".concat(_key):"--".concat(_key);},value:function value(_value){return lib.apiDescriptor.value(_value);},pair:function pair(_ref16){var key=_ref16.key,value=_ref16.value;return value===false?"--no-".concat(key):value===true?cliDescriptor.key(key):value===""?"".concat(cliDescriptor.key(key)," without an argument"):"".concat(cliDescriptor.key(key),"=").concat(value);}};var FlagSchema=/*#__PURE__*/function(_lib$ChoiceSchema){(0,_inherits2.default)(FlagSchema,_lib$ChoiceSchema);var _super12=_createSuper(FlagSchema);function FlagSchema(_ref17){var _this7;var name=_ref17.name,flags=_ref17.flags;(0,_classCallCheck2.default)(this,FlagSchema);_this7=_super12.call(this,{name:name,choices:flags});_this7._flags=flags.slice().sort();return _this7;}(0,_createClass2.default)(FlagSchema,[{key:"preprocess",value:function preprocess(value,utils){if(typeof value==="string"&&value.length!==0&&!this._flags.includes(value)){var suggestion=this._flags.find(function(flag){return leven_1$1(flag,value)<3;});if(suggestion){utils.logger.warn(["Unknown flag ".concat(source.yellow(utils.descriptor.value(value)),","),"did you mean ".concat(source.blue(utils.descriptor.value(suggestion)),"?")].join(" "));return suggestion;}}return value;}},{key:"expected",value:function expected(){return"a flag";}}]);return FlagSchema;}(lib.ChoiceSchema);var hasDeprecationWarned;function normalizeOptions(options,optionInfos){var _ref18=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},logger=_ref18.logger,_ref18$isCLI=_ref18.isCLI,isCLI=_ref18$isCLI===void 0?false:_ref18$isCLI,_ref18$passThrough=_ref18.passThrough,passThrough=_ref18$passThrough===void 0?false:_ref18$passThrough;var unknown=!passThrough?lib.levenUnknownHandler:Array.isArray(passThrough)?function(key,value){return!passThrough.includes(key)?undefined:(0,_defineProperty2.default)({},key,value);}:function(key,value){return(0,_defineProperty2.default)({},key,value);};var descriptor=isCLI?cliDescriptor:lib.apiDescriptor;var schemas=optionInfosToSchemas(optionInfos,{isCLI:isCLI});var normalizer=new lib.Normalizer(schemas,{logger:logger,unknown:unknown,descriptor:descriptor});var shouldSuppressDuplicateDeprecationWarnings=logger!==false;if(shouldSuppressDuplicateDeprecationWarnings&&hasDeprecationWarned){normalizer._hasDeprecationWarned=hasDeprecationWarned;}var normalized=normalizer.normalize(options);if(shouldSuppressDuplicateDeprecationWarnings){hasDeprecationWarned=normalizer._hasDeprecationWarned;}return normalized;}function optionInfosToSchemas(optionInfos,_ref21){var isCLI=_ref21.isCLI;var schemas=[];if(isCLI){schemas.push(lib.AnySchema.create({name:"_"}));}var _iterator20=_createForOfIteratorHelper(optionInfos),_step20;try{for(_iterator20.s();!(_step20=_iterator20.n()).done;){var optionInfo=_step20.value;schemas.push(optionInfoToSchema(optionInfo,{isCLI:isCLI,optionInfos:optionInfos}));if(optionInfo.alias&&isCLI){schemas.push(lib.AliasSchema.create({name:optionInfo.alias,sourceName:optionInfo.name}));}}}catch(err){_iterator20.e(err);}finally{_iterator20.f();}return schemas;}function optionInfoToSchema(optionInfo,_ref22){var isCLI=_ref22.isCLI,optionInfos=_ref22.optionInfos;var SchemaConstructor;var parameters={name:optionInfo.name};var handlers={};switch(optionInfo.type){case"int":SchemaConstructor=lib.IntegerSchema;if(isCLI){parameters.preprocess=function(value){return Number(value);};}break;case"string":SchemaConstructor=lib.StringSchema;break;case"choice":SchemaConstructor=lib.ChoiceSchema;parameters.choices=optionInfo.choices.map(function(choiceInfo){return(0,_typeof3.default)(choiceInfo)==="object"&&choiceInfo.redirect?Object.assign({},choiceInfo,{redirect:{to:{key:optionInfo.name,value:choiceInfo.redirect}}}):choiceInfo;});break;case"boolean":SchemaConstructor=lib.BooleanSchema;break;case"flag":SchemaConstructor=FlagSchema;parameters.flags=optionInfos.map(function(optionInfo){return[].concat(optionInfo.alias||[],optionInfo.description?optionInfo.name:[],optionInfo.oppositeDescription?"no-".concat(optionInfo.name):[]);}).reduce(function(a,b){return a.concat(b);},[]);break;case"path":SchemaConstructor=lib.StringSchema;break;default:throw new Error("Unexpected type ".concat(optionInfo.type));}if(optionInfo.exception){parameters.validate=function(value,schema,utils){return optionInfo.exception(value)||schema.validate(value,utils);};}else{parameters.validate=function(value,schema,utils){return value===undefined||schema.validate(value,utils);};}if(optionInfo.redirect){handlers.redirect=function(value){return!value?undefined:{to:{key:optionInfo.redirect.option,value:optionInfo.redirect.value}};};}if(optionInfo.deprecated){handlers.deprecated=true;}// allow CLI overriding, e.g., prettier package.json --tab-width 1 --tab-width 2\nif(isCLI&&!optionInfo.array){var originalPreprocess=parameters.preprocess||function(x){return x;};parameters.preprocess=function(value,schema,utils){return schema.preprocess(originalPreprocess(Array.isArray(value)?value[value.length-1]:value),utils);};}return optionInfo.array?lib.ArraySchema.create(Object.assign({},isCLI?{preprocess:function preprocess(v){return[].concat(v);}}:{},{},handlers,{valueSchema:SchemaConstructor.create(parameters)})):SchemaConstructor.create(Object.assign({},parameters,{},handlers));}function normalizeApiOptions(options,optionInfos,opts){return normalizeOptions(options,optionInfos,opts);}function normalizeCliOptions(options,optionInfos,opts){return normalizeOptions(options,optionInfos,Object.assign({isCLI:true},opts));}var optionsNormalizer={normalizeApiOptions:normalizeApiOptions,normalizeCliOptions:normalizeCliOptions};var getLast=function getLast(arr){return arr[arr.length-1];};function locStart(node,opts){opts=opts||{};// Handle nodes with decorators. They should start at the first decorator\nif(!opts.ignoreDecorators&&node.declaration&&node.declaration.decorators&&node.declaration.decorators.length>0){return locStart(node.declaration.decorators[0]);}if(!opts.ignoreDecorators&&node.decorators&&node.decorators.length>0){return locStart(node.decorators[0]);}if(node.__location){return node.__location.startOffset;}if(node.range){return node.range[0];}if(typeof node.start==="number"){return node.start;}if(node.loc){return node.loc.start;}return null;}function locEnd(node){var endNode=node.nodes&&getLast(node.nodes);if(endNode&&node.source&&!node.source.end){node=endNode;}if(node.__location){return node.__location.endOffset;}var loc=node.range?node.range[1]:typeof node.end==="number"?node.end:null;if(node.typeAnnotation){return Math.max(loc,locEnd(node.typeAnnotation));}if(node.loc&&!loc){return node.loc.end;}return loc;}function composeLoc(startNode){var endNodeOrLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:startNode;var length=typeof endNodeOrLength==="number"?endNodeOrLength:-1;var start=locStart(startNode);var end=length!==-1?start+length:locEnd(endNodeOrLength);var startLoc=startNode.loc.start;return{start:start,end:end,range:[start,end],loc:{start:startLoc,end:length!==-1?{line:startLoc.line,column:startLoc.column+length}:endNodeOrLength.loc.end}};}var loc={locStart:locStart,locEnd:locEnd,composeLoc:composeLoc};var jsTokens=createCommonjsModule(function(module,exports){// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell\n// License: MIT. (See LICENSE.)\nObject.defineProperty(exports,"__esModule",{value:true});// This regex comes from regex.coffee, and is inserted here by generate-index.js\n// (run `npm run build`).\nexports.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g;exports.matchToToken=function(match){var token={type:"invalid",value:match[0],closed:undefined};if(match[1])token.type="string",token.closed=!!(match[3]||match[4]);else if(match[5])token.type="comment";else if(match[6])token.type="comment",token.closed=!!match[7];else if(match[8])token.type="regex";else if(match[9])token.type="number";else if(match[10])token.type="name";else if(match[11])token.type="punctuator";else if(match[12])token.type="whitespace";return token;};});unwrapExports(jsTokens);var jsTokens_1=jsTokens.matchToToken;var ast=createCommonjsModule(function(module){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \'AS IS\'\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){function isExpression(node){if(node==null){return false;}switch(node.type){case\'ArrayExpression\':case\'AssignmentExpression\':case\'BinaryExpression\':case\'CallExpression\':case\'ConditionalExpression\':case\'FunctionExpression\':case\'Identifier\':case\'Literal\':case\'LogicalExpression\':case\'MemberExpression\':case\'NewExpression\':case\'ObjectExpression\':case\'SequenceExpression\':case\'ThisExpression\':case\'UnaryExpression\':case\'UpdateExpression\':return true;}return false;}function isIterationStatement(node){if(node==null){return false;}switch(node.type){case\'DoWhileStatement\':case\'ForInStatement\':case\'ForStatement\':case\'WhileStatement\':return true;}return false;}function isStatement(node){if(node==null){return false;}switch(node.type){case\'BlockStatement\':case\'BreakStatement\':case\'ContinueStatement\':case\'DebuggerStatement\':case\'DoWhileStatement\':case\'EmptyStatement\':case\'ExpressionStatement\':case\'ForInStatement\':case\'ForStatement\':case\'IfStatement\':case\'LabeledStatement\':case\'ReturnStatement\':case\'SwitchStatement\':case\'ThrowStatement\':case\'TryStatement\':case\'VariableDeclaration\':case\'WhileStatement\':case\'WithStatement\':return true;}return false;}function isSourceElement(node){return isStatement(node)||node!=null&&node.type===\'FunctionDeclaration\';}function trailingStatement(node){switch(node.type){case\'IfStatement\':if(node.alternate!=null){return node.alternate;}return node.consequent;case\'LabeledStatement\':case\'ForStatement\':case\'ForInStatement\':case\'WhileStatement\':case\'WithStatement\':return node.body;}return null;}function isProblematicIfStatement(node){var current;if(node.type!==\'IfStatement\'){return false;}if(node.alternate==null){return false;}current=node.consequent;do{if(current.type===\'IfStatement\'){if(current.alternate==null){return true;}}current=trailingStatement(current);}while(current);return false;}module.exports={isExpression:isExpression,isStatement:isStatement,isIterationStatement:isIterationStatement,isSourceElement:isSourceElement,isProblematicIfStatement:isProblematicIfStatement,trailingStatement:trailingStatement};})();/* vim: set sw=4 ts=4 et tw=80 : */});var ast_1=ast.isExpression;var ast_2=ast.isStatement;var ast_3=ast.isIterationStatement;var ast_4=ast.isSourceElement;var ast_5=ast.isProblematicIfStatement;var ast_6=ast.trailingStatement;var code=createCommonjsModule(function(module){/*\n      Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n      Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,ch;// See `tools/generate-identifier-regex.js`.\nES5Regex={// ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\nNonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,// ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\nNonAsciiIdentifierPart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/};ES6Regex={// ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\nNonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,// ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\nNonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/};function isDecimalDigit(ch){return 0x30<=ch&&ch<=0x39;// 0..9\n}function isHexDigit(ch){return 0x30<=ch&&ch<=0x39||// 0..9\n0x61<=ch&&ch<=0x66||// a..f\n0x41<=ch&&ch<=0x46;// A..F\n}function isOctalDigit(ch){return ch>=0x30&&ch<=0x37;// 0..7\n}// 7.2 White Space\nNON_ASCII_WHITESPACES=[0x1680,0x2000,0x2001,0x2002,0x2003,0x2004,0x2005,0x2006,0x2007,0x2008,0x2009,0x200A,0x202F,0x205F,0x3000,0xFEFF];function isWhiteSpace(ch){return ch===0x20||ch===0x09||ch===0x0B||ch===0x0C||ch===0xA0||ch>=0x1680&&NON_ASCII_WHITESPACES.indexOf(ch)>=0;}// 7.3 Line Terminators\nfunction isLineTerminator(ch){return ch===0x0A||ch===0x0D||ch===0x2028||ch===0x2029;}// 7.6 Identifier Names and Identifiers\nfunction fromCodePoint(cp){if(cp<=0xFFFF){return String.fromCharCode(cp);}var cu1=String.fromCharCode(Math.floor((cp-0x10000)/0x400)+0xD800);var cu2=String.fromCharCode((cp-0x10000)%0x400+0xDC00);return cu1+cu2;}IDENTIFIER_START=new Array(0x80);for(ch=0;ch<0x80;++ch){IDENTIFIER_START[ch]=ch>=0x61&&ch<=0x7A||// a..z\nch>=0x41&&ch<=0x5A||// A..Z\nch===0x24||ch===0x5F;// $ (dollar) and _ (underscore)\n}IDENTIFIER_PART=new Array(0x80);for(ch=0;ch<0x80;++ch){IDENTIFIER_PART[ch]=ch>=0x61&&ch<=0x7A||// a..z\nch>=0x41&&ch<=0x5A||// A..Z\nch>=0x30&&ch<=0x39||// 0..9\nch===0x24||ch===0x5F;// $ (dollar) and _ (underscore)\n}function isIdentifierStartES5(ch){return ch<0x80?IDENTIFIER_START[ch]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));}function isIdentifierPartES5(ch){return ch<0x80?IDENTIFIER_PART[ch]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));}function isIdentifierStartES6(ch){return ch<0x80?IDENTIFIER_START[ch]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));}function isIdentifierPartES6(ch){return ch<0x80?IDENTIFIER_PART[ch]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));}module.exports={isDecimalDigit:isDecimalDigit,isHexDigit:isHexDigit,isOctalDigit:isOctalDigit,isWhiteSpace:isWhiteSpace,isLineTerminator:isLineTerminator,isIdentifierStartES5:isIdentifierStartES5,isIdentifierPartES5:isIdentifierPartES5,isIdentifierStartES6:isIdentifierStartES6,isIdentifierPartES6:isIdentifierPartES6};})();/* vim: set sw=4 ts=4 et tw=80 : */});var code_1=code.isDecimalDigit;var code_2=code.isHexDigit;var code_3=code.isOctalDigit;var code_4=code.isWhiteSpace;var code_5=code.isLineTerminator;var code_6=code.isIdentifierStartES5;var code_7=code.isIdentifierPartES5;var code_8=code.isIdentifierStartES6;var code_9=code.isIdentifierPartES6;var keyword=createCommonjsModule(function(module){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){var code$1=code;function isStrictModeReservedWordES6(id){switch(id){case\'implements\':case\'interface\':case\'package\':case\'private\':case\'protected\':case\'public\':case\'static\':case\'let\':return true;default:return false;}}function isKeywordES5(id,strict){// yield should not be treated as keyword under non-strict mode.\nif(!strict&&id===\'yield\'){return false;}return isKeywordES6(id,strict);}function isKeywordES6(id,strict){if(strict&&isStrictModeReservedWordES6(id)){return true;}switch(id.length){case 2:return id===\'if\'||id===\'in\'||id===\'do\';case 3:return id===\'var\'||id===\'for\'||id===\'new\'||id===\'try\';case 4:return id===\'this\'||id===\'else\'||id===\'case\'||id===\'void\'||id===\'with\'||id===\'enum\';case 5:return id===\'while\'||id===\'break\'||id===\'catch\'||id===\'throw\'||id===\'const\'||id===\'yield\'||id===\'class\'||id===\'super\';case 6:return id===\'return\'||id===\'typeof\'||id===\'delete\'||id===\'switch\'||id===\'export\'||id===\'import\';case 7:return id===\'default\'||id===\'finally\'||id===\'extends\';case 8:return id===\'function\'||id===\'continue\'||id===\'debugger\';case 10:return id===\'instanceof\';default:return false;}}function isReservedWordES5(id,strict){return id===\'null\'||id===\'true\'||id===\'false\'||isKeywordES5(id,strict);}function isReservedWordES6(id,strict){return id===\'null\'||id===\'true\'||id===\'false\'||isKeywordES6(id,strict);}function isRestrictedWord(id){return id===\'eval\'||id===\'arguments\';}function isIdentifierNameES5(id){var i,iz,ch;if(id.length===0){return false;}ch=id.charCodeAt(0);if(!code$1.isIdentifierStartES5(ch)){return false;}for(i=1,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(!code$1.isIdentifierPartES5(ch)){return false;}}return true;}function decodeUtf16(lead,trail){return(lead-0xD800)*0x400+(trail-0xDC00)+0x10000;}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(id.length===0){return false;}check=code$1.isIdentifierStartES6;for(i=0,iz=id.length;i<iz;++i){ch=id.charCodeAt(i);if(0xD800<=ch&&ch<=0xDBFF){++i;if(i>=iz){return false;}lowCh=id.charCodeAt(i);if(!(0xDC00<=lowCh&&lowCh<=0xDFFF)){return false;}ch=decodeUtf16(ch,lowCh);}if(!check(ch)){return false;}check=code$1.isIdentifierPartES6;}return true;}function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict);}function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict);}module.exports={isKeywordES5:isKeywordES5,isKeywordES6:isKeywordES6,isReservedWordES5:isReservedWordES5,isReservedWordES6:isReservedWordES6,isRestrictedWord:isRestrictedWord,isIdentifierNameES5:isIdentifierNameES5,isIdentifierNameES6:isIdentifierNameES6,isIdentifierES5:isIdentifierES5,isIdentifierES6:isIdentifierES6};})();/* vim: set sw=4 ts=4 et tw=80 : */});var keyword_1=keyword.isKeywordES5;var keyword_2=keyword.isKeywordES6;var keyword_3=keyword.isReservedWordES5;var keyword_4=keyword.isReservedWordES6;var keyword_5=keyword.isRestrictedWord;var keyword_6=keyword.isIdentifierNameES5;var keyword_7=keyword.isIdentifierNameES6;var keyword_8=keyword.isIdentifierES5;var keyword_9=keyword.isIdentifierES6;var utils$1=createCommonjsModule(function(module,exports){/*\n      Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n    \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n    \n        * Redistributions of source code must retain the above copyright\n          notice, this list of conditions and the following disclaimer.\n        * Redistributions in binary form must reproduce the above copyright\n          notice, this list of conditions and the following disclaimer in the\n          documentation and/or other materials provided with the distribution.\n    \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n      ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n      DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n      ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n      THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n    */(function(){exports.ast=ast;exports.code=code;exports.keyword=keyword;})();/* vim: set sw=4 ts=4 et tw=80 : */});var utils_1$1=utils$1.ast;var utils_2$1=utils$1.code;var utils_3$1=utils$1.keyword;var matchOperatorsRe$1=/[|\\\\{}()[\\]^$+*?.]/g;var escapeStringRegexp$1=function escapeStringRegexp(str){if(typeof str!==\'string\'){throw new TypeError(\'Expected a string\');}return str.replace(matchOperatorsRe$1,\'\\\\$&\');};var colorName$2={"aliceblue":[240,248,255],"antiquewhite":[250,235,215],"aqua":[0,255,255],"aquamarine":[127,255,212],"azure":[240,255,255],"beige":[245,245,220],"bisque":[255,228,196],"black":[0,0,0],"blanchedalmond":[255,235,205],"blue":[0,0,255],"blueviolet":[138,43,226],"brown":[165,42,42],"burlywood":[222,184,135],"cadetblue":[95,158,160],"chartreuse":[127,255,0],"chocolate":[210,105,30],"coral":[255,127,80],"cornflowerblue":[100,149,237],"cornsilk":[255,248,220],"crimson":[220,20,60],"cyan":[0,255,255],"darkblue":[0,0,139],"darkcyan":[0,139,139],"darkgoldenrod":[184,134,11],"darkgray":[169,169,169],"darkgreen":[0,100,0],"darkgrey":[169,169,169],"darkkhaki":[189,183,107],"darkmagenta":[139,0,139],"darkolivegreen":[85,107,47],"darkorange":[255,140,0],"darkorchid":[153,50,204],"darkred":[139,0,0],"darksalmon":[233,150,122],"darkseagreen":[143,188,143],"darkslateblue":[72,61,139],"darkslategray":[47,79,79],"darkslategrey":[47,79,79],"darkturquoise":[0,206,209],"darkviolet":[148,0,211],"deeppink":[255,20,147],"deepskyblue":[0,191,255],"dimgray":[105,105,105],"dimgrey":[105,105,105],"dodgerblue":[30,144,255],"firebrick":[178,34,34],"floralwhite":[255,250,240],"forestgreen":[34,139,34],"fuchsia":[255,0,255],"gainsboro":[220,220,220],"ghostwhite":[248,248,255],"gold":[255,215,0],"goldenrod":[218,165,32],"gray":[128,128,128],"green":[0,128,0],"greenyellow":[173,255,47],"grey":[128,128,128],"honeydew":[240,255,240],"hotpink":[255,105,180],"indianred":[205,92,92],"indigo":[75,0,130],"ivory":[255,255,240],"khaki":[240,230,140],"lavender":[230,230,250],"lavenderblush":[255,240,245],"lawngreen":[124,252,0],"lemonchiffon":[255,250,205],"lightblue":[173,216,230],"lightcoral":[240,128,128],"lightcyan":[224,255,255],"lightgoldenrodyellow":[250,250,210],"lightgray":[211,211,211],"lightgreen":[144,238,144],"lightgrey":[211,211,211],"lightpink":[255,182,193],"lightsalmon":[255,160,122],"lightseagreen":[32,178,170],"lightskyblue":[135,206,250],"lightslategray":[119,136,153],"lightslategrey":[119,136,153],"lightsteelblue":[176,196,222],"lightyellow":[255,255,224],"lime":[0,255,0],"limegreen":[50,205,50],"linen":[250,240,230],"magenta":[255,0,255],"maroon":[128,0,0],"mediumaquamarine":[102,205,170],"mediumblue":[0,0,205],"mediumorchid":[186,85,211],"mediumpurple":[147,112,219],"mediumseagreen":[60,179,113],"mediumslateblue":[123,104,238],"mediumspringgreen":[0,250,154],"mediumturquoise":[72,209,204],"mediumvioletred":[199,21,133],"midnightblue":[25,25,112],"mintcream":[245,255,250],"mistyrose":[255,228,225],"moccasin":[255,228,181],"navajowhite":[255,222,173],"navy":[0,0,128],"oldlace":[253,245,230],"olive":[128,128,0],"olivedrab":[107,142,35],"orange":[255,165,0],"orangered":[255,69,0],"orchid":[218,112,214],"palegoldenrod":[238,232,170],"palegreen":[152,251,152],"paleturquoise":[175,238,238],"palevioletred":[219,112,147],"papayawhip":[255,239,213],"peachpuff":[255,218,185],"peru":[205,133,63],"pink":[255,192,203],"plum":[221,160,221],"powderblue":[176,224,230],"purple":[128,0,128],"rebeccapurple":[102,51,153],"red":[255,0,0],"rosybrown":[188,143,143],"royalblue":[65,105,225],"saddlebrown":[139,69,19],"salmon":[250,128,114],"sandybrown":[244,164,96],"seagreen":[46,139,87],"seashell":[255,245,238],"sienna":[160,82,45],"silver":[192,192,192],"skyblue":[135,206,235],"slateblue":[106,90,205],"slategray":[112,128,144],"slategrey":[112,128,144],"snow":[255,250,250],"springgreen":[0,255,127],"steelblue":[70,130,180],"tan":[210,180,140],"teal":[0,128,128],"thistle":[216,191,216],"tomato":[255,99,71],"turquoise":[64,224,208],"violet":[238,130,238],"wheat":[245,222,179],"white":[255,255,255],"whitesmoke":[245,245,245],"yellow":[255,255,0],"yellowgreen":[154,205,50]};var conversions$2=createCommonjsModule(function(module){/* MIT license */ // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\nvar reverseKeywords={};for(var key in colorName$2){if(colorName$2.hasOwnProperty(key)){reverseKeywords[colorName$2[key]]=key;}}var convert=module.exports={rgb:{channels:3,labels:\'rgb\'},hsl:{channels:3,labels:\'hsl\'},hsv:{channels:3,labels:\'hsv\'},hwb:{channels:3,labels:\'hwb\'},cmyk:{channels:4,labels:\'cmyk\'},xyz:{channels:3,labels:\'xyz\'},lab:{channels:3,labels:\'lab\'},lch:{channels:3,labels:\'lch\'},hex:{channels:1,labels:[\'hex\']},keyword:{channels:1,labels:[\'keyword\']},ansi16:{channels:1,labels:[\'ansi16\']},ansi256:{channels:1,labels:[\'ansi256\']},hcg:{channels:3,labels:[\'h\',\'c\',\'g\']},apple:{channels:3,labels:[\'r16\',\'g16\',\'b16\']},gray:{channels:1,labels:[\'gray\']}};// hide .channels and .labels properties\nfor(var model in convert){if(convert.hasOwnProperty(model)){if(!(\'channels\'in convert[model])){throw new Error(\'missing channels property: \'+model);}if(!(\'labels\'in convert[model])){throw new Error(\'missing channel labels property: \'+model);}if(convert[model].labels.length!==convert[model].channels){throw new Error(\'channel and label counts mismatch: \'+model);}var channels=convert[model].channels;var labels=convert[model].labels;delete convert[model].channels;delete convert[model].labels;Object.defineProperty(convert[model],\'channels\',{value:channels});Object.defineProperty(convert[model],\'labels\',{value:labels});}}convert.rgb.hsl=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var min=Math.min(r,g,b);var max=Math.max(r,g,b);var delta=max-min;var h;var s;var l;if(max===min){h=0;}else if(r===max){h=(g-b)/delta;}else if(g===max){h=2+(b-r)/delta;}else if(b===max){h=4+(r-g)/delta;}h=Math.min(h*60,360);if(h<0){h+=360;}l=(min+max)/2;if(max===min){s=0;}else if(l<=0.5){s=delta/(max+min);}else{s=delta/(2-max-min);}return[h,s*100,l*100];};convert.rgb.hsv=function(rgb){var rdif;var gdif;var bdif;var h;var s;var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var v=Math.max(r,g,b);var diff=v-Math.min(r,g,b);var diffc=function diffc(c){return(v-c)/6/diff+1/2;};if(diff===0){h=s=0;}else{s=diff/v;rdif=diffc(r);gdif=diffc(g);bdif=diffc(b);if(r===v){h=bdif-gdif;}else if(g===v){h=1/3+rdif-bdif;}else if(b===v){h=2/3+gdif-rdif;}if(h<0){h+=1;}else if(h>1){h-=1;}}return[h*360,s*100,v*100];};convert.rgb.hwb=function(rgb){var r=rgb[0];var g=rgb[1];var b=rgb[2];var h=convert.rgb.hsl(rgb)[0];var w=1/255*Math.min(r,Math.min(g,b));b=1-1/255*Math.max(r,Math.max(g,b));return[h,w*100,b*100];};convert.rgb.cmyk=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var c;var m;var y;var k;k=Math.min(1-r,1-g,1-b);c=(1-r-k)/(1-k)||0;m=(1-g-k)/(1-k)||0;y=(1-b-k)/(1-k)||0;return[c*100,m*100,y*100,k*100];};/**\n     * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n     * */function comparativeDistance(x,y){return Math.pow(x[0]-y[0],2)+Math.pow(x[1]-y[1],2)+Math.pow(x[2]-y[2],2);}convert.rgb.keyword=function(rgb){var reversed=reverseKeywords[rgb];if(reversed){return reversed;}var currentClosestDistance=Infinity;var currentClosestKeyword;for(var keyword in colorName$2){if(colorName$2.hasOwnProperty(keyword)){var value=colorName$2[keyword];// Compute comparative distance\nvar distance=comparativeDistance(rgb,value);// Check if its less, if so set as closest\nif(distance<currentClosestDistance){currentClosestDistance=distance;currentClosestKeyword=keyword;}}}return currentClosestKeyword;};convert.keyword.rgb=function(keyword){return colorName$2[keyword];};convert.rgb.xyz=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;// assume sRGB\nr=r>0.04045?Math.pow((r+0.055)/1.055,2.4):r/12.92;g=g>0.04045?Math.pow((g+0.055)/1.055,2.4):g/12.92;b=b>0.04045?Math.pow((b+0.055)/1.055,2.4):b/12.92;var x=r*0.4124+g*0.3576+b*0.1805;var y=r*0.2126+g*0.7152+b*0.0722;var z=r*0.0193+g*0.1192+b*0.9505;return[x*100,y*100,z*100];};convert.rgb.lab=function(rgb){var xyz=convert.rgb.xyz(rgb);var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.hsl.rgb=function(hsl){var h=hsl[0]/360;var s=hsl[1]/100;var l=hsl[2]/100;var t1;var t2;var t3;var rgb;var val;if(s===0){val=l*255;return[val,val,val];}if(l<0.5){t2=l*(1+s);}else{t2=l+s-l*s;}t1=2*l-t2;rgb=[0,0,0];for(var i=0;i<3;i++){t3=h+1/3*-(i-1);if(t3<0){t3++;}if(t3>1){t3--;}if(6*t3<1){val=t1+(t2-t1)*6*t3;}else if(2*t3<1){val=t2;}else if(3*t3<2){val=t1+(t2-t1)*(2/3-t3)*6;}else{val=t1;}rgb[i]=val*255;}return rgb;};convert.hsl.hsv=function(hsl){var h=hsl[0];var s=hsl[1]/100;var l=hsl[2]/100;var smin=s;var lmin=Math.max(l,0.01);var sv;var v;l*=2;s*=l<=1?l:2-l;smin*=lmin<=1?lmin:2-lmin;v=(l+s)/2;sv=l===0?2*smin/(lmin+smin):2*s/(l+s);return[h,sv*100,v*100];};convert.hsv.rgb=function(hsv){var h=hsv[0]/60;var s=hsv[1]/100;var v=hsv[2]/100;var hi=Math.floor(h)%6;var f=h-Math.floor(h);var p=255*v*(1-s);var q=255*v*(1-s*f);var t=255*v*(1-s*(1-f));v*=255;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q];}};convert.hsv.hsl=function(hsv){var h=hsv[0];var s=hsv[1]/100;var v=hsv[2]/100;var vmin=Math.max(v,0.01);var lmin;var sl;var l;l=(2-s)*v;lmin=(2-s)*vmin;sl=s*vmin;sl/=lmin<=1?lmin:2-lmin;sl=sl||0;l/=2;return[h,sl*100,l*100];};// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb=function(hwb){var h=hwb[0]/360;var wh=hwb[1]/100;var bl=hwb[2]/100;var ratio=wh+bl;var i;var v;var f;var n;// wh + bl cant be > 1\nif(ratio>1){wh/=ratio;bl/=ratio;}i=Math.floor(6*h);v=1-bl;f=6*h-i;if((i&0x01)!==0){f=1-f;}n=wh+f*(v-wh);// linear interpolation\nvar r;var g;var b;switch(i){default:case 6:case 0:r=v;g=n;b=wh;break;case 1:r=n;g=v;b=wh;break;case 2:r=wh;g=v;b=n;break;case 3:r=wh;g=n;b=v;break;case 4:r=n;g=wh;b=v;break;case 5:r=v;g=wh;b=n;break;}return[r*255,g*255,b*255];};convert.cmyk.rgb=function(cmyk){var c=cmyk[0]/100;var m=cmyk[1]/100;var y=cmyk[2]/100;var k=cmyk[3]/100;var r;var g;var b;r=1-Math.min(1,c*(1-k)+k);g=1-Math.min(1,m*(1-k)+k);b=1-Math.min(1,y*(1-k)+k);return[r*255,g*255,b*255];};convert.xyz.rgb=function(xyz){var x=xyz[0]/100;var y=xyz[1]/100;var z=xyz[2]/100;var r;var g;var b;r=x*3.2406+y*-1.5372+z*-0.4986;g=x*-0.9689+y*1.8758+z*0.0415;b=x*0.0557+y*-0.2040+z*1.0570;// assume sRGB\nr=r>0.0031308?1.055*Math.pow(r,1.0/2.4)-0.055:r*12.92;g=g>0.0031308?1.055*Math.pow(g,1.0/2.4)-0.055:g*12.92;b=b>0.0031308?1.055*Math.pow(b,1.0/2.4)-0.055:b*12.92;r=Math.min(Math.max(0,r),1);g=Math.min(Math.max(0,g),1);b=Math.min(Math.max(0,b),1);return[r*255,g*255,b*255];};convert.xyz.lab=function(xyz){var x=xyz[0];var y=xyz[1];var z=xyz[2];var l;var a;var b;x/=95.047;y/=100;z/=108.883;x=x>0.008856?Math.pow(x,1/3):7.787*x+16/116;y=y>0.008856?Math.pow(y,1/3):7.787*y+16/116;z=z>0.008856?Math.pow(z,1/3):7.787*z+16/116;l=116*y-16;a=500*(x-y);b=200*(y-z);return[l,a,b];};convert.lab.xyz=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var x;var y;var z;y=(l+16)/116;x=a/500+y;z=y-b/200;var y2=Math.pow(y,3);var x2=Math.pow(x,3);var z2=Math.pow(z,3);y=y2>0.008856?y2:(y-16/116)/7.787;x=x2>0.008856?x2:(x-16/116)/7.787;z=z2>0.008856?z2:(z-16/116)/7.787;x*=95.047;y*=100;z*=108.883;return[x,y,z];};convert.lab.lch=function(lab){var l=lab[0];var a=lab[1];var b=lab[2];var hr;var h;var c;hr=Math.atan2(b,a);h=hr*360/2/Math.PI;if(h<0){h+=360;}c=Math.sqrt(a*a+b*b);return[l,c,h];};convert.lch.lab=function(lch){var l=lch[0];var c=lch[1];var h=lch[2];var a;var b;var hr;hr=h/360*2*Math.PI;a=c*Math.cos(hr);b=c*Math.sin(hr);return[l,a,b];};convert.rgb.ansi16=function(args){var r=args[0];var g=args[1];var b=args[2];var value=1 in arguments?arguments[1]:convert.rgb.hsv(args)[2];// hsv -> ansi16 optimization\nvalue=Math.round(value/50);if(value===0){return 30;}var ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));if(value===2){ansi+=60;}return ansi;};convert.hsv.ansi16=function(args){// optimization here; we already know the value and don\'t need to get\n// it converted for us.\nreturn convert.rgb.ansi16(convert.hsv.rgb(args),args[2]);};convert.rgb.ansi256=function(args){var r=args[0];var g=args[1];var b=args[2];// we use the extended greyscale palette here, with the exception of\n// black and white. normal palette only has 4 greyscale shades.\nif(r===g&&g===b){if(r<8){return 16;}if(r>248){return 231;}return Math.round((r-8)/247*24)+232;}var ansi=16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5);return ansi;};convert.ansi16.rgb=function(args){var color=args%10;// handle greyscale\nif(color===0||color===7){if(args>50){color+=3.5;}color=color/10.5*255;return[color,color,color];}var mult=(~~(args>50)+1)*0.5;var r=(color&1)*mult*255;var g=(color>>1&1)*mult*255;var b=(color>>2&1)*mult*255;return[r,g,b];};convert.ansi256.rgb=function(args){// handle greyscale\nif(args>=232){var c=(args-232)*10+8;return[c,c,c];}args-=16;var rem;var r=Math.floor(args/36)/5*255;var g=Math.floor((rem=args%36)/6)/5*255;var b=rem%6/5*255;return[r,g,b];};convert.rgb.hex=function(args){var integer=((Math.round(args[0])&0xFF)<<16)+((Math.round(args[1])&0xFF)<<8)+(Math.round(args[2])&0xFF);var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.hex.rgb=function(args){var match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match){return[0,0,0];}var colorString=match[0];if(match[0].length===3){colorString=colorString.split(\'\').map(function(char){return char+char;}).join(\'\');}var integer=parseInt(colorString,16);var r=integer>>16&0xFF;var g=integer>>8&0xFF;var b=integer&0xFF;return[r,g,b];};convert.rgb.hcg=function(rgb){var r=rgb[0]/255;var g=rgb[1]/255;var b=rgb[2]/255;var max=Math.max(Math.max(r,g),b);var min=Math.min(Math.min(r,g),b);var chroma=max-min;var grayscale;var hue;if(chroma<1){grayscale=min/(1-chroma);}else{grayscale=0;}if(chroma<=0){hue=0;}else if(max===r){hue=(g-b)/chroma%6;}else if(max===g){hue=2+(b-r)/chroma;}else{hue=4+(r-g)/chroma+4;}hue/=6;hue%=1;return[hue*360,chroma*100,grayscale*100];};convert.hsl.hcg=function(hsl){var s=hsl[1]/100;var l=hsl[2]/100;var c=1;var f=0;if(l<0.5){c=2.0*s*l;}else{c=2.0*s*(1.0-l);}if(c<1.0){f=(l-0.5*c)/(1.0-c);}return[hsl[0],c*100,f*100];};convert.hsv.hcg=function(hsv){var s=hsv[1]/100;var v=hsv[2]/100;var c=s*v;var f=0;if(c<1.0){f=(v-c)/(1-c);}return[hsv[0],c*100,f*100];};convert.hcg.rgb=function(hcg){var h=hcg[0]/360;var c=hcg[1]/100;var g=hcg[2]/100;if(c===0.0){return[g*255,g*255,g*255];}var pure=[0,0,0];var hi=h%1*6;var v=hi%1;var w=1-v;var mg=0;switch(Math.floor(hi)){case 0:pure[0]=1;pure[1]=v;pure[2]=0;break;case 1:pure[0]=w;pure[1]=1;pure[2]=0;break;case 2:pure[0]=0;pure[1]=1;pure[2]=v;break;case 3:pure[0]=0;pure[1]=w;pure[2]=1;break;case 4:pure[0]=v;pure[1]=0;pure[2]=1;break;default:pure[0]=1;pure[1]=0;pure[2]=w;}mg=(1.0-c)*g;return[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255];};convert.hcg.hsv=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);var f=0;if(v>0.0){f=c/v;}return[hcg[0],f*100,v*100];};convert.hcg.hsl=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var l=g*(1.0-c)+0.5*c;var s=0;if(l>0.0&&l<0.5){s=c/(2*l);}else if(l>=0.5&&l<1.0){s=c/(2*(1-l));}return[hcg[0],s*100,l*100];};convert.hcg.hwb=function(hcg){var c=hcg[1]/100;var g=hcg[2]/100;var v=c+g*(1.0-c);return[hcg[0],(v-c)*100,(1-v)*100];};convert.hwb.hcg=function(hwb){var w=hwb[1]/100;var b=hwb[2]/100;var v=1-b;var c=v-w;var g=0;if(c<1){g=(v-c)/(1-c);}return[hwb[0],c*100,g*100];};convert.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255];};convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535];};convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255];};convert.gray.hsl=convert.gray.hsv=function(args){return[0,0,args[0]];};convert.gray.hwb=function(gray){return[0,100,gray[0]];};convert.gray.cmyk=function(gray){return[0,0,0,gray[0]];};convert.gray.lab=function(gray){return[gray[0],0,0];};convert.gray.hex=function(gray){var val=Math.round(gray[0]/100*255)&0xFF;var integer=(val<<16)+(val<<8)+val;var string=integer.toString(16).toUpperCase();return\'000000\'.substring(string.length)+string;};convert.rgb.gray=function(rgb){var val=(rgb[0]+rgb[1]+rgb[2])/3;return[val/255*100];};});var conversions_1$1=conversions$2.rgb;var conversions_2$1=conversions$2.hsl;var conversions_3$1=conversions$2.hsv;var conversions_4$1=conversions$2.hwb;var conversions_5$1=conversions$2.cmyk;var conversions_6$1=conversions$2.xyz;var conversions_7$1=conversions$2.lab;var conversions_8$1=conversions$2.lch;var conversions_9$1=conversions$2.hex;var conversions_10$1=conversions$2.keyword;var conversions_11$1=conversions$2.ansi16;var conversions_12$1=conversions$2.ansi256;var conversions_13$1=conversions$2.hcg;var conversions_14$1=conversions$2.apple;var conversions_15$1=conversions$2.gray;/*\n  \tthis function routes a model to all other models.\n\n  \tall functions that are routed have a property `.conversion` attached\n  \tto the returned synthetic function. This property is an array\n  \tof strings, each with the steps in between the \'from\' and \'to\'\n  \tcolor models (inclusive).\n\n  \tconversions that are not possible simply are not included.\n  */function buildGraph$2(){var graph={};// https://jsperf.com/object-keys-vs-for-in-with-closure/3\nvar models=Object.keys(conversions$2);for(var len=models.length,i=0;i<len;i++){graph[models[i]]={// http://jsperf.com/1-vs-infinity\n// micro-opt, but this is simple.\ndistance:-1,parent:null};}return graph;}// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS$2(fromModel){var graph=buildGraph$2();var queue=[fromModel];// unshift -> queue -> pop\ngraph[fromModel].distance=0;while(queue.length){var current=queue.pop();var adjacents=Object.keys(conversions$2[current]);for(var len=adjacents.length,i=0;i<len;i++){var adjacent=adjacents[i];var node=graph[adjacent];if(node.distance===-1){node.distance=graph[current].distance+1;node.parent=current;queue.unshift(adjacent);}}}return graph;}function link$2(from,to){return function(args){return to(from(args));};}function wrapConversion$2(toModel,graph){var path=[graph[toModel].parent,toModel];var fn=conversions$2[graph[toModel].parent][toModel];var cur=graph[toModel].parent;while(graph[cur].parent){path.unshift(graph[cur].parent);fn=link$2(conversions$2[graph[cur].parent][cur],fn);cur=graph[cur].parent;}fn.conversion=path;return fn;}var route$2=function route(fromModel){var graph=deriveBFS$2(fromModel);var conversion={};var models=Object.keys(graph);for(var len=models.length,i=0;i<len;i++){var toModel=models[i];var node=graph[toModel];if(node.parent===null){// no possible conversion, or this node is the source model.\ncontinue;}conversion[toModel]=wrapConversion$2(toModel,graph);}return conversion;};var convert$3={};var models$2=Object.keys(conversions$2);function wrapRaw$2(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}return fn(args);};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}function wrapRounded$2(fn){var wrappedFn=function wrappedFn(args){if(args===undefined||args===null){return args;}if(arguments.length>1){args=Array.prototype.slice.call(arguments);}var result=fn(args);// we\'re assuming the result is an array here.\n// see notice in conversions.js; don\'t use box types\n// in conversion functions.\nif((0,_typeof3.default)(result)===\'object\'){for(var len=result.length,i=0;i<len;i++){result[i]=Math.round(result[i]);}}return result;};// preserve .conversion property if there is one\nif(\'conversion\'in fn){wrappedFn.conversion=fn.conversion;}return wrappedFn;}models$2.forEach(function(fromModel){convert$3[fromModel]={};Object.defineProperty(convert$3[fromModel],\'channels\',{value:conversions$2[fromModel].channels});Object.defineProperty(convert$3[fromModel],\'labels\',{value:conversions$2[fromModel].labels});var routes=route$2(fromModel);var routeModels=Object.keys(routes);routeModels.forEach(function(toModel){var fn=routes[toModel];convert$3[fromModel][toModel]=wrapRounded$2(fn);convert$3[fromModel][toModel].raw=wrapRaw$2(fn);});});var colorConvert$2=convert$3;var ansiStyles$2=createCommonjsModule(function(module){var wrapAnsi16=function wrapAnsi16(fn,offset){return function(){var code=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(code+offset,"m");};};var wrapAnsi256=function wrapAnsi256(fn,offset){return function(){var code=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(38+offset,";5;").concat(code,"m");};};var wrapAnsi16m=function wrapAnsi16m(fn,offset){return function(){var rgb=fn.apply(colorConvert$2,arguments);return"\\x1B[".concat(38+offset,";2;").concat(rgb[0],";").concat(rgb[1],";").concat(rgb[2],"m");};};function assembleStyles(){var codes=new Map();var styles={modifier:{reset:[0,0],// 21 isn\'t widely supported and 22 does the same thing\nbold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],// Bright color\nredBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],// Bright color\nbgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};// Fix humans\nstyles.color.grey=styles.color.gray;for(var _i22=0,_Object$keys14=Object.keys(styles);_i22<_Object$keys14.length;_i22++){var groupName=_Object$keys14[_i22];var _group3=styles[groupName];for(var _i23=0,_Object$keys15=Object.keys(_group3);_i23<_Object$keys15.length;_i23++){var styleName=_Object$keys15[_i23];var _style5=_group3[styleName];styles[styleName]={open:"\\x1B[".concat(_style5[0],"m"),close:"\\x1B[".concat(_style5[1],"m")};_group3[styleName]=styles[styleName];codes.set(_style5[0],_style5[1]);}Object.defineProperty(styles,groupName,{value:_group3,enumerable:false});Object.defineProperty(styles,\'codes\',{value:codes,enumerable:false});}var ansi2ansi=function ansi2ansi(n){return n;};var rgb2rgb=function rgb2rgb(r,g,b){return[r,g,b];};styles.color.close="\\x1B[39m";styles.bgColor.close="\\x1B[49m";styles.color.ansi={ansi:wrapAnsi16(ansi2ansi,0)};styles.color.ansi256={ansi256:wrapAnsi256(ansi2ansi,0)};styles.color.ansi16m={rgb:wrapAnsi16m(rgb2rgb,0)};styles.bgColor.ansi={ansi:wrapAnsi16(ansi2ansi,10)};styles.bgColor.ansi256={ansi256:wrapAnsi256(ansi2ansi,10)};styles.bgColor.ansi16m={rgb:wrapAnsi16m(rgb2rgb,10)};for(var _i24=0,_Object$keys16=Object.keys(colorConvert$2);_i24<_Object$keys16.length;_i24++){var _key10=_Object$keys16[_i24];if((0,_typeof3.default)(colorConvert$2[_key10])!==\'object\'){continue;}var suite=colorConvert$2[_key10];if(_key10===\'ansi16\'){_key10=\'ansi\';}if(\'ansi16\'in suite){styles.color.ansi[_key10]=wrapAnsi16(suite.ansi16,0);styles.bgColor.ansi[_key10]=wrapAnsi16(suite.ansi16,10);}if(\'ansi256\'in suite){styles.color.ansi256[_key10]=wrapAnsi256(suite.ansi256,0);styles.bgColor.ansi256[_key10]=wrapAnsi256(suite.ansi256,10);}if(\'rgb\'in suite){styles.color.ansi16m[_key10]=wrapAnsi16m(suite.rgb,0);styles.bgColor.ansi16m[_key10]=wrapAnsi16m(suite.rgb,10);}}return styles;}// Make the export immutable\nObject.defineProperty(module,\'exports\',{enumerable:true,get:assembleStyles});});var env$3=process.env;var forceColor$2;if(hasFlag(\'no-color\')||hasFlag(\'no-colors\')||hasFlag(\'color=false\')){forceColor$2=false;}else if(hasFlag(\'color\')||hasFlag(\'colors\')||hasFlag(\'color=true\')||hasFlag(\'color=always\')){forceColor$2=true;}if(\'FORCE_COLOR\'in env$3){forceColor$2=env$3.FORCE_COLOR.length===0||parseInt(env$3.FORCE_COLOR,10)!==0;}function translateLevel$2(level){if(level===0){return false;}return{level:level,hasBasic:true,has256:level>=2,has16m:level>=3};}function supportsColor$2(stream){if(forceColor$2===false){return 0;}if(hasFlag(\'color=16m\')||hasFlag(\'color=full\')||hasFlag(\'color=truecolor\')){return 3;}if(hasFlag(\'color=256\')){return 2;}if(stream&&!stream.isTTY&&forceColor$2!==true){return 0;}var min=forceColor$2?1:0;if(process.platform===\'win32\'){// Node.js 7.5.0 is the first version of Node.js to include a patch to\n// libuv that enables 256 color output on Windows. Anything earlier and it\n// won\'t work. However, here we target Node.js 8 at minimum as it is an LTS\n// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n// release that supports 256 colors. Windows 10 build 14931 is the first release\n// that supports 16m/TrueColor.\nvar osRelease=require$$0$1.release().split(\'.\');if(Number(process.versions.node.split(\'.\')[0])>=8&&Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2;}return 1;}if(\'CI\'in env$3){if([\'TRAVIS\',\'CIRCLECI\',\'APPVEYOR\',\'GITLAB_CI\'].some(function(sign){return sign in env$3;})||env$3.CI_NAME===\'codeship\'){return 1;}return min;}if(\'TEAMCITY_VERSION\'in env$3){return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env$3.TEAMCITY_VERSION)?1:0;}if(env$3.COLORTERM===\'truecolor\'){return 3;}if(\'TERM_PROGRAM\'in env$3){var _version3=parseInt((env$3.TERM_PROGRAM_VERSION||\'\').split(\'.\')[0],10);switch(env$3.TERM_PROGRAM){case\'iTerm.app\':return _version3>=3?3:2;case\'Apple_Terminal\':return 2;// No default\n}}if(/-256(color)?$/i.test(env$3.TERM)){return 2;}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env$3.TERM)){return 1;}if(\'COLORTERM\'in env$3){return 1;}if(env$3.TERM===\'dumb\'){return min;}return min;}function getSupportLevel$2(stream){var level=supportsColor$2(stream);return translateLevel$2(level);}var supportsColor_1$2={supportsColor:getSupportLevel$2,stdout:getSupportLevel$2(process.stdout),stderr:getSupportLevel$2(process.stderr)};var TEMPLATE_REGEX$2=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;var STYLE_REGEX$2=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;var STRING_REGEX$2=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;var ESCAPE_REGEX$2=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;var ESCAPES$2=new Map([[\'n\',\'\\n\'],[\'r\',\'\\r\'],[\'t\',\'\\t\'],[\'b\',\'\\b\'],[\'f\',\'\\f\'],[\'v\',\'\\v\'],[\'0\',\'\\0\'],[\'\\\\\',\'\\\\\'],[\'e\',"\\x1B"],[\'a\',"\\x07"]]);function unescape$2(c){if(c[0]===\'u\'&&c.length===5||c[0]===\'x\'&&c.length===3){return String.fromCharCode(parseInt(c.slice(1),16));}return ESCAPES$2.get(c)||c;}function parseArguments$2(name,args){var results=[];var chunks=args.trim().split(/\\s*,\\s*/g);var matches;var _iterator21=_createForOfIteratorHelper(chunks),_step21;try{for(_iterator21.s();!(_step21=_iterator21.n()).done;){var chunk=_step21.value;if(!isNaN(chunk)){results.push(Number(chunk));}else if(matches=chunk.match(STRING_REGEX$2)){results.push(matches[2].replace(ESCAPE_REGEX$2,function(m,escape,chr){return escape?unescape$2(escape):chr;}));}else{throw new Error("Invalid Chalk template style argument: ".concat(chunk," (in style \'").concat(name,"\')"));}}}catch(err){_iterator21.e(err);}finally{_iterator21.f();}return results;}function parseStyle$2(style){STYLE_REGEX$2.lastIndex=0;var results=[];var matches;while((matches=STYLE_REGEX$2.exec(style))!==null){var _name4=matches[1];if(matches[2]){var args=parseArguments$2(_name4,matches[2]);results.push([_name4].concat(args));}else{results.push([_name4]);}}return results;}function buildStyle$2(chalk,styles){var enabled={};var _iterator22=_createForOfIteratorHelper(styles),_step22;try{for(_iterator22.s();!(_step22=_iterator22.n()).done;){var layer=_step22.value;var _iterator23=_createForOfIteratorHelper(layer.styles),_step23;try{for(_iterator23.s();!(_step23=_iterator23.n()).done;){var _style6=_step23.value;enabled[_style6[0]]=layer.inverse?null:_style6.slice(1);}}catch(err){_iterator23.e(err);}finally{_iterator23.f();}}}catch(err){_iterator22.e(err);}finally{_iterator22.f();}var current=chalk;for(var _i25=0,_Object$keys17=Object.keys(enabled);_i25<_Object$keys17.length;_i25++){var styleName=_Object$keys17[_i25];if(Array.isArray(enabled[styleName])){if(!(styleName in current)){throw new Error("Unknown Chalk style: ".concat(styleName));}if(enabled[styleName].length>0){current=current[styleName].apply(current,enabled[styleName]);}else{current=current[styleName];}}}return current;}var templates$2=function templates$2(chalk,tmp){var styles=[];var chunks=[];var chunk=[];// eslint-disable-next-line max-params\ntmp.replace(TEMPLATE_REGEX$2,function(m,escapeChar,inverse,style,close,chr){if(escapeChar){chunk.push(unescape$2(escapeChar));}else if(style){var str=chunk.join(\'\');chunk=[];chunks.push(styles.length===0?str:buildStyle$2(chalk,styles)(str));styles.push({inverse:inverse,styles:parseStyle$2(style)});}else if(close){if(styles.length===0){throw new Error(\'Found extraneous } in Chalk template literal\');}chunks.push(buildStyle$2(chalk,styles)(chunk.join(\'\')));chunk=[];styles.pop();}else{chunk.push(chr);}});chunks.push(chunk.join(\'\'));if(styles.length>0){var errMsg="Chalk template literal is missing ".concat(styles.length," closing bracket").concat(styles.length===1?\'\':\'s\'," (`}`)");throw new Error(errMsg);}return chunks.join(\'\');};var chalk$2=createCommonjsModule(function(module){var stdoutColor=supportsColor_1$2.stdout;var isSimpleWindowsTerm=process.platform===\'win32\'&&!(process.env.TERM||\'\').toLowerCase().startsWith(\'xterm\');// `supportsColor.level` → `ansiStyles.color[name]` mapping\nvar levelMapping=[\'ansi\',\'ansi\',\'ansi256\',\'ansi16m\'];// `color-convert` models to exclude from the Chalk API due to conflicts and such\nvar skipModels=new Set([\'gray\']);var styles=Object.create(null);function applyOptions(obj,options){options=options||{};// Detect level if not set manually\nvar scLevel=stdoutColor?stdoutColor.level:0;obj.level=options.level===undefined?scLevel:options.level;obj.enabled=\'enabled\'in options?options.enabled:obj.level>0;}function Chalk(options){// We check for this.template here since calling `chalk.constructor()`\n// by itself will have a `this` of a previously constructed chalk object\nif(!this||!(this instanceof Chalk)||this.template){var _chalk3={};applyOptions(_chalk3,options);_chalk3.template=function(){var args=[].slice.call(arguments);return chalkTag.apply(null,[_chalk3.template].concat(args));};Object.setPrototypeOf(_chalk3,Chalk.prototype);Object.setPrototypeOf(_chalk3.template,_chalk3);_chalk3.template.constructor=Chalk;return _chalk3.template;}applyOptions(this,options);}// Use bright blue on Windows as the normal blue color is illegible\nif(isSimpleWindowsTerm){ansiStyles$2.blue.open="\\x1B[94m";}var _loop9=function _loop9(){var key=_Object$keys18[_i26];ansiStyles$2[key].closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2[key].close),\'g\');styles[key]={get:function get(){var codes=ansiStyles$2[key];return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,key);}};};for(var _i26=0,_Object$keys18=Object.keys(ansiStyles$2);_i26<_Object$keys18.length;_i26++){_loop9();}styles.visible={get:function get(){return build.call(this,this._styles||[],true,\'visible\');}};ansiStyles$2.color.closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2.color.close),\'g\');var _loop10=function _loop10(){var model=_Object$keys19[_i27];if(skipModels.has(model)){return"continue";}styles[model]={get:function get(){var level=this.level;return function(){var open=ansiStyles$2.color[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles$2.color.close,closeRe:ansiStyles$2.color.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i27=0,_Object$keys19=Object.keys(ansiStyles$2.color.ansi);_i27<_Object$keys19.length;_i27++){var _ret3=_loop10();if(_ret3==="continue")continue;}ansiStyles$2.bgColor.closeRe=new RegExp(escapeStringRegexp$1(ansiStyles$2.bgColor.close),\'g\');var _loop11=function _loop11(){var model=_Object$keys20[_i28];if(skipModels.has(model)){return"continue";}var bgModel=\'bg\'+model[0].toUpperCase()+model.slice(1);styles[bgModel]={get:function get(){var level=this.level;return function(){var open=ansiStyles$2.bgColor[levelMapping[level]][model].apply(null,arguments);var codes={open:open,close:ansiStyles$2.bgColor.close,closeRe:ansiStyles$2.bgColor.closeRe};return build.call(this,this._styles?this._styles.concat(codes):[codes],this._empty,model);};}};};for(var _i28=0,_Object$keys20=Object.keys(ansiStyles$2.bgColor.ansi);_i28<_Object$keys20.length;_i28++){var _ret4=_loop11();if(_ret4==="continue")continue;}var proto=Object.defineProperties(function(){},styles);function build(_styles,_empty,key){var builder=function builder(){return applyStyle.apply(builder,arguments);};builder._styles=_styles;builder._empty=_empty;var self=this;Object.defineProperty(builder,\'level\',{enumerable:true,get:function get(){return self.level;},set:function set(level){self.level=level;}});Object.defineProperty(builder,\'enabled\',{enumerable:true,get:function get(){return self.enabled;},set:function set(enabled){self.enabled=enabled;}});// See below for fix regarding invisible grey/dim combination on Windows\nbuilder.hasGrey=this.hasGrey||key===\'gray\'||key===\'grey\';// `__proto__` is used because we must return a function, but there is\n// no way to create a function with a different prototype\nbuilder.__proto__=proto;// eslint-disable-line no-proto\nreturn builder;}function applyStyle(){// Support varags, but simply cast to string in case there\'s only one arg\nvar args=arguments;var argsLen=args.length;var str=String(arguments[0]);if(argsLen===0){return\'\';}if(argsLen>1){// Don\'t slice `arguments`, it prevents V8 optimizations\nfor(var _a5=1;_a5<argsLen;_a5++){str+=\' \'+args[_a5];}}if(!this.enabled||this.level<=0||!str){return this._empty?\'\':str;}// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n// see https://github.com/chalk/chalk/issues/58\n// If we\'re on Windows and we\'re dealing with a gray color, temporarily make \'dim\' a noop.\nvar originalDim=ansiStyles$2.dim.open;if(isSimpleWindowsTerm&&this.hasGrey){ansiStyles$2.dim.open=\'\';}var _iterator24=_createForOfIteratorHelper(this._styles.slice().reverse()),_step24;try{for(_iterator24.s();!(_step24=_iterator24.n()).done;){var _code2=_step24.value;// Replace any instances already present with a re-opening code\n// otherwise only the part of the string until said closing code\n// will be colored, and the rest will simply be \'plain\'.\nstr=_code2.open+str.replace(_code2.closeRe,_code2.open)+_code2.close;// Close the styling before a linebreak and reopen\n// after next line to fix a bleed issue on macOS\n// https://github.com/chalk/chalk/pull/92\nstr=str.replace(/\\r?\\n/g,"".concat(_code2.close,"$&").concat(_code2.open));}// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n}catch(err){_iterator24.e(err);}finally{_iterator24.f();}ansiStyles$2.dim.open=originalDim;return str;}function chalkTag(chalk,strings){if(!Array.isArray(strings)){// If chalk() was called by itself or with a string,\n// return the string itself as a string.\nreturn[].slice.call(arguments,1).join(\' \');}var args=[].slice.call(arguments,2);var parts=[strings.raw[0]];for(var i=1;i<strings.length;i++){parts.push(String(args[i-1]).replace(/[{}\\\\]/g,\'\\\\$&\'));parts.push(String(strings.raw[i]));}return templates$2(chalk,parts.join(\'\'));}Object.defineProperties(Chalk.prototype,styles);module.exports=Chalk();// eslint-disable-line new-cap\nmodule.exports.supportsColor=stdoutColor;module.exports.default=module.exports;// For TypeScript\n});var chalk_1$1=chalk$2.supportsColor;var lib$1=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.shouldHighlight=shouldHighlight;exports.getChalk=getChalk;exports.default=highlight;var _jsTokens=_interopRequireWildcard(jsTokens);var _esutils=_interopRequireDefault(utils$1);var _chalk=_interopRequireDefault(chalk$2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||(0,_typeof3.default)(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function getDefs(chalk){return{keyword:chalk.cyan,capitalized:chalk.yellow,jsx_tag:chalk.yellow,punctuator:chalk.yellow,number:chalk.magenta,string:chalk.green,regex:chalk.magenta,comment:chalk.grey,invalid:chalk.white.bgRed.bold};}var NEWLINE=/\\r\\n|[\\n\\r\\u2028\\u2029]/;var JSX_TAG=/^[a-z][\\w-]*$/i;var BRACKET=/^[()[\\]{}]$/;function getTokenType(match){var _match$slice=match.slice(-2),_match$slice2=(0,_slicedToArray2.default)(_match$slice,2),offset=_match$slice2[0],text=_match$slice2[1];var token=(0,_jsTokens.matchToToken)(match);if(token.type==="name"){if(_esutils.default.keyword.isReservedWordES6(token.value)){return"keyword";}if(JSX_TAG.test(token.value)&&(text[offset-1]==="<"||text.substr(offset-2,2)=="</")){return"jsx_tag";}if(token.value[0]!==token.value[0].toLowerCase()){return"capitalized";}}if(token.type==="punctuator"&&BRACKET.test(token.value)){return"bracket";}if(token.type==="invalid"&&(token.value==="@"||token.value==="#")){return"punctuator";}return token.type;}function highlightTokens(defs,text){return text.replace(_jsTokens.default,function(){for(var _len8=arguments.length,args=new Array(_len8),_key11=0;_key11<_len8;_key11++){args[_key11]=arguments[_key11];}var type=getTokenType(args);var colorize=defs[type];if(colorize){return args[0].split(NEWLINE).map(function(str){return colorize(str);}).join("\\n");}else{return args[0];}});}function shouldHighlight(options){return _chalk.default.supportsColor||options.forceColor;}function getChalk(options){var chalk=_chalk.default;if(options.forceColor){chalk=new _chalk.default.constructor({enabled:true,level:1});}return chalk;}function highlight(code){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(shouldHighlight(options)){var _chalk4=getChalk(options);var defs=getDefs(_chalk4);return highlightTokens(defs,code);}else{return code;}}});unwrapExports(lib$1);var lib_1=lib$1.shouldHighlight;var lib_2=lib$1.getChalk;var lib$2=createCommonjsModule(function(module,exports){Object.defineProperty(exports,"__esModule",{value:true});exports.codeFrameColumns=codeFrameColumns;exports.default=_default;var _highlight=_interopRequireWildcard(lib$1);function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||(0,_typeof3.default)(obj)!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var deprecationWarningShown=false;function getDefs(chalk){return{gutter:chalk.grey,marker:chalk.red.bold,message:chalk.red.bold};}var NEWLINE=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function getMarkerLines(loc,source,opts){var startLoc=Object.assign({column:0,line:-1},loc.start);var endLoc=Object.assign({},startLoc,{},loc.end);var _ref23=opts||{},_ref23$linesAbove=_ref23.linesAbove,linesAbove=_ref23$linesAbove===void 0?2:_ref23$linesAbove,_ref23$linesBelow=_ref23.linesBelow,linesBelow=_ref23$linesBelow===void 0?3:_ref23$linesBelow;var startLine=startLoc.line;var startColumn=startLoc.column;var endLine=endLoc.line;var endColumn=endLoc.column;var start=Math.max(startLine-(linesAbove+1),0);var end=Math.min(source.length,endLine+linesBelow);if(startLine===-1){start=0;}if(endLine===-1){end=source.length;}var lineDiff=endLine-startLine;var markerLines={};if(lineDiff){for(var i=0;i<=lineDiff;i++){var lineNumber=i+startLine;if(!startColumn){markerLines[lineNumber]=true;}else if(i===0){var sourceLength=source[lineNumber-1].length;markerLines[lineNumber]=[startColumn,sourceLength-startColumn+1];}else if(i===lineDiff){markerLines[lineNumber]=[0,endColumn];}else{var _sourceLength=source[lineNumber-i].length;markerLines[lineNumber]=[0,_sourceLength];}}}else{if(startColumn===endColumn){if(startColumn){markerLines[startLine]=[startColumn,0];}else{markerLines[startLine]=true;}}else{markerLines[startLine]=[startColumn,endColumn-startColumn];}}return{start:start,end:end,markerLines:markerLines};}function codeFrameColumns(rawLines,loc){var opts=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var highlighted=(opts.highlightCode||opts.forceColor)&&(0,_highlight.shouldHighlight)(opts);var chalk=(0,_highlight.getChalk)(opts);var defs=getDefs(chalk);var maybeHighlight=function maybeHighlight(chalkFn,string){return highlighted?chalkFn(string):string;};var lines=rawLines.split(NEWLINE);var _getMarkerLines=getMarkerLines(loc,lines,opts),start=_getMarkerLines.start,end=_getMarkerLines.end,markerLines=_getMarkerLines.markerLines;var hasColumns=loc.start&&typeof loc.start.column==="number";var numberMaxWidth=String(end).length;var highlightedLines=highlighted?(0,_highlight.default)(rawLines,opts):rawLines;var frame=highlightedLines.split(NEWLINE).slice(start,end).map(function(line,index){var number=start+1+index;var paddedNumber=" ".concat(number).slice(-numberMaxWidth);var gutter=" ".concat(paddedNumber," | ");var hasMarker=markerLines[number];var lastMarkerLine=!markerLines[number+1];if(hasMarker){var markerLine="";if(Array.isArray(hasMarker)){var markerSpacing=line.slice(0,Math.max(hasMarker[0]-1,0)).replace(/[^\\t]/g," ");var numberOfMarkers=hasMarker[1]||1;markerLine=["\\n ",maybeHighlight(defs.gutter,gutter.replace(/\\d/g," ")),markerSpacing,maybeHighlight(defs.marker,"^").repeat(numberOfMarkers)].join("");if(lastMarkerLine&&opts.message){markerLine+=" "+maybeHighlight(defs.message,opts.message);}}return[maybeHighlight(defs.marker,">"),maybeHighlight(defs.gutter,gutter),line,markerLine].join("");}else{return" ".concat(maybeHighlight(defs.gutter,gutter)).concat(line);}}).join("\\n");if(opts.message&&!hasColumns){frame="".concat(" ".repeat(numberMaxWidth+1)).concat(opts.message,"\\n").concat(frame);}if(highlighted){return chalk.reset(frame);}else{return frame;}}function _default(rawLines,lineNumber,colNumber){var opts=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(!deprecationWarningShown){deprecationWarningShown=true;var message="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(process.emitWarning){process.emitWarning(message,"DeprecationWarning");}else{var deprecationError=new Error(message);deprecationError.name="DeprecationWarning";console.warn(new Error(message));}}colNumber=Math.max(colNumber,0);var location={start:{column:colNumber,line:lineNumber}};return codeFrameColumns(rawLines,location,opts);}});unwrapExports(lib$2);var lib_1$1=lib$2.codeFrameColumns;var ConfigError$1=errors.ConfigError;var locStart$1=loc.locStart,locEnd$1=loc.locEnd;// Use defineProperties()/getOwnPropertyDescriptor() to prevent\n// triggering the parsers getters.\nvar ownNames=Object.getOwnPropertyNames;var ownDescriptor=Object.getOwnPropertyDescriptor;function getParsers(options){var parsers={};var _iterator25=_createForOfIteratorHelper(options.plugins),_step25;try{for(_iterator25.s();!(_step25=_iterator25.n()).done;){var plugin=_step25.value;if(!plugin.parsers){continue;}var _iterator26=_createForOfIteratorHelper(ownNames(plugin.parsers)),_step26;try{for(_iterator26.s();!(_step26=_iterator26.n()).done;){var _name5=_step26.value;Object.defineProperty(parsers,_name5,ownDescriptor(plugin.parsers,_name5));}}catch(err){_iterator26.e(err);}finally{_iterator26.f();}}}catch(err){_iterator25.e(err);}finally{_iterator25.f();}return parsers;}function resolveParser(opts,parsers){parsers=parsers||getParsers(opts);if(typeof opts.parser==="function"){// Custom parser API always works with JavaScript.\nreturn{parse:opts.parser,astFormat:"estree",locStart:locStart$1,locEnd:locEnd$1};}if(typeof opts.parser==="string"){if(Object.prototype.hasOwnProperty.call(parsers,opts.parser)){return parsers[opts.parser];}/* istanbul ignore next */{throw new ConfigError$1("Couldn\'t resolve parser \\"".concat(opts.parser,"\\". Parsers must be explicitly added to the standalone bundle."));}}}function parse(text,opts){var parsers=getParsers(opts);// Create a new object {parserName: parseFn}. Uses defineProperty() to only call\n// the parsers getters when actually calling the parser `parse` function.\nvar parsersForCustomParserApi=Object.keys(parsers).reduce(function(object,parserName){return Object.defineProperty(object,parserName,{enumerable:true,get:function get(){return parsers[parserName].parse;}});},{});var parser=resolveParser(opts,parsers);try{if(parser.preprocess){text=parser.preprocess(text,opts);}return{text:text,ast:parser.parse(text,parsersForCustomParserApi,opts)};}catch(error){var _loc=error.loc;if(_loc){var codeFrame=lib$2;error.codeFrame=codeFrame.codeFrameColumns(text,_loc,{highlightCode:true});error.message+="\\n"+error.codeFrame;throw error;}/* istanbul ignore next */throw error.stack;}}var parser={parse:parse,resolveParser:resolveParser};var UndefinedParserError$1=errors.UndefinedParserError;var getSupportInfo$1=support.getSupportInfo;var resolveParser$1=parser.resolveParser;var hiddenDefaults={astFormat:"estree",printer:{},originalText:undefined,locStart:null,locEnd:null};// Copy options and fill in default values.\nfunction normalize$1(options,opts){opts=opts||{};var rawOptions=Object.assign({},options);var supportOptions=getSupportInfo$1({plugins:options.plugins,showUnreleased:true,showDeprecated:true}).options;var defaults=Object.assign({},hiddenDefaults,{},fromPairs_1(supportOptions.filter(function(optionInfo){return optionInfo.default!==undefined;}).map(function(option){return[option.name,option.default];})));if(!rawOptions.parser){if(!rawOptions.filepath){var logger=opts.logger||console;logger.warn("No parser and no filepath given, using \'babel\' the parser now "+"but this will throw an error in the future. "+"Please specify a parser or a filepath so one can be inferred.");rawOptions.parser="babel";}else{rawOptions.parser=inferParser(rawOptions.filepath,rawOptions.plugins);if(!rawOptions.parser){throw new UndefinedParserError$1("No parser could be inferred for file: ".concat(rawOptions.filepath));}}}var parser=resolveParser$1(optionsNormalizer.normalizeApiOptions(rawOptions,[supportOptions.find(function(x){return x.name==="parser";})],{passThrough:true,logger:false}));rawOptions.astFormat=parser.astFormat;rawOptions.locEnd=parser.locEnd;rawOptions.locStart=parser.locStart;var plugin=getPlugin(rawOptions);rawOptions.printer=plugin.printers[rawOptions.astFormat];var pluginDefaults=supportOptions.filter(function(optionInfo){return optionInfo.pluginDefaults&&optionInfo.pluginDefaults[plugin.name]!==undefined;}).reduce(function(reduced,optionInfo){return Object.assign(reduced,(0,_defineProperty2.default)({},optionInfo.name,optionInfo.pluginDefaults[plugin.name]));},{});var mixedDefaults=Object.assign({},defaults,{},pluginDefaults);Object.keys(mixedDefaults).forEach(function(k){if(rawOptions[k]==null){rawOptions[k]=mixedDefaults[k];}});if(rawOptions.parser==="json"){rawOptions.trailingComma="none";}return optionsNormalizer.normalizeApiOptions(rawOptions,supportOptions,Object.assign({passThrough:Object.keys(hiddenDefaults)},opts));}function getPlugin(options){var astFormat=options.astFormat;if(!astFormat){throw new Error("getPlugin() requires astFormat to be set");}var printerPlugin=options.plugins.find(function(plugin){return plugin.printers&&plugin.printers[astFormat];});if(!printerPlugin){throw new Error("Couldn\'t find plugin for AST format \\"".concat(astFormat,"\\""));}return printerPlugin;}function getInterpreter(filepath){if(typeof filepath!=="string"){return"";}var fd;try{fd=fs.openSync(filepath,"r");}catch(err){// istanbul ignore next\nreturn"";}try{var liner=new readlines(fd);var firstLine=liner.next().toString("utf8");// #!/bin/env node, #!/usr/bin/env node\nvar m1=firstLine.match(/^#!\\/(?:usr\\/)?bin\\/env\\s+(\\S+)/);if(m1){return m1[1];}// #!/bin/node, #!/usr/bin/node, #!/usr/local/bin/node\nvar m2=firstLine.match(/^#!\\/(?:usr\\/(?:local\\/)?)?bin\\/(\\S+)/);if(m2){return m2[1];}return"";}catch(err){// There are some weird cases where paths are missing, causing Jest\n// failures. It\'s unclear what these correspond to in the real world.\nreturn"";}finally{try{// There are some weird cases where paths are missing, causing Jest\n// failures. It\'s unclear what these correspond to in the real world.\nfs.closeSync(fd);}catch(err){// nop\n}}}function inferParser(filepath,plugins){var filename=path.basename(filepath).toLowerCase();var languages=getSupportInfo$1({plugins:plugins}).languages.filter(function(language){return language.since!==null;});// If the file has no extension, we can try to infer the language from the\n// interpreter in the shebang line, if any; but since this requires FS access,\n// do it last.\nvar language=languages.find(function(language){return language.extensions&&language.extensions.some(function(extension){return filename.endsWith(extension);})||language.filenames&&language.filenames.find(function(name){return name.toLowerCase()===filename;});});if(!language&&!filename.includes(".")){var interpreter=getInterpreter(filepath);language=languages.find(function(language){return language.interpreters&&language.interpreters.includes(interpreter);});}return language&&language.parsers[0];}var options$1={normalize:normalize$1,hiddenDefaults:hiddenDefaults,inferParser:inferParser};function massageAST(ast,options,parent){if(Array.isArray(ast)){return ast.map(function(e){return massageAST(e,options,parent);}).filter(Boolean);}if(!ast||(0,_typeof3.default)(ast)!=="object"){return ast;}var newObj={};for(var _i29=0,_Object$keys21=Object.keys(ast);_i29<_Object$keys21.length;_i29++){var _key12=_Object$keys21[_i29];if(typeof ast[_key12]!=="function"){newObj[_key12]=massageAST(ast[_key12],options,ast);}}if(options.printer.massageAstNode){var result=options.printer.massageAstNode(ast,newObj,parent);if(result===null){return undefined;}if(result){return result;}}return newObj;}var massageAst=massageAST;function assert(){}assert.ok=function(){};assert.strictEqual=function(){};/**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */function concat(parts){// access the internals of a document directly.\n// if(parts.length === 1) {\n//   // If it\'s a single document, no need to concat it.\n//   return parts[0];\n// }\nreturn{type:"concat",parts:parts};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function indent(contents){return{type:"indent",contents:contents};}/**\n   * @param {number} n\n   * @param {Doc} contents\n   * @returns Doc\n   */function align(n,contents){return{type:"align",contents:contents,n:n};}/**\n   * @param {Doc} contents\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function group(contents,opts){opts=opts||{};return{type:"group",id:opts.id,contents:contents,break:!!opts.shouldBreak,expandedStates:opts.expandedStates};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function dedentToRoot(contents){return align(-Infinity,contents);}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function markAsRoot(contents){// @ts-ignore - TBD ???:\nreturn align({type:"root"},contents);}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function dedent(contents){return align(-1,contents);}/**\n   * @param {Doc[]} states\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function conditionalGroup(states,opts){return group(states[0],Object.assign({},opts,{expandedStates:states}));}/**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */function fill(parts){return{type:"fill",parts:parts};}/**\n   * @param {Doc} [breakContents]\n   * @param {Doc} [flatContents]\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */function ifBreak(breakContents,flatContents,opts){opts=opts||{};return{type:"if-break",breakContents:breakContents,flatContents:flatContents,groupId:opts.groupId};}/**\n   * @param {Doc} contents\n   * @returns Doc\n   */function lineSuffix(contents){return{type:"line-suffix",contents:contents};}var lineSuffixBoundary={type:"line-suffix-boundary"};var breakParent={type:"break-parent"};var trim={type:"trim"};var line={type:"line"};var softline={type:"line",soft:true};var hardline=concat([{type:"line",hard:true},breakParent]);var literalline=concat([{type:"line",hard:true,literal:true},breakParent]);var cursor={type:"cursor",placeholder:Symbol("cursor")};/**\n   * @param {Doc} sep\n   * @param {Doc[]} arr\n   * @returns Doc\n   */function join(sep,arr){var res=[];for(var i=0;i<arr.length;i++){if(i!==0){res.push(sep);}res.push(arr[i]);}return concat(res);}/**\n   * @param {Doc} doc\n   * @param {number} size\n   * @param {number} tabWidth\n   */function addAlignmentToDoc(doc,size,tabWidth){var aligned=doc;if(size>0){// Use indent to add tabs for all the levels of tabs we need\nfor(var i=0;i<Math.floor(size/tabWidth);++i){aligned=indent(aligned);}// Use align for all the spaces that are needed\naligned=align(size%tabWidth,aligned);// size is absolute from 0 and not relative to the current\n// indentation, so we use -Infinity to reset the indentation to 0\naligned=align(-Infinity,aligned);}return aligned;}var docBuilders={concat:concat,join:join,line:line,softline:softline,hardline:hardline,literalline:literalline,group:group,conditionalGroup:conditionalGroup,fill:fill,lineSuffix:lineSuffix,lineSuffixBoundary:lineSuffixBoundary,cursor:cursor,breakParent:breakParent,ifBreak:ifBreak,trim:trim,indent:indent,align:align,addAlignmentToDoc:addAlignmentToDoc,markAsRoot:markAsRoot,dedentToRoot:dedentToRoot,dedent:dedent};var ansiRegex=function ansiRegex(){var _ref24=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref24$onlyFirst=_ref24.onlyFirst,onlyFirst=_ref24$onlyFirst===void 0?false:_ref24$onlyFirst;var pattern=["[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)",\'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\'].join(\'|\');return new RegExp(pattern,onlyFirst?undefined:\'g\');};var stripAnsi=function stripAnsi(string){return typeof string===\'string\'?string.replace(ansiRegex(),\'\'):string;};/* eslint-disable yoda */var isFullwidthCodePoint=function isFullwidthCodePoint(codePoint){if(Number.isNaN(codePoint)){return false;}// Code points are derived from:\n// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\nif(codePoint>=0x1100&&(codePoint<=0x115F||// Hangul Jamo\ncodePoint===0x2329||// LEFT-POINTING ANGLE BRACKET\ncodePoint===0x232A||// RIGHT-POINTING ANGLE BRACKET\n// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n0x2E80<=codePoint&&codePoint<=0x3247&&codePoint!==0x303F||// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n0x3250<=codePoint&&codePoint<=0x4DBF||// CJK Unified Ideographs .. Yi Radicals\n0x4E00<=codePoint&&codePoint<=0xA4C6||// Hangul Jamo Extended-A\n0xA960<=codePoint&&codePoint<=0xA97C||// Hangul Syllables\n0xAC00<=codePoint&&codePoint<=0xD7A3||// CJK Compatibility Ideographs\n0xF900<=codePoint&&codePoint<=0xFAFF||// Vertical Forms\n0xFE10<=codePoint&&codePoint<=0xFE19||// CJK Compatibility Forms .. Small Form Variants\n0xFE30<=codePoint&&codePoint<=0xFE6B||// Halfwidth and Fullwidth Forms\n0xFF01<=codePoint&&codePoint<=0xFF60||0xFFE0<=codePoint&&codePoint<=0xFFE6||// Kana Supplement\n0x1B000<=codePoint&&codePoint<=0x1B001||// Enclosed Ideographic Supplement\n0x1F200<=codePoint&&codePoint<=0x1F251||// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n0x20000<=codePoint&&codePoint<=0x3FFFD)){return true;}return false;};var isFullwidthCodePoint_1=isFullwidthCodePoint;var default_1$1=isFullwidthCodePoint;isFullwidthCodePoint_1.default=default_1$1;var emojiRegex=function emojiRegex(){// https://mths.be/emoji\nreturn /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;};var stringWidth=function stringWidth(string){string=string.replace(emojiRegex(),\'  \');if(typeof string!==\'string\'||string.length===0){return 0;}string=stripAnsi(string);var width=0;for(var i=0;i<string.length;i++){var _code3=string.codePointAt(i);// Ignore control characters\nif(_code3<=0x1F||_code3>=0x7F&&_code3<=0x9F){continue;}// Ignore combining characters\nif(_code3>=0x300&&_code3<=0x36F){continue;}// Surrogates\nif(_code3>0xFFFF){i++;}width+=isFullwidthCodePoint_1(_code3)?2:1;}return width;};var stringWidth_1=stringWidth;// TODO: remove this in the next major version\nvar default_1$2=stringWidth;stringWidth_1.default=default_1$2;var matchOperatorsRegex=/[|\\\\{}()[\\]^$+*?.-]/g;var escapeStringRegexp$2=function escapeStringRegexp$2(string){if(typeof string!==\'string\'){throw new TypeError(\'Expected a string\');}return string.replace(matchOperatorsRegex,\'\\\\$&\');};var notAsciiRegex=/[^\\x20-\\x7F]/;function getPenultimate(arr){if(arr.length>1){return arr[arr.length-2];}return null;}/**\n   * @typedef {{backwards?: boolean}} SkipOptions\n   */ /**\n   * @param {string | RegExp} chars\n   * @returns {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */function skip(chars){return function(text,index,opts){var backwards=opts&&opts.backwards;// Allow `skip` functions to be threaded together without having\n// to check for failures (did someone say monads?).\nif(index===false){return false;}var length=text.length;var cursor=index;while(cursor>=0&&cursor<length){var c=text.charAt(cursor);if(chars instanceof RegExp){if(!chars.test(c)){return cursor;}}else if(!chars.includes(c)){return cursor;}backwards?cursor--:cursor++;}if(cursor===-1||cursor===length){// If we reached the beginning or end of the file, return the\n// out-of-bounds cursor. It\'s up to the caller to handle this\n// correctly. We don\'t want to indicate `false` though if it\n// actually skipped valid characters.\nreturn cursor;}return false;};}/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipWhitespace=skip(/\\s/);/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipSpaces=skip(" \\t");/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipToLineEnd=skip(",; \\t");/**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */var skipEverythingButNewLine=skip(/[^\\r\\n]/);/**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */function skipInlineComment(text,index){if(index===false){return false;}if(text.charAt(index)==="/"&&text.charAt(index+1)==="*"){for(var i=index+2;i<text.length;++i){if(text.charAt(i)==="*"&&text.charAt(i+1)==="/"){return i+2;}}}return index;}/**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */function skipTrailingComment(text,index){if(index===false){return false;}if(text.charAt(index)==="/"&&text.charAt(index+1)==="/"){return skipEverythingButNewLine(text,index);}return index;}// This one doesn\'t use the above helper function because it wants to\n// test \\r\\n in order and `skip` doesn\'t support ordering and we only\n// want to skip one newline. It\'s simple to implement.\n/**\n   * @param {string} text\n   * @param {number | false} index\n   * @param {SkipOptions=} opts\n   * @returns {number | false}\n   */function skipNewline(text,index,opts){var backwards=opts&&opts.backwards;if(index===false){return false;}var atIndex=text.charAt(index);if(backwards){if(text.charAt(index-1)==="\\r"&&atIndex==="\\n"){return index-2;}if(atIndex==="\\n"||atIndex==="\\r"||atIndex==="\\u2028"||atIndex==="\\u2029"){return index-1;}}else{if(atIndex==="\\r"&&text.charAt(index+1)==="\\n"){return index+2;}if(atIndex==="\\n"||atIndex==="\\r"||atIndex==="\\u2028"||atIndex==="\\u2029"){return index+1;}}return index;}/**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */function hasNewline(text,index,opts){opts=opts||{};var idx=skipSpaces(text,opts.backwards?index-1:index,opts);var idx2=skipNewline(text,idx,opts);return idx!==idx2;}/**\n   * @param {string} text\n   * @param {number} start\n   * @param {number} end\n   * @returns {boolean}\n   */function hasNewlineInRange(text,start,end){for(var i=start;i<end;++i){if(text.charAt(i)==="\\n"){return true;}}return false;}// Note: this function doesn\'t ignore leading comments unlike isNextLineEmpty\n/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locStart\n   */function isPreviousLineEmpty(text,node,locStart){/** @type {number | false} */var idx=locStart(node)-1;idx=skipSpaces(text,idx,{backwards:true});idx=skipNewline(text,idx,{backwards:true});idx=skipSpaces(text,idx,{backwards:true});var idx2=skipNewline(text,idx,{backwards:true});return idx!==idx2;}/**\n   * @param {string} text\n   * @param {number} index\n   * @returns {boolean}\n   */function isNextLineEmptyAfterIndex(text,index){/** @type {number | false} */var oldIdx=null;/** @type {number | false} */var idx=index;while(idx!==oldIdx){// We need to skip all the potential trailing inline comments\noldIdx=idx;idx=skipToLineEnd(text,idx);idx=skipInlineComment(text,idx);idx=skipSpaces(text,idx);}idx=skipTrailingComment(text,idx);idx=skipNewline(text,idx);return idx!==false&&hasNewline(text,idx);}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {boolean}\n   */function isNextLineEmpty(text,node,locEnd){return isNextLineEmptyAfterIndex(text,locEnd(node));}/**\n   * @param {string} text\n   * @param {number} idx\n   * @returns {number | false}\n   */function getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,idx){/** @type {number | false} */var oldIdx=null;/** @type {number | false} */var nextIdx=idx;while(nextIdx!==oldIdx){oldIdx=nextIdx;nextIdx=skipSpaces(text,nextIdx);nextIdx=skipInlineComment(text,nextIdx);nextIdx=skipTrailingComment(text,nextIdx);nextIdx=skipNewline(text,nextIdx);}return nextIdx;}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {number | false}\n   */function getNextNonSpaceNonCommentCharacterIndex(text,node,locEnd){return getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,locEnd(node));}/**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {string}\n   */function getNextNonSpaceNonCommentCharacter(text,node,locEnd){return text.charAt(// @ts-ignore => TBD: can return false, should we define a fallback?\ngetNextNonSpaceNonCommentCharacterIndex(text,node,locEnd));}/**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */function hasSpaces(text,index,opts){opts=opts||{};var idx=skipSpaces(text,opts.backwards?index-1:index,opts);return idx!==index;}/**\n   * @param {{range?: [number, number], start?: number}} node\n   * @param {number} index\n   */function setLocStart(node,index){if(node.range){node.range[0]=index;}else{node.start=index;}}/**\n   * @param {{range?: [number, number], end?: number}} node\n   * @param {number} index\n   */function setLocEnd(node,index){if(node.range){node.range[1]=index;}else{node.end=index;}}var PRECEDENCE={};[["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].forEach(function(tier,i){tier.forEach(function(op){PRECEDENCE[op]=i;});});function getPrecedence(op){return PRECEDENCE[op];}var equalityOperators={"==":true,"!=":true,"===":true,"!==":true};var multiplicativeOperators={"*":true,"/":true,"%":true};var bitshiftOperators={">>":true,">>>":true,"<<":true};function shouldFlatten(parentOp,nodeOp){if(getPrecedence(nodeOp)!==getPrecedence(parentOp)){return false;}// ** is right-associative\n// x ** y ** z --\x3e x ** (y ** z)\nif(parentOp==="**"){return false;}// x == y == z --\x3e (x == y) == z\nif(equalityOperators[parentOp]&&equalityOperators[nodeOp]){return false;}// x * y % z --\x3e (x * y) % z\nif(nodeOp==="%"&&multiplicativeOperators[parentOp]||parentOp==="%"&&multiplicativeOperators[nodeOp]){return false;}// x * y / z --\x3e (x * y) / z\n// x / y * z --\x3e (x / y) * z\nif(nodeOp!==parentOp&&multiplicativeOperators[nodeOp]&&multiplicativeOperators[parentOp]){return false;}// x << y << z --\x3e (x << y) << z\nif(bitshiftOperators[parentOp]&&bitshiftOperators[nodeOp]){return false;}return true;}function isBitwiseOperator(operator){return!!bitshiftOperators[operator]||operator==="|"||operator==="^"||operator==="&";}// Tests if an expression starts with `{`, or (if forbidFunctionClassAndDoExpr\n// holds) `function`, `class`, or `do {}`. Will be overzealous if there\'s\n// already necessary grouping parentheses.\nfunction startsWithNoLookaheadToken(node,forbidFunctionClassAndDoExpr){node=getLeftMost(node);switch(node.type){case"FunctionExpression":case"ClassExpression":case"DoExpression":return forbidFunctionClassAndDoExpr;case"ObjectExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return startsWithNoLookaheadToken(node.object,forbidFunctionClassAndDoExpr);case"TaggedTemplateExpression":if(node.tag.type==="FunctionExpression"){// IIFEs are always already parenthesized\nreturn false;}return startsWithNoLookaheadToken(node.tag,forbidFunctionClassAndDoExpr);case"CallExpression":case"OptionalCallExpression":if(node.callee.type==="FunctionExpression"){// IIFEs are always already parenthesized\nreturn false;}return startsWithNoLookaheadToken(node.callee,forbidFunctionClassAndDoExpr);case"ConditionalExpression":return startsWithNoLookaheadToken(node.test,forbidFunctionClassAndDoExpr);case"UpdateExpression":return!node.prefix&&startsWithNoLookaheadToken(node.argument,forbidFunctionClassAndDoExpr);case"BindExpression":return node.object&&startsWithNoLookaheadToken(node.object,forbidFunctionClassAndDoExpr);case"SequenceExpression":return startsWithNoLookaheadToken(node.expressions[0],forbidFunctionClassAndDoExpr);case"TSAsExpression":return startsWithNoLookaheadToken(node.expression,forbidFunctionClassAndDoExpr);default:return false;}}function getLeftMost(node){if(node.left){return getLeftMost(node.left);}return node;}/**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @param {number=} startIndex\n   * @returns {number}\n   */function getAlignmentSize(value,tabWidth,startIndex){startIndex=startIndex||0;var size=0;for(var i=startIndex;i<value.length;++i){if(value[i]==="\\t"){// Tabs behave in a way that they are aligned to the nearest\n// multiple of tabWidth:\n// 0 -> 4, 1 -> 4, 2 -> 4, 3 -> 4\n// 4 -> 8, 5 -> 8, 6 -> 8, 7 -> 8 ...\nsize=size+tabWidth-size%tabWidth;}else{size++;}}return size;}/**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @returns {number}\n   */function getIndentSize(value,tabWidth){var lastNewlineIndex=value.lastIndexOf("\\n");if(lastNewlineIndex===-1){return 0;}return getAlignmentSize(// All the leading whitespaces\nvalue.slice(lastNewlineIndex+1).match(/^[ \\t]*/)[0],tabWidth);}/**\n   * @typedef {\'"\' | "\'"} Quote\n   */ /**\n   *\n   * @param {string} raw\n   * @param {Quote} preferredQuote\n   * @returns {Quote}\n   */function getPreferredQuote(raw,preferredQuote){// `rawContent` is the string exactly like it appeared in the input source\n// code, without its enclosing quotes.\nvar rawContent=raw.slice(1,-1);/** @type {{ quote: \'"\', regex: RegExp }} */var double={quote:\'"\',regex:/"/g};/** @type {{ quote: "\'", regex: RegExp }} */var single={quote:"\'",regex:/\'/g};var preferred=preferredQuote==="\'"?single:double;var alternate=preferred===single?double:single;var result=preferred.quote;// If `rawContent` contains at least one of the quote preferred for enclosing\n// the string, we might want to enclose with the alternate quote instead, to\n// minimize the number of escaped quotes.\nif(rawContent.includes(preferred.quote)||rawContent.includes(alternate.quote)){var numPreferredQuotes=(rawContent.match(preferred.regex)||[]).length;var numAlternateQuotes=(rawContent.match(alternate.regex)||[]).length;result=numPreferredQuotes>numAlternateQuotes?alternate.quote:preferred.quote;}return result;}function printString(raw,options,isDirectiveLiteral){// `rawContent` is the string exactly like it appeared in the input source\n// code, without its enclosing quotes.\nvar rawContent=raw.slice(1,-1);// Check for the alternate quote, to determine if we\'re allowed to swap\n// the quotes on a DirectiveLiteral.\nvar canChangeDirectiveQuotes=!rawContent.includes(\'"\')&&!rawContent.includes("\'");/** @type {Quote} */var enclosingQuote=options.parser==="json"?\'"\':options.__isInHtmlAttribute?"\'":getPreferredQuote(raw,options.singleQuote?"\'":\'"\');// Directives are exact code unit sequences, which means that you can\'t\n// change the escape sequences they use.\n// See https://github.com/prettier/prettier/issues/1555\n// and https://tc39.github.io/ecma262/#directive-prologue\nif(isDirectiveLiteral){if(canChangeDirectiveQuotes){return enclosingQuote+rawContent+enclosingQuote;}return raw;}// It might sound unnecessary to use `makeString` even if the string already\n// is enclosed with `enclosingQuote`, but it isn\'t. The string could contain\n// unnecessary escapes (such as in `"\\\'"`). Always using `makeString` makes\n// sure that we consistently output the minimum amount of escaped quotes.\nreturn makeString(rawContent,enclosingQuote,!(options.parser==="css"||options.parser==="less"||options.parser==="scss"||options.embeddedInHtml));}/**\n   * @param {string} rawContent\n   * @param {Quote} enclosingQuote\n   * @param {boolean=} unescapeUnnecessaryEscapes\n   * @returns {string}\n   */function makeString(rawContent,enclosingQuote,unescapeUnnecessaryEscapes){var otherQuote=enclosingQuote===\'"\'?"\'":\'"\';// Matches _any_ escape and unescaped quotes (both single and double).\nvar regex=/\\\\([\\s\\S])|([\'"])/g;// Escape and unescape single and double quotes as needed to be able to\n// enclose `rawContent` with `enclosingQuote`.\nvar newContent=rawContent.replace(regex,function(match,escaped,quote){// If we matched an escape, and the escaped character is a quote of the\n// other type than we intend to enclose the string with, there\'s no need for\n// it to be escaped, so return it _without_ the backslash.\nif(escaped===otherQuote){return escaped;}// If we matched an unescaped quote and it is of the _same_ type as we\n// intend to enclose the string with, it must be escaped, so return it with\n// a backslash.\nif(quote===enclosingQuote){return"\\\\"+quote;}if(quote){return quote;}// Unescape any unnecessarily escaped character.\n// Adapted from https://github.com/eslint/eslint/blob/de0b4ad7bd820ade41b1f606008bea68683dc11a/lib/rules/no-useless-escape.js#L27\nreturn unescapeUnnecessaryEscapes&&/^[^\\\\nrvtbfux\\r\\n\\u2028\\u2029"\'0-7]$/.test(escaped)?escaped:"\\\\"+escaped;});return enclosingQuote+newContent+enclosingQuote;}function printNumber(rawNumber){return rawNumber.toLowerCase()// Remove unnecessary plus and zeroes from scientific notation.\n.replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/,"$1$2$3")// Remove unnecessary scientific notation (1e0).\n.replace(/^([+-]?[\\d.]+)e[+-]?0+$/,"$1")// Make sure numbers always start with a digit.\n.replace(/^([+-])?\\./,"$10.")// Remove extraneous trailing decimal zeroes.\n.replace(/(\\.\\d+?)0+(?=e|$)/,"$1")// Remove trailing dot.\n.replace(/\\.(?=e|$)/,"");}/**\n   * @param {string} str\n   * @param {string} target\n   * @returns {number}\n   */function getMaxContinuousCount(str,target){var results=str.match(new RegExp("(".concat(escapeStringRegexp$2(target),")+"),"g"));if(results===null){return 0;}return results.reduce(function(maxCount,result){return Math.max(maxCount,result.length/target.length);},0);}function getMinNotPresentContinuousCount(str,target){var matches=str.match(new RegExp("(".concat(escapeStringRegexp$2(target),")+"),"g"));if(matches===null){return 0;}var countPresent=new Map();var max=0;var _iterator27=_createForOfIteratorHelper(matches),_step27;try{for(_iterator27.s();!(_step27=_iterator27.n()).done;){var match=_step27.value;var count=match.length/target.length;countPresent.set(count,true);if(count>max){max=count;}}}catch(err){_iterator27.e(err);}finally{_iterator27.f();}for(var i=1;i<max;i++){if(!countPresent.get(i)){return i;}}return max+1;}/**\n   * @param {string} text\n   * @returns {number}\n   */function getStringWidth(text){if(!text){return 0;}// shortcut to avoid needless string `RegExp`s, replacements, and allocations within `string-width`\nif(!notAsciiRegex.test(text)){return text.length;}return stringWidth_1(text);}function hasIgnoreComment(path){var node=path.getValue();return hasNodeIgnoreComment(node);}function hasNodeIgnoreComment(node){return node&&(node.comments&&node.comments.length>0&&node.comments.some(function(comment){return isNodeIgnoreComment(comment)&&!comment.unignore;})||node.prettierIgnore);}function isNodeIgnoreComment(comment){return comment.value.trim()==="prettier-ignore";}function addCommentHelper(node,comment){var comments=node.comments||(node.comments=[]);comments.push(comment);comment.printed=false;// For some reason, TypeScript parses `// x` inside of JSXText as a comment\n// We already "print" it via the raw text, we don\'t need to re-print it as a\n// comment\nif(node.type==="JSXText"){comment.printed=true;}}function addLeadingComment(node,comment){comment.leading=true;comment.trailing=false;addCommentHelper(node,comment);}function addDanglingComment(node,comment){comment.leading=false;comment.trailing=false;addCommentHelper(node,comment);}function addTrailingComment(node,comment){comment.leading=false;comment.trailing=true;addCommentHelper(node,comment);}function isWithinParentArrayProperty(path,propertyName){var node=path.getValue();var parent=path.getParentNode();if(parent==null){return false;}if(!Array.isArray(parent[propertyName])){return false;}var key=path.getName();return parent[propertyName][key]===node;}function replaceEndOfLineWith(text,replacement){var parts=[];var _iterator28=_createForOfIteratorHelper(text.split("\\n")),_step28;try{for(_iterator28.s();!(_step28=_iterator28.n()).done;){var part=_step28.value;if(parts.length!==0){parts.push(replacement);}parts.push(part);}}catch(err){_iterator28.e(err);}finally{_iterator28.f();}return parts;}var util$1={replaceEndOfLineWith:replaceEndOfLineWith,getStringWidth:getStringWidth,getMaxContinuousCount:getMaxContinuousCount,getMinNotPresentContinuousCount:getMinNotPresentContinuousCount,getPrecedence:getPrecedence,shouldFlatten:shouldFlatten,isBitwiseOperator:isBitwiseOperator,getPenultimate:getPenultimate,getLast:getLast,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:getNextNonSpaceNonCommentCharacterIndexWithStartIndex,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex,getNextNonSpaceNonCommentCharacter:getNextNonSpaceNonCommentCharacter,skip:skip,skipWhitespace:skipWhitespace,skipSpaces:skipSpaces,skipToLineEnd:skipToLineEnd,skipEverythingButNewLine:skipEverythingButNewLine,skipInlineComment:skipInlineComment,skipTrailingComment:skipTrailingComment,skipNewline:skipNewline,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex,isNextLineEmpty:isNextLineEmpty,isPreviousLineEmpty:isPreviousLineEmpty,hasNewline:hasNewline,hasNewlineInRange:hasNewlineInRange,hasSpaces:hasSpaces,setLocStart:setLocStart,setLocEnd:setLocEnd,startsWithNoLookaheadToken:startsWithNoLookaheadToken,getAlignmentSize:getAlignmentSize,getIndentSize:getIndentSize,getPreferredQuote:getPreferredQuote,printString:printString,printNumber:printNumber,hasIgnoreComment:hasIgnoreComment,hasNodeIgnoreComment:hasNodeIgnoreComment,isNodeIgnoreComment:isNodeIgnoreComment,makeString:makeString,addLeadingComment:addLeadingComment,addDanglingComment:addDanglingComment,addTrailingComment:addTrailingComment,isWithinParentArrayProperty:isWithinParentArrayProperty};function guessEndOfLine(text){var index=text.indexOf("\\r");if(index>=0){return text.charAt(index+1)==="\\n"?"crlf":"cr";}return"lf";}function convertEndOfLineToChars(value){switch(value){case"cr":return"\\r";case"crlf":return"\\r\\n";default:return"\\n";}}var endOfLine={guessEndOfLine:guessEndOfLine,convertEndOfLineToChars:convertEndOfLineToChars};var getStringWidth$1=util$1.getStringWidth;var convertEndOfLineToChars$1=endOfLine.convertEndOfLineToChars;var concat$1=docBuilders.concat,fill$1=docBuilders.fill,cursor$1=docBuilders.cursor;/** @type {Record<symbol, typeof MODE_BREAK | typeof MODE_FLAT>} */var groupModeMap;var MODE_BREAK=1;var MODE_FLAT=2;function rootIndent(){return{value:"",length:0,queue:[]};}function makeIndent(ind,options){return generateInd(ind,{type:"indent"},options);}function makeAlign(ind,n,options){return n===-Infinity?ind.root||rootIndent():n<0?generateInd(ind,{type:"dedent"},options):!n?ind:n.type==="root"?Object.assign({},ind,{root:ind}):typeof n==="string"?generateInd(ind,{type:"stringAlign",n:n},options):generateInd(ind,{type:"numberAlign",n:n},options);}function generateInd(ind,newPart,options){var queue=newPart.type==="dedent"?ind.queue.slice(0,-1):ind.queue.concat(newPart);var value="";var length=0;var lastTabs=0;var lastSpaces=0;var _iterator29=_createForOfIteratorHelper(queue),_step29;try{for(_iterator29.s();!(_step29=_iterator29.n()).done;){var part=_step29.value;switch(part.type){case"indent":flush();if(options.useTabs){addTabs(1);}else{addSpaces(options.tabWidth);}break;case"stringAlign":flush();value+=part.n;length+=part.n.length;break;case"numberAlign":lastTabs+=1;lastSpaces+=part.n;break;/* istanbul ignore next */default:throw new Error("Unexpected type \'".concat(part.type,"\'"));}}}catch(err){_iterator29.e(err);}finally{_iterator29.f();}flushSpaces();return Object.assign({},ind,{value:value,length:length,queue:queue});function addTabs(count){value+="\\t".repeat(count);length+=options.tabWidth*count;}function addSpaces(count){value+=" ".repeat(count);length+=count;}function flush(){if(options.useTabs){flushTabs();}else{flushSpaces();}}function flushTabs(){if(lastTabs>0){addTabs(lastTabs);}resetLast();}function flushSpaces(){if(lastSpaces>0){addSpaces(lastSpaces);}resetLast();}function resetLast(){lastTabs=0;lastSpaces=0;}}function trim$1(out){if(out.length===0){return 0;}var trimCount=0;// Trim whitespace at the end of line\nwhile(out.length>0&&typeof out[out.length-1]==="string"&&out[out.length-1].match(/^[ \\t]*$/)){trimCount+=out.pop().length;}if(out.length&&typeof out[out.length-1]==="string"){var trimmed=out[out.length-1].replace(/[ \\t]*$/,"");trimCount+=out[out.length-1].length-trimmed.length;out[out.length-1]=trimmed;}return trimCount;}function fits(next,restCommands,width,options,mustBeFlat){var restIdx=restCommands.length;var cmds=[next];// `out` is only used for width counting because `trim` requires to look\n// backwards for space characters.\nvar out=[];while(width>=0){if(cmds.length===0){if(restIdx===0){return true;}cmds.push(restCommands[restIdx-1]);restIdx--;continue;}var _cmds$pop=cmds.pop(),_cmds$pop2=(0,_slicedToArray2.default)(_cmds$pop,3),ind=_cmds$pop2[0],mode=_cmds$pop2[1],_doc=_cmds$pop2[2];if(typeof _doc==="string"){out.push(_doc);width-=getStringWidth$1(_doc);}else{switch(_doc.type){case"concat":for(var i=_doc.parts.length-1;i>=0;i--){cmds.push([ind,mode,_doc.parts[i]]);}break;case"indent":cmds.push([makeIndent(ind,options),mode,_doc.contents]);break;case"align":cmds.push([makeAlign(ind,_doc.n,options),mode,_doc.contents]);break;case"trim":width+=trim$1(out);break;case"group":if(mustBeFlat&&_doc.break){return false;}cmds.push([ind,_doc.break?MODE_BREAK:mode,_doc.contents]);if(_doc.id){groupModeMap[_doc.id]=cmds[cmds.length-1][1];}break;case"fill":for(var _i30=_doc.parts.length-1;_i30>=0;_i30--){cmds.push([ind,mode,_doc.parts[_i30]]);}break;case"if-break":{var groupMode=_doc.groupId?groupModeMap[_doc.groupId]:mode;if(groupMode===MODE_BREAK){if(_doc.breakContents){cmds.push([ind,mode,_doc.breakContents]);}}if(groupMode===MODE_FLAT){if(_doc.flatContents){cmds.push([ind,mode,_doc.flatContents]);}}break;}case"line":switch(mode){// fallthrough\ncase MODE_FLAT:if(!_doc.hard){if(!_doc.soft){out.push(" ");width-=1;}break;}return true;case MODE_BREAK:return true;}break;}}}return false;}function printDocToString(doc,options){groupModeMap={};var width=options.printWidth;var newLine=convertEndOfLineToChars$1(options.endOfLine);var pos=0;// cmds is basically a stack. We\'ve turned a recursive call into a\n// while loop which is much faster. The while loop below adds new\n// cmds to the array instead of recursively calling `print`.\nvar cmds=[[rootIndent(),MODE_BREAK,doc]];var out=[];var shouldRemeasure=false;var lineSuffix=[];while(cmds.length!==0){var _cmds$pop3=cmds.pop(),_cmds$pop4=(0,_slicedToArray2.default)(_cmds$pop3,3),ind=_cmds$pop4[0],mode=_cmds$pop4[1],_doc2=_cmds$pop4[2];if(typeof _doc2==="string"){var formatted=newLine!=="\\n"&&_doc2.includes("\\n")?_doc2.replace(/\\n/g,newLine):_doc2;out.push(formatted);pos+=getStringWidth$1(formatted);}else{switch(_doc2.type){case"cursor":out.push(cursor$1.placeholder);break;case"concat":for(var i=_doc2.parts.length-1;i>=0;i--){cmds.push([ind,mode,_doc2.parts[i]]);}break;case"indent":cmds.push([makeIndent(ind,options),mode,_doc2.contents]);break;case"align":cmds.push([makeAlign(ind,_doc2.n,options),mode,_doc2.contents]);break;case"trim":pos-=trim$1(out);break;case"group":switch(mode){case MODE_FLAT:if(!shouldRemeasure){cmds.push([ind,_doc2.break?MODE_BREAK:MODE_FLAT,_doc2.contents]);break;}// fallthrough\ncase MODE_BREAK:{shouldRemeasure=false;var next=[ind,MODE_FLAT,_doc2.contents];var rem=width-pos;if(!_doc2.break&&fits(next,cmds,rem,options)){cmds.push(next);}else{// Expanded states are a rare case where a document\n// can manually provide multiple representations of\n// itself. It provides an array of documents\n// going from the least expanded (most flattened)\n// representation first to the most expanded. If a\n// group has these, we need to manually go through\n// these states and find the first one that fits.\nif(_doc2.expandedStates){var mostExpanded=_doc2.expandedStates[_doc2.expandedStates.length-1];if(_doc2.break){cmds.push([ind,MODE_BREAK,mostExpanded]);break;}else{for(var _i31=1;_i31<_doc2.expandedStates.length+1;_i31++){if(_i31>=_doc2.expandedStates.length){cmds.push([ind,MODE_BREAK,mostExpanded]);break;}else{var state=_doc2.expandedStates[_i31];var cmd=[ind,MODE_FLAT,state];if(fits(cmd,cmds,rem,options)){cmds.push(cmd);break;}}}}}else{cmds.push([ind,MODE_BREAK,_doc2.contents]);}}break;}}if(_doc2.id){groupModeMap[_doc2.id]=cmds[cmds.length-1][1];}break;// Fills each line with as much code as possible before moving to a new\n// line with the same indentation.\n//\n// Expects doc.parts to be an array of alternating content and\n// whitespace. The whitespace contains the linebreaks.\n//\n// For example:\n//   ["I", line, "love", line, "monkeys"]\n// or\n//   [{ type: group, ... }, softline, { type: group, ... }]\n//\n// It uses this parts structure to handle three main layout cases:\n// * The first two content items fit on the same line without\n//   breaking\n//   -> output the first content item and the whitespace "flat".\n// * Only the first content item fits on the line without breaking\n//   -> output the first content item "flat" and the whitespace with\n//   "break".\n// * Neither content item fits on the line without breaking\n//   -> output the first content item and the whitespace with "break".\ncase"fill":{var _rem=width-pos;var parts=_doc2.parts;if(parts.length===0){break;}var _parts=(0,_slicedToArray2.default)(parts,2),content=_parts[0],whitespace=_parts[1];var contentFlatCmd=[ind,MODE_FLAT,content];var contentBreakCmd=[ind,MODE_BREAK,content];var contentFits=fits(contentFlatCmd,[],_rem,options,true);if(parts.length===1){if(contentFits){cmds.push(contentFlatCmd);}else{cmds.push(contentBreakCmd);}break;}var whitespaceFlatCmd=[ind,MODE_FLAT,whitespace];var whitespaceBreakCmd=[ind,MODE_BREAK,whitespace];if(parts.length===2){if(contentFits){cmds.push(whitespaceFlatCmd);cmds.push(contentFlatCmd);}else{cmds.push(whitespaceBreakCmd);cmds.push(contentBreakCmd);}break;}// At this point we\'ve handled the first pair (context, separator)\n// and will create a new fill doc for the rest of the content.\n// Ideally we wouldn\'t mutate the array here but copying all the\n// elements to a new array would make this algorithm quadratic,\n// which is unusable for large arrays (e.g. large texts in JSX).\nparts.splice(0,2);var remainingCmd=[ind,mode,fill$1(parts)];var secondContent=parts[0];var firstAndSecondContentFlatCmd=[ind,MODE_FLAT,concat$1([content,whitespace,secondContent])];var firstAndSecondContentFits=fits(firstAndSecondContentFlatCmd,[],_rem,options,true);if(firstAndSecondContentFits){cmds.push(remainingCmd);cmds.push(whitespaceFlatCmd);cmds.push(contentFlatCmd);}else if(contentFits){cmds.push(remainingCmd);cmds.push(whitespaceBreakCmd);cmds.push(contentFlatCmd);}else{cmds.push(remainingCmd);cmds.push(whitespaceBreakCmd);cmds.push(contentBreakCmd);}break;}case"if-break":{var groupMode=_doc2.groupId?groupModeMap[_doc2.groupId]:mode;if(groupMode===MODE_BREAK){if(_doc2.breakContents){cmds.push([ind,mode,_doc2.breakContents]);}}if(groupMode===MODE_FLAT){if(_doc2.flatContents){cmds.push([ind,mode,_doc2.flatContents]);}}break;}case"line-suffix":lineSuffix.push([ind,mode,_doc2.contents]);break;case"line-suffix-boundary":if(lineSuffix.length>0){cmds.push([ind,mode,{type:"line",hard:true}]);}break;case"line":switch(mode){case MODE_FLAT:if(!_doc2.hard){if(!_doc2.soft){out.push(" ");pos+=1;}break;}else{// This line was forced into the output even if we\n// were in flattened mode, so we need to tell the next\n// group that no matter what, it needs to remeasure\n// because the previous measurement didn\'t accurately\n// capture the entire expression (this is necessary\n// for nested groups)\nshouldRemeasure=true;}// fallthrough\ncase MODE_BREAK:if(lineSuffix.length){cmds.push([ind,mode,_doc2]);cmds.push.apply(cmds,(0,_toConsumableArray3.default)(lineSuffix.reverse()));lineSuffix=[];break;}if(_doc2.literal){if(ind.root){out.push(newLine,ind.root.value);pos=ind.root.length;}else{out.push(newLine);pos=0;}}else{pos-=trim$1(out);out.push(newLine+ind.value);pos=ind.length;}break;}break;}}}var cursorPlaceholderIndex=out.indexOf(cursor$1.placeholder);if(cursorPlaceholderIndex!==-1){var otherCursorPlaceholderIndex=out.indexOf(cursor$1.placeholder,cursorPlaceholderIndex+1);var beforeCursor=out.slice(0,cursorPlaceholderIndex).join("");var aroundCursor=out.slice(cursorPlaceholderIndex+1,otherCursorPlaceholderIndex).join("");var afterCursor=out.slice(otherCursorPlaceholderIndex+1).join("");return{formatted:beforeCursor+aroundCursor+afterCursor,cursorNodeStart:beforeCursor.length,cursorNodeText:aroundCursor};}return{formatted:out.join("")};}var docPrinter={printDocToString:printDocToString};var traverseDocOnExitStackMarker={};function traverseDoc(doc,onEnter,onExit,shouldTraverseConditionalGroups){var docsStack=[doc];while(docsStack.length!==0){var _doc3=docsStack.pop();if(_doc3===traverseDocOnExitStackMarker){onExit(docsStack.pop());continue;}var shouldRecurse=true;if(onEnter){if(onEnter(_doc3)===false){shouldRecurse=false;}}if(onExit){docsStack.push(_doc3);docsStack.push(traverseDocOnExitStackMarker);}if(shouldRecurse){// When there are multiple parts to process,\n// the parts need to be pushed onto the stack in reverse order,\n// so that they are processed in the original order\n// when the stack is popped.\nif(_doc3.type==="concat"||_doc3.type==="fill"){for(var ic=_doc3.parts.length,i=ic-1;i>=0;--i){docsStack.push(_doc3.parts[i]);}}else if(_doc3.type==="if-break"){if(_doc3.flatContents){docsStack.push(_doc3.flatContents);}if(_doc3.breakContents){docsStack.push(_doc3.breakContents);}}else if(_doc3.type==="group"&&_doc3.expandedStates){if(shouldTraverseConditionalGroups){for(var _ic=_doc3.expandedStates.length,_i32=_ic-1;_i32>=0;--_i32){docsStack.push(_doc3.expandedStates[_i32]);}}else{docsStack.push(_doc3.contents);}}else if(_doc3.contents){docsStack.push(_doc3.contents);}}}}function mapDoc(doc,cb){if(doc.type==="concat"||doc.type==="fill"){var parts=doc.parts.map(function(part){return mapDoc(part,cb);});return cb(Object.assign({},doc,{parts:parts}));}else if(doc.type==="if-break"){var breakContents=doc.breakContents&&mapDoc(doc.breakContents,cb);var flatContents=doc.flatContents&&mapDoc(doc.flatContents,cb);return cb(Object.assign({},doc,{breakContents:breakContents,flatContents:flatContents}));}else if(doc.contents){var contents=mapDoc(doc.contents,cb);return cb(Object.assign({},doc,{contents:contents}));}return cb(doc);}function findInDoc(doc,fn,defaultValue){var result=defaultValue;var hasStopped=false;function findInDocOnEnterFn(doc){var maybeResult=fn(doc);if(maybeResult!==undefined){hasStopped=true;result=maybeResult;}if(hasStopped){return false;}}traverseDoc(doc,findInDocOnEnterFn);return result;}function isEmpty(n){return typeof n==="string"&&n.length===0;}function isLineNextFn(doc){if(typeof doc==="string"){return false;}if(doc.type==="line"){return true;}}function isLineNext(doc){return findInDoc(doc,isLineNextFn,false);}function willBreakFn(doc){if(doc.type==="group"&&doc.break){return true;}if(doc.type==="line"&&doc.hard){return true;}if(doc.type==="break-parent"){return true;}}function willBreak(doc){return findInDoc(doc,willBreakFn,false);}function breakParentGroup(groupStack){if(groupStack.length>0){var parentGroup=groupStack[groupStack.length-1];// Breaks are not propagated through conditional groups because\n// the user is expected to manually handle what breaks.\nif(!parentGroup.expandedStates){parentGroup.break=true;}}return null;}function propagateBreaks(doc){var alreadyVisitedSet=new Set();var groupStack=[];function propagateBreaksOnEnterFn(doc){if(doc.type==="break-parent"){breakParentGroup(groupStack);}if(doc.type==="group"){groupStack.push(doc);if(alreadyVisitedSet.has(doc)){return false;}alreadyVisitedSet.add(doc);}}function propagateBreaksOnExitFn(doc){if(doc.type==="group"){var _group4=groupStack.pop();if(_group4.break){breakParentGroup(groupStack);}}}traverseDoc(doc,propagateBreaksOnEnterFn,propagateBreaksOnExitFn,/* shouldTraverseConditionalGroups */true);}function removeLinesFn(doc){// Force this doc into flat mode by statically converting all\n// lines into spaces (or soft lines into nothing). Hard lines\n// should still output because there\'s too great of a chance\n// of breaking existing assumptions otherwise.\nif(doc.type==="line"&&!doc.hard){return doc.soft?"":" ";}else if(doc.type==="if-break"){return doc.flatContents||"";}return doc;}function removeLines(doc){return mapDoc(doc,removeLinesFn);}function stripTrailingHardline(doc){// HACK remove ending hardline, original PR: #1984\nif(doc.type==="concat"&&doc.parts.length!==0){var lastPart=doc.parts[doc.parts.length-1];if(lastPart.type==="concat"){if(lastPart.parts.length===2&&lastPart.parts[0].hard&&lastPart.parts[1].type==="break-parent"){return{type:"concat",parts:doc.parts.slice(0,-1)};}return{type:"concat",parts:doc.parts.slice(0,-1).concat(stripTrailingHardline(lastPart))};}}return doc;}var docUtils={isEmpty:isEmpty,willBreak:willBreak,isLineNext:isLineNext,traverseDoc:traverseDoc,findInDoc:findInDoc,mapDoc:mapDoc,propagateBreaks:propagateBreaks,removeLines:removeLines,stripTrailingHardline:stripTrailingHardline};function flattenDoc(doc){if(doc.type==="concat"){var res=[];for(var i=0;i<doc.parts.length;++i){var doc2=doc.parts[i];if(typeof doc2!=="string"&&doc2.type==="concat"){res.push.apply(res,(0,_toConsumableArray3.default)(flattenDoc(doc2).parts));}else{var flattened=flattenDoc(doc2);if(flattened!==""){res.push(flattened);}}}return Object.assign({},doc,{parts:res});}else if(doc.type==="if-break"){return Object.assign({},doc,{breakContents:doc.breakContents!=null?flattenDoc(doc.breakContents):null,flatContents:doc.flatContents!=null?flattenDoc(doc.flatContents):null});}else if(doc.type==="group"){return Object.assign({},doc,{contents:flattenDoc(doc.contents),expandedStates:doc.expandedStates?doc.expandedStates.map(flattenDoc):doc.expandedStates});}else if(doc.contents){return Object.assign({},doc,{contents:flattenDoc(doc.contents)});}return doc;}function printDoc(doc){if(typeof doc==="string"){return JSON.stringify(doc);}if(doc.type==="line"){if(doc.literal){return"literalline";}if(doc.hard){return"hardline";}if(doc.soft){return"softline";}return"line";}if(doc.type==="break-parent"){return"breakParent";}if(doc.type==="trim"){return"trim";}if(doc.type==="concat"){return"["+doc.parts.map(printDoc).join(", ")+"]";}if(doc.type==="indent"){return"indent("+printDoc(doc.contents)+")";}if(doc.type==="align"){return doc.n===-Infinity?"dedentToRoot("+printDoc(doc.contents)+")":doc.n<0?"dedent("+printDoc(doc.contents)+")":doc.n.type==="root"?"markAsRoot("+printDoc(doc.contents)+")":"align("+JSON.stringify(doc.n)+", "+printDoc(doc.contents)+")";}if(doc.type==="if-break"){return"ifBreak("+printDoc(doc.breakContents)+(doc.flatContents?", "+printDoc(doc.flatContents):"")+")";}if(doc.type==="group"){if(doc.expandedStates){return"conditionalGroup("+"["+doc.expandedStates.map(printDoc).join(",")+"])";}return(doc.break?"wrappedGroup":"group")+"("+printDoc(doc.contents)+")";}if(doc.type==="fill"){return"fill"+"("+doc.parts.map(printDoc).join(", ")+")";}if(doc.type==="line-suffix"){return"lineSuffix("+printDoc(doc.contents)+")";}if(doc.type==="line-suffix-boundary"){return"lineSuffixBoundary";}throw new Error("Unknown doc type "+doc.type);}var docDebug={printDocToDebug:function printDocToDebug(doc){return printDoc(flattenDoc(doc));}};var document={builders:docBuilders,printer:docPrinter,utils:docUtils,debug:docDebug};var getMaxContinuousCount$1=util$1.getMaxContinuousCount,getStringWidth$2=util$1.getStringWidth,getAlignmentSize$1=util$1.getAlignmentSize,getIndentSize$1=util$1.getIndentSize,skip$1=util$1.skip,skipWhitespace$1=util$1.skipWhitespace,skipSpaces$1=util$1.skipSpaces,skipNewline$1=util$1.skipNewline,skipToLineEnd$1=util$1.skipToLineEnd,skipEverythingButNewLine$1=util$1.skipEverythingButNewLine,skipInlineComment$1=util$1.skipInlineComment,skipTrailingComment$1=util$1.skipTrailingComment,hasNewline$1=util$1.hasNewline,hasNewlineInRange$1=util$1.hasNewlineInRange,hasSpaces$1=util$1.hasSpaces,isNextLineEmpty$1=util$1.isNextLineEmpty,isNextLineEmptyAfterIndex$1=util$1.isNextLineEmptyAfterIndex,isPreviousLineEmpty$1=util$1.isPreviousLineEmpty,getNextNonSpaceNonCommentCharacterIndex$1=util$1.getNextNonSpaceNonCommentCharacterIndex,makeString$1=util$1.makeString,addLeadingComment$1=util$1.addLeadingComment,addDanglingComment$1=util$1.addDanglingComment,addTrailingComment$1=util$1.addTrailingComment;var utilShared={getMaxContinuousCount:getMaxContinuousCount$1,getStringWidth:getStringWidth$2,getAlignmentSize:getAlignmentSize$1,getIndentSize:getIndentSize$1,skip:skip$1,skipWhitespace:skipWhitespace$1,skipSpaces:skipSpaces$1,skipNewline:skipNewline$1,skipToLineEnd:skipToLineEnd$1,skipEverythingButNewLine:skipEverythingButNewLine$1,skipInlineComment:skipInlineComment$1,skipTrailingComment:skipTrailingComment$1,hasNewline:hasNewline$1,hasNewlineInRange:hasNewlineInRange$1,hasSpaces:hasSpaces$1,isNextLineEmpty:isNextLineEmpty$1,isNextLineEmptyAfterIndex:isNextLineEmptyAfterIndex$1,isPreviousLineEmpty:isPreviousLineEmpty$1,getNextNonSpaceNonCommentCharacterIndex:getNextNonSpaceNonCommentCharacterIndex$1,makeString:makeString$1,addLeadingComment:addLeadingComment$1,addDanglingComment:addDanglingComment$1,addTrailingComment:addTrailingComment$1};var _document$builders=document.builders,concat$2=_document$builders.concat,line$1=_document$builders.line,hardline$1=_document$builders.hardline,breakParent$1=_document$builders.breakParent,indent$1=_document$builders.indent,lineSuffix$1=_document$builders.lineSuffix,join$1=_document$builders.join,cursor$2=_document$builders.cursor;var hasNewline$2=util$1.hasNewline,skipNewline$2=util$1.skipNewline,isPreviousLineEmpty$2=util$1.isPreviousLineEmpty;var addLeadingComment$2=utilShared.addLeadingComment,addDanglingComment$2=utilShared.addDanglingComment,addTrailingComment$2=utilShared.addTrailingComment;var childNodesCacheKey=Symbol("child-nodes");function getSortedChildNodes(node,options,resultArray){if(!node){return;}var printer=options.printer,locStart=options.locStart,locEnd=options.locEnd;if(resultArray){if(printer.canAttachComment&&printer.canAttachComment(node)){// This reverse insertion sort almost always takes constant\n// time because we almost always (maybe always?) append the\n// nodes in order anyway.\nvar i;for(i=resultArray.length-1;i>=0;--i){if(locStart(resultArray[i])<=locStart(node)&&locEnd(resultArray[i])<=locEnd(node)){break;}}resultArray.splice(i+1,0,node);return;}}else if(node[childNodesCacheKey]){return node[childNodesCacheKey];}var childNodes=printer.getCommentChildNodes&&printer.getCommentChildNodes(node,options)||(0,_typeof3.default)(node)==="object"&&Object.keys(node).filter(function(n){return n!=="enclosingNode"&&n!=="precedingNode"&&n!=="followingNode";}).map(function(n){return node[n];});if(!childNodes){return;}if(!resultArray){Object.defineProperty(node,childNodesCacheKey,{value:resultArray=[],enumerable:false});}childNodes.forEach(function(childNode){getSortedChildNodes(childNode,options,resultArray);});return resultArray;}// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node,comment,options){var locStart=options.locStart,locEnd=options.locEnd;var childNodes=getSortedChildNodes(node,options);var precedingNode;var followingNode;// Time to dust off the old binary search robes and wizard hat.\nvar left=0;var right=childNodes.length;while(left<right){var middle=left+right>>1;var child=childNodes[middle];if(locStart(child)-locStart(comment)<=0&&locEnd(comment)-locEnd(child)<=0){// The comment is completely contained by this child node.\ncomment.enclosingNode=child;decorateComment(child,comment,options);return;// Abandon the binary search at this level.\n}if(locEnd(child)-locStart(comment)<=0){// This child node falls completely before the comment.\n// Because we will never consider this node or any nodes\n// before it again, this node must be the closest preceding\n// node we have encountered so far.\nprecedingNode=child;left=middle+1;continue;}if(locEnd(comment)-locStart(child)<=0){// This child node falls completely after the comment.\n// Because we will never consider this node or any nodes after\n// it again, this node must be the closest following node we\n// have encountered so far.\nfollowingNode=child;right=middle;continue;}/* istanbul ignore next */throw new Error("Comment location overlaps with node location");}// We don\'t want comments inside of different expressions inside of the same\n// template literal to move to another expression.\nif(comment.enclosingNode&&comment.enclosingNode.type==="TemplateLiteral"){var quasis=comment.enclosingNode.quasis;var commentIndex=findExpressionIndexForComment(quasis,comment,options);if(precedingNode&&findExpressionIndexForComment(quasis,precedingNode,options)!==commentIndex){precedingNode=null;}if(followingNode&&findExpressionIndexForComment(quasis,followingNode,options)!==commentIndex){followingNode=null;}}if(precedingNode){comment.precedingNode=precedingNode;}if(followingNode){comment.followingNode=followingNode;}}function attach(comments,ast,text,options){if(!Array.isArray(comments)){return;}var tiesToBreak=[];var locStart=options.locStart,locEnd=options.locEnd;comments.forEach(function(comment,i){if(options.parser==="json"||options.parser==="json5"||options.parser==="__js_expression"||options.parser==="__vue_expression"){if(locStart(comment)-locStart(ast)<=0){addLeadingComment$2(ast,comment);return;}if(locEnd(comment)-locEnd(ast)>=0){addTrailingComment$2(ast,comment);return;}}decorateComment(ast,comment,options);var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;var pluginHandleOwnLineComment=options.printer.handleComments&&options.printer.handleComments.ownLine?options.printer.handleComments.ownLine:function(){return false;};var pluginHandleEndOfLineComment=options.printer.handleComments&&options.printer.handleComments.endOfLine?options.printer.handleComments.endOfLine:function(){return false;};var pluginHandleRemainingComment=options.printer.handleComments&&options.printer.handleComments.remaining?options.printer.handleComments.remaining:function(){return false;};var isLastComment=comments.length-1===i;if(hasNewline$2(text,locStart(comment),{backwards:true})){// If a comment exists on its own line, prefer a leading comment.\n// We also need to check if it\'s the first line of the file.\nif(pluginHandleOwnLineComment(comment,text,options,ast,isLastComment));else if(followingNode){// Always a leading comment.\naddLeadingComment$2(followingNode,comment);}else if(precedingNode){addTrailingComment$2(precedingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}else if(hasNewline$2(text,locEnd(comment))){if(pluginHandleEndOfLineComment(comment,text,options,ast,isLastComment));else if(precedingNode){// There is content before this comment on the same line, but\n// none after it, so prefer a trailing comment of the previous node.\naddTrailingComment$2(precedingNode,comment);}else if(followingNode){addLeadingComment$2(followingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}else{if(pluginHandleRemainingComment(comment,text,options,ast,isLastComment));else if(precedingNode&&followingNode){// Otherwise, text exists both before and after the comment on\n// the same line. If there is both a preceding and following\n// node, use a tie-breaking algorithm to determine if it should\n// be attached to the next or previous node. In the last case,\n// simply attach the right node;\nvar tieCount=tiesToBreak.length;if(tieCount>0){var lastTie=tiesToBreak[tieCount-1];if(lastTie.followingNode!==comment.followingNode){breakTies(tiesToBreak,text,options);}}tiesToBreak.push(comment);}else if(precedingNode){addTrailingComment$2(precedingNode,comment);}else if(followingNode){addLeadingComment$2(followingNode,comment);}else if(enclosingNode){addDanglingComment$2(enclosingNode,comment);}else{// There are no nodes, let\'s attach it to the root of the ast\n/* istanbul ignore next */addDanglingComment$2(ast,comment);}}});breakTies(tiesToBreak,text,options);comments.forEach(function(comment){// These node references were useful for breaking ties, but we\n// don\'t need them anymore, and they create cycles in the AST that\n// may lead to infinite recursion if we don\'t delete them here.\ndelete comment.precedingNode;delete comment.enclosingNode;delete comment.followingNode;});}function breakTies(tiesToBreak,text,options){var tieCount=tiesToBreak.length;if(tieCount===0){return;}var _tiesToBreak$=tiesToBreak[0],precedingNode=_tiesToBreak$.precedingNode,followingNode=_tiesToBreak$.followingNode,enclosingNode=_tiesToBreak$.enclosingNode;var gapRegExp=options.printer.getGapRegex&&options.printer.getGapRegex(enclosingNode)||/^[\\s(]*$/;var gapEndPos=options.locStart(followingNode);// Iterate backwards through tiesToBreak, examining the gaps\n// between the tied comments. In order to qualify as leading, a\n// comment must be separated from followingNode by an unbroken series of\n// gaps (or other comments). Gaps should only contain whitespace or open\n// parentheses.\nvar indexOfFirstLeadingComment;for(indexOfFirstLeadingComment=tieCount;indexOfFirstLeadingComment>0;--indexOfFirstLeadingComment){var comment=tiesToBreak[indexOfFirstLeadingComment-1];assert.strictEqual(comment.precedingNode,precedingNode);assert.strictEqual(comment.followingNode,followingNode);var gap=text.slice(options.locEnd(comment),gapEndPos);if(gapRegExp.test(gap)){gapEndPos=options.locStart(comment);}else{// The gap string contained something other than whitespace or open\n// parentheses.\nbreak;}}tiesToBreak.forEach(function(comment,i){if(i<indexOfFirstLeadingComment){addTrailingComment$2(precedingNode,comment);}else{addLeadingComment$2(followingNode,comment);}});tiesToBreak.length=0;}function printComment(commentPath,options){var comment=commentPath.getValue();comment.printed=true;return options.printer.printComment(commentPath,options);}function findExpressionIndexForComment(quasis,comment,options){var startPos=options.locStart(comment)-1;for(var i=1;i<quasis.length;++i){if(startPos<getQuasiRange(quasis[i]).start){return i-1;}}// We haven\'t found it, it probably means that some of the locations are off.\n// Let\'s just return the first one.\n/* istanbul ignore next */return 0;}function getQuasiRange(expr){if(expr.start!==undefined){// Babel\nreturn{start:expr.start,end:expr.end};}// Flow\nreturn{start:expr.range[0],end:expr.range[1]};}function printLeadingComment(commentPath,print,options){var comment=commentPath.getValue();var contents=printComment(commentPath,options);if(!contents){return"";}var isBlock=options.printer.isBlockComment&&options.printer.isBlockComment(comment);// Leading block comments should see if they need to stay on the\n// same line or not.\nif(isBlock){var lineBreak=hasNewline$2(options.originalText,options.locEnd(comment))?hasNewline$2(options.originalText,options.locStart(comment),{backwards:true})?hardline$1:line$1:" ";return concat$2([contents,lineBreak]);}return concat$2([contents,hardline$1]);}function printTrailingComment(commentPath,print,options){var comment=commentPath.getValue();var contents=printComment(commentPath,options);if(!contents){return"";}var isBlock=options.printer.isBlockComment&&options.printer.isBlockComment(comment);// We don\'t want the line to break\n// when the parentParentNode is a ClassDeclaration/-Expression\n// And the parentNode is in the superClass property\nvar parentNode=commentPath.getNode(1);var parentParentNode=commentPath.getNode(2);var isParentSuperClass=parentParentNode&&(parentParentNode.type==="ClassDeclaration"||parentParentNode.type==="ClassExpression")&&parentParentNode.superClass===parentNode;if(hasNewline$2(options.originalText,options.locStart(comment),{backwards:true})){// This allows comments at the end of nested structures:\n// {\n//   x: 1,\n//   y: 2\n//   // A comment\n// }\n// Those kinds of comments are almost always leading comments, but\n// here it doesn\'t go "outside" the block and turns it into a\n// trailing comment for `2`. We can simulate the above by checking\n// if this a comment on its own line; normal trailing comments are\n// always at the end of another expression.\nvar isLineBeforeEmpty=isPreviousLineEmpty$2(options.originalText,comment,options.locStart);return lineSuffix$1(concat$2([hardline$1,isLineBeforeEmpty?hardline$1:"",contents]));}else if(isBlock||isParentSuperClass){// Trailing block comments never need a newline\nreturn concat$2([" ",contents]);}return concat$2([lineSuffix$1(concat$2([" ",contents])),!isBlock?breakParent$1:""]);}function printDanglingComments(path,options,sameIndent,filter){var parts=[];var node=path.getValue();if(!node||!node.comments){return"";}path.each(function(commentPath){var comment=commentPath.getValue();if(comment&&!comment.leading&&!comment.trailing&&(!filter||filter(comment))){parts.push(printComment(commentPath,options));}},"comments");if(parts.length===0){return"";}if(sameIndent){return join$1(hardline$1,parts);}return indent$1(concat$2([hardline$1,join$1(hardline$1,parts)]));}function prependCursorPlaceholder(path,options,printed){if(path.getNode()===options.cursorNode&&path.getValue()){return concat$2([cursor$2,printed,cursor$2]);}return printed;}function printComments(path,print,options,needsSemi){var value=path.getValue();var printed=print(path);var comments=value&&value.comments;if(!comments||comments.length===0){return prependCursorPlaceholder(path,options,printed);}var leadingParts=[];var trailingParts=[needsSemi?";":"",printed];path.each(function(commentPath){var comment=commentPath.getValue();var leading=comment.leading,trailing=comment.trailing;if(leading){var contents=printLeadingComment(commentPath,print,options);if(!contents){return;}leadingParts.push(contents);var text=options.originalText;var _index=skipNewline$2(text,options.locEnd(comment));if(_index!==false&&hasNewline$2(text,_index)){leadingParts.push(hardline$1);}}else if(trailing){trailingParts.push(printTrailingComment(commentPath,print,options));}},"comments");return prependCursorPlaceholder(path,options,concat$2(leadingParts.concat(trailingParts)));}var comments={attach:attach,printComments:printComments,printDanglingComments:printDanglingComments,getSortedChildNodes:getSortedChildNodes};function getNodeHelper(path,count){var stackIndex=getNodeStackIndexHelper(path.stack,count);return stackIndex===-1?null:path.stack[stackIndex];}function getNodeStackIndexHelper(stack,count){for(var i=stack.length-1;i>=0;i-=2){var value=stack[i];if(value&&!Array.isArray(value)&&--count<0){return i;}}return-1;}var FastPath=/*#__PURE__*/function(){function FastPath(value){(0,_classCallCheck2.default)(this,FastPath);this.stack=[value];}// The name of the current property is always the penultimate element of\n// this.stack, and always a String.\n(0,_createClass2.default)(FastPath,[{key:"getName",value:function getName(){var stack=this.stack;var length=stack.length;if(length>1){return stack[length-2];}// Since the name is always a string, null is a safe sentinel value to\n// return if we do not know the name of the (root) value.\n/* istanbul ignore next */return null;}// The value of the current property is always the final element of\n// this.stack.\n},{key:"getValue",value:function getValue(){return getLast(this.stack);}},{key:"getNode",value:function getNode(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return getNodeHelper(this,count);}},{key:"getParentNode",value:function getParentNode(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return getNodeHelper(this,count+1);}// Temporarily push properties named by string arguments given after the\n// callback function onto this.stack, then call the callback with a\n// reference to this (modified) FastPath object. Note that the stack will\n// be restored to its original state after the callback is finished, so it\n// is probably a mistake to retain a reference to the path.\n},{key:"call",value:function call(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len9=arguments.length,names=new Array(_len9>1?_len9-1:0),_key13=1;_key13<_len9;_key13++){names[_key13-1]=arguments[_key13];}for(var _i33=0,_names=names;_i33<_names.length;_i33++){var _name6=_names[_i33];value=value[_name6];stack.push(_name6,value);}var result=callback(this);stack.length=length;return result;}},{key:"callParent",value:function callParent(callback){var _this$stack;var count=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var stackIndex=getNodeStackIndexHelper(this.stack,count+1);var parentValues=this.stack.splice(stackIndex+1);var result=callback(this);(_this$stack=this.stack).push.apply(_this$stack,(0,_toConsumableArray3.default)(parentValues));return result;}// Similar to FastPath.prototype.call, except that the value obtained by\n// accessing this.getValue()[name1][name2]... should be array-like. The\n// callback will be called with a reference to this path object for each\n// element of the array.\n},{key:"each",value:function each(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len10=arguments.length,names=new Array(_len10>1?_len10-1:0),_key14=1;_key14<_len10;_key14++){names[_key14-1]=arguments[_key14];}for(var _i34=0,_names2=names;_i34<_names2.length;_i34++){var _name7=_names2[_i34];value=value[_name7];stack.push(_name7,value);}for(var i=0;i<value.length;++i){if(i in value){stack.push(i,value[i]);// If the callback needs to know the value of i, call\n// path.getName(), assuming path is the parameter name.\ncallback(this);stack.length-=2;}}stack.length=length;}// Similar to FastPath.prototype.each, except that the results of the\n// callback function invocations are stored in an array and returned at\n// the end of the iteration.\n},{key:"map",value:function map(callback){var stack=this.stack;var length=stack.length;var value=getLast(stack);for(var _len11=arguments.length,names=new Array(_len11>1?_len11-1:0),_key15=1;_key15<_len11;_key15++){names[_key15-1]=arguments[_key15];}for(var _i35=0,_names3=names;_i35<_names3.length;_i35++){var _name8=_names3[_i35];value=value[_name8];stack.push(_name8,value);}var result=new Array(value.length);for(var i=0;i<value.length;++i){if(i in value){stack.push(i,value[i]);result[i]=callback(this,i);stack.length-=2;}}stack.length=length;return result;}/**\n     * @param {...(\n     *   | ((node: any, name: string | null, number: number | null) => boolean)\n     *   | undefined\n     * )} predicates\n     */},{key:"match",value:function match(){var stackPointer=this.stack.length-1;var name=null;var node=this.stack[stackPointer--];for(var _len12=arguments.length,predicates=new Array(_len12),_key16=0;_key16<_len12;_key16++){predicates[_key16]=arguments[_key16];}for(var _i36=0,_predicates=predicates;_i36<_predicates.length;_i36++){var predicate=_predicates[_i36];if(node===undefined){return false;}// skip index/array\nvar _number2=null;if(typeof name==="number"){_number2=name;name=this.stack[stackPointer--];node=this.stack[stackPointer--];}if(predicate&&!predicate(node,name,_number2)){return false;}name=this.stack[stackPointer--];node=this.stack[stackPointer--];}return true;}}]);return FastPath;}();var fastPath=FastPath;var normalize$2=options$1.normalize;function printSubtree(path,print,options,printAstToDoc){if(options.printer.embed){return options.printer.embed(path,print,function(text,partialNextOptions){return textToDoc(text,partialNextOptions,options,printAstToDoc);},options);}}function textToDoc(text,partialNextOptions,parentOptions,printAstToDoc){var nextOptions=normalize$2(Object.assign({},parentOptions,{},partialNextOptions,{parentParser:parentOptions.parser,embeddedInHtml:!!(parentOptions.embeddedInHtml||parentOptions.parser==="html"||parentOptions.parser==="vue"||parentOptions.parser==="angular"||parentOptions.parser==="lwc"),originalText:text}),{passThrough:true});var result=parser.parse(text,nextOptions);var ast=result.ast;text=result.text;var astComments=ast.comments;delete ast.comments;comments.attach(astComments,ast,text,nextOptions);return printAstToDoc(ast,nextOptions);}var multiparser={printSubtree:printSubtree};var doc=document;var docBuilders$1=doc.builders;var concat$3=docBuilders$1.concat,hardline$2=docBuilders$1.hardline,addAlignmentToDoc$1=docBuilders$1.addAlignmentToDoc;var docUtils$1=doc.utils;/**\n   * Takes an abstract syntax tree (AST) and recursively converts it to a\n   * document (series of printing primitives).\n   *\n   * This is done by descending down the AST recursively. The recursion\n   * involves two functions that call each other:\n   *\n   * 1. printGenerically(), which is defined as an inner function here.\n   *    It basically takes care of node caching.\n   * 2. callPluginPrintFunction(), which checks for some options, and\n   *    ultimately calls the print() function provided by the plugin.\n   *\n   * The plugin function will call printGenerically() again for child nodes\n   * of the current node, which will do its housekeeping, then call the\n   * plugin function again, and so on.\n   *\n   * All the while, these functions pass a "path" variable around, which\n   * is a stack-like data structure (FastPath) that maintains the current\n   * state of the recursion. It is called "path", because it represents\n   * the path to the current node through the Abstract Syntax Tree.\n   */function printAstToDoc(ast,options){var alignmentSize=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var printer=options.printer;if(printer.preprocess){ast=printer.preprocess(ast,options);}var cache=new Map();function printGenerically(path,args){var node=path.getValue();var shouldCache=node&&(0,_typeof3.default)(node)==="object"&&args===undefined;if(shouldCache&&cache.has(node)){return cache.get(node);}// We let JSXElement print its comments itself because it adds () around\n// UnionTypeAnnotation has to align the child without the comments\nvar res;if(printer.willPrintOwnComments&&printer.willPrintOwnComments(path,options)){res=callPluginPrintFunction(path,options,printGenerically,args);}else{// printComments will call the plugin print function and check for\n// comments to print\nres=comments.printComments(path,function(p){return callPluginPrintFunction(p,options,printGenerically,args);},options,args&&args.needsSemi);}if(shouldCache){cache.set(node,res);}return res;}var doc=printGenerically(new fastPath(ast));if(alignmentSize>0){// Add a hardline to make the indents take effect\n// It should be removed in index.js format()\ndoc=addAlignmentToDoc$1(concat$3([hardline$2,doc]),alignmentSize,options.tabWidth);}docUtils$1.propagateBreaks(doc);return doc;}function callPluginPrintFunction(path,options,printPath,args){assert.ok(path instanceof fastPath);var node=path.getValue();var printer=options.printer;// Escape hatch\nif(printer.hasPrettierIgnore&&printer.hasPrettierIgnore(path)){return options.originalText.slice(options.locStart(node),options.locEnd(node));}if(node){try{// Potentially switch to a different parser\nvar sub=multiparser.printSubtree(path,printPath,options,printAstToDoc);if(sub){return sub;}}catch(error){/* istanbul ignore if */if(commonjsGlobal.PRETTIER_DEBUG){throw error;}// Continue with current parser\n}}return printer.print(path,options,printPath,args);}var astToDoc=printAstToDoc;function findSiblingAncestors(startNodeAndParents,endNodeAndParents,opts){var resultStartNode=startNodeAndParents.node;var resultEndNode=endNodeAndParents.node;if(resultStartNode===resultEndNode){return{startNode:resultStartNode,endNode:resultEndNode};}var _iterator30=_createForOfIteratorHelper(endNodeAndParents.parentNodes),_step30;try{for(_iterator30.s();!(_step30=_iterator30.n()).done;){var endParent=_step30.value;if(endParent.type!=="Program"&&endParent.type!=="File"&&opts.locStart(endParent)>=opts.locStart(startNodeAndParents.node)){resultEndNode=endParent;}else{break;}}}catch(err){_iterator30.e(err);}finally{_iterator30.f();}var _iterator31=_createForOfIteratorHelper(startNodeAndParents.parentNodes),_step31;try{for(_iterator31.s();!(_step31=_iterator31.n()).done;){var startParent=_step31.value;if(startParent.type!=="Program"&&startParent.type!=="File"&&opts.locEnd(startParent)<=opts.locEnd(endNodeAndParents.node)){resultStartNode=startParent;}else{break;}}}catch(err){_iterator31.e(err);}finally{_iterator31.f();}return{startNode:resultStartNode,endNode:resultEndNode};}function findNodeAtOffset(node,offset,options,predicate,parentNodes){predicate=predicate||function(){return true;};parentNodes=parentNodes||[];var start=options.locStart(node,options.locStart);var end=options.locEnd(node,options.locEnd);if(start<=offset&&offset<=end){var _iterator32=_createForOfIteratorHelper(comments.getSortedChildNodes(node,options)),_step32;try{for(_iterator32.s();!(_step32=_iterator32.n()).done;){var childNode=_step32.value;var childResult=findNodeAtOffset(childNode,offset,options,predicate,[node].concat(parentNodes));if(childResult){return childResult;}}}catch(err){_iterator32.e(err);}finally{_iterator32.f();}if(predicate(node)){return{node:node,parentNodes:parentNodes};}}}// See https://www.ecma-international.org/ecma-262/5.1/#sec-A.5\nfunction isSourceElement(opts,node){if(node==null){return false;}// JS and JS like to avoid repetitions\nvar jsSourceElements=["FunctionDeclaration","BlockStatement","BreakStatement","ContinueStatement","DebuggerStatement","DoWhileStatement","EmptyStatement","ExpressionStatement","ForInStatement","ForStatement","IfStatement","LabeledStatement","ReturnStatement","SwitchStatement","ThrowStatement","TryStatement","VariableDeclaration","WhileStatement","WithStatement","ClassDeclaration",// ES 2015\n"ImportDeclaration",// Module\n"ExportDefaultDeclaration",// Module\n"ExportNamedDeclaration",// Module\n"ExportAllDeclaration",// Module\n"TypeAlias",// Flow\n"InterfaceDeclaration",// Flow, TypeScript\n"TypeAliasDeclaration",// TypeScript\n"ExportAssignment",// TypeScript\n"ExportDeclaration"// TypeScript\n];var jsonSourceElements=["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral"];var graphqlSourceElements=["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"];switch(opts.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":return jsSourceElements.includes(node.type);case"json":return jsonSourceElements.includes(node.type);case"graphql":return graphqlSourceElements.includes(node.kind);case"vue":return node.tag!=="root";}return false;}function calculateRange(text,opts,ast){// Contract the range so that it has non-whitespace characters at its endpoints.\n// This ensures we can format a range that doesn\'t end on a node.\nvar rangeStringOrig=text.slice(opts.rangeStart,opts.rangeEnd);var startNonWhitespace=Math.max(opts.rangeStart+rangeStringOrig.search(/\\S/),opts.rangeStart);var endNonWhitespace;for(endNonWhitespace=opts.rangeEnd;endNonWhitespace>opts.rangeStart;--endNonWhitespace){if(text[endNonWhitespace-1].match(/\\S/)){break;}}var startNodeAndParents=findNodeAtOffset(ast,startNonWhitespace,opts,function(node){return isSourceElement(opts,node);});var endNodeAndParents=findNodeAtOffset(ast,endNonWhitespace,opts,function(node){return isSourceElement(opts,node);});if(!startNodeAndParents||!endNodeAndParents){return{rangeStart:0,rangeEnd:0};}var siblingAncestors=findSiblingAncestors(startNodeAndParents,endNodeAndParents,opts);var startNode=siblingAncestors.startNode,endNode=siblingAncestors.endNode;var rangeStart=Math.min(opts.locStart(startNode,opts.locStart),opts.locStart(endNode,opts.locStart));var rangeEnd=Math.max(opts.locEnd(startNode,opts.locEnd),opts.locEnd(endNode,opts.locEnd));return{rangeStart:rangeStart,rangeEnd:rangeEnd};}var rangeUtil={calculateRange:calculateRange,findNodeAtOffset:findNodeAtOffset};var diff=getCjsExportFromNamespace(index_es6);var normalizeOptions$1=options$1.normalize;var guessEndOfLine$1=endOfLine.guessEndOfLine,convertEndOfLineToChars$2=endOfLine.convertEndOfLineToChars;var printDocToString$1=document.printer.printDocToString,printDocToDebug=document.debug.printDocToDebug;var BOM="\\uFEFF";var CURSOR=Symbol("cursor");var PLACEHOLDERS={cursorOffset:"<<<PRETTIER_CURSOR>>>",rangeStart:"<<<PRETTIER_RANGE_START>>>",rangeEnd:"<<<PRETTIER_RANGE_END>>>"};function ensureAllCommentsPrinted(astComments){if(!astComments){return;}for(var i=0;i<astComments.length;++i){if(util$1.isNodeIgnoreComment(astComments[i])){// If there\'s a prettier-ignore, we\'re not printing that sub-tree so we\n// don\'t know if the comments was printed or not.\nreturn;}}astComments.forEach(function(comment){if(!comment.printed){throw new Error(\'Comment "\'+comment.value.trim()+\'" was not printed. Please report this error!\');}delete comment.printed;});}function attachComments(text,ast,opts){var astComments=ast.comments;if(astComments){delete ast.comments;comments.attach(astComments,ast,text,opts);}ast.tokens=[];opts.originalText=opts.parser==="yaml"?text:text.trimEnd();return astComments;}function coreFormat(text,opts,addAlignmentSize){if(!text||!text.trim().length){return{formatted:"",cursorOffset:0};}addAlignmentSize=addAlignmentSize||0;var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;if(opts.cursorOffset>=0){var nodeResult=rangeUtil.findNodeAtOffset(ast,opts.cursorOffset,opts);if(nodeResult&&nodeResult.node){opts.cursorNode=nodeResult.node;}}var astComments=attachComments(text,ast,opts);var doc=astToDoc(ast,opts,addAlignmentSize);var result=printDocToString$1(doc,opts);ensureAllCommentsPrinted(astComments);// Remove extra leading indentation as well as the added indentation after last newline\nif(addAlignmentSize>0){var trimmed=result.formatted.trim();if(result.cursorNodeStart!==undefined){result.cursorNodeStart-=result.formatted.indexOf(trimmed);}result.formatted=trimmed+convertEndOfLineToChars$2(opts.endOfLine);}if(opts.cursorOffset>=0){var oldCursorNodeStart;var oldCursorNodeText;var cursorOffsetRelativeToOldCursorNode;var newCursorNodeStart;var newCursorNodeText;if(opts.cursorNode&&result.cursorNodeText){oldCursorNodeStart=opts.locStart(opts.cursorNode);oldCursorNodeText=text.slice(oldCursorNodeStart,opts.locEnd(opts.cursorNode));cursorOffsetRelativeToOldCursorNode=opts.cursorOffset-oldCursorNodeStart;newCursorNodeStart=result.cursorNodeStart;newCursorNodeText=result.cursorNodeText;}else{oldCursorNodeStart=0;oldCursorNodeText=text;cursorOffsetRelativeToOldCursorNode=opts.cursorOffset;newCursorNodeStart=0;newCursorNodeText=result.formatted;}if(oldCursorNodeText===newCursorNodeText){return{formatted:result.formatted,cursorOffset:newCursorNodeStart+cursorOffsetRelativeToOldCursorNode};}// diff old and new cursor node texts, with a special cursor\n// symbol inserted to find out where it moves to\nvar oldCursorNodeCharArray=oldCursorNodeText.split("");oldCursorNodeCharArray.splice(cursorOffsetRelativeToOldCursorNode,0,CURSOR);var newCursorNodeCharArray=newCursorNodeText.split("");var cursorNodeDiff=diff.diffArrays(oldCursorNodeCharArray,newCursorNodeCharArray);var cursorOffset=newCursorNodeStart;var _iterator33=_createForOfIteratorHelper(cursorNodeDiff),_step33;try{for(_iterator33.s();!(_step33=_iterator33.n()).done;){var entry=_step33.value;if(entry.removed){if(entry.value.includes(CURSOR)){break;}}else{cursorOffset+=entry.count;}}}catch(err){_iterator33.e(err);}finally{_iterator33.f();}return{formatted:result.formatted,cursorOffset:cursorOffset};}return{formatted:result.formatted};}function formatRange(text,opts){var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;var range=rangeUtil.calculateRange(text,opts,ast);var rangeStart=range.rangeStart,rangeEnd=range.rangeEnd;var rangeString=text.slice(rangeStart,rangeEnd);// Try to extend the range backwards to the beginning of the line.\n// This is so we can detect indentation correctly and restore it.\n// Use `Math.min` since `lastIndexOf` returns 0 when `rangeStart` is 0\nvar rangeStart2=Math.min(rangeStart,text.lastIndexOf("\\n",rangeStart)+1);var indentString=text.slice(rangeStart2,rangeStart);var alignmentSize=util$1.getAlignmentSize(indentString,opts.tabWidth);var rangeResult=coreFormat(rangeString,Object.assign({},opts,{rangeStart:0,rangeEnd:Infinity,// track the cursor offset only if it\'s within our range\ncursorOffset:opts.cursorOffset>=rangeStart&&opts.cursorOffset<rangeEnd?opts.cursorOffset-rangeStart:-1}),alignmentSize);// Since the range contracts to avoid trailing whitespace,\n// we need to remove the newline that was inserted by the `format` call.\nvar rangeTrimmed=rangeResult.formatted.trimEnd();var rangeLeft=text.slice(0,rangeStart);var rangeRight=text.slice(rangeEnd);var cursorOffset=opts.cursorOffset;if(opts.cursorOffset>=rangeEnd){// handle the case where the cursor was past the end of the range\ncursorOffset=opts.cursorOffset-rangeEnd+(rangeStart+rangeTrimmed.length);}else if(rangeResult.cursorOffset!==undefined){// handle the case where the cursor was in the range\ncursorOffset=rangeResult.cursorOffset+rangeStart;}// keep the cursor as it was if it was before the start of the range\nvar formatted;if(opts.endOfLine==="lf"){formatted=rangeLeft+rangeTrimmed+rangeRight;}else{var eol=convertEndOfLineToChars$2(opts.endOfLine);if(cursorOffset>=0){var parts=[rangeLeft,rangeTrimmed,rangeRight];var partIndex=0;var partOffset=cursorOffset;while(partIndex<parts.length){var part=parts[partIndex];if(partOffset<part.length){parts[partIndex]=parts[partIndex].slice(0,partOffset)+PLACEHOLDERS.cursorOffset+parts[partIndex].slice(partOffset);break;}partIndex++;partOffset-=part.length;}var newRangeLeft=parts[0],newRangeTrimmed=parts[1],newRangeRight=parts[2];formatted=(newRangeLeft.replace(/\\n/g,eol)+newRangeTrimmed+newRangeRight.replace(/\\n/g,eol)).replace(PLACEHOLDERS.cursorOffset,function(_,index){cursorOffset=index;return"";});}else{formatted=rangeLeft.replace(/\\n/g,eol)+rangeTrimmed+rangeRight.replace(/\\n/g,eol);}}return{formatted:formatted,cursorOffset:cursorOffset};}function format(text,opts){var selectedParser=parser.resolveParser(opts);var hasPragma=!selectedParser.hasPragma||selectedParser.hasPragma(text);if(opts.requirePragma&&!hasPragma){return{formatted:text};}if(opts.endOfLine==="auto"){opts.endOfLine=guessEndOfLine$1(text);}var hasCursor=opts.cursorOffset>=0;var hasRangeStart=opts.rangeStart>0;var hasRangeEnd=opts.rangeEnd<text.length;// get rid of CR/CRLF parsing\nif(text.includes("\\r")){var offsetKeys=[hasCursor&&"cursorOffset",hasRangeStart&&"rangeStart",hasRangeEnd&&"rangeEnd"].filter(Boolean).sort(function(aKey,bKey){return opts[aKey]-opts[bKey];});for(var i=offsetKeys.length-1;i>=0;i--){var _key17=offsetKeys[i];text=text.slice(0,opts[_key17])+PLACEHOLDERS[_key17]+text.slice(opts[_key17]);}text=text.replace(/\\r\\n?/g,"\\n");var _loop12=function _loop12(_i37){var key=offsetKeys[_i37];text=text.replace(PLACEHOLDERS[key],function(_,index){opts[key]=index;return"";});};for(var _i37=0;_i37<offsetKeys.length;_i37++){_loop12(_i37);}}var hasUnicodeBOM=text.charAt(0)===BOM;if(hasUnicodeBOM){text=text.slice(1);if(hasCursor){opts.cursorOffset++;}if(hasRangeStart){opts.rangeStart++;}if(hasRangeEnd){opts.rangeEnd++;}}if(!hasCursor){opts.cursorOffset=-1;}if(opts.rangeStart<0){opts.rangeStart=0;}if(opts.rangeEnd>text.length){opts.rangeEnd=text.length;}var result=hasRangeStart||hasRangeEnd?formatRange(text,opts):coreFormat(opts.insertPragma&&opts.printer.insertPragma&&!hasPragma?opts.printer.insertPragma(text):text,opts);if(hasUnicodeBOM){result.formatted=BOM+result.formatted;if(hasCursor){result.cursorOffset++;}}return result;}var core={formatWithCursor:function formatWithCursor(text,opts){opts=normalizeOptions$1(opts);return format(text,opts);},parse:function parse(text,opts,massage){opts=normalizeOptions$1(opts);if(text.includes("\\r")){text=text.replace(/\\r\\n?/g,"\\n");}var parsed=parser.parse(text,opts);if(massage){parsed.ast=massageAst(parsed.ast,opts);}return parsed;},formatAST:function formatAST(ast,opts){opts=normalizeOptions$1(opts);var doc=astToDoc(ast,opts);return printDocToString$1(doc,opts);},// Doesn\'t handle shebang for now\nformatDoc:function formatDoc(doc,opts){var debug=printDocToDebug(doc);opts=normalizeOptions$1(Object.assign({},opts,{parser:"babel"}));return format(debug,opts).formatted;},printToDoc:function printToDoc(text,opts){opts=normalizeOptions$1(opts);var parsed=parser.parse(text,opts);var ast=parsed.ast;text=parsed.text;attachComments(text,ast,opts);return astToDoc(ast,opts);},printDocToString:function printDocToString(doc,opts){return printDocToString$1(doc,normalizeOptions$1(opts));}};function clean(ast,newObj,parent){["raw",// front-matter\n"raws","sourceIndex","source","before","after","trailingComma"].forEach(function(name){delete newObj[name];});if(ast.type==="yaml"){delete newObj.value;}// --insert-pragma\nif(ast.type==="css-comment"&&parent.type==="css-root"&&parent.nodes.length!==0&&(// first non-front-matter comment\nparent.nodes[0]===ast||(parent.nodes[0].type==="yaml"||parent.nodes[0].type==="toml")&&parent.nodes[1]===ast)){/**\n       * something\n       *\n       * @format\n       */delete newObj.text;// standalone pragma\nif(/^\\*\\s*@(format|prettier)\\s*$/.test(ast.text)){return null;}}if(ast.type==="media-query"||ast.type==="media-query-list"||ast.type==="media-feature-expression"){delete newObj.value;}if(ast.type==="css-rule"){delete newObj.params;}if(ast.type==="selector-combinator"){newObj.value=newObj.value.replace(/\\s+/g," ");}if(ast.type==="media-feature"){newObj.value=newObj.value.replace(/ /g,"");}if(ast.type==="value-word"&&(ast.isColor&&ast.isHex||["initial","inherit","unset","revert"].includes(newObj.value.replace().toLowerCase()))||ast.type==="media-feature"||ast.type==="selector-root-invalid"||ast.type==="selector-pseudo"){newObj.value=newObj.value.toLowerCase();}if(ast.type==="css-decl"){newObj.prop=newObj.prop.toLowerCase();}if(ast.type==="css-atrule"||ast.type==="css-import"){newObj.name=newObj.name.toLowerCase();}if(ast.type==="value-number"){newObj.unit=newObj.unit.toLowerCase();}if((ast.type==="media-feature"||ast.type==="media-keyword"||ast.type==="media-type"||ast.type==="media-unknown"||ast.type==="media-url"||ast.type==="media-value"||ast.type==="selector-attribute"||ast.type==="selector-string"||ast.type==="selector-class"||ast.type==="selector-combinator"||ast.type==="value-string")&&newObj.value){newObj.value=cleanCSSStrings(newObj.value);}if(ast.type==="selector-attribute"){newObj.attribute=newObj.attribute.trim();if(newObj.namespace){if(typeof newObj.namespace==="string"){newObj.namespace=newObj.namespace.trim();if(newObj.namespace.length===0){newObj.namespace=true;}}}if(newObj.value){newObj.value=newObj.value.trim().replace(/^[\'"]|[\'"]$/g,"");delete newObj.quoted;}}if((ast.type==="media-value"||ast.type==="media-type"||ast.type==="value-number"||ast.type==="selector-root-invalid"||ast.type==="selector-class"||ast.type==="selector-combinator"||ast.type==="selector-tag")&&newObj.value){newObj.value=newObj.value.replace(/([\\d.eE+-]+)([a-zA-Z]*)/g,function(match,numStr,unit){var num=Number(numStr);return isNaN(num)?match:num+unit.toLowerCase();});}if(ast.type==="selector-tag"){var lowercasedValue=ast.value.toLowerCase();if(["from","to"].includes(lowercasedValue)){newObj.value=lowercasedValue;}}// Workaround when `postcss-values-parser` parse `not`, `and` or `or` keywords as `value-func`\nif(ast.type==="css-atrule"&&ast.name.toLowerCase()==="supports"){delete newObj.value;}// Workaround for SCSS nested properties\nif(ast.type==="selector-unknown"){delete newObj.value;}}function cleanCSSStrings(value){return value.replace(/\'/g,\'"\').replace(/\\\\([^a-fA-F\\d])/g,"$1");}var clean_1=clean;var _document$builders2=document.builders,hardline$3=_document$builders2.hardline,literalline$1=_document$builders2.literalline,concat$4=_document$builders2.concat,markAsRoot$1=_document$builders2.markAsRoot,mapDoc$1=document.utils.mapDoc;function embed(path,print,textToDoc/*, options */){var node=path.getValue();if(node.type==="yaml"){return markAsRoot$1(concat$4(["---",hardline$3,node.value.trim()?replaceNewlinesWithLiterallines(textToDoc(node.value,{parser:"yaml"})):"","---",hardline$3]));}return null;function replaceNewlinesWithLiterallines(doc){return mapDoc$1(doc,function(currentDoc){return typeof currentDoc==="string"&&currentDoc.includes("\\n")?concat$4(currentDoc.split(/(\\n)/g).map(function(v,i){return i%2===0?v:literalline$1;})):currentDoc;});}}var embed_1=embed;var detectNewline=function detectNewline(string){if(typeof string!==\'string\'){throw new TypeError(\'Expected a string\');}var newlines=string.match(/(?:\\r?\\n)/g)||[];if(newlines.length===0){return;}var crlf=newlines.filter(function(newline){return newline===\'\\r\\n\';}).length;var lf=newlines.length-crlf;return crlf>lf?\'\\r\\n\':\'\\n\';};var detectNewline_1=detectNewline;var graceful=function graceful(string){return typeof string===\'string\'&&detectNewline(string)||\'\\n\';};detectNewline_1.graceful=graceful;var build=createCommonjsModule(function(module,exports){Object.defineProperty(exports,\'__esModule\',{value:true});exports.extract=extract;exports.strip=strip;exports.parse=parse;exports.parseWithComments=parseWithComments;exports.print=print;function _os(){var data=require$$0$1;_os=function _os(){return data;};return data;}function _detectNewline(){var data=_interopRequireDefault(detectNewline_1);_detectNewline=function _detectNewline(){return data;};return data;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**\n     * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */var commentEndRe=/\\*\\/$/;var commentStartRe=/^\\/\\*\\*/;var docblockRe=/^\\s*(\\/\\*\\*?(.|\\r?\\n)*?\\*\\/)/;var lineCommentRe=/(^|\\s+)\\/\\/([^\\r\\n]*)/g;var ltrimNewlineRe=/^(\\r?\\n)+/;var multilineRe=/(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *(?![^@\\r\\n]*\\/\\/[^]*)([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g;var propertyRe=/(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g;var stringStartRe=/(\\r?\\n|^) *\\* ?/g;function extract(contents){var match=contents.match(docblockRe);return match?match[0].trimLeft():\'\';}function strip(contents){var match=contents.match(docblockRe);return match&&match[0]?contents.substring(match[0].length):contents;}function parse(docblock){return parseWithComments(docblock).pragmas;}function parseWithComments(docblock){var line=(0,_detectNewline().default)(docblock)||_os().EOL;docblock=docblock.replace(commentStartRe,\'\').replace(commentEndRe,\'\').replace(stringStartRe,\'$1\');// Normalize multi-line directives\nvar prev=\'\';while(prev!==docblock){prev=docblock;docblock=docblock.replace(multilineRe,"".concat(line,"$1 $2").concat(line));}docblock=docblock.replace(ltrimNewlineRe,\'\').trimRight();var result=Object.create(null);var comments=docblock.replace(propertyRe,\'\').replace(ltrimNewlineRe,\'\').trimRight();var match;while(match=propertyRe.exec(docblock)){// strip linecomments from pragmas\nvar nextPragma=match[2].replace(lineCommentRe,\'\');if(typeof result[match[1]]===\'string\'||Array.isArray(result[match[1]])){result[match[1]]=[].concat(result[match[1]],nextPragma);}else{result[match[1]]=nextPragma;}}return{comments:comments,pragmas:result};}function print(_ref25){var _ref25$comments=_ref25.comments,comments=_ref25$comments===void 0?\'\':_ref25$comments,_ref25$pragmas=_ref25.pragmas,pragmas=_ref25$pragmas===void 0?{}:_ref25$pragmas;var line=(0,_detectNewline().default)(comments)||_os().EOL;var head=\'/**\';var start=\' *\';var tail=\' */\';var keys=Object.keys(pragmas);var printedObject=keys.map(function(key){return printKeyValues(key,pragmas[key]);}).reduce(function(arr,next){return arr.concat(next);},[]).map(function(keyValue){return start+\' \'+keyValue+line;}).join(\'\');if(!comments){if(keys.length===0){return\'\';}if(keys.length===1&&!Array.isArray(pragmas[keys[0]])){var value=pragmas[keys[0]];return"".concat(head," ").concat(printKeyValues(keys[0],value)[0]).concat(tail);}}var printedComments=comments.split(line).map(function(textLine){return"".concat(start," ").concat(textLine);}).join(line)+line;return head+line+(comments?printedComments:\'\')+(comments&&keys.length?start+line:\'\')+printedObject+tail;}function printKeyValues(key,valueOrArray){return[].concat(valueOrArray).map(function(value){return"@".concat(key," ").concat(value).trim();});}});unwrapExports(build);var build_1=build.extract;var build_2=build.strip;var build_3=build.parse;var build_4=build.parseWithComments;var build_5=build.print;function hasPragma(text){var pragmas=Object.keys(build.parse(build.extract(text)));return pragmas.includes("prettier")||pragmas.includes("format");}function insertPragma(text){var parsedDocblock=build.parseWithComments(build.extract(text));var pragmas=Object.assign({format:""},parsedDocblock.pragmas);var newDocblock=build.print({pragmas:pragmas,comments:parsedDocblock.comments.replace(/^(\\s+?\\r?\\n)+/,"")// remove leading newlines\n}).replace(/(\\r\\n|\\r)/g,"\\n");// normalise newlines (mitigate use of os.EOL by jest-docblock)\nvar strippedText=build.strip(text);var separatingNewlines=strippedText.startsWith("\\n")?"\\n":"\\n\\n";return newDocblock+separatingNewlines+strippedText;}var pragma={hasPragma:hasPragma,insertPragma:insertPragma};var DELIMITER_MAP={"---":"yaml","+++":"toml"};function parse$1(text){var delimiterRegex=Object.keys(DELIMITER_MAP).map(escapeStringRegexp$2).join("|");var match=text.match(// trailing spaces after delimiters are allowed\nnew RegExp("^(".concat(delimiterRegex,")[^\\\\n\\\\S]*\\\\n(?:([\\\\s\\\\S]*?)\\\\n)?\\\\1[^\\\\n\\\\S]*(\\\\n|$)")));if(match===null){return{frontMatter:null,content:text};}var _match=(0,_slicedToArray2.default)(match,3),raw=_match[0],delimiter=_match[1],value=_match[2];return{frontMatter:{type:DELIMITER_MAP[delimiter],value:value,raw:raw.replace(/\\n$/,"")},content:raw.replace(/[^\\n]/g," ")+text.slice(raw.length)};}var frontMatter=parse$1;function hasPragma$1(text){return pragma.hasPragma(frontMatter(text).content);}function insertPragma$1(text){var _frontMatter=frontMatter(text),frontMatter$1=_frontMatter.frontMatter,content=_frontMatter.content;return(frontMatter$1?frontMatter$1.raw+"\\n\\n":"")+pragma.insertPragma(content);}var pragma$1={hasPragma:hasPragma$1,insertPragma:insertPragma$1};var lineColumnToIndex=function lineColumnToIndex(lineColumn,text){var index=0;for(var i=0;i<lineColumn.line-1;++i){index=text.indexOf("\\n",index)+1;if(index===-1){return-1;}}return index+lineColumn.column;};var getLast$1=util$1.getLast,skipEverythingButNewLine$2=util$1.skipEverythingButNewLine;function calculateLocStart(node,text){if(node.source){return lineColumnToIndex(node.source.start,text)-1;}return null;}function calculateLocEnd(node,text){if(node.type==="css-comment"&&node.inline){return skipEverythingButNewLine$2(text,node.source.startOffset);}var endNode=node.nodes&&getLast$1(node.nodes);if(endNode&&node.source&&!node.source.end){node=endNode;}if(node.source&&node.source.end){return lineColumnToIndex(node.source.end,text);}return null;}function calculateLoc(node,text){if(node&&(0,_typeof3.default)(node)==="object"){if(node.source){node.source.startOffset=calculateLocStart(node,text);node.source.endOffset=calculateLocEnd(node,text);}for(var _key18 in node){calculateLoc(node[_key18],text);}}}/**\n   * Workaround for a bug: quotes in inline comments corrupt loc data of subsequent nodes.\n   * This function replaces the quotes with U+FFFE and U+FFFF. Later, when the comments are printed,\n   * their content is extracted from the original text or restored by replacing the placeholder\n   * characters back with quotes.\n   * - https://github.com/prettier/prettier/issues/7780\n   * - https://github.com/shellscape/postcss-less/issues/145\n   * - About noncharacters (U+FFFE and U+FFFF): http://www.unicode.org/faq/private_use.html#nonchar1\n   * @param text {string}\n   */function replaceQuotesInInlineComments(text){/** @typedef { \'initial\' | \'single-quotes\' | \'double-quotes\' | \'url\' | \'comment-block\' | \'comment-inline\' } State */ /** @type {State} */var state="initial";/** @type {State} */var stateToReturnFromQuotes="initial";var inlineCommentStartIndex;var inlineCommentContainsQuotes=false;var inlineCommentsToReplace=[];for(var i=0;i<text.length;i++){var c=text[i];switch(state){case"initial":if(c==="\'"){state="single-quotes";continue;}if(c===\'"\'){state="double-quotes";continue;}if((c==="u"||c==="U")&&text.slice(i,i+4).toLowerCase()==="url("){state="url";i+=3;continue;}if(c==="*"&&text[i-1]==="/"){state="comment-block";continue;}if(c==="/"&&text[i-1]==="/"){state="comment-inline";inlineCommentStartIndex=i-1;continue;}continue;case"single-quotes":if(c==="\'"&&text[i-1]!=="\\\\"){state=stateToReturnFromQuotes;stateToReturnFromQuotes="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}continue;case"double-quotes":if(c===\'"\'&&text[i-1]!=="\\\\"){state=stateToReturnFromQuotes;stateToReturnFromQuotes="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}continue;case"url":if(c===")"){state="initial";}if(c==="\\n"||c==="\\r"){return text;// invalid input\n}if(c==="\'"){state="single-quotes";stateToReturnFromQuotes="url";continue;}if(c===\'"\'){state="double-quotes";stateToReturnFromQuotes="url";continue;}continue;case"comment-block":if(c==="/"&&text[i-1]==="*"){state="initial";}continue;case"comment-inline":if(c===\'"\'||c==="\'"){inlineCommentContainsQuotes=true;}if(c==="\\n"||c==="\\r"){if(inlineCommentContainsQuotes){inlineCommentsToReplace.push([inlineCommentStartIndex,i]);}state="initial";inlineCommentContainsQuotes=false;}continue;}}for(var _i38=0,_inlineCommentsToRepl=inlineCommentsToReplace;_i38<_inlineCommentsToRepl.length;_i38++){var _inlineCommentsToRepl2=(0,_slicedToArray2.default)(_inlineCommentsToRepl[_i38],2),start=_inlineCommentsToRepl2[0],end=_inlineCommentsToRepl2[1];text=text.slice(0,start)+text.slice(start,end).replace(/\'/g,"\\uFFFE").replace(/"/g,"\\uFFFF")+text.slice(end);}return text;}function restoreQuotesInInlineComments(text){return text.replace(/\\ufffe/g,"\'").replace(/\\uffff/g,\'"\');}var loc$1={calculateLoc:calculateLoc,replaceQuotesInInlineComments:replaceQuotesInInlineComments,restoreQuotesInInlineComments:restoreQuotesInInlineComments};var colorAdjusterFunctions=["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"];function getAncestorCounter(path,typeOrTypes){var types=[].concat(typeOrTypes);var counter=-1;var ancestorNode;while(ancestorNode=path.getParentNode(++counter)){if(types.includes(ancestorNode.type)){return counter;}}return-1;}function getAncestorNode(path,typeOrTypes){var counter=getAncestorCounter(path,typeOrTypes);return counter===-1?null:path.getParentNode(counter);}function getPropOfDeclNode(path){var declAncestorNode=getAncestorNode(path,"css-decl");return declAncestorNode&&declAncestorNode.prop&&declAncestorNode.prop.toLowerCase();}function isSCSS(parser,text){var hasExplicitParserChoice=parser==="less"||parser==="scss";var IS_POSSIBLY_SCSS=/(\\w\\s*:\\s*[^}:]+|#){|@import[^\\n]+(?:url|,)/;return hasExplicitParserChoice?parser==="scss":IS_POSSIBLY_SCSS.test(text);}function isWideKeywords(value){return["initial","inherit","unset","revert"].includes(value.toLowerCase());}function isKeyframeAtRuleKeywords(path,value){var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleAncestorNode.name&&atRuleAncestorNode.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(value.toLowerCase());}function maybeToLowerCase(value){return value.includes("$")||value.includes("@")||value.includes("#")||value.startsWith("%")||value.startsWith("--")||value.startsWith(":--")||value.includes("(")&&value.includes(")")?value:value.toLowerCase();}function insideValueFunctionNode(path,functionName){var funcAncestorNode=getAncestorNode(path,"value-func");return funcAncestorNode&&funcAncestorNode.value&&funcAncestorNode.value.toLowerCase()===functionName;}function insideICSSRuleNode(path){var ruleAncestorNode=getAncestorNode(path,"css-rule");return ruleAncestorNode&&ruleAncestorNode.raws&&ruleAncestorNode.raws.selector&&(ruleAncestorNode.raws.selector.startsWith(":import")||ruleAncestorNode.raws.selector.startsWith(":export"));}function insideAtRuleNode(path,atRuleNameOrAtRuleNames){var atRuleNames=[].concat(atRuleNameOrAtRuleNames);var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleNames.includes(atRuleAncestorNode.name.toLowerCase());}function insideURLFunctionInImportAtRuleNode(path){var node=path.getValue();var atRuleAncestorNode=getAncestorNode(path,"css-atrule");return atRuleAncestorNode&&atRuleAncestorNode.name==="import"&&node.groups[0].value==="url"&&node.groups.length===2;}function isURLFunctionNode(node){return node.type==="value-func"&&node.value.toLowerCase()==="url";}function isLastNode(path,node){var parentNode=path.getParentNode();if(!parentNode){return false;}var nodes=parentNode.nodes;return nodes&&nodes.indexOf(node)===nodes.length-1;}function isDetachedRulesetDeclarationNode(node){// If a Less file ends up being parsed with the SCSS parser, Less\n// variable declarations will be parsed as atrules with names ending\n// with a colon, so keep the original case then.\nif(!node.selector){return false;}return typeof node.selector==="string"&&/^@.+:.*$/.test(node.selector)||node.selector.value&&/^@.+:.*$/.test(node.selector.value);}function isForKeywordNode(node){return node.type==="value-word"&&["from","through","end"].includes(node.value);}function isIfElseKeywordNode(node){return node.type==="value-word"&&["and","or","not"].includes(node.value);}function isEachKeywordNode(node){return node.type==="value-word"&&node.value==="in";}function isMultiplicationNode(node){return node.type==="value-operator"&&node.value==="*";}function isDivisionNode(node){return node.type==="value-operator"&&node.value==="/";}function isAdditionNode(node){return node.type==="value-operator"&&node.value==="+";}function isSubtractionNode(node){return node.type==="value-operator"&&node.value==="-";}function isModuloNode(node){return node.type==="value-operator"&&node.value==="%";}function isMathOperatorNode(node){return isMultiplicationNode(node)||isDivisionNode(node)||isAdditionNode(node)||isSubtractionNode(node)||isModuloNode(node);}function isEqualityOperatorNode(node){return node.type==="value-word"&&["==","!="].includes(node.value);}function isRelationalOperatorNode(node){return node.type==="value-word"&&["<",">","<=",">="].includes(node.value);}function isSCSSControlDirectiveNode(node){return node.type==="css-atrule"&&["if","else","for","each","while"].includes(node.name);}function isSCSSNestedPropertyNode(node){if(!node.selector){return false;}return node.selector.replace(/\\/\\*.*?\\*\\//,"").replace(/\\/\\/.*?\\n/,"").trim().endsWith(":");}function isDetachedRulesetCallNode(node){return node.raws&&node.raws.params&&/^\\(\\s*\\)$/.test(node.raws.params);}function isTemplatePlaceholderNode(node){return node.name.startsWith("prettier-placeholder");}function isTemplatePropNode(node){return node.prop.startsWith("@prettier-placeholder");}function isPostcssSimpleVarNode(currentNode,nextNode){return currentNode.value==="$$"&&currentNode.type==="value-func"&&nextNode&&nextNode.type==="value-word"&&!nextNode.raws.before;}function hasComposesNode(node){return node.value&&node.value.type==="value-root"&&node.value.group&&node.value.group.type==="value-value"&&node.prop.toLowerCase()==="composes";}function hasParensAroundNode(node){return node.value&&node.value.group&&node.value.group.group&&node.value.group.group.type==="value-paren_group"&&node.value.group.group.open!==null&&node.value.group.group.close!==null;}function hasEmptyRawBefore(node){return node.raws&&node.raws.before==="";}function isKeyValuePairNode(node){return node.type==="value-comma_group"&&node.groups&&node.groups[1]&&node.groups[1].type==="value-colon";}function isKeyValuePairInParenGroupNode(node){return node.type==="value-paren_group"&&node.groups&&node.groups[0]&&isKeyValuePairNode(node.groups[0]);}function isSCSSMapItemNode(path){var node=path.getValue();// Ignore empty item (i.e. `$key: ()`)\nif(node.groups.length===0){return false;}var parentParentNode=path.getParentNode(1);// Check open parens contain key/value pair (i.e. `(key: value)` and `(key: (value, other-value)`)\nif(!isKeyValuePairInParenGroupNode(node)&&!(parentParentNode&&isKeyValuePairInParenGroupNode(parentParentNode))){return false;}var declNode=getAncestorNode(path,"css-decl");// SCSS map declaration (i.e. `$map: (key: value, other-key: other-value)`)\nif(declNode&&declNode.prop&&declNode.prop.startsWith("$")){return true;}// List as value of key inside SCSS map (i.e. `$map: (key: (value other-value other-other-value))`)\nif(isKeyValuePairInParenGroupNode(parentParentNode)){return true;}// SCSS Map is argument of function (i.e. `func((key: value, other-key: other-value))`)\nif(parentParentNode.type==="value-func"){return true;}return false;}function isInlineValueCommentNode(node){return node.type==="value-comment"&&node.inline;}function isHashNode(node){return node.type==="value-word"&&node.value==="#";}function isLeftCurlyBraceNode(node){return node.type==="value-word"&&node.value==="{";}function isRightCurlyBraceNode(node){return node.type==="value-word"&&node.value==="}";}function isWordNode(node){return["value-word","value-atword"].includes(node.type);}function isColonNode(node){return node.type==="value-colon";}function isMediaAndSupportsKeywords(node){return node.value&&["not","and","or"].includes(node.value.toLowerCase());}function isColorAdjusterFuncNode(node){if(node.type!=="value-func"){return false;}return colorAdjusterFunctions.includes(node.value.toLowerCase());}// TODO: only check `less` when we don\'t use `less` to parse `css`\nfunction isLessParser(options){return options.parser==="css"||options.parser==="less";}function lastLineHasInlineComment(text){return /\\/\\//.test(text.split(/[\\r\\n]/).pop());}var utils$2={getAncestorCounter:getAncestorCounter,getAncestorNode:getAncestorNode,getPropOfDeclNode:getPropOfDeclNode,maybeToLowerCase:maybeToLowerCase,insideValueFunctionNode:insideValueFunctionNode,insideICSSRuleNode:insideICSSRuleNode,insideAtRuleNode:insideAtRuleNode,insideURLFunctionInImportAtRuleNode:insideURLFunctionInImportAtRuleNode,isKeyframeAtRuleKeywords:isKeyframeAtRuleKeywords,isWideKeywords:isWideKeywords,isSCSS:isSCSS,isLastNode:isLastNode,isLessParser:isLessParser,isSCSSControlDirectiveNode:isSCSSControlDirectiveNode,isDetachedRulesetDeclarationNode:isDetachedRulesetDeclarationNode,isRelationalOperatorNode:isRelationalOperatorNode,isEqualityOperatorNode:isEqualityOperatorNode,isMultiplicationNode:isMultiplicationNode,isDivisionNode:isDivisionNode,isAdditionNode:isAdditionNode,isSubtractionNode:isSubtractionNode,isModuloNode:isModuloNode,isMathOperatorNode:isMathOperatorNode,isEachKeywordNode:isEachKeywordNode,isForKeywordNode:isForKeywordNode,isURLFunctionNode:isURLFunctionNode,isIfElseKeywordNode:isIfElseKeywordNode,hasComposesNode:hasComposesNode,hasParensAroundNode:hasParensAroundNode,hasEmptyRawBefore:hasEmptyRawBefore,isSCSSNestedPropertyNode:isSCSSNestedPropertyNode,isDetachedRulesetCallNode:isDetachedRulesetCallNode,isTemplatePlaceholderNode:isTemplatePlaceholderNode,isTemplatePropNode:isTemplatePropNode,isPostcssSimpleVarNode:isPostcssSimpleVarNode,isKeyValuePairNode:isKeyValuePairNode,isKeyValuePairInParenGroupNode:isKeyValuePairInParenGroupNode,isSCSSMapItemNode:isSCSSMapItemNode,isInlineValueCommentNode:isInlineValueCommentNode,isHashNode:isHashNode,isLeftCurlyBraceNode:isLeftCurlyBraceNode,isRightCurlyBraceNode:isRightCurlyBraceNode,isWordNode:isWordNode,isColonNode:isColonNode,isMediaAndSupportsKeywords:isMediaAndSupportsKeywords,isColorAdjusterFuncNode:isColorAdjusterFuncNode,lastLineHasInlineComment:lastLineHasInlineComment};var insertPragma$2=pragma$1.insertPragma;var printNumber$1=util$1.printNumber,printString$1=util$1.printString,hasIgnoreComment$1=util$1.hasIgnoreComment,hasNewline$3=util$1.hasNewline;var isNextLineEmpty$2=utilShared.isNextLineEmpty;var restoreQuotesInInlineComments$1=loc$1.restoreQuotesInInlineComments;var _document$builders3=document.builders,concat$5=_document$builders3.concat,join$2=_document$builders3.join,line$2=_document$builders3.line,hardline$4=_document$builders3.hardline,softline$1=_document$builders3.softline,group$1=_document$builders3.group,fill$2=_document$builders3.fill,indent$2=_document$builders3.indent,dedent$1=_document$builders3.dedent,ifBreak$1=_document$builders3.ifBreak,removeLines$1=document.utils.removeLines;var getAncestorNode$1=utils$2.getAncestorNode,getPropOfDeclNode$1=utils$2.getPropOfDeclNode,maybeToLowerCase$1=utils$2.maybeToLowerCase,insideValueFunctionNode$1=utils$2.insideValueFunctionNode,insideICSSRuleNode$1=utils$2.insideICSSRuleNode,insideAtRuleNode$1=utils$2.insideAtRuleNode,insideURLFunctionInImportAtRuleNode$1=utils$2.insideURLFunctionInImportAtRuleNode,isKeyframeAtRuleKeywords$1=utils$2.isKeyframeAtRuleKeywords,isWideKeywords$1=utils$2.isWideKeywords,isSCSS$1=utils$2.isSCSS,isLastNode$1=utils$2.isLastNode,isLessParser$1=utils$2.isLessParser,isSCSSControlDirectiveNode$1=utils$2.isSCSSControlDirectiveNode,isDetachedRulesetDeclarationNode$1=utils$2.isDetachedRulesetDeclarationNode,isRelationalOperatorNode$1=utils$2.isRelationalOperatorNode,isEqualityOperatorNode$1=utils$2.isEqualityOperatorNode,isMultiplicationNode$1=utils$2.isMultiplicationNode,isDivisionNode$1=utils$2.isDivisionNode,isAdditionNode$1=utils$2.isAdditionNode,isSubtractionNode$1=utils$2.isSubtractionNode,isMathOperatorNode$1=utils$2.isMathOperatorNode,isEachKeywordNode$1=utils$2.isEachKeywordNode,isForKeywordNode$1=utils$2.isForKeywordNode,isURLFunctionNode$1=utils$2.isURLFunctionNode,isIfElseKeywordNode$1=utils$2.isIfElseKeywordNode,hasComposesNode$1=utils$2.hasComposesNode,hasParensAroundNode$1=utils$2.hasParensAroundNode,hasEmptyRawBefore$1=utils$2.hasEmptyRawBefore,isKeyValuePairNode$1=utils$2.isKeyValuePairNode,isDetachedRulesetCallNode$1=utils$2.isDetachedRulesetCallNode,isTemplatePlaceholderNode$1=utils$2.isTemplatePlaceholderNode,isTemplatePropNode$1=utils$2.isTemplatePropNode,isPostcssSimpleVarNode$1=utils$2.isPostcssSimpleVarNode,isSCSSMapItemNode$1=utils$2.isSCSSMapItemNode,isInlineValueCommentNode$1=utils$2.isInlineValueCommentNode,isHashNode$1=utils$2.isHashNode,isLeftCurlyBraceNode$1=utils$2.isLeftCurlyBraceNode,isRightCurlyBraceNode$1=utils$2.isRightCurlyBraceNode,isWordNode$1=utils$2.isWordNode,isColonNode$1=utils$2.isColonNode,isMediaAndSupportsKeywords$1=utils$2.isMediaAndSupportsKeywords,isColorAdjusterFuncNode$1=utils$2.isColorAdjusterFuncNode,lastLineHasInlineComment$1=utils$2.lastLineHasInlineComment;function shouldPrintComma(options){switch(options.trailingComma){case"all":case"es5":return true;case"none":default:return false;}}function genericPrint(path,options,print){var node=path.getValue();/* istanbul ignore if */if(!node){return"";}if(typeof node==="string"){return node;}switch(node.type){case"yaml":case"toml":return concat$5([node.raw,hardline$4]);case"css-root":{var nodes=printNodeSequence(path,options,print);if(nodes.parts.length){return concat$5([nodes,options.__isHTMLStyleAttribute?"":hardline$4]);}return nodes;}case"css-comment":{var isInlineComment=node.inline||node.raws.inline;var text=options.originalText.slice(options.locStart(node),options.locEnd(node));return isInlineComment?text.trimEnd():text;}case"css-rule":{return concat$5([path.call(print,"selector"),node.important?" !important":"",node.nodes?concat$5([node.selector&&node.selector.type==="selector-unknown"&&lastLineHasInlineComment$1(node.selector.value)?line$2:" ","{",node.nodes.length>0?indent$2(concat$5([hardline$4,printNodeSequence(path,options,print)])):"",hardline$4,"}",isDetachedRulesetDeclarationNode$1(node)?";":""]):";"]);}case"css-decl":{var parentNode=path.getParentNode();return concat$5([node.raws.before.replace(/[\\s;]/g,""),insideICSSRuleNode$1(path)?node.prop:maybeToLowerCase$1(node.prop),node.raws.between.trim()===":"?":":node.raws.between.trim(),node.extend?"":" ",hasComposesNode$1(node)?removeLines$1(path.call(print,"value")):path.call(print,"value"),node.raws.important?node.raws.important.replace(/\\s*!\\s*important/i," !important"):node.important?" !important":"",node.raws.scssDefault?node.raws.scssDefault.replace(/\\s*!default/i," !default"):node.scssDefault?" !default":"",node.raws.scssGlobal?node.raws.scssGlobal.replace(/\\s*!global/i," !global"):node.scssGlobal?" !global":"",node.nodes?concat$5([" {",indent$2(concat$5([softline$1,printNodeSequence(path,options,print)])),softline$1,"}"]):isTemplatePropNode$1(node)&&!parentNode.raws.semicolon&&options.originalText[options.locEnd(node)-1]!==";"?"":";"]);}case"css-atrule":{var _parentNode=path.getParentNode();var isTemplatePlaceholderNodeWithoutSemiColon=isTemplatePlaceholderNode$1(node)&&!_parentNode.raws.semicolon&&options.originalText[options.locEnd(node)-1]!==";";if(isLessParser$1(options)){if(node.mixin){return concat$5([path.call(print,"selector"),node.important?" !important":"",isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}if(node.function){return concat$5([node.name,concat$5([path.call(print,"params")]),isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}if(node.variable){return concat$5(["@",node.name,": ",node.value?concat$5([path.call(print,"value")]):"",node.raws.between.trim()?node.raws.between.trim()+" ":"",node.nodes?concat$5(["{",indent$2(concat$5([node.nodes.length>0?softline$1:"",printNodeSequence(path,options,print)])),softline$1,"}"]):"",isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}}return concat$5(["@",// If a Less file ends up being parsed with the SCSS parser, Less\n// variable declarations will be parsed as at-rules with names ending\n// with a colon, so keep the original case then.\nisDetachedRulesetCallNode$1(node)||node.name.endsWith(":")?node.name:maybeToLowerCase$1(node.name),node.params?concat$5([isDetachedRulesetCallNode$1(node)?"":isTemplatePlaceholderNode$1(node)?node.raws.afterName===""?"":node.name.endsWith(":")?" ":/^\\s*\\n\\s*\\n/.test(node.raws.afterName)?concat$5([hardline$4,hardline$4]):/^\\s*\\n/.test(node.raws.afterName)?hardline$4:" ":" ",path.call(print,"params")]):"",node.selector?indent$2(concat$5([" ",path.call(print,"selector")])):"",node.value?group$1(concat$5([" ",path.call(print,"value"),isSCSSControlDirectiveNode$1(node)?hasParensAroundNode$1(node)?" ":line$2:""])):node.name==="else"?" ":"",node.nodes?concat$5([isSCSSControlDirectiveNode$1(node)?"":" ","{",indent$2(concat$5([node.nodes.length>0?softline$1:"",printNodeSequence(path,options,print)])),softline$1,"}"]):isTemplatePlaceholderNodeWithoutSemiColon?"":";"]);}// postcss-media-query-parser\ncase"media-query-list":{var parts=[];path.each(function(childPath){var node=childPath.getValue();if(node.type==="media-query"&&node.value===""){return;}parts.push(childPath.call(print));},"nodes");return group$1(indent$2(join$2(line$2,parts)));}case"media-query":{return concat$5([join$2(" ",path.map(print,"nodes")),isLastNode$1(path,node)?"":","]);}case"media-type":{return adjustNumbers(adjustStrings(node.value,options));}case"media-feature-expression":{if(!node.nodes){return node.value;}return concat$5(["(",concat$5(path.map(print,"nodes")),")"]);}case"media-feature":{return maybeToLowerCase$1(adjustStrings(node.value.replace(/ +/g," "),options));}case"media-colon":{return concat$5([node.value," "]);}case"media-value":{return adjustNumbers(adjustStrings(node.value,options));}case"media-keyword":{return adjustStrings(node.value,options);}case"media-url":{return adjustStrings(node.value.replace(/^url\\(\\s+/gi,"url(").replace(/\\s+\\)$/gi,")"),options);}case"media-unknown":{return node.value;}// postcss-selector-parser\ncase"selector-root":{return group$1(concat$5([insideAtRuleNode$1(path,"custom-selector")?concat$5([getAncestorNode$1(path,"css-atrule").customSelector,line$2]):"",join$2(concat$5([",",insideAtRuleNode$1(path,["extend","custom-selector","nest"])?line$2:hardline$4]),path.map(print,"nodes"))]));}case"selector-selector":{return group$1(indent$2(concat$5(path.map(print,"nodes"))));}case"selector-comment":{return node.value;}case"selector-string":{return adjustStrings(node.value,options);}case"selector-tag":{var _parentNode2=path.getParentNode();var _index2=_parentNode2&&_parentNode2.nodes.indexOf(node);var prevNode=_index2&&_parentNode2.nodes[_index2-1];return concat$5([node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",prevNode.type==="selector-nesting"?node.value:adjustNumbers(isKeyframeAtRuleKeywords$1(path,node.value)?node.value.toLowerCase():node.value)]);}case"selector-id":{return concat$5(["#",node.value]);}case"selector-class":{return concat$5([".",adjustNumbers(adjustStrings(node.value,options))]);}case"selector-attribute":{return concat$5(["[",node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",node.attribute.trim(),node.operator?node.operator:"",node.value?quoteAttributeValue(adjustStrings(node.value.trim(),options),options):"",node.insensitive?" i":"","]"]);}case"selector-combinator":{if(node.value==="+"||node.value===">"||node.value==="~"||node.value===">>>"){var _parentNode3=path.getParentNode();var _leading=_parentNode3.type==="selector-selector"&&_parentNode3.nodes[0]===node?"":line$2;return concat$5([_leading,node.value,isLastNode$1(path,node)?"":" "]);}var leading=node.value.trim().startsWith("(")?line$2:"";var value=adjustNumbers(adjustStrings(node.value.trim(),options))||line$2;return concat$5([leading,value]);}case"selector-universal":{return concat$5([node.namespace?concat$5([node.namespace===true?"":node.namespace.trim(),"|"]):"",node.value]);}case"selector-pseudo":{return concat$5([maybeToLowerCase$1(node.value),node.nodes&&node.nodes.length>0?concat$5(["(",join$2(", ",path.map(print,"nodes")),")"]):""]);}case"selector-nesting":{return node.value;}case"selector-unknown":{var ruleAncestorNode=getAncestorNode$1(path,"css-rule");// Nested SCSS property\nif(ruleAncestorNode&&ruleAncestorNode.isSCSSNesterProperty){return adjustNumbers(adjustStrings(maybeToLowerCase$1(node.value),options));}// originalText has to be used for Less, see replaceQuotesInInlineComments in loc.js\nvar _parentNode4=path.getParentNode();if(_parentNode4.raws&&_parentNode4.raws.selector){var start=options.locStart(_parentNode4);var end=start+_parentNode4.raws.selector.length;return options.originalText.slice(start,end).trim();}return node.value;}// postcss-values-parser\ncase"value-value":case"value-root":{return path.call(print,"group");}case"value-comment":{return concat$5([node.inline?"//":"/*",// see replaceQuotesInInlineComments in loc.js\n// value-* nodes don\'t have correct location data, so we have to rely on placeholder characters.\nrestoreQuotesInInlineComments$1(node.value),node.inline?"":"*/"]);}case"value-comma_group":{var _parentNode5=path.getParentNode();var parentParentNode=path.getParentNode(1);var declAncestorProp=getPropOfDeclNode$1(path);var isGridValue=declAncestorProp&&_parentNode5.type==="value-value"&&(declAncestorProp==="grid"||declAncestorProp.startsWith("grid-template"));var atRuleAncestorNode=getAncestorNode$1(path,"css-atrule");var isControlDirective=atRuleAncestorNode&&isSCSSControlDirectiveNode$1(atRuleAncestorNode);var printed=path.map(print,"groups");var _parts2=[];var insideURLFunction=insideValueFunctionNode$1(path,"url");var insideSCSSInterpolationInString=false;var didBreak=false;for(var i=0;i<node.groups.length;++i){_parts2.push(printed[i]);var iPrevNode=node.groups[i-1];var iNode=node.groups[i];var iNextNode=node.groups[i+1];var iNextNextNode=node.groups[i+2];if(insideURLFunction){if(iNextNode&&isAdditionNode$1(iNextNode)||isAdditionNode$1(iNode)){_parts2.push(" ");}continue;}// Ignore after latest node (i.e. before semicolon)\nif(!iNextNode){continue;}// styled.div` background: var(--${one}); `\nif(!iPrevNode&&iNode.value==="--"&&iNextNode.type==="value-atword"){continue;}// Ignore spaces before/after string interpolation (i.e. `"#{my-fn("_")}"`)\nvar isStartSCSSInterpolationInString=iNode.type==="value-string"&&iNode.value.startsWith("#{");var isEndingSCSSInterpolationInString=insideSCSSInterpolationInString&&iNextNode.type==="value-string"&&iNextNode.value.endsWith("}");if(isStartSCSSInterpolationInString||isEndingSCSSInterpolationInString){insideSCSSInterpolationInString=!insideSCSSInterpolationInString;continue;}if(insideSCSSInterpolationInString){continue;}// Ignore colon (i.e. `:`)\nif(isColonNode$1(iNode)||isColonNode$1(iNextNode)){continue;}// Ignore `@` in Less (i.e. `@@var;`)\nif(iNode.type==="value-atword"&&iNode.value===""){continue;}// Ignore `~` in Less (i.e. `content: ~"^//* some horrible but needed css hack";`)\nif(iNode.value==="~"){continue;}// Ignore escape `\\`\nif(iNode.value&&iNode.value.includes("\\\\")&&iNextNode&&iNextNode.type!=="value-comment"){continue;}// Ignore escaped `/`\nif(iPrevNode&&iPrevNode.value&&iPrevNode.value.indexOf("\\\\")===iPrevNode.value.length-1&&iNode.type==="value-operator"&&iNode.value==="/"){continue;}// Ignore `\\` (i.e. `$variable: \\@small;`)\nif(iNode.value==="\\\\"){continue;}// Ignore `$$` (i.e. `background-color: $$(style)Color;`)\nif(isPostcssSimpleVarNode$1(iNode,iNextNode)){continue;}// Ignore spaces after `#` and after `{` and before `}` in SCSS interpolation (i.e. `#{variable}`)\nif(isHashNode$1(iNode)||isLeftCurlyBraceNode$1(iNode)||isRightCurlyBraceNode$1(iNextNode)||isLeftCurlyBraceNode$1(iNextNode)&&hasEmptyRawBefore$1(iNextNode)||isRightCurlyBraceNode$1(iNode)&&hasEmptyRawBefore$1(iNextNode)){continue;}// Ignore css variables and interpolation in SCSS (i.e. `--#{$var}`)\nif(iNode.value==="--"&&isHashNode$1(iNextNode)){continue;}// Formatting math operations\nvar isMathOperator=isMathOperatorNode$1(iNode);var isNextMathOperator=isMathOperatorNode$1(iNextNode);// Print spaces before and after math operators beside SCSS interpolation as is\n// (i.e. `#{$var}+5`, `#{$var} +5`, `#{$var}+ 5`, `#{$var} + 5`)\n// (i.e. `5+#{$var}`, `5 +#{$var}`, `5+ #{$var}`, `5 + #{$var}`)\nif((isMathOperator&&isHashNode$1(iNextNode)||isNextMathOperator&&isRightCurlyBraceNode$1(iNode))&&hasEmptyRawBefore$1(iNextNode)){continue;}// Print spaces before and after addition and subtraction math operators as is in `calc` function\n// due to the fact that it is not valid syntax\n// (i.e. `calc(1px+1px)`, `calc(1px+ 1px)`, `calc(1px +1px)`, `calc(1px + 1px)`)\nif(insideValueFunctionNode$1(path,"calc")&&(isAdditionNode$1(iNode)||isAdditionNode$1(iNextNode)||isSubtractionNode$1(iNode)||isSubtractionNode$1(iNextNode))&&hasEmptyRawBefore$1(iNextNode)){continue;}// Print spaces after `+` and `-` in color adjuster functions as is (e.g. `color(red l(+ 20%))`)\n// Adjusters with signed numbers (e.g. `color(red l(+20%))`) output as-is.\nvar isColorAdjusterNode=(isAdditionNode$1(iNode)||isSubtractionNode$1(iNode))&&i===0&&(iNextNode.type==="value-number"||iNextNode.isHex)&&parentParentNode&&isColorAdjusterFuncNode$1(parentParentNode)&&!hasEmptyRawBefore$1(iNextNode);var requireSpaceBeforeOperator=iNextNextNode&&iNextNextNode.type==="value-func"||iNextNextNode&&isWordNode$1(iNextNextNode)||iNode.type==="value-func"||isWordNode$1(iNode);var requireSpaceAfterOperator=iNextNode.type==="value-func"||isWordNode$1(iNextNode)||iPrevNode&&iPrevNode.type==="value-func"||iPrevNode&&isWordNode$1(iPrevNode);// Formatting `/`, `+`, `-` sign\nif(!(isMultiplicationNode$1(iNextNode)||isMultiplicationNode$1(iNode))&&!insideValueFunctionNode$1(path,"calc")&&!isColorAdjusterNode&&(isDivisionNode$1(iNextNode)&&!requireSpaceBeforeOperator||isDivisionNode$1(iNode)&&!requireSpaceAfterOperator||isAdditionNode$1(iNextNode)&&!requireSpaceBeforeOperator||isAdditionNode$1(iNode)&&!requireSpaceAfterOperator||isSubtractionNode$1(iNextNode)||isSubtractionNode$1(iNode))&&(hasEmptyRawBefore$1(iNextNode)||isMathOperator&&(!iPrevNode||iPrevNode&&isMathOperatorNode$1(iPrevNode)))){continue;}// Add `hardline` after inline comment (i.e. `// comment\\n foo: bar;`)\nif(isInlineValueCommentNode$1(iNode)){_parts2.push(hardline$4);continue;}// Handle keywords in SCSS control directive\nif(isControlDirective&&(isEqualityOperatorNode$1(iNextNode)||isRelationalOperatorNode$1(iNextNode)||isIfElseKeywordNode$1(iNextNode)||isEachKeywordNode$1(iNode)||isForKeywordNode$1(iNode))){_parts2.push(" ");continue;}// At-rule `namespace` should be in one line\nif(atRuleAncestorNode&&atRuleAncestorNode.name.toLowerCase()==="namespace"){_parts2.push(" ");continue;}// Formatting `grid` property\nif(isGridValue){if(iNode.source&&iNextNode.source&&iNode.source.start.line!==iNextNode.source.start.line){_parts2.push(hardline$4);didBreak=true;}else{_parts2.push(" ");}continue;}// Add `space` before next math operation\n// Note: `grip` property have `/` delimiter and it is not math operation, so\n// `grid` property handles above\nif(isNextMathOperator){_parts2.push(" ");continue;}// Be default all values go through `line`\n_parts2.push(line$2);}if(didBreak){_parts2.unshift(hardline$4);}if(isControlDirective){return group$1(indent$2(concat$5(_parts2)));}// Indent is not needed for import url when url is very long\n// and node has two groups\n// when type is value-comma_group\n// example @import url("verylongurl") projection,tv\nif(insideURLFunctionInImportAtRuleNode$1(path)){return group$1(fill$2(_parts2));}return group$1(indent$2(fill$2(_parts2)));}case"value-paren_group":{var _parentNode6=path.getParentNode();if(_parentNode6&&isURLFunctionNode$1(_parentNode6)&&(node.groups.length===1||node.groups.length>0&&node.groups[0].type==="value-comma_group"&&node.groups[0].groups.length>0&&node.groups[0].groups[0].type==="value-word"&&node.groups[0].groups[0].value.startsWith("data:"))){return concat$5([node.open?path.call(print,"open"):"",join$2(",",path.map(print,"groups")),node.close?path.call(print,"close"):""]);}if(!node.open){var _printed=path.map(print,"groups");var res=[];for(var _i39=0;_i39<_printed.length;_i39++){if(_i39!==0){res.push(concat$5([",",line$2]));}res.push(_printed[_i39]);}return group$1(indent$2(fill$2(res)));}var isSCSSMapItem=isSCSSMapItemNode$1(path);var lastItem=node.groups[node.groups.length-1];var isLastItemComment=lastItem&&lastItem.type==="value-comment";return group$1(concat$5([node.open?path.call(print,"open"):"",indent$2(concat$5([softline$1,join$2(concat$5([",",line$2]),path.map(function(childPath){var node=childPath.getValue();var printed=print(childPath);// Key/Value pair in open paren already indented\nif(isKeyValuePairNode$1(node)&&node.type==="value-comma_group"&&node.groups&&node.groups[2]&&node.groups[2].type==="value-paren_group"){printed.contents.contents.parts[1]=group$1(printed.contents.contents.parts[1]);return group$1(dedent$1(printed));}return printed;},"groups"))])),ifBreak$1(!isLastItemComment&&isSCSS$1(options.parser,options.originalText)&&isSCSSMapItem&&shouldPrintComma(options)?",":""),softline$1,node.close?path.call(print,"close"):""]),{shouldBreak:isSCSSMapItem});}case"value-func":{return concat$5([node.value,insideAtRuleNode$1(path,"supports")&&isMediaAndSupportsKeywords$1(node)?" ":"",path.call(print,"group")]);}case"value-paren":{return node.value;}case"value-number":{return concat$5([printCssNumber(node.value),maybeToLowerCase$1(node.unit)]);}case"value-operator":{return node.value;}case"value-word":{if(node.isColor&&node.isHex||isWideKeywords$1(node.value)){return node.value.toLowerCase();}return node.value;}case"value-colon":{return concat$5([node.value,// Don\'t add spaces on `:` in `url` function (i.e. `url(fbglyph: cross-outline, fig-white)`)\ninsideValueFunctionNode$1(path,"url")?"":line$2]);}case"value-comma":{return concat$5([node.value," "]);}case"value-string":{return printString$1(node.raws.quote+node.value+node.raws.quote,options);}case"value-atword":{return concat$5(["@",node.value]);}case"value-unicode-range":{return node.value;}case"value-unknown":{return node.value;}default:/* istanbul ignore next */throw new Error("Unknown postcss type ".concat(JSON.stringify(node.type)));}}function printNodeSequence(path,options,print){var node=path.getValue();var parts=[];var i=0;path.map(function(pathChild){var prevNode=node.nodes[i-1];if(prevNode&&prevNode.type==="css-comment"&&prevNode.text.trim()==="prettier-ignore"){var childNode=pathChild.getValue();parts.push(options.originalText.slice(options.locStart(childNode),options.locEnd(childNode)));}else{parts.push(pathChild.call(print));}if(i!==node.nodes.length-1){if(node.nodes[i+1].type==="css-comment"&&!hasNewline$3(options.originalText,options.locStart(node.nodes[i+1]),{backwards:true})&&node.nodes[i].type!=="yaml"&&node.nodes[i].type!=="toml"||node.nodes[i+1].type==="css-atrule"&&node.nodes[i+1].name==="else"&&node.nodes[i].type!=="css-comment"){parts.push(" ");}else{parts.push(options.__isHTMLStyleAttribute?line$2:hardline$4);if(isNextLineEmpty$2(options.originalText,pathChild.getValue(),options.locEnd)&&node.nodes[i].type!=="yaml"&&node.nodes[i].type!=="toml"){parts.push(hardline$4);}}}i++;},"nodes");return concat$5(parts);}var STRING_REGEX$3=/([\'"])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/g;var NUMBER_REGEX=/(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g;var STANDARD_UNIT_REGEX=/[a-zA-Z]+/g;var WORD_PART_REGEX=/[$@]?[a-zA-Z_\\u0080-\\uFFFF][\\w\\-\\u0080-\\uFFFF]*/g;var ADJUST_NUMBERS_REGEX=new RegExp(STRING_REGEX$3.source+"|"+"(".concat(WORD_PART_REGEX.source,")?")+"(".concat(NUMBER_REGEX.source,")")+"(".concat(STANDARD_UNIT_REGEX.source,")?"),"g");function adjustStrings(value,options){return value.replace(STRING_REGEX$3,function(match){return printString$1(match,options);});}function quoteAttributeValue(value,options){var quote=options.singleQuote?"\'":\'"\';return value.includes(\'"\')||value.includes("\'")?value:quote+value+quote;}function adjustNumbers(value){return value.replace(ADJUST_NUMBERS_REGEX,function(match,quote,wordPart,number,unit){return!wordPart&&number?printCssNumber(number)+maybeToLowerCase$1(unit||""):match;});}function printCssNumber(rawNumber){return printNumber$1(rawNumber)// Remove trailing `.0`.\n.replace(/\\.0(?=$|e)/,"");}var printerPostcss={print:genericPrint,embed:embed_1,insertPragma:insertPragma$2,hasPrettierIgnore:hasIgnoreComment$1,massageAstNode:clean_1};var CATEGORY_COMMON="Common";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar commonOptions={bracketSpacing:{since:"0.0.0",category:CATEGORY_COMMON,type:"boolean",default:true,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:CATEGORY_COMMON,type:"boolean",default:false,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:CATEGORY_COMMON,type:"choice",default:[{since:"1.8.2",value:true},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]}};var options$2={singleQuote:commonOptions.singleQuote};var createLanguage=function createLanguage(linguistData,override){var languageId=linguistData.languageId,rest=_objectWithoutPropertiesLoose(linguistData,["languageId"]);return Object.assign({linguistLanguageId:languageId},rest,{},override(linguistData));};var name$1="CSS";var type="markup";var tmScope="source.css";var aceMode="css";var codemirrorMode="css";var codemirrorMimeType="text/css";var color="#563d7c";var extensions=[".css"];var languageId=50;var CSS={name:name$1,type:type,tmScope:tmScope,aceMode:aceMode,codemirrorMode:codemirrorMode,codemirrorMimeType:codemirrorMimeType,color:color,extensions:extensions,languageId:languageId};var CSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$1,type:type,tmScope:tmScope,aceMode:aceMode,codemirrorMode:codemirrorMode,codemirrorMimeType:codemirrorMimeType,color:color,extensions:extensions,languageId:languageId,\'default\':CSS});var name$2="PostCSS";var type$1="markup";var tmScope$1="source.postcss";var group$2="CSS";var extensions$1=[".pcss",".postcss"];var aceMode$1="text";var languageId$1=262764437;var PostCSS={name:name$2,type:type$1,tmScope:tmScope$1,group:group$2,extensions:extensions$1,aceMode:aceMode$1,languageId:languageId$1};var PostCSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$2,type:type$1,tmScope:tmScope$1,group:group$2,extensions:extensions$1,aceMode:aceMode$1,languageId:languageId$1,\'default\':PostCSS});var name$3="Less";var type$2="markup";var group$3="CSS";var extensions$2=[".less"];var tmScope$2="source.css.less";var aceMode$2="less";var codemirrorMode$1="css";var codemirrorMimeType$1="text/css";var languageId$2=198;var Less={name:name$3,type:type$2,group:group$3,extensions:extensions$2,tmScope:tmScope$2,aceMode:aceMode$2,codemirrorMode:codemirrorMode$1,codemirrorMimeType:codemirrorMimeType$1,languageId:languageId$2};var Less$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$3,type:type$2,group:group$3,extensions:extensions$2,tmScope:tmScope$2,aceMode:aceMode$2,codemirrorMode:codemirrorMode$1,codemirrorMimeType:codemirrorMimeType$1,languageId:languageId$2,\'default\':Less});var name$4="SCSS";var type$3="markup";var tmScope$3="source.css.scss";var group$4="CSS";var aceMode$3="scss";var codemirrorMode$2="css";var codemirrorMimeType$2="text/x-scss";var extensions$3=[".scss"];var languageId$3=329;var SCSS={name:name$4,type:type$3,tmScope:tmScope$3,group:group$4,aceMode:aceMode$3,codemirrorMode:codemirrorMode$2,codemirrorMimeType:codemirrorMimeType$2,extensions:extensions$3,languageId:languageId$3};var SCSS$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$4,type:type$3,tmScope:tmScope$3,group:group$4,aceMode:aceMode$3,codemirrorMode:codemirrorMode$2,codemirrorMimeType:codemirrorMimeType$2,extensions:extensions$3,languageId:languageId$3,\'default\':SCSS});var require$$0$2=getCjsExportFromNamespace(CSS$1);var require$$1=getCjsExportFromNamespace(PostCSS$1);var require$$2=getCjsExportFromNamespace(Less$1);var require$$3=getCjsExportFromNamespace(SCSS$1);var languages=[createLanguage(require$$0$2,function(){return{since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"]};}),createLanguage(require$$1,function(){return{since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]};}),createLanguage(require$$2,function(){return{since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]};}),createLanguage(require$$3,function(){return{since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]};})];var printers={postcss:printerPostcss};var languageCss={languages:languages,options:options$2,printers:printers};function hasPragma$2(text){return /^\\s*#[^\\n\\S]*@(format|prettier)\\s*(\\n|$)/.test(text);}function insertPragma$3(text){return"# @format\\n\\n"+text;}var pragma$2={hasPragma:hasPragma$2,insertPragma:insertPragma$3};var _document$builders4=document.builders,concat$6=_document$builders4.concat,join$3=_document$builders4.join,hardline$5=_document$builders4.hardline,line$3=_document$builders4.line,softline$2=_document$builders4.softline,group$5=_document$builders4.group,indent$3=_document$builders4.indent,ifBreak$2=_document$builders4.ifBreak;var hasIgnoreComment$2=util$1.hasIgnoreComment;var isNextLineEmpty$3=utilShared.isNextLineEmpty;var insertPragma$4=pragma$2.insertPragma;function genericPrint$1(path,options,print){var n=path.getValue();if(!n){return"";}if(typeof n==="string"){return n;}switch(n.kind){case"Document":{var parts=[];path.map(function(pathChild,index){parts.push(concat$6([pathChild.call(print)]));if(index!==n.definitions.length-1){parts.push(hardline$5);if(isNextLineEmpty$3(options.originalText,pathChild.getValue(),options.locEnd)){parts.push(hardline$5);}}},"definitions");return concat$6([concat$6(parts),hardline$5]);}case"OperationDefinition":{var hasOperation=options.originalText[options.locStart(n)]!=="{";var hasName=!!n.name;return concat$6([hasOperation?n.operation:"",hasOperation&&hasName?concat$6([" ",path.call(print,"name")]):"",n.variableDefinitions&&n.variableDefinitions.length?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"variableDefinitions"))])),softline$2,")"])):"",printDirectives(path,print,n),n.selectionSet?!hasOperation&&!hasName?"":" ":"",path.call(print,"selectionSet")]);}case"FragmentDefinition":{return concat$6(["fragment ",path.call(print,"name"),n.variableDefinitions&&n.variableDefinitions.length?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"variableDefinitions"))])),softline$2,")"])):""," on ",path.call(print,"typeCondition"),printDirectives(path,print,n)," ",path.call(print,"selectionSet")]);}case"SelectionSet":{return concat$6(["{",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(selectionsPath){return printSequence(selectionsPath,options,print);},"selections"))])),hardline$5,"}"]);}case"Field":{return group$5(concat$6([n.alias?concat$6([path.call(print,"alias"),": "]):"",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",printDirectives(path,print,n),n.selectionSet?" ":"",path.call(print,"selectionSet")]));}case"Name":{return n.value;}case"StringValue":{if(n.block){return concat$6([\'"""\',hardline$5,join$3(hardline$5,n.value.replace(/"""/g,"\\\\$&").split("\\n")),hardline$5,\'"""\']);}return concat$6([\'"\',n.value.replace(/["\\\\]/g,"\\\\$&").replace(/\\n/g,"\\\\n"),\'"\']);}case"IntValue":case"FloatValue":case"EnumValue":{return n.value;}case"BooleanValue":{return n.value?"true":"false";}case"NullValue":{return"null";}case"Variable":{return concat$6(["$",path.call(print,"name")]);}case"ListValue":{return group$5(concat$6(["[",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"values"))])),softline$2,"]"]));}case"ObjectValue":{return group$5(concat$6(["{",options.bracketSpacing&&n.fields.length>0?" ":"",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.map(print,"fields"))])),softline$2,ifBreak$2("",options.bracketSpacing&&n.fields.length>0?" ":""),"}"]));}case"ObjectField":case"Argument":{return concat$6([path.call(print,"name"),": ",path.call(print,"value")]);}case"Directive":{return concat$6(["@",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):""]);}case"NamedType":{return path.call(print,"name");}case"VariableDefinition":{return concat$6([path.call(print,"variable"),": ",path.call(print,"type"),n.defaultValue?concat$6([" = ",path.call(print,"defaultValue")]):"",printDirectives(path,print,n)]);}case"TypeExtensionDefinition":{return concat$6(["extend ",path.call(print,"definition")]);}case"ObjectTypeExtension":case"ObjectTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="ObjectTypeExtension"?"extend ":"","type ",path.call(print,"name"),n.interfaces.length>0?concat$6([" implements ",concat$6(printInterfaces(path,options,print))]):"",printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"FieldDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",": ",path.call(print,"type"),printDirectives(path,print,n)]);}case"DirectiveDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"","directive ","@",path.call(print,"name"),n.arguments.length>0?group$5(concat$6(["(",indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2("",", "),softline$2]),path.call(function(argsPath){return printSequence(argsPath,options,print);},"arguments"))])),softline$2,")"])):"",n.repeatable?" repeatable":"",concat$6([" on ",join$3(" | ",path.map(print,"locations"))])]);}case"EnumTypeExtension":case"EnumTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="EnumTypeExtension"?"extend ":"","enum ",path.call(print,"name"),printDirectives(path,print,n),n.values.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(valuesPath){return printSequence(valuesPath,options,print);},"values"))])),hardline$5,"}"]):""]);}case"EnumValueDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",path.call(print,"name"),printDirectives(path,print,n)]);}case"InputValueDefinition":{return concat$6([path.call(print,"description"),n.description?n.description.block?hardline$5:line$3:"",path.call(print,"name"),": ",path.call(print,"type"),n.defaultValue?concat$6([" = ",path.call(print,"defaultValue")]):"",printDirectives(path,print,n)]);}case"InputObjectTypeExtension":case"InputObjectTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="InputObjectTypeExtension"?"extend ":"","input ",path.call(print,"name"),printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"SchemaDefinition":{return concat$6(["schema",printDirectives(path,print,n)," {",n.operationTypes.length>0?indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(opsPath){return printSequence(opsPath,options,print);},"operationTypes"))])):"",hardline$5,"}"]);}case"OperationTypeDefinition":{return concat$6([path.call(print,"operation"),": ",path.call(print,"type")]);}case"InterfaceTypeExtension":case"InterfaceTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="InterfaceTypeExtension"?"extend ":"","interface ",path.call(print,"name"),printDirectives(path,print,n),n.fields.length>0?concat$6([" {",indent$3(concat$6([hardline$5,join$3(hardline$5,path.call(function(fieldsPath){return printSequence(fieldsPath,options,print);},"fields"))])),hardline$5,"}"]):""]);}case"FragmentSpread":{return concat$6(["...",path.call(print,"name"),printDirectives(path,print,n)]);}case"InlineFragment":{return concat$6(["...",n.typeCondition?concat$6([" on ",path.call(print,"typeCondition")]):"",printDirectives(path,print,n)," ",path.call(print,"selectionSet")]);}case"UnionTypeExtension":case"UnionTypeDefinition":{return group$5(concat$6([path.call(print,"description"),n.description?hardline$5:"",group$5(concat$6([n.kind==="UnionTypeExtension"?"extend ":"","union ",path.call(print,"name"),printDirectives(path,print,n),n.types.length>0?concat$6([" =",ifBreak$2(""," "),indent$3(concat$6([ifBreak$2(concat$6([line$3,"  "])),join$3(concat$6([line$3,"| "]),path.map(print,"types"))]))]):""]))]));}case"ScalarTypeExtension":case"ScalarTypeDefinition":{return concat$6([path.call(print,"description"),n.description?hardline$5:"",n.kind==="ScalarTypeExtension"?"extend ":"","scalar ",path.call(print,"name"),printDirectives(path,print,n)]);}case"NonNullType":{return concat$6([path.call(print,"type"),"!"]);}case"ListType":{return concat$6(["[",path.call(print,"type"),"]"]);}default:/* istanbul ignore next */throw new Error("unknown graphql type: "+JSON.stringify(n.kind));}}function printDirectives(path,print,n){if(n.directives.length===0){return"";}return concat$6([" ",group$5(indent$3(concat$6([softline$2,join$3(concat$6([ifBreak$2(""," "),softline$2]),path.map(print,"directives"))])))]);}function printSequence(sequencePath,options,print){var count=sequencePath.getValue().length;return sequencePath.map(function(path,i){var printed=print(path);if(isNextLineEmpty$3(options.originalText,path.getValue(),options.locEnd)&&i<count-1){return concat$6([printed,hardline$5]);}return printed;});}function canAttachComment(node){return node.kind&&node.kind!=="Comment";}function printComment$1(commentPath){var comment=commentPath.getValue();if(comment.kind==="Comment"){return"#"+comment.value.trimEnd();}throw new Error("Not a comment: "+JSON.stringify(comment));}function determineInterfaceSeparatorBetween(first,second,options){var textBetween=options.originalText.slice(first.loc.end,second.loc.start).replace(/#.*/g,"").trim();return textBetween===","?", ":" & ";}function printInterfaces(path,options,print){var node=path.getNode();var parts=[];var interfaces=node.interfaces;var printed=path.map(function(node){return print(node);},"interfaces");for(var _index3=0;_index3<interfaces.length;_index3++){var interfaceNode=interfaces[_index3];if(_index3>0){parts.push(determineInterfaceSeparatorBetween(interfaces[_index3-1],interfaceNode,options));}parts.push(printed[_index3]);}return parts;}function clean$1(node,newNode/*, parent*/){delete newNode.loc;delete newNode.comments;}var printerGraphql={print:genericPrint$1,massageAstNode:clean$1,hasPrettierIgnore:hasIgnoreComment$2,insertPragma:insertPragma$4,printComment:printComment$1,canAttachComment:canAttachComment};var options$3={bracketSpacing:commonOptions.bracketSpacing};var name$5="GraphQL";var type$4="data";var extensions$4=[".graphql",".gql",".graphqls"];var tmScope$4="source.graphql";var aceMode$4="text";var languageId$4=139;var GraphQL={name:name$5,type:type$4,extensions:extensions$4,tmScope:tmScope$4,aceMode:aceMode$4,languageId:languageId$4};var GraphQL$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$5,type:type$4,extensions:extensions$4,tmScope:tmScope$4,aceMode:aceMode$4,languageId:languageId$4,\'default\':GraphQL});var require$$0$3=getCjsExportFromNamespace(GraphQL$1);var languages$1=[createLanguage(require$$0$3,function(){return{since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]};})];var printers$1={graphql:printerGraphql};var languageGraphql={languages:languages$1,options:options$3,printers:printers$1};var clean$2=function clean(ast,newNode){delete newNode.loc;delete newNode.selfClosing;// (Glimmer/HTML) ignore TextNode whitespace\nif(ast.type==="TextNode"){var trimmed=ast.chars.trim();if(!trimmed){return null;}newNode.chars=trimmed;}};function isUppercase(string){return string.toUpperCase()===string;}function isGlimmerComponent(node){return isNodeOfSomeType(node,["ElementNode"])&&typeof node.tag==="string"&&(isUppercase(node.tag[0])||node.tag.includes("."));}function isWhitespaceNode(node){return isNodeOfSomeType(node,["TextNode"])&&!/\\S/.test(node.chars);}function isNodeOfSomeType(node,types){return node&&types.some(function(type){return node.type===type;});}function isParentOfSomeType(path,types){var parentNode=path.getParentNode(0);return isNodeOfSomeType(parentNode,types);}function isPreviousNodeOfSomeType(path,types){var previousNode=getPreviousNode(path);return isNodeOfSomeType(previousNode,types);}function isNextNodeOfSomeType(path,types){var nextNode=getNextNode(path);return isNodeOfSomeType(nextNode,types);}function getSiblingNode(path,offset){var node=path.getValue();var parentNode=path.getParentNode(0)||{};var children=parentNode.children||parentNode.body||[];var index=children.indexOf(node);return index!==-1&&children[index+offset];}function getPreviousNode(path){var lookBack=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return getSiblingNode(path,-lookBack);}function getNextNode(path){return getSiblingNode(path,1);}function isPrettierIgnoreNode(node){return isNodeOfSomeType(node,["MustacheCommentStatement"])&&typeof node.value==="string"&&node.value.trim()==="prettier-ignore";}function hasPrettierIgnore(path){var node=path.getValue();var previousPreviousNode=getPreviousNode(path,2);return isPrettierIgnoreNode(node)||isPrettierIgnoreNode(previousPreviousNode);}var utils$3={getNextNode:getNextNode,getPreviousNode:getPreviousNode,hasPrettierIgnore:hasPrettierIgnore,isGlimmerComponent:isGlimmerComponent,isNextNodeOfSomeType:isNextNodeOfSomeType,isNodeOfSomeType:isNodeOfSomeType,isParentOfSomeType:isParentOfSomeType,isPreviousNodeOfSomeType:isPreviousNodeOfSomeType,isWhitespaceNode:isWhitespaceNode};var _document$builders5=document.builders,concat$7=_document$builders5.concat,join$4=_document$builders5.join,softline$3=_document$builders5.softline,hardline$6=_document$builders5.hardline,line$4=_document$builders5.line,group$6=_document$builders5.group,indent$4=_document$builders5.indent,ifBreak$3=_document$builders5.ifBreak;var getNextNode$1=utils$3.getNextNode,getPreviousNode$1=utils$3.getPreviousNode,hasPrettierIgnore$1=utils$3.hasPrettierIgnore,isGlimmerComponent$1=utils$3.isGlimmerComponent,isNextNodeOfSomeType$1=utils$3.isNextNodeOfSomeType,isParentOfSomeType$1=utils$3.isParentOfSomeType,isPreviousNodeOfSomeType$1=utils$3.isPreviousNodeOfSomeType,isWhitespaceNode$1=utils$3.isWhitespaceNode;// http://w3c.github.io/html/single-page.html#void-elements\nvar voidTags=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"];// Formatter based on @glimmerjs/syntax\'s built-in test formatter:\n// https://github.com/glimmerjs/glimmer-vm/blob/master/packages/%40glimmer/syntax/lib/generation/print.ts\nfunction print(path,options,print){var n=path.getValue();/* istanbul ignore if*/if(!n){return"";}if(hasPrettierIgnore$1(path)){var startOffset=locationToOffset(options.originalText,n.loc.start.line-1,n.loc.start.column);var endOffset=locationToOffset(options.originalText,n.loc.end.line-1,n.loc.end.column);var ignoredText=options.originalText.slice(startOffset,endOffset);return ignoredText;}switch(n.type){case"Block":case"Program":case"Template":{return group$6(concat$7(path.map(print,"body")));}case"ElementNode":{var hasChildren=n.children.length>0;var hasNonWhitespaceChildren=n.children.some(function(n){return!isWhitespaceNode$1(n);});var isVoid=isGlimmerComponent$1(n)&&(!hasChildren||!hasNonWhitespaceChildren)||voidTags.includes(n.tag);var closeTagForNoBreak=isVoid?concat$7([" />",softline$3]):">";var closeTagForBreak=isVoid?"/>":">";var _printParams=function _printParams(path,print){return indent$4(concat$7([n.attributes.length?line$4:"",join$4(line$4,path.map(print,"attributes")),n.modifiers.length?line$4:"",join$4(line$4,path.map(print,"modifiers")),n.comments.length?line$4:"",join$4(line$4,path.map(print,"comments"))]));};var nextNode=getNextNode$1(path);return concat$7([group$6(concat$7(["<",n.tag,_printParams(path,print),n.blockParams.length?" as |".concat(n.blockParams.join(" "),"|"):"",ifBreak$3(softline$3,""),ifBreak$3(closeTagForBreak,closeTagForNoBreak)])),!isVoid?group$6(concat$7([hasNonWhitespaceChildren?indent$4(printChildren(path,options,print)):"",ifBreak$3(hasChildren?hardline$6:"",""),concat$7(["</",n.tag,">"])])):"",nextNode&&nextNode.type==="ElementNode"?hardline$6:""]);}case"BlockStatement":{var pp=path.getParentNode(1);var isElseIf=pp&&pp.inverse&&pp.inverse.body.length===1&&pp.inverse.body[0]===n&&pp.inverse.body[0].path.parts[0]==="if";var hasElseIf=n.inverse&&n.inverse.body.length===1&&n.inverse.body[0].type==="BlockStatement"&&n.inverse.body[0].path.parts[0]==="if";var indentElse=hasElseIf?function(a){return a;}:indent$4;var inverseElseStatement=(n.inverseStrip.open?"{{~":"{{")+"else"+(n.inverseStrip.close?"~}}":"}}");if(n.inverse){return concat$7([isElseIf?concat$7([n.openStrip.open?"{{~else ":"{{else ",printPathParams(path,print),n.openStrip.close?"~}}":"}}"]):printOpenBlock(path,print,n.openStrip),indent$4(concat$7([hardline$6,path.call(print,"program")])),n.inverse&&!hasElseIf?concat$7([hardline$6,inverseElseStatement]):"",n.inverse?indentElse(concat$7([hardline$6,path.call(print,"inverse")])):"",isElseIf?"":concat$7([hardline$6,printCloseBlock(path,print,n.closeStrip)])]);}else if(isElseIf){return concat$7([concat$7([n.openStrip.open?"{{~else":"{{else ",printPathParams(path,print),n.openStrip.close?"~}}":"}}"]),indent$4(concat$7([hardline$6,path.call(print,"program")]))]);}var _hasNonWhitespaceChildren=n.program.body.some(function(n){return!isWhitespaceNode$1(n);});return concat$7([printOpenBlock(path,print,n.openStrip),group$6(concat$7([indent$4(concat$7([softline$3,path.call(print,"program")])),_hasNonWhitespaceChildren?hardline$6:softline$3,printCloseBlock(path,print,n.closeStrip)]))]);}case"ElementModifierStatement":{return group$6(concat$7(["{{",printPathParams(path,print),softline$3,"}}"]));}case"MustacheStatement":{var isEscaped=n.escaped===false;var _n$strip=n.strip,openStrip=_n$strip.open,closeStrip=_n$strip.close;var opening=(isEscaped?"{{{":"{{")+(openStrip?"~":"");var closing=(closeStrip?"~":"")+(isEscaped?"}}}":"}}");var leading=isParentOfSomeType$1(path,["AttrNode","ConcatStatement","ElementNode"])?[opening,indent$4(softline$3)]:[opening];return group$6(concat$7([].concat(leading,[printPathParams(path,print),softline$3,closing])));}case"SubExpression":{var params=printParams(path,print);var printedParams=params.length>0?indent$4(concat$7([line$4,group$6(join$4(line$4,params))])):"";return group$6(concat$7(["(",printPath(path,print),printedParams,softline$3,")"]));}case"AttrNode":{var isText=n.value.type==="TextNode";var isEmptyText=isText&&n.value.chars==="";// If the text is empty and the value\'s loc start and end columns are the\n// same, there is no value for this AttrNode and it should be printed\n// without the `=""`. Example: `<img data-test>` -> `<img data-test>`\nvar isEmptyValue=isEmptyText&&n.value.loc.start.column===n.value.loc.end.column;if(isEmptyValue){return concat$7([n.name]);}var value=path.call(print,"value");var quotedValue=isText?printStringLiteral(value.parts.join(),options):value;return concat$7([n.name,"=",quotedValue]);}case"ConcatStatement":{return concat$7([\'"\',concat$7(path.map(function(partPath){return print(partPath);},"parts").filter(function(a){return a!=="";})),\'"\']);}case"Hash":{return concat$7([join$4(line$4,path.map(print,"pairs"))]);}case"HashPair":{return concat$7([n.key,"=",path.call(print,"value")]);}case"TextNode":{var maxLineBreaksToPreserve=2;var isFirstElement=!getPreviousNode$1(path);var isLastElement=!getNextNode$1(path);var isWhitespaceOnly=!/\\S/.test(n.chars);var lineBreaksCount=countNewLines(n.chars);var hasBlockParent=path.getParentNode(0).type==="Block";var hasElementParent=path.getParentNode(0).type==="ElementNode";var hasTemplateParent=path.getParentNode(0).type==="Template";var leadingLineBreaksCount=countLeadingNewLines(n.chars);var trailingLineBreaksCount=countTrailingNewLines(n.chars);if((isFirstElement||isLastElement)&&isWhitespaceOnly&&(hasBlockParent||hasElementParent||hasTemplateParent)){return"";}if(isWhitespaceOnly&&lineBreaksCount){leadingLineBreaksCount=Math.min(lineBreaksCount,maxLineBreaksToPreserve);trailingLineBreaksCount=0;}else{if(isNextNodeOfSomeType$1(path,["BlockStatement","ElementNode"])){trailingLineBreaksCount=Math.max(trailingLineBreaksCount,1);}if(isPreviousNodeOfSomeType$1(path,["ElementNode"])||isPreviousNodeOfSomeType$1(path,["BlockStatement"])){leadingLineBreaksCount=Math.max(leadingLineBreaksCount,1);}}var leadingSpace="";var trailingSpace="";// preserve a space inside of an attribute node where whitespace present,\n// when next to mustache statement.\nvar inAttrNode=path.stack.includes("attributes");if(inAttrNode){var parentNode=path.getParentNode(0);var isConcat=parentNode.type==="ConcatStatement";if(isConcat){var parts=parentNode.parts;var partIndex=parts.indexOf(n);if(partIndex>0){var partType=parts[partIndex-1].type;var isMustache=partType==="MustacheStatement";if(isMustache){leadingSpace=" ";}}if(partIndex<parts.length-1){var _partType=parts[partIndex+1].type;var _isMustache=_partType==="MustacheStatement";if(_isMustache){trailingSpace=" ";}}}}else{if(trailingLineBreaksCount===0&&isNextNodeOfSomeType$1(path,["MustacheStatement"])){trailingSpace=" ";}if(leadingLineBreaksCount===0&&isPreviousNodeOfSomeType$1(path,["MustacheStatement"])){leadingSpace=" ";}if(isFirstElement){leadingLineBreaksCount=0;leadingSpace="";}if(isLastElement){trailingLineBreaksCount=0;trailingSpace="";}}return concat$7([].concat((0,_toConsumableArray3.default)(generateHardlines(leadingLineBreaksCount,maxLineBreaksToPreserve)),[n.chars.replace(/^[\\s ]+/g,leadingSpace).replace(/[\\s ]+$/,trailingSpace)],(0,_toConsumableArray3.default)(generateHardlines(trailingLineBreaksCount,maxLineBreaksToPreserve))).filter(Boolean));}case"MustacheCommentStatement":{var dashes=n.value.includes("}}")?"--":"";return concat$7(["{{!",dashes,n.value,dashes,"}}"]);}case"PathExpression":{return n.original;}case"BooleanLiteral":{return String(n.value);}case"CommentStatement":{return concat$7(["\x3c!--",n.value,"--\x3e"]);}case"StringLiteral":{return printStringLiteral(n.value,options);}case"NumberLiteral":{return String(n.value);}case"UndefinedLiteral":{return"undefined";}case"NullLiteral":{return"null";}/* istanbul ignore next */default:throw new Error("unknown glimmer type: "+JSON.stringify(n.type));}}function printChildren(path,options,print){return concat$7(path.map(function(childPath,childIndex){var childNode=path.getValue();var isFirstNode=childIndex===0;var isLastNode=childIndex===path.getParentNode(0).children.length-1;var isLastNodeInMultiNodeList=isLastNode&&!isFirstNode;var isWhitespace=isWhitespaceNode$1(childNode);if(isWhitespace&&isLastNodeInMultiNodeList){return print(childPath,options,print);}else if(isFirstNode){return concat$7([softline$3,print(childPath,options,print)]);}return print(childPath,options,print);},"children"));}/**\n   * Prints a string literal with the correct surrounding quotes based on\n   * `options.singleQuote` and the number of escaped quotes contained in\n   * the string literal. This function is the glimmer equivalent of `printString`\n   * in `common/util`, but has differences because of the way escaped characters\n   * are treated in hbs string literals.\n   * @param {string} stringLiteral - the string literal value\n   * @param {object} options - the prettier options object\n   */function printStringLiteral(stringLiteral,options){var double={quote:\'"\',regex:/"/g};var single={quote:"\'",regex:/\'/g};var preferred=options.singleQuote?single:double;var alternate=preferred===single?double:single;var shouldUseAlternateQuote=false;// If `stringLiteral` contains at least one of the quote preferred for\n// enclosing the string, we might want to enclose with the alternate quote\n// instead, to minimize the number of escaped quotes.\nif(stringLiteral.includes(preferred.quote)||stringLiteral.includes(alternate.quote)){var numPreferredQuotes=(stringLiteral.match(preferred.regex)||[]).length;var numAlternateQuotes=(stringLiteral.match(alternate.regex)||[]).length;shouldUseAlternateQuote=numPreferredQuotes>numAlternateQuotes;}var enclosingQuote=shouldUseAlternateQuote?alternate:preferred;var escapedStringLiteral=stringLiteral.replace(enclosingQuote.regex,"\\\\".concat(enclosingQuote.quote));return concat$7([enclosingQuote.quote,escapedStringLiteral,enclosingQuote.quote]);}function printPath(path,print){return path.call(print,"path");}function printParams(path,print){var node=path.getValue();var parts=[];if(node.params.length>0){parts=parts.concat(path.map(print,"params"));}if(node.hash&&node.hash.pairs.length>0){parts.push(path.call(print,"hash"));}return parts;}function printPathParams(path,print){var printedPath=printPath(path,print);var printedParams=printParams(path,print);var parts=[printedPath].concat((0,_toConsumableArray3.default)(printedParams));return indent$4(group$6(join$4(line$4,parts)));}function printBlockParams(path){var block=path.getValue();if(!block.program||!block.program.blockParams.length){return"";}return concat$7([" as |",block.program.blockParams.join(" "),"|"]);}function printOpenBlock(path,print){var _ref26=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref26$open=_ref26.open,isOpenStrip=_ref26$open===void 0?false:_ref26$open,_ref26$close=_ref26.close,isCloseStrip=_ref26$close===void 0?false:_ref26$close;return group$6(concat$7([isOpenStrip?"{{~#":"{{#",printPathParams(path,print),printBlockParams(path),softline$3,isCloseStrip?"~}}":"}}"]));}function printCloseBlock(path,print){var _ref27=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{},_ref27$open=_ref27.open,isOpenStrip=_ref27$open===void 0?false:_ref27$open,_ref27$close=_ref27.close,isCloseStrip=_ref27$close===void 0?false:_ref27$close;return concat$7([isOpenStrip?"{{~/":"{{/",path.call(print,"path"),isCloseStrip?"~}}":"}}"]);}function countNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";return string.split("\\n").length-1;}function countLeadingNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";var newLines=(string.match(/^([^\\S\\r\\n]*[\\r\\n])+/g)||[])[0]||"";return countNewLines(newLines);}function countTrailingNewLines(string){/* istanbul ignore next */string=typeof string==="string"?string:"";var newLines=(string.match(/([\\r\\n][^\\S\\r\\n]*)+$/g)||[])[0]||"";return countNewLines(newLines);}function generateHardlines(){var number=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var max=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return new Array(Math.min(number,max)).fill(hardline$6);}/* istanbul ignore next\n     https://github.com/glimmerjs/glimmer-vm/blob/master/packages/%40glimmer/compiler/lib/location.ts#L5-L29\n  */function locationToOffset(source,line,column){var seenLines=0;var seenChars=0;// eslint-disable-next-line no-constant-condition\nwhile(true){if(seenChars===source.length){return null;}var nextLine=source.indexOf("\\n",seenChars);if(nextLine===-1){nextLine=source.length;}if(seenLines===line){if(seenChars+column>nextLine){return null;}return seenChars+column;}else if(nextLine===-1){return null;}seenLines+=1;seenChars=nextLine+1;}}var printerGlimmer={print:print,massageAstNode:clean$2};var name$6="Handlebars";var type$5="markup";var group$7="HTML";var aliases=["hbs","htmlbars"];var extensions$5=[".handlebars",".hbs"];var tmScope$5="text.html.handlebars";var aceMode$5="handlebars";var languageId$5=155;var Handlebars={name:name$6,type:type$5,group:group$7,aliases:aliases,extensions:extensions$5,tmScope:tmScope$5,aceMode:aceMode$5,languageId:languageId$5};var Handlebars$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$6,type:type$5,group:group$7,aliases:aliases,extensions:extensions$5,tmScope:tmScope$5,aceMode:aceMode$5,languageId:languageId$5,\'default\':Handlebars});var require$$0$4=getCjsExportFromNamespace(Handlebars$1);var languages$2=[createLanguage(require$$0$4,function(){return{since:null,// unreleased\nparsers:["glimmer"],vscodeLanguageIds:["handlebars"]};})];var printers$2={glimmer:printerGlimmer};var languageHandlebars={languages:languages$2,printers:printers$2};var clean$3=function clean(ast,newNode){delete newNode.sourceSpan;delete newNode.startSourceSpan;delete newNode.endSourceSpan;delete newNode.nameSpan;delete newNode.valueSpan;if(ast.type==="text"||ast.type==="comment"){return null;}// may be formatted by multiparser\nif(ast.type==="yaml"||ast.type==="toml"){return null;}if(ast.type==="attribute"){delete newNode.value;}if(ast.type==="docType"){delete newNode.value;}};var json={"CSS_DISPLAY_TAGS":{"area":"none","base":"none","basefont":"none","datalist":"none","head":"none","link":"none","meta":"none","noembed":"none","noframes":"none","param":"none","rp":"none","script":"block","source":"block","style":"none","template":"inline","track":"block","title":"none","html":"block","body":"block","address":"block","blockquote":"block","center":"block","div":"block","figure":"block","figcaption":"block","footer":"block","form":"block","header":"block","hr":"block","legend":"block","listing":"block","main":"block","p":"block","plaintext":"block","pre":"block","xmp":"block","slot":"contents","ruby":"ruby","rt":"ruby-text","article":"block","aside":"block","h1":"block","h2":"block","h3":"block","h4":"block","h5":"block","h6":"block","hgroup":"block","nav":"block","section":"block","dir":"block","dd":"block","dl":"block","dt":"block","ol":"block","ul":"block","li":"list-item","table":"table","caption":"table-caption","colgroup":"table-column-group","col":"table-column","thead":"table-header-group","tbody":"table-row-group","tfoot":"table-footer-group","tr":"table-row","td":"table-cell","th":"table-cell","fieldset":"block","button":"inline-block","video":"inline-block","audio":"inline-block"},"CSS_DISPLAY_DEFAULT":"inline","CSS_WHITE_SPACE_TAGS":{"listing":"pre","plaintext":"pre","pre":"pre","xmp":"pre","nobr":"nowrap","table":"initial","textarea":"pre-wrap"},"CSS_WHITE_SPACE_DEFAULT":"normal"};var index=["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"];var htmlTagNames=/*#__PURE__*/Object.freeze({__proto__:null,\'default\':index});var a=["accesskey","charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","tabindex","target","type"];var abbr=["title"];var applet=["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"];var area=["accesskey","alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","tabindex","target","type"];var audio=["autoplay","controls","crossorigin","loop","muted","preload","src"];var base=["href","target"];var basefont=["color","face","size"];var bdo=["dir"];var blockquote=["cite"];var body=["alink","background","bgcolor","link","text","vlink"];var br=["clear"];var button=["accesskey","autofocus","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","tabindex","type","value"];var canvas=["height","width"];var caption=["align"];var col=["align","char","charoff","span","valign","width"];var colgroup=["align","char","charoff","span","valign","width"];var data=["value"];var del=["cite","datetime"];var details=["open"];var dfn=["title"];var dialog=["open"];var dir=["compact"];var div=["align"];var dl=["compact"];var embed$1=["height","src","type","width"];var fieldset=["disabled","form","name"];var font=["color","face","size"];var form=["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"];var frame=["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"];var frameset=["cols","rows"];var h1=["align"];var h2=["align"];var h3=["align"];var h4=["align"];var h5=["align"];var h6=["align"];var head=["profile"];var hr=["align","noshade","size","width"];var html=["manifest","version"];var iframe=["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"];var img=["align","alt","border","crossorigin","decoding","height","hspace","ismap","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"];var input=["accept","accesskey","align","alt","autocomplete","autofocus","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","tabindex","title","type","usemap","value","width"];var ins=["cite","datetime"];var isindex=["prompt"];var label=["accesskey","for","form"];var legend=["accesskey","align"];var li=["type","value"];var link$3=["as","charset","color","crossorigin","href","hreflang","imagesizes","imagesrcset","integrity","media","nonce","referrerpolicy","rel","rev","sizes","target","title","type"];var map=["name"];var menu=["compact"];var meta=["charset","content","http-equiv","name","scheme"];var meter=["high","low","max","min","optimum","value"];var object=["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","tabindex","type","typemustmatch","usemap","vspace","width"];var ol=["compact","reversed","start","type"];var optgroup=["disabled","label"];var option=["disabled","label","selected","value"];var output=["for","form","name"];var p=["align"];var param=["name","type","value","valuetype"];var pre=["width"];var progress=["max","value"];var q=["cite"];var script=["async","charset","crossorigin","defer","integrity","language","nomodule","nonce","referrerpolicy","src","type"];var select=["autocomplete","autofocus","disabled","form","multiple","name","required","size","tabindex"];var slot=["name"];var source$1=["media","sizes","src","srcset","type"];var style=["media","nonce","title","type"];var table=["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"];var tbody=["align","char","charoff","valign"];var td=["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"];var textarea=["accesskey","autocomplete","autofocus","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","tabindex","wrap"];var tfoot=["align","char","charoff","valign"];var th=["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"];var thead=["align","char","charoff","valign"];var time=["datetime"];var tr=["align","bgcolor","char","charoff","valign"];var track=["default","kind","label","src","srclang"];var ul=["compact","type"];var video=["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"];var index$1={"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:a,abbr:abbr,applet:applet,area:area,audio:audio,base:base,basefont:basefont,bdo:bdo,blockquote:blockquote,body:body,br:br,button:button,canvas:canvas,caption:caption,col:col,colgroup:colgroup,data:data,del:del,details:details,dfn:dfn,dialog:dialog,dir:dir,div:div,dl:dl,embed:embed$1,fieldset:fieldset,font:font,form:form,frame:frame,frameset:frameset,h1:h1,h2:h2,h3:h3,h4:h4,h5:h5,h6:h6,head:head,hr:hr,html:html,iframe:iframe,img:img,input:input,ins:ins,isindex:isindex,label:label,legend:legend,li:li,link:link$3,map:map,menu:menu,meta:meta,meter:meter,object:object,ol:ol,optgroup:optgroup,option:option,output:output,p:p,param:param,pre:pre,progress:progress,q:q,script:script,select:select,slot:slot,source:source$1,style:style,table:table,tbody:tbody,td:td,textarea:textarea,tfoot:tfoot,th:th,thead:thead,time:time,tr:tr,track:track,ul:ul,video:video};var htmlElementAttributes=/*#__PURE__*/Object.freeze({__proto__:null,a:a,abbr:abbr,applet:applet,area:area,audio:audio,base:base,basefont:basefont,bdo:bdo,blockquote:blockquote,body:body,br:br,button:button,canvas:canvas,caption:caption,col:col,colgroup:colgroup,data:data,del:del,details:details,dfn:dfn,dialog:dialog,dir:dir,div:div,dl:dl,embed:embed$1,fieldset:fieldset,font:font,form:form,frame:frame,frameset:frameset,h1:h1,h2:h2,h3:h3,h4:h4,h5:h5,h6:h6,head:head,hr:hr,html:html,iframe:iframe,img:img,input:input,ins:ins,isindex:isindex,label:label,legend:legend,li:li,link:link$3,map:map,menu:menu,meta:meta,meter:meter,object:object,ol:ol,optgroup:optgroup,option:option,output:output,p:p,param:param,pre:pre,progress:progress,q:q,script:script,select:select,slot:slot,source:source$1,style:style,table:table,tbody:tbody,td:td,textarea:textarea,tfoot:tfoot,th:th,thead:thead,time:time,tr:tr,track:track,ul:ul,video:video,\'default\':index$1});var htmlTagNames$1=getCjsExportFromNamespace(htmlTagNames);var htmlElementAttributes$1=getCjsExportFromNamespace(htmlElementAttributes);var CSS_DISPLAY_TAGS=json.CSS_DISPLAY_TAGS,CSS_DISPLAY_DEFAULT=json.CSS_DISPLAY_DEFAULT,CSS_WHITE_SPACE_TAGS=json.CSS_WHITE_SPACE_TAGS,CSS_WHITE_SPACE_DEFAULT=json.CSS_WHITE_SPACE_DEFAULT;var HTML_TAGS=arrayToMap(htmlTagNames$1);var HTML_ELEMENT_ATTRIBUTES=mapObject(htmlElementAttributes$1,arrayToMap);function arrayToMap(array){var map=Object.create(null);var _iterator34=_createForOfIteratorHelper(array),_step34;try{for(_iterator34.s();!(_step34=_iterator34.n()).done;){var value=_step34.value;map[value]=true;}}catch(err){_iterator34.e(err);}finally{_iterator34.f();}return map;}function mapObject(object,fn){var newObject=Object.create(null);for(var _i40=0,_Object$keys22=Object.keys(object);_i40<_Object$keys22.length;_i40++){var _key19=_Object$keys22[_i40];newObject[_key19]=fn(object[_key19],_key19);}return newObject;}function shouldPreserveContent(node,options){if(!node.endSourceSpan){return false;}if(node.type==="element"&&node.fullName==="template"&&node.attrMap.lang&&node.attrMap.lang!=="html"){return true;}// unterminated node in ie conditional comment\n// e.g. \x3c!--[if lt IE 9]><html><![endif]--\x3e\nif(node.type==="ieConditionalComment"&&node.lastChild&&!node.lastChild.isSelfClosing&&!node.lastChild.endSourceSpan){return true;}// incomplete html in ie conditional comment\n// e.g. \x3c!--[if lt IE 9]></div><![endif]--\x3e\nif(node.type==="ieConditionalComment"&&!node.complete){return true;}// top-level elements (excluding <template>, <style> and <script>) in Vue SFC are considered custom block\n// custom blocks can be written in other languages so we should preserve them to not break the code\nif(options.parser==="vue"&&node.type==="element"&&node.parent.type==="root"&&!["template","style","script",// vue parser can be used for vue dom template as well, so we should still format top-level <html>\n"html"].includes(node.fullName)){return true;}// TODO: handle non-text children in <pre>\nif(isPreLikeNode(node)&&node.children.some(function(child){return child.type!=="text"&&child.type!=="interpolation";})){return true;}return false;}function hasPrettierIgnore$2(node){if(node.type==="attribute"){return false;}if(!node.parent){return false;}if(typeof node.index!=="number"||node.index===0){return false;}var prevNode=node.parent.children[node.index-1];return isPrettierIgnore(prevNode);}function isPrettierIgnore(node){return node.type==="comment"&&node.value.trim()==="prettier-ignore";}function getPrettierIgnoreAttributeCommentData(value){var match=value.trim().match(/^prettier-ignore-attribute(?:\\s+([^]+))?$/);if(!match){return false;}if(!match[1]){return true;}return match[1].split(/\\s+/);}/** there\'s no opening/closing tag or it\'s considered not breakable */function isTextLikeNode(node){return node.type==="text"||node.type==="comment";}function isScriptLikeTag(node){return node.type==="element"&&(node.fullName==="script"||node.fullName==="style"||node.fullName==="svg:style"||isUnknownNamespace(node)&&(node.name==="script"||node.name==="style"));}function isFrontMatterNode(node){return node.type==="yaml"||node.type==="toml";}function canHaveInterpolation(node){return node.children&&!isScriptLikeTag(node);}function isWhitespaceSensitiveNode(node){return isScriptLikeTag(node)||node.type==="interpolation"||isIndentationSensitiveNode(node);}function isIndentationSensitiveNode(node){return getNodeCssStyleWhiteSpace(node).startsWith("pre");}function isLeadingSpaceSensitiveNode(node){var isLeadingSpaceSensitive=_isLeadingSpaceSensitiveNode();if(isLeadingSpaceSensitive&&!node.prev&&node.parent&&node.parent.tagDefinition&&node.parent.tagDefinition.ignoreFirstLf){return node.type==="interpolation";}return isLeadingSpaceSensitive;function _isLeadingSpaceSensitiveNode(){if(isFrontMatterNode(node)){return false;}if((node.type==="text"||node.type==="interpolation")&&node.prev&&(node.prev.type==="text"||node.prev.type==="interpolation")){return true;}if(!node.parent||node.parent.cssDisplay==="none"){return false;}if(isPreLikeNode(node.parent)){return true;}if(!node.prev&&(node.parent.type==="root"||isPreLikeNode(node)&&node.parent||isScriptLikeTag(node.parent)||!isFirstChildLeadingSpaceSensitiveCssDisplay(node.parent.cssDisplay))){return false;}if(node.prev&&!isNextLeadingSpaceSensitiveCssDisplay(node.prev.cssDisplay)){return false;}return true;}}function isTrailingSpaceSensitiveNode(node){if(isFrontMatterNode(node)){return false;}if((node.type==="text"||node.type==="interpolation")&&node.next&&(node.next.type==="text"||node.next.type==="interpolation")){return true;}if(!node.parent||node.parent.cssDisplay==="none"){return false;}if(isPreLikeNode(node.parent)){return true;}if(!node.next&&(node.parent.type==="root"||isPreLikeNode(node)&&node.parent||isScriptLikeTag(node.parent)||!isLastChildTrailingSpaceSensitiveCssDisplay(node.parent.cssDisplay))){return false;}if(node.next&&!isPrevTrailingSpaceSensitiveCssDisplay(node.next.cssDisplay)){return false;}return true;}function isDanglingSpaceSensitiveNode(node){return isDanglingSpaceSensitiveCssDisplay(node.cssDisplay)&&!isScriptLikeTag(node);}function forceNextEmptyLine(node){return isFrontMatterNode(node)||node.next&&node.sourceSpan.end.line+1<node.next.sourceSpan.start.line;}/** firstChild leadingSpaces and lastChild trailingSpaces */function forceBreakContent(node){return forceBreakChildren(node)||node.type==="element"&&node.children.length!==0&&(["body","script","style"].includes(node.name)||node.children.some(function(child){return hasNonTextChild(child);}))||node.firstChild&&node.firstChild===node.lastChild&&hasLeadingLineBreak(node.firstChild)&&(!node.lastChild.isTrailingSpaceSensitive||hasTrailingLineBreak(node.lastChild));}/** spaces between children */function forceBreakChildren(node){return node.type==="element"&&node.children.length!==0&&(["html","head","ul","ol","select"].includes(node.name)||node.cssDisplay.startsWith("table")&&node.cssDisplay!=="table-cell");}function preferHardlineAsLeadingSpaces(node){return preferHardlineAsSurroundingSpaces(node)||node.prev&&preferHardlineAsTrailingSpaces(node.prev)||hasSurroundingLineBreak(node);}function preferHardlineAsTrailingSpaces(node){return preferHardlineAsSurroundingSpaces(node)||node.type==="element"&&node.fullName==="br"||hasSurroundingLineBreak(node);}function hasSurroundingLineBreak(node){return hasLeadingLineBreak(node)&&hasTrailingLineBreak(node);}function hasLeadingLineBreak(node){return node.hasLeadingSpaces&&(node.prev?node.prev.sourceSpan.end.line<node.sourceSpan.start.line:node.parent.type==="root"||node.parent.startSourceSpan.end.line<node.sourceSpan.start.line);}function hasTrailingLineBreak(node){return node.hasTrailingSpaces&&(node.next?node.next.sourceSpan.start.line>node.sourceSpan.end.line:node.parent.type==="root"||node.parent.endSourceSpan&&node.parent.endSourceSpan.start.line>node.sourceSpan.end.line);}function preferHardlineAsSurroundingSpaces(node){switch(node.type){case"ieConditionalComment":case"comment":case"directive":return true;case"element":return["script","select"].includes(node.name);}return false;}function getLastDescendant(node){return node.lastChild?getLastDescendant(node.lastChild):node;}function hasNonTextChild(node){return node.children&&node.children.some(function(child){return child.type!=="text";});}function inferScriptParser(node){if(node.name==="script"&&!node.attrMap.src){if(!node.attrMap.lang&&!node.attrMap.type||node.attrMap.type==="module"||node.attrMap.type==="text/javascript"||node.attrMap.type==="text/babel"||node.attrMap.type==="application/javascript"||node.attrMap.lang==="jsx"){return"babel";}if(node.attrMap.type==="application/x-typescript"||node.attrMap.lang==="ts"||node.attrMap.lang==="tsx"){return"typescript";}if(node.attrMap.type==="text/markdown"){return"markdown";}if(node.attrMap.type.endsWith("json")||node.attrMap.type.endsWith("importmap")){return"json";}if(node.attrMap.type==="text/x-handlebars-template"){return"glimmer";}}if(node.name==="style"){if(!node.attrMap.lang||node.attrMap.lang==="postcss"||node.attrMap.lang==="css"){return"css";}if(node.attrMap.lang==="scss"){return"scss";}if(node.attrMap.lang==="less"){return"less";}}return null;}function isBlockLikeCssDisplay(cssDisplay){return cssDisplay==="block"||cssDisplay==="list-item"||cssDisplay.startsWith("table");}function isFirstChildLeadingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isLastChildTrailingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isPrevTrailingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay);}function isNextLeadingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay);}function isDanglingSpaceSensitiveCssDisplay(cssDisplay){return!isBlockLikeCssDisplay(cssDisplay)&&cssDisplay!=="inline-block";}function isPreLikeNode(node){return getNodeCssStyleWhiteSpace(node).startsWith("pre");}function countParents(path){var predicate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return true;};var counter=0;for(var i=path.stack.length-1;i>=0;i--){var value=path.stack[i];if(value&&(0,_typeof3.default)(value)==="object"&&!Array.isArray(value)&&predicate(value)){counter++;}}return counter;}function hasParent(node,fn){var current=node;while(current){if(fn(current)){return true;}current=current.parent;}return false;}function getNodeCssStyleDisplay(node,options){if(node.prev&&node.prev.type==="comment"){// \x3c!-- display: block --\x3e\nvar match=node.prev.value.match(/^\\s*display:\\s*([a-z]+)\\s*$/);if(match){return match[1];}}var isInSvgForeignObject=false;if(node.type==="element"&&node.namespace==="svg"){if(hasParent(node,function(parent){return parent.fullName==="svg:foreignObject";})){isInSvgForeignObject=true;}else{return node.name==="svg"?"inline-block":"block";}}switch(options.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return node.type==="element"&&(!node.namespace||isInSvgForeignObject||isUnknownNamespace(node))&&CSS_DISPLAY_TAGS[node.name]||CSS_DISPLAY_DEFAULT;}}function isUnknownNamespace(node){return node.type==="element"&&!node.hasExplicitNamespace&&!["html","svg"].includes(node.namespace);}function getNodeCssStyleWhiteSpace(node){return node.type==="element"&&(!node.namespace||isUnknownNamespace(node))&&CSS_WHITE_SPACE_TAGS[node.name]||CSS_WHITE_SPACE_DEFAULT;}function getMinIndentation(text){var minIndentation=Infinity;var _iterator35=_createForOfIteratorHelper(text.split("\\n")),_step35;try{for(_iterator35.s();!(_step35=_iterator35.n()).done;){var lineText=_step35.value;if(lineText.length===0){continue;}if(/\\S/.test(lineText[0])){return 0;}var indentation=lineText.match(/^\\s*/)[0].length;if(lineText.length===indentation){continue;}if(indentation<minIndentation){minIndentation=indentation;}}}catch(err){_iterator35.e(err);}finally{_iterator35.f();}return minIndentation===Infinity?0:minIndentation;}function dedentString(text){var minIndent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:getMinIndentation(text);return minIndent===0?text:text.split("\\n").map(function(lineText){return lineText.slice(minIndent);}).join("\\n");}function normalizeParts(parts){var newParts=[];var restParts=parts.slice();while(restParts.length!==0){var part=restParts.shift();if(!part){continue;}if(part.type==="concat"){restParts.unshift.apply(restParts,(0,_toConsumableArray3.default)(part.parts));continue;}if(newParts.length!==0&&typeof newParts[newParts.length-1]==="string"&&typeof part==="string"){newParts.push(newParts.pop()+part);continue;}newParts.push(part);}return newParts;}function identity(x){return x;}function shouldNotPrintClosingTag(node,options){return!node.isSelfClosing&&!node.endSourceSpan&&(hasPrettierIgnore$2(node)||shouldPreserveContent(node.parent,options));}function countChars(text,char){var counter=0;for(var i=0;i<text.length;i++){if(text[i]===char){counter++;}}return counter;}function unescapeQuoteEntities(text){return text.replace(/&apos;/g,"\'").replace(/&quot;/g,\'"\');}var utils$4={HTML_ELEMENT_ATTRIBUTES:HTML_ELEMENT_ATTRIBUTES,HTML_TAGS:HTML_TAGS,canHaveInterpolation:canHaveInterpolation,countChars:countChars,countParents:countParents,dedentString:dedentString,forceBreakChildren:forceBreakChildren,forceBreakContent:forceBreakContent,forceNextEmptyLine:forceNextEmptyLine,getLastDescendant:getLastDescendant,getNodeCssStyleDisplay:getNodeCssStyleDisplay,getNodeCssStyleWhiteSpace:getNodeCssStyleWhiteSpace,getPrettierIgnoreAttributeCommentData:getPrettierIgnoreAttributeCommentData,hasPrettierIgnore:hasPrettierIgnore$2,identity:identity,inferScriptParser:inferScriptParser,isDanglingSpaceSensitiveNode:isDanglingSpaceSensitiveNode,isFrontMatterNode:isFrontMatterNode,isIndentationSensitiveNode:isIndentationSensitiveNode,isLeadingSpaceSensitiveNode:isLeadingSpaceSensitiveNode,isPreLikeNode:isPreLikeNode,isScriptLikeTag:isScriptLikeTag,isTextLikeNode:isTextLikeNode,isTrailingSpaceSensitiveNode:isTrailingSpaceSensitiveNode,isWhitespaceSensitiveNode:isWhitespaceSensitiveNode,isUnknownNamespace:isUnknownNamespace,normalizeParts:normalizeParts,preferHardlineAsLeadingSpaces:preferHardlineAsLeadingSpaces,preferHardlineAsTrailingSpaces:preferHardlineAsTrailingSpaces,shouldNotPrintClosingTag:shouldNotPrintClosingTag,shouldPreserveContent:shouldPreserveContent,unescapeQuoteEntities:unescapeQuoteEntities};var canHaveInterpolation$1=utils$4.canHaveInterpolation,getNodeCssStyleDisplay$1=utils$4.getNodeCssStyleDisplay,isDanglingSpaceSensitiveNode$1=utils$4.isDanglingSpaceSensitiveNode,isIndentationSensitiveNode$1=utils$4.isIndentationSensitiveNode,isLeadingSpaceSensitiveNode$1=utils$4.isLeadingSpaceSensitiveNode,isTrailingSpaceSensitiveNode$1=utils$4.isTrailingSpaceSensitiveNode,isWhitespaceSensitiveNode$1=utils$4.isWhitespaceSensitiveNode;var PREPROCESS_PIPELINE=[removeIgnorableFirstLf,mergeIeConditonalStartEndCommentIntoElementOpeningTag,mergeCdataIntoText,extractInterpolation,extractWhitespaces,addCssDisplay,addIsSelfClosing,addHasHtmComponentClosingTag,addIsSpaceSensitive,mergeSimpleElementIntoText];function preprocess(ast,options){var _iterator36=_createForOfIteratorHelper(PREPROCESS_PIPELINE),_step36;try{for(_iterator36.s();!(_step36=_iterator36.n()).done;){var fn=_step36.value;ast=fn(ast,options);}}catch(err){_iterator36.e(err);}finally{_iterator36.f();}return ast;}function removeIgnorableFirstLf(ast/*, options */){return ast.map(function(node){if(node.type==="element"&&node.tagDefinition.ignoreFirstLf&&node.children.length!==0&&node.children[0].type==="text"&&node.children[0].value[0]==="\\n"){var _node$children=(0,_toArray2.default)(node.children),text=_node$children[0],rest=_node$children.slice(1);return node.clone({children:text.value.length===1?rest:[text.clone({value:text.value.slice(1)})].concat((0,_toConsumableArray3.default)(rest))});}return node;});}function mergeIeConditonalStartEndCommentIntoElementOpeningTag(ast/*, options */){/**\n     *     \x3c!--[if ...]>\x3c!--\x3e<target>\x3c!--<![endif]--\x3e\n     */var isTarget=function isTarget(node){return node.type==="element"&&node.prev&&node.prev.type==="ieConditionalStartComment"&&node.prev.sourceSpan.end.offset===node.startSourceSpan.start.offset&&node.firstChild&&node.firstChild.type==="ieConditionalEndComment"&&node.firstChild.sourceSpan.start.offset===node.startSourceSpan.end.offset;};return ast.map(function(node){if(node.children){var isTargetResults=node.children.map(isTarget);if(isTargetResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(isTargetResults[i+1]){// ieConditionalStartComment\ncontinue;}if(isTargetResults[i]){var ieConditionalStartComment=child.prev;var ieConditionalEndComment=child.firstChild;var ParseSourceSpan=child.sourceSpan.constructor;var startSourceSpan=new ParseSourceSpan(ieConditionalStartComment.sourceSpan.start,ieConditionalEndComment.sourceSpan.end);var sourceSpan=new ParseSourceSpan(startSourceSpan.start,child.sourceSpan.end);newChildren.push(child.clone({condition:ieConditionalStartComment.condition,sourceSpan:sourceSpan,startSourceSpan:startSourceSpan,children:child.children.slice(1)}));continue;}newChildren.push(child);}return node.clone({children:newChildren});}}return node;});}function mergeNodeIntoText(ast,shouldMerge,getValue){return ast.map(function(node){if(node.children){var shouldMergeResults=node.children.map(shouldMerge);if(shouldMergeResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(child.type!=="text"&&!shouldMergeResults[i]){newChildren.push(child);continue;}var newChild=child.type==="text"?child:child.clone({type:"text",value:getValue(child)});if(newChildren.length===0||newChildren[newChildren.length-1].type!=="text"){newChildren.push(newChild);continue;}var lastChild=newChildren.pop();var ParseSourceSpan=lastChild.sourceSpan.constructor;newChildren.push(lastChild.clone({value:lastChild.value+newChild.value,sourceSpan:new ParseSourceSpan(lastChild.sourceSpan.start,newChild.sourceSpan.end)}));}return node.clone({children:newChildren});}}return node;});}function mergeCdataIntoText(ast/*, options */){return mergeNodeIntoText(ast,function(node){return node.type==="cdata";},function(node){return"<![CDATA[".concat(node.value,"]]>");});}function mergeSimpleElementIntoText(ast/*, options */){var isSimpleElement=function isSimpleElement(node){return node.type==="element"&&node.attrs.length===0&&node.children.length===1&&node.firstChild.type==="text"&&// \\xA0: non-breaking whitespace\n!/[^\\S\\xA0]/.test(node.children[0].value)&&!node.firstChild.hasLeadingSpaces&&!node.firstChild.hasTrailingSpaces&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces&&node.isTrailingSpaceSensitive&&!node.hasTrailingSpaces&&node.prev&&node.prev.type==="text"&&node.next&&node.next.type==="text";};return ast.map(function(node){if(node.children){var isSimpleElementResults=node.children.map(isSimpleElement);if(isSimpleElementResults.some(Boolean)){var newChildren=[];for(var i=0;i<node.children.length;i++){var child=node.children[i];if(isSimpleElementResults[i]){var lastChild=newChildren.pop();var nextChild=node.children[++i];var ParseSourceSpan=node.sourceSpan.constructor;var isTrailingSpaceSensitive=nextChild.isTrailingSpaceSensitive,hasTrailingSpaces=nextChild.hasTrailingSpaces;newChildren.push(lastChild.clone({value:lastChild.value+"<".concat(child.rawName,">")+child.firstChild.value+"</".concat(child.rawName,">")+nextChild.value,sourceSpan:new ParseSourceSpan(lastChild.sourceSpan.start,nextChild.sourceSpan.end),isTrailingSpaceSensitive:isTrailingSpaceSensitive,hasTrailingSpaces:hasTrailingSpaces}));}else{newChildren.push(child);}}return node.clone({children:newChildren});}}return node;});}function extractInterpolation(ast,options){if(options.parser==="html"){return ast;}var interpolationRegex=/\\{\\{([\\s\\S]+?)\\}\\}/g;return ast.map(function(node){if(!canHaveInterpolation$1(node)){return node;}var newChildren=[];var _iterator37=_createForOfIteratorHelper(node.children),_step37;try{for(_iterator37.s();!(_step37=_iterator37.n()).done;){var child=_step37.value;if(child.type!=="text"){newChildren.push(child);continue;}var ParseSourceSpan=child.sourceSpan.constructor;var startSourceSpan=child.sourceSpan.start;var endSourceSpan=null;var components=child.value.split(interpolationRegex);for(var i=0;i<components.length;i++,startSourceSpan=endSourceSpan){var value=components[i];if(i%2===0){endSourceSpan=startSourceSpan.moveBy(value.length);if(value.length!==0){newChildren.push({type:"text",value:value,sourceSpan:new ParseSourceSpan(startSourceSpan,endSourceSpan)});}continue;}endSourceSpan=startSourceSpan.moveBy(value.length+4);// `{{` + `}}`\nnewChildren.push({type:"interpolation",sourceSpan:new ParseSourceSpan(startSourceSpan,endSourceSpan),children:value.length===0?[]:[{type:"text",value:value,sourceSpan:new ParseSourceSpan(startSourceSpan.moveBy(2),endSourceSpan.moveBy(-2))}]});}}}catch(err){_iterator37.e(err);}finally{_iterator37.f();}return node.clone({children:newChildren});});}/**\n   * - add `hasLeadingSpaces` field\n   * - add `hasTrailingSpaces` field\n   * - add `hasDanglingSpaces` field for parent nodes\n   * - add `isWhitespaceSensitive`, `isIndentationSensitive` field for text nodes\n   * - remove insensitive whitespaces\n   */function extractWhitespaces(ast/*, options*/){var TYPE_WHITESPACE="whitespace";return ast.map(function(node){if(!node.children){return node;}if(node.children.length===0||node.children.length===1&&node.children[0].type==="text"&&node.children[0].value.trim().length===0){return node.clone({children:[],hasDanglingSpaces:node.children.length!==0});}var isWhitespaceSensitive=isWhitespaceSensitiveNode$1(node);var isIndentationSensitive=isIndentationSensitiveNode$1(node);return node.clone({isWhitespaceSensitive:isWhitespaceSensitive,isIndentationSensitive:isIndentationSensitive,children:node.children// extract whitespace nodes\n.reduce(function(newChildren,child){if(child.type!=="text"||isWhitespaceSensitive){return newChildren.concat(child);}var localChildren=[];var _child$value$match=child.value.match(/^(\\s*)([\\s\\S]*?)(\\s*)$/),_child$value$match2=(0,_slicedToArray2.default)(_child$value$match,4),leadingSpaces=_child$value$match2[1],text=_child$value$match2[2],trailingSpaces=_child$value$match2[3];if(leadingSpaces){localChildren.push({type:TYPE_WHITESPACE});}var ParseSourceSpan=child.sourceSpan.constructor;if(text){localChildren.push({type:"text",value:text,sourceSpan:new ParseSourceSpan(child.sourceSpan.start.moveBy(leadingSpaces.length),child.sourceSpan.end.moveBy(-trailingSpaces.length))});}if(trailingSpaces){localChildren.push({type:TYPE_WHITESPACE});}return newChildren.concat(localChildren);},[])// set hasLeadingSpaces/hasTrailingSpaces and filter whitespace nodes\n.reduce(function(newChildren,child,i,children){if(child.type===TYPE_WHITESPACE){return newChildren;}var hasLeadingSpaces=i!==0&&children[i-1].type===TYPE_WHITESPACE;var hasTrailingSpaces=i!==children.length-1&&children[i+1].type===TYPE_WHITESPACE;return newChildren.concat(Object.assign({},child,{hasLeadingSpaces:hasLeadingSpaces,hasTrailingSpaces:hasTrailingSpaces}));},[])});});}function addIsSelfClosing(ast/*, options */){return ast.map(function(node){return Object.assign(node,{isSelfClosing:!node.children||node.type==="element"&&(node.tagDefinition.isVoid||// self-closing\nnode.startSourceSpan===node.endSourceSpan)});});}function addHasHtmComponentClosingTag(ast,options){return ast.map(function(node){return node.type!=="element"?node:Object.assign(node,{hasHtmComponentClosingTag:node.endSourceSpan&&/^<\\s*\\/\\s*\\/\\s*>$/.test(options.originalText.slice(node.endSourceSpan.start.offset,node.endSourceSpan.end.offset))});});}function addCssDisplay(ast,options){return ast.map(function(node){return Object.assign(node,{cssDisplay:getNodeCssStyleDisplay$1(node,options)});});}/**\n   * - add `isLeadingSpaceSensitive` field\n   * - add `isTrailingSpaceSensitive` field\n   * - add `isDanglingSpaceSensitive` field for parent nodes\n   */function addIsSpaceSensitive(ast/*, options */){return ast.map(function(node){if(!node.children){return node;}if(node.children.length===0){return node.clone({isDanglingSpaceSensitive:isDanglingSpaceSensitiveNode$1(node)});}return node.clone({children:node.children.map(function(child){return Object.assign({},child,{isLeadingSpaceSensitive:isLeadingSpaceSensitiveNode$1(child),isTrailingSpaceSensitive:isTrailingSpaceSensitiveNode$1(child)});}).map(function(child,index,children){return Object.assign({},child,{isLeadingSpaceSensitive:index===0?child.isLeadingSpaceSensitive:children[index-1].isTrailingSpaceSensitive&&child.isLeadingSpaceSensitive,isTrailingSpaceSensitive:index===children.length-1?child.isTrailingSpaceSensitive:children[index+1].isLeadingSpaceSensitive&&child.isTrailingSpaceSensitive});})});});}var preprocess_1=preprocess;function hasPragma$3(text){return /^\\s*\x3c!--\\s*@(format|prettier)\\s*--\x3e/.test(text);}function insertPragma$5(text){return"\x3c!-- @format --\x3e\\n\\n"+text.replace(/^\\s*\\n/,"");}var pragma$3={hasPragma:hasPragma$3,insertPragma:insertPragma$5};var _document$builders6=document.builders,concat$8=_document$builders6.concat,group$8=_document$builders6.group;/**\n   *     v-for="... in ..."\n   *     v-for="... of ..."\n   *     v-for="(..., ...) in ..."\n   *     v-for="(..., ...) of ..."\n   */function printVueFor(value,textToDoc){var _parseVueFor=parseVueFor(value),left=_parseVueFor.left,operator=_parseVueFor.operator,right=_parseVueFor.right;return concat$8([group$8(textToDoc("function _(".concat(left,") {}"),{parser:"babel",__isVueForBindingLeft:true}))," ",operator," ",textToDoc(right,{parser:"__js_expression"})]);}// modified from https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/parser/index.js#L370-L387\nfunction parseVueFor(value){var forAliasRE=/([^]*?)\\s+(in|of)\\s+([^]*)/;var forIteratorRE=/,([^,}\\]]*)(?:,([^,}\\]]*))?$/;var stripParensRE=/^\\(|\\)$/g;var inMatch=value.match(forAliasRE);if(!inMatch){return;}var res={};res.for=inMatch[3].trim();var alias=inMatch[1].trim().replace(stripParensRE,"");var iteratorMatch=alias.match(forIteratorRE);if(iteratorMatch){res.alias=alias.replace(forIteratorRE,"");res.iterator1=iteratorMatch[1].trim();if(iteratorMatch[2]){res.iterator2=iteratorMatch[2].trim();}}else{res.alias=alias;}return{left:"".concat([res.alias,res.iterator1,res.iterator2].filter(Boolean).join(",")),operator:inMatch[2],right:res.for};}function printVueSlotScope(value,textToDoc){return textToDoc("function _(".concat(value,") {}"),{parser:"babel",__isVueSlotScope:true});}function isVueEventBindingExpression(eventBindingValue){// https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/codegen/events.js#L3-L4\n// arrow function or anonymous function\nvar fnExpRE=/^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;// simple member expression chain (a, a.b, a[\'b\'], a["b"], a[0], a[b])\nvar simplePathRE=/^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\[\'[^\']*?\']|\\["[^"]*?"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;// https://github.com/vuejs/vue/blob/v2.5.17/src/compiler/helpers.js#L104\nvar value=eventBindingValue.trim();return fnExpRE.test(value)||simplePathRE.test(value);}var syntaxVue={isVueEventBindingExpression:isVueEventBindingExpression,printVueFor:printVueFor,printVueSlotScope:printVueSlotScope};var integerRegex=/^\\d+$/;function deepUnique(array){return array.sort().filter(function(element,index){return JSON.stringify(element)!==JSON.stringify(array[index-1]);});}var parse$2=function parse$2(string){return deepUnique(string.split(\',\').map(function(part){var result={};part.trim().split(/\\s+/).forEach(function(element,index){if(index===0){result.url=element;return;}var value=element.slice(0,element.length-1);var postfix=element[element.length-1];var integerValue=parseInt(value,10);var floatValue=parseFloat(value);if(postfix===\'w\'&&integerRegex.test(value)){result.width=integerValue;}else if(postfix===\'h\'&&integerRegex.test(value)){result.height=integerValue;}else if(postfix===\'x\'&&!Number.isNaN(floatValue)){result.density=floatValue;}else{throw new Error("Invalid srcset descriptor: ".concat(element));}});return result;}));};var stringify=function stringify(array){return(0,_toConsumableArray3.default)(new Set(array.map(function(element){if(!element.url){throw new Error(\'URL is required\');}var result=[element.url];if(element.width){result.push("".concat(element.width,"w"));}if(element.height){result.push("".concat(element.height,"h"));}if(element.density){result.push("".concat(element.density,"x"));}return result.join(\' \');}))).join(\', \');};var srcset={parse:parse$2,stringify:stringify};var _document$builders7=document.builders,concat$9=_document$builders7.concat,ifBreak$4=_document$builders7.ifBreak,join$5=_document$builders7.join,line$5=_document$builders7.line;var parseSrcset=srcset.parse;function printImgSrcset(value){var srcset=parseSrcset(value);var hasW=srcset.some(function(src){return src.width;});var hasH=srcset.some(function(src){return src.height;});var hasX=srcset.some(function(src){return src.density;});if(hasW+hasH+hasX>1){throw new Error("Mixed descriptor in srcset is not supported");}var key=hasW?"width":hasH?"height":"density";var unit=hasW?"w":hasH?"h":"x";var getMax=function getMax(values){return Math.max.apply(Math,(0,_toConsumableArray3.default)(values));};var urls=srcset.map(function(src){return src.url;});var maxUrlLength=getMax(urls.map(function(url){return url.length;}));var descriptors=srcset.map(function(src){return src[key];}).map(function(descriptor){return descriptor?descriptor.toString():"";});var descriptorLeftLengths=descriptors.map(function(descriptor){var index=descriptor.indexOf(".");return index===-1?descriptor.length:index;});var maxDescriptorLeftLength=getMax(descriptorLeftLengths);return join$5(concat$9([",",line$5]),urls.map(function(url,index){var parts=[url];var descriptor=descriptors[index];if(descriptor){var urlPadding=maxUrlLength-url.length+1;var descriptorPadding=maxDescriptorLeftLength-descriptorLeftLengths[index];var alignment=" ".repeat(urlPadding+descriptorPadding);parts.push(ifBreak$4(alignment," "),descriptor+unit);}return concat$9(parts);}));}function printClassNames(value){return value.trim().split(/\\s+/).join(" ");}var syntaxAttribute={printImgSrcset:printImgSrcset,printClassNames:printClassNames};var builders=document.builders,_document$utils=document.utils,stripTrailingHardline$1=_document$utils.stripTrailingHardline,mapDoc$2=_document$utils.mapDoc;var breakParent$2=builders.breakParent,dedentToRoot$1=builders.dedentToRoot,fill$3=builders.fill,group$9=builders.group,hardline$7=builders.hardline,ifBreak$5=builders.ifBreak,indent$5=builders.indent,join$6=builders.join,line$6=builders.line,literalline$2=builders.literalline,markAsRoot$2=builders.markAsRoot,softline$4=builders.softline;var countChars$1=utils$4.countChars,countParents$1=utils$4.countParents,dedentString$1=utils$4.dedentString,forceBreakChildren$1=utils$4.forceBreakChildren,forceBreakContent$1=utils$4.forceBreakContent,forceNextEmptyLine$1=utils$4.forceNextEmptyLine,getLastDescendant$1=utils$4.getLastDescendant,getPrettierIgnoreAttributeCommentData$1=utils$4.getPrettierIgnoreAttributeCommentData,hasPrettierIgnore$3=utils$4.hasPrettierIgnore,inferScriptParser$1=utils$4.inferScriptParser,isScriptLikeTag$1=utils$4.isScriptLikeTag,isTextLikeNode$1=utils$4.isTextLikeNode,normalizeParts$1=utils$4.normalizeParts,preferHardlineAsLeadingSpaces$1=utils$4.preferHardlineAsLeadingSpaces,shouldNotPrintClosingTag$1=utils$4.shouldNotPrintClosingTag,shouldPreserveContent$1=utils$4.shouldPreserveContent,unescapeQuoteEntities$1=utils$4.unescapeQuoteEntities;var replaceEndOfLineWith$1=util$1.replaceEndOfLineWith;var insertPragma$6=pragma$3.insertPragma;var printVueFor$1=syntaxVue.printVueFor,printVueSlotScope$1=syntaxVue.printVueSlotScope,isVueEventBindingExpression$1=syntaxVue.isVueEventBindingExpression;var printImgSrcset$1=syntaxAttribute.printImgSrcset,printClassNames$1=syntaxAttribute.printClassNames;function concat$a(parts){var newParts=normalizeParts$1(parts);return newParts.length===0?"":newParts.length===1?newParts[0]:builders.concat(newParts);}function embed$2(path,print,textToDoc,options){var node=path.getValue();switch(node.type){case"text":{if(isScriptLikeTag$1(node.parent)){var _parser=inferScriptParser$1(node.parent);if(_parser){var value=_parser==="markdown"?dedentString$1(node.value.replace(/^[^\\S\\n]*?\\n/,"")):node.value;return builders.concat([concat$a([breakParent$2,printOpeningTagPrefix(node,options),stripTrailingHardline$1(textToDoc(value,{parser:_parser})),printClosingTagSuffix(node,options)])]);}}else if(node.parent.type==="interpolation"){return concat$a([indent$5(concat$a([line$6,textToDoc(node.value,Object.assign({__isInHtmlInterpolation:true},options.parser==="angular"?{parser:"__ng_interpolation",trailingComma:"none"}:options.parser==="vue"?{parser:"__vue_expression"}:{parser:"__js_expression"}))])),node.parent.next&&needsToBorrowPrevClosingTagEndMarker(node.parent.next)?" ":line$6]);}break;}case"attribute":{if(!node.value){break;}// lit-html: html`<my-element obj=${obj}></my-element>`\nif(/^PRETTIER_HTML_PLACEHOLDER_\\d+_\\d+_IN_JS$/.test(options.originalText.slice(node.valueSpan.start.offset,node.valueSpan.end.offset))){return concat$a([node.rawName,"=",node.value]);}// lwc: html`<my-element data-for={value}></my-element>`\nif(options.parser==="lwc"){var interpolationRegex=/^\\{[\\s\\S]*\\}$/;if(interpolationRegex.test(options.originalText.slice(node.valueSpan.start.offset,node.valueSpan.end.offset))){return concat$a([node.rawName,"=",node.value]);}}var embeddedAttributeValueDoc=printEmbeddedAttributeValue(node,function(code,opts){return(// strictly prefer single quote to avoid unnecessary html entity escape\ntextToDoc(code,Object.assign({__isInHtmlAttribute:true},opts)));},options);if(embeddedAttributeValueDoc){return concat$a([node.rawName,\'="\',group$9(mapDoc$2(embeddedAttributeValueDoc,function(doc){return typeof doc==="string"?doc.replace(/"/g,"&quot;"):doc;})),\'"\']);}break;}case"yaml":return markAsRoot$2(concat$a(["---",hardline$7,node.value.trim().length===0?"":textToDoc(node.value,{parser:"yaml"}),"---"]));}}function genericPrint$2(path,options,print){var node=path.getValue();switch(node.type){case"root":if(options.__onHtmlRoot){options.__onHtmlRoot(node);}// use original concat to not break stripTrailingHardline\nreturn builders.concat([group$9(printChildren$1(path,options,print)),hardline$7]);case"element":case"ieConditionalComment":{/**\n           * do not break:\n           *\n           *     <div>{{\n           *         ~\n           *       interpolation\n           *     }}</div>\n           *            ~\n           *\n           * exception: break if the opening tag breaks\n           *\n           *     <div\n           *       long\n           *           ~\n           *       >{{\n           *         interpolation\n           *       }}</div\n           *              ~\n           *     >\n           */var shouldHugContent=node.children.length===1&&node.firstChild.type==="interpolation"&&node.firstChild.isLeadingSpaceSensitive&&!node.firstChild.hasLeadingSpaces&&node.lastChild.isTrailingSpaceSensitive&&!node.lastChild.hasTrailingSpaces;var attrGroupId=Symbol("element-attr-group-id");return concat$a([group$9(concat$a([group$9(printOpeningTag(path,options,print),{id:attrGroupId}),node.children.length===0?node.hasDanglingSpaces&&node.isDanglingSpaceSensitive?line$6:"":concat$a([forceBreakContent$1(node)?breakParent$2:"",function(childrenDoc){return shouldHugContent?ifBreak$5(indent$5(childrenDoc),childrenDoc,{groupId:attrGroupId}):isScriptLikeTag$1(node)&&node.parent.type==="root"&&options.parser==="vue"&&!options.vueIndentScriptAndStyle?childrenDoc:indent$5(childrenDoc);}(concat$a([shouldHugContent?ifBreak$5(softline$4,"",{groupId:attrGroupId}):node.firstChild.hasLeadingSpaces&&node.firstChild.isLeadingSpaceSensitive?line$6:node.firstChild.type==="text"&&node.isWhitespaceSensitive&&node.isIndentationSensitive?dedentToRoot$1(softline$4):softline$4,printChildren$1(path,options,print)])),(node.next?needsToBorrowPrevClosingTagEndMarker(node.next):needsToBorrowLastChildClosingTagEndMarker(node.parent))?node.lastChild.hasTrailingSpaces&&node.lastChild.isTrailingSpaceSensitive?" ":"":shouldHugContent?ifBreak$5(softline$4,"",{groupId:attrGroupId}):node.lastChild.hasTrailingSpaces&&node.lastChild.isTrailingSpaceSensitive?line$6:(node.lastChild.type==="comment"||node.lastChild.type==="text"&&node.isWhitespaceSensitive&&node.isIndentationSensitive)&&new RegExp("\\\\n\\\\s{".concat(options.tabWidth*countParents$1(path,function(n){return n.parent&&n.parent.type!=="root";}),"}$")).test(node.lastChild.value)?/**\n           *     <div>\n           *       <pre>\n           *         something\n           *       </pre>\n           *            ~\n           *     </div>\n           */"":softline$4])])),printClosingTag(node,options)]);}case"ieConditionalStartComment":case"ieConditionalEndComment":return concat$a([printOpeningTagStart(node),printClosingTagEnd(node)]);case"interpolation":return concat$a([printOpeningTagStart(node,options),concat$a(path.map(print,"children")),printClosingTagEnd(node,options)]);case"text":{if(node.parent.type==="interpolation"){// replace the trailing literalline with hardline for better readability\nvar trailingNewlineRegex=/\\n[^\\S\\n]*?$/;var hasTrailingNewline=trailingNewlineRegex.test(node.value);var value=hasTrailingNewline?node.value.replace(trailingNewlineRegex,""):node.value;return concat$a([concat$a(replaceEndOfLineWith$1(value,literalline$2)),hasTrailingNewline?hardline$7:""]);}return fill$3(normalizeParts$1([].concat(printOpeningTagPrefix(node,options),getTextValueParts(node),printClosingTagSuffix(node,options))));}case"docType":return concat$a([group$9(concat$a([printOpeningTagStart(node,options)," ",node.value.replace(/^html\\b/i,"html").replace(/\\s+/g," ")])),printClosingTagEnd(node,options)]);case"comment":{return concat$a([printOpeningTagPrefix(node,options),concat$a(replaceEndOfLineWith$1(options.originalText.slice(options.locStart(node),options.locEnd(node)),literalline$2)),printClosingTagSuffix(node,options)]);}case"attribute":{if(node.value===null){return node.rawName;}var _value3=unescapeQuoteEntities$1(node.value);var singleQuoteCount=countChars$1(_value3,"\'");var doubleQuoteCount=countChars$1(_value3,\'"\');var quote=singleQuoteCount<doubleQuoteCount?"\'":\'"\';return concat$a([node.rawName,concat$a(["=",quote,concat$a(replaceEndOfLineWith$1(quote===\'"\'?_value3.replace(/"/g,"&quot;"):_value3.replace(/\'/g,"&apos;"),literalline$2)),quote])]);}case"yaml":case"toml":return concat$a(replaceEndOfLineWith$1(node.raw,literalline$2));default:throw new Error("Unexpected node type ".concat(node.type));}}function printChildren$1(path,options,print){var node=path.getValue();if(forceBreakChildren$1(node)){return concat$a([breakParent$2,concat$a(path.map(function(childPath){var childNode=childPath.getValue();var prevBetweenLine=!childNode.prev?"":printBetweenLine(childNode.prev,childNode);return concat$a([!prevBetweenLine?"":concat$a([prevBetweenLine,forceNextEmptyLine$1(childNode.prev)?hardline$7:""]),printChild(childPath)]);},"children"))]);}var groupIds=node.children.map(function(){return Symbol("");});return concat$a(path.map(function(childPath,childIndex){var childNode=childPath.getValue();if(isTextLikeNode$1(childNode)){if(childNode.prev&&isTextLikeNode$1(childNode.prev)){var _prevBetweenLine=printBetweenLine(childNode.prev,childNode);if(_prevBetweenLine){if(forceNextEmptyLine$1(childNode.prev)){return concat$a([hardline$7,hardline$7,printChild(childPath)]);}return concat$a([_prevBetweenLine,printChild(childPath)]);}}return printChild(childPath);}var prevParts=[];var leadingParts=[];var trailingParts=[];var nextParts=[];var prevBetweenLine=childNode.prev?printBetweenLine(childNode.prev,childNode):"";var nextBetweenLine=childNode.next?printBetweenLine(childNode,childNode.next):"";if(prevBetweenLine){if(forceNextEmptyLine$1(childNode.prev)){prevParts.push(hardline$7,hardline$7);}else if(prevBetweenLine===hardline$7){prevParts.push(hardline$7);}else{if(isTextLikeNode$1(childNode.prev)){leadingParts.push(prevBetweenLine);}else{leadingParts.push(ifBreak$5("",softline$4,{groupId:groupIds[childIndex-1]}));}}}if(nextBetweenLine){if(forceNextEmptyLine$1(childNode)){if(isTextLikeNode$1(childNode.next)){nextParts.push(hardline$7,hardline$7);}}else if(nextBetweenLine===hardline$7){if(isTextLikeNode$1(childNode.next)){nextParts.push(hardline$7);}}else{trailingParts.push(nextBetweenLine);}}return concat$a([].concat(prevParts,group$9(concat$a([concat$a(leadingParts),group$9(concat$a([printChild(childPath),concat$a(trailingParts)]),{id:groupIds[childIndex]})])),nextParts));},"children"));function printChild(childPath){var child=childPath.getValue();if(hasPrettierIgnore$3(child)){return concat$a([].concat(printOpeningTagPrefix(child,options),replaceEndOfLineWith$1(options.originalText.slice(options.locStart(child)+(child.prev&&needsToBorrowNextOpeningTagStartMarker(child.prev)?printOpeningTagStartMarker(child).length:0),options.locEnd(child)-(child.next&&needsToBorrowPrevClosingTagEndMarker(child.next)?printClosingTagEndMarker(child,options).length:0)),literalline$2),printClosingTagSuffix(child,options)));}if(shouldPreserveContent$1(child,options)){return concat$a([].concat(printOpeningTagPrefix(child,options),group$9(printOpeningTag(childPath,options,print)),replaceEndOfLineWith$1(options.originalText.slice(child.startSourceSpan.end.offset+(child.firstChild&&needsToBorrowParentOpeningTagEndMarker(child.firstChild)?-printOpeningTagEndMarker(child).length:0),child.endSourceSpan.start.offset+(child.lastChild&&needsToBorrowParentClosingTagStartMarker(child.lastChild)?printClosingTagStartMarker(child,options).length:needsToBorrowLastChildClosingTagEndMarker(child)?-printClosingTagEndMarker(child.lastChild,options).length:0)),literalline$2),printClosingTag(child,options),printClosingTagSuffix(child,options)));}return print(childPath);}function printBetweenLine(prevNode,nextNode){return isTextLikeNode$1(prevNode)&&isTextLikeNode$1(nextNode)?prevNode.isTrailingSpaceSensitive?prevNode.hasTrailingSpaces?preferHardlineAsLeadingSpaces$1(nextNode)?hardline$7:line$6:"":preferHardlineAsLeadingSpaces$1(nextNode)?hardline$7:softline$4:needsToBorrowNextOpeningTagStartMarker(prevNode)&&(hasPrettierIgnore$3(nextNode)||/**\n       *     123<a\n       *          ~\n       *       ><b>\n       */nextNode.firstChild||/**\n       *     123\x3c!--\n       *            ~\n       *     --\x3e\n       */nextNode.isSelfClosing||/**\n       *     123<span\n       *             ~\n       *       attr\n       */nextNode.type==="element"&&nextNode.attrs.length!==0)||/**\n       *     <img\n       *       src="long"\n       *                 ~\n       *     />123\n       */prevNode.type==="element"&&prevNode.isSelfClosing&&needsToBorrowPrevClosingTagEndMarker(nextNode)?"":!nextNode.isLeadingSpaceSensitive||preferHardlineAsLeadingSpaces$1(nextNode)||/**\n       *       Want to write us a letter? Use our<a\n       *         ><b><a>mailing address</a></b></a\n       *                                          ~\n       *       >.\n       */needsToBorrowPrevClosingTagEndMarker(nextNode)&&prevNode.lastChild&&needsToBorrowParentClosingTagStartMarker(prevNode.lastChild)&&prevNode.lastChild.lastChild&&needsToBorrowParentClosingTagStartMarker(prevNode.lastChild.lastChild)?hardline$7:nextNode.hasLeadingSpaces?line$6:softline$4;}}function printOpeningTag(path,options,print){var node=path.getValue();var forceNotToBreakAttrContent=node.type==="element"&&node.fullName==="script"&&node.attrs.length===1&&node.attrs[0].fullName==="src"&&node.children.length===0;return concat$a([printOpeningTagStart(node,options),!node.attrs||node.attrs.length===0?node.isSelfClosing?/**\n     *     <br />\n     *        ^\n     */" ":"":concat$a([indent$5(concat$a([forceNotToBreakAttrContent?" ":line$6,join$6(line$6,function(ignoreAttributeData){var hasPrettierIgnoreAttribute=typeof ignoreAttributeData==="boolean"?function(){return ignoreAttributeData;}:Array.isArray(ignoreAttributeData)?function(attr){return ignoreAttributeData.includes(attr.rawName);}:function(){return false;};return path.map(function(attrPath){var attr=attrPath.getValue();return hasPrettierIgnoreAttribute(attr)?concat$a(replaceEndOfLineWith$1(options.originalText.slice(options.locStart(attr),options.locEnd(attr)),literalline$2)):print(attrPath);},"attrs");}(node.prev&&node.prev.type==="comment"&&getPrettierIgnoreAttributeCommentData$1(node.prev.value)))])),/**\n     *     123<a\n     *       attr\n     *           ~\n     *       >456\n     */node.firstChild&&needsToBorrowParentOpeningTagEndMarker(node.firstChild)||/**\n     *     <span\n     *       >123<meta\n     *                ~\n     *     /></span>\n     */node.isSelfClosing&&needsToBorrowLastChildClosingTagEndMarker(node.parent)?node.isSelfClosing?" ":"":node.isSelfClosing?forceNotToBreakAttrContent?" ":line$6:forceNotToBreakAttrContent?"":softline$4]),node.isSelfClosing?"":printOpeningTagEnd(node)]);}function printOpeningTagStart(node,options){return node.prev&&needsToBorrowNextOpeningTagStartMarker(node.prev)?"":concat$a([printOpeningTagPrefix(node,options),printOpeningTagStartMarker(node)]);}function printOpeningTagEnd(node){return node.firstChild&&needsToBorrowParentOpeningTagEndMarker(node.firstChild)?"":printOpeningTagEndMarker(node);}function printClosingTag(node,options){return concat$a([node.isSelfClosing?"":printClosingTagStart(node,options),printClosingTagEnd(node,options)]);}function printClosingTagStart(node,options){return node.lastChild&&needsToBorrowParentClosingTagStartMarker(node.lastChild)?"":concat$a([printClosingTagPrefix(node,options),printClosingTagStartMarker(node,options)]);}function printClosingTagEnd(node,options){return(node.next?needsToBorrowPrevClosingTagEndMarker(node.next):needsToBorrowLastChildClosingTagEndMarker(node.parent))?"":concat$a([printClosingTagEndMarker(node,options),printClosingTagSuffix(node,options)]);}function needsToBorrowNextOpeningTagStartMarker(node){/**\n     *     123<p\n     *        ^^\n     *     >\n     */return node.next&&!isTextLikeNode$1(node.next)&&isTextLikeNode$1(node)&&node.isTrailingSpaceSensitive&&!node.hasTrailingSpaces;}function needsToBorrowParentOpeningTagEndMarker(node){/**\n     *     <p\n     *       >123\n     *       ^\n     *\n     *     <p\n     *       ><a\n     *       ^\n     */return!node.prev&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces;}function needsToBorrowPrevClosingTagEndMarker(node){/**\n     *     <p></p\n     *     >123\n     *     ^\n     *\n     *     <p></p\n     *     ><a\n     *     ^\n     */return node.prev&&!isTextLikeNode$1(node.prev)&&node.isLeadingSpaceSensitive&&!node.hasLeadingSpaces;}function needsToBorrowLastChildClosingTagEndMarker(node){/**\n     *     <p\n     *       ><a></a\n     *       ></p\n     *       ^\n     *     >\n     */return node.lastChild&&node.lastChild.isTrailingSpaceSensitive&&!node.lastChild.hasTrailingSpaces&&!isTextLikeNode$1(getLastDescendant$1(node.lastChild));}function needsToBorrowParentClosingTagStartMarker(node){/**\n     *     <p>\n     *       123</p\n     *          ^^^\n     *     >\n     *\n     *         123</b\n     *       ></a\n     *        ^^^\n     *     >\n     */return!node.next&&!node.hasTrailingSpaces&&node.isTrailingSpaceSensitive&&isTextLikeNode$1(getLastDescendant$1(node));}function printOpeningTagPrefix(node,options){return needsToBorrowParentOpeningTagEndMarker(node)?printOpeningTagEndMarker(node.parent):needsToBorrowPrevClosingTagEndMarker(node)?printClosingTagEndMarker(node.prev,options):"";}function printClosingTagPrefix(node,options){return needsToBorrowLastChildClosingTagEndMarker(node)?printClosingTagEndMarker(node.lastChild,options):"";}function printClosingTagSuffix(node,options){return needsToBorrowParentClosingTagStartMarker(node)?printClosingTagStartMarker(node.parent,options):needsToBorrowNextOpeningTagStartMarker(node)?printOpeningTagStartMarker(node.next):"";}function printOpeningTagStartMarker(node){switch(node.type){case"ieConditionalComment":case"ieConditionalStartComment":return"\x3c!--[if ".concat(node.condition);case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(node.condition){return"\x3c!--[if ".concat(node.condition,"]>\x3c!--\x3e<").concat(node.rawName);}// fall through\ndefault:return"<".concat(node.rawName);}}function printOpeningTagEndMarker(node){assert(!node.isSelfClosing);switch(node.type){case"ieConditionalComment":return"]>";case"element":if(node.condition){return">\x3c!--<![endif]--\x3e";}// fall through\ndefault:return">";}}function printClosingTagStartMarker(node,options){assert(!node.isSelfClosing);if(shouldNotPrintClosingTag$1(node,options)){return"";}switch(node.type){case"ieConditionalComment":return"<!";case"element":if(node.hasHtmComponentClosingTag){return"<//";}// fall through\ndefault:return"</".concat(node.rawName);}}function printClosingTagEndMarker(node,options){if(shouldNotPrintClosingTag$1(node,options)){return"";}switch(node.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(node.isSelfClosing){return"/>";}// fall through\ndefault:return">";}}function getTextValueParts(node){var value=arguments.length>1&&arguments[1]!==undefined?arguments[1]:node.value;return node.parent.isWhitespaceSensitive?node.parent.isIndentationSensitive?replaceEndOfLineWith$1(value,literalline$2):replaceEndOfLineWith$1(dedentString$1(value.replace(/^\\s*?\\n|\\n\\s*?$/g,"")),hardline$7):// https://infra.spec.whatwg.org/#ascii-whitespace\njoin$6(line$6,value.split(/[\\t\\n\\f\\r ]+/)).parts;}function printEmbeddedAttributeValue(node,originalTextToDoc,options){var isKeyMatched=function isKeyMatched(patterns){return new RegExp(patterns.join("|")).test(node.fullName);};var getValue=function getValue(){return unescapeQuoteEntities$1(node.value);};var shouldHug=false;var __onHtmlBindingRoot=function __onHtmlBindingRoot(root,options){var rootNode=root.type==="NGRoot"?root.node.type==="NGMicrosyntax"&&root.node.body.length===1&&root.node.body[0].type==="NGMicrosyntaxExpression"?root.node.body[0].expression:root.node:root.type==="JsExpressionRoot"?root.node:root;if(rootNode&&(rootNode.type==="ObjectExpression"||rootNode.type==="ArrayExpression"||options.parser==="__vue_expression"&&(rootNode.type==="TemplateLiteral"||rootNode.type==="StringLiteral"))){shouldHug=true;}};var printHug=function printHug(doc){return group$9(doc);};var printExpand=function printExpand(doc){var canHaveTrailingWhitespace=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return group$9(concat$a([indent$5(concat$a([softline$4,doc])),canHaveTrailingWhitespace?softline$4:""]));};var printMaybeHug=function printMaybeHug(doc){return shouldHug?printHug(doc):printExpand(doc);};var textToDoc=function textToDoc(code,opts){return originalTextToDoc(code,Object.assign({__onHtmlBindingRoot:__onHtmlBindingRoot},opts));};if(node.fullName==="srcset"&&(node.parent.fullName==="img"||node.parent.fullName==="source")){return printExpand(printImgSrcset$1(getValue()));}if(node.fullName==="class"&&!options.parentParser){var value=getValue();if(!value.includes("{{")){return printClassNames$1(value);}}if(node.fullName==="style"&&!options.parentParser){var _value4=getValue();if(!_value4.includes("{{")){return printExpand(textToDoc(_value4,{parser:"css",__isHTMLStyleAttribute:true}));}}if(options.parser==="vue"){if(node.fullName==="v-for"){return printVueFor$1(getValue(),textToDoc);}if(node.fullName==="slot-scope"){return printVueSlotScope$1(getValue(),textToDoc);}/**\n       *     @click="jsStatement"\n       *     @click="jsExpression"\n       *     v-on:click="jsStatement"\n       *     v-on:click="jsExpression"\n       */var vueEventBindingPatterns=["^@","^v-on:"];/**\n       *     :class="vueExpression"\n       *     v-bind:id="vueExpression"\n       */var vueExpressionBindingPatterns=["^:","^v-bind:"];/**\n       *     v-if="jsExpression"\n       */var jsExpressionBindingPatterns=["^v-"];if(isKeyMatched(vueEventBindingPatterns)){var _value5=getValue();return printMaybeHug(isVueEventBindingExpression$1(_value5)?textToDoc(_value5,{parser:"__js_expression"}):stripTrailingHardline$1(textToDoc(_value5,{parser:"__vue_event_binding"})));}if(isKeyMatched(vueExpressionBindingPatterns)){return printMaybeHug(textToDoc(getValue(),{parser:"__vue_expression"}));}if(isKeyMatched(jsExpressionBindingPatterns)){return printMaybeHug(textToDoc(getValue(),{parser:"__js_expression"}));}}if(options.parser==="angular"){var ngTextToDoc=function ngTextToDoc(code,opts){return(// angular does not allow trailing comma\ntextToDoc(code,Object.assign({},opts,{trailingComma:"none"})));};/**\n       *     *directive="angularDirective"\n       */var ngDirectiveBindingPatterns=["^\\\\*"];/**\n       *     (click)="angularStatement"\n       *     on-click="angularStatement"\n       */var ngStatementBindingPatterns=["^\\\\(.+\\\\)$","^on-"];/**\n       *     [target]="angularExpression"\n       *     bind-target="angularExpression"\n       *     [(target)]="angularExpression"\n       *     bindon-target="angularExpression"\n       */var ngExpressionBindingPatterns=["^\\\\[.+\\\\]$","^bind(on)?-",// Unofficial rudimentary support for some of the most used directives of AngularJS 1.x\n"^ng-(if|show|hide|class|style)$"];/**\n       *     i18n="longDescription"\n       *     i18n-attr="longDescription"\n       */var ngI18nPatterns=["^i18n(-.+)?$"];if(isKeyMatched(ngStatementBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_action"}));}if(isKeyMatched(ngExpressionBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_binding"}));}if(isKeyMatched(ngI18nPatterns)){var _value7=getValue().trim();return printExpand(fill$3(getTextValueParts(node,_value7)),!_value7.includes("@@"));}if(isKeyMatched(ngDirectiveBindingPatterns)){return printMaybeHug(ngTextToDoc(getValue(),{parser:"__ng_directive"}));}var interpolationRegex=/\\{\\{([\\s\\S]+?)\\}\\}/g;var _value6=getValue();if(interpolationRegex.test(_value6)){var parts=[];_value6.split(interpolationRegex).forEach(function(part,index){if(index%2===0){parts.push(concat$a(replaceEndOfLineWith$1(part,literalline$2)));}else{try{parts.push(group$9(concat$a(["{{",indent$5(concat$a([line$6,ngTextToDoc(part,{parser:"__ng_interpolation",__isInHtmlInterpolation:true// to avoid unexpected `}}`\n})])),line$6,"}}"])));}catch(e){parts.push("{{",concat$a(replaceEndOfLineWith$1(part,literalline$2)),"}}");}}});return group$9(concat$a(parts));}}return null;}var printerHtml={preprocess:preprocess_1,print:genericPrint$2,insertPragma:insertPragma$6,massageAstNode:clean$3,embed:embed$2};var CATEGORY_HTML="HTML";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar options$4={htmlWhitespaceSensitivity:{since:"1.15.0",category:CATEGORY_HTML,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},vueIndentScriptAndStyle:{since:"1.19.0",category:CATEGORY_HTML,type:"boolean",default:false,description:"Indent script and style tags in Vue files."}};var name$7="HTML";var type$6="markup";var tmScope$6="text.html.basic";var aceMode$6="html";var codemirrorMode$3="htmlmixed";var codemirrorMimeType$3="text/html";var color$1="#e34c26";var aliases$1=["xhtml"];var extensions$6=[".html",".htm",".html.hl",".inc",".st",".xht",".xhtml"];var languageId$6=146;var HTML={name:name$7,type:type$6,tmScope:tmScope$6,aceMode:aceMode$6,codemirrorMode:codemirrorMode$3,codemirrorMimeType:codemirrorMimeType$3,color:color$1,aliases:aliases$1,extensions:extensions$6,languageId:languageId$6};var HTML$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$7,type:type$6,tmScope:tmScope$6,aceMode:aceMode$6,codemirrorMode:codemirrorMode$3,codemirrorMimeType:codemirrorMimeType$3,color:color$1,aliases:aliases$1,extensions:extensions$6,languageId:languageId$6,\'default\':HTML});var name$8="Vue";var type$7="markup";var color$2="#2c3e50";var extensions$7=[".vue"];var tmScope$7="text.html.vue";var aceMode$7="html";var languageId$7=391;var Vue={name:name$8,type:type$7,color:color$2,extensions:extensions$7,tmScope:tmScope$7,aceMode:aceMode$7,languageId:languageId$7};var Vue$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$8,type:type$7,color:color$2,extensions:extensions$7,tmScope:tmScope$7,aceMode:aceMode$7,languageId:languageId$7,\'default\':Vue});var require$$0$5=getCjsExportFromNamespace(HTML$1);var require$$1$1=getCjsExportFromNamespace(Vue$1);var languages$3=[createLanguage(require$$0$5,function(){return{name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]};}),createLanguage(require$$0$5,function(data){return{since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:data.extensions.concat([".mjml"// MJML is considered XML in Linguist but it should be formatted as HTML\n])};}),createLanguage(require$$0$5,function(){return{name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]};}),createLanguage(require$$1$1,function(){return{since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]};})];var printers$3={html:printerHtml};var languageHtml={languages:languages$3,printers:printers$3,options:options$4};var addLeadingComment$3=utilShared.addLeadingComment,addTrailingComment$3=utilShared.addTrailingComment,addDanglingComment$3=utilShared.addDanglingComment,getNextNonSpaceNonCommentCharacterIndex$2=utilShared.getNextNonSpaceNonCommentCharacterIndex;function handleOwnLineComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;return handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleMemberExpressionComments(enclosingNode,followingNode,comment)||handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment)||handleClassComments(enclosingNode,precedingNode,followingNode,comment)||handleImportSpecifierComments(enclosingNode,comment)||handleForComments(enclosingNode,precedingNode,comment)||handleUnionTypeComments(precedingNode,enclosingNode,followingNode,comment)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleImportDeclarationComments(text,enclosingNode,precedingNode,comment,options)||handleAssignmentPatternComments(enclosingNode,comment)||handleMethodNameComments(text,enclosingNode,precedingNode,comment,options)||handleLabeledStatementComments(enclosingNode,comment);}function handleEndOfLineComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;return handleClosureTypeCastComments(followingNode,comment)||handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleConditionalExpressionComments(enclosingNode,precedingNode,followingNode,comment,text,options)||handleImportSpecifierComments(enclosingNode,comment)||handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment)||handleClassComments(enclosingNode,precedingNode,followingNode,comment)||handleLabeledStatementComments(enclosingNode,comment)||handleCallExpressionComments(precedingNode,enclosingNode,comment)||handlePropertyComments(enclosingNode,comment)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleTypeAliasComments(enclosingNode,followingNode,comment)||handleVariableDeclaratorComments(enclosingNode,followingNode,comment);}function handleRemainingComment(comment,text,options,ast,isLastComment){var precedingNode=comment.precedingNode,enclosingNode=comment.enclosingNode,followingNode=comment.followingNode;if(handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options)||handleObjectPropertyAssignment(enclosingNode,precedingNode,comment)||handleCommentInEmptyParens(text,enclosingNode,comment,options)||handleMethodNameComments(text,enclosingNode,precedingNode,comment,options)||handleOnlyComments(enclosingNode,ast,comment,isLastComment)||handleCommentAfterArrowParams(text,enclosingNode,comment,options)||handleFunctionNameComments(text,enclosingNode,precedingNode,comment,options)||handleTSMappedTypeComments(text,enclosingNode,precedingNode,followingNode,comment)||handleBreakAndContinueStatementComments(enclosingNode,comment)||handleTSFunctionTrailingComments(text,enclosingNode,followingNode,comment,options)){return true;}return false;}function addBlockStatementFirstComment(node,comment){var body=node.body.filter(function(n){return n.type!=="EmptyStatement";});if(body.length===0){addDanglingComment$3(node,comment);}else{addLeadingComment$3(body[0],comment);}}function addBlockOrNotComment(node,comment){if(node.type==="BlockStatement"){addBlockStatementFirstComment(node,comment);}else{addLeadingComment$3(node,comment);}}function handleClosureTypeCastComments(followingNode,comment){if(followingNode&&isTypeCastComment(comment)){addLeadingComment$3(followingNode,comment);return true;}return false;}// There are often comments before the else clause of if statements like\n//\n//   if (1) { ... }\n//   // comment\n//   else { ... }\n//\n// They are being attached as leading comments of the BlockExpression which\n// is not well printed. What we want is to instead move the comment inside\n// of the block and make it leadingComment of the first element of the block\n// or dangling comment of the block if there is nothing inside\n//\n//   if (1) { ... }\n//   else {\n//     // comment\n//     ...\n//   }\nfunction handleIfStatementComments(text,precedingNode,enclosingNode,followingNode,comment,options){if(!enclosingNode||enclosingNode.type!=="IfStatement"||!followingNode){return false;}// We unfortunately have no way using the AST or location of nodes to know\n// if the comment is positioned before the condition parenthesis:\n//   if (a /* comment */) {}\n// The only workaround I found is to look at the next character to see if\n// it is a ).\nvar nextCharacter=util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd);if(nextCharacter===")"){addTrailingComment$3(precedingNode,comment);return true;}// Comments before `else`:\n// - treat as trailing comments of the consequent, if it\'s a BlockStatement\n// - treat as a dangling comment otherwise\nif(precedingNode===enclosingNode.consequent&&followingNode===enclosingNode.alternate){if(precedingNode.type==="BlockStatement"){addTrailingComment$3(precedingNode,comment);}else{addDanglingComment$3(enclosingNode,comment);}return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}if(followingNode.type==="IfStatement"){addBlockOrNotComment(followingNode.consequent,comment);return true;}// For comments positioned after the condition parenthesis in an if statement\n// before the consequent without brackets on, such as\n// if (a) /* comment */ true,\n// we look at the next character to see if the following node\n// is the consequent for the if statement\nif(enclosingNode.consequent===followingNode){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleWhileComments(text,precedingNode,enclosingNode,followingNode,comment,options){if(!enclosingNode||enclosingNode.type!=="WhileStatement"||!followingNode){return false;}// We unfortunately have no way using the AST or location of nodes to know\n// if the comment is positioned before the condition parenthesis:\n//   while (a /* comment */) {}\n// The only workaround I found is to look at the next character to see if\n// it is a ).\nvar nextCharacter=util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd);if(nextCharacter===")"){addTrailingComment$3(precedingNode,comment);return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}return false;}// Same as IfStatement but for TryStatement\nfunction handleTryStatementComments(enclosingNode,precedingNode,followingNode,comment){if(!enclosingNode||enclosingNode.type!=="TryStatement"&&enclosingNode.type!=="CatchClause"||!followingNode){return false;}if(enclosingNode.type==="CatchClause"&&precedingNode){addTrailingComment$3(precedingNode,comment);return true;}if(followingNode.type==="BlockStatement"){addBlockStatementFirstComment(followingNode,comment);return true;}if(followingNode.type==="TryStatement"){addBlockOrNotComment(followingNode.finalizer,comment);return true;}if(followingNode.type==="CatchClause"){addBlockOrNotComment(followingNode.body,comment);return true;}return false;}function handleMemberExpressionComments(enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="MemberExpression"||enclosingNode.type==="OptionalMemberExpression")&&followingNode&&followingNode.type==="Identifier"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleConditionalExpressionComments(enclosingNode,precedingNode,followingNode,comment,text,options){var isSameLineAsPrecedingNode=precedingNode&&!util$1.hasNewlineInRange(text,options.locEnd(precedingNode),options.locStart(comment));if((!precedingNode||!isSameLineAsPrecedingNode)&&enclosingNode&&enclosingNode.type==="ConditionalExpression"&&followingNode){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleObjectPropertyAssignment(enclosingNode,precedingNode,comment){if(enclosingNode&&(enclosingNode.type==="ObjectProperty"||enclosingNode.type==="Property")&&enclosingNode.shorthand&&enclosingNode.key===precedingNode&&enclosingNode.value.type==="AssignmentPattern"){addTrailingComment$3(enclosingNode.value.left,comment);return true;}return false;}function handleClassComments(enclosingNode,precedingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="ClassDeclaration"||enclosingNode.type==="ClassExpression")&&enclosingNode.decorators&&enclosingNode.decorators.length>0&&!(followingNode&&followingNode.type==="Decorator")){if(!enclosingNode.decorators||enclosingNode.decorators.length===0){addLeadingComment$3(enclosingNode,comment);}else{addTrailingComment$3(enclosingNode.decorators[enclosingNode.decorators.length-1],comment);}return true;}return false;}function handleMethodNameComments(text,enclosingNode,precedingNode,comment,options){// This is only needed for estree parsers (flow, typescript) to attach\n// after a method name:\n// obj = { fn /*comment*/() {} };\nif(enclosingNode&&precedingNode&&(// "MethodDefinition" is handled in getCommentChildNodes\nenclosingNode.type==="Property"||enclosingNode.type==="TSDeclareMethod"||enclosingNode.type==="TSAbstractMethodDefinition")&&precedingNode.type==="Identifier"&&enclosingNode.key===precedingNode&&// special Property case: { key: /*comment*/(value) };\n// comment should be attached to value instead of key\nutil$1.getNextNonSpaceNonCommentCharacter(text,precedingNode,options.locEnd)!==":"){addTrailingComment$3(precedingNode,comment);return true;}// Print comments between decorators and class methods as a trailing comment\n// on the decorator node instead of the method node\nif(precedingNode&&enclosingNode&&precedingNode.type==="Decorator"&&(enclosingNode.type==="ClassMethod"||enclosingNode.type==="ClassProperty"||enclosingNode.type==="TSAbstractClassProperty"||enclosingNode.type==="TSAbstractMethodDefinition"||enclosingNode.type==="TSDeclareMethod"||enclosingNode.type==="MethodDefinition")){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleFunctionNameComments(text,enclosingNode,precedingNode,comment,options){if(util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)!=="("){return false;}if(precedingNode&&enclosingNode&&(enclosingNode.type==="FunctionDeclaration"||enclosingNode.type==="FunctionExpression"||enclosingNode.type==="ClassMethod"||enclosingNode.type==="MethodDefinition"||enclosingNode.type==="ObjectMethod")){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleCommentAfterArrowParams(text,enclosingNode,comment,options){if(!(enclosingNode&&enclosingNode.type==="ArrowFunctionExpression")){return false;}var index=getNextNonSpaceNonCommentCharacterIndex$2(text,comment,options.locEnd);if(text.slice(index,index+2)==="=>"){addDanglingComment$3(enclosingNode,comment);return true;}return false;}function handleCommentInEmptyParens(text,enclosingNode,comment,options){if(util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)!==")"){return false;}// Only add dangling comments to fix the case when no params are present,\n// i.e. a function without any argument.\nif(enclosingNode&&(isRealFunctionLikeNode(enclosingNode)&&// `params` vs `parameters` - see https://github.com/babel/babel/issues/9231\n(enclosingNode.params||enclosingNode.parameters).length===0||(enclosingNode.type==="CallExpression"||enclosingNode.type==="OptionalCallExpression"||enclosingNode.type==="NewExpression")&&enclosingNode.arguments.length===0)){addDanglingComment$3(enclosingNode,comment);return true;}if(enclosingNode&&enclosingNode.type==="MethodDefinition"&&enclosingNode.value.params.length===0){addDanglingComment$3(enclosingNode.value,comment);return true;}return false;}function handleLastFunctionArgComments(text,precedingNode,enclosingNode,followingNode,comment,options){// Flow function type definitions\nif(precedingNode&&precedingNode.type==="FunctionTypeParam"&&enclosingNode&&enclosingNode.type==="FunctionTypeAnnotation"&&followingNode&&followingNode.type!=="FunctionTypeParam"){addTrailingComment$3(precedingNode,comment);return true;}// Real functions and TypeScript function type definitions\nif(precedingNode&&(precedingNode.type==="Identifier"||precedingNode.type==="AssignmentPattern")&&enclosingNode&&isRealFunctionLikeNode(enclosingNode)&&util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)===")"){addTrailingComment$3(precedingNode,comment);return true;}if(enclosingNode&&enclosingNode.type==="FunctionDeclaration"&&followingNode&&followingNode.type==="BlockStatement"){var functionParamRightParenIndex=function(){if((enclosingNode.params||enclosingNode.parameters).length!==0){return util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,options.locEnd(util$1.getLast(enclosingNode.params||enclosingNode.parameters)));}var functionParamLeftParenIndex=util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,options.locEnd(enclosingNode.id));return util$1.getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text,functionParamLeftParenIndex+1);}();if(options.locStart(comment)>functionParamRightParenIndex){addBlockStatementFirstComment(followingNode,comment);return true;}}return false;}function handleImportSpecifierComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="ImportSpecifier"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleLabeledStatementComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="LabeledStatement"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleBreakAndContinueStatementComments(enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="ContinueStatement"||enclosingNode.type==="BreakStatement")&&!enclosingNode.label){addTrailingComment$3(enclosingNode,comment);return true;}return false;}function handleCallExpressionComments(precedingNode,enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="CallExpression"||enclosingNode.type==="OptionalCallExpression")&&precedingNode&&enclosingNode.callee===precedingNode&&enclosingNode.arguments.length>0){addLeadingComment$3(enclosingNode.arguments[0],comment);return true;}return false;}function handleUnionTypeComments(precedingNode,enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="UnionTypeAnnotation"||enclosingNode.type==="TSUnionType")){if(util$1.isNodeIgnoreComment(comment)){followingNode.prettierIgnore=true;comment.unignore=true;}if(precedingNode){addTrailingComment$3(precedingNode,comment);return true;}return false;}if(followingNode&&(followingNode.type==="UnionTypeAnnotation"||followingNode.type==="TSUnionType")&&util$1.isNodeIgnoreComment(comment)){followingNode.types[0].prettierIgnore=true;comment.unignore=true;}return false;}function handlePropertyComments(enclosingNode,comment){if(enclosingNode&&(enclosingNode.type==="Property"||enclosingNode.type==="ObjectProperty")){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleOnlyComments(enclosingNode,ast,comment,isLastComment){// With Flow the enclosingNode is undefined so use the AST instead.\nif(ast&&ast.body&&ast.body.length===0){if(isLastComment){addDanglingComment$3(ast,comment);}else{addLeadingComment$3(ast,comment);}return true;}else if(enclosingNode&&enclosingNode.type==="Program"&&enclosingNode.body.length===0&&enclosingNode.directives&&enclosingNode.directives.length===0){if(isLastComment){addDanglingComment$3(enclosingNode,comment);}else{addLeadingComment$3(enclosingNode,comment);}return true;}return false;}function handleForComments(enclosingNode,precedingNode,comment){if(enclosingNode&&(enclosingNode.type==="ForInStatement"||enclosingNode.type==="ForOfStatement")){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleImportDeclarationComments(text,enclosingNode,precedingNode,comment,options){if(precedingNode&&precedingNode.type==="ImportSpecifier"&&enclosingNode&&enclosingNode.type==="ImportDeclaration"&&util$1.hasNewline(text,options.locEnd(comment))){addTrailingComment$3(precedingNode,comment);return true;}return false;}function handleAssignmentPatternComments(enclosingNode,comment){if(enclosingNode&&enclosingNode.type==="AssignmentPattern"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleTypeAliasComments(enclosingNode,followingNode,comment){if(enclosingNode&&enclosingNode.type==="TypeAlias"){addLeadingComment$3(enclosingNode,comment);return true;}return false;}function handleVariableDeclaratorComments(enclosingNode,followingNode,comment){if(enclosingNode&&(enclosingNode.type==="VariableDeclarator"||enclosingNode.type==="AssignmentExpression")&&followingNode&&(followingNode.type==="ObjectExpression"||followingNode.type==="ArrayExpression"||followingNode.type==="TemplateLiteral"||followingNode.type==="TaggedTemplateExpression"||isBlockComment(comment))){addLeadingComment$3(followingNode,comment);return true;}return false;}function handleTSFunctionTrailingComments(text,enclosingNode,followingNode,comment,options){if(!followingNode&&enclosingNode&&(enclosingNode.type==="TSMethodSignature"||enclosingNode.type==="TSDeclareFunction"||enclosingNode.type==="TSAbstractMethodDefinition")&&util$1.getNextNonSpaceNonCommentCharacter(text,comment,options.locEnd)===";"){addTrailingComment$3(enclosingNode,comment);return true;}return false;}function handleTSMappedTypeComments(text,enclosingNode,precedingNode,followingNode,comment){if(!enclosingNode||enclosingNode.type!=="TSMappedType"){return false;}if(followingNode&&followingNode.type==="TSTypeParameter"&&followingNode.name){addLeadingComment$3(followingNode.name,comment);return true;}if(precedingNode&&precedingNode.type==="TSTypeParameter"&&precedingNode.constraint){addTrailingComment$3(precedingNode.constraint,comment);return true;}return false;}function isBlockComment(comment){return comment.type==="Block"||comment.type==="CommentBlock";}function hasLeadingComment(node){var fn=arguments.length>1&&arguments[1]!==undefined?arguments[1]:function(){return true;};if(node.leadingComments){return node.leadingComments.some(fn);}if(node.comments){return node.comments.some(function(comment){return comment.leading&&fn(comment);});}return false;}function isRealFunctionLikeNode(node){return node.type==="ArrowFunctionExpression"||node.type==="FunctionExpression"||node.type==="FunctionDeclaration"||node.type==="ObjectMethod"||node.type==="ClassMethod"||node.type==="TSDeclareFunction"||node.type==="TSCallSignatureDeclaration"||node.type==="TSConstructSignatureDeclaration"||node.type==="TSConstructSignatureDeclaration"||node.type==="TSMethodSignature"||node.type==="TSConstructorType"||node.type==="TSFunctionType"||node.type==="TSDeclareMethod";}function getGapRegex(enclosingNode){if(enclosingNode&&enclosingNode.type!=="BinaryExpression"&&enclosingNode.type!=="LogicalExpression"){// Support degenerate single-element unions and intersections.\n// E.g.: `type A = /* 1 */ & B`\nreturn /^[\\s(&|]*$/;}}function getCommentChildNodes(node,options){// Prevent attaching comments to FunctionExpression in this case:\n//     class Foo {\n//       bar() // comment\n//       {\n//         baz();\n//       }\n//     }\nif((options.parser==="typescript"||options.parser==="flow")&&node.type==="MethodDefinition"&&node.value&&node.value.type==="FunctionExpression"&&node.value.params.length===0&&!node.value.returnType&&(!node.value.typeParameters||node.value.typeParameters.length===0)&&node.value.body){return[].concat((0,_toConsumableArray3.default)(node.decorators||[]),[node.key,node.value.body]);}}function isTypeCastComment(comment){return isBlockComment(comment)&&comment.value[0]==="*"&&// TypeScript expects the type to be enclosed in curly brackets, however\n// Closure Compiler accepts types in parens and even without any delimiters at all.\n// That\'s why we just search for "@type".\n/@type\\b/.test(comment.value);}var comments$1={handleOwnLineComment:handleOwnLineComment,handleEndOfLineComment:handleEndOfLineComment,handleRemainingComment:handleRemainingComment,hasLeadingComment:hasLeadingComment,isBlockComment:isBlockComment,isTypeCastComment:isTypeCastComment,getGapRegex:getGapRegex,getCommentChildNodes:getCommentChildNodes};var isBlockComment$1=comments$1.isBlockComment,hasLeadingComment$1=comments$1.hasLeadingComment;var _document$builders8=document.builders,indent$6=_document$builders8.indent,join$7=_document$builders8.join,line$7=_document$builders8.line,hardline$8=_document$builders8.hardline,softline$5=_document$builders8.softline,literalline$3=_document$builders8.literalline,concat$b=_document$builders8.concat,group$a=_document$builders8.group,dedentToRoot$2=_document$builders8.dedentToRoot,_document$utils2=document.utils,mapDoc$3=_document$utils2.mapDoc,stripTrailingHardline$2=_document$utils2.stripTrailingHardline;function embed$3(path,print,textToDoc,options){var node=path.getValue();var parent=path.getParentNode();var parentParent=path.getParentNode(1);switch(node.type){case"TemplateLiteral":{var isCss=[isStyledJsx,isStyledComponents,isCssProp,isAngularComponentStyles].some(function(isIt){return isIt(path);});if(isCss){// Get full template literal with expressions replaced by placeholders\nvar rawQuasis=node.quasis.map(function(q){return q.value.raw;});var placeholderID=0;var text=rawQuasis.reduce(function(prevVal,currVal,idx){return idx===0?currVal:prevVal+"@prettier-placeholder-"+placeholderID++ +"-id"+currVal;},"");var _doc4=textToDoc(text,{parser:"scss"});return transformCssDoc(_doc4,path,print);}/*\n           * react-relay and graphql-tag\n           * graphql`...`\n           * graphql.experimental`...`\n           * gql`...`\n           *\n           * This intentionally excludes Relay Classic tags, as Prettier does not\n           * support Relay Classic formatting.\n           */if(isGraphQL(path)){var expressionDocs=node.expressions?path.map(print,"expressions"):[];var numQuasis=node.quasis.length;if(numQuasis===1&&node.quasis[0].value.raw.trim()===""){return"``";}var parts=[];for(var i=0;i<numQuasis;i++){var templateElement=node.quasis[i];var isFirst=i===0;var isLast=i===numQuasis-1;var _text=templateElement.value.cooked;// Bail out if any of the quasis have an invalid escape sequence\n// (which would make the `cooked` value be `null` or `undefined`)\nif(typeof _text!=="string"){return null;}var lines=_text.split("\\n");var numLines=lines.length;var expressionDoc=expressionDocs[i];var startsWithBlankLine=numLines>2&&lines[0].trim()===""&&lines[1].trim()==="";var endsWithBlankLine=numLines>2&&lines[numLines-1].trim()===""&&lines[numLines-2].trim()==="";var commentsAndWhitespaceOnly=lines.every(function(line){return /^\\s*(?:#[^\\r\\n]*)?$/.test(line);});// Bail out if an interpolation occurs within a comment.\nif(!isLast&&/#[^\\r\\n]*$/.test(lines[numLines-1])){return null;}var _doc5=null;if(commentsAndWhitespaceOnly){_doc5=printGraphqlComments(lines);}else{_doc5=stripTrailingHardline$2(textToDoc(_text,{parser:"graphql"}));}if(_doc5){_doc5=escapeTemplateCharacters(_doc5,false);if(!isFirst&&startsWithBlankLine){parts.push("");}parts.push(_doc5);if(!isLast&&endsWithBlankLine){parts.push("");}}else if(!isFirst&&!isLast&&startsWithBlankLine){parts.push("");}if(expressionDoc){parts.push(concat$b(["${",expressionDoc,"}"]));}}return concat$b(["`",indent$6(concat$b([hardline$8,join$7(hardline$8,parts)])),hardline$8,"`"]);}var htmlParser=isHtml(path)?"html":isAngularComponentTemplate(path)?"angular":undefined;if(htmlParser){return printHtmlTemplateLiteral(path,print,textToDoc,htmlParser,options);}break;}case"TemplateElement":{/**\n           * md`...`\n           * markdown`...`\n           */if(parentParent&&parentParent.type==="TaggedTemplateExpression"&&parent.quasis.length===1&&parentParent.tag.type==="Identifier"&&(parentParent.tag.name==="md"||parentParent.tag.name==="markdown")){var _text2=parent.quasis[0].value.raw.replace(/((?:\\\\\\\\)*)\\\\`/g,function(_,backslashes){return"\\\\".repeat(backslashes.length/2)+"`";});var indentation=getIndentation(_text2);var hasIndent=indentation!=="";return concat$b([hasIndent?indent$6(concat$b([softline$5,printMarkdown(_text2.replace(new RegExp("^".concat(indentation),"gm"),""))])):concat$b([literalline$3,dedentToRoot$2(printMarkdown(_text2))]),softline$5]);}break;}}function printMarkdown(text){var doc=textToDoc(text,{parser:"markdown",__inJsTemplate:true});return stripTrailingHardline$2(escapeTemplateCharacters(doc,true));}}function getIndentation(str){var firstMatchedIndent=str.match(/^([^\\S\\n]*)\\S/m);return firstMatchedIndent===null?"":firstMatchedIndent[1];}function uncook(cookedValue){return cookedValue.replace(/([\\\\`]|\\$\\{)/g,"\\\\$1");}function escapeTemplateCharacters(doc,raw){return mapDoc$3(doc,function(currentDoc){if(!currentDoc.parts){return currentDoc;}var parts=[];currentDoc.parts.forEach(function(part){if(typeof part==="string"){parts.push(raw?part.replace(/(\\\\*)`/g,"$1$1\\\\`"):uncook(part));}else{parts.push(part);}});return Object.assign({},currentDoc,{parts:parts});});}function transformCssDoc(quasisDoc,path,print){var parentNode=path.getValue();var isEmpty=parentNode.quasis.length===1&&!parentNode.quasis[0].value.raw.trim();if(isEmpty){return"``";}var expressionDocs=parentNode.expressions?path.map(print,"expressions"):[];var newDoc=replacePlaceholders(quasisDoc,expressionDocs);/* istanbul ignore if */if(!newDoc){throw new Error("Couldn\'t insert all the expressions");}return concat$b(["`",indent$6(concat$b([hardline$8,stripTrailingHardline$2(newDoc)])),softline$5,"`"]);}// Search all the placeholders in the quasisDoc tree\n// and replace them with the expression docs one by one\n// returns a new doc with all the placeholders replaced,\n// or null if it couldn\'t replace any expression\nfunction replacePlaceholders(quasisDoc,expressionDocs){if(!expressionDocs||!expressionDocs.length){return quasisDoc;}var expressions=expressionDocs.slice();var replaceCounter=0;var newDoc=mapDoc$3(quasisDoc,function(doc){if(!doc||!doc.parts||!doc.parts.length){return doc;}var parts=doc.parts;var atIndex=parts.indexOf("@");var placeholderIndex=atIndex+1;if(atIndex>-1&&typeof parts[placeholderIndex]==="string"&&parts[placeholderIndex].startsWith("prettier-placeholder")){// If placeholder is split, join it\nvar at=parts[atIndex];var placeholder=parts[placeholderIndex];var rest=parts.slice(placeholderIndex+1);parts=parts.slice(0,atIndex).concat([at+placeholder]).concat(rest);}var atPlaceholderIndex=parts.findIndex(function(part){return typeof part==="string"&&part.startsWith("@prettier-placeholder");});if(atPlaceholderIndex>-1){var _placeholder=parts[atPlaceholderIndex];var _rest=parts.slice(atPlaceholderIndex+1);var placeholderMatch=_placeholder.match(/@prettier-placeholder-(.+)-id([\\s\\S]*)/);var placeholderID=placeholderMatch[1];// When the expression has a suffix appended, like:\n// animation: linear ${time}s ease-out;\nvar suffix=placeholderMatch[2];var expression=expressions[placeholderID];replaceCounter++;parts=parts.slice(0,atPlaceholderIndex).concat(["${",expression,"}"+suffix]).concat(_rest);}return Object.assign({},doc,{parts:parts});});return expressions.length===replaceCounter?newDoc:null;}function printGraphqlComments(lines){var parts=[];var seenComment=false;lines.map(function(textLine){return textLine.trim();}).forEach(function(textLine,i,array){// Lines are either whitespace only, or a comment (with potential whitespace\n// around it). Drop whitespace-only lines.\nif(textLine===""){return;}if(array[i-1]===""&&seenComment){// If a non-first comment is preceded by a blank (whitespace only) line,\n// add in a blank line.\nparts.push(concat$b([hardline$8,textLine]));}else{parts.push(textLine);}seenComment=true;});// If `lines` was whitespace only, return `null`.\nreturn parts.length===0?null:join$7(hardline$8,parts);}/**\n   * Template literal in these contexts:\n   * <style jsx>{`div{color:red}`}</style>\n   * css``\n   * css.global``\n   * css.resolve``\n   */function isStyledJsx(path){var node=path.getValue();var parent=path.getParentNode();var parentParent=path.getParentNode(1);return parentParent&&node.quasis&&parent.type==="JSXExpressionContainer"&&parentParent.type==="JSXElement"&&parentParent.openingElement.name.name==="style"&&parentParent.openingElement.attributes.some(function(attribute){return attribute.name.name==="jsx";})||parent&&parent.type==="TaggedTemplateExpression"&&parent.tag.type==="Identifier"&&parent.tag.name==="css"||parent&&parent.type==="TaggedTemplateExpression"&&parent.tag.type==="MemberExpression"&&parent.tag.object.name==="css"&&(parent.tag.property.name==="global"||parent.tag.property.name==="resolve");}/**\n   * Angular Components can have:\n   * - Inline HTML template\n   * - Inline CSS styles\n   *\n   * ...which are both within template literals somewhere\n   * inside of the Component decorator factory.\n   *\n   * E.g.\n   * @Component({\n   *  template: `<div>...</div>`,\n   *  styles: [`h1 { color: blue; }`]\n   * })\n   */function isAngularComponentStyles(path){return path.match.apply(path,[function(node){return node.type==="TemplateLiteral";},function(node,name){return node.type==="ArrayExpression"&&name==="elements";},function(node,name){return(node.type==="Property"||node.type==="ObjectProperty")&&node.key.type==="Identifier"&&node.key.name==="styles"&&name==="value";}].concat(angularComponentObjectExpressionPredicates));}function isAngularComponentTemplate(path){return path.match.apply(path,[function(node){return node.type==="TemplateLiteral";},function(node,name){return(node.type==="Property"||node.type==="ObjectProperty")&&node.key.type==="Identifier"&&node.key.name==="template"&&name==="value";}].concat(angularComponentObjectExpressionPredicates));}var angularComponentObjectExpressionPredicates=[function(node,name){return node.type==="ObjectExpression"&&name==="properties";},function(node,name){return node.type==="CallExpression"&&node.callee.type==="Identifier"&&node.callee.name==="Component"&&name==="arguments";},function(node,name){return node.type==="Decorator"&&name==="expression";}];/**\n   * styled-components template literals\n   */function isStyledComponents(path){var parent=path.getParentNode();if(!parent||parent.type!=="TaggedTemplateExpression"){return false;}var tag=parent.tag;switch(tag.type){case"MemberExpression":return(// styled.foo``\nisStyledIdentifier(tag.object)||// Component.extend``\nisStyledExtend(tag));case"CallExpression":return(// styled(Component)``\nisStyledIdentifier(tag.callee)||tag.callee.type==="MemberExpression"&&(tag.callee.object.type==="MemberExpression"&&(// styled.foo.attrs({})``\nisStyledIdentifier(tag.callee.object.object)||// Component.extend.attrs({})``\nisStyledExtend(tag.callee.object))||// styled(Component).attrs({})``\ntag.callee.object.type==="CallExpression"&&isStyledIdentifier(tag.callee.object.callee)));case"Identifier":// css``\nreturn tag.name==="css";default:return false;}}/**\n   * JSX element with CSS prop\n   */function isCssProp(path){var parent=path.getParentNode();var parentParent=path.getParentNode(1);return parentParent&&parent.type==="JSXExpressionContainer"&&parentParent.type==="JSXAttribute"&&parentParent.name.type==="JSXIdentifier"&&parentParent.name.name==="css";}function isStyledIdentifier(node){return node.type==="Identifier"&&node.name==="styled";}function isStyledExtend(node){return /^[A-Z]/.test(node.object.name)&&node.property.name==="extend";}/*\n   * react-relay and graphql-tag\n   * graphql`...`\n   * graphql.experimental`...`\n   * gql`...`\n   * GraphQL comment block\n   *\n   * This intentionally excludes Relay Classic tags, as Prettier does not\n   * support Relay Classic formatting.\n   */function isGraphQL(path){var node=path.getValue();var parent=path.getParentNode();return hasLanguageComment(node,"GraphQL")||parent&&(parent.type==="TaggedTemplateExpression"&&(parent.tag.type==="MemberExpression"&&parent.tag.object.name==="graphql"&&parent.tag.property.name==="experimental"||parent.tag.type==="Identifier"&&(parent.tag.name==="gql"||parent.tag.name==="graphql"))||parent.type==="CallExpression"&&parent.callee.type==="Identifier"&&parent.callee.name==="graphql");}function hasLanguageComment(node,languageName){// This checks for a leading comment that is exactly `/* GraphQL */`\n// In order to be in line with other implementations of this comment tag\n// we will not trim the comment value and we will expect exactly one space on\n// either side of the GraphQL string\n// Also see ./clean.js\nreturn hasLeadingComment$1(node,function(comment){return isBlockComment$1(comment)&&comment.value===" ".concat(languageName," ");});}/**\n   *     - html`...`\n   *     - HTML comment block\n   */function isHtml(path){return hasLanguageComment(path.getValue(),"HTML")||path.match(function(node){return node.type==="TemplateLiteral";},function(node,name){return node.type==="TaggedTemplateExpression"&&node.tag.type==="Identifier"&&node.tag.name==="html"&&name==="quasi";});}// The counter is needed to distinguish nested embeds.\nvar htmlTemplateLiteralCounter=0;function printHtmlTemplateLiteral(path,print,textToDoc,parser,options){var node=path.getValue();var counter=htmlTemplateLiteralCounter;htmlTemplateLiteralCounter=htmlTemplateLiteralCounter+1>>>0;var composePlaceholder=function composePlaceholder(index){return"PRETTIER_HTML_PLACEHOLDER_".concat(index,"_").concat(counter,"_IN_JS");};var text=node.quasis.map(function(quasi,index,quasis){return index===quasis.length-1?quasi.value.cooked:quasi.value.cooked+composePlaceholder(index);}).join("");var expressionDocs=path.map(print,"expressions");if(expressionDocs.length===0&&text.trim().length===0){return"``";}var placeholderRegex=new RegExp(composePlaceholder("(\\\\d+)"),"g");var topLevelCount=0;var contentDoc=mapDoc$3(stripTrailingHardline$2(textToDoc(text,{parser:parser,__onHtmlRoot:function __onHtmlRoot(root){topLevelCount=root.children.length;}})),function(doc){if(typeof doc!=="string"){return doc;}var parts=[];var components=doc.split(placeholderRegex);for(var i=0;i<components.length;i++){var component=components[i];if(i%2===0){if(component){component=uncook(component);if(options.embeddedInHtml){component=component.replace(/<\\/(script)\\b/gi,"<\\\\/$1");}parts.push(component);}continue;}var placeholderIndex=+component;parts.push(concat$b(["${",group$a(expressionDocs[placeholderIndex]),"}"]));}return concat$b(parts);});var leadingWhitespace=/^\\s/.test(text)?" ":"";var trailingWhitespace=/\\s$/.test(text)?" ":"";var linebreak=options.htmlWhitespaceSensitivity==="ignore"?hardline$8:leadingWhitespace&&trailingWhitespace?line$7:null;if(linebreak){return group$a(concat$b(["`",indent$6(concat$b([linebreak,group$a(contentDoc)])),linebreak,"`"]));}return group$a(concat$b(["`",leadingWhitespace,topLevelCount>1?indent$6(group$a(contentDoc)):group$a(contentDoc),trailingWhitespace,"`"]));}var embed_1$1=embed$3;function clean$4(ast,newObj,parent){["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","flags","errors"].forEach(function(name){delete newObj[name];});if(ast.loc&&ast.loc.source===null){delete newObj.loc.source;}if(ast.type==="BigIntLiteral"){newObj.value=newObj.value.toLowerCase();}// We remove extra `;` and add them when needed\nif(ast.type==="EmptyStatement"){return null;}// We move text around, including whitespaces and add {" "}\nif(ast.type==="JSXText"){return null;}if(ast.type==="JSXExpressionContainer"&&ast.expression.type==="Literal"&&ast.expression.value===" "){return null;}// (TypeScript) Ignore `static` in `constructor(static p) {}`\n// and `export` in `constructor(export p) {}`\nif(ast.type==="TSParameterProperty"&&ast.accessibility===null&&!ast.readonly){return{type:"Identifier",name:ast.parameter.name,typeAnnotation:newObj.parameter.typeAnnotation,decorators:newObj.decorators};}// (TypeScript) ignore empty `specifiers` array\nif(ast.type==="TSNamespaceExportDeclaration"&&ast.specifiers&&ast.specifiers.length===0){delete newObj.specifiers;}// We convert <div></div> to <div />\nif(ast.type==="JSXOpeningElement"){delete newObj.selfClosing;}if(ast.type==="JSXElement"){delete newObj.closingElement;}// We change {\'key\': value} into {key: value}\nif((ast.type==="Property"||ast.type==="ObjectProperty"||ast.type==="MethodDefinition"||ast.type==="ClassProperty"||ast.type==="TSPropertySignature"||ast.type==="ObjectTypeProperty")&&(0,_typeof3.default)(ast.key)==="object"&&ast.key&&(ast.key.type==="Literal"||ast.key.type==="StringLiteral"||ast.key.type==="Identifier")){delete newObj.key;}if(ast.type==="OptionalMemberExpression"&&ast.optional===false){newObj.type="MemberExpression";delete newObj.optional;}// Remove raw and cooked values from TemplateElement when it\'s CSS\n// styled-jsx\nif(ast.type==="JSXElement"&&ast.openingElement.name.name==="style"&&ast.openingElement.attributes.some(function(attr){return attr.name.name==="jsx";})){var templateLiterals=newObj.children.filter(function(child){return child.type==="JSXExpressionContainer"&&child.expression.type==="TemplateLiteral";}).map(function(container){return container.expression;});var quasis=templateLiterals.reduce(function(quasis,templateLiteral){return quasis.concat(templateLiteral.quasis);},[]);quasis.forEach(function(q){return delete q.value;});}// CSS template literals in css prop\nif(ast.type==="JSXAttribute"&&ast.name.name==="css"&&ast.value.type==="JSXExpressionContainer"&&ast.value.expression.type==="TemplateLiteral"){newObj.value.expression.quasis.forEach(function(q){return delete q.value;});}// Angular Components: Inline HTML template and Inline CSS styles\nvar expression=ast.expression||ast.callee;if(ast.type==="Decorator"&&expression.type==="CallExpression"&&expression.callee.name==="Component"&&expression.arguments.length===1){var astProps=ast.expression.arguments[0].properties;newObj.expression.arguments[0].properties.forEach(function(prop,index){var templateLiteral=null;switch(astProps[index].key.name){case"styles":if(prop.value.type==="ArrayExpression"){templateLiteral=prop.value.elements[0];}break;case"template":if(prop.value.type==="TemplateLiteral"){templateLiteral=prop.value;}break;}if(templateLiteral){templateLiteral.quasis.forEach(function(q){return delete q.value;});}});}// styled-components, graphql, markdown\nif(ast.type==="TaggedTemplateExpression"&&(ast.tag.type==="MemberExpression"||ast.tag.type==="Identifier"&&(ast.tag.name==="gql"||ast.tag.name==="graphql"||ast.tag.name==="css"||ast.tag.name==="md"||ast.tag.name==="markdown"||ast.tag.name==="html")||ast.tag.type==="CallExpression")){newObj.quasi.quasis.forEach(function(quasi){return delete quasi.value;});}if(ast.type==="TemplateLiteral"){// This checks for a leading comment that is exactly `/* GraphQL */`\n// In order to be in line with other implementations of this comment tag\n// we will not trim the comment value and we will expect exactly one space on\n// either side of the GraphQL string\n// Also see ./embed.js\nvar _hasLanguageComment=ast.leadingComments&&ast.leadingComments.some(function(comment){return comment.type==="CommentBlock"&&["GraphQL","HTML"].some(function(languageName){return comment.value===" ".concat(languageName," ");});});if(_hasLanguageComment||parent.type==="CallExpression"&&parent.callee.name==="graphql"){newObj.quasis.forEach(function(quasi){return delete quasi.value;});}}}var clean_1$1=clean$4;var getLast$2=util$1.getLast,hasNewline$4=util$1.hasNewline,hasNewlineInRange$2=util$1.hasNewlineInRange,hasIgnoreComment$3=util$1.hasIgnoreComment,hasNodeIgnoreComment$1=util$1.hasNodeIgnoreComment,skipWhitespace$2=util$1.skipWhitespace;var isIdentifierName=utils$1.keyword.isIdentifierNameES5;// We match any whitespace except line terminators because\n// Flow annotation comments cannot be split across lines. For example:\n//\n// (this /*\n// : any */).foo = 5;\n//\n// is not picked up by Flow (see https://github.com/facebook/flow/issues/7050), so\n// removing the newline would create a type annotation that the user did not intend\n// to create.\nvar NON_LINE_TERMINATING_WHITE_SPACE="(?:(?=.)\\\\s)";var FLOW_SHORTHAND_ANNOTATION=new RegExp("^".concat(NON_LINE_TERMINATING_WHITE_SPACE,"*:"));var FLOW_ANNOTATION=new RegExp("^".concat(NON_LINE_TERMINATING_WHITE_SPACE,"*::"));function hasFlowShorthandAnnotationComment(node){// https://flow.org/en/docs/types/comments/\n// Syntax example: const r = new (window.Request /*: Class<Request> */)("");\nreturn node.extra&&node.extra.parenthesized&&node.trailingComments&&node.trailingComments[0].value.match(FLOW_SHORTHAND_ANNOTATION);}function hasFlowAnnotationComment(comments){return comments&&comments[0].value.match(FLOW_ANNOTATION);}function hasNode(node,fn){if(!node||(0,_typeof3.default)(node)!=="object"){return false;}if(Array.isArray(node)){return node.some(function(value){return hasNode(value,fn);});}var result=fn(node);return typeof result==="boolean"?result:Object.keys(node).some(function(key){return hasNode(node[key],fn);});}function hasNakedLeftSide(node){return node.type==="AssignmentExpression"||node.type==="BinaryExpression"||node.type==="LogicalExpression"||node.type==="NGPipeExpression"||node.type==="ConditionalExpression"||node.type==="CallExpression"||node.type==="OptionalCallExpression"||node.type==="MemberExpression"||node.type==="OptionalMemberExpression"||node.type==="SequenceExpression"||node.type==="TaggedTemplateExpression"||node.type==="BindExpression"||node.type==="UpdateExpression"&&!node.prefix||node.type==="TSAsExpression"||node.type==="TSNonNullExpression";}function getLeftSide(node){if(node.expressions){return node.expressions[0];}return node.left||node.test||node.callee||node.object||node.tag||node.argument||node.expression;}function getLeftSidePathName(path,node){if(node.expressions){return["expressions",0];}if(node.left){return["left"];}if(node.test){return["test"];}if(node.object){return["object"];}if(node.callee){return["callee"];}if(node.tag){return["tag"];}if(node.argument){return["argument"];}if(node.expression){return["expression"];}throw new Error("Unexpected node has no left side",node);}var exportDeclarationTypes=new Set(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);function isExportDeclaration(node){return node&&exportDeclarationTypes.has(node.type);}function getParentExportDeclaration(path){var parentNode=path.getParentNode();if(path.getName()==="declaration"&&isExportDeclaration(parentNode)){return parentNode;}return null;}function isLiteral(node){return node.type==="BooleanLiteral"||node.type==="DirectiveLiteral"||node.type==="Literal"||node.type==="NullLiteral"||node.type==="NumericLiteral"||node.type==="RegExpLiteral"||node.type==="StringLiteral"||node.type==="TemplateLiteral"||node.type==="TSTypeLiteral"||node.type==="JSXText";}function isNumericLiteral(node){return node.type==="NumericLiteral"||node.type==="Literal"&&typeof node.value==="number";}function isStringLiteral(node){return node.type==="StringLiteral"||node.type==="Literal"&&typeof node.value==="string";}function isObjectType(n){return n.type==="ObjectTypeAnnotation"||n.type==="TSTypeLiteral";}function isFunctionOrArrowExpression(node){return node.type==="FunctionExpression"||node.type==="ArrowFunctionExpression";}function isFunctionOrArrowExpressionWithBody(node){return node.type==="FunctionExpression"||node.type==="ArrowFunctionExpression"&&node.body.type==="BlockStatement";}function isTemplateLiteral(node){return node.type==="TemplateLiteral";}// `inject` is used in AngularJS 1.x, `async` in Angular 2+\n// example: https://docs.angularjs.org/guide/unit-testing#using-beforeall-\nfunction isAngularTestWrapper(node){return(node.type==="CallExpression"||node.type==="OptionalCallExpression")&&node.callee.type==="Identifier"&&(node.callee.name==="async"||node.callee.name==="inject"||node.callee.name==="fakeAsync");}function isJSXNode(node){return node.type==="JSXElement"||node.type==="JSXFragment";}function isTheOnlyJSXElementInMarkdown(options,path){if(options.parentParser!=="markdown"&&options.parentParser!=="mdx"){return false;}var node=path.getNode();if(!node.expression||!isJSXNode(node.expression)){return false;}var parent=path.getParentNode();return parent.type==="Program"&&parent.body.length===1;}// Detect an expression node representing `{" "}`\nfunction isJSXWhitespaceExpression(node){return node.type==="JSXExpressionContainer"&&isLiteral(node.expression)&&node.expression.value===" "&&!node.expression.comments;}function isMemberExpressionChain(node){if(node.type!=="MemberExpression"&&node.type!=="OptionalMemberExpression"){return false;}if(node.object.type==="Identifier"){return true;}return isMemberExpressionChain(node.object);}function isGetterOrSetter(node){return node.kind==="get"||node.kind==="set";}function sameLocStart(nodeA,nodeB,options){return options.locStart(nodeA)===options.locStart(nodeB);}// TODO: This is a bad hack and we need a better way to distinguish between\n// arrow functions and otherwise\nfunction isFunctionNotation(node,options){return isGetterOrSetter(node)||sameLocStart(node,node.value,options);}// Hack to differentiate between the following two which have the same ast\n// type T = { method: () => void };\n// type T = { method(): void };\nfunction isObjectTypePropertyAFunction(node,options){return(node.type==="ObjectTypeProperty"||node.type==="ObjectTypeInternalSlot")&&node.value.type==="FunctionTypeAnnotation"&&!node.static&&!isFunctionNotation(node,options);}// Hack to differentiate between the following two which have the same ast\n// declare function f(a): void;\n// var f: (a) => void;\nfunction isTypeAnnotationAFunction(node,options){return(node.type==="TypeAnnotation"||node.type==="TSTypeAnnotation")&&node.typeAnnotation.type==="FunctionTypeAnnotation"&&!node.static&&!sameLocStart(node,node.typeAnnotation,options);}var binaryishNodeTypes=new Set(["BinaryExpression","LogicalExpression","NGPipeExpression"]);function isBinaryish(node){return binaryishNodeTypes.has(node.type);}function isMemberish(node){return node.type==="MemberExpression"||node.type==="OptionalMemberExpression"||node.type==="BindExpression"&&node.object;}function isSimpleFlowType(node){var flowTypeAnnotations=["AnyTypeAnnotation","NullLiteralTypeAnnotation","GenericTypeAnnotation","ThisTypeAnnotation","NumberTypeAnnotation","VoidTypeAnnotation","EmptyTypeAnnotation","MixedTypeAnnotation","BooleanTypeAnnotation","BooleanLiteralTypeAnnotation","StringTypeAnnotation"];return node&&flowTypeAnnotations.includes(node.type)&&!(node.type==="GenericTypeAnnotation"&&node.typeParameters);}var unitTestRe=/^(skip|[fx]?(it|describe|test))$/;function isSkipOrOnlyBlock(node){return(node.callee.type==="MemberExpression"||node.callee.type==="OptionalMemberExpression")&&node.callee.object.type==="Identifier"&&node.callee.property.type==="Identifier"&&unitTestRe.test(node.callee.object.name)&&(node.callee.property.name==="only"||node.callee.property.name==="skip");}function isUnitTestSetUp(n){var unitTestSetUpRe=/^(before|after)(Each|All)$/;return n.callee.type==="Identifier"&&unitTestSetUpRe.test(n.callee.name)&&n.arguments.length===1;}// eg; `describe("some string", (done) => {})`\nfunction isTestCall(n,parent){if(n.type!=="CallExpression"){return false;}if(n.arguments.length===1){if(isAngularTestWrapper(n)&&parent&&isTestCall(parent)){return isFunctionOrArrowExpression(n.arguments[0]);}if(isUnitTestSetUp(n)){return isAngularTestWrapper(n.arguments[0]);}}else if(n.arguments.length===2||n.arguments.length===3){if((n.callee.type==="Identifier"&&unitTestRe.test(n.callee.name)||isSkipOrOnlyBlock(n))&&(isTemplateLiteral(n.arguments[0])||isStringLiteral(n.arguments[0]))){// it("name", () => { ... }, 2500)\nif(n.arguments[2]&&!isNumericLiteral(n.arguments[2])){return false;}return(n.arguments.length===2?isFunctionOrArrowExpression(n.arguments[1]):isFunctionOrArrowExpressionWithBody(n.arguments[1])&&n.arguments[1].params.length<=1)||isAngularTestWrapper(n.arguments[1]);}}return false;}function hasLeadingComment$2(node){return node.comments&&node.comments.some(function(comment){return comment.leading;});}function hasTrailingComment(node){return node.comments&&node.comments.some(function(comment){return comment.trailing;});}function isCallOrOptionalCallExpression(node){return node.type==="CallExpression"||node.type==="OptionalCallExpression";}function hasDanglingComments(node){return node.comments&&node.comments.some(function(comment){return!comment.leading&&!comment.trailing;});}/** identify if an angular expression seems to have side effects */function hasNgSideEffect(path){return hasNode(path.getValue(),function(node){switch(node.type){case undefined:return false;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return true;}});}function isNgForOf(node,index,parentNode){return node.type==="NGMicrosyntaxKeyedExpression"&&node.key.name==="of"&&index===1&&parentNode.body[0].type==="NGMicrosyntaxLet"&&parentNode.body[0].value===null;}/** @param node {import("estree").TemplateLiteral} */function isSimpleTemplateLiteral(node){if(node.expressions.length===0){return false;}return node.expressions.every(function(expr){// Disallow comments since printDocToString can\'t print them here\nif(expr.comments){return false;}// Allow `x` and `this`\nif(expr.type==="Identifier"||expr.type==="ThisExpression"){return true;}// Allow `a.b.c`, `a.b[c]`, and `this.x.y`\nif(expr.type==="MemberExpression"||expr.type==="OptionalMemberExpression"){var _head=expr;while(_head.type==="MemberExpression"||_head.type==="OptionalMemberExpression"){if(_head.property.type!=="Identifier"&&_head.property.type!=="Literal"&&_head.property.type!=="StringLiteral"&&_head.property.type!=="NumericLiteral"){return false;}_head=_head.object;if(_head.comments){return false;}}if(_head.type==="Identifier"||_head.type==="ThisExpression"){return true;}return false;}return false;});}function getFlowVariance(path){if(!path.variance){return null;}// Babel 7.0 currently uses variance node type, and flow should\n// follow suit soon:\n// https://github.com/babel/babel/issues/4722\nvar variance=path.variance.kind||path.variance;switch(variance){case"plus":return"+";case"minus":return"-";default:/* istanbul ignore next */return variance;}}function classPropMayCauseASIProblems(path){var node=path.getNode();if(node.type!=="ClassProperty"){return false;}var name=node.key&&node.key.name;// this isn\'t actually possible yet with most parsers available today\n// so isn\'t properly tested yet.\nif((name==="static"||name==="get"||name==="set")&&!node.value&&!node.typeAnnotation){return true;}}function classChildNeedsASIProtection(node){if(!node){return;}if(node.static||node.accessibility// TypeScript\n){return false;}if(!node.computed){var _name9=node.key&&node.key.name;if(_name9==="in"||_name9==="instanceof"){return true;}}switch(node.type){case"ClassProperty":case"TSAbstractClassProperty":return node.computed;case"MethodDefinition":// Flow\ncase"TSAbstractMethodDefinition":// TypeScript\ncase"ClassMethod":case"ClassPrivateMethod":{// Babel\nvar isAsync=node.value?node.value.async:node.async;var isGenerator=node.value?node.value.generator:node.generator;if(isAsync||node.kind==="get"||node.kind==="set"){return false;}if(node.computed||isGenerator){return true;}return false;}case"TSIndexSignature":return true;default:/* istanbul ignore next */return false;}}function getTypeScriptMappedTypeModifier(tokenNode,keyword){if(tokenNode==="+"){return"+"+keyword;}else if(tokenNode==="-"){return"-"+keyword;}return keyword;}function hasNewlineBetweenOrAfterDecorators(node,options){return hasNewlineInRange$2(options.originalText,options.locStart(node.decorators[0]),options.locEnd(getLast$2(node.decorators)))||hasNewline$4(options.originalText,options.locEnd(getLast$2(node.decorators)));}// Only space, newline, carriage return, and tab are treated as whitespace\n// inside JSX.\nvar jsxWhitespaceChars=" \\n\\r\\t";var matchJsxWhitespaceRegex=new RegExp("(["+jsxWhitespaceChars+"]+)");var containsNonJsxWhitespaceRegex=new RegExp("[^"+jsxWhitespaceChars+"]");// Meaningful if it contains non-whitespace characters,\n// or it contains whitespace without a new line.\nfunction isMeaningfulJSXText(node){return isLiteral(node)&&(containsNonJsxWhitespaceRegex.test(rawText(node))||!/\\n/.test(rawText(node)));}function hasJsxIgnoreComment(path){var node=path.getValue();var parent=path.getParentNode();if(!parent||!node||!isJSXNode(node)||!isJSXNode(parent)){return false;}// Lookup the previous sibling, ignoring any empty JSXText elements\nvar index=parent.children.indexOf(node);var prevSibling=null;for(var i=index;i>0;i--){var candidate=parent.children[i-1];if(candidate.type==="JSXText"&&!isMeaningfulJSXText(candidate)){continue;}prevSibling=candidate;break;}return prevSibling&&prevSibling.type==="JSXExpressionContainer"&&prevSibling.expression.type==="JSXEmptyExpression"&&prevSibling.expression.comments&&prevSibling.expression.comments.find(function(comment){return comment.value.trim()==="prettier-ignore";});}function isEmptyJSXElement(node){if(node.children.length===0){return true;}if(node.children.length>1){return false;}// if there is one text child and does not contain any meaningful text\n// we can treat the element as empty.\nvar child=node.children[0];return isLiteral(child)&&!isMeaningfulJSXText(child);}function hasPrettierIgnore$4(path){return hasIgnoreComment$3(path)||hasJsxIgnoreComment(path);}function isLastStatement(path){var parent=path.getParentNode();if(!parent){return true;}var node=path.getValue();var body=(parent.body||parent.consequent).filter(function(stmt){return stmt.type!=="EmptyStatement";});return body&&body[body.length-1]===node;}function isFlowAnnotationComment(text,typeAnnotation,options){var start=options.locStart(typeAnnotation);var end=skipWhitespace$2(text,options.locEnd(typeAnnotation));return text.slice(start,start+2)==="/*"&&text.slice(end,end+2)==="*/";}function hasLeadingOwnLineComment(text,node,options){if(isJSXNode(node)){return hasNodeIgnoreComment$1(node);}var res=node.comments&&node.comments.some(function(comment){return comment.leading&&hasNewline$4(text,options.locEnd(comment));});return res;}// This recurses the return argument, looking for the first token\n// (the leftmost leaf node) and, if it (or its parents) has any\n// leadingComments, returns true (so it can be wrapped in parens).\nfunction returnArgumentHasLeadingComment(options,argument){if(hasLeadingOwnLineComment(options.originalText,argument,options)){return true;}if(hasNakedLeftSide(argument)){var leftMost=argument;var newLeftMost;while(newLeftMost=getLeftSide(leftMost)){leftMost=newLeftMost;if(hasLeadingOwnLineComment(options.originalText,leftMost,options)){return true;}}}return false;}function isStringPropSafeToCoerceToIdentifier(node,options){return isStringLiteral(node.key)&&isIdentifierName(node.key.value)&&options.parser!=="json"&&// With `--strictPropertyInitialization`, TS treats properties with quoted names differently than unquoted ones.\n// See https://github.com/microsoft/TypeScript/pull/20075\n!((options.parser==="typescript"||options.parser==="babel-ts")&&node.type==="ClassProperty");}function isJestEachTemplateLiteral(node,parentNode){/**\n     * describe.each`table`(name, fn)\n     * describe.only.each`table`(name, fn)\n     * describe.skip.each`table`(name, fn)\n     * test.each`table`(name, fn)\n     * test.only.each`table`(name, fn)\n     * test.skip.each`table`(name, fn)\n     *\n     * Ref: https://github.com/facebook/jest/pull/6102\n     */var jestEachTriggerRegex=/^[xf]?(describe|it|test)$/;return parentNode.type==="TaggedTemplateExpression"&&parentNode.quasi===node&&parentNode.tag.type==="MemberExpression"&&parentNode.tag.property.type==="Identifier"&&parentNode.tag.property.name==="each"&&(parentNode.tag.object.type==="Identifier"&&jestEachTriggerRegex.test(parentNode.tag.object.name)||parentNode.tag.object.type==="MemberExpression"&&parentNode.tag.object.property.type==="Identifier"&&(parentNode.tag.object.property.name==="only"||parentNode.tag.object.property.name==="skip")&&parentNode.tag.object.object.type==="Identifier"&&jestEachTriggerRegex.test(parentNode.tag.object.object.name));}function templateLiteralHasNewLines(template){return template.quasis.some(function(quasi){return quasi.value.raw.includes("\\n");});}function isTemplateOnItsOwnLine(n,text,options){return(n.type==="TemplateLiteral"&&templateLiteralHasNewLines(n)||n.type==="TaggedTemplateExpression"&&templateLiteralHasNewLines(n.quasi))&&!hasNewline$4(text,options.locStart(n),{backwards:true});}function needsHardlineAfterDanglingComment(node){if(!node.comments){return false;}var lastDanglingComment=getLast$2(node.comments.filter(function(comment){return!comment.leading&&!comment.trailing;}));return lastDanglingComment&&!comments$1.isBlockComment(lastDanglingComment);}// If we have nested conditional expressions, we want to print them in JSX mode\n// if there\'s at least one JSXElement somewhere in the tree.\n//\n// A conditional expression chain like this should be printed in normal mode,\n// because there aren\'t JSXElements anywhere in it:\n//\n// isA ? "A" : isB ? "B" : isC ? "C" : "Unknown";\n//\n// But a conditional expression chain like this should be printed in JSX mode,\n// because there is a JSXElement in the last ConditionalExpression:\n//\n// isA ? "A" : isB ? "B" : isC ? "C" : <span className="warning">Unknown</span>;\n//\n// This type of ConditionalExpression chain is structured like this in the AST:\n//\n// ConditionalExpression {\n//   test: ...,\n//   consequent: ...,\n//   alternate: ConditionalExpression {\n//     test: ...,\n//     consequent: ...,\n//     alternate: ConditionalExpression {\n//       test: ...,\n//       consequent: ...,\n//       alternate: ...,\n//     }\n//   }\n// }\n//\n// We want to traverse over that shape and convert it into a flat structure so\n// that we can find if there\'s a JSXElement somewhere inside.\nfunction getConditionalChainContents(node){// Given this code:\n//\n// // Using a ConditionalExpression as the consequent is uncommon, but should\n// // be handled.\n// A ? B : C ? D : E ? F ? G : H : I\n//\n// which has this AST:\n//\n// ConditionalExpression {\n//   test: Identifier(A),\n//   consequent: Identifier(B),\n//   alternate: ConditionalExpression {\n//     test: Identifier(C),\n//     consequent: Identifier(D),\n//     alternate: ConditionalExpression {\n//       test: Identifier(E),\n//       consequent: ConditionalExpression {\n//         test: Identifier(F),\n//         consequent: Identifier(G),\n//         alternate: Identifier(H),\n//       },\n//       alternate: Identifier(I),\n//     }\n//   }\n// }\n//\n// we should return this Array:\n//\n// [\n//   Identifier(A),\n//   Identifier(B),\n//   Identifier(C),\n//   Identifier(D),\n//   Identifier(E),\n//   Identifier(F),\n//   Identifier(G),\n//   Identifier(H),\n//   Identifier(I)\n// ];\n//\n// This loses the information about whether each node was the test,\n// consequent, or alternate, but we don\'t care about that here- we are only\n// flattening this structure to find if there\'s any JSXElements inside.\nvar nonConditionalExpressions=[];function recurse(node){if(node.type==="ConditionalExpression"){recurse(node.test);recurse(node.consequent);recurse(node.alternate);}else{nonConditionalExpressions.push(node);}}recurse(node);return nonConditionalExpressions;}function conditionalExpressionChainContainsJSX(node){return Boolean(getConditionalChainContents(node).find(isJSXNode));}// Logic to check for args with multiple anonymous functions. For instance,\n// the following call should be split on multiple lines for readability:\n// source.pipe(map((x) => x + x), filter((x) => x % 2 === 0))\nfunction isFunctionCompositionArgs(args){if(args.length<=1){return false;}var count=0;var _iterator38=_createForOfIteratorHelper(args),_step38;try{for(_iterator38.s();!(_step38=_iterator38.n()).done;){var arg=_step38.value;if(isFunctionOrArrowExpression(arg)){count+=1;if(count>1){return true;}}else if(isCallOrOptionalCallExpression(arg)){var _iterator39=_createForOfIteratorHelper(arg.arguments),_step39;try{for(_iterator39.s();!(_step39=_iterator39.n()).done;){var childArg=_step39.value;if(isFunctionOrArrowExpression(childArg)){return true;}}}catch(err){_iterator39.e(err);}finally{_iterator39.f();}}}}catch(err){_iterator38.e(err);}finally{_iterator38.f();}return false;}// Logic to determine if a call is a “long curried function call”.\n// See https://github.com/prettier/prettier/issues/1420.\n//\n// `connect(a, b, c)(d)`\n// In the above call expression, the second call is the parent node and the\n// first call is the current node.\nfunction isLongCurriedCallExpression(path){var node=path.getValue();var parent=path.getParentNode();return isCallOrOptionalCallExpression(node)&&isCallOrOptionalCallExpression(parent)&&parent.callee===node&&node.arguments.length>parent.arguments.length&&parent.arguments.length>0;}/**\n   * @param {import(\'estree\').Node} node\n   * @param {number} depth\n   * @returns {boolean}\n   */function isSimpleCallArgument(node,depth){if(depth>=2){return false;}var isChildSimple=function isChildSimple(child){return isSimpleCallArgument(child,depth+1);};var regexpPattern=node.type==="Literal"&&node.regex&&node.regex.pattern||node.type==="RegExpLiteral"&&node.pattern;if(regexpPattern&&regexpPattern.length>5){return false;}if(node.type==="Literal"||node.type==="BooleanLiteral"||node.type==="NullLiteral"||node.type==="NumericLiteral"||node.type==="StringLiteral"||node.type==="Identifier"||node.type==="ThisExpression"||node.type==="Super"||node.type==="BigIntLiteral"||node.type==="PrivateName"||node.type==="ArgumentPlaceholder"||node.type==="RegExpLiteral"||node.type==="Import"){return true;}if(node.type==="TemplateLiteral"){return node.expressions.every(isChildSimple);}if(node.type==="ObjectExpression"){return node.properties.every(function(p){return!p.computed&&(p.shorthand||p.value&&isChildSimple(p.value));});}if(node.type==="ArrayExpression"){return node.elements.every(function(x){return x==null||isChildSimple(x);});}if(node.type==="CallExpression"||node.type==="OptionalCallExpression"||node.type==="NewExpression"){return isSimpleCallArgument(node.callee,depth)&&node.arguments.every(isChildSimple);}if(node.type==="MemberExpression"||node.type==="OptionalMemberExpression"){return isSimpleCallArgument(node.object,depth)&&isSimpleCallArgument(node.property,depth);}if(node.type==="UnaryExpression"&&(node.operator==="!"||node.operator==="-")){return isSimpleCallArgument(node.argument,depth);}if(node.type==="TSNonNullExpression"){return isSimpleCallArgument(node.expression,depth);}return false;}function rawText(node){return node.extra?node.extra.raw:node.raw;}function identity$1(x){return x;}function isTSXFile(options){return options.filepath&&/\\.tsx$/i.test(options.filepath);}var utils$5={classChildNeedsASIProtection:classChildNeedsASIProtection,classPropMayCauseASIProblems:classPropMayCauseASIProblems,conditionalExpressionChainContainsJSX:conditionalExpressionChainContainsJSX,getFlowVariance:getFlowVariance,getLeftSidePathName:getLeftSidePathName,getParentExportDeclaration:getParentExportDeclaration,getTypeScriptMappedTypeModifier:getTypeScriptMappedTypeModifier,hasDanglingComments:hasDanglingComments,hasFlowAnnotationComment:hasFlowAnnotationComment,hasFlowShorthandAnnotationComment:hasFlowShorthandAnnotationComment,hasLeadingComment:hasLeadingComment$2,hasLeadingOwnLineComment:hasLeadingOwnLineComment,hasNakedLeftSide:hasNakedLeftSide,hasNewlineBetweenOrAfterDecorators:hasNewlineBetweenOrAfterDecorators,hasNgSideEffect:hasNgSideEffect,hasNode:hasNode,hasPrettierIgnore:hasPrettierIgnore$4,hasTrailingComment:hasTrailingComment,identity:identity$1,isBinaryish:isBinaryish,isCallOrOptionalCallExpression:isCallOrOptionalCallExpression,isEmptyJSXElement:isEmptyJSXElement,isExportDeclaration:isExportDeclaration,isFlowAnnotationComment:isFlowAnnotationComment,isFunctionCompositionArgs:isFunctionCompositionArgs,isFunctionNotation:isFunctionNotation,isFunctionOrArrowExpression:isFunctionOrArrowExpression,isGetterOrSetter:isGetterOrSetter,isJestEachTemplateLiteral:isJestEachTemplateLiteral,isJSXNode:isJSXNode,isJSXWhitespaceExpression:isJSXWhitespaceExpression,isLastStatement:isLastStatement,isLiteral:isLiteral,isLongCurriedCallExpression:isLongCurriedCallExpression,isSimpleCallArgument:isSimpleCallArgument,isMeaningfulJSXText:isMeaningfulJSXText,isMemberExpressionChain:isMemberExpressionChain,isMemberish:isMemberish,isNgForOf:isNgForOf,isNumericLiteral:isNumericLiteral,isObjectType:isObjectType,isObjectTypePropertyAFunction:isObjectTypePropertyAFunction,isSimpleFlowType:isSimpleFlowType,isSimpleTemplateLiteral:isSimpleTemplateLiteral,isStringLiteral:isStringLiteral,isStringPropSafeToCoerceToIdentifier:isStringPropSafeToCoerceToIdentifier,isTemplateOnItsOwnLine:isTemplateOnItsOwnLine,isTestCall:isTestCall,isTheOnlyJSXElementInMarkdown:isTheOnlyJSXElementInMarkdown,isTSXFile:isTSXFile,isTypeAnnotationAFunction:isTypeAnnotationAFunction,matchJsxWhitespaceRegex:matchJsxWhitespaceRegex,needsHardlineAfterDanglingComment:needsHardlineAfterDanglingComment,rawText:rawText,returnArgumentHasLeadingComment:returnArgumentHasLeadingComment};var getLeftSidePathName$1=utils$5.getLeftSidePathName,hasFlowShorthandAnnotationComment$1=utils$5.hasFlowShorthandAnnotationComment,hasNakedLeftSide$1=utils$5.hasNakedLeftSide,hasNode$1=utils$5.hasNode;function needsParens(path,options){var parent=path.getParentNode();if(!parent){return false;}var name=path.getName();var node=path.getNode();// If the value of this path is some child of a Node and not a Node\n// itself, then it doesn\'t need parentheses. Only Node objects (in\n// fact, only Expression nodes) need parentheses.\nif(path.getValue()!==node){return false;}// to avoid unexpected `}}` in HTML interpolations\nif(options.__isInHtmlInterpolation&&!options.bracketSpacing&&endsWithRightBracket(node)&&isFollowedByRightBracket(path)){return true;}// Only statements don\'t need parentheses.\nif(isStatement(node)){return false;}if(// Preserve parens if we have a Flow annotation comment, unless we\'re using the Flow\n// parser. The Flow parser turns Flow comments into type annotation nodes in its\n// AST, which we handle separately.\noptions.parser!=="flow"&&hasFlowShorthandAnnotationComment$1(path.getValue())){return true;}// Identifiers never need parentheses.\nif(node.type==="Identifier"){// ...unless those identifiers are embed placeholders. They might be substituted by complex\n// expressions, so the parens around them should not be dropped. Example (JS-in-HTML-in-JS):\n//     let tpl = html`<script> f((${expr}) / 2); <\/script>`;\n// If the inner JS formatter removes the parens, the expression might change its meaning:\n//     f((a + b) / 2)  vs  f(a + b / 2)\nif(node.extra&&node.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\\d+_\\d+_IN_JS$/.test(node.name)){return true;}return false;}if(parent.type==="ParenthesizedExpression"){return false;}// Add parens around the extends clause of a class. It is needed for almost\n// all expressions.\nif((parent.type==="ClassDeclaration"||parent.type==="ClassExpression")&&parent.superClass===node&&(node.type==="ArrowFunctionExpression"||node.type==="AssignmentExpression"||node.type==="AwaitExpression"||node.type==="BinaryExpression"||node.type==="ConditionalExpression"||node.type==="LogicalExpression"||node.type==="NewExpression"||node.type==="ObjectExpression"||node.type==="ParenthesizedExpression"||node.type==="SequenceExpression"||node.type==="TaggedTemplateExpression"||node.type==="UnaryExpression"||node.type==="UpdateExpression"||node.type==="YieldExpression")){return true;}if(parent.type==="ExportDefaultDeclaration"){return(// `export default function` or `export default class` can\'t be followed by\n// anything after. So an expression like `export default (function(){}).toString()`\n// needs to be followed by a parentheses\nshouldWrapFunctionForExportDefault(path,options)||// `export default (foo, bar)` also needs parentheses\nnode.type==="SequenceExpression");}if(parent.type==="Decorator"&&parent.expression===node){var hasCallExpression=false;var hasMemberExpression=false;var current=node;while(current){switch(current.type){case"MemberExpression":hasMemberExpression=true;current=current.object;break;case"CallExpression":if(/** @(x().y) */hasMemberExpression||/** @(x().y()) */hasCallExpression){return true;}hasCallExpression=true;current=current.callee;break;case"Identifier":return false;default:return true;}}return true;}if(parent.type==="ArrowFunctionExpression"&&parent.body===node&&node.type!=="SequenceExpression"&&// these have parens added anyway\nutil$1.startsWithNoLookaheadToken(node,/* forbidFunctionClassAndDoExpr */false)||parent.type==="ExpressionStatement"&&util$1.startsWithNoLookaheadToken(node,/* forbidFunctionClassAndDoExpr */true)){return true;}switch(node.type){case"SpreadElement":case"SpreadProperty":return parent.type==="MemberExpression"&&name==="object"&&parent.object===node;case"UpdateExpression":if(parent.type==="UnaryExpression"){return node.prefix&&(node.operator==="++"&&parent.operator==="+"||node.operator==="--"&&parent.operator==="-");}// else fallthrough\ncase"UnaryExpression":switch(parent.type){case"UnaryExpression":return node.operator===parent.operator&&(node.operator==="+"||node.operator==="-");case"BindExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"TaggedTemplateExpression":return true;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"BinaryExpression":return parent.operator==="**"&&name==="left";case"TSNonNullExpression":return true;default:return false;}case"BinaryExpression":{if(parent.type==="UpdateExpression"){return true;}var isLeftOfAForStatement=function isLeftOfAForStatement(node){var i=0;while(node){var _parent=path.getParentNode(i++);if(!_parent){return false;}if(_parent.type==="ForStatement"&&_parent.init===node){return true;}node=_parent;}return false;};if(node.operator==="in"&&isLeftOfAForStatement(node)){return true;}}// fallthrough\ncase"TSTypeAssertion":case"TSAsExpression":case"LogicalExpression":switch(parent.type){case"ConditionalExpression":return node.type==="TSAsExpression";case"CallExpression":case"NewExpression":case"OptionalCallExpression":return name==="callee";case"ClassExpression":case"ClassDeclaration":return name==="superClass"&&parent.superClass===node;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSAsExpression":case"TSNonNullExpression":case"UpdateExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"AssignmentExpression":return parent.left===node&&(node.type==="TSTypeAssertion"||node.type==="TSAsExpression");case"LogicalExpression":if(node.type==="LogicalExpression"){return parent.operator!==node.operator;}// else fallthrough\ncase"BinaryExpression":{if(!node.operator&&node.type!=="TSTypeAssertion"){return true;}var po=parent.operator;var pp=util$1.getPrecedence(po);var no=node.operator;var np=util$1.getPrecedence(no);if(pp>np){return true;}if(pp===np&&name==="right"){assert.strictEqual(parent.right,node);return true;}if(pp===np&&!util$1.shouldFlatten(po,no)){return true;}if(pp<np&&no==="%"){return po==="+"||po==="-";}// Add parenthesis when working with bitwise operators\n// It\'s not strictly needed but helps with code understanding\nif(util$1.isBitwiseOperator(po)){return true;}return false;}default:return false;}case"SequenceExpression":switch(parent.type){case"ReturnStatement":return false;case"ForStatement":// Although parentheses wouldn\'t hurt around sequence\n// expressions in the head of for loops, traditional style\n// dictates that e.g. i++, j++ should not be wrapped with\n// parentheses.\nreturn false;case"ExpressionStatement":return name!=="expression";case"ArrowFunctionExpression":// We do need parentheses, but SequenceExpressions are handled\n// specially when printing bodies of arrow functions.\nreturn name!=="body";default:// Otherwise err on the side of overparenthesization, adding\n// explicit exceptions above if this proves overzealous.\nreturn true;}case"YieldExpression":if(parent.type==="UnaryExpression"||parent.type==="AwaitExpression"||parent.type==="TSAsExpression"||parent.type==="TSNonNullExpression"){return true;}// else fallthrough\ncase"AwaitExpression":switch(parent.type){case"TaggedTemplateExpression":case"UnaryExpression":case"BinaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSNonNullExpression":case"BindExpression":return true;case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"ConditionalExpression":return parent.test===node;default:return false;}case"TSJSDocFunctionType":case"TSConditionalType":if(parent.type==="TSConditionalType"&&node===parent.extendsType){return true;}// fallthrough\ncase"TSFunctionType":case"TSConstructorType":if(parent.type==="TSConditionalType"&&node===parent.checkType){return true;}// fallthrough\ncase"TSUnionType":case"TSIntersectionType":if(parent.type==="TSUnionType"||parent.type==="TSIntersectionType"){return true;}// fallthrough\ncase"TSTypeOperator":case"TSInferType":return parent.type==="TSArrayType"||parent.type==="TSOptionalType"||parent.type==="TSRestType"||parent.type==="TSIndexedAccessType"&&node===parent.objectType||parent.type==="TSTypeOperator"||parent.type==="TSTypeAnnotation"&&/^TSJSDoc/.test(path.getParentNode(1).type);case"ArrayTypeAnnotation":return parent.type==="NullableTypeAnnotation";case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return parent.type==="ArrayTypeAnnotation"||parent.type==="NullableTypeAnnotation"||parent.type==="IntersectionTypeAnnotation"||parent.type==="UnionTypeAnnotation";case"NullableTypeAnnotation":return parent.type==="ArrayTypeAnnotation";case"FunctionTypeAnnotation":{var ancestor=parent.type==="NullableTypeAnnotation"?path.getParentNode(1):parent;return ancestor.type==="UnionTypeAnnotation"||ancestor.type==="IntersectionTypeAnnotation"||ancestor.type==="ArrayTypeAnnotation"||// We should check ancestor\'s parent to know whether the parentheses\n// are really needed, but since ??T doesn\'t make sense this check\n// will almost never be true.\nancestor.type==="NullableTypeAnnotation";}case"StringLiteral":case"NumericLiteral":case"Literal":if(typeof node.value==="string"&&parent.type==="ExpressionStatement"&&(// TypeScript workaround for https://github.com/JamesHenry/typescript-estree/issues/2\n// See corresponding workaround in printer.js case: "Literal"\noptions.parser!=="typescript"&&!parent.directive||options.parser==="typescript"&&options.originalText.charAt(options.locStart(node)-1)==="(")){// To avoid becoming a directive\nvar grandParent=path.getParentNode(1);return grandParent.type==="Program"||grandParent.type==="BlockStatement";}return parent.type==="MemberExpression"&&typeof node.value==="number"&&name==="object"&&parent.object===node;case"AssignmentExpression":{var _grandParent=path.getParentNode(1);if(parent.type==="ArrowFunctionExpression"&&parent.body===node){return true;}else if(parent.type==="ClassProperty"&&parent.key===node&&parent.computed){return false;}else if(parent.type==="TSPropertySignature"&&parent.name===node){return false;}else if(parent.type==="ForStatement"&&(parent.init===node||parent.update===node)){return false;}else if(parent.type==="ExpressionStatement"){return node.left.type==="ObjectPattern";}else if(parent.type==="TSPropertySignature"&&parent.key===node){return false;}else if(parent.type==="AssignmentExpression"){return false;}else if(parent.type==="SequenceExpression"&&_grandParent&&_grandParent.type==="ForStatement"&&(_grandParent.init===parent||_grandParent.update===parent)){return false;}else if(parent.type==="Property"&&parent.value===node){return false;}else if(parent.type==="NGChainedExpression"){return false;}return true;}case"ConditionalExpression":switch(parent.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSNonNullExpression":return true;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"ConditionalExpression":return name==="test"&&parent.test===node;case"MemberExpression":case"OptionalMemberExpression":return name==="object";default:return false;}case"FunctionExpression":switch(parent.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":// Not always necessary, but it\'s clearer to the reader if IIFEs are wrapped in parentheses.\n// Is necessary if it is `expression` of `ExpressionStatement`.\nreturn name==="callee";case"TaggedTemplateExpression":return true;// This is basically a kind of IIFE.\ndefault:return false;}case"ArrowFunctionExpression":switch(parent.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return name==="callee";case"MemberExpression":case"OptionalMemberExpression":return name==="object";case"TSAsExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"BinaryExpression":case"AwaitExpression":case"TSTypeAssertion":return true;case"ConditionalExpression":return name==="test";default:return false;}case"ClassExpression":switch(parent.type){case"NewExpression":return name==="callee"&&parent.callee===node;default:return false;}case"OptionalMemberExpression":case"OptionalCallExpression":if(parent.type==="MemberExpression"&&name==="object"||(parent.type==="CallExpression"||parent.type==="NewExpression")&&name==="callee"){return true;}// fallthrough\ncase"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if((parent.type==="BindExpression"||parent.type==="NewExpression")&&name==="callee"){var _object=node;while(_object){switch(_object.type){case"CallExpression":case"OptionalCallExpression":return true;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":_object=_object.object;break;// tagged templates are basically member expressions from a grammar perspective\n// see https://tc39.github.io/ecma262/#prod-MemberExpression\ncase"TaggedTemplateExpression":_object=_object.tag;break;case"TSNonNullExpression":_object=_object.expression;break;default:return false;}}}return false;case"BindExpression":return(parent.type==="BindExpression"||parent.type==="NewExpression")&&name==="callee"||(parent.type==="MemberExpression"||parent.type==="OptionalMemberExpression")&&name==="object";case"NGPipeExpression":if(parent.type==="NGRoot"||parent.type==="NGMicrosyntaxExpression"||parent.type==="ObjectProperty"||parent.type==="ArrayExpression"||(parent.type==="CallExpression"||parent.type==="OptionalCallExpression")&&parent.arguments[name]===node||parent.type==="NGPipeExpression"&&name==="right"||parent.type==="MemberExpression"&&name==="property"||parent.type==="AssignmentExpression"){return false;}return true;case"JSXFragment":case"JSXElement":return name==="callee"||parent.type!=="ArrayExpression"&&parent.type!=="ArrowFunctionExpression"&&parent.type!=="AssignmentExpression"&&parent.type!=="AssignmentPattern"&&parent.type!=="BinaryExpression"&&parent.type!=="CallExpression"&&parent.type!=="NewExpression"&&parent.type!=="ConditionalExpression"&&parent.type!=="ExpressionStatement"&&parent.type!=="JsExpressionRoot"&&parent.type!=="JSXAttribute"&&parent.type!=="JSXElement"&&parent.type!=="JSXExpressionContainer"&&parent.type!=="JSXFragment"&&parent.type!=="LogicalExpression"&&parent.type!=="ObjectProperty"&&parent.type!=="OptionalCallExpression"&&parent.type!=="Property"&&parent.type!=="ReturnStatement"&&parent.type!=="ThrowStatement"&&parent.type!=="TypeCastExpression"&&parent.type!=="VariableDeclarator"&&parent.type!=="YieldExpression";case"TypeAnnotation":return name==="returnType"&&parent.type==="ArrowFunctionExpression"&&includesFunctionTypeInObjectType(node);}return false;}function isStatement(node){return node.type==="BlockStatement"||node.type==="BreakStatement"||node.type==="ClassBody"||node.type==="ClassDeclaration"||node.type==="ClassMethod"||node.type==="ClassProperty"||node.type==="ClassPrivateProperty"||node.type==="ContinueStatement"||node.type==="DebuggerStatement"||node.type==="DeclareClass"||node.type==="DeclareExportAllDeclaration"||node.type==="DeclareExportDeclaration"||node.type==="DeclareFunction"||node.type==="DeclareInterface"||node.type==="DeclareModule"||node.type==="DeclareModuleExports"||node.type==="DeclareVariable"||node.type==="DoWhileStatement"||node.type==="EnumDeclaration"||node.type==="ExportAllDeclaration"||node.type==="ExportDefaultDeclaration"||node.type==="ExportNamedDeclaration"||node.type==="ExpressionStatement"||node.type==="ForInStatement"||node.type==="ForOfStatement"||node.type==="ForStatement"||node.type==="FunctionDeclaration"||node.type==="IfStatement"||node.type==="ImportDeclaration"||node.type==="InterfaceDeclaration"||node.type==="LabeledStatement"||node.type==="MethodDefinition"||node.type==="ReturnStatement"||node.type==="SwitchStatement"||node.type==="ThrowStatement"||node.type==="TryStatement"||node.type==="TSDeclareFunction"||node.type==="TSEnumDeclaration"||node.type==="TSImportEqualsDeclaration"||node.type==="TSInterfaceDeclaration"||node.type==="TSModuleDeclaration"||node.type==="TSNamespaceExportDeclaration"||node.type==="TypeAlias"||node.type==="VariableDeclaration"||node.type==="WhileStatement"||node.type==="WithStatement";}function includesFunctionTypeInObjectType(node){return hasNode$1(node,function(n1){return n1.type==="ObjectTypeAnnotation"&&hasNode$1(n1,function(n2){return n2.type==="FunctionTypeAnnotation"||undefined;})||undefined;});}function endsWithRightBracket(node){switch(node.type){case"ObjectExpression":return true;default:return false;}}function isFollowedByRightBracket(path){var node=path.getValue();var parent=path.getParentNode();var name=path.getName();switch(parent.type){case"NGPipeExpression":if(typeof name==="number"&&parent.arguments[name]===node&&parent.arguments.length-1===name){return path.callParent(isFollowedByRightBracket);}break;case"ObjectProperty":if(name==="value"){var parentParent=path.getParentNode(1);return parentParent.properties[parentParent.properties.length-1]===parent;}break;case"BinaryExpression":case"LogicalExpression":if(name==="right"){return path.callParent(isFollowedByRightBracket);}break;case"ConditionalExpression":if(name==="alternate"){return path.callParent(isFollowedByRightBracket);}break;case"UnaryExpression":if(parent.prefix){return path.callParent(isFollowedByRightBracket);}break;}return false;}function shouldWrapFunctionForExportDefault(path,options){var node=path.getValue();var parent=path.getParentNode();if(node.type==="FunctionExpression"||node.type==="ClassExpression"){return parent.type==="ExportDefaultDeclaration"||// in some cases the function is already wrapped\n// (e.g. `export default (function() {})();`)\n// in this case we don\'t need to add extra parens\n!needsParens(path,options);}if(!hasNakedLeftSide$1(node)||parent.type!=="ExportDefaultDeclaration"&&needsParens(path,options)){return false;}return path.call.apply(path,[function(childPath){return shouldWrapFunctionForExportDefault(childPath,options);}].concat((0,_toConsumableArray3.default)(getLeftSidePathName$1(path,node))));}var needsParens_1=needsParens;var _document$builders9=document.builders,concat$c=_document$builders9.concat,join$8=_document$builders9.join,line$8=_document$builders9.line;function printHtmlBinding(path,options,print){var node=path.getValue();if(options.__onHtmlBindingRoot&&path.getName()===null){options.__onHtmlBindingRoot(node,options);}if(node.type!=="File"){return;}if(options.__isVueForBindingLeft){return path.call(function(functionDeclarationPath){var _functionDeclarationP=functionDeclarationPath.getValue(),params=_functionDeclarationP.params;return concat$c([params.length>1?"(":"",join$8(concat$c([",",line$8]),functionDeclarationPath.map(print,"params")),params.length>1?")":""]);},"program","body",0);}if(options.__isVueSlotScope){return path.call(function(functionDeclarationPath){return join$8(concat$c([",",line$8]),functionDeclarationPath.map(print,"params"));},"program","body",0);}}// based on https://github.com/prettier/prettier/blob/master/src/language-html/syntax-vue.js isVueEventBindingExpression()\nfunction isVueEventBindingExpression$2(node){switch(node.type){case"MemberExpression":switch(node.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return isVueEventBindingExpression$2(node.object);}return false;case"Identifier":return true;default:return false;}}var htmlBinding={isVueEventBindingExpression:isVueEventBindingExpression$2,printHtmlBinding:printHtmlBinding};function preprocess$1(ast,options){switch(options.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":return Object.assign({},ast,{type:options.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:ast,comments:[],rootMarker:options.rootMarker});default:return ast;}}var preprocess_1$1=preprocess$1;var shouldFlatten$1=util$1.shouldFlatten,getNextNonSpaceNonCommentCharacter$1=util$1.getNextNonSpaceNonCommentCharacter,hasNewline$5=util$1.hasNewline,hasNewlineInRange$3=util$1.hasNewlineInRange,getLast$3=util$1.getLast,getStringWidth$3=util$1.getStringWidth,printString$2=util$1.printString,printNumber$2=util$1.printNumber,hasIgnoreComment$4=util$1.hasIgnoreComment,hasNodeIgnoreComment$2=util$1.hasNodeIgnoreComment,getPenultimate$1=util$1.getPenultimate,startsWithNoLookaheadToken$1=util$1.startsWithNoLookaheadToken,getIndentSize$2=util$1.getIndentSize,getPreferredQuote$1=util$1.getPreferredQuote;var isNextLineEmpty$4=utilShared.isNextLineEmpty,isNextLineEmptyAfterIndex$2=utilShared.isNextLineEmptyAfterIndex,getNextNonSpaceNonCommentCharacterIndex$3=utilShared.getNextNonSpaceNonCommentCharacterIndex;var insertPragma$7=pragma.insertPragma;var printHtmlBinding$1=htmlBinding.printHtmlBinding,isVueEventBindingExpression$3=htmlBinding.isVueEventBindingExpression;var classChildNeedsASIProtection$1=utils$5.classChildNeedsASIProtection,classPropMayCauseASIProblems$1=utils$5.classPropMayCauseASIProblems,conditionalExpressionChainContainsJSX$1=utils$5.conditionalExpressionChainContainsJSX,getFlowVariance$1=utils$5.getFlowVariance,getLeftSidePathName$2=utils$5.getLeftSidePathName,getParentExportDeclaration$1=utils$5.getParentExportDeclaration,getTypeScriptMappedTypeModifier$1=utils$5.getTypeScriptMappedTypeModifier,hasDanglingComments$1=utils$5.hasDanglingComments,hasFlowAnnotationComment$1=utils$5.hasFlowAnnotationComment,hasFlowShorthandAnnotationComment$2=utils$5.hasFlowShorthandAnnotationComment,hasLeadingComment$3=utils$5.hasLeadingComment,hasLeadingOwnLineComment$1=utils$5.hasLeadingOwnLineComment,hasNakedLeftSide$2=utils$5.hasNakedLeftSide,hasNewlineBetweenOrAfterDecorators$1=utils$5.hasNewlineBetweenOrAfterDecorators,hasNgSideEffect$1=utils$5.hasNgSideEffect,hasPrettierIgnore$5=utils$5.hasPrettierIgnore,hasTrailingComment$1=utils$5.hasTrailingComment,identity$2=utils$5.identity,isBinaryish$1=utils$5.isBinaryish,isCallOrOptionalCallExpression$1=utils$5.isCallOrOptionalCallExpression,isEmptyJSXElement$1=utils$5.isEmptyJSXElement,isExportDeclaration$1=utils$5.isExportDeclaration,isFlowAnnotationComment$1=utils$5.isFlowAnnotationComment,isFunctionCompositionArgs$1=utils$5.isFunctionCompositionArgs,isFunctionNotation$1=utils$5.isFunctionNotation,isFunctionOrArrowExpression$1=utils$5.isFunctionOrArrowExpression,isGetterOrSetter$1=utils$5.isGetterOrSetter,isJestEachTemplateLiteral$1=utils$5.isJestEachTemplateLiteral,isJSXNode$1=utils$5.isJSXNode,isJSXWhitespaceExpression$1=utils$5.isJSXWhitespaceExpression,isLastStatement$1=utils$5.isLastStatement,isLiteral$1=utils$5.isLiteral,isLongCurriedCallExpression$1=utils$5.isLongCurriedCallExpression,isMeaningfulJSXText$1=utils$5.isMeaningfulJSXText,isMemberExpressionChain$1=utils$5.isMemberExpressionChain,isMemberish$1=utils$5.isMemberish,isNgForOf$1=utils$5.isNgForOf,isNumericLiteral$1=utils$5.isNumericLiteral,isObjectType$1=utils$5.isObjectType,isObjectTypePropertyAFunction$1=utils$5.isObjectTypePropertyAFunction,isSimpleCallArgument$1=utils$5.isSimpleCallArgument,isSimpleFlowType$1=utils$5.isSimpleFlowType,isSimpleTemplateLiteral$1=utils$5.isSimpleTemplateLiteral,isStringLiteral$1=utils$5.isStringLiteral,isStringPropSafeToCoerceToIdentifier$1=utils$5.isStringPropSafeToCoerceToIdentifier,isTemplateOnItsOwnLine$1=utils$5.isTemplateOnItsOwnLine,isTestCall$1=utils$5.isTestCall,isTheOnlyJSXElementInMarkdown$1=utils$5.isTheOnlyJSXElementInMarkdown,isTSXFile$1=utils$5.isTSXFile,isTypeAnnotationAFunction$1=utils$5.isTypeAnnotationAFunction,matchJsxWhitespaceRegex$1=utils$5.matchJsxWhitespaceRegex,needsHardlineAfterDanglingComment$1=utils$5.needsHardlineAfterDanglingComment,rawText$1=utils$5.rawText,returnArgumentHasLeadingComment$1=utils$5.returnArgumentHasLeadingComment;var needsQuoteProps=new WeakMap();var _document$builders10=document.builders,concat$d=_document$builders10.concat,join$9=_document$builders10.join,line$9=_document$builders10.line,hardline$9=_document$builders10.hardline,softline$6=_document$builders10.softline,literalline$4=_document$builders10.literalline,group$b=_document$builders10.group,indent$7=_document$builders10.indent,align$1=_document$builders10.align,conditionalGroup$1=_document$builders10.conditionalGroup,fill$4=_document$builders10.fill,ifBreak$6=_document$builders10.ifBreak,breakParent$3=_document$builders10.breakParent,lineSuffixBoundary$1=_document$builders10.lineSuffixBoundary,addAlignmentToDoc$2=_document$builders10.addAlignmentToDoc,dedent$2=_document$builders10.dedent,_document$utils3=document.utils,willBreak$1=_document$utils3.willBreak,isLineNext$1=_document$utils3.isLineNext,isEmpty$1=_document$utils3.isEmpty,removeLines$2=_document$utils3.removeLines,printDocToString$2=document.printer.printDocToString;var uid=0;function shouldPrintComma$1(options,level){level=level||"es5";switch(options.trailingComma){case"all":if(level==="all"){return true;}// fallthrough\ncase"es5":if(level==="es5"){return true;}// fallthrough\ncase"none":default:return false;}}function genericPrint$3(path,options,printPath,args){var node=path.getValue();var needsParens=false;var linesWithoutParens=printPathNoParens(path,options,printPath,args);if(!node||isEmpty$1(linesWithoutParens)){return linesWithoutParens;}var parentExportDecl=getParentExportDeclaration$1(path);var decorators=[];if(node.type==="ClassMethod"||node.type==="ClassPrivateMethod"||node.type==="ClassProperty"||node.type==="TSAbstractClassProperty"||node.type==="ClassPrivateProperty"||node.type==="MethodDefinition"||node.type==="TSAbstractMethodDefinition"||node.type==="TSDeclareMethod");else if(node.decorators&&node.decorators.length>0&&// If the parent node is an export declaration and the decorator\n// was written before the export, the export will be responsible\n// for printing the decorators.\n!(parentExportDecl&&options.locStart(parentExportDecl,{ignoreDecorators:true})>options.locStart(node.decorators[0]))){var shouldBreak=node.type==="ClassExpression"||node.type==="ClassDeclaration"||hasNewlineBetweenOrAfterDecorators$1(node,options);var separator=shouldBreak?hardline$9:line$9;path.each(function(decoratorPath){var decorator=decoratorPath.getValue();if(decorator.expression){decorator=decorator.expression;}else{decorator=decorator.callee;}decorators.push(printPath(decoratorPath),separator);},"decorators");if(parentExportDecl){decorators.unshift(hardline$9);}}else if(isExportDeclaration$1(node)&&node.declaration&&node.declaration.decorators&&node.declaration.decorators.length>0&&// Only print decorators here if they were written before the export,\n// otherwise they are printed by the node.declaration\noptions.locStart(node,{ignoreDecorators:true})>options.locStart(node.declaration.decorators[0])){// Export declarations are responsible for printing any decorators\n// that logically apply to node.declaration.\npath.each(function(decoratorPath){var decorator=decoratorPath.getValue();var prefix=decorator.type==="Decorator"?"":"@";decorators.push(prefix,printPath(decoratorPath),hardline$9);},"declaration","decorators");}else{// Nodes with decorators can\'t have parentheses, so we can avoid\n// computing pathNeedsParens() except in this case.\nneedsParens=needsParens_1(path,options);}var parts=[];if(needsParens){parts.unshift("(");}parts.push(linesWithoutParens);if(needsParens){var _node=path.getValue();if(hasFlowShorthandAnnotationComment$2(_node)){parts.push(" /*");parts.push(_node.trailingComments[0].value.trimStart());parts.push("*/");_node.trailingComments[0].printed=true;}parts.push(")");}if(decorators.length>0){return group$b(concat$d(decorators.concat(parts)));}return concat$d(parts);}function printDecorators(path,options,print){var node=path.getValue();return group$b(concat$d([join$9(line$9,path.map(print,"decorators")),hasNewlineBetweenOrAfterDecorators$1(node,options)?hardline$9:line$9]));}/**\n   * The following is the shared logic for\n   * ternary operators, namely ConditionalExpression\n   * and TSConditionalType\n   * @typedef {Object} OperatorOptions\n   * @property {() => Array<string | Doc>} beforeParts - Parts to print before the `?`.\n   * @property {(breakClosingParen: boolean) => Array<string | Doc>} afterParts - Parts to print after the conditional expression.\n   * @property {boolean} shouldCheckJsx - Whether to check for and print in JSX mode.\n   * @property {string} conditionalNodeType - The type of the conditional expression node, ie "ConditionalExpression" or "TSConditionalType".\n   * @property {string} consequentNodePropertyName - The property at which the consequent node can be found on the main node, eg "consequent".\n   * @property {string} alternateNodePropertyName - The property at which the alternate node can be found on the main node, eg "alternate".\n   * @property {string[]} testNodePropertyNames - The properties at which the test nodes can be found on the main node, eg "test".\n   * @param {FastPath} path - The path to the ConditionalExpression/TSConditionalType node.\n   * @param {Options} options - Prettier options\n   * @param {Function} print - Print function to call recursively\n   * @param {OperatorOptions} operatorOptions\n   * @returns Doc\n   */function printTernaryOperator(path,options,print,operatorOptions){var node=path.getValue();var consequentNode=node[operatorOptions.consequentNodePropertyName];var alternateNode=node[operatorOptions.alternateNodePropertyName];var parts=[];// We print a ConditionalExpression in either "JSX mode" or "normal mode".\n// See tests/jsx/conditional-expression.js for more info.\nvar jsxMode=false;var parent=path.getParentNode();var isParentTest=parent.type===operatorOptions.conditionalNodeType&&operatorOptions.testNodePropertyNames.some(function(prop){return parent[prop]===node;});var forceNoIndent=parent.type===operatorOptions.conditionalNodeType&&!isParentTest;// Find the outermost non-ConditionalExpression parent, and the outermost\n// ConditionalExpression parent. We\'ll use these to determine if we should\n// print in JSX mode.\nvar currentParent;var previousParent;var i=0;do{previousParent=currentParent||node;currentParent=path.getParentNode(i);i++;}while(currentParent&&currentParent.type===operatorOptions.conditionalNodeType&&operatorOptions.testNodePropertyNames.every(function(prop){return currentParent[prop]!==previousParent;}));var firstNonConditionalParent=currentParent||parent;var lastConditionalParent=previousParent;if(operatorOptions.shouldCheckJsx&&(isJSXNode$1(node[operatorOptions.testNodePropertyNames[0]])||isJSXNode$1(consequentNode)||isJSXNode$1(alternateNode)||conditionalExpressionChainContainsJSX$1(lastConditionalParent))){jsxMode=true;forceNoIndent=true;// Even though they don\'t need parens, we wrap (almost) everything in\n// parens when using ?: within JSX, because the parens are analogous to\n// curly braces in an if statement.\nvar _wrap=function _wrap(doc){return concat$d([ifBreak$6("(",""),indent$7(concat$d([softline$6,doc])),softline$6,ifBreak$6(")","")]);};// The only things we don\'t wrap are:\n// * Nested conditional expressions in alternates\n// * null\n// * undefined\nvar isNil=function isNil(node){return node.type==="NullLiteral"||node.type==="Literal"&&node.value===null||node.type==="Identifier"&&node.name==="undefined";};parts.push(" ? ",isNil(consequentNode)?path.call(print,operatorOptions.consequentNodePropertyName):_wrap(path.call(print,operatorOptions.consequentNodePropertyName))," : ",alternateNode.type===operatorOptions.conditionalNodeType||isNil(alternateNode)?path.call(print,operatorOptions.alternateNodePropertyName):_wrap(path.call(print,operatorOptions.alternateNodePropertyName)));}else{// normal mode\nvar part=concat$d([line$9,"? ",consequentNode.type===operatorOptions.conditionalNodeType?ifBreak$6("","("):"",align$1(2,path.call(print,operatorOptions.consequentNodePropertyName)),consequentNode.type===operatorOptions.conditionalNodeType?ifBreak$6("",")"):"",line$9,": ",alternateNode.type===operatorOptions.conditionalNodeType?path.call(print,operatorOptions.alternateNodePropertyName):align$1(2,path.call(print,operatorOptions.alternateNodePropertyName))]);parts.push(parent.type!==operatorOptions.conditionalNodeType||parent[operatorOptions.alternateNodePropertyName]===node||isParentTest?part:options.useTabs?dedent$2(indent$7(part)):align$1(Math.max(0,options.tabWidth-2),part));}// We want a whole chain of ConditionalExpressions to all\n// break if any of them break. That means we should only group around the\n// outer-most ConditionalExpression.\nvar maybeGroup=function maybeGroup(doc){return parent===firstNonConditionalParent?group$b(doc):doc;};// Break the closing paren to keep the chain right after it:\n// (a\n//   ? b\n//   : c\n// ).call()\nvar breakClosingParen=!jsxMode&&(parent.type==="MemberExpression"||parent.type==="OptionalMemberExpression"||parent.type==="NGPipeExpression"&&parent.left===node)&&!parent.computed;var result=maybeGroup(concat$d([].concat(function(testDoc){return(/**\n     *     a\n     *       ? b\n     *       : multiline\n     *         test\n     *         node\n     *       ^^ align(2)\n     *       ? d\n     *       : e\n     */parent.type===operatorOptions.conditionalNodeType&&parent[operatorOptions.alternateNodePropertyName]===node?align$1(2,testDoc):testDoc);}(concat$d(operatorOptions.beforeParts())),forceNoIndent?concat$d(parts):indent$7(concat$d(parts)),operatorOptions.afterParts(breakClosingParen))));return isParentTest?group$b(concat$d([indent$7(concat$d([softline$6,result])),softline$6])):result;}function printPathNoParens(path,options,print,args){var n=path.getValue();var semi=options.semi?";":"";if(!n){return"";}if(typeof n==="string"){return n;}var htmlBinding=printHtmlBinding$1(path,options,print);if(htmlBinding){return htmlBinding;}var parts=[];switch(n.type){case"JsExpressionRoot":return path.call(print,"node");case"JsonRoot":return concat$d([path.call(print,"node"),hardline$9]);case"File":// Print @babel/parser\'s InterpreterDirective here so that\n// leading comments on the `Program` node get printed after the hashbang.\nif(n.program&&n.program.interpreter){parts.push(path.call(function(programPath){return programPath.call(print,"interpreter");},"program"));}parts.push(path.call(print,"program"));return concat$d(parts);case"Program":// Babel 6\nif(n.directives){path.each(function(childPath){parts.push(print(childPath),semi,hardline$9);if(isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){parts.push(hardline$9);}},"directives");}parts.push(path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body"));parts.push(comments.printDanglingComments(path,options,/* sameIndent */true));// Only force a trailing newline if there were any contents.\nif(!n.body.every(function(_ref28){var type=_ref28.type;return type==="EmptyStatement";})||n.comments){parts.push(hardline$9);}return concat$d(parts);// Babel extension.\ncase"EmptyStatement":return"";case"ExpressionStatement":// Detect Flow-parsed directives\nif(n.directive){return concat$d([nodeStr(n.expression,options,true),semi]);}if(options.parser==="__vue_event_binding"){var parent=path.getParentNode();if(parent.type==="Program"&&parent.body.length===1&&parent.body[0]===n){return concat$d([path.call(print,"expression"),isVueEventBindingExpression$3(n.expression)?";":""]);}}// Do not append semicolon after the only JSX element in a program\nreturn concat$d([path.call(print,"expression"),isTheOnlyJSXElementInMarkdown$1(options,path)?"":semi]);// Babel non-standard node. Used for Closure-style type casts. See postprocess.js.\ncase"ParenthesizedExpression":{var shouldHug=!n.expression.comments;if(shouldHug){return concat$d(["(",path.call(print,"expression"),")"]);}return group$b(concat$d(["(",indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,")"]));}case"AssignmentExpression":return printAssignment(n.left,path.call(print,"left"),concat$d([" ",n.operator]),n.right,path.call(print,"right"),options);case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":{var _parent2=path.getParentNode();var parentParent=path.getParentNode(1);var isInsideParenthesis=n!==_parent2.body&&(_parent2.type==="IfStatement"||_parent2.type==="WhileStatement"||_parent2.type==="SwitchStatement"||_parent2.type==="DoWhileStatement");var _parts3=printBinaryishExpressions(path,print,options,/* isNested */false,isInsideParenthesis);//   if (\n//     this.hasPlugin("dynamicImports") && this.lookahead().type === tt.parenLeft\n//   ) {\n//\n// looks super weird, we want to break the children if the parent breaks\n//\n//   if (\n//     this.hasPlugin("dynamicImports") &&\n//     this.lookahead().type === tt.parenLeft\n//   ) {\nif(isInsideParenthesis){return concat$d(_parts3);}// Break between the parens in\n// unaries or in a member or specific call expression, i.e.\n//\n//   (\n//     a &&\n//     b &&\n//     c\n//   ).call()\nif((_parent2.type==="CallExpression"||_parent2.type==="OptionalCallExpression")&&_parent2.callee===n||_parent2.type==="UnaryExpression"||(_parent2.type==="MemberExpression"||_parent2.type==="OptionalMemberExpression")&&!_parent2.computed){return group$b(concat$d([indent$7(concat$d([softline$6,concat$d(_parts3)])),softline$6]));}// Avoid indenting sub-expressions in some cases where the first sub-expression is already\n// indented accordingly. We should indent sub-expressions where the first case isn\'t indented.\nvar shouldNotIndent=_parent2.type==="ReturnStatement"||_parent2.type==="ThrowStatement"||_parent2.type==="JSXExpressionContainer"&&parentParent.type==="JSXAttribute"||n.operator!=="|"&&_parent2.type==="JsExpressionRoot"||n.type!=="NGPipeExpression"&&(_parent2.type==="NGRoot"&&options.parser==="__ng_binding"||_parent2.type==="NGMicrosyntaxExpression"&&parentParent.type==="NGMicrosyntax"&&parentParent.body.length===1)||n===_parent2.body&&_parent2.type==="ArrowFunctionExpression"||n!==_parent2.body&&_parent2.type==="ForStatement"||_parent2.type==="ConditionalExpression"&&parentParent.type!=="ReturnStatement"&&parentParent.type!=="ThrowStatement"&&parentParent.type!=="CallExpression"&&parentParent.type!=="OptionalCallExpression"||_parent2.type==="TemplateLiteral";var shouldIndentIfInlining=_parent2.type==="AssignmentExpression"||_parent2.type==="VariableDeclarator"||_parent2.type==="ClassProperty"||_parent2.type==="TSAbstractClassProperty"||_parent2.type==="ClassPrivateProperty"||_parent2.type==="ObjectProperty"||_parent2.type==="Property";var samePrecedenceSubExpression=isBinaryish$1(n.left)&&shouldFlatten$1(n.operator,n.left.operator);if(shouldNotIndent||shouldInlineLogicalExpression(n)&&!samePrecedenceSubExpression||!shouldInlineLogicalExpression(n)&&shouldIndentIfInlining){return group$b(concat$d(_parts3));}if(_parts3.length===0){return"";}// If the right part is a JSX node, we include it in a separate group to\n// prevent it breaking the whole chain, so we can print the expression like:\n//\n//   foo && bar && (\n//     <Foo>\n//       <Bar />\n//     </Foo>\n//   )\nvar hasJSX=isJSXNode$1(n.right);var rest=concat$d(hasJSX?_parts3.slice(1,-1):_parts3.slice(1));var groupId=Symbol("logicalChain-"+ ++uid);var chain=group$b(concat$d([// Don\'t include the initial expression in the indentation\n// level. The first item is guaranteed to be the first\n// left-most expression.\n_parts3.length>0?_parts3[0]:"",indent$7(rest)]),{id:groupId});if(!hasJSX){return chain;}var jsxPart=getLast$3(_parts3);return group$b(concat$d([chain,ifBreak$6(indent$7(jsxPart),jsxPart,{groupId:groupId})]));}case"AssignmentPattern":return concat$d([path.call(print,"left")," = ",path.call(print,"right")]);case"TSTypeAssertion":{var shouldBreakAfterCast=!(n.expression.type==="ArrayExpression"||n.expression.type==="ObjectExpression");var castGroup=group$b(concat$d(["<",indent$7(concat$d([softline$6,path.call(print,"typeAnnotation")])),softline$6,">"]));var exprContents=concat$d([ifBreak$6("("),indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,ifBreak$6(")")]);if(shouldBreakAfterCast){return conditionalGroup$1([concat$d([castGroup,path.call(print,"expression")]),concat$d([castGroup,group$b(exprContents,{shouldBreak:true})]),concat$d([castGroup,path.call(print,"expression")])]);}return group$b(concat$d([castGroup,path.call(print,"expression")]));}case"OptionalMemberExpression":case"MemberExpression":{var _parent3=path.getParentNode();var firstNonMemberParent;var i=0;do{firstNonMemberParent=path.getParentNode(i);i++;}while(firstNonMemberParent&&(firstNonMemberParent.type==="MemberExpression"||firstNonMemberParent.type==="OptionalMemberExpression"||firstNonMemberParent.type==="TSNonNullExpression"));var shouldInline=firstNonMemberParent&&(firstNonMemberParent.type==="NewExpression"||firstNonMemberParent.type==="BindExpression"||firstNonMemberParent.type==="VariableDeclarator"&&firstNonMemberParent.id.type!=="Identifier"||firstNonMemberParent.type==="AssignmentExpression"&&firstNonMemberParent.left.type!=="Identifier")||n.computed||n.object.type==="Identifier"&&n.property.type==="Identifier"&&_parent3.type!=="MemberExpression"&&_parent3.type!=="OptionalMemberExpression";return concat$d([path.call(print,"object"),shouldInline?printMemberLookup(path,options,print):group$b(indent$7(concat$d([softline$6,printMemberLookup(path,options,print)])))]);}case"MetaProperty":return concat$d([path.call(print,"meta"),".",path.call(print,"property")]);case"BindExpression":if(n.object){parts.push(path.call(print,"object"));}parts.push(group$b(indent$7(concat$d([softline$6,printBindExpressionCallee(path,options,print)]))));return concat$d(parts);case"Identifier":{return concat$d([n.name,printOptionalToken(path),printTypeAnnotation(path,options,print)]);}case"V8IntrinsicIdentifier":return concat$d(["%",n.name]);case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":case"ObjectTypeSpreadProperty":return concat$d(["...",path.call(print,"argument"),printTypeAnnotation(path,options,print)]);case"FunctionDeclaration":case"FunctionExpression":parts.push(printFunctionDeclaration(path,print,options));if(!n.body){parts.push(semi);}return concat$d(parts);case"ArrowFunctionExpression":{if(n.async){parts.push("async ");}if(shouldPrintParamsWithoutParens(path,options)){parts.push(path.call(print,"params",0));}else{parts.push(group$b(concat$d([printFunctionParams(path,print,options,/* expandLast */args&&(args.expandLastArg||args.expandFirstArg),/* printTypeParams */true),printReturnType(path,print,options)])));}var dangling=comments.printDanglingComments(path,options,/* sameIndent */true,function(comment){var nextCharacter=getNextNonSpaceNonCommentCharacterIndex$3(options.originalText,comment,options.locEnd);return options.originalText.slice(nextCharacter,nextCharacter+2)==="=>";});if(dangling){parts.push(" ",dangling);}parts.push(" =>");var _body=path.call(function(bodyPath){return print(bodyPath,args);},"body");// We want to always keep these types of nodes on the same line\n// as the arrow.\nif(!hasLeadingOwnLineComment$1(options.originalText,n.body,options)&&(n.body.type==="ArrayExpression"||n.body.type==="ObjectExpression"||n.body.type==="BlockStatement"||isJSXNode$1(n.body)||isTemplateOnItsOwnLine$1(n.body,options.originalText,options)||n.body.type==="ArrowFunctionExpression"||n.body.type==="DoExpression")){return group$b(concat$d([concat$d(parts)," ",_body]));}// We handle sequence expressions as the body of arrows specially,\n// so that the required parentheses end up on their own lines.\nif(n.body.type==="SequenceExpression"){return group$b(concat$d([concat$d(parts),group$b(concat$d([" (",indent$7(concat$d([softline$6,_body])),softline$6,")"]))]));}// if the arrow function is expanded as last argument, we are adding a\n// level of indentation and need to add a softline to align the closing )\n// with the opening (, or if it\'s inside a JSXExpression (e.g. an attribute)\n// we should align the expression\'s closing } with the line with the opening {.\nvar shouldAddSoftLine=(args&&args.expandLastArg||path.getParentNode().type==="JSXExpressionContainer")&&!(n.comments&&n.comments.length);var printTrailingComma=args&&args.expandLastArg&&shouldPrintComma$1(options,"all");// In order to avoid confusion between\n// a => a ? a : a\n// a <= a ? a : a\nvar shouldAddParens=n.body.type==="ConditionalExpression"&&!startsWithNoLookaheadToken$1(n.body,/* forbidFunctionAndClass */false);return group$b(concat$d([concat$d(parts),group$b(concat$d([indent$7(concat$d([line$9,shouldAddParens?ifBreak$6("","("):"",_body,shouldAddParens?ifBreak$6("",")"):""])),shouldAddSoftLine?concat$d([ifBreak$6(printTrailingComma?",":""),softline$6]):""]))]));}case"YieldExpression":parts.push("yield");if(n.delegate){parts.push("*");}if(n.argument){parts.push(" ",path.call(print,"argument"));}return concat$d(parts);case"AwaitExpression":{parts.push("await ",path.call(print,"argument"));var _parent4=path.getParentNode();if((_parent4.type==="CallExpression"||_parent4.type==="OptionalCallExpression")&&_parent4.callee===n||(_parent4.type==="MemberExpression"||_parent4.type==="OptionalMemberExpression")&&_parent4.object===n){return group$b(concat$d([indent$7(concat$d([softline$6,concat$d(parts)])),softline$6]));}return concat$d(parts);}case"ImportSpecifier":if(n.importKind){parts.push(path.call(print,"importKind")," ");}parts.push(path.call(print,"imported"));if(n.local&&n.local.name!==n.imported.name){parts.push(" as ",path.call(print,"local"));}return concat$d(parts);case"ExportSpecifier":parts.push(path.call(print,"local"));if(n.exported&&n.exported.name!==n.local.name){parts.push(" as ",path.call(print,"exported"));}return concat$d(parts);case"ImportNamespaceSpecifier":parts.push("* as ");parts.push(path.call(print,"local"));return concat$d(parts);case"ImportDefaultSpecifier":return path.call(print,"local");case"TSExportAssignment":return concat$d(["export = ",path.call(print,"expression"),semi]);case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return printExportDeclaration(path,options,print);case"ExportAllDeclaration":parts.push("export ");if(n.exportKind==="type"){parts.push("type ");}parts.push("* ");if(n.exported){parts.push("as ",path.call(print,"exported")," ");}parts.push("from ",path.call(print,"source"),semi);return concat$d(parts);case"ExportNamespaceSpecifier":case"ExportDefaultSpecifier":return path.call(print,"exported");case"ImportDeclaration":{parts.push("import ");if(n.importKind&&n.importKind!=="value"){parts.push(n.importKind+" ");}var standalones=[];var grouped=[];if(n.specifiers&&n.specifiers.length>0){path.each(function(specifierPath){var value=specifierPath.getValue();if(value.type==="ImportDefaultSpecifier"||value.type==="ImportNamespaceSpecifier"){standalones.push(print(specifierPath));}else{grouped.push(print(specifierPath));}},"specifiers");if(standalones.length>0){parts.push(join$9(", ",standalones));}if(standalones.length>0&&grouped.length>0){parts.push(", ");}if(grouped.length===1&&standalones.length===0&&n.specifiers&&!n.specifiers.some(function(node){return node.comments;})){parts.push(concat$d(["{",options.bracketSpacing?" ":"",concat$d(grouped),options.bracketSpacing?" ":"","}"]));}else if(grouped.length>=1){parts.push(group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,join$9(concat$d([",",line$9]),grouped)])),ifBreak$6(shouldPrintComma$1(options)?",":""),options.bracketSpacing?line$9:softline$6,"}"])));}parts.push(" from ");}else if(n.importKind&&n.importKind==="type"||// import {} from \'x\'\n/{\\s*}/.test(options.originalText.slice(options.locStart(n),options.locStart(n.source)))){parts.push("{} from ");}parts.push(path.call(print,"source"),semi);return concat$d(parts);}case"Import":return"import";case"TSModuleBlock":case"BlockStatement":{var naked=path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body");var hasContent=n.body.find(function(node){return node.type!=="EmptyStatement";});var hasDirectives=n.directives&&n.directives.length>0;var _parent5=path.getParentNode();var _parentParent=path.getParentNode(1);if(!hasContent&&!hasDirectives&&!hasDanglingComments$1(n)&&(_parent5.type==="ArrowFunctionExpression"||_parent5.type==="FunctionExpression"||_parent5.type==="FunctionDeclaration"||_parent5.type==="ObjectMethod"||_parent5.type==="ClassMethod"||_parent5.type==="ClassPrivateMethod"||_parent5.type==="ForStatement"||_parent5.type==="WhileStatement"||_parent5.type==="DoWhileStatement"||_parent5.type==="DoExpression"||_parent5.type==="CatchClause"&&!_parentParent.finalizer||_parent5.type==="TSModuleDeclaration")){return"{}";}parts.push("{");// Babel 6\nif(hasDirectives){path.each(function(childPath){parts.push(indent$7(concat$d([hardline$9,print(childPath),semi])));if(isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){parts.push(hardline$9);}},"directives");}if(hasContent){parts.push(indent$7(concat$d([hardline$9,naked])));}parts.push(comments.printDanglingComments(path,options));parts.push(hardline$9,"}");return concat$d(parts);}case"ReturnStatement":return concat$d(["return",printReturnAndThrowArgument(path,options,print)]);case"NewExpression":case"OptionalCallExpression":case"CallExpression":{var isNew=n.type==="NewExpression";var optional=printOptionalToken(path);if(// We want to keep CommonJS- and AMD-style require calls, and AMD-style\n// define calls, as a unit.\n// e.g. `define(["some/lib", (lib) => {`\n!isNew&&n.callee.type==="Identifier"&&(n.callee.name==="require"||n.callee.name==="define")||// Template literals as single arguments\nn.arguments.length===1&&isTemplateOnItsOwnLine$1(n.arguments[0],options.originalText,options)||// Keep test declarations on a single line\n// e.g. `it(\'long name\', () => {`\n!isNew&&isTestCall$1(n,path.getParentNode())){return concat$d([isNew?"new ":"",path.call(print,"callee"),optional,printFunctionTypeParameters(path,options,print),concat$d(["(",join$9(", ",path.map(print,"arguments")),")"])]);}// Inline Flow annotation comments following Identifiers in Call nodes need to\n// stay with the Identifier. For example:\n//\n// foo /*:: <SomeGeneric> */(bar);\n//\n// Here, we ensure that such comments stay between the Identifier and the Callee.\nvar isIdentifierWithFlowAnnotation=n.callee.type==="Identifier"&&hasFlowAnnotationComment$1(n.callee.trailingComments);if(isIdentifierWithFlowAnnotation){n.callee.trailingComments[0].printed=true;}// We detect calls on member lookups and possibly print them in a\n// special chain format. See `printMemberChain` for more info.\nif(!isNew&&isMemberish$1(n.callee)&&!path.call(function(path){return needsParens_1(path,options);},"callee")){return printMemberChain(path,options,print);}var contents=concat$d([isNew?"new ":"",path.call(print,"callee"),optional,isIdentifierWithFlowAnnotation?"/*:: ".concat(n.callee.trailingComments[0].value.slice(2).trim()," */"):"",printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)]);// We group here when the callee is itself a call expression.\n// See `isLongCurriedCallExpression` for more info.\nif(isCallOrOptionalCallExpression$1(n.callee)){return group$b(contents);}return contents;}case"TSInterfaceDeclaration":if(n.declare){parts.push("declare ");}parts.push(n.abstract?"abstract ":"",printTypeScriptModifiers(path,options,print),"interface ",path.call(print,"id"),n.typeParameters?path.call(print,"typeParameters"):""," ");if(n.extends&&n.extends.length){parts.push(group$b(indent$7(concat$d([softline$6,"extends ",(n.extends.length===1?identity$2:indent$7)(join$9(concat$d([",",line$9]),path.map(print,"extends")))," "]))));}parts.push(path.call(print,"body"));return concat$d(parts);case"ObjectTypeInternalSlot":return concat$d([n.static?"static ":"","[[",path.call(print,"id"),"]]",printOptionalToken(path),n.method?"":": ",path.call(print,"value")]);case"ObjectExpression":case"ObjectPattern":case"ObjectTypeAnnotation":case"TSInterfaceBody":case"TSTypeLiteral":{var propertiesField;if(n.type==="TSTypeLiteral"){propertiesField="members";}else if(n.type==="TSInterfaceBody"){propertiesField="body";}else{propertiesField="properties";}var isTypeAnnotation=n.type==="ObjectTypeAnnotation";var fields=[];if(isTypeAnnotation){fields.push("indexers","callProperties","internalSlots");}fields.push(propertiesField);var firstProperty=fields.map(function(field){return n[field][0];}).sort(function(a,b){return options.locStart(a)-options.locStart(b);})[0];var _parent6=path.getParentNode(0);var isFlowInterfaceLikeBody=isTypeAnnotation&&_parent6&&(_parent6.type==="InterfaceDeclaration"||_parent6.type==="DeclareInterface"||_parent6.type==="DeclareClass")&&path.getName()==="body";var shouldBreak=n.type==="TSInterfaceBody"||isFlowInterfaceLikeBody||n.type==="ObjectPattern"&&_parent6.type!=="FunctionDeclaration"&&_parent6.type!=="FunctionExpression"&&_parent6.type!=="ArrowFunctionExpression"&&_parent6.type!=="ObjectMethod"&&_parent6.type!=="ClassMethod"&&_parent6.type!=="ClassPrivateMethod"&&_parent6.type!=="AssignmentPattern"&&_parent6.type!=="CatchClause"&&n.properties.some(function(property){return property.value&&(property.value.type==="ObjectPattern"||property.value.type==="ArrayPattern");})||n.type!=="ObjectPattern"&&firstProperty&&hasNewlineInRange$3(options.originalText,options.locStart(n),options.locStart(firstProperty));var separator=isFlowInterfaceLikeBody?";":n.type==="TSInterfaceBody"||n.type==="TSTypeLiteral"?ifBreak$6(semi,";"):",";var leftBrace=n.exact?"{|":"{";var rightBrace=n.exact?"|}":"}";// Unfortunately, things are grouped together in the ast can be\n// interleaved in the source code. So we need to reorder them before\n// printing them.\nvar propsAndLoc=[];fields.forEach(function(field){path.each(function(childPath){var node=childPath.getValue();propsAndLoc.push({node:node,printed:print(childPath),loc:options.locStart(node)});},field);});var separatorParts=[];var props=propsAndLoc.sort(function(a,b){return a.loc-b.loc;}).map(function(prop){var result=concat$d(separatorParts.concat(group$b(prop.printed)));separatorParts=[separator,line$9];if((prop.node.type==="TSPropertySignature"||prop.node.type==="TSMethodSignature"||prop.node.type==="TSConstructSignatureDeclaration")&&hasNodeIgnoreComment$2(prop.node)){separatorParts.shift();}if(isNextLineEmpty$4(options.originalText,prop.node,options.locEnd)){separatorParts.push(hardline$9);}return result;});if(n.inexact){var printed;if(hasDanglingComments$1(n)){var hasLineComments=!n.comments.every(comments$1.isBlockComment);var printedDanglingComments=comments.printDanglingComments(path,options,/* sameIndent */true);printed=concat$d([printedDanglingComments,hasLineComments||hasNewline$5(options.originalText,options.locEnd(n.comments[n.comments.length-1]))?hardline$9:line$9,"..."]);}else{printed="...";}props.push(concat$d(separatorParts.concat(printed)));}var lastElem=getLast$3(n[propertiesField]);var canHaveTrailingSeparator=!(n.inexact||lastElem&&(lastElem.type==="RestElement"||hasNodeIgnoreComment$2(lastElem)));var content;if(props.length===0){if(!hasDanglingComments$1(n)){return concat$d([leftBrace,rightBrace,printTypeAnnotation(path,options,print)]);}content=group$b(concat$d([leftBrace,comments.printDanglingComments(path,options),softline$6,rightBrace,printOptionalToken(path),printTypeAnnotation(path,options,print)]));}else{content=concat$d([leftBrace,indent$7(concat$d([options.bracketSpacing?line$9:softline$6,concat$d(props)])),ifBreak$6(canHaveTrailingSeparator&&(separator!==","||shouldPrintComma$1(options))?separator:""),concat$d([options.bracketSpacing?line$9:softline$6,rightBrace]),printOptionalToken(path),printTypeAnnotation(path,options,print)]);}// If we inline the object as first argument of the parent, we don\'t want\n// to create another group so that the object breaks before the return\n// type\nif(path.match(function(node){return node.type==="ObjectPattern"&&!node.decorators;},function(node,name,number){return shouldHugArguments(node)&&(name==="params"||name==="parameters")&&number===0;})||path.match(shouldHugType,function(node,name){return name==="typeAnnotation";},function(node,name){return name==="typeAnnotation";},function(node,name,number){return shouldHugArguments(node)&&(name==="params"||name==="parameters")&&number===0;})){return content;}return group$b(content,{shouldBreak:shouldBreak});}// Babel 6\ncase"ObjectProperty":// Non-standard AST node type.\ncase"Property":if(n.method||n.kind==="get"||n.kind==="set"){return printMethod(path,options,print);}if(n.shorthand){parts.push(path.call(print,"value"));}else{parts.push(printAssignment(n.key,printPropertyKey(path,options,print),":",n.value,path.call(print,"value"),options));}return concat$d(parts);// Babel 6\ncase"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":case"TSAbstractMethodDefinition":case"TSDeclareMethod":if(n.decorators&&n.decorators.length!==0){parts.push(printDecorators(path,options,print));}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.static){parts.push("static ");}if(n.type==="TSAbstractMethodDefinition"||n.abstract){parts.push("abstract ");}parts.push(printMethod(path,options,print));return concat$d(parts);case"ObjectMethod":return printMethod(path,options,print);case"Decorator":return concat$d(["@",path.call(print,"expression"),path.call(print,"callee")]);case"ArrayExpression":case"ArrayPattern":if(n.elements.length===0){if(!hasDanglingComments$1(n)){parts.push("[]");}else{parts.push(group$b(concat$d(["[",comments.printDanglingComments(path,options),softline$6,"]"])));}}else{var _lastElem=getLast$3(n.elements);var canHaveTrailingComma=!(_lastElem&&_lastElem.type==="RestElement");// JavaScript allows you to have empty elements in an array which\n// changes its length based on the number of commas. The algorithm\n// is that if the last argument is null, we need to force insert\n// a comma to ensure JavaScript recognizes it.\n//   [,].length === 1\n//   [1,].length === 1\n//   [1,,].length === 2\n//\n// Note that getLast returns null if the array is empty, but\n// we already check for an empty array just above so we are safe\nvar needsForcedTrailingComma=canHaveTrailingComma&&_lastElem===null;var _shouldBreak=n.elements.length>1&&n.elements.every(function(element,i,elements){var elementType=element&&element.type;if(elementType!=="ArrayExpression"&&elementType!=="ObjectExpression"){return false;}var nextElement=elements[i+1];if(nextElement&&elementType!==nextElement.type){return false;}var itemsKey=elementType==="ArrayExpression"?"elements":"properties";return element[itemsKey]&&element[itemsKey].length>1;});parts.push(group$b(concat$d(["[",indent$7(concat$d([softline$6,printArrayItems(path,options,"elements",print)])),needsForcedTrailingComma?",":"",ifBreak$6(canHaveTrailingComma&&!needsForcedTrailingComma&&shouldPrintComma$1(options)?",":""),comments.printDanglingComments(path,options,/* sameIndent */true),softline$6,"]"]),{shouldBreak:_shouldBreak}));}parts.push(printOptionalToken(path),printTypeAnnotation(path,options,print));return concat$d(parts);case"SequenceExpression":{var _parent7=path.getParentNode(0);if(_parent7.type==="ExpressionStatement"||_parent7.type==="ForStatement"){// For ExpressionStatements and for-loop heads, which are among\n// the few places a SequenceExpression appears unparenthesized, we want\n// to indent expressions after the first.\nvar _parts4=[];path.each(function(p){if(p.getName()===0){_parts4.push(print(p));}else{_parts4.push(",",indent$7(concat$d([line$9,print(p)])));}},"expressions");return group$b(concat$d(_parts4));}return group$b(concat$d([join$9(concat$d([",",line$9]),path.map(print,"expressions"))]));}case"ThisExpression":return"this";case"Super":return"super";case"NullLiteral":// Babel 6 Literal split\nreturn"null";case"RegExpLiteral":// Babel 6 Literal split\nreturn printRegex(n);case"NumericLiteral":// Babel 6 Literal split\nreturn printNumber$2(n.extra.raw);case"BigIntLiteral":// babel: n.extra.raw, typescript: n.raw, flow: n.bigint\nreturn(n.bigint||(n.extra?n.extra.raw:n.raw)).toLowerCase();case"BooleanLiteral":// Babel 6 Literal split\ncase"StringLiteral":// Babel 6 Literal split\ncase"Literal":{if(n.regex){return printRegex(n.regex);}if(typeof n.value==="number"){return printNumber$2(n.raw);}if(typeof n.value!=="string"){return""+n.value;}// TypeScript workaround for https://github.com/JamesHenry/typescript-estree/issues/2\n// See corresponding workaround in needs-parens.js\nvar grandParent=path.getParentNode(1);var isTypeScriptDirective=options.parser==="typescript"&&typeof n.value==="string"&&grandParent&&(grandParent.type==="Program"||grandParent.type==="BlockStatement");return nodeStr(n,options,isTypeScriptDirective);}case"Directive":return path.call(print,"value");// Babel 6\ncase"DirectiveLiteral":return nodeStr(n,options);case"UnaryExpression":parts.push(n.operator);if(/[a-z]$/.test(n.operator)){parts.push(" ");}if(n.argument.comments&&n.argument.comments.length>0){parts.push(group$b(concat$d(["(",indent$7(concat$d([softline$6,path.call(print,"argument")])),softline$6,")"])));}else{parts.push(path.call(print,"argument"));}return concat$d(parts);case"UpdateExpression":parts.push(path.call(print,"argument"),n.operator);if(n.prefix){parts.reverse();}return concat$d(parts);case"ConditionalExpression":return printTernaryOperator(path,options,print,{beforeParts:function beforeParts(){return[path.call(print,"test")];},afterParts:function afterParts(breakClosingParen){return[breakClosingParen?softline$6:""];},shouldCheckJsx:true,conditionalNodeType:"ConditionalExpression",consequentNodePropertyName:"consequent",alternateNodePropertyName:"alternate",testNodePropertyNames:["test"]});case"VariableDeclaration":{var _printed2=path.map(function(childPath){return print(childPath);},"declarations");// We generally want to terminate all variable declarations with a\n// semicolon, except when they in the () part of for loops.\nvar parentNode=path.getParentNode();var isParentForLoop=parentNode.type==="ForStatement"||parentNode.type==="ForInStatement"||parentNode.type==="ForOfStatement";var hasValue=n.declarations.some(function(decl){return decl.init;});var firstVariable;if(_printed2.length===1&&!n.declarations[0].comments){firstVariable=_printed2[0];}else if(_printed2.length>0){// Indent first var to comply with eslint one-var rule\nfirstVariable=indent$7(_printed2[0]);}parts=[n.declare?"declare ":"",n.kind,firstVariable?concat$d([" ",firstVariable]):"",indent$7(concat$d(_printed2.slice(1).map(function(p){return concat$d([",",hasValue&&!isParentForLoop?hardline$9:line$9,p]);})))];if(!(isParentForLoop&&parentNode.body!==n)){parts.push(semi);}return group$b(concat$d(parts));}case"TSTypeAliasDeclaration":{if(n.declare){parts.push("declare ");}var _printed3=printAssignmentRight(n.id,n.typeAnnotation,n.typeAnnotation&&path.call(print,"typeAnnotation"),options);parts.push("type ",path.call(print,"id"),path.call(print,"typeParameters")," =",_printed3,semi);return group$b(concat$d(parts));}case"VariableDeclarator":return printAssignment(n.id,path.call(print,"id")," =",n.init,n.init&&path.call(print,"init"),options);case"WithStatement":return group$b(concat$d(["with (",path.call(print,"object"),")",adjustClause(n.body,path.call(print,"body"))]));case"IfStatement":{var con=adjustClause(n.consequent,path.call(print,"consequent"));var opening=group$b(concat$d(["if (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",con]));parts.push(opening);if(n.alternate){var commentOnOwnLine=hasTrailingComment$1(n.consequent)&&n.consequent.comments.some(function(comment){return comment.trailing&&!comments$1.isBlockComment(comment);})||needsHardlineAfterDanglingComment$1(n);var elseOnSameLine=n.consequent.type==="BlockStatement"&&!commentOnOwnLine;parts.push(elseOnSameLine?" ":hardline$9);if(hasDanglingComments$1(n)){parts.push(comments.printDanglingComments(path,options,true),commentOnOwnLine?hardline$9:" ");}parts.push("else",group$b(adjustClause(n.alternate,path.call(print,"alternate"),n.alternate.type==="IfStatement")));}return concat$d(parts);}case"ForStatement":{var _body2=adjustClause(n.body,path.call(print,"body"));// We want to keep dangling comments above the loop to stay consistent.\n// Any comment positioned between the for statement and the parentheses\n// is going to be printed before the statement.\nvar _dangling=comments.printDanglingComments(path,options,/* sameLine */true);var printedComments=_dangling?concat$d([_dangling,softline$6]):"";if(!n.init&&!n.test&&!n.update){return concat$d([printedComments,group$b(concat$d(["for (;;)",_body2]))]);}return concat$d([printedComments,group$b(concat$d(["for (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"init"),";",line$9,path.call(print,"test"),";",line$9,path.call(print,"update")])),softline$6])),")",_body2]))]);}case"WhileStatement":return group$b(concat$d(["while (",group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",adjustClause(n.body,path.call(print,"body"))]));case"ForInStatement":// Note: esprima can\'t actually parse "for each (".\nreturn group$b(concat$d([n.each?"for each (":"for (",path.call(print,"left")," in ",path.call(print,"right"),")",adjustClause(n.body,path.call(print,"body"))]));case"ForOfStatement":return group$b(concat$d(["for",n.await?" await":""," (",path.call(print,"left")," of ",path.call(print,"right"),")",adjustClause(n.body,path.call(print,"body"))]));case"DoWhileStatement":{var clause=adjustClause(n.body,path.call(print,"body"));var doBody=group$b(concat$d(["do",clause]));parts=[doBody];if(n.body.type==="BlockStatement"){parts.push(" ");}else{parts.push(hardline$9);}parts.push("while (");parts.push(group$b(concat$d([indent$7(concat$d([softline$6,path.call(print,"test")])),softline$6])),")",semi);return concat$d(parts);}case"DoExpression":return concat$d(["do ",path.call(print,"body")]);case"BreakStatement":parts.push("break");if(n.label){parts.push(" ",path.call(print,"label"));}parts.push(semi);return concat$d(parts);case"ContinueStatement":parts.push("continue");if(n.label){parts.push(" ",path.call(print,"label"));}parts.push(semi);return concat$d(parts);case"LabeledStatement":if(n.body.type==="EmptyStatement"){return concat$d([path.call(print,"label"),":;"]);}return concat$d([path.call(print,"label"),": ",path.call(print,"body")]);case"TryStatement":return concat$d(["try ",path.call(print,"block"),n.handler?concat$d([" ",path.call(print,"handler")]):"",n.finalizer?concat$d([" finally ",path.call(print,"finalizer")]):""]);case"CatchClause":if(n.param){var _hasComments=n.param.comments&&n.param.comments.some(function(comment){return!comments$1.isBlockComment(comment)||comment.leading&&hasNewline$5(options.originalText,options.locEnd(comment))||comment.trailing&&hasNewline$5(options.originalText,options.locStart(comment),{backwards:true});});var _param=path.call(print,"param");return concat$d(["catch ",_hasComments?concat$d(["(",indent$7(concat$d([softline$6,_param])),softline$6,") "]):concat$d(["(",_param,") "]),path.call(print,"body")]);}return concat$d(["catch ",path.call(print,"body")]);case"ThrowStatement":return concat$d(["throw",printReturnAndThrowArgument(path,options,print)]);// Note: ignoring n.lexical because it has no printing consequences.\ncase"SwitchStatement":return concat$d([group$b(concat$d(["switch (",indent$7(concat$d([softline$6,path.call(print,"discriminant")])),softline$6,")"]))," {",n.cases.length>0?indent$7(concat$d([hardline$9,join$9(hardline$9,path.map(function(casePath){var caseNode=casePath.getValue();return concat$d([casePath.call(print),n.cases.indexOf(caseNode)!==n.cases.length-1&&isNextLineEmpty$4(options.originalText,caseNode,options.locEnd)?hardline$9:""]);},"cases"))])):"",hardline$9,"}"]);case"SwitchCase":{if(n.test){parts.push("case ",path.call(print,"test"),":");}else{parts.push("default:");}var consequent=n.consequent.filter(function(node){return node.type!=="EmptyStatement";});if(consequent.length>0){var cons=path.call(function(consequentPath){return printStatementSequence(consequentPath,options,print);},"consequent");parts.push(consequent.length===1&&consequent[0].type==="BlockStatement"?concat$d([" ",cons]):indent$7(concat$d([hardline$9,cons])));}return concat$d(parts);}// JSX extensions below.\ncase"DebuggerStatement":return concat$d(["debugger",semi]);case"JSXAttribute":parts.push(path.call(print,"name"));if(n.value){var res;if(isStringLiteral$1(n.value)){var raw=rawText$1(n.value);// Unescape all quotes so we get an accurate preferred quote\nvar final=raw.replace(/&apos;/g,"\'").replace(/&quot;/g,\'"\');var quote=getPreferredQuote$1(final,options.jsxSingleQuote?"\'":\'"\');var _escape=quote==="\'"?"&apos;":"&quot;";final=final.slice(1,-1).replace(new RegExp(quote,"g"),_escape);res=concat$d([quote,final,quote]);}else{res=path.call(print,"value");}parts.push("=",res);}return concat$d(parts);case"JSXIdentifier":return""+n.name;case"JSXNamespacedName":return join$9(":",[path.call(print,"namespace"),path.call(print,"name")]);case"JSXMemberExpression":return join$9(".",[path.call(print,"object"),path.call(print,"property")]);case"TSQualifiedName":return join$9(".",[path.call(print,"left"),path.call(print,"right")]);case"JSXSpreadAttribute":case"JSXSpreadChild":{return concat$d(["{",path.call(function(p){var printed=concat$d(["...",print(p)]);var n=p.getValue();if(!n.comments||!n.comments.length){return printed;}return concat$d([indent$7(concat$d([softline$6,comments.printComments(p,function(){return printed;},options)])),softline$6]);},n.type==="JSXSpreadAttribute"?"argument":"expression"),"}"]);}case"JSXExpressionContainer":{var _parent8=path.getParentNode(0);var _hasComments2=n.expression.comments&&n.expression.comments.length>0;var _shouldInline=n.expression.type==="JSXEmptyExpression"||!_hasComments2&&(n.expression.type==="ArrayExpression"||n.expression.type==="ObjectExpression"||n.expression.type==="ArrowFunctionExpression"||n.expression.type==="CallExpression"||n.expression.type==="OptionalCallExpression"||n.expression.type==="FunctionExpression"||n.expression.type==="TemplateLiteral"||n.expression.type==="TaggedTemplateExpression"||n.expression.type==="DoExpression"||isJSXNode$1(_parent8)&&(n.expression.type==="ConditionalExpression"||isBinaryish$1(n.expression)));if(_shouldInline){return group$b(concat$d(["{",path.call(print,"expression"),lineSuffixBoundary$1,"}"]));}return group$b(concat$d(["{",indent$7(concat$d([softline$6,path.call(print,"expression")])),softline$6,lineSuffixBoundary$1,"}"]));}case"JSXFragment":case"JSXElement":{var elem=comments.printComments(path,function(){return printJSXElement(path,options,print);},options);return maybeWrapJSXElementInParens(path,elem,options);}case"JSXOpeningElement":{var _n=path.getValue();var nameHasComments=_n.name&&_n.name.comments&&_n.name.comments.length>0||_n.typeParameters&&_n.typeParameters.comments&&_n.typeParameters.comments.length>0;// Don\'t break self-closing elements with no attributes and no comments\nif(_n.selfClosing&&!_n.attributes.length&&!nameHasComments){return concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters")," />"]);}// don\'t break up opening elements with a single long text attribute\nif(_n.attributes&&_n.attributes.length===1&&_n.attributes[0].value&&isStringLiteral$1(_n.attributes[0].value)&&!_n.attributes[0].value.value.includes("\\n")&&// We should break for the following cases:\n// <div\n//   // comment\n//   attr="value"\n// >\n// <div\n//   attr="value"\n//   // comment\n// >\n!nameHasComments&&(!_n.attributes[0].comments||!_n.attributes[0].comments.length)){return group$b(concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters")," ",concat$d(path.map(print,"attributes")),_n.selfClosing?" />":">"]));}var lastAttrHasTrailingComments=_n.attributes.length&&hasTrailingComment$1(getLast$3(_n.attributes));var bracketSameLine=// Simple tags (no attributes and no comment in tag name) should be\n// kept unbroken regardless of `jsxBracketSameLine`\n!_n.attributes.length&&!nameHasComments||options.jsxBracketSameLine&&(// We should print the bracket in a new line for the following cases:\n// <div\n//   // comment\n// >\n// <div\n//   attr // comment\n// >\n!nameHasComments||_n.attributes.length)&&!lastAttrHasTrailingComments;// We should print the opening element expanded if any prop value is a\n// string literal with newlines\nvar _shouldBreak2=_n.attributes&&_n.attributes.some(function(attr){return attr.value&&isStringLiteral$1(attr.value)&&attr.value.value.includes("\\n");});return group$b(concat$d(["<",path.call(print,"name"),path.call(print,"typeParameters"),concat$d([indent$7(concat$d(path.map(function(attr){return concat$d([line$9,print(attr)]);},"attributes"))),_n.selfClosing?line$9:bracketSameLine?">":softline$6]),_n.selfClosing?"/>":bracketSameLine?"":">"]),{shouldBreak:_shouldBreak2});}case"JSXClosingElement":return concat$d(["</",path.call(print,"name"),">"]);case"JSXOpeningFragment":case"JSXClosingFragment":{var hasComment=n.comments&&n.comments.length;var hasOwnLineComment=hasComment&&!n.comments.every(comments$1.isBlockComment);var isOpeningFragment=n.type==="JSXOpeningFragment";return concat$d([isOpeningFragment?"<":"</",indent$7(concat$d([hasOwnLineComment?hardline$9:hasComment&&!isOpeningFragment?" ":"",comments.printDanglingComments(path,options,true)])),hasOwnLineComment?hardline$9:"",">"]);}case"JSXText":/* istanbul ignore next */throw new Error("JSXTest should be handled by JSXElement");case"JSXEmptyExpression":{var requiresHardline=n.comments&&!n.comments.every(comments$1.isBlockComment);return concat$d([comments.printDanglingComments(path,options,/* sameIndent */!requiresHardline),requiresHardline?hardline$9:""]);}case"ClassBody":if(!n.comments&&n.body.length===0){return"{}";}return concat$d(["{",n.body.length>0?indent$7(concat$d([hardline$9,path.call(function(bodyPath){return printStatementSequence(bodyPath,options,print);},"body")])):comments.printDanglingComments(path,options),hardline$9,"}"]);case"ClassProperty":case"TSAbstractClassProperty":case"ClassPrivateProperty":{if(n.decorators&&n.decorators.length!==0){parts.push(printDecorators(path,options,print));}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.declare){parts.push("declare ");}if(n.static){parts.push("static ");}if(n.type==="TSAbstractClassProperty"||n.abstract){parts.push("abstract ");}if(n.readonly){parts.push("readonly ");}var variance=getFlowVariance$1(n);if(variance){parts.push(variance);}parts.push(printPropertyKey(path,options,print),printOptionalToken(path),printTypeAnnotation(path,options,print));if(n.value){parts.push(" =",printAssignmentRight(n.key,n.value,path.call(print,"value"),options));}parts.push(semi);return group$b(concat$d(parts));}case"ClassDeclaration":case"ClassExpression":if(n.declare){parts.push("declare ");}parts.push(concat$d(printClass(path,options,print)));return concat$d(parts);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":// Babel AST\nparts.push(path.call(print,"expression"));if(n.typeParameters){parts.push(path.call(print,"typeParameters"));}return concat$d(parts);case"TemplateElement":return join$9(literalline$4,n.value.raw.split(/\\r?\\n/g));case"TemplateLiteral":{var expressions=path.map(print,"expressions");var _parentNode7=path.getParentNode();if(isJestEachTemplateLiteral$1(n,_parentNode7)){var _printed4=printJestEachTemplateLiteral(n,expressions,options);if(_printed4){return _printed4;}}var isSimple=isSimpleTemplateLiteral$1(n);if(isSimple){expressions=expressions.map(function(doc){return printDocToString$2(doc,Object.assign({},options,{printWidth:Infinity})).formatted;});}parts.push(lineSuffixBoundary$1,"`");path.each(function(childPath){var i=childPath.getName();parts.push(print(childPath));if(i<expressions.length){// For a template literal of the following form:\n//   `someQuery {\n//     ${call({\n//       a,\n//       b,\n//     })}\n//   }`\n// the expression is on its own line (there is a \\n in the previous\n// quasi literal), therefore we want to indent the JavaScript\n// expression inside at the beginning of ${ instead of the beginning\n// of the `.\nvar tabWidth=options.tabWidth;var quasi=childPath.getValue();var indentSize=getIndentSize$2(quasi.value.raw,tabWidth);var _printed5=expressions[i];if(!isSimple){// Breaks at the template element boundaries (${ and }) are preferred to breaking\n// in the middle of a MemberExpression\nif(n.expressions[i].comments&&n.expressions[i].comments.length||n.expressions[i].type==="MemberExpression"||n.expressions[i].type==="OptionalMemberExpression"||n.expressions[i].type==="ConditionalExpression"||n.expressions[i].type==="SequenceExpression"||n.expressions[i].type==="TSAsExpression"||isBinaryish$1(n.expressions[i])){_printed5=concat$d([indent$7(concat$d([softline$6,_printed5])),softline$6]);}}var aligned=indentSize===0&&quasi.value.raw.endsWith("\\n")?align$1(-Infinity,_printed5):addAlignmentToDoc$2(_printed5,indentSize,tabWidth);parts.push(group$b(concat$d(["${",aligned,lineSuffixBoundary$1,"}"])));}},"quasis");parts.push("`");return concat$d(parts);}// These types are unprintable because they serve as abstract\n// supertypes for other (printable) types.\ncase"TaggedTemplateExpression":return concat$d([path.call(print,"tag"),path.call(print,"typeParameters"),path.call(print,"quasi")]);case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":// Flow\ncase"Type":/* istanbul ignore next */throw new Error("unprintable type: "+JSON.stringify(n.type));// Type Annotations for Facebook Flow, typically stripped out or\n// transformed away before printing.\ncase"TypeAnnotation":case"TSTypeAnnotation":if(n.typeAnnotation){return path.call(print,"typeAnnotation");}/* istanbul ignore next */return"";case"TSTupleType":case"TupleTypeAnnotation":{var typesField=n.type==="TSTupleType"?"elementTypes":"types";var hasRest=n[typesField].length>0&&getLast$3(n[typesField]).type==="TSRestType";return group$b(concat$d(["[",indent$7(concat$d([softline$6,printArrayItems(path,options,typesField,print)])),ifBreak$6(shouldPrintComma$1(options,"all")&&!hasRest?",":""),comments.printDanglingComments(path,options,/* sameIndent */true),softline$6,"]"]));}case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"AnyTypeAnnotation":return"any";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return concat$d([path.call(print,"elementType"),"[]"]);case"BooleanTypeAnnotation":return"boolean";case"BooleanLiteralTypeAnnotation":return""+n.value;case"DeclareClass":return printFlowDeclaration(path,printClass(path,options,print));case"TSDeclareFunction":// For TypeScript the TSDeclareFunction node shares the AST\n// structure with FunctionDeclaration\nreturn concat$d([n.declare?"declare ":"",printFunctionDeclaration(path,print,options),semi]);case"DeclareFunction":return printFlowDeclaration(path,["function ",path.call(print,"id"),n.predicate?" ":"",path.call(print,"predicate"),semi]);case"DeclareModule":return printFlowDeclaration(path,["module ",path.call(print,"id")," ",path.call(print,"body")]);case"DeclareModuleExports":return printFlowDeclaration(path,["module.exports",": ",path.call(print,"typeAnnotation"),semi]);case"DeclareVariable":return printFlowDeclaration(path,["var ",path.call(print,"id"),semi]);case"DeclareExportAllDeclaration":return concat$d(["declare export * from ",path.call(print,"source")]);case"DeclareExportDeclaration":return concat$d(["declare ",printExportDeclaration(path,options,print)]);case"DeclareOpaqueType":case"OpaqueType":{parts.push("opaque type ",path.call(print,"id"),path.call(print,"typeParameters"));if(n.supertype){parts.push(": ",path.call(print,"supertype"));}if(n.impltype){parts.push(" = ",path.call(print,"impltype"));}parts.push(semi);if(n.type==="DeclareOpaqueType"){return printFlowDeclaration(path,parts);}return concat$d(parts);}case"EnumDeclaration":return concat$d(["enum ",path.call(print,"id")," ",path.call(print,"body")]);case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":{if(n.type==="EnumSymbolBody"||n.explicitType){var _type=null;switch(n.type){case"EnumBooleanBody":_type="boolean";break;case"EnumNumberBody":_type="number";break;case"EnumStringBody":_type="string";break;case"EnumSymbolBody":_type="symbol";break;}parts.push("of ",_type," ");}if(n.members.length===0){parts.push(group$b(concat$d(["{",comments.printDanglingComments(path,options),softline$6,"}"])));}else{parts.push(group$b(concat$d(["{",indent$7(concat$d([hardline$9,printArrayItems(path,options,"members",print),shouldPrintComma$1(options)?",":""])),comments.printDanglingComments(path,options,/* sameIndent */true),hardline$9,"}"])));}return concat$d(parts);}case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return concat$d([path.call(print,"id")," = ",(0,_typeof3.default)(n.init)==="object"?path.call(print,"init"):String(n.init)]);case"EnumDefaultedMember":return path.call(print,"id");case"FunctionTypeAnnotation":case"TSFunctionType":{// FunctionTypeAnnotation is ambiguous:\n// declare function foo(a: B): void; OR\n// var A: (a: B) => void;\nvar _parent9=path.getParentNode(0);var _parentParent2=path.getParentNode(1);var parentParentParent=path.getParentNode(2);var isArrowFunctionTypeAnnotation=n.type==="TSFunctionType"||!((_parent9.type==="ObjectTypeProperty"||_parent9.type==="ObjectTypeInternalSlot")&&!getFlowVariance$1(_parent9)&&!_parent9.optional&&options.locStart(_parent9)===options.locStart(n)||_parent9.type==="ObjectTypeCallProperty"||parentParentParent&&parentParentParent.type==="DeclareFunction");var needsColon=isArrowFunctionTypeAnnotation&&(_parent9.type==="TypeAnnotation"||_parent9.type==="TSTypeAnnotation");// Sadly we can\'t put it inside of FastPath::needsColon because we are\n// printing ":" as part of the expression and it would put parenthesis\n// around :(\nvar _needsParens=needsColon&&isArrowFunctionTypeAnnotation&&(_parent9.type==="TypeAnnotation"||_parent9.type==="TSTypeAnnotation")&&_parentParent2.type==="ArrowFunctionExpression";if(isObjectTypePropertyAFunction$1(_parent9,options)){isArrowFunctionTypeAnnotation=true;needsColon=true;}if(_needsParens){parts.push("(");}parts.push(printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true));// The returnType is not wrapped in a TypeAnnotation, so the colon\n// needs to be added separately.\nif(n.returnType||n.predicate||n.typeAnnotation){parts.push(isArrowFunctionTypeAnnotation?" => ":": ",path.call(print,"returnType"),path.call(print,"predicate"),path.call(print,"typeAnnotation"));}if(_needsParens){parts.push(")");}return group$b(concat$d(parts));}case"TSRestType":return concat$d(["...",path.call(print,"typeAnnotation")]);case"TSOptionalType":return concat$d([path.call(print,"typeAnnotation"),"?"]);case"FunctionTypeParam":return concat$d([path.call(print,"name"),printOptionalToken(path),n.name?": ":"",path.call(print,"typeAnnotation")]);case"GenericTypeAnnotation":return concat$d([path.call(print,"id"),path.call(print,"typeParameters")]);case"DeclareInterface":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":{if(n.type==="DeclareInterface"||n.declare){parts.push("declare ");}parts.push("interface");if(n.type==="DeclareInterface"||n.type==="InterfaceDeclaration"){parts.push(" ",path.call(print,"id"),path.call(print,"typeParameters"));}if(n.extends.length>0){parts.push(group$b(indent$7(concat$d([line$9,"extends ",(n.extends.length===1?identity$2:indent$7)(join$9(concat$d([",",line$9]),path.map(print,"extends")))]))));}parts.push(" ",path.call(print,"body"));return group$b(concat$d(parts));}case"ClassImplements":case"InterfaceExtends":return concat$d([path.call(print,"id"),path.call(print,"typeParameters")]);case"TSClassImplements":return concat$d([path.call(print,"expression"),path.call(print,"typeParameters")]);case"TSIntersectionType":case"IntersectionTypeAnnotation":{var types=path.map(print,"types");var result=[];var wasIndented=false;for(var _i41=0;_i41<types.length;++_i41){if(_i41===0){result.push(types[_i41]);}else if(isObjectType$1(n.types[_i41-1])&&isObjectType$1(n.types[_i41])){// If both are objects, don\'t indent\nresult.push(concat$d([" & ",wasIndented?indent$7(types[_i41]):types[_i41]]));}else if(!isObjectType$1(n.types[_i41-1])&&!isObjectType$1(n.types[_i41])){// If no object is involved, go to the next line if it breaks\nresult.push(indent$7(concat$d([" &",line$9,types[_i41]])));}else{// If you go from object to non-object or vis-versa, then inline it\nif(_i41>1){wasIndented=true;}result.push(" & ",_i41>1?indent$7(types[_i41]):types[_i41]);}}return group$b(concat$d(result));}case"TSUnionType":case"UnionTypeAnnotation":{// single-line variation\n// A | B | C\n// multi-line variation\n// | A\n// | B\n// | C\nvar _parent10=path.getParentNode();// If there\'s a leading comment, the parent is doing the indentation\nvar shouldIndent=_parent10.type!=="TypeParameterInstantiation"&&_parent10.type!=="TSTypeParameterInstantiation"&&_parent10.type!=="GenericTypeAnnotation"&&_parent10.type!=="TSTypeReference"&&_parent10.type!=="TSTypeAssertion"&&_parent10.type!=="TupleTypeAnnotation"&&_parent10.type!=="TSTupleType"&&!(_parent10.type==="FunctionTypeParam"&&!_parent10.name)&&!((_parent10.type==="TypeAlias"||_parent10.type==="VariableDeclarator"||_parent10.type==="TSTypeAliasDeclaration")&&hasLeadingOwnLineComment$1(options.originalText,n,options));// {\n//   a: string\n// } | null | void\n// should be inlined and not be printed in the multi-line variant\nvar _shouldHug=shouldHugType(n);// We want to align the children but without its comment, so it looks like\n// | child1\n// // comment\n// | child2\nvar _printed6=path.map(function(typePath){var printedType=typePath.call(print);if(!_shouldHug){printedType=align$1(2,printedType);}return comments.printComments(typePath,function(){return printedType;},options);},"types");if(_shouldHug){return join$9(" | ",_printed6);}var shouldAddStartLine=shouldIndent&&!hasLeadingOwnLineComment$1(options.originalText,n,options);var _code4=concat$d([ifBreak$6(concat$d([shouldAddStartLine?line$9:"","| "])),join$9(concat$d([line$9,"| "]),_printed6)]);if(needsParens_1(path,options)){return group$b(concat$d([indent$7(_code4),softline$6]));}if(_parent10.type==="TupleTypeAnnotation"&&_parent10.types.length>1||_parent10.type==="TSTupleType"&&_parent10.elementTypes.length>1){return group$b(concat$d([indent$7(concat$d([ifBreak$6(concat$d(["(",softline$6])),_code4])),softline$6,ifBreak$6(")")]));}return group$b(shouldIndent?indent$7(_code4):_code4);}case"NullableTypeAnnotation":return concat$d(["?",path.call(print,"typeAnnotation")]);case"TSNullKeyword":case"NullLiteralTypeAnnotation":return"null";case"ThisTypeAnnotation":return"this";case"NumberTypeAnnotation":return"number";case"SymbolTypeAnnotation":return"symbol";case"ObjectTypeCallProperty":if(n.static){parts.push("static ");}parts.push(path.call(print,"value"));return concat$d(parts);case"ObjectTypeIndexer":{var _variance=getFlowVariance$1(n);return concat$d([_variance||"","[",path.call(print,"id"),n.id?": ":"",path.call(print,"key"),"]: ",path.call(print,"value")]);}case"ObjectTypeProperty":{var _variance2=getFlowVariance$1(n);var modifier="";if(n.proto){modifier="proto ";}else if(n.static){modifier="static ";}return concat$d([modifier,isGetterOrSetter$1(n)?n.kind+" ":"",_variance2||"",printPropertyKey(path,options,print),printOptionalToken(path),isFunctionNotation$1(n,options)?"":": ",path.call(print,"value")]);}case"QualifiedTypeIdentifier":return concat$d([path.call(print,"qualification"),".",path.call(print,"id")]);case"StringLiteralTypeAnnotation":return nodeStr(n,options);case"NumberLiteralTypeAnnotation":assert.strictEqual((0,_typeof3.default)(n.value),"number");if(n.extra!=null){return printNumber$2(n.extra.raw);}return printNumber$2(n.raw);case"StringTypeAnnotation":return"string";case"DeclareTypeAlias":case"TypeAlias":{if(n.type==="DeclareTypeAlias"||n.declare){parts.push("declare ");}var _printed7=printAssignmentRight(n.id,n.right,path.call(print,"right"),options);parts.push("type ",path.call(print,"id"),path.call(print,"typeParameters")," =",_printed7,semi);return group$b(concat$d(parts));}case"TypeCastExpression":{return concat$d(["(",path.call(print,"expression"),printTypeAnnotation(path,options,print),")"]);}case"TypeParameterDeclaration":case"TypeParameterInstantiation":{var value=path.getValue();var commentStart=value.range?options.originalText.slice(0,value.range[0]).lastIndexOf("/*"):-1;// As noted in the TypeCastExpression comments above, we\'re able to use a normal whitespace regex here\n// because we know for sure that this is a type definition.\nvar commentSyntax=commentStart>=0&&options.originalText.slice(commentStart).match(/^\\/\\*\\s*::/);if(commentSyntax){return concat$d(["/*:: ",printTypeParameters(path,options,print,"params")," */"]);}return printTypeParameters(path,options,print,"params");}case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return printTypeParameters(path,options,print,"params");case"TSTypeParameter":case"TypeParameter":{var _parent11=path.getParentNode();if(_parent11.type==="TSMappedType"){parts.push("[",path.call(print,"name"));if(n.constraint){parts.push(" in ",path.call(print,"constraint"));}parts.push("]");return concat$d(parts);}var _variance3=getFlowVariance$1(n);if(_variance3){parts.push(_variance3);}parts.push(path.call(print,"name"));if(n.bound){parts.push(": ");parts.push(path.call(print,"bound"));}if(n.constraint){parts.push(" extends ",path.call(print,"constraint"));}if(n.default){parts.push(" = ",path.call(print,"default"));}// Keep comma if the file extension is .tsx and\n// has one type parameter that isn\'t extend with any types.\n// Because, otherwise formatted result will be invalid as tsx.\nvar _grandParent2=path.getNode(2);if(_parent11.params&&_parent11.params.length===1&&isTSXFile$1(options)&&!n.constraint&&_grandParent2.type==="ArrowFunctionExpression"){parts.push(",");}return concat$d(parts);}case"TypeofTypeAnnotation":return concat$d(["typeof ",path.call(print,"argument")]);case"VoidTypeAnnotation":return"void";case"InferredPredicate":return"%checks";// Unhandled types below. If encountered, nodes of these types should\n// be either left alone or desugared into AST types that are fully\n// supported by the pretty-printer.\ncase"DeclaredPredicate":return concat$d(["%checks(",path.call(print,"value"),")"]);case"TSAbstractKeyword":return"abstract";case"TSAnyKeyword":return"any";case"TSAsyncKeyword":return"async";case"TSBooleanKeyword":return"boolean";case"TSBigIntKeyword":return"bigint";case"TSConstKeyword":return"const";case"TSDeclareKeyword":return"declare";case"TSExportKeyword":return"export";case"TSNeverKeyword":return"never";case"TSNumberKeyword":return"number";case"TSObjectKeyword":return"object";case"TSProtectedKeyword":return"protected";case"TSPrivateKeyword":return"private";case"TSPublicKeyword":return"public";case"TSReadonlyKeyword":return"readonly";case"TSSymbolKeyword":return"symbol";case"TSStaticKeyword":return"static";case"TSStringKeyword":return"string";case"TSUndefinedKeyword":return"undefined";case"TSUnknownKeyword":return"unknown";case"TSVoidKeyword":return"void";case"TSAsExpression":return concat$d([path.call(print,"expression")," as ",path.call(print,"typeAnnotation")]);case"TSArrayType":return concat$d([path.call(print,"elementType"),"[]"]);case"TSPropertySignature":{if(n.export){parts.push("export ");}if(n.accessibility){parts.push(n.accessibility+" ");}if(n.static){parts.push("static ");}if(n.readonly){parts.push("readonly ");}parts.push(printPropertyKey(path,options,print),printOptionalToken(path));if(n.typeAnnotation){parts.push(": ");parts.push(path.call(print,"typeAnnotation"));}// This isn\'t valid semantically, but it\'s in the AST so we can print it.\nif(n.initializer){parts.push(" = ",path.call(print,"initializer"));}return concat$d(parts);}case"TSParameterProperty":if(n.accessibility){parts.push(n.accessibility+" ");}if(n.export){parts.push("export ");}if(n.static){parts.push("static ");}if(n.readonly){parts.push("readonly ");}parts.push(path.call(print,"parameter"));return concat$d(parts);case"TSTypeReference":return concat$d([path.call(print,"typeName"),printTypeParameters(path,options,print,"typeParameters")]);case"TSTypeQuery":return concat$d(["typeof ",path.call(print,"exprName")]);case"TSIndexSignature":{var _parent12=path.getParentNode();// The typescript parser accepts multiple parameters here. If you\'re\n// using them, it makes sense to have a trailing comma. But if you\n// aren\'t, this is more like a computed property name than an array.\n// So we leave off the trailing comma when there\'s just one parameter.\nvar trailingComma=n.parameters.length>1?ifBreak$6(shouldPrintComma$1(options)?",":""):"";var parametersGroup=group$b(concat$d([indent$7(concat$d([softline$6,join$9(concat$d([", ",softline$6]),path.map(print,"parameters"))])),trailingComma,softline$6]));return concat$d([n.export?"export ":"",n.accessibility?concat$d([n.accessibility," "]):"",n.static?"static ":"",n.readonly?"readonly ":"","[",n.parameters?parametersGroup:"",n.typeAnnotation?"]: ":"]",n.typeAnnotation?path.call(print,"typeAnnotation"):"",_parent12.type==="ClassBody"?semi:""]);}case"TSTypePredicate":return concat$d([n.asserts?"asserts ":"",path.call(print,"parameterName"),n.typeAnnotation?concat$d([" is ",path.call(print,"typeAnnotation")]):""]);case"TSNonNullExpression":return concat$d([path.call(print,"expression"),"!"]);case"TSThisType":return"this";case"TSImportType":return concat$d([!n.isTypeOf?"":"typeof ","import(",path.call(print,n.parameter?"parameter":"argument"),")",!n.qualifier?"":concat$d([".",path.call(print,"qualifier")]),printTypeParameters(path,options,print,"typeParameters")]);case"TSLiteralType":return path.call(print,"literal");case"TSIndexedAccessType":return concat$d([path.call(print,"objectType"),"[",path.call(print,"indexType"),"]"]);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":{if(n.type!=="TSCallSignatureDeclaration"){parts.push("new ");}parts.push(group$b(printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true)));if(n.returnType||n.typeAnnotation){var isType=n.type==="TSConstructorType";parts.push(isType?" => ":": ",path.call(print,"returnType"),path.call(print,"typeAnnotation"));}return concat$d(parts);}case"TSTypeOperator":return concat$d([n.operator," ",path.call(print,"typeAnnotation")]);case"TSMappedType":{var _shouldBreak3=hasNewlineInRange$3(options.originalText,options.locStart(n),options.locEnd(n));return group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,n.readonly?concat$d([getTypeScriptMappedTypeModifier$1(n.readonly,"readonly")," "]):"",printTypeScriptModifiers(path,options,print),path.call(print,"typeParameter"),n.optional?getTypeScriptMappedTypeModifier$1(n.optional,"?"):"",n.typeAnnotation?": ":"",path.call(print,"typeAnnotation"),ifBreak$6(semi,"")])),comments.printDanglingComments(path,options,/* sameIndent */true),options.bracketSpacing?line$9:softline$6,"}"]),{shouldBreak:_shouldBreak3});}case"TSMethodSignature":parts.push(n.accessibility?concat$d([n.accessibility," "]):"",n.export?"export ":"",n.static?"static ":"",n.readonly?"readonly ":"",n.computed?"[":"",path.call(print,"key"),n.computed?"]":"",printOptionalToken(path),printFunctionParams(path,print,options,/* expandArg */false,/* printTypeParams */true));if(n.returnType||n.typeAnnotation){parts.push(": ",path.call(print,"returnType"),path.call(print,"typeAnnotation"));}return group$b(concat$d(parts));case"TSNamespaceExportDeclaration":parts.push("export as namespace ",path.call(print,"id"));if(options.semi){parts.push(";");}return group$b(concat$d(parts));case"TSEnumDeclaration":if(n.declare){parts.push("declare ");}if(n.modifiers){parts.push(printTypeScriptModifiers(path,options,print));}if(n.const){parts.push("const ");}parts.push("enum ",path.call(print,"id")," ");if(n.members.length===0){parts.push(group$b(concat$d(["{",comments.printDanglingComments(path,options),softline$6,"}"])));}else{parts.push(group$b(concat$d(["{",indent$7(concat$d([hardline$9,printArrayItems(path,options,"members",print),shouldPrintComma$1(options,"es5")?",":""])),comments.printDanglingComments(path,options,/* sameIndent */true),hardline$9,"}"])));}return concat$d(parts);case"TSEnumMember":parts.push(path.call(print,"id"));if(n.initializer){parts.push(" = ",path.call(print,"initializer"));}return concat$d(parts);case"TSImportEqualsDeclaration":if(n.isExport){parts.push("export ");}parts.push("import ",path.call(print,"id")," = ",path.call(print,"moduleReference"));if(options.semi){parts.push(";");}return group$b(concat$d(parts));case"TSExternalModuleReference":return concat$d(["require(",path.call(print,"expression"),")"]);case"TSModuleDeclaration":{var _parent13=path.getParentNode();var isExternalModule=isLiteral$1(n.id);var parentIsDeclaration=_parent13.type==="TSModuleDeclaration";var bodyIsDeclaration=n.body&&n.body.type==="TSModuleDeclaration";if(parentIsDeclaration){parts.push(".");}else{if(n.declare){parts.push("declare ");}parts.push(printTypeScriptModifiers(path,options,print));var textBetweenNodeAndItsId=options.originalText.slice(options.locStart(n),options.locStart(n.id));// Global declaration looks like this:\n// (declare)? global { ... }\nvar isGlobalDeclaration=n.id.type==="Identifier"&&n.id.name==="global"&&!/namespace|module/.test(textBetweenNodeAndItsId);if(!isGlobalDeclaration){parts.push(isExternalModule||/(^|\\s)module(\\s|$)/.test(textBetweenNodeAndItsId)?"module ":"namespace ");}}parts.push(path.call(print,"id"));if(bodyIsDeclaration){parts.push(path.call(print,"body"));}else if(n.body){parts.push(" ",group$b(path.call(print,"body")));}else{parts.push(semi);}return concat$d(parts);}case"PrivateName":return concat$d(["#",path.call(print,"id")]);// TODO: Temporary auto-generated node type. To remove when typescript-estree has proper support for private fields.\ncase"TSPrivateIdentifier":return n.escapedText;case"TSConditionalType":return printTernaryOperator(path,options,print,{beforeParts:function beforeParts(){return[path.call(print,"checkType")," ","extends"," ",path.call(print,"extendsType")];},afterParts:function afterParts(){return[];},shouldCheckJsx:false,conditionalNodeType:"TSConditionalType",consequentNodePropertyName:"trueType",alternateNodePropertyName:"falseType",testNodePropertyNames:["checkType","extendsType"]});case"TSInferType":return concat$d(["infer"," ",path.call(print,"typeParameter")]);case"InterpreterDirective":parts.push("#!",n.value,hardline$9);if(isNextLineEmpty$4(options.originalText,n,options.locEnd)){parts.push(hardline$9);}return concat$d(parts);case"NGRoot":return concat$d([].concat(path.call(print,"node"),!n.node.comments||n.node.comments.length===0?[]:concat$d([" //",n.node.comments[0].value.trimEnd()])));case"NGChainedExpression":return group$b(join$9(concat$d([";",line$9]),path.map(function(childPath){return hasNgSideEffect$1(childPath)?print(childPath):concat$d(["(",print(childPath),")"]);},"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return concat$d([n.prefix,": ",n.value.trim()]);case"NGMicrosyntax":return concat$d(path.map(function(childPath,index){return concat$d([index===0?"":isNgForOf$1(childPath.getValue(),index,n)?" ":concat$d([";",line$9]),print(childPath)]);},"body"));case"NGMicrosyntaxKey":return /^[a-z_$][a-z0-9_$]*(-[a-z_$][a-z0-9_$])*$/i.test(n.name)?n.name:JSON.stringify(n.name);case"NGMicrosyntaxExpression":return concat$d([path.call(print,"expression"),n.alias===null?"":concat$d([" as ",path.call(print,"alias")])]);case"NGMicrosyntaxKeyedExpression":{var _index4=path.getName();var _parentNode8=path.getParentNode();var shouldNotPrintColon=isNgForOf$1(n,_index4,_parentNode8)||(_index4===1&&(n.key.name==="then"||n.key.name==="else")||_index4===2&&n.key.name==="else"&&_parentNode8.body[_index4-1].type==="NGMicrosyntaxKeyedExpression"&&_parentNode8.body[_index4-1].key.name==="then")&&_parentNode8.body[0].type==="NGMicrosyntaxExpression";return concat$d([path.call(print,"key"),shouldNotPrintColon?" ":": ",path.call(print,"expression")]);}case"NGMicrosyntaxLet":return concat$d(["let ",path.call(print,"key"),n.value===null?"":concat$d([" = ",path.call(print,"value")])]);case"NGMicrosyntaxAs":return concat$d([path.call(print,"key")," as ",path.call(print,"alias")]);case"ArgumentPlaceholder":return"?";// These are not valid TypeScript. Printing them just for the sake of error recovery.\ncase"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return concat$d(["?",path.call(print,"typeAnnotation")]);case"TSJSDocNonNullableType":return concat$d(["!",path.call(print,"typeAnnotation")]);case"TSJSDocFunctionType":return concat$d(["function(",// The parameters could be here, but typescript-estree doesn\'t convert them anyway (throws an error).\n"): ",path.call(print,"typeAnnotation")]);default:/* istanbul ignore next */throw new Error("unknown type: "+JSON.stringify(n.type));}}function printStatementSequence(path,options,print){var printed=[];var bodyNode=path.getNode();var isClass=bodyNode.type==="ClassBody";path.map(function(stmtPath,i){var stmt=stmtPath.getValue();// Just in case the AST has been modified to contain falsy\n// "statements," it\'s safer simply to skip them.\n/* istanbul ignore if */if(!stmt){return;}// Skip printing EmptyStatement nodes to avoid leaving stray\n// semicolons lying around.\nif(stmt.type==="EmptyStatement"){return;}var stmtPrinted=print(stmtPath);var text=options.originalText;var parts=[];// in no-semi mode, prepend statement with semicolon if it might break ASI\n// don\'t prepend the only JSX element in a program with semicolon\nif(!options.semi&&!isClass&&!isTheOnlyJSXElementInMarkdown$1(options,stmtPath)&&stmtNeedsASIProtection(stmtPath,options)){if(stmt.comments&&stmt.comments.some(function(comment){return comment.leading;})){parts.push(print(stmtPath,{needsSemi:true}));}else{parts.push(";",stmtPrinted);}}else{parts.push(stmtPrinted);}if(!options.semi&&isClass){if(classPropMayCauseASIProblems$1(stmtPath)){parts.push(";");}else if(stmt.type==="ClassProperty"){var nextChild=bodyNode.body[i+1];if(classChildNeedsASIProtection$1(nextChild)){parts.push(";");}}}if(isNextLineEmpty$4(text,stmt,options.locEnd)&&!isLastStatement$1(stmtPath)){parts.push(hardline$9);}printed.push(concat$d(parts));});return join$9(hardline$9,printed);}function printPropertyKey(path,options,print){var node=path.getNode();if(node.computed){return concat$d(["[",path.call(print,"key"),"]"]);}var parent=path.getParentNode();var key=node.key;if(node.type==="ClassPrivateProperty"&&// flow has `Identifier` key, and babel has `PrivateName` key\nkey.type==="Identifier"){return concat$d(["#",path.call(print,"key")]);}if(options.quoteProps==="consistent"&&!needsQuoteProps.has(parent)){var objectHasStringProp=(parent.properties||parent.body||parent.members).some(function(prop){return!prop.computed&&prop.key&&isStringLiteral$1(prop.key)&&!isStringPropSafeToCoerceToIdentifier$1(prop,options);});needsQuoteProps.set(parent,objectHasStringProp);}if(key.type==="Identifier"&&(options.parser==="json"||options.quoteProps==="consistent"&&needsQuoteProps.get(parent))){// a -> "a"\nvar prop=printString$2(JSON.stringify(key.name),options);return path.call(function(keyPath){return comments.printComments(keyPath,function(){return prop;},options);},"key");}if(isStringPropSafeToCoerceToIdentifier$1(node,options)&&(options.quoteProps==="as-needed"||options.quoteProps==="consistent"&&!needsQuoteProps.get(parent))){// \'a\' -> a\nreturn path.call(function(keyPath){return comments.printComments(keyPath,function(){return key.value;},options);},"key");}return path.call(print,"key");}function printMethod(path,options,print){var node=path.getNode();var kind=node.kind;var value=node.value||node;var parts=[];if(!kind||kind==="init"||kind==="method"||kind==="constructor"){if(value.async){parts.push("async ");}if(value.generator){parts.push("*");}}else{assert.ok(kind==="get"||kind==="set");parts.push(kind," ");}parts.push(printPropertyKey(path,options,print),node.optional||node.key.optional?"?":"",node===value?printMethodInternal(path,options,print):path.call(function(path){return printMethodInternal(path,options,print);},"value"));return concat$d(parts);}function printMethodInternal(path,options,print){var parts=[printFunctionTypeParameters(path,options,print),group$b(concat$d([printFunctionParams(path,print,options),printReturnType(path,print,options)]))];if(path.getNode().body){parts.push(" ",path.call(print,"body"));}else{parts.push(options.semi?";":"");}return concat$d(parts);}function couldGroupArg(arg){return arg.type==="ObjectExpression"&&(arg.properties.length>0||arg.comments)||arg.type==="ArrayExpression"&&(arg.elements.length>0||arg.comments)||arg.type==="TSTypeAssertion"&&couldGroupArg(arg.expression)||arg.type==="TSAsExpression"&&couldGroupArg(arg.expression)||arg.type==="FunctionExpression"||arg.type==="ArrowFunctionExpression"&&(// we want to avoid breaking inside composite return types but not simple keywords\n// https://github.com/prettier/prettier/issues/4070\n// export class Thing implements OtherThing {\n//   do: (type: Type) => Provider<Prop> = memoize(\n//     (type: ObjectType): Provider<Opts> => {}\n//   );\n// }\n// https://github.com/prettier/prettier/issues/6099\n// app.get("/", (req, res): void => {\n//   res.send("Hello World!");\n// });\n!arg.returnType||!arg.returnType.typeAnnotation||arg.returnType.typeAnnotation.type!=="TSTypeReference")&&(arg.body.type==="BlockStatement"||arg.body.type==="ArrowFunctionExpression"||arg.body.type==="ObjectExpression"||arg.body.type==="ArrayExpression"||arg.body.type==="CallExpression"||arg.body.type==="OptionalCallExpression"||arg.body.type==="ConditionalExpression"||isJSXNode$1(arg.body));}function shouldGroupLastArg(args){var lastArg=getLast$3(args);var penultimateArg=getPenultimate$1(args);return!hasLeadingComment$3(lastArg)&&!hasTrailingComment$1(lastArg)&&couldGroupArg(lastArg)&&(// If the last two arguments are of the same type,\n// disable last element expansion.\n!penultimateArg||penultimateArg.type!==lastArg.type);}function shouldGroupFirstArg(args){if(args.length!==2){return false;}var _args2=(0,_slicedToArray2.default)(args,2),firstArg=_args2[0],secondArg=_args2[1];return(!firstArg.comments||!firstArg.comments.length)&&(firstArg.type==="FunctionExpression"||firstArg.type==="ArrowFunctionExpression"&&firstArg.body.type==="BlockStatement")&&secondArg.type!=="FunctionExpression"&&secondArg.type!=="ArrowFunctionExpression"&&secondArg.type!=="ConditionalExpression"&&!couldGroupArg(secondArg);}function printJestEachTemplateLiteral(node,expressions,options){/**\n     * a    | b    | expected\n     * ${1} | ${1} | ${2}\n     * ${1} | ${2} | ${3}\n     * ${2} | ${1} | ${3}\n     */var headerNames=node.quasis[0].value.raw.trim().split(/\\s*\\|\\s*/);if(headerNames.length>1||headerNames.some(function(headerName){return headerName.length!==0;})){var _ret5=function(){var parts=[];var stringifiedExpressions=expressions.map(function(doc){return"${"+printDocToString$2(doc,Object.assign({},options,{printWidth:Infinity,endOfLine:"lf"})).formatted+"}";});var tableBody=[{hasLineBreak:false,cells:[]}];for(var i=1;i<node.quasis.length;i++){var row=tableBody[tableBody.length-1];var correspondingExpression=stringifiedExpressions[i-1];row.cells.push(correspondingExpression);if(correspondingExpression.includes("\\n")){row.hasLineBreak=true;}if(node.quasis[i].value.raw.includes("\\n")){tableBody.push({hasLineBreak:false,cells:[]});}}var maxColumnCount=Math.max.apply(Math,[headerNames.length].concat((0,_toConsumableArray3.default)(tableBody.map(function(row){return row.cells.length;}))));var maxColumnWidths=Array.from({length:maxColumnCount}).fill(0);var table=[{cells:headerNames}].concat((0,_toConsumableArray3.default)(tableBody.filter(function(row){return row.cells.length!==0;})));var _iterator40=_createForOfIteratorHelper(table.filter(function(row){return!row.hasLineBreak;})),_step40;try{for(_iterator40.s();!(_step40=_iterator40.n()).done;){var cells=_step40.value.cells;cells.forEach(function(cell,index){maxColumnWidths[index]=Math.max(maxColumnWidths[index],getStringWidth$3(cell));});}}catch(err){_iterator40.e(err);}finally{_iterator40.f();}parts.push(lineSuffixBoundary$1,"`",indent$7(concat$d([hardline$9,join$9(hardline$9,table.map(function(row){return join$9(" | ",row.cells.map(function(cell,index){return row.hasLineBreak?cell:cell+" ".repeat(maxColumnWidths[index]-getStringWidth$3(cell));}));}))])),hardline$9,"`");return{v:concat$d(parts)};}();if((0,_typeof3.default)(_ret5)==="object")return _ret5.v;}}function printArgumentsList(path,options,print){var node=path.getValue();var args=node.arguments;if(args.length===0){return concat$d(["(",comments.printDanglingComments(path,options,/* sameIndent */true),")"]);}// useEffect(() => { ... }, [foo, bar, baz])\nif(args.length===2&&args[0].type==="ArrowFunctionExpression"&&args[0].params.length===0&&args[0].body.type==="BlockStatement"&&args[1].type==="ArrayExpression"&&!args.find(function(arg){return arg.comments;})){return concat$d(["(",path.call(print,"arguments",0),", ",path.call(print,"arguments",1),")"]);}// func(\n//   ({\n//     a,\n//     b\n//   }) => {}\n// );\nfunction shouldBreakForArrowFunctionInArguments(arg,argPath){if(!arg||arg.type!=="ArrowFunctionExpression"||!arg.body||arg.body.type!=="BlockStatement"||!arg.params||arg.params.length<1){return false;}var shouldBreak=false;argPath.each(function(paramPath){var printed=concat$d([print(paramPath)]);shouldBreak=shouldBreak||willBreak$1(printed);},"params");return shouldBreak;}var anyArgEmptyLine=false;var shouldBreakForArrowFunction=false;var hasEmptyLineFollowingFirstArg=false;var lastArgIndex=args.length-1;var printedArguments=path.map(function(argPath,index){var arg=argPath.getNode();var parts=[print(argPath)];if(index===lastArgIndex);else if(isNextLineEmpty$4(options.originalText,arg,options.locEnd)){if(index===0){hasEmptyLineFollowingFirstArg=true;}anyArgEmptyLine=true;parts.push(",",hardline$9,hardline$9);}else{parts.push(",",line$9);}shouldBreakForArrowFunction=shouldBreakForArrowFunctionInArguments(arg,argPath);return concat$d(parts);},"arguments");var maybeTrailingComma=// Dynamic imports cannot have trailing commas\n!(node.callee&&node.callee.type==="Import")&&shouldPrintComma$1(options,"all")?",":"";function allArgsBrokenOut(){return group$b(concat$d(["(",indent$7(concat$d([line$9,concat$d(printedArguments)])),maybeTrailingComma,line$9,")"]),{shouldBreak:true});}if(path.getParentNode().type!=="Decorator"&&isFunctionCompositionArgs$1(args)){return allArgsBrokenOut();}var shouldGroupFirst=shouldGroupFirstArg(args);var shouldGroupLast=shouldGroupLastArg(args);if(shouldGroupFirst||shouldGroupLast){var shouldBreak=(shouldGroupFirst?printedArguments.slice(1).some(willBreak$1):printedArguments.slice(0,-1).some(willBreak$1))||anyArgEmptyLine||shouldBreakForArrowFunction;// We want to print the last argument with a special flag\nvar printedExpanded;var i=0;path.each(function(argPath){if(shouldGroupFirst&&i===0){printedExpanded=[concat$d([argPath.call(function(p){return print(p,{expandFirstArg:true});}),printedArguments.length>1?",":"",hasEmptyLineFollowingFirstArg?hardline$9:line$9,hasEmptyLineFollowingFirstArg?hardline$9:""])].concat(printedArguments.slice(1));}if(shouldGroupLast&&i===args.length-1){printedExpanded=printedArguments.slice(0,-1).concat(argPath.call(function(p){return print(p,{expandLastArg:true});}));}i++;},"arguments");var somePrintedArgumentsWillBreak=printedArguments.some(willBreak$1);var simpleConcat=concat$d(["(",concat$d(printedExpanded),")"]);return concat$d([somePrintedArgumentsWillBreak?breakParent$3:"",conditionalGroup$1([!somePrintedArgumentsWillBreak&&!node.typeArguments&&!node.typeParameters?simpleConcat:ifBreak$6(allArgsBrokenOut(),simpleConcat),shouldGroupFirst?concat$d(["(",group$b(printedExpanded[0],{shouldBreak:true}),concat$d(printedExpanded.slice(1)),")"]):concat$d(["(",concat$d(printedArguments.slice(0,-1)),group$b(getLast$3(printedExpanded),{shouldBreak:true}),")"]),allArgsBrokenOut()],{shouldBreak:shouldBreak})]);}var contents=concat$d(["(",indent$7(concat$d([softline$6,concat$d(printedArguments)])),ifBreak$6(maybeTrailingComma),softline$6,")"]);if(isLongCurriedCallExpression$1(path)){// By not wrapping the arguments in a group, the printer prioritizes\n// breaking up these arguments rather than the args of the parent call.\nreturn contents;}return group$b(contents,{shouldBreak:printedArguments.some(willBreak$1)||anyArgEmptyLine});}function printTypeAnnotation(path,options,print){var node=path.getValue();if(!node.typeAnnotation){return"";}var parentNode=path.getParentNode();var isDefinite=node.definite||parentNode&&parentNode.type==="VariableDeclarator"&&parentNode.definite;var isFunctionDeclarationIdentifier=parentNode.type==="DeclareFunction"&&parentNode.id===node;if(isFlowAnnotationComment$1(options.originalText,node.typeAnnotation,options)){return concat$d([" /*: ",path.call(print,"typeAnnotation")," */"]);}return concat$d([isFunctionDeclarationIdentifier?"":isDefinite?"!: ":": ",path.call(print,"typeAnnotation")]);}function printFunctionTypeParameters(path,options,print){var fun=path.getValue();if(fun.typeArguments){return path.call(print,"typeArguments");}if(fun.typeParameters){return path.call(print,"typeParameters");}return"";}function printFunctionParams(path,print,options,expandArg,printTypeParams){var fun=path.getValue();var parent=path.getParentNode();var paramsField=fun.parameters?"parameters":"params";var isParametersInTestCall=isTestCall$1(parent);var shouldHugParameters=shouldHugArguments(fun);var shouldExpandParameters=expandArg&&!(fun[paramsField]&&fun[paramsField].some(function(n){return n.comments;}));var typeParams=printTypeParams?printFunctionTypeParameters(path,options,print):"";var printed=[];if(fun[paramsField]){var lastArgIndex=fun[paramsField].length-1;printed=path.map(function(childPath,index){var parts=[];var param=childPath.getValue();parts.push(print(childPath));if(index===lastArgIndex){if(fun.rest){parts.push(",",line$9);}}else if(isParametersInTestCall||shouldHugParameters||shouldExpandParameters){parts.push(", ");}else if(isNextLineEmpty$4(options.originalText,param,options.locEnd)){parts.push(",",hardline$9,hardline$9);}else{parts.push(",",line$9);}return concat$d(parts);},paramsField);}if(fun.rest){printed.push(concat$d(["...",path.call(print,"rest")]));}if(printed.length===0){return concat$d([typeParams,"(",comments.printDanglingComments(path,options,/* sameIndent */true,function(comment){return getNextNonSpaceNonCommentCharacter$1(options.originalText,comment,options.locEnd)===")";}),")"]);}var lastParam=getLast$3(fun[paramsField]);// If the parent is a call with the first/last argument expansion and this is the\n// params of the first/last argument, we don\'t want the arguments to break and instead\n// want the whole expression to be on a new line.\n//\n// Good:                 Bad:\n//   verylongcall(         verylongcall((\n//     (a, b) => {           a,\n//     }                     b,\n//   })                    ) => {\n//                         })\nif(shouldExpandParameters){return group$b(concat$d([removeLines$2(typeParams),"(",concat$d(printed.map(removeLines$2)),")"]));}// Single object destructuring should hug\n//\n// function({\n//   a,\n//   b,\n//   c\n// }) {}\nvar hasNotParameterDecorator=fun[paramsField].every(function(param){return!param.decorators;});if(shouldHugParameters&&hasNotParameterDecorator){return concat$d([typeParams,"(",concat$d(printed),")"]);}// don\'t break in specs, eg; `it("should maintain parens around done even when long", (done) => {})`\nif(isParametersInTestCall){return concat$d([typeParams,"(",concat$d(printed),")"]);}var isFlowShorthandWithOneArg=(isObjectTypePropertyAFunction$1(parent,options)||isTypeAnnotationAFunction$1(parent,options)||parent.type==="TypeAlias"||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType"||parent.type==="IntersectionTypeAnnotation"||parent.type==="FunctionTypeAnnotation"&&parent.returnType===fun)&&fun[paramsField].length===1&&fun[paramsField][0].name===null&&fun[paramsField][0].typeAnnotation&&fun.typeParameters===null&&isSimpleFlowType$1(fun[paramsField][0].typeAnnotation)&&!fun.rest;if(isFlowShorthandWithOneArg){if(options.arrowParens==="always"){return concat$d(["(",concat$d(printed),")"]);}return concat$d(printed);}var canHaveTrailingComma=!(lastParam&&lastParam.type==="RestElement")&&!fun.rest;return concat$d([typeParams,"(",indent$7(concat$d([softline$6,concat$d(printed)])),ifBreak$6(canHaveTrailingComma&&shouldPrintComma$1(options,"all")?",":""),softline$6,")"]);}function shouldPrintParamsWithoutParens(path,options){if(options.arrowParens==="always"){return false;}if(options.arrowParens==="avoid"){var node=path.getValue();return canPrintParamsWithoutParens(node);}// Fallback default; should be unreachable\nreturn false;}function canPrintParamsWithoutParens(node){return node.params.length===1&&!node.rest&&!node.typeParameters&&!hasDanglingComments$1(node)&&node.params[0].type==="Identifier"&&!node.params[0].typeAnnotation&&!node.params[0].comments&&!node.params[0].optional&&!node.predicate&&!node.returnType;}function printFunctionDeclaration(path,print,options){var n=path.getValue();var parts=[];if(n.async){parts.push("async ");}if(n.generator){parts.push("function* ");}else{parts.push("function ");}if(n.id){parts.push(path.call(print,"id"));}parts.push(printFunctionTypeParameters(path,options,print),group$b(concat$d([printFunctionParams(path,print,options),printReturnType(path,print,options)])),n.body?" ":"",path.call(print,"body"));return concat$d(parts);}function printReturnType(path,print,options){var n=path.getValue();var returnType=path.call(print,"returnType");if(n.returnType&&isFlowAnnotationComment$1(options.originalText,n.returnType,options)){return concat$d([" /*: ",returnType," */"]);}var parts=[returnType];// prepend colon to TypeScript type annotation\nif(n.returnType&&n.returnType.typeAnnotation){parts.unshift(": ");}if(n.predicate){// The return type will already add the colon, but otherwise we\n// need to do it ourselves\nparts.push(n.returnType?" ":": ",path.call(print,"predicate"));}return concat$d(parts);}function printExportDeclaration(path,options,print){var decl=path.getValue();var semi=options.semi?";":"";var parts=["export "];var isDefault=decl.default||decl.type==="ExportDefaultDeclaration";if(isDefault){parts.push("default ");}parts.push(comments.printDanglingComments(path,options,/* sameIndent */true));if(needsHardlineAfterDanglingComment$1(decl)){parts.push(hardline$9);}if(decl.declaration){parts.push(path.call(print,"declaration"));if(isDefault&&decl.declaration.type!=="ClassDeclaration"&&decl.declaration.type!=="FunctionDeclaration"&&decl.declaration.type!=="TSInterfaceDeclaration"&&decl.declaration.type!=="DeclareClass"&&decl.declaration.type!=="DeclareFunction"&&decl.declaration.type!=="TSDeclareFunction"){parts.push(semi);}}else{if(decl.specifiers&&decl.specifiers.length>0){var specifiers=[];var defaultSpecifiers=[];var namespaceSpecifiers=[];path.each(function(specifierPath){var specifierType=path.getValue().type;if(specifierType==="ExportSpecifier"){specifiers.push(print(specifierPath));}else if(specifierType==="ExportDefaultSpecifier"){defaultSpecifiers.push(print(specifierPath));}else if(specifierType==="ExportNamespaceSpecifier"){namespaceSpecifiers.push(concat$d(["* as ",print(specifierPath)]));}},"specifiers");var isNamespaceFollowed=namespaceSpecifiers.length!==0&&specifiers.length!==0;var isDefaultFollowed=defaultSpecifiers.length!==0&&(namespaceSpecifiers.length!==0||specifiers.length!==0);var canBreak=specifiers.length>1||defaultSpecifiers.length>0||decl.specifiers&&decl.specifiers.some(function(node){return node.comments;});var printed="";if(specifiers.length!==0){if(canBreak){printed=group$b(concat$d(["{",indent$7(concat$d([options.bracketSpacing?line$9:softline$6,join$9(concat$d([",",line$9]),specifiers)])),ifBreak$6(shouldPrintComma$1(options)?",":""),options.bracketSpacing?line$9:softline$6,"}"]));}else{printed=concat$d(["{",options.bracketSpacing?" ":"",concat$d(specifiers),options.bracketSpacing?" ":"","}"]);}}parts.push(decl.exportKind==="type"?"type ":"",concat$d(defaultSpecifiers),concat$d([isDefaultFollowed?", ":""]),concat$d(namespaceSpecifiers),concat$d([isNamespaceFollowed?", ":""]),printed);}else{parts.push("{}");}if(decl.source){parts.push(" from ",path.call(print,"source"));}parts.push(semi);}return concat$d(parts);}function printFlowDeclaration(path,parts){var parentExportDecl=getParentExportDeclaration$1(path);if(parentExportDecl){assert.strictEqual(parentExportDecl.type,"DeclareExportDeclaration");}else{// If the parent node has type DeclareExportDeclaration, then it\n// will be responsible for printing the "declare" token. Otherwise\n// it needs to be printed with this non-exported declaration node.\nparts.unshift("declare ");}return concat$d(parts);}function printTypeScriptModifiers(path,options,print){var n=path.getValue();if(!n.modifiers||!n.modifiers.length){return"";}return concat$d([join$9(" ",path.map(print,"modifiers"))," "]);}function printTypeParameters(path,options,print,paramsKey){var n=path.getValue();if(!n[paramsKey]){return"";}// for TypeParameterDeclaration typeParameters is a single node\nif(!Array.isArray(n[paramsKey])){return path.call(print,paramsKey);}var grandparent=path.getNode(2);var greatGrandParent=path.getNode(3);var greatGreatGrandParent=path.getNode(4);var isParameterInTestCall=grandparent!=null&&isTestCall$1(grandparent);var shouldInline=isParameterInTestCall||n[paramsKey].length===0||n[paramsKey].length===1&&(shouldHugType(n[paramsKey][0])||n[paramsKey][0].type==="GenericTypeAnnotation"&&shouldHugType(n[paramsKey][0].id)||n[paramsKey][0].type==="TSTypeReference"&&shouldHugType(n[paramsKey][0].typeName)||n[paramsKey][0].type==="NullableTypeAnnotation"||// See https://github.com/prettier/prettier/pull/6467 for the context.\ngreatGreatGrandParent&&greatGreatGrandParent.type==="VariableDeclarator"&&grandparent.type==="TSTypeAnnotation"&&greatGrandParent.type!=="ArrowFunctionExpression"&&n[paramsKey][0].type!=="TSUnionType"&&n[paramsKey][0].type!=="UnionTypeAnnotation"&&n[paramsKey][0].type!=="TSIntersectionType"&&n[paramsKey][0].type!=="IntersectionTypeAnnotation"&&n[paramsKey][0].type!=="TSConditionalType"&&n[paramsKey][0].type!=="TSMappedType"&&n[paramsKey][0].type!=="TSTypeOperator"&&n[paramsKey][0].type!=="TSIndexedAccessType"&&n[paramsKey][0].type!=="TSArrayType");function printDanglingCommentsForInline(n){if(!hasDanglingComments$1(n)){return"";}var hasOnlyBlockComments=n.comments.every(comments$1.isBlockComment);var printed=comments.printDanglingComments(path,options,/* sameIndent */hasOnlyBlockComments);if(hasOnlyBlockComments){return printed;}return concat$d([printed,hardline$9]);}if(shouldInline){return concat$d(["<",join$9(", ",path.map(print,paramsKey)),printDanglingCommentsForInline(n),">"]);}return group$b(concat$d(["<",indent$7(concat$d([softline$6,join$9(concat$d([",",line$9]),path.map(print,paramsKey))])),ifBreak$6(options.parser!=="typescript"&&options.parser!=="babel-ts"&&shouldPrintComma$1(options,"all")?",":""),softline$6,">"]));}function printClass(path,options,print){var n=path.getValue();var parts=[];if(n.abstract){parts.push("abstract ");}parts.push("class");if(n.id){parts.push(" ",path.call(print,"id"));}parts.push(path.call(print,"typeParameters"));var partsGroup=[];if(n.superClass){var printed=concat$d(["extends ",path.call(print,"superClass"),path.call(print,"superTypeParameters")]);// Keep old behaviour of extends in same line\n// If there is only on extends and there are not comments\nif((!n.implements||n.implements.length===0)&&(!n.superClass.comments||n.superClass.comments.length===0)){parts.push(concat$d([" ",path.call(function(superClass){return comments.printComments(superClass,function(){return printed;},options);},"superClass")]));}else{partsGroup.push(group$b(concat$d([line$9,path.call(function(superClass){return comments.printComments(superClass,function(){return printed;},options);},"superClass")])));}}else if(n.extends&&n.extends.length>0){parts.push(" extends ",join$9(", ",path.map(print,"extends")));}if(n.mixins&&n.mixins.length>0){partsGroup.push(line$9,"mixins ",group$b(indent$7(join$9(concat$d([",",line$9]),path.map(print,"mixins")))));}if(n.implements&&n.implements.length>0){partsGroup.push(line$9,"implements",group$b(indent$7(concat$d([line$9,join$9(concat$d([",",line$9]),path.map(print,"implements"))]))));}if(partsGroup.length>0){parts.push(group$b(indent$7(concat$d(partsGroup))));}if(n.body&&n.body.comments&&hasLeadingOwnLineComment$1(options.originalText,n.body,options)){parts.push(hardline$9);}else{parts.push(" ");}parts.push(path.call(print,"body"));return parts;}function printOptionalToken(path){var node=path.getValue();if(!node.optional||// It\'s an optional computed method parsed by typescript-estree.\n// "?" is printed in `printMethod`.\nnode.type==="Identifier"&&node===path.getParentNode().key){return"";}if(node.type==="OptionalCallExpression"||node.type==="OptionalMemberExpression"&&node.computed){return"?.";}return"?";}function printMemberLookup(path,options,print){var property=path.call(print,"property");var n=path.getValue();var optional=printOptionalToken(path);if(!n.computed){return concat$d([optional,".",property]);}if(!n.property||isNumericLiteral$1(n.property)){return concat$d([optional,"[",property,"]"]);}return group$b(concat$d([optional,"[",indent$7(concat$d([softline$6,property])),softline$6,"]"]));}function printBindExpressionCallee(path,options,print){return concat$d(["::",path.call(print,"callee")]);}// We detect calls on member expressions specially to format a\n// common pattern better. The pattern we are looking for is this:\n//\n// arr\n//   .map(x => x + 1)\n//   .filter(x => x > 10)\n//   .some(x => x % 2)\n//\n// The way it is structured in the AST is via a nested sequence of\n// MemberExpression and CallExpression. We need to traverse the AST\n// and make groups out of it to print it in the desired way.\nfunction printMemberChain(path,options,print){// The first phase is to linearize the AST by traversing it down.\n//\n//   a().b()\n// has the following AST structure:\n//   CallExpression(MemberExpression(CallExpression(Identifier)))\n// and we transform it into\n//   [Identifier, CallExpression, MemberExpression, CallExpression]\nvar printedNodes=[];// Here we try to retain one typed empty line after each call expression or\n// the first group whether it is in parentheses or not\nfunction shouldInsertEmptyLineAfter(node){var originalText=options.originalText;var nextCharIndex=getNextNonSpaceNonCommentCharacterIndex$3(originalText,node,options.locEnd);var nextChar=originalText.charAt(nextCharIndex);// if it is cut off by a parenthesis, we only account for one typed empty\n// line after that parenthesis\nif(nextChar===")"){return isNextLineEmptyAfterIndex$2(originalText,nextCharIndex+1,options.locEnd);}return isNextLineEmpty$4(originalText,node,options.locEnd);}function rec(path){var node=path.getValue();if((node.type==="CallExpression"||node.type==="OptionalCallExpression")&&(isMemberish$1(node.callee)||node.callee.type==="CallExpression"||node.callee.type==="OptionalCallExpression")){printedNodes.unshift({node:node,printed:concat$d([comments.printComments(path,function(){return concat$d([printOptionalToken(path),printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)]);},options),shouldInsertEmptyLineAfter(node)?hardline$9:""])});path.call(function(callee){return rec(callee);},"callee");}else if(isMemberish$1(node)){printedNodes.unshift({node:node,needsParens:needsParens_1(path,options),printed:comments.printComments(path,function(){return node.type==="OptionalMemberExpression"||node.type==="MemberExpression"?printMemberLookup(path,options,print):printBindExpressionCallee(path,options,print);},options)});path.call(function(object){return rec(object);},"object");}else if(node.type==="TSNonNullExpression"){printedNodes.unshift({node:node,printed:comments.printComments(path,function(){return"!";},options)});path.call(function(expression){return rec(expression);},"expression");}else{printedNodes.unshift({node:node,printed:path.call(print)});}}// Note: the comments of the root node have already been printed, so we\n// need to extract this first call without printing them as they would\n// if handled inside of the recursive call.\nvar node=path.getValue();printedNodes.unshift({node:node,printed:concat$d([printOptionalToken(path),printFunctionTypeParameters(path,options,print),printArgumentsList(path,options,print)])});path.call(function(callee){return rec(callee);},"callee");// Once we have a linear list of printed nodes, we want to create groups out\n// of it.\n//\n//   a().b.c().d().e\n// will be grouped as\n//   [\n//     [Identifier, CallExpression],\n//     [MemberExpression, MemberExpression, CallExpression],\n//     [MemberExpression, CallExpression],\n//     [MemberExpression],\n//   ]\n// so that we can print it as\n//   a()\n//     .b.c()\n//     .d()\n//     .e\n// The first group is the first node followed by\n//   - as many CallExpression as possible\n//       < fn()()() >.something()\n//   - as many array accessors as possible\n//       < fn()[0][1][2] >.something()\n//   - then, as many MemberExpression as possible but the last one\n//       < this.items >.something()\nvar groups=[];var currentGroup=[printedNodes[0]];var i=1;for(;i<printedNodes.length;++i){if(printedNodes[i].node.type==="TSNonNullExpression"||printedNodes[i].node.type==="OptionalCallExpression"||printedNodes[i].node.type==="CallExpression"||(printedNodes[i].node.type==="MemberExpression"||printedNodes[i].node.type==="OptionalMemberExpression")&&printedNodes[i].node.computed&&isNumericLiteral$1(printedNodes[i].node.property)){currentGroup.push(printedNodes[i]);}else{break;}}if(printedNodes[0].node.type!=="CallExpression"&&printedNodes[0].node.type!=="OptionalCallExpression"){for(;i+1<printedNodes.length;++i){if(isMemberish$1(printedNodes[i].node)&&isMemberish$1(printedNodes[i+1].node)){currentGroup.push(printedNodes[i]);}else{break;}}}groups.push(currentGroup);currentGroup=[];// Then, each following group is a sequence of MemberExpression followed by\n// a sequence of CallExpression. To compute it, we keep adding things to the\n// group until we has seen a CallExpression in the past and reach a\n// MemberExpression\nvar hasSeenCallExpression=false;for(;i<printedNodes.length;++i){if(hasSeenCallExpression&&isMemberish$1(printedNodes[i].node)){// [0] should be appended at the end of the group instead of the\n// beginning of the next one\nif(printedNodes[i].node.computed&&isNumericLiteral$1(printedNodes[i].node.property)){currentGroup.push(printedNodes[i]);continue;}groups.push(currentGroup);currentGroup=[];hasSeenCallExpression=false;}if(printedNodes[i].node.type==="CallExpression"||printedNodes[i].node.type==="OptionalCallExpression"){hasSeenCallExpression=true;}currentGroup.push(printedNodes[i]);if(printedNodes[i].node.comments&&printedNodes[i].node.comments.some(function(comment){return comment.trailing;})){groups.push(currentGroup);currentGroup=[];hasSeenCallExpression=false;}}if(currentGroup.length>0){groups.push(currentGroup);}// There are cases like Object.keys(), Observable.of(), _.values() where\n// they are the subject of all the chained calls and therefore should\n// be kept on the same line:\n//\n//   Object.keys(items)\n//     .filter(x => x)\n//     .map(x => x)\n//\n// In order to detect those cases, we use an heuristic: if the first\n// node is an identifier with the name starting with a capital\n// letter or just a sequence of _$. The rationale is that they are\n// likely to be factories.\nfunction isFactory(name){return /^[A-Z]|^[_$]+$/.test(name);}// In case the Identifier is shorter than tab width, we can keep the\n// first call in a single line, if it\'s an ExpressionStatement.\n//\n//   d3.scaleLinear()\n//     .domain([0, 100])\n//     .range([0, width]);\n//\nfunction isShort(name){return name.length<=options.tabWidth;}function shouldNotWrap(groups){var parent=path.getParentNode();var isExpression=parent&&parent.type==="ExpressionStatement";var hasComputed=groups[1].length&&groups[1][0].node.computed;if(groups[0].length===1){var firstNode=groups[0][0].node;return firstNode.type==="ThisExpression"||firstNode.type==="Identifier"&&(isFactory(firstNode.name)||isExpression&&isShort(firstNode.name)||hasComputed);}var lastNode=getLast$3(groups[0]).node;return(lastNode.type==="MemberExpression"||lastNode.type==="OptionalMemberExpression")&&lastNode.property.type==="Identifier"&&(isFactory(lastNode.property.name)||hasComputed);}var shouldMerge=groups.length>=2&&!groups[1][0].node.comments&&shouldNotWrap(groups);function printGroup(printedGroup){var printed=printedGroup.map(function(tuple){return tuple.printed;});// Checks if the last node (i.e. the parent node) needs parens and print\n// accordingly\nif(printedGroup.length>0&&printedGroup[printedGroup.length-1].needsParens){return concat$d(["("].concat((0,_toConsumableArray3.default)(printed),[")"]));}return concat$d(printed);}function printIndentedGroup(groups){if(groups.length===0){return"";}return indent$7(group$b(concat$d([hardline$9,join$9(hardline$9,groups.map(printGroup))])));}var printedGroups=groups.map(printGroup);var oneLine=concat$d(printedGroups);var cutoff=shouldMerge?3:2;var flatGroups=groups.reduce(function(res,group){return res.concat(group);},[]);var hasComment=flatGroups.slice(1,-1).some(function(node){return hasLeadingComment$3(node.node);})||flatGroups.slice(0,-1).some(function(node){return hasTrailingComment$1(node.node);})||groups[cutoff]&&hasLeadingComment$3(groups[cutoff][0].node);// If we only have a single `.`, we shouldn\'t do anything fancy and just\n// render everything concatenated together.\nif(groups.length<=cutoff&&!hasComment){if(isLongCurriedCallExpression$1(path)){return oneLine;}return group$b(oneLine);}// Find out the last node in the first group and check if it has an\n// empty line after\nvar lastNodeBeforeIndent=getLast$3(shouldMerge?groups.slice(1,2)[0]:groups[0]).node;var shouldHaveEmptyLineBeforeIndent=lastNodeBeforeIndent.type!=="CallExpression"&&lastNodeBeforeIndent.type!=="OptionalCallExpression"&&shouldInsertEmptyLineAfter(lastNodeBeforeIndent);var expanded=concat$d([printGroup(groups[0]),shouldMerge?concat$d(groups.slice(1,2).map(printGroup)):"",shouldHaveEmptyLineBeforeIndent?hardline$9:"",printIndentedGroup(groups.slice(shouldMerge?2:1))]);var callExpressions=printedNodes.map(function(_ref29){var node=_ref29.node;return node;}).filter(isCallOrOptionalCallExpression$1);// We don\'t want to print in one line if the chain has:\n//  * A comment.\n//  * Non-trivial arguments.\n//  * Any group but the last one has a hard line.\n// If the last group is a function it\'s okay to inline if it fits.\nif(hasComment||callExpressions.length>2&&callExpressions.some(function(expr){return!expr.arguments.every(function(arg){return isSimpleCallArgument$1(arg,0);});})||printedGroups.slice(0,-1).some(willBreak$1)||/**\n     *     scopes.filter(scope => scope.value !== \'\').map((scope, i) => {\n     *       // multi line content\n     *     })\n     */function(lastGroupDoc,lastGroupNode){return isCallOrOptionalCallExpression$1(lastGroupNode)&&willBreak$1(lastGroupDoc);}(getLast$3(printedGroups),getLast$3(getLast$3(groups)).node)&&callExpressions.slice(0,-1).some(function(n){return n.arguments.some(isFunctionOrArrowExpression$1);})){return group$b(expanded);}return concat$d([// We only need to check `oneLine` because if `expanded` is chosen\n// that means that the parent group has already been broken\n// naturally\nwillBreak$1(oneLine)||shouldHaveEmptyLineBeforeIndent?breakParent$3:"",conditionalGroup$1([oneLine,expanded])]);}function separatorNoWhitespace(isFacebookTranslationTag,child,childNode,nextNode){if(isFacebookTranslationTag){return"";}if(childNode.type==="JSXElement"&&!childNode.closingElement||nextNode&&nextNode.type==="JSXElement"&&!nextNode.closingElement){return child.length===1?softline$6:hardline$9;}return softline$6;}function separatorWithWhitespace(isFacebookTranslationTag,child,childNode,nextNode){if(isFacebookTranslationTag){return hardline$9;}if(child.length===1){return childNode.type==="JSXElement"&&!childNode.closingElement||nextNode&&nextNode.type==="JSXElement"&&!nextNode.closingElement?hardline$9:softline$6;}return hardline$9;}// JSX Children are strange, mostly for two reasons:\n// 1. JSX reads newlines into string values, instead of skipping them like JS\n// 2. up to one whitespace between elements within a line is significant,\n//    but not between lines.\n//\n// Leading, trailing, and lone whitespace all need to\n// turn themselves into the rather ugly `{\' \'}` when breaking.\n//\n// We print JSX using the `fill` doc primitive.\n// This requires that we give it an array of alternating\n// content and whitespace elements.\n// To ensure this we add dummy `""` content elements as needed.\nfunction printJSXChildren(path,options,print,jsxWhitespace,isFacebookTranslationTag){var n=path.getValue();var children=[];// using `map` instead of `each` because it provides `i`\npath.map(function(childPath,i){var child=childPath.getValue();if(isLiteral$1(child)){var text=rawText$1(child);// Contains a non-whitespace character\nif(isMeaningfulJSXText$1(child)){var words=text.split(matchJsxWhitespaceRegex$1);// Starts with whitespace\nif(words[0]===""){children.push("");words.shift();if(/\\n/.test(words[0])){var next=n.children[i+1];children.push(separatorWithWhitespace(isFacebookTranslationTag,words[1],child,next));}else{children.push(jsxWhitespace);}words.shift();}var endWhitespace;// Ends with whitespace\nif(getLast$3(words)===""){words.pop();endWhitespace=words.pop();}// This was whitespace only without a new line.\nif(words.length===0){return;}words.forEach(function(word,i){if(i%2===1){children.push(line$9);}else{children.push(word);}});if(endWhitespace!==undefined){if(/\\n/.test(endWhitespace)){var _next=n.children[i+1];children.push(separatorWithWhitespace(isFacebookTranslationTag,getLast$3(children),child,_next));}else{children.push(jsxWhitespace);}}else{var _next2=n.children[i+1];children.push(separatorNoWhitespace(isFacebookTranslationTag,getLast$3(children),child,_next2));}}else if(/\\n/.test(text)){// Keep (up to one) blank line between tags/expressions/text.\n// Note: We don\'t keep blank lines between text elements.\nif(text.match(/\\n/g).length>1){children.push("");children.push(hardline$9);}}else{children.push("");children.push(jsxWhitespace);}}else{var printedChild=print(childPath);children.push(printedChild);var _next3=n.children[i+1];var directlyFollowedByMeaningfulText=_next3&&isMeaningfulJSXText$1(_next3);if(directlyFollowedByMeaningfulText){var firstWord=rawText$1(_next3).trim().split(matchJsxWhitespaceRegex$1)[0];children.push(separatorNoWhitespace(isFacebookTranslationTag,firstWord,child,_next3));}else{children.push(hardline$9);}}},"children");return children;}// JSX expands children from the inside-out, instead of the outside-in.\n// This is both to break children before attributes,\n// and to ensure that when children break, their parents do as well.\n//\n// Any element that is written without any newlines and fits on a single line\n// is left that way.\n// Not only that, any user-written-line containing multiple JSX siblings\n// should also be kept on one line if possible,\n// so each user-written-line is wrapped in its own group.\n//\n// Elements that contain newlines or don\'t fit on a single line (recursively)\n// are fully-split, using hardline and shouldBreak: true.\n//\n// To support that case properly, all leading and trailing spaces\n// are stripped from the list of children, and replaced with a single hardline.\nfunction printJSXElement(path,options,print){var n=path.getValue();if(n.type==="JSXElement"&&isEmptyJSXElement$1(n)){return concat$d([path.call(print,"openingElement"),path.call(print,"closingElement")]);}var openingLines=n.type==="JSXElement"?path.call(print,"openingElement"):path.call(print,"openingFragment");var closingLines=n.type==="JSXElement"?path.call(print,"closingElement"):path.call(print,"closingFragment");if(n.children.length===1&&n.children[0].type==="JSXExpressionContainer"&&(n.children[0].expression.type==="TemplateLiteral"||n.children[0].expression.type==="TaggedTemplateExpression")){return concat$d([openingLines,concat$d(path.map(print,"children")),closingLines]);}// Convert `{" "}` to text nodes containing a space.\n// This makes it easy to turn them into `jsxWhitespace` which\n// can then print as either a space or `{" "}` when breaking.\nn.children=n.children.map(function(child){if(isJSXWhitespaceExpression$1(child)){return{type:"JSXText",value:" ",raw:" "};}return child;});var containsTag=n.children.filter(isJSXNode$1).length>0;var containsMultipleExpressions=n.children.filter(function(child){return child.type==="JSXExpressionContainer";}).length>1;var containsMultipleAttributes=n.type==="JSXElement"&&n.openingElement.attributes.length>1;// Record any breaks. Should never go from true to false, only false to true.\nvar forcedBreak=willBreak$1(openingLines)||containsTag||containsMultipleAttributes||containsMultipleExpressions;var isMdxBlock=path.getParentNode().rootMarker==="mdx";var rawJsxWhitespace=options.singleQuote?"{\' \'}":\'{" "}\';var jsxWhitespace=isMdxBlock?concat$d([" "]):ifBreak$6(concat$d([rawJsxWhitespace,softline$6])," ");var isFacebookTranslationTag=n.openingElement&&n.openingElement.name&&n.openingElement.name.name==="fbt";var children=printJSXChildren(path,options,print,jsxWhitespace,isFacebookTranslationTag);var containsText=n.children.some(function(child){return isMeaningfulJSXText$1(child);});// We can end up we multiple whitespace elements with empty string\n// content between them.\n// We need to remove empty whitespace and softlines before JSX whitespace\n// to get the correct output.\nfor(var i=children.length-2;i>=0;i--){var isPairOfEmptyStrings=children[i]===""&&children[i+1]==="";var isPairOfHardlines=children[i]===hardline$9&&children[i+1]===""&&children[i+2]===hardline$9;var isLineFollowedByJSXWhitespace=(children[i]===softline$6||children[i]===hardline$9)&&children[i+1]===""&&children[i+2]===jsxWhitespace;var isJSXWhitespaceFollowedByLine=children[i]===jsxWhitespace&&children[i+1]===""&&(children[i+2]===softline$6||children[i+2]===hardline$9);var isDoubleJSXWhitespace=children[i]===jsxWhitespace&&children[i+1]===""&&children[i+2]===jsxWhitespace;var isPairOfHardOrSoftLines=children[i]===softline$6&&children[i+1]===""&&children[i+2]===hardline$9||children[i]===hardline$9&&children[i+1]===""&&children[i+2]===softline$6;if(isPairOfHardlines&&containsText||isPairOfEmptyStrings||isLineFollowedByJSXWhitespace||isDoubleJSXWhitespace||isPairOfHardOrSoftLines){children.splice(i,2);}else if(isJSXWhitespaceFollowedByLine){children.splice(i+1,2);}}// Trim trailing lines (or empty strings)\nwhile(children.length&&(isLineNext$1(getLast$3(children))||isEmpty$1(getLast$3(children)))){children.pop();}// Trim leading lines (or empty strings)\nwhile(children.length&&(isLineNext$1(children[0])||isEmpty$1(children[0]))&&(isLineNext$1(children[1])||isEmpty$1(children[1]))){children.shift();children.shift();}// Tweak how we format children if outputting this element over multiple lines.\n// Also detect whether we will force this element to output over multiple lines.\nvar multilineChildren=[];children.forEach(function(child,i){// There are a number of situations where we need to ensure we display\n// whitespace as `{" "}` when outputting this element over multiple lines.\nif(child===jsxWhitespace){if(i===1&&children[i-1]===""){if(children.length===2){// Solitary whitespace\nmultilineChildren.push(rawJsxWhitespace);return;}// Leading whitespace\nmultilineChildren.push(concat$d([rawJsxWhitespace,hardline$9]));return;}else if(i===children.length-1){// Trailing whitespace\nmultilineChildren.push(rawJsxWhitespace);return;}else if(children[i-1]===""&&children[i-2]===hardline$9){// Whitespace after line break\nmultilineChildren.push(rawJsxWhitespace);return;}}multilineChildren.push(child);if(willBreak$1(child)){forcedBreak=true;}});// If there is text we use `fill` to fit as much onto each line as possible.\n// When there is no text (just tags and expressions) we use `group`\n// to output each on a separate line.\nvar content=containsText?fill$4(multilineChildren):group$b(concat$d(multilineChildren),{shouldBreak:true});if(isMdxBlock){return content;}var multiLineElem=group$b(concat$d([openingLines,indent$7(concat$d([hardline$9,content])),hardline$9,closingLines]));if(forcedBreak){return multiLineElem;}return conditionalGroup$1([group$b(concat$d([openingLines,concat$d(children),closingLines])),multiLineElem]);}function maybeWrapJSXElementInParens(path,elem,options){var parent=path.getParentNode();if(!parent){return elem;}var NO_WRAP_PARENTS={ArrayExpression:true,JSXAttribute:true,JSXElement:true,JSXExpressionContainer:true,JSXFragment:true,ExpressionStatement:true,CallExpression:true,OptionalCallExpression:true,ConditionalExpression:true,JsExpressionRoot:true};if(NO_WRAP_PARENTS[parent.type]){return elem;}var shouldBreak=path.match(undefined,function(node){return node.type==="ArrowFunctionExpression";},isCallOrOptionalCallExpression$1,function(node){return node.type==="JSXExpressionContainer";});var needsParens=needsParens_1(path,options);return group$b(concat$d([needsParens?"":ifBreak$6("("),indent$7(concat$d([softline$6,elem])),softline$6,needsParens?"":ifBreak$6(")")]),{shouldBreak:shouldBreak});}function shouldInlineLogicalExpression(node){if(node.type!=="LogicalExpression"){return false;}if(node.right.type==="ObjectExpression"&&node.right.properties.length!==0){return true;}if(node.right.type==="ArrayExpression"&&node.right.elements.length!==0){return true;}if(isJSXNode$1(node.right)){return true;}return false;}// For binary expressions to be consistent, we need to group\n// subsequent operators with the same precedence level under a single\n// group. Otherwise they will be nested such that some of them break\n// onto new lines but not all. Operators with the same precedence\n// level should either all break or not. Because we group them by\n// precedence level and the AST is structured based on precedence\n// level, things are naturally broken up correctly, i.e. `&&` is\n// broken before `+`.\nfunction printBinaryishExpressions(path,print,options,isNested,isInsideParenthesis){var parts=[];var node=path.getValue();// We treat BinaryExpression and LogicalExpression nodes the same.\nif(isBinaryish$1(node)){// Put all operators with the same precedence level in the same\n// group. The reason we only need to do this with the `left`\n// expression is because given an expression like `1 + 2 - 3`, it\n// is always parsed like `((1 + 2) - 3)`, meaning the `left` side\n// is where the rest of the expression will exist. Binary\n// expressions on the right side mean they have a difference\n// precedence level and should be treated as a separate group, so\n// print them normally. (This doesn\'t hold for the `**` operator,\n// which is unique in that it is right-associative.)\nif(shouldFlatten$1(node.operator,node.left.operator)){// Flatten them out by recursively calling this function.\nparts=parts.concat(path.call(function(left){return printBinaryishExpressions(left,print,options,/* isNested */true,isInsideParenthesis);},"left"));}else{parts.push(path.call(print,"left"));}var shouldInline=shouldInlineLogicalExpression(node);var lineBeforeOperator=(node.operator==="|>"||node.type==="NGPipeExpression"||node.operator==="|"&&options.parser==="__vue_expression")&&!hasLeadingOwnLineComment$1(options.originalText,node.right,options);var operator=node.type==="NGPipeExpression"?"|":node.operator;var rightSuffix=node.type==="NGPipeExpression"&&node.arguments.length!==0?group$b(indent$7(concat$d([softline$6,": ",join$9(concat$d([softline$6,":",ifBreak$6(" ")]),path.map(print,"arguments").map(function(arg){return align$1(2,group$b(arg));}))]))):"";var right=shouldInline?concat$d([operator," ",path.call(print,"right"),rightSuffix]):concat$d([lineBeforeOperator?softline$6:"",operator,lineBeforeOperator?" ":line$9,path.call(print,"right"),rightSuffix]);// If there\'s only a single binary expression, we want to create a group\n// in order to avoid having a small right part like -1 be on its own line.\nvar parent=path.getParentNode();var shouldGroup=!(isInsideParenthesis&&node.type==="LogicalExpression")&&parent.type!==node.type&&node.left.type!==node.type&&node.right.type!==node.type;parts.push(" ",shouldGroup?group$b(right):right);// The root comments are already printed, but we need to manually print\n// the other ones since we don\'t call the normal print on BinaryExpression,\n// only for the left and right parts\nif(isNested&&node.comments){parts=comments.printComments(path,function(){return concat$d(parts);},options);}}else{// Our stopping case. Simply print the node normally.\nparts.push(path.call(print));}return parts;}function printAssignmentRight(leftNode,rightNode,printedRight,options){if(hasLeadingOwnLineComment$1(options.originalText,rightNode,options)){return indent$7(concat$d([line$9,printedRight]));}var canBreak=isBinaryish$1(rightNode)&&!shouldInlineLogicalExpression(rightNode)||rightNode.type==="ConditionalExpression"&&isBinaryish$1(rightNode.test)&&!shouldInlineLogicalExpression(rightNode.test)||rightNode.type==="StringLiteralTypeAnnotation"||rightNode.type==="ClassExpression"&&rightNode.decorators&&rightNode.decorators.length||(leftNode.type==="Identifier"||isStringLiteral$1(leftNode)||leftNode.type==="MemberExpression")&&(isStringLiteral$1(rightNode)||isMemberExpressionChain$1(rightNode))&&// do not put values on a separate line from the key in json\noptions.parser!=="json"&&options.parser!=="json5"||rightNode.type==="SequenceExpression";if(canBreak){return group$b(indent$7(concat$d([line$9,printedRight])));}return concat$d([" ",printedRight]);}function printAssignment(leftNode,printedLeft,operator,rightNode,printedRight,options){if(!rightNode){return printedLeft;}var printed=printAssignmentRight(leftNode,rightNode,printedRight,options);return group$b(concat$d([printedLeft,operator,printed]));}function adjustClause(node,clause,forceSpace){if(node.type==="EmptyStatement"){return";";}if(node.type==="BlockStatement"||forceSpace){return concat$d([" ",clause]);}return indent$7(concat$d([line$9,clause]));}function nodeStr(node,options,isFlowOrTypeScriptDirectiveLiteral){var raw=rawText$1(node);var isDirectiveLiteral=isFlowOrTypeScriptDirectiveLiteral||node.type==="DirectiveLiteral";return printString$2(raw,options,isDirectiveLiteral);}function printRegex(node){var flags=node.flags.split("").sort().join("");return"/".concat(node.pattern,"/").concat(flags);}function exprNeedsASIProtection(path,options){var node=path.getValue();var maybeASIProblem=needsParens_1(path,options)||node.type==="ParenthesizedExpression"||node.type==="TypeCastExpression"||node.type==="ArrowFunctionExpression"&&!shouldPrintParamsWithoutParens(path,options)||node.type==="ArrayExpression"||node.type==="ArrayPattern"||node.type==="UnaryExpression"&&node.prefix&&(node.operator==="+"||node.operator==="-")||node.type==="TemplateLiteral"||node.type==="TemplateElement"||isJSXNode$1(node)||node.type==="BindExpression"&&!node.object||node.type==="RegExpLiteral"||node.type==="Literal"&&node.pattern||node.type==="Literal"&&node.regex;if(maybeASIProblem){return true;}if(!hasNakedLeftSide$2(node)){return false;}return path.call.apply(path,[function(childPath){return exprNeedsASIProtection(childPath,options);}].concat((0,_toConsumableArray3.default)(getLeftSidePathName$2(path,node))));}function stmtNeedsASIProtection(path,options){var node=path.getNode();if(node.type!=="ExpressionStatement"){return false;}return path.call(function(childPath){return exprNeedsASIProtection(childPath,options);},"expression");}function shouldHugType(node){if(isSimpleFlowType$1(node)||isObjectType$1(node)){return true;}if(node.type==="UnionTypeAnnotation"||node.type==="TSUnionType"){var voidCount=node.types.filter(function(n){return n.type==="VoidTypeAnnotation"||n.type==="TSVoidKeyword"||n.type==="NullLiteralTypeAnnotation"||n.type==="TSNullKeyword";}).length;var hasObject=node.types.some(function(n){return n.type==="ObjectTypeAnnotation"||n.type==="TSTypeLiteral"||// This is a bit aggressive but captures Array<{x}>\nn.type==="GenericTypeAnnotation"||n.type==="TSTypeReference";});if(node.types.length-1===voidCount&&hasObject){return true;}}return false;}function shouldHugArguments(fun){if(!fun||fun.rest){return false;}var params=fun.params||fun.parameters;if(!params||params.length!==1){return false;}var param=params[0];return!param.comments&&(param.type==="ObjectPattern"||param.type==="ArrayPattern"||param.type==="Identifier"&&param.typeAnnotation&&(param.typeAnnotation.type==="TypeAnnotation"||param.typeAnnotation.type==="TSTypeAnnotation")&&isObjectType$1(param.typeAnnotation.typeAnnotation)||param.type==="FunctionTypeParam"&&isObjectType$1(param.typeAnnotation)||param.type==="AssignmentPattern"&&(param.left.type==="ObjectPattern"||param.left.type==="ArrayPattern")&&(param.right.type==="Identifier"||param.right.type==="ObjectExpression"&&param.right.properties.length===0||param.right.type==="ArrayExpression"&&param.right.elements.length===0));}function printArrayItems(path,options,printPath,print){var printedElements=[];var separatorParts=[];path.each(function(childPath){printedElements.push(concat$d(separatorParts));printedElements.push(group$b(print(childPath)));separatorParts=[",",line$9];if(childPath.getValue()&&isNextLineEmpty$4(options.originalText,childPath.getValue(),options.locEnd)){separatorParts.push(softline$6);}},printPath);return concat$d(printedElements);}function printReturnAndThrowArgument(path,options,print){var node=path.getValue();var semi=options.semi?";":"";var parts=[];if(node.argument){if(returnArgumentHasLeadingComment$1(options,node.argument)){parts.push(concat$d([" (",indent$7(concat$d([hardline$9,path.call(print,"argument")])),hardline$9,")"]));}else if(isBinaryish$1(node.argument)||node.argument.type==="SequenceExpression"){parts.push(group$b(concat$d([ifBreak$6(" ("," "),indent$7(concat$d([softline$6,path.call(print,"argument")])),softline$6,ifBreak$6(")")])));}else{parts.push(" ",path.call(print,"argument"));}}var lastComment=Array.isArray(node.comments)&&node.comments[node.comments.length-1];var isLastCommentLine=lastComment&&(lastComment.type==="CommentLine"||lastComment.type==="Line");if(isLastCommentLine){parts.push(semi);}if(hasDanglingComments$1(node)){parts.push(" ",comments.printDanglingComments(path,options,/* sameIndent */true));}if(!isLastCommentLine){parts.push(semi);}return concat$d(parts);}function willPrintOwnComments(path/*, options */){var node=path.getValue();var parent=path.getParentNode();return(node&&(isJSXNode$1(node)||hasFlowShorthandAnnotationComment$2(node)||parent&&(parent.type==="CallExpression"||parent.type==="OptionalCallExpression")&&(hasFlowAnnotationComment$1(node.leadingComments)||hasFlowAnnotationComment$1(node.trailingComments)))||parent&&(parent.type==="JSXSpreadAttribute"||parent.type==="JSXSpreadChild"||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType"||(parent.type==="ClassDeclaration"||parent.type==="ClassExpression")&&parent.superClass===node))&&(!hasIgnoreComment$4(path)||parent.type==="UnionTypeAnnotation"||parent.type==="TSUnionType");}function canAttachComment$1(node){return node.type&&node.type!=="CommentBlock"&&node.type!=="CommentLine"&&node.type!=="Line"&&node.type!=="Block"&&node.type!=="EmptyStatement"&&node.type!=="TemplateElement"&&node.type!=="Import";}function printComment$2(commentPath,options){var comment=commentPath.getValue();switch(comment.type){case"CommentBlock":case"Block":{if(isIndentableBlockComment(comment)){var printed=printIndentableBlockComment(comment);// We need to prevent an edge case of a previous trailing comment\n// printed as a `lineSuffix` which causes the comments to be\n// interleaved. See https://github.com/prettier/prettier/issues/4412\nif(comment.trailing&&!hasNewline$5(options.originalText,options.locStart(comment),{backwards:true})){return concat$d([hardline$9,printed]);}return printed;}var commentEnd=options.locEnd(comment);var isInsideFlowComment=options.originalText.slice(commentEnd-3,commentEnd)==="*-/";return"/*"+comment.value+(isInsideFlowComment?"*-/":"*/");}case"CommentLine":case"Line":// Print shebangs with the proper comment characters\nif(options.originalText.slice(options.locStart(comment)).startsWith("#!")){return"#!"+comment.value.trimEnd();}return"//"+comment.value.trimEnd();default:throw new Error("Not a comment: "+JSON.stringify(comment));}}function isIndentableBlockComment(comment){// If the comment has multiple lines and every line starts with a star\n// we can fix the indentation of each line. The stars in the `/*` and\n// `*/` delimiters are not included in the comment value, so add them\n// back first.\nvar lines="*".concat(comment.value,"*").split("\\n");return lines.length>1&&lines.every(function(line){return line.trim()[0]==="*";});}function printIndentableBlockComment(comment){var lines=comment.value.split("\\n");return concat$d(["/*",join$9(hardline$9,lines.map(function(line,index){return index===0?line.trimEnd():" "+(index<lines.length-1?line.trim():line.trimStart());})),"*/"]);}var printerEstree={preprocess:preprocess_1$1,print:genericPrint$3,embed:embed_1$1,insertPragma:insertPragma$7,massageAstNode:clean_1$1,hasPrettierIgnore:hasPrettierIgnore$5,willPrintOwnComments:willPrintOwnComments,canAttachComment:canAttachComment$1,printComment:printComment$2,isBlockComment:comments$1.isBlockComment,handleComments:{ownLine:comments$1.handleOwnLineComment,endOfLine:comments$1.handleEndOfLineComment,remaining:comments$1.handleRemainingComment},getGapRegex:comments$1.getGapRegex,getCommentChildNodes:comments$1.getCommentChildNodes};var _document$builders11=document.builders,concat$e=_document$builders11.concat,hardline$a=_document$builders11.hardline,indent$8=_document$builders11.indent,join$a=_document$builders11.join;function genericPrint$4(path,options,print){var node=path.getValue();switch(node.type){case"JsonRoot":return concat$e([path.call(print,"node"),hardline$a]);case"ArrayExpression":return node.elements.length===0?"[]":concat$e(["[",indent$8(concat$e([hardline$a,join$a(concat$e([",",hardline$a]),path.map(print,"elements"))])),hardline$a,"]"]);case"ObjectExpression":return node.properties.length===0?"{}":concat$e(["{",indent$8(concat$e([hardline$a,join$a(concat$e([",",hardline$a]),path.map(print,"properties"))])),hardline$a,"}"]);case"ObjectProperty":return concat$e([path.call(print,"key"),": ",path.call(print,"value")]);case"UnaryExpression":return concat$e([node.operator==="+"?"":node.operator,path.call(print,"argument")]);case"NullLiteral":return"null";case"BooleanLiteral":return node.value?"true":"false";case"StringLiteral":case"NumericLiteral":return JSON.stringify(node.value);case"Identifier":return JSON.stringify(node.name);default:/* istanbul ignore next */throw new Error("unknown type: "+JSON.stringify(node.type));}}function clean$5(node,newNode/*, parent*/){delete newNode.start;delete newNode.end;delete newNode.extra;delete newNode.loc;delete newNode.comments;delete newNode.errors;if(node.type==="Identifier"){return{type:"StringLiteral",value:node.name};}if(node.type==="UnaryExpression"&&node.operator==="+"){return newNode.argument;}}var printerEstreeJson={preprocess:preprocess_1$1,print:genericPrint$4,massageAstNode:clean$5};var CATEGORY_JAVASCRIPT="JavaScript";// format based on https://github.com/prettier/prettier/blob/master/src/main/core-options.js\nvar options$5={arrowParens:{since:"1.9.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSpacing:commonOptions.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:false,description:"Put > on the last line instead of at a new line."},semi:{since:"1.0.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:true,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:commonOptions.singleQuote,jsxSingleQuote:{since:"1.15.0",category:CATEGORY_JAVASCRIPT,type:"boolean",default:false,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:CATEGORY_JAVASCRIPT,type:"choice",default:[{since:"0.0.0",value:false},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]}};var name$9="JavaScript";var type$8="programming";var tmScope$8="source.js";var aceMode$8="javascript";var codemirrorMode$4="javascript";var codemirrorMimeType$4="text/javascript";var color$3="#f1e05a";var aliases$2=["js","node"];var extensions$8=[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".jsb",".jscad",".jsfl",".jsm",".jss",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"];var filenames=["Jakefile"];var interpreters=["chakra","d8","gjs","js","node","qjs","rhino","v8","v8-shell"];var languageId$8=183;var JavaScript={name:name$9,type:type$8,tmScope:tmScope$8,aceMode:aceMode$8,codemirrorMode:codemirrorMode$4,codemirrorMimeType:codemirrorMimeType$4,color:color$3,aliases:aliases$2,extensions:extensions$8,filenames:filenames,interpreters:interpreters,languageId:languageId$8};var JavaScript$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$9,type:type$8,tmScope:tmScope$8,aceMode:aceMode$8,codemirrorMode:codemirrorMode$4,codemirrorMimeType:codemirrorMimeType$4,color:color$3,aliases:aliases$2,extensions:extensions$8,filenames:filenames,interpreters:interpreters,languageId:languageId$8,\'default\':JavaScript});var name$a="JSX";var type$9="programming";var group$c="JavaScript";var extensions$9=[".jsx"];var tmScope$9="source.js.jsx";var aceMode$9="javascript";var codemirrorMode$5="jsx";var codemirrorMimeType$5="text/jsx";var languageId$9=178;var JSX={name:name$a,type:type$9,group:group$c,extensions:extensions$9,tmScope:tmScope$9,aceMode:aceMode$9,codemirrorMode:codemirrorMode$5,codemirrorMimeType:codemirrorMimeType$5,languageId:languageId$9};var JSX$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$a,type:type$9,group:group$c,extensions:extensions$9,tmScope:tmScope$9,aceMode:aceMode$9,codemirrorMode:codemirrorMode$5,codemirrorMimeType:codemirrorMimeType$5,languageId:languageId$9,\'default\':JSX});var name$b="TypeScript";var type$a="programming";var color$4="#2b7489";var aliases$3=["ts"];var interpreters$1=["deno","ts-node"];var extensions$a=[".ts"];var tmScope$a="source.ts";var aceMode$a="typescript";var codemirrorMode$6="javascript";var codemirrorMimeType$6="application/typescript";var languageId$a=378;var TypeScript={name:name$b,type:type$a,color:color$4,aliases:aliases$3,interpreters:interpreters$1,extensions:extensions$a,tmScope:tmScope$a,aceMode:aceMode$a,codemirrorMode:codemirrorMode$6,codemirrorMimeType:codemirrorMimeType$6,languageId:languageId$a};var TypeScript$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$b,type:type$a,color:color$4,aliases:aliases$3,interpreters:interpreters$1,extensions:extensions$a,tmScope:tmScope$a,aceMode:aceMode$a,codemirrorMode:codemirrorMode$6,codemirrorMimeType:codemirrorMimeType$6,languageId:languageId$a,\'default\':TypeScript});var name$c="TSX";var type$b="programming";var group$d="TypeScript";var extensions$b=[".tsx"];var tmScope$b="source.tsx";var aceMode$b="javascript";var codemirrorMode$7="jsx";var codemirrorMimeType$7="text/jsx";var languageId$b=94901924;var TSX={name:name$c,type:type$b,group:group$d,extensions:extensions$b,tmScope:tmScope$b,aceMode:aceMode$b,codemirrorMode:codemirrorMode$7,codemirrorMimeType:codemirrorMimeType$7,languageId:languageId$b};var TSX$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$c,type:type$b,group:group$d,extensions:extensions$b,tmScope:tmScope$b,aceMode:aceMode$b,codemirrorMode:codemirrorMode$7,codemirrorMimeType:codemirrorMimeType$7,languageId:languageId$b,\'default\':TSX});var name$d="JSON";var type$c="data";var tmScope$c="source.json";var aceMode$c="json";var codemirrorMode$8="javascript";var codemirrorMimeType$8="application/json";var searchable=false;var extensions$c=[".json",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"];var filenames$1=[".arcconfig",".htmlhintrc",".tern-config",".tern-project",".watchmanconfig","composer.lock","mcmod.info"];var languageId$c=174;var _JSON={name:name$d,type:type$c,tmScope:tmScope$c,aceMode:aceMode$c,codemirrorMode:codemirrorMode$8,codemirrorMimeType:codemirrorMimeType$8,searchable:searchable,extensions:extensions$c,filenames:filenames$1,languageId:languageId$c};var _JSON$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$d,type:type$c,tmScope:tmScope$c,aceMode:aceMode$c,codemirrorMode:codemirrorMode$8,codemirrorMimeType:codemirrorMimeType$8,searchable:searchable,extensions:extensions$c,filenames:filenames$1,languageId:languageId$c,\'default\':_JSON});var name$e="JSON with Comments";var type$d="data";var group$e="JSON";var tmScope$d="source.js";var aceMode$d="javascript";var codemirrorMode$9="javascript";var codemirrorMimeType$9="text/javascript";var aliases$4=["jsonc"];var extensions$d=[".jsonc",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"];var filenames$2=[".babelrc",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","jsconfig.json","language-configuration.json","tsconfig.json"];var languageId$d=423;var JSON_with_Comments={name:name$e,type:type$d,group:group$e,tmScope:tmScope$d,aceMode:aceMode$d,codemirrorMode:codemirrorMode$9,codemirrorMimeType:codemirrorMimeType$9,aliases:aliases$4,extensions:extensions$d,filenames:filenames$2,languageId:languageId$d};var JSON_with_Comments$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$e,type:type$d,group:group$e,tmScope:tmScope$d,aceMode:aceMode$d,codemirrorMode:codemirrorMode$9,codemirrorMimeType:codemirrorMimeType$9,aliases:aliases$4,extensions:extensions$d,filenames:filenames$2,languageId:languageId$d,\'default\':JSON_with_Comments});var name$f="JSON5";var type$e="data";var extensions$e=[".json5"];var tmScope$e="source.js";var aceMode$e="javascript";var codemirrorMode$a="javascript";var codemirrorMimeType$a="application/json";var languageId$e=175;var JSON5={name:name$f,type:type$e,extensions:extensions$e,tmScope:tmScope$e,aceMode:aceMode$e,codemirrorMode:codemirrorMode$a,codemirrorMimeType:codemirrorMimeType$a,languageId:languageId$e};var JSON5$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$f,type:type$e,extensions:extensions$e,tmScope:tmScope$e,aceMode:aceMode$e,codemirrorMode:codemirrorMode$a,codemirrorMimeType:codemirrorMimeType$a,languageId:languageId$e,\'default\':JSON5});var require$$0$6=getCjsExportFromNamespace(JavaScript$1);var require$$1$2=getCjsExportFromNamespace(JSX$1);var require$$2$1=getCjsExportFromNamespace(TypeScript$1);var require$$3$1=getCjsExportFromNamespace(TSX$1);var require$$4=getCjsExportFromNamespace(_JSON$1);var require$$5=getCjsExportFromNamespace(JSON_with_Comments$1);var require$$6=getCjsExportFromNamespace(JSON5$1);var languages$4=[createLanguage(require$$0$6,function(data){return{since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascript","mongo"],interpreters:data.interpreters.concat(["nodejs"])};}),createLanguage(require$$0$6,function(){return{name:"Flow",since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]};}),createLanguage(require$$1$2,function(){return{since:"0.0.0",parsers:["babel","flow"],vscodeLanguageIds:["javascriptreact"]};}),createLanguage(require$$2$1,function(){return{since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]};}),createLanguage(require$$3$1,function(){return{since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]};}),createLanguage(require$$4,function(){return{name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[],// .json file defaults to json instead of json-stringify\nfilenames:["package.json","package-lock.json","composer.json"]};}),createLanguage(require$$4,function(data){return{since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],filenames:data.filenames.concat([".prettierrc"])};}),createLanguage(require$$5,function(data){return{since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:data.filenames.concat([".eslintrc"])};}),createLanguage(require$$6,function(){return{since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]};})];var printers$4={estree:printerEstree,"estree-json":printerEstreeJson};var languageJs={languages:languages$4,options:options$5,printers:printers$4};var json$1={"cjkPattern":"[\\\\u02ea-\\\\u02eb\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2e99\\\\u2e9b-\\\\u2ef3\\\\u2f00-\\\\u2fd5\\\\u3000-\\\\u303f\\\\u3041-\\\\u3096\\\\u3099-\\\\u309f\\\\u30a1-\\\\u30fa\\\\u30fc-\\\\u30ff\\\\u3105-\\\\u312f\\\\u3131-\\\\u318e\\\\u3190-\\\\u3191\\\\u3196-\\\\u31ba\\\\u31c0-\\\\u31e3\\\\u31f0-\\\\u321e\\\\u322a-\\\\u3247\\\\u3260-\\\\u327e\\\\u328a-\\\\u32b0\\\\u32c0-\\\\u32cb\\\\u32d0-\\\\u3370\\\\u337b-\\\\u337f\\\\u33e0-\\\\u33fe\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fef\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\uf900-\\\\ufa6d\\\\ufa70-\\\\ufad9\\\\ufe10-\\\\ufe1f\\\\ufe30-\\\\ufe6f\\\\uff00-\\\\uffef]|[\\\\ud840-\\\\ud868\\\\ud86a-\\\\ud86c\\\\ud86f-\\\\ud872\\\\ud874-\\\\ud879][\\\\udc00-\\\\udfff]|\\\\ud82c[\\\\udc00-\\\\udd1e\\\\udd50-\\\\udd52\\\\udd64-\\\\udd67]|\\\\ud83c[\\\\ude00\\\\ude50-\\\\ude51]|\\\\ud869[\\\\udc00-\\\\uded6\\\\udf00-\\\\udfff]|\\\\ud86d[\\\\udc00-\\\\udf34\\\\udf40-\\\\udfff]|\\\\ud86e[\\\\udc00-\\\\udc1d\\\\udc20-\\\\udfff]|\\\\ud873[\\\\udc00-\\\\udea1\\\\udeb0-\\\\udfff]|\\\\ud87a[\\\\udc00-\\\\udfe0]|\\\\ud87e[\\\\udc00-\\\\ude1d]","kPattern":"[\\\\u1100-\\\\u11ff\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3013-\\\\u301f\\\\u302e-\\\\u3030\\\\u3037\\\\u30fb\\\\u3131-\\\\u318e\\\\u3200-\\\\u321e\\\\u3260-\\\\u327e\\\\ua960-\\\\ua97c\\\\uac00-\\\\ud7a3\\\\ud7b0-\\\\ud7c6\\\\ud7cb-\\\\ud7fb\\\\ufe45-\\\\ufe46\\\\uff61-\\\\uff65\\\\uffa0-\\\\uffbe\\\\uffc2-\\\\uffc7\\\\uffca-\\\\uffcf\\\\uffd2-\\\\uffd7\\\\uffda-\\\\uffdc]","punctuationPattern":"[\\\\u0021-\\\\u002f\\\\u003a-\\\\u0040\\\\u005b-\\\\u0060\\\\u007b-\\\\u007e\\\\u00a1\\\\u00a7\\\\u00ab\\\\u00b6-\\\\u00b7\\\\u00bb\\\\u00bf\\\\u037e\\\\u0387\\\\u055a-\\\\u055f\\\\u0589-\\\\u058a\\\\u05be\\\\u05c0\\\\u05c3\\\\u05c6\\\\u05f3-\\\\u05f4\\\\u0609-\\\\u060a\\\\u060c-\\\\u060d\\\\u061b\\\\u061e-\\\\u061f\\\\u066a-\\\\u066d\\\\u06d4\\\\u0700-\\\\u070d\\\\u07f7-\\\\u07f9\\\\u0830-\\\\u083e\\\\u085e\\\\u0964-\\\\u0965\\\\u0970\\\\u09fd\\\\u0a76\\\\u0af0\\\\u0c77\\\\u0c84\\\\u0df4\\\\u0e4f\\\\u0e5a-\\\\u0e5b\\\\u0f04-\\\\u0f12\\\\u0f14\\\\u0f3a-\\\\u0f3d\\\\u0f85\\\\u0fd0-\\\\u0fd4\\\\u0fd9-\\\\u0fda\\\\u104a-\\\\u104f\\\\u10fb\\\\u1360-\\\\u1368\\\\u1400\\\\u166e\\\\u169b-\\\\u169c\\\\u16eb-\\\\u16ed\\\\u1735-\\\\u1736\\\\u17d4-\\\\u17d6\\\\u17d8-\\\\u17da\\\\u1800-\\\\u180a\\\\u1944-\\\\u1945\\\\u1a1e-\\\\u1a1f\\\\u1aa0-\\\\u1aa6\\\\u1aa8-\\\\u1aad\\\\u1b5a-\\\\u1b60\\\\u1bfc-\\\\u1bff\\\\u1c3b-\\\\u1c3f\\\\u1c7e-\\\\u1c7f\\\\u1cc0-\\\\u1cc7\\\\u1cd3\\\\u2010-\\\\u2027\\\\u2030-\\\\u2043\\\\u2045-\\\\u2051\\\\u2053-\\\\u205e\\\\u207d-\\\\u207e\\\\u208d-\\\\u208e\\\\u2308-\\\\u230b\\\\u2329-\\\\u232a\\\\u2768-\\\\u2775\\\\u27c5-\\\\u27c6\\\\u27e6-\\\\u27ef\\\\u2983-\\\\u2998\\\\u29d8-\\\\u29db\\\\u29fc-\\\\u29fd\\\\u2cf9-\\\\u2cfc\\\\u2cfe-\\\\u2cff\\\\u2d70\\\\u2e00-\\\\u2e2e\\\\u2e30-\\\\u2e4f\\\\u3001-\\\\u3003\\\\u3008-\\\\u3011\\\\u3014-\\\\u301f\\\\u3030\\\\u303d\\\\u30a0\\\\u30fb\\\\ua4fe-\\\\ua4ff\\\\ua60d-\\\\ua60f\\\\ua673\\\\ua67e\\\\ua6f2-\\\\ua6f7\\\\ua874-\\\\ua877\\\\ua8ce-\\\\ua8cf\\\\ua8f8-\\\\ua8fa\\\\ua8fc\\\\ua92e-\\\\ua92f\\\\ua95f\\\\ua9c1-\\\\ua9cd\\\\ua9de-\\\\ua9df\\\\uaa5c-\\\\uaa5f\\\\uaade-\\\\uaadf\\\\uaaf0-\\\\uaaf1\\\\uabeb\\\\ufd3e-\\\\ufd3f\\\\ufe10-\\\\ufe19\\\\ufe30-\\\\ufe52\\\\ufe54-\\\\ufe61\\\\ufe63\\\\ufe68\\\\ufe6a-\\\\ufe6b\\\\uff01-\\\\uff03\\\\uff05-\\\\uff0a\\\\uff0c-\\\\uff0f\\\\uff1a-\\\\uff1b\\\\uff1f-\\\\uff20\\\\uff3b-\\\\uff3d\\\\uff3f\\\\uff5b\\\\uff5d\\\\uff5f-\\\\uff65]|\\\\ud800[\\\\udd00-\\\\udd02\\\\udf9f\\\\udfd0]|\\\\ud801[\\\\udd6f]|\\\\ud802[\\\\udc57\\\\udd1f\\\\udd3f\\\\ude50-\\\\ude58\\\\ude7f\\\\udef0-\\\\udef6\\\\udf39-\\\\udf3f\\\\udf99-\\\\udf9c]|\\\\ud803[\\\\udf55-\\\\udf59]|\\\\ud804[\\\\udc47-\\\\udc4d\\\\udcbb-\\\\udcbc\\\\udcbe-\\\\udcc1\\\\udd40-\\\\udd43\\\\udd74-\\\\udd75\\\\uddc5-\\\\uddc8\\\\uddcd\\\\udddb\\\\udddd-\\\\udddf\\\\ude38-\\\\ude3d\\\\udea9]|\\\\ud805[\\\\udc4b-\\\\udc4f\\\\udc5b\\\\udc5d\\\\udcc6\\\\uddc1-\\\\uddd7\\\\ude41-\\\\ude43\\\\ude60-\\\\ude6c\\\\udf3c-\\\\udf3e]|\\\\ud806[\\\\udc3b\\\\udde2\\\\ude3f-\\\\ude46\\\\ude9a-\\\\ude9c\\\\ude9e-\\\\udea2]|\\\\ud807[\\\\udc41-\\\\udc45\\\\udc70-\\\\udc71\\\\udef7-\\\\udef8\\\\udfff]|\\\\ud809[\\\\udc70-\\\\udc74]|\\\\ud81a[\\\\ude6e-\\\\ude6f\\\\udef5\\\\udf37-\\\\udf3b\\\\udf44]|\\\\ud81b[\\\\ude97-\\\\ude9a\\\\udfe2]|\\\\ud82f[\\\\udc9f]|\\\\ud836[\\\\ude87-\\\\ude8b]|\\\\ud83a[\\\\udd5e-\\\\udd5f]"};var cjkPattern=json$1.cjkPattern,kPattern=json$1.kPattern,punctuationPattern=json$1.punctuationPattern;var getLast$4=util$1.getLast;var INLINE_NODE_TYPES=["liquidNode","inlineCode","emphasis","strong","delete","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"];var INLINE_NODE_WRAPPER_TYPES=INLINE_NODE_TYPES.concat(["tableCell","paragraph","heading"]);var kRegex=new RegExp(kPattern);var punctuationRegex=new RegExp(punctuationPattern);/**\n   * split text into whitespaces and words\n   * @param {string} text\n   * @return {Array<{ type: "whitespace", value: " " | "\\n" | "" } | { type: "word", value: string }>}\n   */function splitText(text,options){var KIND_NON_CJK="non-cjk";var KIND_CJ_LETTER="cj-letter";var KIND_K_LETTER="k-letter";var KIND_CJK_PUNCTUATION="cjk-punctuation";var nodes=[];(options.proseWrap==="preserve"?text:text.replace(new RegExp("(".concat(cjkPattern,")\\n(").concat(cjkPattern,")"),"g"),"$1$2")).split(/([ \\t\\n]+)/).forEach(function(token,index,tokens){// whitespace\nif(index%2===1){nodes.push({type:"whitespace",value:/\\n/.test(token)?"\\n":" "});return;}// word separated by whitespace\nif((index===0||index===tokens.length-1)&&token===""){return;}token.split(new RegExp("(".concat(cjkPattern,")"))).forEach(function(innerToken,innerIndex,innerTokens){if((innerIndex===0||innerIndex===innerTokens.length-1)&&innerToken===""){return;}// non-CJK word\nif(innerIndex%2===0){if(innerToken!==""){appendNode({type:"word",value:innerToken,kind:KIND_NON_CJK,hasLeadingPunctuation:punctuationRegex.test(innerToken[0]),hasTrailingPunctuation:punctuationRegex.test(getLast$4(innerToken))});}return;}// CJK character\nappendNode(punctuationRegex.test(innerToken)?{type:"word",value:innerToken,kind:KIND_CJK_PUNCTUATION,hasLeadingPunctuation:true,hasTrailingPunctuation:true}:{type:"word",value:innerToken,kind:kRegex.test(innerToken)?KIND_K_LETTER:KIND_CJ_LETTER,hasLeadingPunctuation:false,hasTrailingPunctuation:false});});});return nodes;function appendNode(node){var lastNode=getLast$4(nodes);if(lastNode&&lastNode.type==="word"){if(lastNode.kind===KIND_NON_CJK&&node.kind===KIND_CJ_LETTER&&!lastNode.hasTrailingPunctuation||lastNode.kind===KIND_CJ_LETTER&&node.kind===KIND_NON_CJK&&!node.hasLeadingPunctuation){nodes.push({type:"whitespace",value:" "});}else if(!isBetween(KIND_NON_CJK,KIND_CJK_PUNCTUATION)&&// disallow leading/trailing full-width whitespace\n![lastNode.value,node.value].some(function(value){return /\\u3000/.test(value);})){nodes.push({type:"whitespace",value:""});}}nodes.push(node);function isBetween(kind1,kind2){return lastNode.kind===kind1&&node.kind===kind2||lastNode.kind===kind2&&node.kind===kind1;}}}function getOrderedListItemInfo(orderListItem,originalText){var _originalText$slice$m=originalText.slice(orderListItem.position.start.offset,orderListItem.position.end.offset).match(/^\\s*(\\d+)(\\.|\\))(\\s*)/),_originalText$slice$m2=(0,_slicedToArray2.default)(_originalText$slice$m,4),numberText=_originalText$slice$m2[1],marker=_originalText$slice$m2[2],leadingSpaces=_originalText$slice$m2[3];return{numberText:numberText,marker:marker,leadingSpaces:leadingSpaces};}function hasGitDiffFriendlyOrderedList(node,options){if(!node.ordered){return false;}if(node.children.length<2){return false;}var firstNumber=Number(getOrderedListItemInfo(node.children[0],options.originalText).numberText);var secondNumber=Number(getOrderedListItemInfo(node.children[1],options.originalText).numberText);if(firstNumber===0&&node.children.length>2){var thirdNumber=Number(getOrderedListItemInfo(node.children[2],options.originalText).numberText);return secondNumber===1&&thirdNumber===1;}return secondNumber===1;}// workaround for https://github.com/remarkjs/remark/issues/351\n// leading and trailing newlines are stripped by remark\nfunction getFencedCodeBlockValue(node,originalText){var text=originalText.slice(node.position.start.offset,node.position.end.offset);var leadingSpaceCount=text.match(/^\\s*/)[0].length;var replaceRegex=new RegExp("^\\\\s{0,".concat(leadingSpaceCount,"}"));var lineContents=text.split("\\n");var markerStyle=text[leadingSpaceCount];// ` or ~\nvar marker=text.slice(leadingSpaceCount).match(new RegExp("^[".concat(markerStyle,"]+")))[0];// https://spec.commonmark.org/0.28/#example-104: Closing fences may be indented by 0-3 spaces\n// https://spec.commonmark.org/0.28/#example-93: The closing code fence must be at least as long as the opening fence\nvar hasEndMarker=new RegExp("^\\\\s{0,3}".concat(marker)).test(lineContents[lineContents.length-1].slice(getIndent(lineContents.length-1)));return lineContents.slice(1,hasEndMarker?-1:undefined).map(function(x,i){return x.slice(getIndent(i+1)).replace(replaceRegex,"");}).join("\\n");function getIndent(lineIndex){return node.position.indent[lineIndex-1]-1;}}function mapAst(ast,handler){return function preorder(node,index,parentStack){parentStack=parentStack||[];var newNode=Object.assign({},handler(node,index,parentStack));if(newNode.children){newNode.children=newNode.children.map(function(child,index){return preorder(child,index,[newNode].concat(parentStack));});}return newNode;}(ast,null,null);}var utils$6={mapAst:mapAst,splitText:splitText,punctuationPattern:punctuationPattern,getFencedCodeBlockValue:getFencedCodeBlockValue,getOrderedListItemInfo:getOrderedListItemInfo,hasGitDiffFriendlyOrderedList:hasGitDiffFriendlyOrderedList,INLINE_NODE_TYPES:INLINE_NODE_TYPES,INLINE_NODE_WRAPPER_TYPES:INLINE_NODE_WRAPPER_TYPES};var _document$builders12=document.builders,hardline$b=_document$builders12.hardline,literalline$5=_document$builders12.literalline,concat$f=_document$builders12.concat,markAsRoot$3=_document$builders12.markAsRoot,mapDoc$4=document.utils.mapDoc;var getFencedCodeBlockValue$1=utils$6.getFencedCodeBlockValue;function embed$4(path,print,textToDoc,options){var node=path.getValue();if(node.type==="code"&&node.lang!==null){// only look for the first string so as to support [markdown-preview-enhanced](https://shd101wyy.github.io/markdown-preview-enhanced/#/code-chunk)\nvar langMatch=node.lang.match(/^[A-Za-z0-9_-]+/);var lang=langMatch?langMatch[0]:"";var _parser2=getParserName(lang);if(_parser2){var styleUnit=options.__inJsTemplate?"~":"`";var _style7=styleUnit.repeat(Math.max(3,util$1.getMaxContinuousCount(node.value,styleUnit)+1));var _doc6=textToDoc(getFencedCodeBlockValue$1(node,options.originalText),{parser:_parser2});return markAsRoot$3(concat$f([_style7,node.lang,hardline$b,replaceNewlinesWithLiterallines(_doc6),_style7]));}}if(node.type==="yaml"){return markAsRoot$3(concat$f(["---",hardline$b,node.value&&node.value.trim()?replaceNewlinesWithLiterallines(textToDoc(node.value,{parser:"yaml"})):"","---"]));}// MDX\nswitch(node.type){case"importExport":return textToDoc(node.value,{parser:"babel"});case"jsx":return textToDoc("<$>".concat(node.value,"</$>"),{parser:"__js_expression",rootMarker:"mdx"});}return null;function getParserName(lang){var supportInfo=support.getSupportInfo({plugins:options.plugins});var language=supportInfo.languages.find(function(language){return language.name.toLowerCase()===lang||language.aliases&&language.aliases.includes(lang)||language.extensions&&language.extensions.find(function(ext){return ext===".".concat(lang);});});if(language){return language.parsers[0];}return null;}function replaceNewlinesWithLiterallines(doc){return mapDoc$4(doc,function(currentDoc){return typeof currentDoc==="string"&&currentDoc.includes("\\n")?concat$f(currentDoc.split(/(\\n)/g).map(function(v,i){return i%2===0?v:literalline$5;})):currentDoc;});}}var embed_1$2=embed$4;var pragmas=["format","prettier"];function startWithPragma(text){var pragma="@(".concat(pragmas.join("|"),")");var regex=new RegExp(["\x3c!--\\\\s*".concat(pragma,"\\\\s*--\x3e"),"\x3c!--.*\\r?\\n[\\\\s\\\\S]*(^|\\n)[^\\\\S\\n]*".concat(pragma,"[^\\\\S\\n]*($|\\n)[\\\\s\\\\S]*\\n.*--\x3e")].join("|"),"m");var matched=text.match(regex);return matched&&matched.index===0;}var pragma$4={startWithPragma:startWithPragma,hasPragma:function hasPragma(text){return startWithPragma(frontMatter(text).content.trimStart());},insertPragma:function insertPragma(text){var extracted=frontMatter(text);var pragma="\x3c!-- @".concat(pragmas[0]," --\x3e");return extracted.frontMatter?"".concat(extracted.frontMatter.raw,"\\n\\n").concat(pragma,"\\n\\n").concat(extracted.content):"".concat(pragma,"\\n\\n").concat(extracted.content);}};var getOrderedListItemInfo$1=utils$6.getOrderedListItemInfo,mapAst$1=utils$6.mapAst,splitText$1=utils$6.splitText;// 0x0 ~ 0x10ffff\n// eslint-disable-next-line no-control-regex\nvar isSingleCharRegex=/^([\\u0000-\\uffff]|[\\ud800-\\udbff][\\udc00-\\udfff])$/;function preprocess$2(ast,options){ast=restoreUnescapedCharacter(ast,options);ast=mergeContinuousTexts(ast);ast=transformInlineCode(ast);ast=transformIndentedCodeblockAndMarkItsParentList(ast,options);ast=markAlignedList(ast,options);ast=splitTextIntoSentences(ast,options);ast=transformImportExport(ast);ast=mergeContinuousImportExport(ast);return ast;}function transformImportExport(ast){return mapAst$1(ast,function(node){if(node.type!=="import"&&node.type!=="export"){return node;}return Object.assign({},node,{type:"importExport"});});}function transformInlineCode(ast){return mapAst$1(ast,function(node){if(node.type!=="inlineCode"){return node;}return Object.assign({},node,{value:node.value.replace(/\\s+/g," ")});});}function restoreUnescapedCharacter(ast,options){return mapAst$1(ast,function(node){return node.type!=="text"?node:Object.assign({},node,{value:node.value!=="*"&&node.value!=="_"&&node.value!=="$"&&// handle these cases in printer\nisSingleCharRegex.test(node.value)&&node.position.end.offset-node.position.start.offset!==node.value.length?options.originalText.slice(node.position.start.offset,node.position.end.offset):node.value});});}function mergeContinuousImportExport(ast){return mergeChildren(ast,function(prevNode,node){return prevNode.type==="importExport"&&node.type==="importExport";},function(prevNode,node){return{type:"importExport",value:prevNode.value+"\\n\\n"+node.value,position:{start:prevNode.position.start,end:node.position.end}};});}function mergeChildren(ast,shouldMerge,mergeNode){return mapAst$1(ast,function(node){if(!node.children){return node;}var children=node.children.reduce(function(current,child){var lastChild=current[current.length-1];if(lastChild&&shouldMerge(lastChild,child)){current.splice(-1,1,mergeNode(lastChild,child));}else{current.push(child);}return current;},[]);return Object.assign({},node,{children:children});});}function mergeContinuousTexts(ast){return mergeChildren(ast,function(prevNode,node){return prevNode.type==="text"&&node.type==="text";},function(prevNode,node){return{type:"text",value:prevNode.value+node.value,position:{start:prevNode.position.start,end:node.position.end}};});}function splitTextIntoSentences(ast,options){return mapAst$1(ast,function(node,index,_ref30){var _ref31=(0,_slicedToArray2.default)(_ref30,1),parentNode=_ref31[0];if(node.type!=="text"){return node;}var value=node.value;if(parentNode.type==="paragraph"){if(index===0){value=value.trimStart();}if(index===parentNode.children.length-1){value=value.trimEnd();}}return{type:"sentence",position:node.position,children:splitText$1(value,options)};});}function transformIndentedCodeblockAndMarkItsParentList(ast,options){return mapAst$1(ast,function(node,index,parentStack){if(node.type==="code"){// the first char may point to `\\n`, e.g. `\\n\\t\\tbar`, just ignore it\nvar isIndented=/^\\n?( {4,}|\\t)/.test(options.originalText.slice(node.position.start.offset,node.position.end.offset));node.isIndented=isIndented;if(isIndented){for(var i=0;i<parentStack.length;i++){var parent=parentStack[i];// no need to check checked items\nif(parent.hasIndentedCodeblock){break;}if(parent.type==="list"){parent.hasIndentedCodeblock=true;}}}}return node;});}function markAlignedList(ast,options){return mapAst$1(ast,function(node,index,parentStack){if(node.type==="list"&&node.children.length!==0){// if one of its parents is not aligned, it\'s not possible to be aligned in sub-lists\nfor(var i=0;i<parentStack.length;i++){var parent=parentStack[i];if(parent.type==="list"&&!parent.isAligned){node.isAligned=false;return node;}}node.isAligned=isAligned(node);}return node;});function getListItemStart(listItem){return listItem.children.length===0?-1:listItem.children[0].position.start.column-1;}function isAligned(list){if(!list.ordered){/**\n         * - 123\n         * - 123\n         */return true;}var _list$children=(0,_slicedToArray2.default)(list.children,2),firstItem=_list$children[0],secondItem=_list$children[1];var firstInfo=getOrderedListItemInfo$1(firstItem,options.originalText);if(firstInfo.leadingSpaces.length>1){/**\n         * 1.   123\n         *\n         * 1.   123\n         * 1. 123\n         */return true;}var firstStart=getListItemStart(firstItem);if(firstStart===-1){/**\n         * 1.\n         *\n         * 1.\n         * 1.\n         */return false;}if(list.children.length===1){/**\n         * aligned:\n         *\n         * 11. 123\n         *\n         * not aligned:\n         *\n         * 1. 123\n         */return firstStart%options.tabWidth===0;}var secondStart=getListItemStart(secondItem);if(firstStart!==secondStart){/**\n         * 11. 123\n         * 1. 123\n         *\n         * 1. 123\n         * 11. 123\n         */return false;}if(firstStart%options.tabWidth===0){/**\n         * 11. 123\n         * 12. 123\n         */return true;}/**\n       * aligned:\n       *\n       * 11. 123\n       * 1.  123\n       *\n       * not aligned:\n       *\n       * 1. 123\n       * 2. 123\n       */var secondInfo=getOrderedListItemInfo$1(secondItem,options.originalText);return secondInfo.leadingSpaces.length>1;}}var preprocess_1$2=preprocess$2;var _document$builders13=document.builders,breakParent$4=_document$builders13.breakParent,concat$g=_document$builders13.concat,join$b=_document$builders13.join,line$a=_document$builders13.line,literalline$6=_document$builders13.literalline,markAsRoot$4=_document$builders13.markAsRoot,hardline$c=_document$builders13.hardline,softline$7=_document$builders13.softline,ifBreak$7=_document$builders13.ifBreak,fill$5=_document$builders13.fill,align$2=_document$builders13.align,indent$9=_document$builders13.indent,group$f=_document$builders13.group,mapDoc$5=document.utils.mapDoc,printDocToString$3=document.printer.printDocToString;var getFencedCodeBlockValue$2=utils$6.getFencedCodeBlockValue,hasGitDiffFriendlyOrderedList$1=utils$6.hasGitDiffFriendlyOrderedList,splitText$2=utils$6.splitText,punctuationPattern$1=utils$6.punctuationPattern,INLINE_NODE_TYPES$1=utils$6.INLINE_NODE_TYPES,INLINE_NODE_WRAPPER_TYPES$1=utils$6.INLINE_NODE_WRAPPER_TYPES;var replaceEndOfLineWith$2=util$1.replaceEndOfLineWith;var TRAILING_HARDLINE_NODES=["importExport"];var SINGLE_LINE_NODE_TYPES=["heading","tableCell","link"];var SIBLING_NODE_TYPES=["listItem","definition","footnoteDefinition"];function genericPrint$5(path,options,print){var node=path.getValue();if(shouldRemainTheSameContent(path)){return concat$g(splitText$2(options.originalText.slice(node.position.start.offset,node.position.end.offset),options).map(function(node){return node.type==="word"?node.value:node.value===""?"":printLine(path,node.value,options);}));}switch(node.type){case"root":if(node.children.length===0){return"";}return concat$g([normalizeDoc(printRoot(path,options,print)),!TRAILING_HARDLINE_NODES.includes(getLastDescendantNode(node).type)?hardline$c:""]);case"paragraph":return printChildren$2(path,options,print,{postprocessor:fill$5});case"sentence":return printChildren$2(path,options,print);case"word":return node.value.replace(/[*$]/g,"\\\\$&")// escape all `*` and `$` (math)\n.replace(new RegExp(["(^|".concat(punctuationPattern$1,")(_+)"),"(_+)(".concat(punctuationPattern$1,"|$)")].join("|"),"g"),function(_,text1,underscore1,underscore2,text2){return(underscore1?"".concat(text1).concat(underscore1):"".concat(underscore2).concat(text2)).replace(/_/g,"\\\\_");});// escape all `_` except concating with non-punctuation, e.g. `1_2_3` is not considered emphasis\ncase"whitespace":{var parentNode=path.getParentNode();var _index5=parentNode.children.indexOf(node);var nextNode=parentNode.children[_index5+1];var proseWrap=// leading char that may cause different syntax\nnextNode&&/^>|^([-+*]|#{1,6}|[0-9]+[.)])$/.test(nextNode.value)?"never":options.proseWrap;return printLine(path,node.value,{proseWrap:proseWrap});}case"emphasis":{var _parentNode9=path.getParentNode();var _index6=_parentNode9.children.indexOf(node);var prevNode=_parentNode9.children[_index6-1];var _nextNode=_parentNode9.children[_index6+1];var hasPrevOrNextWord=// `1*2*3` is considered emphasis but `1_2_3` is not\nprevNode&&prevNode.type==="sentence"&&prevNode.children.length>0&&util$1.getLast(prevNode.children).type==="word"&&!util$1.getLast(prevNode.children).hasTrailingPunctuation||_nextNode&&_nextNode.type==="sentence"&&_nextNode.children.length>0&&_nextNode.children[0].type==="word"&&!_nextNode.children[0].hasLeadingPunctuation;var _style8=hasPrevOrNextWord||getAncestorNode$2(path,"emphasis")?"*":"_";return concat$g([_style8,printChildren$2(path,options,print),_style8]);}case"strong":return concat$g(["**",printChildren$2(path,options,print),"**"]);case"delete":return concat$g(["~~",printChildren$2(path,options,print),"~~"]);case"inlineCode":{var backtickCount=util$1.getMinNotPresentContinuousCount(node.value,"`");var _style9="`".repeat(backtickCount||1);var gap=backtickCount?" ":"";return concat$g([_style9,gap,node.value,gap,_style9]);}case"link":switch(options.originalText[node.position.start.offset]){case"<":{var mailto="mailto:";var url=// <hello@example.com> is parsed as { url: "mailto:hello@example.com" }\nnode.url.startsWith(mailto)&&options.originalText.slice(node.position.start.offset+1,node.position.start.offset+1+mailto.length)!==mailto?node.url.slice(mailto.length):node.url;return concat$g(["<",url,">"]);}case"[":return concat$g(["[",printChildren$2(path,options,print),"](",printUrl(node.url,")"),printTitle(node.title,options),")"]);default:return options.originalText.slice(node.position.start.offset,node.position.end.offset);}case"image":return concat$g(["![",node.alt||"","](",printUrl(node.url,")"),printTitle(node.title,options),")"]);case"blockquote":return concat$g(["> ",align$2("> ",printChildren$2(path,options,print))]);case"heading":return concat$g(["#".repeat(node.depth)+" ",printChildren$2(path,options,print)]);case"code":{if(node.isIndented){// indented code block\nvar alignment=" ".repeat(4);return align$2(alignment,concat$g([alignment,concat$g(replaceEndOfLineWith$2(node.value,hardline$c))]));}// fenced code block\nvar styleUnit=options.__inJsTemplate?"~":"`";var _style10=styleUnit.repeat(Math.max(3,util$1.getMaxContinuousCount(node.value,styleUnit)+1));return concat$g([_style10,node.lang||"",hardline$c,concat$g(replaceEndOfLineWith$2(getFencedCodeBlockValue$2(node,options.originalText),hardline$c)),hardline$c,_style10]);}case"yaml":case"toml":return options.originalText.slice(node.position.start.offset,node.position.end.offset);case"html":{var _parentNode10=path.getParentNode();var value=_parentNode10.type==="root"&&util$1.getLast(_parentNode10.children)===node?node.value.trimEnd():node.value;var isHtmlComment=/^\x3c!--[\\s\\S]*--\x3e$/.test(value);return concat$g(replaceEndOfLineWith$2(value,isHtmlComment?hardline$c:markAsRoot$4(literalline$6)));}case"list":{var nthSiblingIndex=getNthListSiblingIndex(node,path.getParentNode());var isGitDiffFriendlyOrderedList=hasGitDiffFriendlyOrderedList$1(node,options);return printChildren$2(path,options,print,{processor:function processor(childPath,index){var prefix=getPrefix();var childNode=childPath.getValue();if(childNode.children.length===2&&childNode.children[1].type==="html"&&childNode.children[0].position.start.column!==childNode.children[1].position.start.column){return concat$g([prefix,printListItem(childPath,options,print,prefix)]);}return concat$g([prefix,align$2(" ".repeat(prefix.length),printListItem(childPath,options,print,prefix))]);function getPrefix(){var rawPrefix=node.ordered?(index===0?node.start:isGitDiffFriendlyOrderedList?1:node.start+index)+(nthSiblingIndex%2===0?". ":") "):nthSiblingIndex%2===0?"- ":"* ";return node.isAligned||/* workaround for https://github.com/remarkjs/remark/issues/315 */node.hasIndentedCodeblock?alignListPrefix(rawPrefix,options):rawPrefix;}}});}case"thematicBreak":{var counter=getAncestorCounter$1(path,"list");if(counter===-1){return"---";}var _nthSiblingIndex=getNthListSiblingIndex(path.getParentNode(counter),path.getParentNode(counter+1));return _nthSiblingIndex%2===0?"***":"---";}case"linkReference":return concat$g(["[",printChildren$2(path,options,print),"]",node.referenceType==="full"?concat$g(["[",node.identifier,"]"]):node.referenceType==="collapsed"?"[]":""]);case"imageReference":switch(node.referenceType){case"full":return concat$g(["![",node.alt||"","][",node.identifier,"]"]);default:return concat$g(["![",node.alt,"]",node.referenceType==="collapsed"?"[]":""]);}case"definition":{var lineOrSpace=options.proseWrap==="always"?line$a:" ";return group$f(concat$g([concat$g(["[",node.identifier,"]:"]),indent$9(concat$g([lineOrSpace,printUrl(node.url),node.title===null?"":concat$g([lineOrSpace,printTitle(node.title,options,false)])]))]));}case"footnote":return concat$g(["[^",printChildren$2(path,options,print),"]"]);case"footnoteReference":return concat$g(["[^",node.identifier,"]"]);case"footnoteDefinition":{var _nextNode2=path.getParentNode().children[path.getName()+1];var shouldInlineFootnote=node.children.length===1&&node.children[0].type==="paragraph"&&(options.proseWrap==="never"||options.proseWrap==="preserve"&&node.children[0].position.start.line===node.children[0].position.end.line);return concat$g(["[^",node.identifier,"]: ",shouldInlineFootnote?printChildren$2(path,options,print):group$f(concat$g([align$2(" ".repeat(options.tabWidth),printChildren$2(path,options,print,{processor:function processor(childPath,index){return index===0?group$f(concat$g([softline$7,childPath.call(print)])):childPath.call(print);}})),_nextNode2&&_nextNode2.type==="footnoteDefinition"?softline$7:""]))]);}case"table":return printTable(path,options,print);case"tableCell":return printChildren$2(path,options,print);case"break":return /\\s/.test(options.originalText[node.position.start.offset])?concat$g(["  ",markAsRoot$4(literalline$6)]):concat$g(["\\\\",hardline$c]);case"liquidNode":return concat$g(replaceEndOfLineWith$2(node.value,hardline$c));// MDX\ncase"importExport":case"jsx":return node.value;// fallback to the original text if multiparser failed\ncase"math":return concat$g(["$$",hardline$c,node.value?concat$g([concat$g(replaceEndOfLineWith$2(node.value,hardline$c)),hardline$c]):"","$$"]);case"inlineMath":{// remark-math trims content but we don\'t want to remove whitespaces\n// since it\'s very possible that it\'s recognized as math accidentally\nreturn options.originalText.slice(options.locStart(node),options.locEnd(node));}case"tableRow":// handled in "table"\ncase"listItem":// handled in "list"\ndefault:throw new Error("Unknown markdown type ".concat(JSON.stringify(node.type)));}}function printListItem(path,options,print,listPrefix){var node=path.getValue();var prefix=node.checked===null?"":node.checked?"[x] ":"[ ] ";return concat$g([prefix,printChildren$2(path,options,print,{processor:function processor(childPath,index){if(index===0&&childPath.getValue().type!=="list"){return align$2(" ".repeat(prefix.length),childPath.call(print));}var alignment=" ".repeat(clamp(options.tabWidth-listPrefix.length,0,3)// 4+ will cause indented code block\n);return concat$g([alignment,align$2(alignment,childPath.call(print))]);}})]);}function alignListPrefix(prefix,options){var additionalSpaces=getAdditionalSpaces();return prefix+" ".repeat(additionalSpaces>=4?0:additionalSpaces// 4+ will cause indented code block\n);function getAdditionalSpaces(){var restSpaces=prefix.length%options.tabWidth;return restSpaces===0?0:options.tabWidth-restSpaces;}}function getNthListSiblingIndex(node,parentNode){return getNthSiblingIndex(node,parentNode,function(siblingNode){return siblingNode.ordered===node.ordered;});}function getNthSiblingIndex(node,parentNode,condition){condition=condition||function(){return true;};var index=-1;var _iterator41=_createForOfIteratorHelper(parentNode.children),_step41;try{for(_iterator41.s();!(_step41=_iterator41.n()).done;){var childNode=_step41.value;if(childNode.type===node.type&&condition(childNode)){index++;}else{index=-1;}if(childNode===node){return index;}}}catch(err){_iterator41.e(err);}finally{_iterator41.f();}}function getAncestorCounter$1(path,typeOrTypes){var types=[].concat(typeOrTypes);var counter=-1;var ancestorNode;while(ancestorNode=path.getParentNode(++counter)){if(types.includes(ancestorNode.type)){return counter;}}return-1;}function getAncestorNode$2(path,typeOrTypes){var counter=getAncestorCounter$1(path,typeOrTypes);return counter===-1?null:path.getParentNode(counter);}function printLine(path,value,options){if(options.proseWrap==="preserve"&&value==="\\n"){return hardline$c;}var isBreakable=options.proseWrap==="always"&&!getAncestorNode$2(path,SINGLE_LINE_NODE_TYPES);return value!==""?isBreakable?line$a:" ":isBreakable?softline$7:"";}function printTable(path,options,print){var hardlineWithoutBreakParent=hardline$c.parts[0];var node=path.getValue();var contents=[];// { [rowIndex: number]: { [columnIndex: number]: string } }\npath.map(function(rowPath){var rowContents=[];rowPath.map(function(cellPath){rowContents.push(printDocToString$3(cellPath.call(print),options).formatted);},"children");contents.push(rowContents);},"children");// Get the width of each column\nvar columnMaxWidths=contents.reduce(function(currentWidths,rowContents){return currentWidths.map(function(width,columnIndex){return Math.max(width,util$1.getStringWidth(rowContents[columnIndex]));});},contents[0].map(function(){return 3;})// minimum width = 3 (---, :--, :-:, --:)\n);var alignedTable=join$b(hardlineWithoutBreakParent,[printRow(contents[0]),printSeparator(),join$b(hardlineWithoutBreakParent,contents.slice(1).map(function(rowContents){return printRow(rowContents);}))]);if(options.proseWrap!=="never"){return concat$g([breakParent$4,alignedTable]);}// Only if the --prose-wrap never is set and it exceeds the print width.\nvar compactTable=join$b(hardlineWithoutBreakParent,[printRow(contents[0],/* isCompact */true),printSeparator(/* isCompact */true),join$b(hardlineWithoutBreakParent,contents.slice(1).map(function(rowContents){return printRow(rowContents,/* isCompact */true);}))]);return concat$g([breakParent$4,group$f(ifBreak$7(compactTable,alignedTable))]);function printSeparator(isCompact){return concat$g(["| ",join$b(" | ",columnMaxWidths.map(function(width,index){var spaces=isCompact?3:width;switch(node.align[index]){case"left":return":"+"-".repeat(spaces-1);case"right":return"-".repeat(spaces-1)+":";case"center":return":"+"-".repeat(spaces-2)+":";default:return"-".repeat(spaces);}}))," |"]);}function printRow(rowContents,isCompact){return concat$g(["| ",join$b(" | ",isCompact?rowContents:rowContents.map(function(rowContent,columnIndex){switch(node.align[columnIndex]){case"right":return alignRight(rowContent,columnMaxWidths[columnIndex]);case"center":return alignCenter(rowContent,columnMaxWidths[columnIndex]);default:return alignLeft(rowContent,columnMaxWidths[columnIndex]);}}))," |"]);}function alignLeft(text,width){var spaces=width-util$1.getStringWidth(text);return concat$g([text," ".repeat(spaces)]);}function alignRight(text,width){var spaces=width-util$1.getStringWidth(text);return concat$g([" ".repeat(spaces),text]);}function alignCenter(text,width){var spaces=width-util$1.getStringWidth(text);var left=Math.floor(spaces/2);var right=spaces-left;return concat$g([" ".repeat(left),text," ".repeat(right)]);}}function printRoot(path,options,print){/** @typedef {{ index: number, offset: number }} IgnorePosition */ /** @type {Array<{start: IgnorePosition, end: IgnorePosition}>} */var ignoreRanges=[];/** @type {IgnorePosition | null} */var ignoreStart=null;var _path$getValue=path.getValue(),children=_path$getValue.children;children.forEach(function(childNode,index){switch(isPrettierIgnore$1(childNode)){case"start":if(ignoreStart===null){ignoreStart={index:index,offset:childNode.position.end.offset};}break;case"end":if(ignoreStart!==null){ignoreRanges.push({start:ignoreStart,end:{index:index,offset:childNode.position.start.offset}});ignoreStart=null;}break;}});return printChildren$2(path,options,print,{processor:function processor(childPath,index){if(ignoreRanges.length!==0){var ignoreRange=ignoreRanges[0];if(index===ignoreRange.start.index){return concat$g([children[ignoreRange.start.index].value,options.originalText.slice(ignoreRange.start.offset,ignoreRange.end.offset),children[ignoreRange.end.index].value]);}if(ignoreRange.start.index<index&&index<ignoreRange.end.index){return false;}if(index===ignoreRange.end.index){ignoreRanges.shift();return false;}}return childPath.call(print);}});}function printChildren$2(path,options,print,events){events=events||{};var postprocessor=events.postprocessor||concat$g;var processor=events.processor||function(childPath){return childPath.call(print);};var node=path.getValue();var parts=[];var lastChildNode;path.map(function(childPath,index){var childNode=childPath.getValue();var result=processor(childPath,index);if(result!==false){var _data={parts:parts,prevNode:lastChildNode,parentNode:node,options:options};if(!shouldNotPrePrintHardline(childNode,_data)){parts.push(hardline$c);if(lastChildNode&&TRAILING_HARDLINE_NODES.includes(lastChildNode.type)){if(shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}}else{if(shouldPrePrintDoubleHardline(childNode,_data)||shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}if(shouldPrePrintTripleHardline(childNode,_data)){parts.push(hardline$c);}}}parts.push(result);lastChildNode=childNode;}},"children");return postprocessor(parts);}function getLastDescendantNode(node){var current=node;while(current.children&&current.children.length!==0){current=current.children[current.children.length-1];}return current;}/** @return {false | \'next\' | \'start\' | \'end\'} */function isPrettierIgnore$1(node){if(node.type!=="html"){return false;}var match=node.value.match(/^\x3c!--\\s*prettier-ignore(?:-(start|end))?\\s*--\x3e$/);return match===null?false:match[1]?match[1]:"next";}function shouldNotPrePrintHardline(node,data){var isFirstNode=data.parts.length===0;var isInlineNode=INLINE_NODE_TYPES$1.includes(node.type);var isInlineHTML=node.type==="html"&&INLINE_NODE_WRAPPER_TYPES$1.includes(data.parentNode.type);return isFirstNode||isInlineNode||isInlineHTML;}function shouldPrePrintDoubleHardline(node,data){var isSequence=(data.prevNode&&data.prevNode.type)===node.type;var isSiblingNode=isSequence&&SIBLING_NODE_TYPES.includes(node.type);var isInTightListItem=data.parentNode.type==="listItem"&&!data.parentNode.loose;var isPrevNodeLooseListItem=data.prevNode&&data.prevNode.type==="listItem"&&data.prevNode.loose;var isPrevNodePrettierIgnore=isPrettierIgnore$1(data.prevNode)==="next";var isBlockHtmlWithoutBlankLineBetweenPrevHtml=node.type==="html"&&data.prevNode&&data.prevNode.type==="html"&&data.prevNode.position.end.line+1===node.position.start.line;var isHtmlDirectAfterListItem=node.type==="html"&&data.parentNode.type==="listItem"&&data.prevNode&&data.prevNode.type==="paragraph"&&data.prevNode.position.end.line+1===node.position.start.line;return isPrevNodeLooseListItem||!(isSiblingNode||isInTightListItem||isPrevNodePrettierIgnore||isBlockHtmlWithoutBlankLineBetweenPrevHtml||isHtmlDirectAfterListItem);}function shouldPrePrintTripleHardline(node,data){var isPrevNodeList=data.prevNode&&data.prevNode.type==="list";var isIndentedCode=node.type==="code"&&node.isIndented;return isPrevNodeList&&isIndentedCode;}function shouldRemainTheSameContent(path){var ancestorNode=getAncestorNode$2(path,["linkReference","imageReference"]);return ancestorNode&&(ancestorNode.type!=="linkReference"||ancestorNode.referenceType!=="full");}function normalizeDoc(doc){return mapDoc$5(doc,function(currentDoc){if(!currentDoc.parts){return currentDoc;}if(currentDoc.type==="concat"&&currentDoc.parts.length===1){return currentDoc.parts[0];}var parts=currentDoc.parts.reduce(function(parts,part){if(part.type==="concat"){parts.push.apply(parts,(0,_toConsumableArray3.default)(part.parts));}else if(part!==""){parts.push(part);}return parts;},[]);return Object.assign({},currentDoc,{parts:normalizeParts$2(parts)});});}function printUrl(url,dangerousCharOrChars){var dangerousChars=[" "].concat(dangerousCharOrChars||[]);return new RegExp(dangerousChars.map(function(x){return"\\\\".concat(x);}).join("|")).test(url)?"<".concat(url,">"):url;}function printTitle(title,options,printSpace){if(printSpace==null){printSpace=true;}if(!title){return"";}if(printSpace){return" "+printTitle(title,options,false);}if(title.includes(\'"\')&&title.includes("\'")&&!title.includes(")")){return"(".concat(title,")");// avoid escaped quotes\n}// faster than using RegExps: https://jsperf.com/performance-of-match-vs-split\nvar singleCount=title.split("\'").length-1;var doubleCount=title.split(\'"\').length-1;var quote=singleCount>doubleCount?\'"\':doubleCount>singleCount?"\'":options.singleQuote?"\'":\'"\';title=title.replace(new RegExp("(".concat(quote,")"),"g"),"\\\\$1");return"".concat(quote).concat(title).concat(quote);}function normalizeParts$2(parts){return parts.reduce(function(current,part){var lastPart=util$1.getLast(current);if(typeof lastPart==="string"&&typeof part==="string"){current.splice(-1,1,lastPart+part);}else{current.push(part);}return current;},[]);}function clamp(value,min,max){return value<min?min:value>max?max:value;}function clean$6(ast,newObj,parent){delete newObj.position;delete newObj.raw;// front-matter\n// for codeblock\nif(ast.type==="code"||ast.type==="yaml"||ast.type==="import"||ast.type==="export"||ast.type==="jsx"){delete newObj.value;}if(ast.type==="list"){delete newObj.isAligned;}// texts can be splitted or merged\nif(ast.type==="text"){return null;}if(ast.type==="inlineCode"){newObj.value=ast.value.replace(/[ \\t\\n]+/g," ");}// for insert pragma\nif(parent&&parent.type==="root"&&parent.children.length>0&&(parent.children[0]===ast||(parent.children[0].type==="yaml"||parent.children[0].type==="toml")&&parent.children[1]===ast)&&ast.type==="html"&&pragma$4.startWithPragma(ast.value)){return null;}}function hasPrettierIgnore$6(path){var index=+path.getName();if(index===0){return false;}var prevNode=path.getParentNode().children[index-1];return isPrettierIgnore$1(prevNode)==="next";}var printerMarkdown={preprocess:preprocess_1$2,print:genericPrint$5,embed:embed_1$2,massageAstNode:clean$6,hasPrettierIgnore:hasPrettierIgnore$6,insertPragma:pragma$4.insertPragma};var options$6={proseWrap:commonOptions.proseWrap,singleQuote:commonOptions.singleQuote};var name$g="Markdown";var type$f="prose";var aliases$5=["pandoc"];var aceMode$f="markdown";var codemirrorMode$b="gfm";var codemirrorMimeType$b="text/x-gfm";var wrap=true;var extensions$f=[".md",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".workbook"];var filenames$3=["contents.lr"];var tmScope$f="source.gfm";var languageId$f=222;var Markdown={name:name$g,type:type$f,aliases:aliases$5,aceMode:aceMode$f,codemirrorMode:codemirrorMode$b,codemirrorMimeType:codemirrorMimeType$b,wrap:wrap,extensions:extensions$f,filenames:filenames$3,tmScope:tmScope$f,languageId:languageId$f};var Markdown$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$g,type:type$f,aliases:aliases$5,aceMode:aceMode$f,codemirrorMode:codemirrorMode$b,codemirrorMimeType:codemirrorMimeType$b,wrap:wrap,extensions:extensions$f,filenames:filenames$3,tmScope:tmScope$f,languageId:languageId$f,\'default\':Markdown});var require$$0$7=getCjsExportFromNamespace(Markdown$1);var languages$5=[createLanguage(require$$0$7,function(data){return{since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:data.filenames.concat(["README"]),extensions:data.extensions.filter(function(extension){return extension!==".mdx";})};}),createLanguage(require$$0$7,function(){return{name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]};})];var printers$5={mdast:printerMarkdown};var languageMarkdown={languages:languages$5,options:options$6,printers:printers$5};function isPragma(text){return /^\\s*@(prettier|format)\\s*$/.test(text);}function hasPragma$4(text){return /^\\s*#[^\\n\\S]*@(prettier|format)\\s*?(\\n|$)/.test(text);}function insertPragma$8(text){return"# @format\\n\\n".concat(text);}var pragma$5={isPragma:isPragma,hasPragma:hasPragma$4,insertPragma:insertPragma$8};var getLast$5=util$1.getLast;function getAncestorCount(path,filter){var counter=0;var pathStackLength=path.stack.length-1;for(var i=0;i<pathStackLength;i++){var value=path.stack[i];if(isNode(value)&&filter(value)){counter++;}}return counter;}/**\n   * @param {any} value\n   * @param {string[]=} types\n   */function isNode(value,types){return value&&typeof value.type==="string"&&(!types||types.includes(value.type));}function mapNode(node,callback,parent){return callback("children"in node?Object.assign({},node,{children:node.children.map(function(childNode){return mapNode(childNode,callback,node);})}):node,parent);}function defineShortcut(x,key,getter){Object.defineProperty(x,key,{get:getter,enumerable:false});}function isNextLineEmpty$5(node,text){var newlineCount=0;var textLength=text.length;for(var i=node.position.end.offset-1;i<textLength;i++){var char=text[i];if(char==="\\n"){newlineCount++;}if(newlineCount===1&&/\\S/.test(char)){return false;}if(newlineCount===2){return true;}}return false;}function isLastDescendantNode(path){var node=path.getValue();switch(node.type){case"tag":case"anchor":case"comment":return false;}var pathStackLength=path.stack.length;for(var i=1;i<pathStackLength;i++){var item=path.stack[i];var parentItem=path.stack[i-1];if(Array.isArray(parentItem)&&typeof item==="number"&&item!==parentItem.length-1){return false;}}return true;}function getLastDescendantNode$1(node){return"children"in node&&node.children.length!==0?getLastDescendantNode$1(getLast$5(node.children)):node;}function isPrettierIgnore$2(comment){return comment.value.trim()==="prettier-ignore";}function hasPrettierIgnore$7(path){var node=path.getValue();if(node.type==="documentBody"){var _document=path.getParentNode();return hasEndComments(_document.head)&&isPrettierIgnore$2(getLast$5(_document.head.endComments));}return hasLeadingComments(node)&&isPrettierIgnore$2(getLast$5(node.leadingComments));}function isEmptyNode(node){return(!node.children||node.children.length===0)&&!hasComments(node);}function hasComments(node){return hasLeadingComments(node)||hasMiddleComments(node)||hasIndicatorComment(node)||hasTrailingComment$2(node)||hasEndComments(node);}function hasLeadingComments(node){return node&&node.leadingComments&&node.leadingComments.length!==0;}function hasMiddleComments(node){return node&&node.middleComments&&node.middleComments.length!==0;}function hasIndicatorComment(node){return node&&node.indicatorComment;}function hasTrailingComment$2(node){return node&&node.trailingComment;}function hasEndComments(node){return node&&node.endComments&&node.endComments.length!==0;}/**\n   * " a   b c   d e   f " -> [" a   b", "c   d", "e   f "]\n   */function splitWithSingleSpace(text){var parts=[];var lastPart=undefined;var _iterator42=_createForOfIteratorHelper(text.split(/( +)/g)),_step42;try{for(_iterator42.s();!(_step42=_iterator42.n()).done;){var part=_step42.value;if(part!==" "){if(lastPart===" "){parts.push(part);}else{parts.push((parts.pop()||"")+part);}}else if(lastPart===undefined){parts.unshift("");}lastPart=part;}}catch(err){_iterator42.e(err);}finally{_iterator42.f();}if(lastPart===" "){parts.push((parts.pop()||"")+" ");}if(parts[0]===""){parts.shift();parts.unshift(" "+(parts.shift()||""));}return parts;}function getFlowScalarLineContents(nodeType,content,options){var rawLineContents=content.split("\\n").map(function(lineContent,index,lineContents){return index===0&&index===lineContents.length-1?lineContent:index!==0&&index!==lineContents.length-1?lineContent.trim():index===0?lineContent.trimEnd():lineContent.trimStart();});if(options.proseWrap==="preserve"){return rawLineContents.map(function(lineContent){return lineContent.length===0?[]:[lineContent];});}return rawLineContents.map(function(lineContent){return lineContent.length===0?[]:splitWithSingleSpace(lineContent);}).reduce(function(reduced,lineContentWords,index){return index!==0&&rawLineContents[index-1].length!==0&&lineContentWords.length!==0&&!(// trailing backslash in quoteDouble should be preserved\nnodeType==="quoteDouble"&&getLast$5(getLast$5(reduced)).endsWith("\\\\"))?reduced.concat([reduced.pop().concat(lineContentWords)]):reduced.concat([lineContentWords]);},[]).map(function(lineContentWords){return options.proseWrap==="never"?[lineContentWords.join(" ")]:lineContentWords;});}function getBlockValueLineContents(node,_ref32){var parentIndent=_ref32.parentIndent,isLastDescendant=_ref32.isLastDescendant,options=_ref32.options;var content=node.position.start.line===node.position.end.line?"":options.originalText.slice(node.position.start.offset,node.position.end.offset)// exclude open line `>` or `|`\n.match(/^[^\\n]*?\\n([\\s\\S]*)$/)[1];var leadingSpaceCount=node.indent===null?function(match){return match?match[1].length:Infinity;}(content.match(/^( *)\\S/m)):node.indent-1+parentIndent;var rawLineContents=content.split("\\n").map(function(lineContent){return lineContent.slice(leadingSpaceCount);});if(options.proseWrap==="preserve"||node.type==="blockLiteral"){return removeUnnecessaryTrailingNewlines(rawLineContents.map(function(lineContent){return lineContent.length===0?[]:[lineContent];}));}return removeUnnecessaryTrailingNewlines(rawLineContents.map(function(lineContent){return lineContent.length===0?[]:splitWithSingleSpace(lineContent);}).reduce(function(reduced,lineContentWords,index){return index!==0&&rawLineContents[index-1].length!==0&&lineContentWords.length!==0&&!/^\\s/.test(lineContentWords[0])&&!/^\\s|\\s$/.test(getLast$5(reduced))?reduced.concat([reduced.pop().concat(lineContentWords)]):reduced.concat([lineContentWords]);},[]).map(function(lineContentWords){return lineContentWords.reduce(function(reduced,word){return(// disallow trailing spaces\nreduced.length!==0&&/\\s$/.test(getLast$5(reduced))?reduced.concat(reduced.pop()+" "+word):reduced.concat(word));},[]);}).map(function(lineContentWords){return options.proseWrap==="never"?[lineContentWords.join(" ")]:lineContentWords;}));function removeUnnecessaryTrailingNewlines(lineContents){if(node.chomping==="keep"){return getLast$5(lineContents).length===0?lineContents.slice(0,-1):lineContents;}var trailingNewlineCount=0;for(var i=lineContents.length-1;i>=0;i--){if(lineContents[i].length===0){trailingNewlineCount++;}else{break;}}return trailingNewlineCount===0?lineContents:trailingNewlineCount>=2&&!isLastDescendant?// next empty line\nlineContents.slice(0,-(trailingNewlineCount-1)):lineContents.slice(0,-trailingNewlineCount);}}var utils$7={getLast:getLast$5,getAncestorCount:getAncestorCount,isNode:isNode,isEmptyNode:isEmptyNode,mapNode:mapNode,defineShortcut:defineShortcut,isNextLineEmpty:isNextLineEmpty$5,isLastDescendantNode:isLastDescendantNode,getBlockValueLineContents:getBlockValueLineContents,getFlowScalarLineContents:getFlowScalarLineContents,getLastDescendantNode:getLastDescendantNode$1,hasPrettierIgnore:hasPrettierIgnore$7,hasLeadingComments:hasLeadingComments,hasMiddleComments:hasMiddleComments,hasIndicatorComment:hasIndicatorComment,hasTrailingComment:hasTrailingComment$2,hasEndComments:hasEndComments};var insertPragma$9=pragma$5.insertPragma,isPragma$1=pragma$5.isPragma;var getAncestorCount$1=utils$7.getAncestorCount,getBlockValueLineContents$1=utils$7.getBlockValueLineContents,getFlowScalarLineContents$1=utils$7.getFlowScalarLineContents,getLast$6=utils$7.getLast,getLastDescendantNode$2=utils$7.getLastDescendantNode,hasLeadingComments$1=utils$7.hasLeadingComments,hasMiddleComments$1=utils$7.hasMiddleComments,hasIndicatorComment$1=utils$7.hasIndicatorComment,hasTrailingComment$3=utils$7.hasTrailingComment,hasEndComments$1=utils$7.hasEndComments,hasPrettierIgnore$8=utils$7.hasPrettierIgnore,isLastDescendantNode$1=utils$7.isLastDescendantNode,isNextLineEmpty$6=utils$7.isNextLineEmpty,isNode$1=utils$7.isNode,isEmptyNode$1=utils$7.isEmptyNode,defineShortcut$1=utils$7.defineShortcut,mapNode$1=utils$7.mapNode;var docBuilders$2=document.builders;var conditionalGroup$2=docBuilders$2.conditionalGroup,breakParent$5=docBuilders$2.breakParent,concat$h=docBuilders$2.concat,dedent$3=docBuilders$2.dedent,dedentToRoot$3=docBuilders$2.dedentToRoot,fill$6=docBuilders$2.fill,group$g=docBuilders$2.group,hardline$d=docBuilders$2.hardline,ifBreak$8=docBuilders$2.ifBreak,join$c=docBuilders$2.join,line$b=docBuilders$2.line,lineSuffix$2=docBuilders$2.lineSuffix,literalline$7=docBuilders$2.literalline,markAsRoot$5=docBuilders$2.markAsRoot,softline$8=docBuilders$2.softline;var replaceEndOfLineWith$3=util$1.replaceEndOfLineWith;function preprocess$3(ast){return mapNode$1(ast,defineShortcuts);}function defineShortcuts(node){switch(node.type){case"document":defineShortcut$1(node,"head",function(){return node.children[0];});defineShortcut$1(node,"body",function(){return node.children[1];});break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":defineShortcut$1(node,"content",function(){return node.children[0];});break;case"mappingItem":case"flowMappingItem":defineShortcut$1(node,"key",function(){return node.children[0];});defineShortcut$1(node,"value",function(){return node.children[1];});break;}return node;}function genericPrint$6(path,options,print){var node=path.getValue();var parentNode=path.getParentNode();var tag=!node.tag?"":path.call(print,"tag");var anchor=!node.anchor?"":path.call(print,"anchor");var nextEmptyLine=isNode$1(node,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!isLastDescendantNode$1(path)?printNextEmptyLine(path,options.originalText):"";return concat$h([node.type!=="mappingValue"&&hasLeadingComments$1(node)?concat$h([join$c(hardline$d,path.map(print,"leadingComments")),hardline$d]):"",tag,tag&&anchor?" ":"",anchor,tag||anchor?isNode$1(node,["sequence","mapping"])&&!hasMiddleComments$1(node)?hardline$d:" ":"",hasMiddleComments$1(node)?concat$h([node.middleComments.length===1?"":hardline$d,join$c(hardline$d,path.map(print,"middleComments")),hardline$d]):"",hasPrettierIgnore$8(path)?concat$h(replaceEndOfLineWith$3(options.originalText.slice(node.position.start.offset,node.position.end.offset),literalline$7)):group$g(_print(node,parentNode,path,options,print)),hasTrailingComment$3(node)&&!isNode$1(node,["document","documentHead"])?lineSuffix$2(concat$h([node.type==="mappingValue"&&!node.content?"":" ",parentNode.type==="mappingKey"&&path.getParentNode(2).type==="mapping"&&isInlineNode(node)?"":breakParent$5,path.call(print,"trailingComment")])):"",nextEmptyLine,hasEndComments$1(node)&&!isNode$1(node,["documentHead","documentBody"])?align$3(node.type==="sequenceItem"?2:0,concat$h([hardline$d,join$c(hardline$d,path.map(print,"endComments"))])):""]);}function _print(node,parentNode,path,options,print){switch(node.type){case"root":return concat$h([join$c(hardline$d,path.map(function(childPath,index){var document=node.children[index];var nextDocument=node.children[index+1];return concat$h([print(childPath),shouldPrintDocumentEndMarker(document,nextDocument)?concat$h([hardline$d,"...",hasTrailingComment$3(document)?concat$h([" ",path.call(print,"trailingComment")]):""]):!nextDocument||hasTrailingComment$3(nextDocument.head)?"":concat$h([hardline$d,"---"])]);},"children")),node.children.length===0||function(lastDescendantNode){return isNode$1(lastDescendantNode,["blockLiteral","blockFolded"])&&lastDescendantNode.chomping==="keep";}(getLastDescendantNode$2(node))?"":hardline$d]);case"document":{var nextDocument=parentNode.children[path.getName()+1];return join$c(hardline$d,[shouldPrintDocumentHeadEndMarker(node,nextDocument,parentNode,options)==="head"?join$c(hardline$d,[node.head.children.length===0&&node.head.endComments.length===0?"":path.call(print,"head"),concat$h(["---",hasTrailingComment$3(node.head)?concat$h([" ",path.call(print,"head","trailingComment")]):""])].filter(Boolean)):"",shouldPrintDocumentBody(node)?path.call(print,"body"):""].filter(Boolean));}case"documentHead":return join$c(hardline$d,[].concat(path.map(print,"children"),path.map(print,"endComments")));case"documentBody":{var children=join$c(hardline$d,path.map(print,"children")).parts;var endComments=join$c(hardline$d,path.map(print,"endComments")).parts;var separator=children.length===0||endComments.length===0?"":function(lastDescendantNode){return isNode$1(lastDescendantNode,["blockFolded","blockLiteral"])?lastDescendantNode.chomping==="keep"?// there\'s already a newline printed at the end of blockValue (chomping=keep, lastDescendant=true)\n"":// an extra newline for better readability\nconcat$h([hardline$d,hardline$d]):hardline$d;}(getLastDescendantNode$2(node));return concat$h([].concat(children,separator,endComments));}case"directive":return concat$h(["%",join$c(" ",[node.name].concat(node.parameters))]);case"comment":return concat$h(["#",node.value]);case"alias":return concat$h(["*",node.value]);case"tag":return options.originalText.slice(node.position.start.offset,node.position.end.offset);case"anchor":return concat$h(["&",node.value]);case"plain":return printFlowScalarContent(node.type,options.originalText.slice(node.position.start.offset,node.position.end.offset),options);case"quoteDouble":case"quoteSingle":{var singleQuote="\'";var doubleQuote=\'"\';var raw=options.originalText.slice(node.position.start.offset+1,node.position.end.offset-1);if(node.type==="quoteSingle"&&raw.includes("\\\\")||node.type==="quoteDouble"&&/\\\\[^"]/.test(raw)){// only quoteDouble can use escape chars\n// and quoteSingle do not need to escape backslashes\nvar originalQuote=node.type==="quoteDouble"?doubleQuote:singleQuote;return concat$h([originalQuote,printFlowScalarContent(node.type,raw,options),originalQuote]);}else if(raw.includes(doubleQuote)){return concat$h([singleQuote,printFlowScalarContent(node.type,node.type==="quoteDouble"?raw// double quote needs to be escaped by backslash in quoteDouble\n.replace(/\\\\"/g,doubleQuote).replace(/\'/g,singleQuote.repeat(2)):raw,options),singleQuote]);}if(raw.includes(singleQuote)){return concat$h([doubleQuote,printFlowScalarContent(node.type,node.type==="quoteSingle"?// single quote needs to be escaped by 2 single quotes in quoteSingle\nraw.replace(/\'\'/g,singleQuote):raw,options),doubleQuote]);}var quote=options.singleQuote?singleQuote:doubleQuote;return concat$h([quote,printFlowScalarContent(node.type,raw,options),quote]);}case"blockFolded":case"blockLiteral":{var parentIndent=getAncestorCount$1(path,function(ancestorNode){return isNode$1(ancestorNode,["sequence","mapping"]);});var isLastDescendant=isLastDescendantNode$1(path);return concat$h([node.type==="blockFolded"?">":"|",node.indent===null?"":node.indent.toString(),node.chomping==="clip"?"":node.chomping==="keep"?"+":"-",hasIndicatorComment$1(node)?concat$h([" ",path.call(print,"indicatorComment")]):"",(node.indent===null?dedent$3:dedentToRoot$3)(align$3(node.indent===null?options.tabWidth:node.indent-1+parentIndent,concat$h(getBlockValueLineContents$1(node,{parentIndent:parentIndent,isLastDescendant:isLastDescendant,options:options}).reduce(function(reduced,lineWords,index,lineContents){return reduced.concat(index===0?hardline$d:"",fill$6(join$c(line$b,lineWords).parts),index!==lineContents.length-1?lineWords.length===0?hardline$d:markAsRoot$5(literalline$7):node.chomping==="keep"&&isLastDescendant?lineWords.length===0?dedentToRoot$3(hardline$d):dedentToRoot$3(literalline$7):"");},[]))))]);}case"sequence":return join$c(hardline$d,path.map(print,"children"));case"sequenceItem":return concat$h(["- ",align$3(2,!node.content?"":path.call(print,"content"))]);case"mappingKey":return!node.content?"":path.call(print,"content");case"mappingValue":return!node.content?"":path.call(print,"content");case"mapping":return join$c(hardline$d,path.map(print,"children"));case"mappingItem":case"flowMappingItem":{var isEmptyMappingKey=isEmptyNode$1(node.key);var isEmptyMappingValue=isEmptyNode$1(node.value);if(isEmptyMappingKey&&isEmptyMappingValue){return concat$h([": "]);}var _key20=path.call(print,"key");var value=path.call(print,"value");if(isEmptyMappingValue){return node.type==="flowMappingItem"&&parentNode.type==="flowMapping"?_key20:node.type==="mappingItem"&&isAbsolutelyPrintedAsSingleLineNode(node.key.content,options)&&!hasTrailingComment$3(node.key.content)&&(!parentNode.tag||parentNode.tag.value!=="tag:yaml.org,2002:set")?concat$h([_key20,needsSpaceInFrontOfMappingValue(node)?" ":"",":"]):concat$h(["? ",align$3(2,_key20)]);}if(isEmptyMappingKey){return concat$h([": ",align$3(2,value)]);}var groupId=Symbol("mappingKey");var forceExplicitKey=hasLeadingComments$1(node.value)||!isInlineNode(node.key.content);return forceExplicitKey?concat$h(["? ",align$3(2,_key20),hardline$d,join$c("",path.map(print,"value","leadingComments").map(function(comment){return concat$h([comment,hardline$d]);})),": ",align$3(2,value)]):// force singleline\nisSingleLineNode(node.key.content)&&!hasLeadingComments$1(node.key.content)&&!hasMiddleComments$1(node.key.content)&&!hasTrailingComment$3(node.key.content)&&!hasEndComments$1(node.key)&&!hasLeadingComments$1(node.value.content)&&!hasMiddleComments$1(node.value.content)&&!hasEndComments$1(node.value)&&isAbsolutelyPrintedAsSingleLineNode(node.value.content,options)?concat$h([_key20,needsSpaceInFrontOfMappingValue(node)?" ":"",": ",value]):conditionalGroup$2([concat$h([group$g(concat$h([ifBreak$8("? "),group$g(align$3(2,_key20),{id:groupId})])),ifBreak$8(concat$h([hardline$d,": ",align$3(2,value)]),indent(concat$h([needsSpaceInFrontOfMappingValue(node)?" ":"",":",hasLeadingComments$1(node.value.content)||hasEndComments$1(node.value)&&node.value.content&&!isNode$1(node.value.content,["mapping","sequence"])||parentNode.type==="mapping"&&hasTrailingComment$3(node.key.content)&&isInlineNode(node.value.content)||isNode$1(node.value.content,["mapping","sequence"])&&node.value.content.tag===null&&node.value.content.anchor===null?hardline$d:!node.value.content?"":line$b,value])),{groupId:groupId})])]);}case"flowMapping":case"flowSequence":{var openMarker=node.type==="flowMapping"?"{":"[";var closeMarker=node.type==="flowMapping"?"}":"]";var bracketSpacing=node.type==="flowMapping"&&node.children.length!==0&&options.bracketSpacing?line$b:softline$8;var isLastItemEmptyMappingItem=node.children.length!==0&&function(lastItem){return lastItem.type==="flowMappingItem"&&isEmptyNode$1(lastItem.key)&&isEmptyNode$1(lastItem.value);}(getLast$6(node.children));return concat$h([openMarker,indent(concat$h([bracketSpacing,concat$h(path.map(function(childPath,index){return concat$h([print(childPath),index===node.children.length-1?"":concat$h([",",line$b,node.children[index].position.start.line!==node.children[index+1].position.start.line?printNextEmptyLine(childPath,options.originalText):""])]);},"children")),ifBreak$8(",","")])),isLastItemEmptyMappingItem?"":bracketSpacing,closeMarker]);}case"flowSequenceItem":return path.call(print,"content");// istanbul ignore next\ndefault:throw new Error("Unexpected node type ".concat(node.type));}function indent(doc){return docBuilders$2.align(" ".repeat(options.tabWidth),doc);}}function align$3(n,doc){return typeof n==="number"&&n>0?docBuilders$2.align(" ".repeat(n),doc):docBuilders$2.align(n,doc);}function isInlineNode(node){if(!node){return true;}switch(node.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return true;default:return false;}}function isSingleLineNode(node){if(!node){return true;}switch(node.type){case"plain":case"quoteDouble":case"quoteSingle":return node.position.start.line===node.position.end.line;case"alias":return true;default:return false;}}function shouldPrintDocumentBody(document){return document.body.children.length!==0||hasEndComments$1(document.body);}function shouldPrintDocumentEndMarker(document,nextDocument){return(/**\n       *... # trailingComment\n       */hasTrailingComment$3(document)||nextDocument&&(/**\n       * ...\n       * %DIRECTIVE\n       * ---\n       */nextDocument.head.children.length!==0||/**\n       * ...\n       * # endComment\n       * ---\n       */hasEndComments$1(nextDocument.head)));}function shouldPrintDocumentHeadEndMarker(document,nextDocument,root,options){if(/**\n     * ---\n     * preserve the first document head end marker\n     */root.children[0]===document&&/---(\\s|$)/.test(options.originalText.slice(options.locStart(document),options.locStart(document)+4))||/**\n     * %DIRECTIVE\n     * ---\n     */document.head.children.length!==0||/**\n     * # end comment\n     * ---\n     */hasEndComments$1(document.head)||/**\n     * --- # trailing comment\n     */hasTrailingComment$3(document.head)){return"head";}if(shouldPrintDocumentEndMarker(document,nextDocument)){return false;}return nextDocument?"root":false;}function isAbsolutelyPrintedAsSingleLineNode(node,options){if(!node){return true;}switch(node.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return true;default:return false;}if(options.proseWrap==="preserve"){return node.position.start.line===node.position.end.line;}if(// backslash-newline\n/\\\\$/m.test(options.originalText.slice(node.position.start.offset,node.position.end.offset))){return false;}switch(options.proseWrap){case"never":return!node.value.includes("\\n");case"always":return!/[\\n ]/.test(node.value);// istanbul ignore next\ndefault:return false;}}function needsSpaceInFrontOfMappingValue(node){return node.key.content&&node.key.content.type==="alias";}function printNextEmptyLine(path,originalText){var node=path.getValue();var root=path.stack[0];root.isNextEmptyLinePrintedChecklist=root.isNextEmptyLinePrintedChecklist||[];if(!root.isNextEmptyLinePrintedChecklist[node.position.end.line]){if(isNextLineEmpty$6(node,originalText)){root.isNextEmptyLinePrintedChecklist[node.position.end.line]=true;return softline$8;}}return"";}function printFlowScalarContent(nodeType,content,options){var lineContents=getFlowScalarLineContents$1(nodeType,content,options);return join$c(hardline$d,lineContents.map(function(lineContentWords){return fill$6(join$c(line$b,lineContentWords).parts);}));}function clean$7(node,newNode/*, parent */){if(isNode$1(newNode)){delete newNode.position;switch(newNode.type){case"comment":// insert pragma\nif(isPragma$1(newNode.value)){return null;}break;case"quoteDouble":case"quoteSingle":newNode.type="quote";break;}}}var printerYaml={preprocess:preprocess$3,print:genericPrint$6,massageAstNode:clean$7,insertPragma:insertPragma$9};var options$7={bracketSpacing:commonOptions.bracketSpacing,singleQuote:commonOptions.singleQuote,proseWrap:commonOptions.proseWrap};var name$h="YAML";var type$g="data";var tmScope$g="source.yaml";var aliases$6=["yml"];var extensions$g=[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"];var filenames$4=[".clang-format",".clang-tidy",".gemrc","glide.lock","yarn.lock"];var aceMode$g="yaml";var codemirrorMode$c="yaml";var codemirrorMimeType$c="text/x-yaml";var languageId$g=407;var YAML={name:name$h,type:type$g,tmScope:tmScope$g,aliases:aliases$6,extensions:extensions$g,filenames:filenames$4,aceMode:aceMode$g,codemirrorMode:codemirrorMode$c,codemirrorMimeType:codemirrorMimeType$c,languageId:languageId$g};var YAML$1=/*#__PURE__*/Object.freeze({__proto__:null,name:name$h,type:type$g,tmScope:tmScope$g,aliases:aliases$6,extensions:extensions$g,filenames:filenames$4,aceMode:aceMode$g,codemirrorMode:codemirrorMode$c,codemirrorMimeType:codemirrorMimeType$c,languageId:languageId$g,\'default\':YAML});var require$$0$8=getCjsExportFromNamespace(YAML$1);var languages$6=[createLanguage(require$$0$8,function(data){return{since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml"],// yarn.lock is not YAML: https://github.com/yarnpkg/yarn/issues/5629\nfilenames:data.filenames.filter(function(filename){return filename!=="yarn.lock";})};})];var languageYaml={languages:languages$6,printers:{yaml:printerYaml},options:options$7};var version$2=require$$0.version;var getSupportInfo$2=support.getSupportInfo;var internalPlugins=[languageCss,languageGraphql,languageHandlebars,languageHtml,languageJs,languageMarkdown,languageYaml];function withPlugins(fn)// Usually `opts` is the 2nd argument\n{var optsArgIdx=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return function(){for(var _len13=arguments.length,args=new Array(_len13),_key21=0;_key21<_len13;_key21++){args[_key21]=arguments[_key21];}var opts=args[optsArgIdx]||{};var plugins=opts.plugins||[];args[optsArgIdx]=Object.assign({},opts,{plugins:[].concat(internalPlugins,(0,_toConsumableArray3.default)(Array.isArray(plugins)?plugins:Object.values(plugins)))});return fn.apply(void 0,args);};}var formatWithCursor=withPlugins(core.formatWithCursor);var standalone={formatWithCursor:formatWithCursor,format:function format(text,opts){return formatWithCursor(text,opts).formatted;},check:function check(text,opts){var _formatWithCursor=formatWithCursor(text,opts),formatted=_formatWithCursor.formatted;return formatted===text;},doc:document,getSupportInfo:withPlugins(getSupportInfo$2,0),version:version$2,util:utilShared,__debug:{parse:withPlugins(core.parse),formatAST:withPlugins(core.formatAST),formatDoc:withPlugins(core.formatDoc),printToDoc:withPlugins(core.printToDoc),printDocToString:withPlugins(core.printDocToString)}};var standalone$1=standalone;return standalone$1;});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack:///./node_modules/prettier/standalone.js?')},"./node_modules/private/private.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar originalObject = Object;\nvar originalDefProp = Object.defineProperty;\nvar originalCreate = Object.create;\n\nfunction defProp(obj, name, value) {\n  if (originalDefProp) try {\n    originalDefProp.call(originalObject, obj, name, { value: value });\n  } catch (definePropertyIsBrokenInIE8) {\n    obj[name] = value;\n  } else {\n    obj[name] = value;\n  }\n}\n\n// For functions that will be invoked using .call or .apply, we need to\n// define those methods on the function objects themselves, rather than\n// inheriting them from Function.prototype, so that a malicious or clumsy\n// third party cannot interfere with the functionality of this module by\n// redefining Function.prototype.call or .apply.\nfunction makeSafeToCall(fun) {\n  if (fun) {\n    defProp(fun, "call", fun.call);\n    defProp(fun, "apply", fun.apply);\n  }\n  return fun;\n}\n\nmakeSafeToCall(originalDefProp);\nmakeSafeToCall(originalCreate);\n\nvar hasOwn = makeSafeToCall(Object.prototype.hasOwnProperty);\nvar numToStr = makeSafeToCall(Number.prototype.toString);\nvar strSlice = makeSafeToCall(String.prototype.slice);\n\nvar cloner = function(){};\nfunction create(prototype) {\n  if (originalCreate) {\n    return originalCreate.call(originalObject, prototype);\n  }\n  cloner.prototype = prototype || null;\n  return new cloner;\n}\n\nvar rand = Math.random;\nvar uniqueKeys = create(null);\n\nfunction makeUniqueKey() {\n  // Collisions are highly unlikely, but this module is in the business of\n  // making guarantees rather than safe bets.\n  do var uniqueKey = internString(strSlice.call(numToStr.call(rand(), 36), 2));\n  while (hasOwn.call(uniqueKeys, uniqueKey));\n  return uniqueKeys[uniqueKey] = uniqueKey;\n}\n\nfunction internString(str) {\n  var obj = {};\n  obj[str] = true;\n  return Object.keys(obj)[0];\n}\n\n// External users might find this function useful, but it is not necessary\n// for the typical use of this module.\nexports.makeUniqueKey = makeUniqueKey;\n\n// Object.getOwnPropertyNames is the only way to enumerate non-enumerable\n// properties, so if we wrap it to ignore our secret keys, there should be\n// no way (except guessing) to access those properties.\nvar originalGetOPNs = Object.getOwnPropertyNames;\nObject.getOwnPropertyNames = function getOwnPropertyNames(object) {\n  for (var names = originalGetOPNs(object),\n           src = 0,\n           dst = 0,\n           len = names.length;\n       src < len;\n       ++src) {\n    if (!hasOwn.call(uniqueKeys, names[src])) {\n      if (src > dst) {\n        names[dst] = names[src];\n      }\n      ++dst;\n    }\n  }\n  names.length = dst;\n  return names;\n};\n\nfunction defaultCreatorFn(object) {\n  return create(null);\n}\n\nfunction makeAccessor(secretCreatorFn) {\n  var brand = makeUniqueKey();\n  var passkey = create(null);\n\n  secretCreatorFn = secretCreatorFn || defaultCreatorFn;\n\n  function register(object) {\n    var secret; // Created lazily.\n\n    function vault(key, forget) {\n      // Only code that has access to the passkey can retrieve (or forget)\n      // the secret object.\n      if (key === passkey) {\n        return forget\n          ? secret = null\n          : secret || (secret = secretCreatorFn(object));\n      }\n    }\n\n    defProp(object, brand, vault);\n  }\n\n  function accessor(object) {\n    if (!hasOwn.call(object, brand))\n      register(object);\n    return object[brand](passkey);\n  }\n\n  accessor.forget = function(object) {\n    if (hasOwn.call(object, brand))\n      object[brand](passkey, true);\n  };\n\n  return accessor;\n}\n\nexports.makeAccessor = makeAccessor;\n\n\n//# sourceURL=webpack:///./node_modules/private/private.js?')},"./node_modules/process/browser.js":function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?")},"./node_modules/regenerate/regenerate.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/regenerate v1.3.3 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports =  true && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule =  true && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js/io.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n\t// code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\tvar index = 0;\n\t\tvar length = data.length;\n\t\t// Exit early if `codePoint` is not within `data`’s overall range.\n\t\tvar start = data[index];\n\t\tvar end = data[length - 1];\n\t\tif (length >= 2) {\n\t\t\tif (codePoint < start || codePoint > end) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x2D) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\t// Note: `-` (U+002D HYPHEN-MINUS) is escaped in this way rather\n\t\t\t// than by backslash-escaping, in case the output is used outside\n\t\t\t// of a character class in a `u` RegExp. /\\-/u throws, but\n\t\t\t// /\\x2D/u is fine.\n\t\t\tstring = '\\\\x2D';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2E || codePoint == 0x2F ||\n\t\t\tcodePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+./?[\\]^{|}\n\t\t\t//\n\t\t\t// This matches SyntaxCharacters as well as `/` (U+002F SOLIDUS).\n\t\t\t// https://tc39.github.io/ecma262/#prod-SyntaxCharacter\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar codePointToStringUnicode = function(codePoint) {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn codePointToString(codePoint);\n\t\t}\n\t\treturn '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar createUnicodeCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToStringUnicode(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToStringUnicode(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar loneLowSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\tif (start < HIGH_SURROGATE_MIN) {\n\n\t\t\t\t// The range starts and ends before the high surrogate range.\n\t\t\t\t// E.g. (0, 0x10).\n\t\t\t\tif (end < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends within it.\n\t\t\t\t// E.g. (0, 0xD855).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends after the\n\t\t\t\t// low surrogate range. E.g. (0, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the high surrogate range.\n\t\t\t\t// E.g. (0xD855, 0xD866).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the low surrogate range.\n\t\t\t\t// E.g. (0xDCFF, 0xDDFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the low surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n\n\t\t\t\t// The range starts and ends after the low surrogate range.\n\t\t\t\t// E.g. (0xFFAA, 0x10FFFF).\n\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The range starts and ends in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'loneLowSurrogates': loneLowSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {\n\t\tif (hasUnicodeFlag) {\n\t\t\treturn createUnicodeCharacterClasses(data);\n\t\t}\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar loneLowSurrogates = parts.loneLowSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n\t\tvar hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\tif (bmpOnly) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t\thasLoneHighSurrogates = false;\n\t\t\tbmp = dataAddData(bmp, loneLowSurrogates);\n\t\t\thasLoneLowSurrogates = false;\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\t// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\t\tif (hasLoneHighSurrogates) {\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(loneHighSurrogates) +\n\t\t\t\t// Make sure the high surrogates aren’t part of a surrogate pair.\n\t\t\t\t'(?![\\\\uDC00-\\\\uDFFF])'\n\t\t\t);\n\t\t}\n\t\tif (hasLoneLowSurrogates) {\n\t\t\tresult.push(\n\t\t\t\t// It is not possible to accurately assert the low surrogates aren’t\n\t\t\t\t// part of a surrogate pair, since JavaScript regular expressions do\n\t\t\t\t// not support lookbehind.\n\t\t\t\t'(?:[^\\\\uD800-\\\\uDBFF]|^)' +\n\t\t\t\tcreateBMPCharacterClasses(loneLowSurrogates)\n\t\t\t);\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.3.3';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function(options) {\n\t\t\tvar result = createCharacterClassesFromData(\n\t\t\t\tthis.data,\n\t\t\t\toptions ? options.bmpOnly : false,\n\t\t\t\toptions ? options.hasUnicodeFlag : false\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\t// For an empty set, return something that can be inserted `/here/` to\n\t\t\t\t// form a valid regular expression. Avoid `(?:)` since that matches the\n\t\t\t\t// empty string.\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\tvar pattern = this.toString(\n\t\t\t\tflags && flags.indexOf('u') != -1 ?\n\t\t\t\t\t{ 'hasUnicodeFlag': true } :\n\t\t\t\t\tnull\n\t\t\t);\n\t\t\treturn RegExp(pattern, flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn regenerate;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse {}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/regenerate/regenerate.js?")},"./node_modules/regenerator-transform/lib/emit.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _stringify = __webpack_require__("./node_modules/babel-runtime/core-js/json/stringify.js");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _assert = __webpack_require__("./node_modules/assert/assert.js");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _leap = __webpack_require__("./node_modules/regenerator-transform/lib/leap.js");\n\nvar leap = _interopRequireWildcard(_leap);\n\nvar _meta = __webpack_require__("./node_modules/regenerator-transform/lib/meta.js");\n\nvar meta = _interopRequireWildcard(_meta);\n\nvar _util = __webpack_require__("./node_modules/regenerator-transform/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasOwn = Object.prototype.hasOwnProperty; /**\n                                               * Copyright (c) 2014, Facebook, Inc.\n                                               * All rights reserved.\n                                               *\n                                               * This source code is licensed under the BSD-style license found in the\n                                               * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n                                               * additional grant of patent rights can be found in the PATENTS file in\n                                               * the same directory.\n                                               */\n\nfunction Emitter(contextId) {\n  _assert2.default.ok(this instanceof Emitter);\n  t.assertIdentifier(contextId);\n\n  // Used to generate unique temporary names.\n  this.nextTempId = 0;\n\n  // In order to make sure the context object does not collide with\n  // anything in the local scope, we might have to rename it, so we\n  // refer to it symbolically instead of just assuming that it will be\n  // called "context".\n  this.contextId = contextId;\n\n  // An append-only list of Statements that grows each time this.emit is\n  // called.\n  this.listing = [];\n\n  // A sparse array whose keys correspond to locations in this.listing\n  // that have been marked as branch/jump targets.\n  this.marked = [true];\n\n  // The last location will be marked when this.getDispatchLoop is\n  // called.\n  this.finalLoc = loc();\n\n  // A list of all leap.TryEntry statements emitted.\n  this.tryEntries = [];\n\n  // Each time we evaluate the body of a loop, we tell this.leapManager\n  // to enter a nested loop context that determines the meaning of break\n  // and continue statements therein.\n  this.leapManager = new leap.LeapManager(this);\n}\n\nvar Ep = Emitter.prototype;\nexports.Emitter = Emitter;\n\n// Offsets into this.listing that could be used as targets for branches or\n// jumps are represented as numeric Literal nodes. This representation has\n// the amazingly convenient benefit of allowing the exact value of the\n// location to be determined at any time, even after generating code that\n// refers to the location.\nfunction loc() {\n  return t.numericLiteral(-1);\n}\n\n// Sets the exact value of the given location to the offset of the next\n// Statement emitted.\nEp.mark = function (loc) {\n  t.assertLiteral(loc);\n  var index = this.listing.length;\n  if (loc.value === -1) {\n    loc.value = index;\n  } else {\n    // Locations can be marked redundantly, but their values cannot change\n    // once set the first time.\n    _assert2.default.strictEqual(loc.value, index);\n  }\n  this.marked[index] = true;\n  return loc;\n};\n\nEp.emit = function (node) {\n  if (t.isExpression(node)) {\n    node = t.expressionStatement(node);\n  }\n\n  t.assertStatement(node);\n  this.listing.push(node);\n};\n\n// Shorthand for emitting assignment statements. This will come in handy\n// for assignments to temporary variables.\nEp.emitAssign = function (lhs, rhs) {\n  this.emit(this.assign(lhs, rhs));\n  return lhs;\n};\n\n// Shorthand for an assignment statement.\nEp.assign = function (lhs, rhs) {\n  return t.expressionStatement(t.assignmentExpression("=", lhs, rhs));\n};\n\n// Convenience function for generating expressions like context.next,\n// context.sent, and context.rval.\nEp.contextProperty = function (name, computed) {\n  return t.memberExpression(this.contextId, computed ? t.stringLiteral(name) : t.identifier(name), !!computed);\n};\n\n// Shorthand for setting context.rval and jumping to `context.stop()`.\nEp.stop = function (rval) {\n  if (rval) {\n    this.setReturnValue(rval);\n  }\n\n  this.jump(this.finalLoc);\n};\n\nEp.setReturnValue = function (valuePath) {\n  t.assertExpression(valuePath.value);\n\n  this.emitAssign(this.contextProperty("rval"), this.explodeExpression(valuePath));\n};\n\nEp.clearPendingException = function (tryLoc, assignee) {\n  t.assertLiteral(tryLoc);\n\n  var catchCall = t.callExpression(this.contextProperty("catch", true), [tryLoc]);\n\n  if (assignee) {\n    this.emitAssign(assignee, catchCall);\n  } else {\n    this.emit(catchCall);\n  }\n};\n\n// Emits code for an unconditional jump to the given location, even if the\n// exact value of the location is not yet known.\nEp.jump = function (toLoc) {\n  this.emitAssign(this.contextProperty("next"), toLoc);\n  this.emit(t.breakStatement());\n};\n\n// Conditional jump.\nEp.jumpIf = function (test, toLoc) {\n  t.assertExpression(test);\n  t.assertLiteral(toLoc);\n\n  this.emit(t.ifStatement(test, t.blockStatement([this.assign(this.contextProperty("next"), toLoc), t.breakStatement()])));\n};\n\n// Conditional jump, with the condition negated.\nEp.jumpIfNot = function (test, toLoc) {\n  t.assertExpression(test);\n  t.assertLiteral(toLoc);\n\n  var negatedTest = void 0;\n  if (t.isUnaryExpression(test) && test.operator === "!") {\n    // Avoid double negation.\n    negatedTest = test.argument;\n  } else {\n    negatedTest = t.unaryExpression("!", test);\n  }\n\n  this.emit(t.ifStatement(negatedTest, t.blockStatement([this.assign(this.contextProperty("next"), toLoc), t.breakStatement()])));\n};\n\n// Returns a unique MemberExpression that can be used to store and\n// retrieve temporary values. Since the object of the member expression is\n// the context object, which is presumed to coexist peacefully with all\n// other local variables, and since we just increment `nextTempId`\n// monotonically, uniqueness is assured.\nEp.makeTempVar = function () {\n  return this.contextProperty("t" + this.nextTempId++);\n};\n\nEp.getContextFunction = function (id) {\n  return t.functionExpression(id || null /*Anonymous*/\n  , [this.contextId], t.blockStatement([this.getDispatchLoop()]), false, // Not a generator anymore!\n  false // Nor an expression.\n  );\n};\n\n// Turns this.listing into a loop of the form\n//\n//   while (1) switch (context.next) {\n//   case 0:\n//   ...\n//   case n:\n//     return context.stop();\n//   }\n//\n// Each marked location in this.listing will correspond to one generated\n// case statement.\nEp.getDispatchLoop = function () {\n  var self = this;\n  var cases = [];\n  var current = void 0;\n\n  // If we encounter a break, continue, or return statement in a switch\n  // case, we can skip the rest of the statements until the next case.\n  var alreadyEnded = false;\n\n  self.listing.forEach(function (stmt, i) {\n    if (self.marked.hasOwnProperty(i)) {\n      cases.push(t.switchCase(t.numericLiteral(i), current = []));\n      alreadyEnded = false;\n    }\n\n    if (!alreadyEnded) {\n      current.push(stmt);\n      if (t.isCompletionStatement(stmt)) alreadyEnded = true;\n    }\n  });\n\n  // Now that we know how many statements there will be in this.listing,\n  // we can finally resolve this.finalLoc.value.\n  this.finalLoc.value = this.listing.length;\n\n  cases.push(t.switchCase(this.finalLoc, [\n    // Intentionally fall through to the "end" case...\n  ]),\n\n  // So that the runtime can jump to the final location without having\n  // to know its offset, we provide the "end" case as a synonym.\n  t.switchCase(t.stringLiteral("end"), [\n  // This will check/clear both context.thrown and context.rval.\n  t.returnStatement(t.callExpression(this.contextProperty("stop"), []))]));\n\n  return t.whileStatement(t.numericLiteral(1), t.switchStatement(t.assignmentExpression("=", this.contextProperty("prev"), this.contextProperty("next")), cases));\n};\n\nEp.getTryLocsList = function () {\n  if (this.tryEntries.length === 0) {\n    // To avoid adding a needless [] to the majority of runtime.wrap\n    // argument lists, force the caller to handle this case specially.\n    return null;\n  }\n\n  var lastLocValue = 0;\n\n  return t.arrayExpression(this.tryEntries.map(function (tryEntry) {\n    var thisLocValue = tryEntry.firstLoc.value;\n    _assert2.default.ok(thisLocValue >= lastLocValue, "try entries out of order");\n    lastLocValue = thisLocValue;\n\n    var ce = tryEntry.catchEntry;\n    var fe = tryEntry.finallyEntry;\n\n    var locs = [tryEntry.firstLoc,\n    // The null here makes a hole in the array.\n    ce ? ce.firstLoc : null];\n\n    if (fe) {\n      locs[2] = fe.firstLoc;\n      locs[3] = fe.afterLoc;\n    }\n\n    return t.arrayExpression(locs);\n  }));\n};\n\n// All side effects must be realized in order.\n\n// If any subexpression harbors a leap, all subexpressions must be\n// neutered of side effects.\n\n// No destructive modification of AST nodes.\n\nEp.explode = function (path, ignoreResult) {\n  var node = path.node;\n  var self = this;\n\n  t.assertNode(node);\n\n  if (t.isDeclaration(node)) throw getDeclError(node);\n\n  if (t.isStatement(node)) return self.explodeStatement(path);\n\n  if (t.isExpression(node)) return self.explodeExpression(path, ignoreResult);\n\n  switch (node.type) {\n    case "Program":\n      return path.get("body").map(self.explodeStatement, self);\n\n    case "VariableDeclarator":\n      throw getDeclError(node);\n\n    // These node types should be handled by their parent nodes\n    // (ObjectExpression, SwitchStatement, and TryStatement, respectively).\n    case "Property":\n    case "SwitchCase":\n    case "CatchClause":\n      throw new Error(node.type + " nodes should be handled by their parents");\n\n    default:\n      throw new Error("unknown Node of type " + (0, _stringify2.default)(node.type));\n  }\n};\n\nfunction getDeclError(node) {\n  return new Error("all declarations should have been transformed into " + "assignments before the Exploder began its work: " + (0, _stringify2.default)(node));\n}\n\nEp.explodeStatement = function (path, labelId) {\n  var stmt = path.node;\n  var self = this;\n  var before = void 0,\n      after = void 0,\n      head = void 0;\n\n  t.assertStatement(stmt);\n\n  if (labelId) {\n    t.assertIdentifier(labelId);\n  } else {\n    labelId = null;\n  }\n\n  // Explode BlockStatement nodes even if they do not contain a yield,\n  // because we don\'t want or need the curly braces.\n  if (t.isBlockStatement(stmt)) {\n    path.get("body").forEach(function (path) {\n      self.explodeStatement(path);\n    });\n    return;\n  }\n\n  if (!meta.containsLeap(stmt)) {\n    // Technically we should be able to avoid emitting the statement\n    // altogether if !meta.hasSideEffects(stmt), but that leads to\n    // confusing generated code (for instance, `while (true) {}` just\n    // disappears) and is probably a more appropriate job for a dedicated\n    // dead code elimination pass.\n    self.emit(stmt);\n    return;\n  }\n\n  switch (stmt.type) {\n    case "ExpressionStatement":\n      self.explodeExpression(path.get("expression"), true);\n      break;\n\n    case "LabeledStatement":\n      after = loc();\n\n      // Did you know you can break from any labeled block statement or\n      // control structure? Well, you can! Note: when a labeled loop is\n      // encountered, the leap.LabeledEntry created here will immediately\n      // enclose a leap.LoopEntry on the leap manager\'s stack, and both\n      // entries will have the same label. Though this works just fine, it\n      // may seem a bit redundant. In theory, we could check here to\n      // determine if stmt knows how to handle its own label; for example,\n      // stmt happens to be a WhileStatement and so we know it\'s going to\n      // establish its own LoopEntry when we explode it (below). Then this\n      // LabeledEntry would be unnecessary. Alternatively, we might be\n      // tempted not to pass stmt.label down into self.explodeStatement,\n      // because we\'ve handled the label here, but that\'s a mistake because\n      // labeled loops may contain labeled continue statements, which is not\n      // something we can handle in this generic case. All in all, I think a\n      // little redundancy greatly simplifies the logic of this case, since\n      // it\'s clear that we handle all possible LabeledStatements correctly\n      // here, regardless of whether they interact with the leap manager\n      // themselves. Also remember that labels and break/continue-to-label\n      // statements are rare, and all of this logic happens at transform\n      // time, so it has no additional runtime cost.\n      self.leapManager.withEntry(new leap.LabeledEntry(after, stmt.label), function () {\n        self.explodeStatement(path.get("body"), stmt.label);\n      });\n\n      self.mark(after);\n\n      break;\n\n    case "WhileStatement":\n      before = loc();\n      after = loc();\n\n      self.mark(before);\n      self.jumpIfNot(self.explodeExpression(path.get("test")), after);\n      self.leapManager.withEntry(new leap.LoopEntry(after, before, labelId), function () {\n        self.explodeStatement(path.get("body"));\n      });\n      self.jump(before);\n      self.mark(after);\n\n      break;\n\n    case "DoWhileStatement":\n      var first = loc();\n      var test = loc();\n      after = loc();\n\n      self.mark(first);\n      self.leapManager.withEntry(new leap.LoopEntry(after, test, labelId), function () {\n        self.explode(path.get("body"));\n      });\n      self.mark(test);\n      self.jumpIf(self.explodeExpression(path.get("test")), first);\n      self.mark(after);\n\n      break;\n\n    case "ForStatement":\n      head = loc();\n      var update = loc();\n      after = loc();\n\n      if (stmt.init) {\n        // We pass true here to indicate that if stmt.init is an expression\n        // then we do not care about its result.\n        self.explode(path.get("init"), true);\n      }\n\n      self.mark(head);\n\n      if (stmt.test) {\n        self.jumpIfNot(self.explodeExpression(path.get("test")), after);\n      } else {\n        // No test means continue unconditionally.\n      }\n\n      self.leapManager.withEntry(new leap.LoopEntry(after, update, labelId), function () {\n        self.explodeStatement(path.get("body"));\n      });\n\n      self.mark(update);\n\n      if (stmt.update) {\n        // We pass true here to indicate that if stmt.update is an\n        // expression then we do not care about its result.\n        self.explode(path.get("update"), true);\n      }\n\n      self.jump(head);\n\n      self.mark(after);\n\n      break;\n\n    case "TypeCastExpression":\n      return self.explodeExpression(path.get("expression"));\n\n    case "ForInStatement":\n      head = loc();\n      after = loc();\n\n      var keyIterNextFn = self.makeTempVar();\n      self.emitAssign(keyIterNextFn, t.callExpression(util.runtimeProperty("keys"), [self.explodeExpression(path.get("right"))]));\n\n      self.mark(head);\n\n      var keyInfoTmpVar = self.makeTempVar();\n      self.jumpIf(t.memberExpression(t.assignmentExpression("=", keyInfoTmpVar, t.callExpression(keyIterNextFn, [])), t.identifier("done"), false), after);\n\n      self.emitAssign(stmt.left, t.memberExpression(keyInfoTmpVar, t.identifier("value"), false));\n\n      self.leapManager.withEntry(new leap.LoopEntry(after, head, labelId), function () {\n        self.explodeStatement(path.get("body"));\n      });\n\n      self.jump(head);\n\n      self.mark(after);\n\n      break;\n\n    case "BreakStatement":\n      self.emitAbruptCompletion({\n        type: "break",\n        target: self.leapManager.getBreakLoc(stmt.label)\n      });\n\n      break;\n\n    case "ContinueStatement":\n      self.emitAbruptCompletion({\n        type: "continue",\n        target: self.leapManager.getContinueLoc(stmt.label)\n      });\n\n      break;\n\n    case "SwitchStatement":\n      // Always save the discriminant into a temporary variable in case the\n      // test expressions overwrite values like context.sent.\n      var disc = self.emitAssign(self.makeTempVar(), self.explodeExpression(path.get("discriminant")));\n\n      after = loc();\n      var defaultLoc = loc();\n      var condition = defaultLoc;\n      var caseLocs = [];\n\n      // If there are no cases, .cases might be undefined.\n      var cases = stmt.cases || [];\n\n      for (var i = cases.length - 1; i >= 0; --i) {\n        var c = cases[i];\n        t.assertSwitchCase(c);\n\n        if (c.test) {\n          condition = t.conditionalExpression(t.binaryExpression("===", disc, c.test), caseLocs[i] = loc(), condition);\n        } else {\n          caseLocs[i] = defaultLoc;\n        }\n      }\n\n      var discriminant = path.get("discriminant");\n      util.replaceWithOrRemove(discriminant, condition);\n      self.jump(self.explodeExpression(discriminant));\n\n      self.leapManager.withEntry(new leap.SwitchEntry(after), function () {\n        path.get("cases").forEach(function (casePath) {\n          var i = casePath.key;\n          self.mark(caseLocs[i]);\n\n          casePath.get("consequent").forEach(function (path) {\n            self.explodeStatement(path);\n          });\n        });\n      });\n\n      self.mark(after);\n      if (defaultLoc.value === -1) {\n        self.mark(defaultLoc);\n        _assert2.default.strictEqual(after.value, defaultLoc.value);\n      }\n\n      break;\n\n    case "IfStatement":\n      var elseLoc = stmt.alternate && loc();\n      after = loc();\n\n      self.jumpIfNot(self.explodeExpression(path.get("test")), elseLoc || after);\n\n      self.explodeStatement(path.get("consequent"));\n\n      if (elseLoc) {\n        self.jump(after);\n        self.mark(elseLoc);\n        self.explodeStatement(path.get("alternate"));\n      }\n\n      self.mark(after);\n\n      break;\n\n    case "ReturnStatement":\n      self.emitAbruptCompletion({\n        type: "return",\n        value: self.explodeExpression(path.get("argument"))\n      });\n\n      break;\n\n    case "WithStatement":\n      throw new Error("WithStatement not supported in generator functions.");\n\n    case "TryStatement":\n      after = loc();\n\n      var handler = stmt.handler;\n\n      var catchLoc = handler && loc();\n      var catchEntry = catchLoc && new leap.CatchEntry(catchLoc, handler.param);\n\n      var finallyLoc = stmt.finalizer && loc();\n      var finallyEntry = finallyLoc && new leap.FinallyEntry(finallyLoc, after);\n\n      var tryEntry = new leap.TryEntry(self.getUnmarkedCurrentLoc(), catchEntry, finallyEntry);\n\n      self.tryEntries.push(tryEntry);\n      self.updateContextPrevLoc(tryEntry.firstLoc);\n\n      self.leapManager.withEntry(tryEntry, function () {\n        self.explodeStatement(path.get("block"));\n\n        if (catchLoc) {\n          if (finallyLoc) {\n            // If we have both a catch block and a finally block, then\n            // because we emit the catch block first, we need to jump over\n            // it to the finally block.\n            self.jump(finallyLoc);\n          } else {\n            // If there is no finally block, then we need to jump over the\n            // catch block to the fall-through location.\n            self.jump(after);\n          }\n\n          self.updateContextPrevLoc(self.mark(catchLoc));\n\n          var bodyPath = path.get("handler.body");\n          var safeParam = self.makeTempVar();\n          self.clearPendingException(tryEntry.firstLoc, safeParam);\n\n          bodyPath.traverse(catchParamVisitor, {\n            safeParam: safeParam,\n            catchParamName: handler.param.name\n          });\n\n          self.leapManager.withEntry(catchEntry, function () {\n            self.explodeStatement(bodyPath);\n          });\n        }\n\n        if (finallyLoc) {\n          self.updateContextPrevLoc(self.mark(finallyLoc));\n\n          self.leapManager.withEntry(finallyEntry, function () {\n            self.explodeStatement(path.get("finalizer"));\n          });\n\n          self.emit(t.returnStatement(t.callExpression(self.contextProperty("finish"), [finallyEntry.firstLoc])));\n        }\n      });\n\n      self.mark(after);\n\n      break;\n\n    case "ThrowStatement":\n      self.emit(t.throwStatement(self.explodeExpression(path.get("argument"))));\n\n      break;\n\n    default:\n      throw new Error("unknown Statement of type " + (0, _stringify2.default)(stmt.type));\n  }\n};\n\nvar catchParamVisitor = {\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === state.catchParamName && util.isReference(path)) {\n      util.replaceWithOrRemove(path, state.safeParam);\n    }\n  },\n\n  Scope: function Scope(path, state) {\n    if (path.scope.hasOwnBinding(state.catchParamName)) {\n      // Don\'t descend into nested scopes that shadow the catch\n      // parameter with their own declarations.\n      path.skip();\n    }\n  }\n};\n\nEp.emitAbruptCompletion = function (record) {\n  if (!isValidCompletion(record)) {\n    _assert2.default.ok(false, "invalid completion record: " + (0, _stringify2.default)(record));\n  }\n\n  _assert2.default.notStrictEqual(record.type, "normal", "normal completions are not abrupt");\n\n  var abruptArgs = [t.stringLiteral(record.type)];\n\n  if (record.type === "break" || record.type === "continue") {\n    t.assertLiteral(record.target);\n    abruptArgs[1] = record.target;\n  } else if (record.type === "return" || record.type === "throw") {\n    if (record.value) {\n      t.assertExpression(record.value);\n      abruptArgs[1] = record.value;\n    }\n  }\n\n  this.emit(t.returnStatement(t.callExpression(this.contextProperty("abrupt"), abruptArgs)));\n};\n\nfunction isValidCompletion(record) {\n  var type = record.type;\n\n  if (type === "normal") {\n    return !hasOwn.call(record, "target");\n  }\n\n  if (type === "break" || type === "continue") {\n    return !hasOwn.call(record, "value") && t.isLiteral(record.target);\n  }\n\n  if (type === "return" || type === "throw") {\n    return hasOwn.call(record, "value") && !hasOwn.call(record, "target");\n  }\n\n  return false;\n}\n\n// Not all offsets into emitter.listing are potential jump targets. For\n// example, execution typically falls into the beginning of a try block\n// without jumping directly there. This method returns the current offset\n// without marking it, so that a switch case will not necessarily be\n// generated for this offset (I say "not necessarily" because the same\n// location might end up being marked in the process of emitting other\n// statements). There\'s no logical harm in marking such locations as jump\n// targets, but minimizing the number of switch cases keeps the generated\n// code shorter.\nEp.getUnmarkedCurrentLoc = function () {\n  return t.numericLiteral(this.listing.length);\n};\n\n// The context.prev property takes the value of context.next whenever we\n// evaluate the switch statement discriminant, which is generally good\n// enough for tracking the last location we jumped to, but sometimes\n// context.prev needs to be more precise, such as when we fall\n// successfully out of a try block and into a finally block without\n// jumping. This method exists to update context.prev to the freshest\n// available location. If we were implementing a full interpreter, we\n// would know the location of the current instruction with complete\n// precision at all times, but we don\'t have that luxury here, as it would\n// be costly and verbose to set context.prev before every statement.\nEp.updateContextPrevLoc = function (loc) {\n  if (loc) {\n    t.assertLiteral(loc);\n\n    if (loc.value === -1) {\n      // If an uninitialized location literal was passed in, set its value\n      // to the current this.listing.length.\n      loc.value = this.listing.length;\n    } else {\n      // Otherwise assert that the location matches the current offset.\n      _assert2.default.strictEqual(loc.value, this.listing.length);\n    }\n  } else {\n    loc = this.getUnmarkedCurrentLoc();\n  }\n\n  // Make sure context.prev is up to date in case we fell into this try\n  // statement without jumping to it. TODO Consider avoiding this\n  // assignment when we know control must have jumped here.\n  this.emitAssign(this.contextProperty("prev"), loc);\n};\n\nEp.explodeExpression = function (path, ignoreResult) {\n  var expr = path.node;\n  if (expr) {\n    t.assertExpression(expr);\n  } else {\n    return expr;\n  }\n\n  var self = this;\n  var result = void 0; // Used optionally by several cases below.\n  var after = void 0;\n\n  function finish(expr) {\n    t.assertExpression(expr);\n    if (ignoreResult) {\n      self.emit(expr);\n    } else {\n      return expr;\n    }\n  }\n\n  // If the expression does not contain a leap, then we either emit the\n  // expression as a standalone statement or return it whole.\n  if (!meta.containsLeap(expr)) {\n    return finish(expr);\n  }\n\n  // If any child contains a leap (such as a yield or labeled continue or\n  // break statement), then any sibling subexpressions will almost\n  // certainly have to be exploded in order to maintain the order of their\n  // side effects relative to the leaping child(ren).\n  var hasLeapingChildren = meta.containsLeap.onlyChildren(expr);\n\n  // In order to save the rest of explodeExpression from a combinatorial\n  // trainwreck of special cases, explodeViaTempVar is responsible for\n  // deciding when a subexpression needs to be "exploded," which is my\n  // very technical term for emitting the subexpression as an assignment\n  // to a temporary variable and the substituting the temporary variable\n  // for the original subexpression. Think of exploded view diagrams, not\n  // Michael Bay movies. The point of exploding subexpressions is to\n  // control the precise order in which the generated code realizes the\n  // side effects of those subexpressions.\n  function explodeViaTempVar(tempVar, childPath, ignoreChildResult) {\n    _assert2.default.ok(!ignoreChildResult || !tempVar, "Ignoring the result of a child expression but forcing it to " + "be assigned to a temporary variable?");\n\n    var result = self.explodeExpression(childPath, ignoreChildResult);\n\n    if (ignoreChildResult) {\n      // Side effects already emitted above.\n\n    } else if (tempVar || hasLeapingChildren && !t.isLiteral(result)) {\n      // If tempVar was provided, then the result will always be assigned\n      // to it, even if the result does not otherwise need to be assigned\n      // to a temporary variable.  When no tempVar is provided, we have\n      // the flexibility to decide whether a temporary variable is really\n      // necessary.  Unfortunately, in general, a temporary variable is\n      // required whenever any child contains a yield expression, since it\n      // is difficult to prove (at all, let alone efficiently) whether\n      // this result would evaluate to the same value before and after the\n      // yield (see #206).  One narrow case where we can prove it doesn\'t\n      // matter (and thus we do not need a temporary variable) is when the\n      // result in question is a Literal value.\n      result = self.emitAssign(tempVar || self.makeTempVar(), result);\n    }\n    return result;\n  }\n\n  // If ignoreResult is true, then we must take full responsibility for\n  // emitting the expression with all its side effects, and we should not\n  // return a result.\n\n  switch (expr.type) {\n    case "MemberExpression":\n      return finish(t.memberExpression(self.explodeExpression(path.get("object")), expr.computed ? explodeViaTempVar(null, path.get("property")) : expr.property, expr.computed));\n\n    case "CallExpression":\n      var calleePath = path.get("callee");\n      var argsPath = path.get("arguments");\n\n      var newCallee = void 0;\n      var newArgs = [];\n\n      var hasLeapingArgs = false;\n      argsPath.forEach(function (argPath) {\n        hasLeapingArgs = hasLeapingArgs || meta.containsLeap(argPath.node);\n      });\n\n      if (t.isMemberExpression(calleePath.node)) {\n        if (hasLeapingArgs) {\n          // If the arguments of the CallExpression contained any yield\n          // expressions, then we need to be sure to evaluate the callee\n          // before evaluating the arguments, but if the callee was a member\n          // expression, then we must be careful that the object of the\n          // member expression still gets bound to `this` for the call.\n\n          var newObject = explodeViaTempVar(\n          // Assign the exploded callee.object expression to a temporary\n          // variable so that we can use it twice without reevaluating it.\n          self.makeTempVar(), calleePath.get("object"));\n\n          var newProperty = calleePath.node.computed ? explodeViaTempVar(null, calleePath.get("property")) : calleePath.node.property;\n\n          newArgs.unshift(newObject);\n\n          newCallee = t.memberExpression(t.memberExpression(newObject, newProperty, calleePath.node.computed), t.identifier("call"), false);\n        } else {\n          newCallee = self.explodeExpression(calleePath);\n        }\n      } else {\n        newCallee = explodeViaTempVar(null, calleePath);\n\n        if (t.isMemberExpression(newCallee)) {\n          // If the callee was not previously a MemberExpression, then the\n          // CallExpression was "unqualified," meaning its `this` object\n          // should be the global object. If the exploded expression has\n          // become a MemberExpression (e.g. a context property, probably a\n          // temporary variable), then we need to force it to be unqualified\n          // by using the (0, object.property)(...) trick; otherwise, it\n          // will receive the object of the MemberExpression as its `this`\n          // object.\n          newCallee = t.sequenceExpression([t.numericLiteral(0), newCallee]);\n        }\n      }\n\n      argsPath.forEach(function (argPath) {\n        newArgs.push(explodeViaTempVar(null, argPath));\n      });\n\n      return finish(t.callExpression(newCallee, newArgs));\n\n    case "NewExpression":\n      return finish(t.newExpression(explodeViaTempVar(null, path.get("callee")), path.get("arguments").map(function (argPath) {\n        return explodeViaTempVar(null, argPath);\n      })));\n\n    case "ObjectExpression":\n      return finish(t.objectExpression(path.get("properties").map(function (propPath) {\n        if (propPath.isObjectProperty()) {\n          return t.objectProperty(propPath.node.key, explodeViaTempVar(null, propPath.get("value")), propPath.node.computed);\n        } else {\n          return propPath.node;\n        }\n      })));\n\n    case "ArrayExpression":\n      return finish(t.arrayExpression(path.get("elements").map(function (elemPath) {\n        return explodeViaTempVar(null, elemPath);\n      })));\n\n    case "SequenceExpression":\n      var lastIndex = expr.expressions.length - 1;\n\n      path.get("expressions").forEach(function (exprPath) {\n        if (exprPath.key === lastIndex) {\n          result = self.explodeExpression(exprPath, ignoreResult);\n        } else {\n          self.explodeExpression(exprPath, true);\n        }\n      });\n\n      return result;\n\n    case "LogicalExpression":\n      after = loc();\n\n      if (!ignoreResult) {\n        result = self.makeTempVar();\n      }\n\n      var left = explodeViaTempVar(result, path.get("left"));\n\n      if (expr.operator === "&&") {\n        self.jumpIfNot(left, after);\n      } else {\n        _assert2.default.strictEqual(expr.operator, "||");\n        self.jumpIf(left, after);\n      }\n\n      explodeViaTempVar(result, path.get("right"), ignoreResult);\n\n      self.mark(after);\n\n      return result;\n\n    case "ConditionalExpression":\n      var elseLoc = loc();\n      after = loc();\n      var test = self.explodeExpression(path.get("test"));\n\n      self.jumpIfNot(test, elseLoc);\n\n      if (!ignoreResult) {\n        result = self.makeTempVar();\n      }\n\n      explodeViaTempVar(result, path.get("consequent"), ignoreResult);\n      self.jump(after);\n\n      self.mark(elseLoc);\n      explodeViaTempVar(result, path.get("alternate"), ignoreResult);\n\n      self.mark(after);\n\n      return result;\n\n    case "UnaryExpression":\n      return finish(t.unaryExpression(expr.operator,\n      // Can\'t (and don\'t need to) break up the syntax of the argument.\n      // Think about delete a[b].\n      self.explodeExpression(path.get("argument")), !!expr.prefix));\n\n    case "BinaryExpression":\n      return finish(t.binaryExpression(expr.operator, explodeViaTempVar(null, path.get("left")), explodeViaTempVar(null, path.get("right"))));\n\n    case "AssignmentExpression":\n      return finish(t.assignmentExpression(expr.operator, self.explodeExpression(path.get("left")), self.explodeExpression(path.get("right"))));\n\n    case "UpdateExpression":\n      return finish(t.updateExpression(expr.operator, self.explodeExpression(path.get("argument")), expr.prefix));\n\n    case "YieldExpression":\n      after = loc();\n      var arg = expr.argument && self.explodeExpression(path.get("argument"));\n\n      if (arg && expr.delegate) {\n        var _result = self.makeTempVar();\n\n        self.emit(t.returnStatement(t.callExpression(self.contextProperty("delegateYield"), [arg, t.stringLiteral(_result.property.name), after])));\n\n        self.mark(after);\n\n        return _result;\n      }\n\n      self.emitAssign(self.contextProperty("next"), after);\n      self.emit(t.returnStatement(arg || null));\n      self.mark(after);\n\n      return self.contextProperty("sent");\n\n    default:\n      throw new Error("unknown Expression of type " + (0, _stringify2.default)(expr.type));\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/emit.js?')},"./node_modules/regenerator-transform/lib/hoist.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _keys = __webpack_require__("./node_modules/babel-runtime/core-js/object/keys.js");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _util = __webpack_require__("./node_modules/regenerator-transform/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// The hoist function takes a FunctionExpression or FunctionDeclaration\n// and replaces any Declaration nodes in its body with assignments, then\n// returns a VariableDeclaration containing just the names of the removed\n// declarations.\nexports.hoist = function (funPath) {\n  t.assertFunction(funPath.node);\n\n  var vars = {};\n\n  function varDeclToExpr(vdec, includeIdentifiers) {\n    t.assertVariableDeclaration(vdec);\n    // TODO assert.equal(vdec.kind, "var");\n    var exprs = [];\n\n    vdec.declarations.forEach(function (dec) {\n      // Note: We duplicate \'dec.id\' here to ensure that the variable declaration IDs don\'t\n      // have the same \'loc\' value, since that can make sourcemaps and retainLines behave poorly.\n      vars[dec.id.name] = t.identifier(dec.id.name);\n\n      if (dec.init) {\n        exprs.push(t.assignmentExpression("=", dec.id, dec.init));\n      } else if (includeIdentifiers) {\n        exprs.push(dec.id);\n      }\n    });\n\n    if (exprs.length === 0) return null;\n\n    if (exprs.length === 1) return exprs[0];\n\n    return t.sequenceExpression(exprs);\n  }\n\n  funPath.get("body").traverse({\n    VariableDeclaration: {\n      exit: function exit(path) {\n        var expr = varDeclToExpr(path.node, false);\n        if (expr === null) {\n          path.remove();\n        } else {\n          // We don\'t need to traverse this expression any further because\n          // there can\'t be any new declarations inside an expression.\n          util.replaceWithOrRemove(path, t.expressionStatement(expr));\n        }\n\n        // Since the original node has been either removed or replaced,\n        // avoid traversing it any further.\n        path.skip();\n      }\n    },\n\n    ForStatement: function ForStatement(path) {\n      var init = path.node.init;\n      if (t.isVariableDeclaration(init)) {\n        util.replaceWithOrRemove(path.get("init"), varDeclToExpr(init, false));\n      }\n    },\n\n    ForXStatement: function ForXStatement(path) {\n      var left = path.get("left");\n      if (left.isVariableDeclaration()) {\n        util.replaceWithOrRemove(left, varDeclToExpr(left.node, true));\n      }\n    },\n\n    FunctionDeclaration: function FunctionDeclaration(path) {\n      var node = path.node;\n      vars[node.id.name] = node.id;\n\n      var assignment = t.expressionStatement(t.assignmentExpression("=", node.id, t.functionExpression(node.id, node.params, node.body, node.generator, node.expression)));\n\n      if (path.parentPath.isBlockStatement()) {\n        // Insert the assignment form before the first statement in the\n        // enclosing block.\n        path.parentPath.unshiftContainer("body", assignment);\n\n        // Remove the function declaration now that we\'ve inserted the\n        // equivalent assignment form at the beginning of the block.\n        path.remove();\n      } else {\n        // If the parent node is not a block statement, then we can just\n        // replace the declaration with the equivalent assignment form\n        // without worrying about hoisting it.\n        util.replaceWithOrRemove(path, assignment);\n      }\n\n      // Don\'t hoist variables out of inner functions.\n      path.skip();\n    },\n\n    FunctionExpression: function FunctionExpression(path) {\n      // Don\'t descend into nested function expressions.\n      path.skip();\n    }\n  });\n\n  var paramNames = {};\n  funPath.get("params").forEach(function (paramPath) {\n    var param = paramPath.node;\n    if (t.isIdentifier(param)) {\n      paramNames[param.name] = param;\n    } else {\n      // Variables declared by destructuring parameter patterns will be\n      // harmlessly re-declared.\n    }\n  });\n\n  var declarations = [];\n\n  (0, _keys2.default)(vars).forEach(function (name) {\n    if (!hasOwn.call(paramNames, name)) {\n      declarations.push(t.variableDeclarator(vars[name], null));\n    }\n  });\n\n  if (declarations.length === 0) {\n    return null; // Be sure to handle this case!\n  }\n\n  return t.variableDeclaration("var", declarations);\n};\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/hoist.js?')},"./node_modules/regenerator-transform/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\n\nexports.default = function (context) {\n  var plugin = {\n    visitor: __webpack_require__("./node_modules/regenerator-transform/lib/visit.js").visitor\n  };\n\n  // Some presets manually call child presets, but fail to pass along the\n  // context object. Out of an abundance of caution, we verify that it\n  // exists first to avoid causing unnecessary breaking changes.\n  var version = context && context.version;\n\n  // The "name" property is not allowed in older versions of Babel (6.x)\n  // and will cause the plugin validator to throw an exception.\n  if (version && parseInt(version, 10) >= 7) {\n    plugin.name = "regenerator-transform";\n  }\n\n  return plugin;\n};\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/index.js?')},"./node_modules/regenerator-transform/lib/leap.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _assert = __webpack_require__("./node_modules/assert/assert.js");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _util = __webpack_require__("./node_modules/util/util.js");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Entry() {\n  _assert2.default.ok(this instanceof Entry);\n} /**\n   * Copyright (c) 2014, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n   * additional grant of patent rights can be found in the PATENTS file in\n   * the same directory.\n   */\n\nfunction FunctionEntry(returnLoc) {\n  Entry.call(this);\n  t.assertLiteral(returnLoc);\n  this.returnLoc = returnLoc;\n}\n\n(0, _util.inherits)(FunctionEntry, Entry);\nexports.FunctionEntry = FunctionEntry;\n\nfunction LoopEntry(breakLoc, continueLoc, label) {\n  Entry.call(this);\n\n  t.assertLiteral(breakLoc);\n  t.assertLiteral(continueLoc);\n\n  if (label) {\n    t.assertIdentifier(label);\n  } else {\n    label = null;\n  }\n\n  this.breakLoc = breakLoc;\n  this.continueLoc = continueLoc;\n  this.label = label;\n}\n\n(0, _util.inherits)(LoopEntry, Entry);\nexports.LoopEntry = LoopEntry;\n\nfunction SwitchEntry(breakLoc) {\n  Entry.call(this);\n  t.assertLiteral(breakLoc);\n  this.breakLoc = breakLoc;\n}\n\n(0, _util.inherits)(SwitchEntry, Entry);\nexports.SwitchEntry = SwitchEntry;\n\nfunction TryEntry(firstLoc, catchEntry, finallyEntry) {\n  Entry.call(this);\n\n  t.assertLiteral(firstLoc);\n\n  if (catchEntry) {\n    _assert2.default.ok(catchEntry instanceof CatchEntry);\n  } else {\n    catchEntry = null;\n  }\n\n  if (finallyEntry) {\n    _assert2.default.ok(finallyEntry instanceof FinallyEntry);\n  } else {\n    finallyEntry = null;\n  }\n\n  // Have to have one or the other (or both).\n  _assert2.default.ok(catchEntry || finallyEntry);\n\n  this.firstLoc = firstLoc;\n  this.catchEntry = catchEntry;\n  this.finallyEntry = finallyEntry;\n}\n\n(0, _util.inherits)(TryEntry, Entry);\nexports.TryEntry = TryEntry;\n\nfunction CatchEntry(firstLoc, paramId) {\n  Entry.call(this);\n\n  t.assertLiteral(firstLoc);\n  t.assertIdentifier(paramId);\n\n  this.firstLoc = firstLoc;\n  this.paramId = paramId;\n}\n\n(0, _util.inherits)(CatchEntry, Entry);\nexports.CatchEntry = CatchEntry;\n\nfunction FinallyEntry(firstLoc, afterLoc) {\n  Entry.call(this);\n  t.assertLiteral(firstLoc);\n  t.assertLiteral(afterLoc);\n  this.firstLoc = firstLoc;\n  this.afterLoc = afterLoc;\n}\n\n(0, _util.inherits)(FinallyEntry, Entry);\nexports.FinallyEntry = FinallyEntry;\n\nfunction LabeledEntry(breakLoc, label) {\n  Entry.call(this);\n\n  t.assertLiteral(breakLoc);\n  t.assertIdentifier(label);\n\n  this.breakLoc = breakLoc;\n  this.label = label;\n}\n\n(0, _util.inherits)(LabeledEntry, Entry);\nexports.LabeledEntry = LabeledEntry;\n\nfunction LeapManager(emitter) {\n  _assert2.default.ok(this instanceof LeapManager);\n\n  var Emitter = __webpack_require__("./node_modules/regenerator-transform/lib/emit.js").Emitter;\n  _assert2.default.ok(emitter instanceof Emitter);\n\n  this.emitter = emitter;\n  this.entryStack = [new FunctionEntry(emitter.finalLoc)];\n}\n\nvar LMp = LeapManager.prototype;\nexports.LeapManager = LeapManager;\n\nLMp.withEntry = function (entry, callback) {\n  _assert2.default.ok(entry instanceof Entry);\n  this.entryStack.push(entry);\n  try {\n    callback.call(this.emitter);\n  } finally {\n    var popped = this.entryStack.pop();\n    _assert2.default.strictEqual(popped, entry);\n  }\n};\n\nLMp._findLeapLocation = function (property, label) {\n  for (var i = this.entryStack.length - 1; i >= 0; --i) {\n    var entry = this.entryStack[i];\n    var loc = entry[property];\n    if (loc) {\n      if (label) {\n        if (entry.label && entry.label.name === label.name) {\n          return loc;\n        }\n      } else if (entry instanceof LabeledEntry) {\n        // Ignore LabeledEntry entries unless we are actually breaking to\n        // a label.\n      } else {\n        return loc;\n      }\n    }\n  }\n\n  return null;\n};\n\nLMp.getBreakLoc = function (label) {\n  return this._findLeapLocation("breakLoc", label);\n};\n\nLMp.getContinueLoc = function (label) {\n  return this._findLeapLocation("continueLoc", label);\n};\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/leap.js?')},"./node_modules/regenerator-transform/lib/meta.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _assert = __webpack_require__("./node_modules/assert/assert.js");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar m = __webpack_require__("./node_modules/private/private.js").makeAccessor(); /**\n                                            * Copyright (c) 2014, Facebook, Inc.\n                                            * All rights reserved.\n                                            *\n                                            * This source code is licensed under the BSD-style license found in the\n                                            * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n                                            * additional grant of patent rights can be found in the PATENTS file in\n                                            * the same directory.\n                                            */\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction makePredicate(propertyName, knownTypes) {\n  function onlyChildren(node) {\n    t.assertNode(node);\n\n    // Assume no side effects until we find out otherwise.\n    var result = false;\n\n    function check(child) {\n      if (result) {\n        // Do nothing.\n      } else if (Array.isArray(child)) {\n        child.some(check);\n      } else if (t.isNode(child)) {\n        _assert2.default.strictEqual(result, false);\n        result = predicate(child);\n      }\n      return result;\n    }\n\n    var keys = t.VISITOR_KEYS[node.type];\n    if (keys) {\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var child = node[key];\n        check(child);\n      }\n    }\n\n    return result;\n  }\n\n  function predicate(node) {\n    t.assertNode(node);\n\n    var meta = m(node);\n    if (hasOwn.call(meta, propertyName)) return meta[propertyName];\n\n    // Certain types are "opaque," which means they have no side\n    // effects or leaps and we don\'t care about their subexpressions.\n    if (hasOwn.call(opaqueTypes, node.type)) return meta[propertyName] = false;\n\n    if (hasOwn.call(knownTypes, node.type)) return meta[propertyName] = true;\n\n    return meta[propertyName] = onlyChildren(node);\n  }\n\n  predicate.onlyChildren = onlyChildren;\n\n  return predicate;\n}\n\nvar opaqueTypes = {\n  FunctionExpression: true,\n  ArrowFunctionExpression: true\n};\n\n// These types potentially have side effects regardless of what side\n// effects their subexpressions have.\nvar sideEffectTypes = {\n  CallExpression: true, // Anything could happen!\n  ForInStatement: true, // Modifies the key variable.\n  UnaryExpression: true, // Think delete.\n  BinaryExpression: true, // Might invoke .toString() or .valueOf().\n  AssignmentExpression: true, // Side-effecting by definition.\n  UpdateExpression: true, // Updates are essentially assignments.\n  NewExpression: true // Similar to CallExpression.\n};\n\n// These types are the direct cause of all leaps in control flow.\nvar leapTypes = {\n  YieldExpression: true,\n  BreakStatement: true,\n  ContinueStatement: true,\n  ReturnStatement: true,\n  ThrowStatement: true\n};\n\n// All leap types are also side effect types.\nfor (var type in leapTypes) {\n  if (hasOwn.call(leapTypes, type)) {\n    sideEffectTypes[type] = leapTypes[type];\n  }\n}\n\nexports.hasSideEffects = makePredicate("hasSideEffects", sideEffectTypes);\nexports.containsLeap = makePredicate("containsLeap", leapTypes);\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/meta.js?')},"./node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.default = replaceShorthandObjectMethod;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _util = __webpack_require__("./node_modules/regenerator-transform/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// this function converts a shorthand object generator method into a normal\n// (non-shorthand) object property which is a generator function expression. for\n// example, this:\n//\n//  var foo = {\n//    *bar(baz) { return 5; }\n//  }\n//\n// should be replaced with:\n//\n//  var foo = {\n//    bar: function*(baz) { return 5; }\n//  }\n//\n// to do this, it clones the parameter array and the body of the object generator\n// method into a new FunctionExpression.\n//\n// this method can be passed any Function AST node path, and it will return\n// either:\n//   a) the path that was passed in (iff the path did not need to be replaced) or\n//   b) the path of the new FunctionExpression that was created as a replacement\n//     (iff the path did need to be replaced)\n//\n// In either case, though, the caller can count on the fact that the return value\n// is a Function AST node path.\n//\n// If this function is called with an AST node path that is not a Function (or with an\n// argument that isn\'t an AST node path), it will throw an error.\nfunction replaceShorthandObjectMethod(path) {\n  if (!path.node || !t.isFunction(path.node)) {\n    throw new Error("replaceShorthandObjectMethod can only be called on Function AST node paths.");\n  }\n\n  // this function only replaces shorthand object methods (called ObjectMethod\n  // in Babel-speak).\n  if (!t.isObjectMethod(path.node)) {\n    return path;\n  }\n\n  // this function only replaces generators.\n  if (!path.node.generator) {\n    return path;\n  }\n\n  var parameters = path.node.params.map(function (param) {\n    return t.cloneDeep(param);\n  });\n\n  var functionExpression = t.functionExpression(null, // id\n  parameters, // params\n  t.cloneDeep(path.node.body), // body\n  path.node.generator, path.node.async);\n\n  util.replaceWithOrRemove(path, t.objectProperty(t.cloneDeep(path.node.key), // key\n  functionExpression, //value\n  path.node.computed, // computed\n  false // shorthand\n  ));\n\n  // path now refers to the ObjectProperty AST node path, but we want to return a\n  // Function AST node path for the function expression we created. we know that\n  // the FunctionExpression we just created is the value of the ObjectProperty,\n  // so return the "value" path off of this path.\n  return path.get("value");\n}\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js?')},"./node_modules/regenerator-transform/lib/util.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.__esModule = true;\nexports.runtimeProperty = runtimeProperty;\nexports.isReference = isReference;\nexports.replaceWithOrRemove = replaceWithOrRemove;\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction runtimeProperty(name) {\n  return t.memberExpression(t.identifier("regeneratorRuntime"), t.identifier(name), false);\n} /**\n   * Copyright (c) 2014, Facebook, Inc.\n   * All rights reserved.\n   *\n   * This source code is licensed under the BSD-style license found in the\n   * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n   * additional grant of patent rights can be found in the PATENTS file in\n   * the same directory.\n   */\n\nfunction isReference(path) {\n  return path.isReferenced() || path.parentPath.isAssignmentExpression({ left: path.node });\n}\n\nfunction replaceWithOrRemove(path, replacement) {\n  if (replacement) {\n    path.replaceWith(replacement);\n  } else {\n    path.remove();\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/util.js?')},"./node_modules/regenerator-transform/lib/visit.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n\n\nvar _assert = __webpack_require__("./node_modules/assert/assert.js");\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nvar _babelTypes = __webpack_require__("./node_modules/babel-types/lib/index.js");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _hoist = __webpack_require__("./node_modules/regenerator-transform/lib/hoist.js");\n\nvar _emit = __webpack_require__("./node_modules/regenerator-transform/lib/emit.js");\n\nvar _replaceShorthandObjectMethod = __webpack_require__("./node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js");\n\nvar _replaceShorthandObjectMethod2 = _interopRequireDefault(_replaceShorthandObjectMethod);\n\nvar _util = __webpack_require__("./node_modules/regenerator-transform/lib/util.js");\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.visitor = {\n  Function: {\n    exit: function exit(path, state) {\n      var node = path.node;\n\n      if (node.generator) {\n        if (node.async) {\n          // Async generator\n          if (state.opts.asyncGenerators === false) return;\n        } else {\n          // Plain generator\n          if (state.opts.generators === false) return;\n        }\n      } else if (node.async) {\n        // Async function\n        if (state.opts.async === false) return;\n      } else {\n        // Not a generator or async function.\n        return;\n      }\n\n      // if this is an ObjectMethod, we need to convert it to an ObjectProperty\n      path = (0, _replaceShorthandObjectMethod2.default)(path);\n      node = path.node;\n\n      var contextId = path.scope.generateUidIdentifier("context");\n      var argsId = path.scope.generateUidIdentifier("args");\n\n      path.ensureBlock();\n      var bodyBlockPath = path.get("body");\n\n      if (node.async) {\n        bodyBlockPath.traverse(awaitVisitor);\n      }\n\n      bodyBlockPath.traverse(functionSentVisitor, {\n        context: contextId\n      });\n\n      var outerBody = [];\n      var innerBody = [];\n\n      bodyBlockPath.get("body").forEach(function (childPath) {\n        var node = childPath.node;\n        if (t.isExpressionStatement(node) && t.isStringLiteral(node.expression)) {\n          // Babylon represents directives like "use strict" as elements\n          // of a bodyBlockPath.node.directives array, but they could just\n          // as easily be represented (by other parsers) as traditional\n          // string-literal-valued expression statements, so we need to\n          // handle that here. (#248)\n          outerBody.push(node);\n        } else if (node && node._blockHoist != null) {\n          outerBody.push(node);\n        } else {\n          innerBody.push(node);\n        }\n      });\n\n      if (outerBody.length > 0) {\n        // Only replace the inner body if we actually hoisted any statements\n        // to the outer body.\n        bodyBlockPath.node.body = innerBody;\n      }\n\n      var outerFnExpr = getOuterFnExpr(path);\n      // Note that getOuterFnExpr has the side-effect of ensuring that the\n      // function has a name (so node.id will always be an Identifier), even\n      // if a temporary name has to be synthesized.\n      t.assertIdentifier(node.id);\n      var innerFnId = t.identifier(node.id.name + "$");\n\n      // Turn all declarations into vars, and replace the original\n      // declarations with equivalent assignment expressions.\n      var vars = (0, _hoist.hoist)(path);\n\n      var didRenameArguments = renameArguments(path, argsId);\n      if (didRenameArguments) {\n        vars = vars || t.variableDeclaration("var", []);\n        var argumentIdentifier = t.identifier("arguments");\n        // we need to do this as otherwise arguments in arrow functions gets hoisted\n        argumentIdentifier._shadowedFunctionLiteral = path;\n        vars.declarations.push(t.variableDeclarator(argsId, argumentIdentifier));\n      }\n\n      var emitter = new _emit.Emitter(contextId);\n      emitter.explode(path.get("body"));\n\n      if (vars && vars.declarations.length > 0) {\n        outerBody.push(vars);\n      }\n\n      var wrapArgs = [emitter.getContextFunction(innerFnId),\n      // Async functions that are not generators don\'t care about the\n      // outer function because they don\'t need it to be marked and don\'t\n      // inherit from its .prototype.\n      node.generator ? outerFnExpr : t.nullLiteral(), t.thisExpression()];\n\n      var tryLocsList = emitter.getTryLocsList();\n      if (tryLocsList) {\n        wrapArgs.push(tryLocsList);\n      }\n\n      var wrapCall = t.callExpression(util.runtimeProperty(node.async ? "async" : "wrap"), wrapArgs);\n\n      outerBody.push(t.returnStatement(wrapCall));\n      node.body = t.blockStatement(outerBody);\n\n      var oldDirectives = bodyBlockPath.node.directives;\n      if (oldDirectives) {\n        // Babylon represents directives like "use strict" as elements of\n        // a bodyBlockPath.node.directives array. (#248)\n        node.body.directives = oldDirectives;\n      }\n\n      var wasGeneratorFunction = node.generator;\n      if (wasGeneratorFunction) {\n        node.generator = false;\n      }\n\n      if (node.async) {\n        node.async = false;\n      }\n\n      if (wasGeneratorFunction && t.isExpression(node)) {\n        util.replaceWithOrRemove(path, t.callExpression(util.runtimeProperty("mark"), [node]));\n        path.addComment("leading", "#__PURE__");\n      }\n\n      // Generators are processed in \'exit\' handlers so that regenerator only has to run on\n      // an ES5 AST, but that means traversal will not pick up newly inserted references\n      // to things like \'regeneratorRuntime\'. To avoid this, we explicitly requeue.\n      path.requeue();\n    }\n  }\n};\n\n// Given a NodePath for a Function, return an Expression node that can be\n// used to refer reliably to the function object from inside the function.\n// This expression is essentially a replacement for arguments.callee, with\n// the key advantage that it works in strict mode.\nfunction getOuterFnExpr(funPath) {\n  var node = funPath.node;\n  t.assertFunction(node);\n\n  if (!node.id) {\n    // Default-exported function declarations, and function expressions may not\n    // have a name to reference, so we explicitly add one.\n    node.id = funPath.scope.parent.generateUidIdentifier("callee");\n  }\n\n  if (node.generator && // Non-generator functions don\'t need to be marked.\n  t.isFunctionDeclaration(node)) {\n    // Return the identifier returned by runtime.mark(<node.id>).\n    return getMarkedFunctionId(funPath);\n  }\n\n  return node.id;\n}\n\nvar getMarkInfo = __webpack_require__("./node_modules/private/private.js").makeAccessor();\n\nfunction getMarkedFunctionId(funPath) {\n  var node = funPath.node;\n  t.assertIdentifier(node.id);\n\n  var blockPath = funPath.findParent(function (path) {\n    return path.isProgram() || path.isBlockStatement();\n  });\n\n  if (!blockPath) {\n    return node.id;\n  }\n\n  var block = blockPath.node;\n  _assert2.default.ok(Array.isArray(block.body));\n\n  var info = getMarkInfo(block);\n  if (!info.decl) {\n    info.decl = t.variableDeclaration("var", []);\n    blockPath.unshiftContainer("body", info.decl);\n    info.declPath = blockPath.get("body.0");\n  }\n\n  _assert2.default.strictEqual(info.declPath.node, info.decl);\n\n  // Get a new unique identifier for our marked variable.\n  var markedId = blockPath.scope.generateUidIdentifier("marked");\n  var markCallExp = t.callExpression(util.runtimeProperty("mark"), [node.id]);\n\n  var index = info.decl.declarations.push(t.variableDeclarator(markedId, markCallExp)) - 1;\n\n  var markCallExpPath = info.declPath.get("declarations." + index + ".init");\n\n  _assert2.default.strictEqual(markCallExpPath.node, markCallExp);\n\n  markCallExpPath.addComment("leading", "#__PURE__");\n\n  return markedId;\n}\n\nfunction renameArguments(funcPath, argsId) {\n  var state = {\n    didRenameArguments: false,\n    argsId: argsId\n  };\n\n  funcPath.traverse(argumentsVisitor, state);\n\n  // If the traversal replaced any arguments references, then we need to\n  // alias the outer function\'s arguments binding (be it the implicit\n  // arguments object or some other parameter or variable) to the variable\n  // named by argsId.\n  return state.didRenameArguments;\n}\n\nvar argumentsVisitor = {\n  "FunctionExpression|FunctionDeclaration": function FunctionExpressionFunctionDeclaration(path) {\n    path.skip();\n  },\n\n  Identifier: function Identifier(path, state) {\n    if (path.node.name === "arguments" && util.isReference(path)) {\n      util.replaceWithOrRemove(path, state.argsId);\n      state.didRenameArguments = true;\n    }\n  }\n};\n\nvar functionSentVisitor = {\n  MetaProperty: function MetaProperty(path) {\n    var node = path.node;\n\n\n    if (node.meta.name === "function" && node.property.name === "sent") {\n      util.replaceWithOrRemove(path, t.memberExpression(this.context, t.identifier("_sent")));\n    }\n  }\n};\n\nvar awaitVisitor = {\n  Function: function Function(path) {\n    path.skip(); // Don\'t descend into nested function scopes.\n  },\n\n  AwaitExpression: function AwaitExpression(path) {\n    // Convert await expressions to yield expressions.\n    var argument = path.node.argument;\n\n    // Transforming `await x` to `yield regeneratorRuntime.awrap(x)`\n    // causes the argument to be wrapped in such a way that the runtime\n    // can distinguish between awaited and merely yielded values.\n    util.replaceWithOrRemove(path, t.yieldExpression(t.callExpression(util.runtimeProperty("awrap"), [argument]), false));\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/regenerator-transform/lib/visit.js?')},"./node_modules/regexpu-core/data/character-class-escape-sets.js":function(module,exports,__webpack_require__){eval("// Generated by `/scripts/character-class-escape-sets.js`. Do not edit.\nvar regenerate = __webpack_require__(\"./node_modules/regenerate/regenerate.js\");\n\nexports.REGULAR = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0xFFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0xFFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0xFFFF)\n};\n\nexports.UNICODE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n\nexports.UNICODE_IGNORE_CASE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F, 0x17F, 0x212A)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x4B, 0x53, 0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n\n\n//# sourceURL=webpack:///./node_modules/regexpu-core/data/character-class-escape-sets.js?")},"./node_modules/regexpu-core/data/iu-mappings.json":function(module){eval('module.exports = JSON.parse("{\\"75\\":8490,\\"83\\":383,\\"107\\":8490,\\"115\\":383,\\"181\\":924,\\"197\\":8491,\\"383\\":83,\\"452\\":453,\\"453\\":452,\\"455\\":456,\\"456\\":455,\\"458\\":459,\\"459\\":458,\\"497\\":498,\\"498\\":497,\\"837\\":8126,\\"914\\":976,\\"917\\":1013,\\"920\\":1012,\\"921\\":8126,\\"922\\":1008,\\"924\\":181,\\"928\\":982,\\"929\\":1009,\\"931\\":962,\\"934\\":981,\\"937\\":8486,\\"962\\":931,\\"976\\":914,\\"977\\":1012,\\"981\\":934,\\"982\\":928,\\"1008\\":922,\\"1009\\":929,\\"1012\\":[920,977],\\"1013\\":917,\\"7776\\":7835,\\"7835\\":7776,\\"8126\\":[837,921],\\"8486\\":937,\\"8490\\":75,\\"8491\\":197,\\"66560\\":66600,\\"66561\\":66601,\\"66562\\":66602,\\"66563\\":66603,\\"66564\\":66604,\\"66565\\":66605,\\"66566\\":66606,\\"66567\\":66607,\\"66568\\":66608,\\"66569\\":66609,\\"66570\\":66610,\\"66571\\":66611,\\"66572\\":66612,\\"66573\\":66613,\\"66574\\":66614,\\"66575\\":66615,\\"66576\\":66616,\\"66577\\":66617,\\"66578\\":66618,\\"66579\\":66619,\\"66580\\":66620,\\"66581\\":66621,\\"66582\\":66622,\\"66583\\":66623,\\"66584\\":66624,\\"66585\\":66625,\\"66586\\":66626,\\"66587\\":66627,\\"66588\\":66628,\\"66589\\":66629,\\"66590\\":66630,\\"66591\\":66631,\\"66592\\":66632,\\"66593\\":66633,\\"66594\\":66634,\\"66595\\":66635,\\"66596\\":66636,\\"66597\\":66637,\\"66598\\":66638,\\"66599\\":66639,\\"66600\\":66560,\\"66601\\":66561,\\"66602\\":66562,\\"66603\\":66563,\\"66604\\":66564,\\"66605\\":66565,\\"66606\\":66566,\\"66607\\":66567,\\"66608\\":66568,\\"66609\\":66569,\\"66610\\":66570,\\"66611\\":66571,\\"66612\\":66572,\\"66613\\":66573,\\"66614\\":66574,\\"66615\\":66575,\\"66616\\":66576,\\"66617\\":66577,\\"66618\\":66578,\\"66619\\":66579,\\"66620\\":66580,\\"66621\\":66581,\\"66622\\":66582,\\"66623\\":66583,\\"66624\\":66584,\\"66625\\":66585,\\"66626\\":66586,\\"66627\\":66587,\\"66628\\":66588,\\"66629\\":66589,\\"66630\\":66590,\\"66631\\":66591,\\"66632\\":66592,\\"66633\\":66593,\\"66634\\":66594,\\"66635\\":66595,\\"66636\\":66596,\\"66637\\":66597,\\"66638\\":66598,\\"66639\\":66599,\\"68736\\":68800,\\"68737\\":68801,\\"68738\\":68802,\\"68739\\":68803,\\"68740\\":68804,\\"68741\\":68805,\\"68742\\":68806,\\"68743\\":68807,\\"68744\\":68808,\\"68745\\":68809,\\"68746\\":68810,\\"68747\\":68811,\\"68748\\":68812,\\"68749\\":68813,\\"68750\\":68814,\\"68751\\":68815,\\"68752\\":68816,\\"68753\\":68817,\\"68754\\":68818,\\"68755\\":68819,\\"68756\\":68820,\\"68757\\":68821,\\"68758\\":68822,\\"68759\\":68823,\\"68760\\":68824,\\"68761\\":68825,\\"68762\\":68826,\\"68763\\":68827,\\"68764\\":68828,\\"68765\\":68829,\\"68766\\":68830,\\"68767\\":68831,\\"68768\\":68832,\\"68769\\":68833,\\"68770\\":68834,\\"68771\\":68835,\\"68772\\":68836,\\"68773\\":68837,\\"68774\\":68838,\\"68775\\":68839,\\"68776\\":68840,\\"68777\\":68841,\\"68778\\":68842,\\"68779\\":68843,\\"68780\\":68844,\\"68781\\":68845,\\"68782\\":68846,\\"68783\\":68847,\\"68784\\":68848,\\"68785\\":68849,\\"68786\\":68850,\\"68800\\":68736,\\"68801\\":68737,\\"68802\\":68738,\\"68803\\":68739,\\"68804\\":68740,\\"68805\\":68741,\\"68806\\":68742,\\"68807\\":68743,\\"68808\\":68744,\\"68809\\":68745,\\"68810\\":68746,\\"68811\\":68747,\\"68812\\":68748,\\"68813\\":68749,\\"68814\\":68750,\\"68815\\":68751,\\"68816\\":68752,\\"68817\\":68753,\\"68818\\":68754,\\"68819\\":68755,\\"68820\\":68756,\\"68821\\":68757,\\"68822\\":68758,\\"68823\\":68759,\\"68824\\":68760,\\"68825\\":68761,\\"68826\\":68762,\\"68827\\":68763,\\"68828\\":68764,\\"68829\\":68765,\\"68830\\":68766,\\"68831\\":68767,\\"68832\\":68768,\\"68833\\":68769,\\"68834\\":68770,\\"68835\\":68771,\\"68836\\":68772,\\"68837\\":68773,\\"68838\\":68774,\\"68839\\":68775,\\"68840\\":68776,\\"68841\\":68777,\\"68842\\":68778,\\"68843\\":68779,\\"68844\\":68780,\\"68845\\":68781,\\"68846\\":68782,\\"68847\\":68783,\\"68848\\":68784,\\"68849\\":68785,\\"68850\\":68786,\\"71840\\":71872,\\"71841\\":71873,\\"71842\\":71874,\\"71843\\":71875,\\"71844\\":71876,\\"71845\\":71877,\\"71846\\":71878,\\"71847\\":71879,\\"71848\\":71880,\\"71849\\":71881,\\"71850\\":71882,\\"71851\\":71883,\\"71852\\":71884,\\"71853\\":71885,\\"71854\\":71886,\\"71855\\":71887,\\"71856\\":71888,\\"71857\\":71889,\\"71858\\":71890,\\"71859\\":71891,\\"71860\\":71892,\\"71861\\":71893,\\"71862\\":71894,\\"71863\\":71895,\\"71864\\":71896,\\"71865\\":71897,\\"71866\\":71898,\\"71867\\":71899,\\"71868\\":71900,\\"71869\\":71901,\\"71870\\":71902,\\"71871\\":71903,\\"71872\\":71840,\\"71873\\":71841,\\"71874\\":71842,\\"71875\\":71843,\\"71876\\":71844,\\"71877\\":71845,\\"71878\\":71846,\\"71879\\":71847,\\"71880\\":71848,\\"71881\\":71849,\\"71882\\":71850,\\"71883\\":71851,\\"71884\\":71852,\\"71885\\":71853,\\"71886\\":71854,\\"71887\\":71855,\\"71888\\":71856,\\"71889\\":71857,\\"71890\\":71858,\\"71891\\":71859,\\"71892\\":71860,\\"71893\\":71861,\\"71894\\":71862,\\"71895\\":71863,\\"71896\\":71864,\\"71897\\":71865,\\"71898\\":71866,\\"71899\\":71867,\\"71900\\":71868,\\"71901\\":71869,\\"71902\\":71870,\\"71903\\":71871}");\n\n//# sourceURL=webpack:///./node_modules/regexpu-core/data/iu-mappings.json?')},"./node_modules/regexpu-core/node_modules/regjsparser/parser.js":function(module,exports,__webpack_require__){eval("// regjsparser\n//\n// ==================================================================\n//\n// See ECMA-262 Standard: 15.10.1\n//\n// NOTE: The ECMA-262 standard uses the term \"Assertion\" for /^/. Here the\n//   term \"Anchor\" is used.\n//\n// Pattern ::\n//      Disjunction\n//\n// Disjunction ::\n//      Alternative\n//      Alternative | Disjunction\n//\n// Alternative ::\n//      [empty]\n//      Alternative Term\n//\n// Term ::\n//      Anchor\n//      Atom\n//      Atom Quantifier\n//\n// Anchor ::\n//      ^\n//      $\n//      \\ b\n//      \\ B\n//      ( ? = Disjunction )\n//      ( ? ! Disjunction )\n//\n// Quantifier ::\n//      QuantifierPrefix\n//      QuantifierPrefix ?\n//\n// QuantifierPrefix ::\n//      *\n//      +\n//      ?\n//      { DecimalDigits }\n//      { DecimalDigits , }\n//      { DecimalDigits , DecimalDigits }\n//\n// Atom ::\n//      PatternCharacter\n//      .\n//      \\ AtomEscape\n//      CharacterClass\n//      ( Disjunction )\n//      ( ? : Disjunction )\n//\n// PatternCharacter ::\n//      SourceCharacter but not any of: ^ $ \\ . * + ? ( ) [ ] { } |\n//\n// AtomEscape ::\n//      DecimalEscape\n//      CharacterEscape\n//      CharacterClassEscape\n//\n// CharacterEscape[U] ::\n//      ControlEscape\n//      c ControlLetter\n//      HexEscapeSequence\n//      RegExpUnicodeEscapeSequence[?U] (ES6)\n//      IdentityEscape[?U]\n//\n// ControlEscape ::\n//      one of f n r t v\n// ControlLetter ::\n//      one of\n//          a b c d e f g h i j k l m n o p q r s t u v w x y z\n//          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n//\n// IdentityEscape ::\n//      SourceCharacter but not IdentifierPart\n//      <ZWJ>\n//      <ZWNJ>\n//\n// DecimalEscape ::\n//      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n//\n// CharacterClassEscape ::\n//      one of d D s S w W\n//\n// CharacterClass ::\n//      [ [lookahead ∉ {^}] ClassRanges ]\n//      [ ^ ClassRanges ]\n//\n// ClassRanges ::\n//      [empty]\n//      NonemptyClassRanges\n//\n// NonemptyClassRanges ::\n//      ClassAtom\n//      ClassAtom NonemptyClassRangesNoDash\n//      ClassAtom - ClassAtom ClassRanges\n//\n// NonemptyClassRangesNoDash ::\n//      ClassAtom\n//      ClassAtomNoDash NonemptyClassRangesNoDash\n//      ClassAtomNoDash - ClassAtom ClassRanges\n//\n// ClassAtom ::\n//      -\n//      ClassAtomNoDash\n//\n// ClassAtomNoDash ::\n//      SourceCharacter but not one of \\ or ] or -\n//      \\ ClassEscape\n//\n// ClassEscape ::\n//      DecimalEscape\n//      b\n//      CharacterEscape\n//      CharacterClassEscape\n\n(function() {\n\n  function parse(str, flags) {\n    function addRaw(node) {\n      node.raw = str.substring(node.range[0], node.range[1]);\n      return node;\n    }\n\n    function updateRawStart(node, start) {\n      node.range[0] = start;\n      return addRaw(node);\n    }\n\n    function createAnchor(kind, rawLength) {\n      return addRaw({\n        type: 'anchor',\n        kind: kind,\n        range: [\n          pos - rawLength,\n          pos\n        ]\n      });\n    }\n\n    function createValue(kind, codePoint, from, to) {\n      return addRaw({\n        type: 'value',\n        kind: kind,\n        codePoint: codePoint,\n        range: [from, to]\n      });\n    }\n\n    function createEscaped(kind, codePoint, value, fromOffset) {\n      fromOffset = fromOffset || 0;\n      return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);\n    }\n\n    function createCharacter(matches) {\n      var _char = matches[0];\n      var first = _char.charCodeAt(0);\n      if (hasUnicodeFlag) {\n        var second;\n        if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {\n          second = lookahead().charCodeAt(0);\n          if (second >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            pos++;\n            return createValue(\n                'symbol',\n                (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000,\n                pos - 2, pos);\n          }\n        }\n      }\n      return createValue('symbol', first, pos - 1, pos);\n    }\n\n    function createDisjunction(alternatives, from, to) {\n      return addRaw({\n        type: 'disjunction',\n        body: alternatives,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createDot() {\n      return addRaw({\n        type: 'dot',\n        range: [\n          pos - 1,\n          pos\n        ]\n      });\n    }\n\n    function createCharacterClassEscape(value) {\n      return addRaw({\n        type: 'characterClassEscape',\n        value: value,\n        range: [\n          pos - 2,\n          pos\n        ]\n      });\n    }\n\n    function createReference(matchIndex) {\n      return addRaw({\n        type: 'reference',\n        matchIndex: parseInt(matchIndex, 10),\n        range: [\n          pos - 1 - matchIndex.length,\n          pos\n        ]\n      });\n    }\n\n    function createGroup(behavior, disjunction, from, to) {\n      return addRaw({\n        type: 'group',\n        behavior: behavior,\n        body: disjunction,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createQuantifier(min, max, from, to) {\n      if (to == null) {\n        from = pos - 1;\n        to = pos;\n      }\n\n      return addRaw({\n        type: 'quantifier',\n        min: min,\n        max: max,\n        greedy: true,\n        body: null, // set later on\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createAlternative(terms, from, to) {\n      return addRaw({\n        type: 'alternative',\n        body: terms,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createCharacterClass(classRanges, negative, from, to) {\n      return addRaw({\n        type: 'characterClass',\n        body: classRanges,\n        negative: negative,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createClassRange(min, max, from, to) {\n      // See 15.10.2.15:\n      if (min.codePoint > max.codePoint) {\n        bail('invalid range in character class', min.raw + '-' + max.raw, from, to);\n      }\n\n      return addRaw({\n        type: 'characterClassRange',\n        min: min,\n        max: max,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function flattenBody(body) {\n      if (body.type === 'alternative') {\n        return body.body;\n      } else {\n        return [body];\n      }\n    }\n\n    function isEmpty(obj) {\n      return obj.type === 'empty';\n    }\n\n    function incr(amount) {\n      amount = (amount || 1);\n      var res = str.substring(pos, pos + amount);\n      pos += (amount || 1);\n      return res;\n    }\n\n    function skip(value) {\n      if (!match(value)) {\n        bail('character', value);\n      }\n    }\n\n    function match(value) {\n      if (str.indexOf(value, pos) === pos) {\n        return incr(value.length);\n      }\n    }\n\n    function lookahead() {\n      return str[pos];\n    }\n\n    function current(value) {\n      return str.indexOf(value, pos) === pos;\n    }\n\n    function next(value) {\n      return str[pos + 1] === value;\n    }\n\n    function matchReg(regExp) {\n      var subStr = str.substring(pos);\n      var res = subStr.match(regExp);\n      if (res) {\n        res.range = [];\n        res.range[0] = pos;\n        incr(res[0].length);\n        res.range[1] = pos;\n      }\n      return res;\n    }\n\n    function parseDisjunction() {\n      // Disjunction ::\n      //      Alternative\n      //      Alternative | Disjunction\n      var res = [], from = pos;\n      res.push(parseAlternative());\n\n      while (match('|')) {\n        res.push(parseAlternative());\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createDisjunction(res, from, pos);\n    }\n\n    function parseAlternative() {\n      var res = [], from = pos;\n      var term;\n\n      // Alternative ::\n      //      [empty]\n      //      Alternative Term\n      while (term = parseTerm()) {\n        res.push(term);\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createAlternative(res, from, pos);\n    }\n\n    function parseTerm() {\n      // Term ::\n      //      Anchor\n      //      Atom\n      //      Atom Quantifier\n\n      if (pos >= str.length || current('|') || current(')')) {\n        return null; /* Means: The term is empty */\n      }\n\n      var anchor = parseAnchor();\n\n      if (anchor) {\n        return anchor;\n      }\n\n      var atom = parseAtom();\n      if (!atom) {\n        bail('Expected atom');\n      }\n      var quantifier = parseQuantifier() || false;\n      if (quantifier) {\n        quantifier.body = flattenBody(atom);\n        // The quantifier contains the atom. Therefore, the beginning of the\n        // quantifier range is given by the beginning of the atom.\n        updateRawStart(quantifier, atom.range[0]);\n        return quantifier;\n      }\n      return atom;\n    }\n\n    function parseGroup(matchA, typeA, matchB, typeB) {\n      var type = null, from = pos;\n\n      if (match(matchA)) {\n        type = typeA;\n      } else if (match(matchB)) {\n        type = typeB;\n      } else {\n        return false;\n      }\n\n      var body = parseDisjunction();\n      if (!body) {\n        bail('Expected disjunction');\n      }\n      skip(')');\n      var group = createGroup(type, flattenBody(body), from, pos);\n\n      if (type == 'normal') {\n        // Keep track of the number of closed groups. This is required for\n        // parseDecimalEscape(). In case the string is parsed a second time the\n        // value already holds the total count and no incrementation is required.\n        if (firstIteration) {\n          closedCaptureCounter++;\n        }\n      }\n      return group;\n    }\n\n    function parseAnchor() {\n      // Anchor ::\n      //      ^\n      //      $\n      //      \\ b\n      //      \\ B\n      //      ( ? = Disjunction )\n      //      ( ? ! Disjunction )\n      var res, from = pos;\n\n      if (match('^')) {\n        return createAnchor('start', 1 /* rawLength */);\n      } else if (match('$')) {\n        return createAnchor('end', 1 /* rawLength */);\n      } else if (match('\\\\b')) {\n        return createAnchor('boundary', 2 /* rawLength */);\n      } else if (match('\\\\B')) {\n        return createAnchor('not-boundary', 2 /* rawLength */);\n      } else {\n        return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');\n      }\n    }\n\n    function parseQuantifier() {\n      // Quantifier ::\n      //      QuantifierPrefix\n      //      QuantifierPrefix ?\n      //\n      // QuantifierPrefix ::\n      //      *\n      //      +\n      //      ?\n      //      { DecimalDigits }\n      //      { DecimalDigits , }\n      //      { DecimalDigits , DecimalDigits }\n\n      var res, from = pos;\n      var quantifier;\n      var min, max;\n\n      if (match('*')) {\n        quantifier = createQuantifier(0);\n      }\n      else if (match('+')) {\n        quantifier = createQuantifier(1);\n      }\n      else if (match('?')) {\n        quantifier = createQuantifier(0, 1);\n      }\n      else if (res = matchReg(/^\\{([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, min, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        max = parseInt(res[2], 10);\n        if (min > max) {\n          bail('numbers out of order in {} quantifier', '', from, pos);\n        }\n        quantifier = createQuantifier(min, max, res.range[0], res.range[1]);\n      }\n\n      if (quantifier) {\n        if (match('?')) {\n          quantifier.greedy = false;\n          quantifier.range[1] += 1;\n        }\n      }\n\n      return quantifier;\n    }\n\n    function parseAtom() {\n      // Atom ::\n      //      PatternCharacter\n      //      .\n      //      \\ AtomEscape\n      //      CharacterClass\n      //      ( Disjunction )\n      //      ( ? : Disjunction )\n\n      var res;\n\n      // jviereck: allow ']', '}' here as well to be compatible with browser's\n      //   implementations: ']'.match(/]/);\n      // if (res = matchReg(/^[^^$\\\\.*+?()[\\]{}|]/)) {\n      if (res = matchReg(/^[^^$\\\\.*+?(){[|]/)) {\n        //      PatternCharacter\n        return createCharacter(res);\n      }\n      else if (match('.')) {\n        //      .\n        return createDot();\n      }\n      else if (match('\\\\')) {\n        //      \\ AtomEscape\n        res = parseAtomEscape();\n        if (!res) {\n          bail('atomEscape');\n        }\n        return res;\n      }\n      else if (res = parseCharacterClass()) {\n        return res;\n      }\n      else {\n        //      ( Disjunction )\n        //      ( ? : Disjunction )\n        return parseGroup('(?:', 'ignore', '(', 'normal');\n      }\n    }\n\n    function parseUnicodeSurrogatePairEscape(firstEscape) {\n      if (hasUnicodeFlag) {\n        var first, second;\n        if (firstEscape.kind == 'unicodeEscape' &&\n          (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF &&\n          current('\\\\') && next('u') ) {\n          var prevPos = pos;\n          pos++;\n          var secondEscape = parseClassEscape();\n          if (secondEscape.kind == 'unicodeEscape' &&\n            (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            firstEscape.range[1] = secondEscape.range[1];\n            firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n            firstEscape.type = 'value';\n            firstEscape.kind = 'unicodeCodePointEscape';\n            addRaw(firstEscape);\n          }\n          else {\n            pos = prevPos;\n          }\n        }\n      }\n      return firstEscape;\n    }\n\n    function parseClassEscape() {\n      return parseAtomEscape(true);\n    }\n\n    function parseAtomEscape(insideCharacterClass) {\n      // AtomEscape ::\n      //      DecimalEscape\n      //      CharacterEscape\n      //      CharacterClassEscape\n\n      var res, from = pos;\n\n      res = parseDecimalEscape();\n      if (res) {\n        return res;\n      }\n\n      // For ClassEscape\n      if (insideCharacterClass) {\n        if (match('b')) {\n          // 15.10.2.19\n          // The production ClassEscape :: b evaluates by returning the\n          // CharSet containing the one character <BS> (Unicode value 0008).\n          return createEscaped('singleEscape', 0x0008, '\\\\b');\n        } else if (match('B')) {\n          bail('\\\\B not possible inside of CharacterClass', '', from);\n        }\n      }\n\n      res = parseCharacterEscape();\n\n      return res;\n    }\n\n\n    function parseDecimalEscape() {\n      // DecimalEscape ::\n      //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n      //      CharacterClassEscape :: one of d D s S w W\n\n      var res, match;\n\n      if (res = matchReg(/^(?!0)\\d+/)) {\n        match = res[0];\n        var refIdx = parseInt(res[0], 10);\n        if (refIdx <= closedCaptureCounter) {\n          // If the number is smaller than the normal-groups found so\n          // far, then it is a reference...\n          return createReference(res[0]);\n        } else {\n          // ... otherwise it needs to be interpreted as a octal (if the\n          // number is in an octal format). If it is NOT octal format,\n          // then the slash is ignored and the number is matched later\n          // as normal characters.\n\n          // Recall the negative decision to decide if the input must be parsed\n          // a second time with the total normal-groups.\n          backrefDenied.push(refIdx);\n\n          // Reset the position again, as maybe only parts of the previous\n          // matched numbers are actual octal numbers. E.g. in '019' only\n          // the '01' should be matched.\n          incr(-res[0].length);\n          if (res = matchReg(/^[0-7]{1,3}/)) {\n            return createEscaped('octal', parseInt(res[0], 8), res[0], 1);\n          } else {\n            // If we end up here, we have a case like /\\91/. Then the\n            // first slash is to be ignored and the 9 & 1 to be treated\n            // like ordinary characters. Create a character for the\n            // first number only here - other number-characters\n            // (if available) will be matched later.\n            res = createCharacter(matchReg(/^[89]/));\n            return updateRawStart(res, res.range[0] - 1);\n          }\n        }\n      }\n      // Only allow octal numbers in the following. All matched numbers start\n      // with a zero (if the do not, the previous if-branch is executed).\n      // If the number is not octal format and starts with zero (e.g. `091`)\n      // then only the zeros `0` is treated here and the `91` are ordinary\n      // characters.\n      // Example:\n      //   /\\091/.exec('\\091')[0].length === 3\n      else if (res = matchReg(/^[0-7]{1,3}/)) {\n        match = res[0];\n        if (/^0{1,3}$/.test(match)) {\n          // If they are all zeros, then only take the first one.\n          return createEscaped('null', 0x0000, '0', match.length + 1);\n        } else {\n          return createEscaped('octal', parseInt(match, 8), match, 1);\n        }\n      } else if (res = matchReg(/^[dDsSwW]/)) {\n        return createCharacterClassEscape(res[0]);\n      }\n      return false;\n    }\n\n    function parseCharacterEscape() {\n      // CharacterEscape ::\n      //      ControlEscape\n      //      c ControlLetter\n      //      HexEscapeSequence\n      //      UnicodeEscapeSequence\n      //      IdentityEscape\n\n      var res;\n      if (res = matchReg(/^[fnrtv]/)) {\n        // ControlEscape\n        var codePoint = 0;\n        switch (res[0]) {\n          case 't': codePoint = 0x009; break;\n          case 'n': codePoint = 0x00A; break;\n          case 'v': codePoint = 0x00B; break;\n          case 'f': codePoint = 0x00C; break;\n          case 'r': codePoint = 0x00D; break;\n        }\n        return createEscaped('singleEscape', codePoint, '\\\\' + res[0]);\n      } else if (res = matchReg(/^c([a-zA-Z])/)) {\n        // c ControlLetter\n        return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);\n      } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {\n        // HexEscapeSequence\n        return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);\n      } else if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {\n        // UnicodeEscapeSequence\n        return parseUnicodeSurrogatePairEscape(\n          createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2)\n        );\n      } else if (hasUnicodeFlag && (res = matchReg(/^u\\{([0-9a-fA-F]+)\\}/))) {\n        // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)\n        return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);\n      } else {\n        // IdentityEscape\n        return parseIdentityEscape();\n      }\n    }\n\n    // Taken from the Esprima parser.\n    function isIdentifierPart(ch) {\n      // Generated by `tools/generate-identifier-regex.js`.\n      var NonAsciiIdentifierPart = new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]');\n\n      return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n        (ch >= 65 && ch <= 90) ||         // A..Z\n        (ch >= 97 && ch <= 122) ||        // a..z\n        (ch >= 48 && ch <= 57) ||         // 0..9\n        (ch === 92) ||                    // \\ (backslash)\n        ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    function parseIdentityEscape() {\n      // IdentityEscape ::\n      //      SourceCharacter but not IdentifierPart\n      //      <ZWJ>\n      //      <ZWNJ>\n\n      var ZWJ = '\\u200C';\n      var ZWNJ = '\\u200D';\n\n      var tmp;\n\n      if (!isIdentifierPart(lookahead())) {\n        tmp = incr();\n        return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);\n      }\n\n      if (match(ZWJ)) {\n        // <ZWJ>\n        return createEscaped('identifier', 0x200C, ZWJ);\n      } else if (match(ZWNJ)) {\n        // <ZWNJ>\n        return createEscaped('identifier', 0x200D, ZWNJ);\n      }\n\n      return null;\n    }\n\n    function parseCharacterClass() {\n      // CharacterClass ::\n      //      [ [lookahead ∉ {^}] ClassRanges ]\n      //      [ ^ ClassRanges ]\n\n      var res, from = pos;\n      if (res = matchReg(/^\\[\\^/)) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, true, from, pos);\n      } else if (match('[')) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, false, from, pos);\n      }\n\n      return null;\n    }\n\n    function parseClassRanges() {\n      // ClassRanges ::\n      //      [empty]\n      //      NonemptyClassRanges\n\n      var res;\n      if (current(']')) {\n        // Empty array means nothing insinde of the ClassRange.\n        return [];\n      } else {\n        res = parseNonemptyClassRanges();\n        if (!res) {\n          bail('nonEmptyClassRanges');\n        }\n        return res;\n      }\n    }\n\n    function parseHelperClassRanges(atom) {\n      var from, to, res;\n      if (current('-') && !next(']')) {\n        // ClassAtom - ClassAtom ClassRanges\n        skip('-');\n\n        res = parseClassAtom();\n        if (!res) {\n          bail('classAtom');\n        }\n        to = pos;\n        var classRanges = parseClassRanges();\n        if (!classRanges) {\n          bail('classRanges');\n        }\n        from = atom.range[0];\n        if (classRanges.type === 'empty') {\n          return [createClassRange(atom, res, from, to)];\n        }\n        return [createClassRange(atom, res, from, to)].concat(classRanges);\n      }\n\n      res = parseNonemptyClassRangesNoDash();\n      if (!res) {\n        bail('nonEmptyClassRangesNoDash');\n      }\n\n      return [atom].concat(res);\n    }\n\n    function parseNonemptyClassRanges() {\n      // NonemptyClassRanges ::\n      //      ClassAtom\n      //      ClassAtom NonemptyClassRangesNoDash\n      //      ClassAtom - ClassAtom ClassRanges\n\n      var atom = parseClassAtom();\n      if (!atom) {\n        bail('classAtom');\n      }\n\n      if (current(']')) {\n        // ClassAtom\n        return [atom];\n      }\n\n      // ClassAtom NonemptyClassRangesNoDash\n      // ClassAtom - ClassAtom ClassRanges\n      return parseHelperClassRanges(atom);\n    }\n\n    function parseNonemptyClassRangesNoDash() {\n      // NonemptyClassRangesNoDash ::\n      //      ClassAtom\n      //      ClassAtomNoDash NonemptyClassRangesNoDash\n      //      ClassAtomNoDash - ClassAtom ClassRanges\n\n      var res = parseClassAtom();\n      if (!res) {\n        bail('classAtom');\n      }\n      if (current(']')) {\n        //      ClassAtom\n        return res;\n      }\n\n      // ClassAtomNoDash NonemptyClassRangesNoDash\n      // ClassAtomNoDash - ClassAtom ClassRanges\n      return parseHelperClassRanges(res);\n    }\n\n    function parseClassAtom() {\n      // ClassAtom ::\n      //      -\n      //      ClassAtomNoDash\n      if (match('-')) {\n        return createCharacter('-');\n      } else {\n        return parseClassAtomNoDash();\n      }\n    }\n\n    function parseClassAtomNoDash() {\n      // ClassAtomNoDash ::\n      //      SourceCharacter but not one of \\ or ] or -\n      //      \\ ClassEscape\n\n      var res;\n      if (res = matchReg(/^[^\\\\\\]-]/)) {\n        return createCharacter(res[0]);\n      } else if (match('\\\\')) {\n        res = parseClassEscape();\n        if (!res) {\n          bail('classEscape');\n        }\n\n        return parseUnicodeSurrogatePairEscape(res);\n      }\n    }\n\n    function bail(message, details, from, to) {\n      from = from == null ? pos : from;\n      to = to == null ? from : to;\n\n      var contextStart = Math.max(0, from - 10);\n      var contextEnd = Math.min(to + 10, str.length);\n\n      // Output a bit of context and a line pointing to where our error is.\n      //\n      // We are assuming that there are no actual newlines in the content as this is a regular expression.\n      var context = '    ' + str.substring(contextStart, contextEnd);\n      var pointer = '    ' + new Array(from - contextStart + 1).join(' ') + '^';\n\n      throw SyntaxError(message + ' at position ' + from + (details ? ': ' + details : '') + '\\n' + context + '\\n' + pointer);\n    }\n\n    var backrefDenied = [];\n    var closedCaptureCounter = 0;\n    var firstIteration = true;\n    var hasUnicodeFlag = (flags || \"\").indexOf(\"u\") !== -1;\n    var pos = 0;\n\n    // Convert the input to a string and treat the empty string special.\n    str = String(str);\n    if (str === '') {\n      str = '(?:)';\n    }\n\n    var result = parseDisjunction();\n\n    if (result.range[1] !== str.length) {\n      bail('Could not parse entire input - got stuck', '', result.range[1]);\n    }\n\n    // The spec requires to interpret the `\\2` in `/\\2()()/` as backreference.\n    // As the parser collects the number of capture groups as the string is\n    // parsed it is impossible to make these decisions at the point when the\n    // `\\2` is handled. In case the local decision turns out to be wrong after\n    // the parsing has finished, the input string is parsed a second time with\n    // the total number of capture groups set.\n    //\n    // SEE: https://github.com/jviereck/regjsparser/issues/70\n    for (var i = 0; i < backrefDenied.length; i++) {\n      if (backrefDenied[i] <= closedCaptureCounter) {\n        // Parse the input a second time.\n        pos = 0;\n        firstIteration = false;\n        return parseDisjunction();\n      }\n    }\n\n    return result;\n  }\n\n  var regjsparser = {\n    parse: parse\n  };\n\n  if ( true && module.exports) {\n    module.exports = regjsparser;\n  } else {\n    window.regjsparser = regjsparser;\n  }\n\n}());\n\n\n//# sourceURL=webpack:///./node_modules/regexpu-core/node_modules/regjsparser/parser.js?")},"./node_modules/regexpu-core/rewrite-pattern.js":function(module,exports,__webpack_require__){eval("var generate = __webpack_require__(\"./node_modules/regjsgen/regjsgen.js\").generate;\nvar parse = __webpack_require__(\"./node_modules/regexpu-core/node_modules/regjsparser/parser.js\").parse;\nvar regenerate = __webpack_require__(\"./node_modules/regenerate/regenerate.js\");\nvar iuMappings = __webpack_require__(\"./node_modules/regexpu-core/data/iu-mappings.json\");\nvar ESCAPE_SETS = __webpack_require__(\"./node_modules/regexpu-core/data/character-class-escape-sets.js\");\n\nfunction getCharacterClassEscapeSet(character) {\n\tif (unicode) {\n\t\tif (ignoreCase) {\n\t\t\treturn ESCAPE_SETS.UNICODE_IGNORE_CASE[character];\n\t\t}\n\t\treturn ESCAPE_SETS.UNICODE[character];\n\t}\n\treturn ESCAPE_SETS.REGULAR[character];\n}\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nfunction has(object, property) {\n\treturn hasOwnProperty.call(object, property);\n}\n\n// Prepare a Regenerate set containing all code points, used for negative\n// character classes (if any).\nvar UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);\n// Without the `u` flag, the range stops at 0xFFFF.\n// https://mths.be/es6#sec-pattern-semantics\nvar BMP_SET = regenerate().addRange(0x0, 0xFFFF);\n\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./u`. https://mths.be/es6#sec-atom\nvar DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n\t.remove(\n\t\t// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n\t\t0x000A, // Line Feed <LF>\n\t\t0x000D, // Carriage Return <CR>\n\t\t0x2028, // Line Separator <LS>\n\t\t0x2029  // Paragraph Separator <PS>\n\t);\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./` (only BMP code points).\nvar DOT_SET = DOT_SET_UNICODE.clone()\n\t.intersection(BMP_SET);\n\n// Add a range of code points + any case-folded code points in that range to a\n// set.\nregenerate.prototype.iuAddRange = function(min, max) {\n\tvar $this = this;\n\tdo {\n\t\tvar folded = caseFold(min);\n\t\tif (folded) {\n\t\t\t$this.add(folded);\n\t\t}\n\t} while (++min <= max);\n\treturn $this;\n};\n\nfunction assign(target, source) {\n\tfor (var key in source) {\n\t\t// Note: `hasOwnProperty` is not needed here.\n\t\ttarget[key] = source[key];\n\t}\n}\n\nfunction update(item, pattern) {\n\t// TODO: Test if memoizing `pattern` here is worth the effort.\n\tif (!pattern) {\n\t\treturn;\n\t}\n\tvar tree = parse(pattern, '');\n\tswitch (tree.type) {\n\t\tcase 'characterClass':\n\t\tcase 'group':\n\t\tcase 'value':\n\t\t\t// No wrapping needed.\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Wrap the pattern in a non-capturing group.\n\t\t\ttree = wrap(tree, pattern);\n\t}\n\tassign(item, tree);\n}\n\nfunction wrap(tree, pattern) {\n\t// Wrap the pattern in a non-capturing group.\n\treturn {\n\t\t'type': 'group',\n\t\t'behavior': 'ignore',\n\t\t'body': [tree],\n\t\t'raw': '(?:' + pattern + ')'\n\t};\n}\n\nfunction caseFold(codePoint) {\n\treturn has(iuMappings, codePoint) ? iuMappings[codePoint] : false;\n}\n\nvar ignoreCase = false;\nvar unicode = false;\nfunction processCharacterClass(characterClassItem) {\n\tvar set = regenerate();\n\tvar body = characterClassItem.body.forEach(function(item) {\n\t\tswitch (item.type) {\n\t\t\tcase 'value':\n\t\t\t\tset.add(item.codePoint);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tvar folded = caseFold(item.codePoint);\n\t\t\t\t\tif (folded) {\n\t\t\t\t\t\tset.add(folded);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassRange':\n\t\t\t\tvar min = item.min.codePoint;\n\t\t\t\tvar max = item.max.codePoint;\n\t\t\t\tset.addRange(min, max);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tset.iuAddRange(min, max);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassEscape':\n\t\t\t\tset.add(getCharacterClassEscapeSet(item.value));\n\t\t\t\tbreak;\n\t\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t\t// reached. Code coverage tools should ignore it.\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t\t}\n\t});\n\tif (characterClassItem.negative) {\n\t\tset = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n\t}\n\tupdate(characterClassItem, set.toString());\n\treturn characterClassItem;\n}\n\nfunction processTerm(item) {\n\tswitch (item.type) {\n\t\tcase 'dot':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\t(unicode ? DOT_SET_UNICODE : DOT_SET).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'characterClass':\n\t\t\titem = processCharacterClass(item);\n\t\t\tbreak;\n\t\tcase 'characterClassEscape':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\tgetCharacterClassEscapeSet(item.value).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'alternative':\n\t\tcase 'disjunction':\n\t\tcase 'group':\n\t\tcase 'quantifier':\n\t\t\titem.body = item.body.map(processTerm);\n\t\t\tbreak;\n\t\tcase 'value':\n\t\t\tvar codePoint = item.codePoint;\n\t\t\tvar set = regenerate(codePoint);\n\t\t\tif (ignoreCase && unicode) {\n\t\t\t\tvar folded = caseFold(codePoint);\n\t\t\t\tif (folded) {\n\t\t\t\t\tset.add(folded);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate(item, set.toString());\n\t\t\tbreak;\n\t\tcase 'anchor':\n\t\tcase 'empty':\n\t\tcase 'group':\n\t\tcase 'reference':\n\t\t\t// Nothing to do here.\n\t\t\tbreak;\n\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t// reached. Code coverage tools should ignore it.\n\t\t/* istanbul ignore next */\n\t\tdefault:\n\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t}\n\treturn item;\n};\n\nmodule.exports = function(pattern, flags) {\n\tvar tree = parse(pattern, flags);\n\tignoreCase = flags ? flags.indexOf('i') > -1 : false;\n\tunicode = flags ? flags.indexOf('u') > -1 : false;\n\tassign(tree, processTerm(tree));\n\treturn generate(tree);\n};\n\n\n//# sourceURL=webpack:///./node_modules/regexpu-core/rewrite-pattern.js?")},"./node_modules/regjsgen/regjsgen.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * RegJSGen\n * Copyright 2014 Benjamin Tan <https://d10.github.io/>\n * Available under MIT license <http://d10.mit-license.org/>\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object` */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object */\n  var oldRoot = root;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /*! Based on https://mths.be/fromcodepoint v0.2.0 by @mathias */\n\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  function fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate;\n    var lowSurrogate;\n    var index = -1;\n    var length = arguments.length;\n    if (!length) {\n      return '';\n    }\n    var result = '';\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n      if (\n        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n        codePoint < 0 || // not a valid Unicode code point\n        codePoint > 0x10FFFF || // not a valid Unicode code point\n        floor(codePoint) != codePoint // not an integer\n      ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n      if (codePoint <= 0xFFFF) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xD800;\n        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n      if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n    return result;\n  }\n\n  function assertType(type, expected) {\n    if (expected.indexOf('|') == -1) {\n      if (type == expected) {\n        return;\n      }\n\n      throw Error('Invalid node type: ' + type);\n    }\n\n    expected = assertType.hasOwnProperty(expected)\n      ? assertType[expected]\n      : (assertType[expected] = RegExp('^(?:' + expected + ')$'));\n\n    if (expected.test(type)) {\n      return;\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generate(node) {\n    var type = node.type;\n\n    if (generate.hasOwnProperty(type) && typeof generate[type] == 'function') {\n      return generate[type](node);\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generateAlternative(node) {\n    assertType(node.type, 'alternative');\n\n    var terms = node.body,\n        length = terms ? terms.length : 0;\n\n    if (length == 1) {\n      return generateTerm(terms[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        result += generateTerm(terms[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateAnchor(node) {\n    assertType(node.type, 'anchor');\n\n    switch (node.kind) {\n      case 'start':\n        return '^';\n      case 'end':\n        return '$';\n      case 'boundary':\n        return '\\\\b';\n      case 'not-boundary':\n        return '\\\\B';\n      default:\n        throw Error('Invalid assertion');\n    }\n  }\n\n  function generateAtom(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n\n    return generate(node);\n  }\n\n  function generateCharacterClass(node) {\n    assertType(node.type, 'characterClass');\n\n    var classRanges = node.body,\n        length = classRanges ? classRanges.length : 0;\n\n    var i = -1,\n        result = '[';\n\n    if (node.negative) {\n      result += '^';\n    }\n\n    while (++i < length) {\n      result += generateClassAtom(classRanges[i]);\n    }\n\n    result += ']';\n\n    return result;\n  }\n\n  function generateCharacterClassEscape(node) {\n    assertType(node.type, 'characterClassEscape');\n\n    return '\\\\' + node.value;\n  }\n\n  function generateCharacterClassRange(node) {\n    assertType(node.type, 'characterClassRange');\n\n    var min = node.min,\n        max = node.max;\n\n    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n      throw Error('Invalid character class range');\n    }\n\n    return generateClassAtom(min) + '-' + generateClassAtom(max);\n  }\n\n  function generateClassAtom(node) {\n    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n\n    return generate(node);\n  }\n\n  function generateDisjunction(node) {\n    assertType(node.type, 'disjunction');\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 0) {\n      throw Error('No body');\n    } else if (length == 1) {\n      return generate(body[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        if (i != 0) {\n          result += '|';\n        }\n        result += generate(body[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateDot(node) {\n    assertType(node.type, 'dot');\n\n    return '.';\n  }\n\n  function generateGroup(node) {\n    assertType(node.type, 'group');\n\n    var result = '(';\n\n    switch (node.behavior) {\n      case 'normal':\n        break;\n      case 'ignore':\n        result += '?:';\n        break;\n      case 'lookahead':\n        result += '?=';\n        break;\n      case 'negativeLookahead':\n        result += '?!';\n        break;\n      default:\n        throw Error('Invalid behaviour: ' + node.behaviour);\n    }\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 1) {\n      result += generate(body[0]);\n    } else {\n      var i = -1;\n\n      while (++i < length) {\n        result += generate(body[i]);\n      }\n    }\n\n    result += ')';\n\n    return result;\n  }\n\n  function generateQuantifier(node) {\n    assertType(node.type, 'quantifier');\n\n    var quantifier = '',\n        min = node.min,\n        max = node.max;\n\n    switch (max) {\n      case undefined:\n      case null:\n        switch (min) {\n          case 0:\n            quantifier = '*'\n            break;\n          case 1:\n            quantifier = '+';\n            break;\n          default:\n            quantifier = '{' + min + ',}';\n            break;\n        }\n        break;\n      default:\n        if (min == max) {\n          quantifier = '{' + min + '}';\n        }\n        else if (min == 0 && max == 1) {\n          quantifier = '?';\n        } else {\n          quantifier = '{' + min + ',' + max + '}';\n        }\n        break;\n    }\n\n    if (!node.greedy) {\n      quantifier += '?';\n    }\n\n    return generateAtom(node.body[0]) + quantifier;\n  }\n\n  function generateReference(node) {\n    assertType(node.type, 'reference');\n\n    return '\\\\' + node.matchIndex;\n  }\n\n  function generateTerm(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value');\n\n    return generate(node);\n  }\n\n  function generateValue(node) {\n    assertType(node.type, 'value');\n\n    var kind = node.kind,\n        codePoint = node.codePoint;\n\n    switch (kind) {\n      case 'controlLetter':\n        return '\\\\c' + fromCodePoint(codePoint + 64);\n      case 'hexadecimalEscape':\n        return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n      case 'identifier':\n        return '\\\\' + fromCodePoint(codePoint);\n      case 'null':\n        return '\\\\' + codePoint;\n      case 'octal':\n        return '\\\\' + codePoint.toString(8);\n      case 'singleEscape':\n        switch (codePoint) {\n          case 0x0008:\n            return '\\\\b';\n          case 0x009:\n            return '\\\\t';\n          case 0x00A:\n            return '\\\\n';\n          case 0x00B:\n            return '\\\\v';\n          case 0x00C:\n            return '\\\\f';\n          case 0x00D:\n            return '\\\\r';\n          default:\n            throw Error('Invalid codepoint: ' + codePoint);\n        }\n      case 'symbol':\n        return fromCodePoint(codePoint);\n      case 'unicodeEscape':\n        return '\\\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n      case 'unicodeCodePointEscape':\n        return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n      default:\n        throw Error('Unsupported node kind: ' + kind);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  generate.alternative = generateAlternative;\n  generate.anchor = generateAnchor;\n  generate.characterClass = generateCharacterClass;\n  generate.characterClassEscape = generateCharacterClassEscape;\n  generate.characterClassRange = generateCharacterClassRange;\n  generate.disjunction = generateDisjunction;\n  generate.dot = generateDot;\n  generate.group = generateGroup;\n  generate.quantifier = generateQuantifier;\n  generate.reference = generateReference;\n  generate.value = generateValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // export regjsgen\n  // some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (true) {\n    // define as an anonymous module so, through path mapping, it can be aliased\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return {\n        'generate': generate\n      };\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else {}\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(\"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/regjsgen/regjsgen.js?")},"./node_modules/slash/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function (str) {\n\tvar isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(str);\n\tvar hasNonAscii = /[^\\x00-\\x80]+/.test(str);\n\n\tif (isExtendedLengthPath || hasNonAscii) {\n\t\treturn str;\n\t}\n\n\treturn str.replace(/\\\\/g, '/');\n};\n\n\n//# sourceURL=webpack:///./node_modules/slash/index.js?")},"./node_modules/strip-ansi/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar ansiRegex = __webpack_require__(\"./node_modules/ansi-regex/index.js\")();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n//# sourceURL=webpack:///./node_modules/strip-ansi/index.js?")},"./node_modules/trim-right/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function (str) {\n\tvar tail = str.length;\n\n\twhile (/[\\s\\uFEFF\\u00A0]/.test(str[tail - 1])) {\n\t\ttail--;\n\t}\n\n\treturn str.slice(0, tail);\n};\n\n\n//# sourceURL=webpack:///./node_modules/trim-right/index.js?")},"./node_modules/tty-browserify/index.js":function(module,exports){eval("exports.isatty = function () { return false; };\n\nfunction ReadStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\nexports.ReadStream = ReadStream;\n\nfunction WriteStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\nexports.WriteStream = WriteStream;\n\n\n//# sourceURL=webpack:///./node_modules/tty-browserify/index.js?")},"./node_modules/util/node_modules/inherits/inherits_browser.js":function(module,exports){eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js?")},"./node_modules/util/support/isBufferBrowser.js":function(module,exports){eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?")},"./node_modules/util/util.js":function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(\"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(\"./node_modules/util/node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?")},"./src/parsers/transpilers/babel.js":function(module,exports,__webpack_require__){"use strict";eval('\n\nvar _interopRequireDefault = __webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");\n\nvar _interopRequireWildcard = __webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireWildcard.js");\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.default = transpile;\n\nvar babel = _interopRequireWildcard(__webpack_require__("./node_modules/babel-core/index.js"));\n\nvar _babelPresetEs = _interopRequireDefault(__webpack_require__("./node_modules/babel-preset-es2015/lib/index.js"));\n\nvar _babelPresetStage = _interopRequireDefault(__webpack_require__("./node_modules/babel-preset-stage-0/lib/index.js"));\n\nvar _babelPluginTransformFlowStripTypes = _interopRequireDefault(__webpack_require__("./node_modules/babel-plugin-transform-flow-strip-types/lib/index.js"));\n\nvar _protectFromLoops = _interopRequireDefault(__webpack_require__("./src/parsers/utils/protectFromLoops.js"));\n\nvar options = {\n  presets: [_babelPresetEs.default, _babelPresetStage.default],\n  plugins: [_babelPluginTransformFlowStripTypes.default],\n  ast: false,\n  babelrc: false,\n  highlightCode: false\n};\n\nfunction transpile(code) {\n  var es5Code = babel.transform(code, options).code;\n  es5Code = (0, _protectFromLoops.default)(es5Code);\n  return es5Code;\n}\n\n//# sourceURL=webpack:///./src/parsers/transpilers/babel.js?')},"./src/parsers/utils/protectFromLoops.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _interopRequireWildcard = __webpack_require__(\"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = protect;\n\nvar _haltingProblem = _interopRequireWildcard(__webpack_require__(\"./node_modules/halting-problem/index.js\"));\n\nfunction protect(jsCode) {\n  // assert that there are no obvious infinite loops\n  (0, _haltingProblem.default)(jsCode); // guard against non-obvious loops with a timeout of 5 seconds\n\n  var start = Date.now();\n  jsCode = (0, _haltingProblem.loopProtect)(jsCode, [// this function gets called in all possible loops\n  // it gets passed the line number as its only argument\n  '(function (line) {', 'if (Date.now() > ' + (start + 5000) + ') {', '  throw new Error(\"Infinite loop detected on line \" + line);', '}', '})'].join(''));\n  return jsCode;\n}\n\n//# sourceURL=webpack:///./src/parsers/utils/protectFromLoops.js?")}}]);